	.file	"main.cpp"
	.text
Ltext0:
	.section	.text$_ZSt3absf,"x"
	.linkonce discard
	.globl	__ZSt3absf
	.def	__ZSt3absf;	.scl	2;	.type	32;	.endef
__ZSt3absf:
LFB116:
	.file 1 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/std_abs.h"
	.loc 1 75 3
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 1 75 31
	flds	8(%ebp)
	fabs
	.loc 1 75 34
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE116:
	.section .rdata,"dr"
__ZStL19piecewise_construct:
	.space 1
	.text
	.def	__ZL9vsnprintfPcjPKcS_;	.scl	3;	.type	32;	.endef
__ZL9vsnprintfPcjPKcS_:
LFB1008:
	.file 2 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/stdio.h"
	.loc 2 400 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 2 401 27
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	___mingw_vsnprintf
	.loc 2 402 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1008:
	.section .rdata,"dr"
LC1:
	.ascii "%d\0"
	.section	.text$_ZNSt7__cxx119to_stringEi,"x"
	.linkonce discard
	.globl	__ZNSt7__cxx119to_stringEi
	.def	__ZNSt7__cxx119to_stringEi;	.scl	2;	.type	32;	.endef
__ZNSt7__cxx119to_stringEi:
LFB1427:
	.file 3 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/basic_string.h"
	.loc 3 6415 3
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 3 6416 20
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	$LC1, 12(%esp)
	movl	$16, 8(%esp)
	movl	$__ZL9vsnprintfPcjPKcS_, 4(%esp)
	movl	%eax, (%esp)
	call	__ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_PcEjSB_z
	.loc 3 6416 23
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1427:
	.section .rdata,"dr"
LC2:
	.ascii "%f\0"
	.section	.text$_ZNSt7__cxx119to_stringEf,"x"
	.linkonce discard
	.globl	__ZNSt7__cxx119to_stringEf
	.def	__ZNSt7__cxx119to_stringEf;	.scl	2;	.type	32;	.endef
__ZNSt7__cxx119to_stringEf:
LFB1433:
	.loc 3 6449 3
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 3 6450 15
	movl	$58, -12(%ebp)
	.loc 3 6453 20
	flds	12(%ebp)
	movl	8(%ebp), %eax
	fstpl	16(%esp)
	movl	$LC2, 12(%esp)
	movl	$58, 8(%esp)
	movl	$__ZL9vsnprintfPcjPKcS_, 4(%esp)
	movl	%eax, (%esp)
	call	__ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_PcEjSB_z
	.loc 3 6454 3
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1433:
	.section	.text$_ZSt4acosf,"x"
	.linkonce discard
	.globl	__ZSt4acosf
	.def	__ZSt4acosf;	.scl	2;	.type	32;	.endef
__ZSt4acosf:
LFB1520:
	.file 4 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/cmath"
	.loc 4 88 3
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 4 88 27
	flds	8(%ebp)
	fstps	(%esp)
	call	_acosf
	.loc 4 88 34
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1520:
	.section	.text$_ZSt4ceilf,"x"
	.linkonce discard
	.globl	__ZSt4ceilf
	.def	__ZSt4ceilf;	.scl	2;	.type	32;	.endef
__ZSt4ceilf:
LFB1532:
	.loc 4 166 3
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$4, %esp
	.loc 4 166 27
	flds	8(%ebp)
	fnstcw	-2(%ebp)
	movzwl	-2(%ebp), %eax
	andb	$-13, %ah
	orb	$8, %ah
	movw	%ax, -4(%ebp)
	fldcw	-4(%ebp)
	frndint
	fldcw	-2(%ebp)
	.loc 4 166 34
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1532:
	.section	.text$_ZSt3cosf,"x"
	.linkonce discard
	.globl	__ZSt3cosf
	.def	__ZSt3cosf;	.scl	2;	.type	32;	.endef
__ZSt3cosf:
LFB1535:
	.loc 4 185 3
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 4 185 26
	flds	8(%ebp)
	fstps	(%esp)
	call	_cosf
	.loc 4 185 33
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1535:
	.section	.text$_ZSt4fabsf,"x"
	.linkonce discard
	.globl	__ZSt4fabsf
	.def	__ZSt4fabsf;	.scl	2;	.type	32;	.endef
__ZSt4fabsf:
LFB1544:
	.loc 4 242 3
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 4 242 31
	flds	8(%ebp)
	fabs
	.loc 4 242 34
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1544:
	.section	.text$_ZSt5floorf,"x"
	.linkonce discard
	.globl	__ZSt5floorf
	.def	__ZSt5floorf;	.scl	2;	.type	32;	.endef
__ZSt5floorf:
LFB1547:
	.loc 4 261 3
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$4, %esp
	.loc 4 261 28
	flds	8(%ebp)
	fnstcw	-2(%ebp)
	movzwl	-2(%ebp), %eax
	andb	$-13, %ah
	orb	$4, %ah
	movw	%ax, -4(%ebp)
	fldcw	-4(%ebp)
	frndint
	fldcw	-2(%ebp)
	.loc 4 261 35
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1547:
	.section	.text$_ZSt4fmodff,"x"
	.linkonce discard
	.globl	__ZSt4fmodff
	.def	__ZSt4fmodff;	.scl	2;	.type	32;	.endef
__ZSt4fmodff:
LFB1550:
	.loc 4 280 3
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 4 280 27
	flds	12(%ebp)
	fstps	4(%esp)
	flds	8(%ebp)
	fstps	(%esp)
	call	_fmodf
	.loc 4 280 39
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1550:
	.section	.text$_ZSt5frexpfPi,"x"
	.linkonce discard
	.globl	__ZSt5frexpfPi
	.def	__ZSt5frexpfPi;	.scl	2;	.type	32;	.endef
__ZSt5frexpfPi:
LFB1553:
	.loc 4 301 3
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 4 301 28
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	flds	8(%ebp)
	fstps	(%esp)
	call	_frexpf
	.loc 4 301 42
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1553:
	.section	.text$_ZSt5ldexpfi,"x"
	.linkonce discard
	.globl	__ZSt5ldexpfi
	.def	__ZSt5ldexpfi;	.scl	2;	.type	32;	.endef
__ZSt5ldexpfi:
LFB1556:
	.loc 4 320 3
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 4 320 28
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	flds	8(%ebp)
	fstps	(%esp)
	call	_ldexpf
	.loc 4 320 42
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1556:
	.section	.text$_ZSt3powff,"x"
	.linkonce discard
	.globl	__ZSt3powff
	.def	__ZSt3powff;	.scl	2;	.type	32;	.endef
__ZSt3powff:
LFB1567:
	.loc 4 389 3
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 4 389 26
	flds	12(%ebp)
	fstps	4(%esp)
	flds	8(%ebp)
	fstps	(%esp)
	call	_powf
	.loc 4 389 38
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1567:
	.section	.text$_ZSt4sqrtf,"x"
	.linkonce discard
	.globl	__ZSt4sqrtf
	.def	__ZSt4sqrtf;	.scl	2;	.type	32;	.endef
__ZSt4sqrtf:
LFB1576:
	.loc 4 464 3
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 4 464 27
	flds	8(%ebp)
	fstps	(%esp)
	call	_sqrtf
	.loc 4 464 34
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1576:
	.globl	_stbi_write_png_compression_level
	.data
	.align 4
_stbi_write_png_compression_level:
	.long	8
	.globl	_stbi_write_tga_with_rle
	.align 4
_stbi_write_tga_with_rle:
	.long	1
	.globl	_stbi_write_force_png_filter
	.align 4
_stbi_write_force_png_filter:
	.long	-1
.lcomm __ZL30stbi__flip_vertically_on_write,4,4
	.text
	.globl	_stbi_flip_vertically_on_write
	.def	_stbi_flip_vertically_on_write;	.scl	2;	.type	32;	.endef
_stbi_flip_vertically_on_write:
LFB1735:
	.file 5 "stb_image_write.h"
	.loc 5 262 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 5 263 35
	movl	8(%ebp), %eax
	movl	%eax, __ZL30stbi__flip_vertically_on_write
	.loc 5 264 1
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1735:
	.def	__ZL27stbi__start_write_callbacksP19stbi__write_contextPFvPvS1_iES1_;	.scl	3;	.type	32;	.endef
__ZL27stbi__start_write_callbacksP19stbi__write_contextPFvPvS1_iES1_:
LFB1736:
	.loc 5 276 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 5 277 15
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, (%eax)
	.loc 5 278 15
	movl	8(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 4(%eax)
	.loc 5 279 1
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1736:
	.def	__ZL17stbi__stdio_writePvS_i;	.scl	3;	.type	32;	.endef
__ZL17stbi__stdio_writePvS_i:
LFB1737:
	.loc 5 284 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 5 285 10
	movl	16(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$1, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	.loc 5 286 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1737:
	.def	__ZL12stbiw__fopenPKcS0_;	.scl	3;	.type	32;	.endef
__ZL12stbiw__fopenPKcS0_:
LFB1738:
	.loc 5 304 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 5 326 13
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_fopen
	movl	%eax, -12(%ebp)
	.loc 5 328 11
	movl	-12(%ebp), %eax
	.loc 5 329 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1738:
	.section .rdata,"dr"
LC3:
	.ascii "wb\0"
	.text
	.def	__ZL22stbi__start_write_fileP19stbi__write_contextPKc;	.scl	3;	.type	32;	.endef
__ZL22stbi__start_write_fileP19stbi__write_contextPKc:
LFB1739:
	.loc 5 332 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 5 333 26
	movl	$LC3, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbiw__fopenPKcS0_
	movl	%eax, -12(%ebp)
	.loc 5 334 31
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$__ZL17stbi__stdio_writePvS_i, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL27stbi__start_write_callbacksP19stbi__write_contextPFvPvS1_iES1_
	.loc 5 335 13
	cmpl	$0, -12(%ebp)
	setne	%al
	.loc 5 335 16
	movzbl	%al, %eax
	.loc 5 336 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1739:
	.def	__ZL20stbi__end_write_fileP19stbi__write_context;	.scl	3;	.type	32;	.endef
__ZL20stbi__end_write_fileP19stbi__write_context:
LFB1740:
	.loc 5 339 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 5 340 22
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 5 340 10
	movl	%eax, (%esp)
	call	_fclose
	.loc 5 341 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1740:
	.section .rdata,"dr"
LC4:
	.ascii "stb_image_write.h\0"
LC5:
	.ascii "0\0"
	.text
	.def	__ZL14stbiw__writefvP19stbi__write_contextPKcPc;	.scl	3;	.type	32;	.endef
__ZL14stbiw__writefvP19stbi__write_contextPKcPc:
LFB1741:
	.loc 5 349 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
L46:
	.loc 5 350 11
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 5 350 12
	testb	%al, %al
	je	L37
LBB2:
LBB3:
	.loc 5 351 19
	movl	12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, 12(%ebp)
	.loc 5 351 15
	movzbl	(%eax), %eax
	movsbl	%al, %eax
	cmpl	$49, %eax
	je	L39
	cmpl	$49, %eax
	jg	L40
	cmpl	$32, %eax
	je	L47
	jmp	L42
L40:
	cmpl	$50, %eax
	je	L43
	cmpl	$52, %eax
	je	L44
	jmp	L42
L39:
LBB4:
LBB5:
	.loc 5 353 40
	movl	16(%ebp), %eax
	leal	4(%eax), %edx
	movl	%edx, 16(%ebp)
	movl	(%eax), %eax
	movb	%al, -9(%ebp)
	.loc 5 354 25
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 354 29
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$1, 8(%esp)
	leal	-9(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL0:
	.loc 5 355 22
	nop
	jmp	L45
L43:
LBE5:
LBB6:
	.loc 5 356 30
	movl	16(%ebp), %eax
	leal	4(%eax), %edx
	movl	%edx, 16(%ebp)
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 5 358 27
	movl	-16(%ebp), %eax
	movb	%al, -18(%ebp)
	.loc 5 359 29
	movl	-16(%ebp), %eax
	sarl	$8, %eax
	.loc 5 359 27
	movb	%al, -17(%ebp)
	.loc 5 360 25
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 360 29
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$2, 8(%esp)
	leal	-18(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL1:
	.loc 5 361 22
	nop
	jmp	L45
L44:
LBE6:
LBB7:
	.loc 5 362 39
	movl	16(%ebp), %eax
	leal	4(%eax), %edx
	movl	%edx, 16(%ebp)
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 5 364 26
	movl	-24(%ebp), %eax
	movb	%al, -28(%ebp)
	.loc 5 365 27
	movl	-24(%ebp), %eax
	shrl	$8, %eax
	.loc 5 365 26
	movb	%al, -27(%ebp)
	.loc 5 366 27
	movl	-24(%ebp), %eax
	shrl	$16, %eax
	.loc 5 366 26
	movb	%al, -26(%ebp)
	.loc 5 367 27
	movl	-24(%ebp), %eax
	shrl	$24, %eax
	.loc 5 367 26
	movb	%al, -25(%ebp)
	.loc 5 368 25
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 368 29
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$4, 8(%esp)
	leal	-28(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL2:
	.loc 5 369 22
	nop
	jmp	L45
L42:
LBE7:
	.loc 5 371 13
	movl	$371, 8(%esp)
	movl	$LC4, 4(%esp)
	movl	$LC5, (%esp)
	call	__assert
	.loc 5 372 13
	jmp	L37
L47:
	.loc 5 352 20
	nop
L45:
LBE4:
LBE3:
LBE2:
	.loc 5 350 4 discriminator 1
	jmp	L46
L37:
	.loc 5 375 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1741:
	.def	__ZL13stbiw__writefP19stbi__write_contextPKcz;	.scl	3;	.type	32;	.endef
__ZL13stbiw__writefP19stbi__write_contextPKcz:
LFB1742:
	.loc 5 378 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 5 380 4
	leal	16(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 5 381 18
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbiw__writefvP19stbi__write_contextPKcPc
	.loc 5 383 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1742:
	.def	__ZL18stbiw__write_flushP19stbi__write_context;	.scl	3;	.type	32;	.endef
__ZL18stbiw__write_flushP19stbi__write_context:
LFB1743:
	.loc 5 386 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$20, %esp
	.cfi_offset 3, -12
	.loc 5 387 11
	movl	8(%ebp), %eax
	movl	72(%eax), %eax
	.loc 5 387 4
	testl	%eax, %eax
	je	L51
	.loc 5 388 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 388 14
	movl	8(%ebp), %edx
	movl	72(%edx), %ecx
	.loc 5 388 27
	movl	8(%ebp), %edx
	leal	8(%edx), %ebx
	.loc 5 388 14
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	%ecx, 8(%esp)
	movl	%ebx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL3:
	.loc 5 389 19
	movl	8(%ebp), %eax
	movl	$0, 72(%eax)
L51:
	.loc 5 391 1
	nop
	addl	$20, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1743:
	.def	__ZL11stbiw__putcP19stbi__write_contexth;	.scl	3;	.type	32;	.endef
__ZL11stbiw__putcP19stbi__write_contexth:
LFB1744:
	.loc 5 394 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	movl	12(%ebp), %eax
	movb	%al, -12(%ebp)
	.loc 5 395 7
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 395 11
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$1, 8(%esp)
	leal	-12(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL4:
	.loc 5 396 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1744:
	.def	__ZL13stbiw__write1P19stbi__write_contexth;	.scl	3;	.type	32;	.endef
__ZL13stbiw__write1P19stbi__write_contexth:
LFB1745:
	.loc 5 399 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	movl	12(%ebp), %eax
	movb	%al, -12(%ebp)
	.loc 5 400 11
	movl	8(%ebp), %eax
	movl	72(%eax), %eax
	.loc 5 400 20
	addl	$1, %eax
	.loc 5 400 4
	cmpl	$64, %eax
	jbe	L54
	.loc 5 401 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbiw__write_flushP19stbi__write_context
L54:
	.loc 5 402 17
	movl	8(%ebp), %eax
	movl	72(%eax), %eax
	.loc 5 402 25
	leal	1(%eax), %ecx
	movl	8(%ebp), %edx
	movl	%ecx, 72(%edx)
	.loc 5 402 29
	movl	8(%ebp), %edx
	movzbl	-12(%ebp), %ecx
	movb	%cl, 8(%edx,%eax)
	.loc 5 403 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1745:
	.def	__ZL13stbiw__write3P19stbi__write_contexthhh;	.scl	3;	.type	32;	.endef
__ZL13stbiw__write3P19stbi__write_contexthhh:
LFB1746:
	.loc 5 406 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	movl	12(%ebp), %ecx
	movl	16(%ebp), %edx
	movl	20(%ebp), %eax
	movb	%cl, -28(%ebp)
	movb	%dl, -32(%ebp)
	movb	%al, -36(%ebp)
	.loc 5 408 11
	movl	8(%ebp), %eax
	movl	72(%eax), %eax
	.loc 5 408 20
	addl	$3, %eax
	.loc 5 408 4
	cmpl	$64, %eax
	jbe	L56
	.loc 5 409 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbiw__write_flushP19stbi__write_context
L56:
	.loc 5 410 6
	movl	8(%ebp), %eax
	movl	72(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 5 411 19
	movl	-12(%ebp), %eax
	leal	3(%eax), %edx
	.loc 5 411 16
	movl	8(%ebp), %eax
	movl	%edx, 72(%eax)
	.loc 5 412 19
	movl	8(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	leal	8(%eax), %edx
	movzbl	-28(%ebp), %eax
	movb	%al, (%edx)
	.loc 5 413 15
	movl	-12(%ebp), %eax
	leal	1(%eax), %ecx
	.loc 5 413 19
	movl	8(%ebp), %eax
	movzbl	-32(%ebp), %edx
	movb	%dl, 8(%eax,%ecx)
	.loc 5 414 15
	movl	-12(%ebp), %eax
	leal	2(%eax), %ecx
	.loc 5 414 19
	movl	8(%ebp), %eax
	movzbl	-36(%ebp), %edx
	movb	%dl, 8(%eax,%ecx)
	.loc 5 415 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1746:
	.def	__ZL18stbiw__write_pixelP19stbi__write_contextiiiiPh;	.scl	3;	.type	32;	.endef
__ZL18stbiw__write_pixelP19stbi__write_contextiiiiPh:
LFB1747:
	.loc 5 418 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 5 419 18
	movb	$-1, -15(%ebp)
	movb	$0, -14(%ebp)
	movb	$-1, -13(%ebp)
	.loc 5 422 4
	cmpl	$0, 20(%ebp)
	jns	L58
	.loc 5 423 34
	movl	16(%ebp), %eax
	leal	-1(%eax), %edx
	movl	28(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 423 20
	movzbl	%al, %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbiw__write1P19stbi__write_contexth
L58:
	cmpl	$3, 16(%ebp)
	je	L59
	cmpl	$3, 16(%ebp)
	jg	L60
	cmpl	$0, 16(%ebp)
	jle	L61
	jmp	L69
L60:
	cmpl	$4, 16(%ebp)
	je	L63
	jmp	L61
L69:
	.loc 5 428 10
	cmpl	$0, 24(%ebp)
	je	L64
	.loc 5 429 45
	movl	28(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 5 429 26
	movzbl	%al, %ecx
	.loc 5 429 39
	movl	28(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 5 429 26
	movzbl	%al, %edx
	.loc 5 429 33
	movl	28(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 5 429 26
	movzbl	%al, %eax
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbiw__write3P19stbi__write_contexthhh
	.loc 5 432 10
	jmp	L61
L64:
	.loc 5 431 33
	movl	28(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 5 431 26
	movzbl	%al, %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbiw__write1P19stbi__write_contexth
	.loc 5 432 10
	jmp	L61
L63:
	.loc 5 434 10
	cmpl	$0, 20(%ebp)
	jne	L59
	.loc 5 436 20
	movl	$0, -12(%ebp)
L67:
	.loc 5 436 27 discriminator 3
	cmpl	$2, -12(%ebp)
	jg	L66
	.loc 5 437 28 discriminator 2
	leal	-15(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ebx
	.loc 5 437 37 discriminator 2
	movl	-12(%ebp), %edx
	movl	28(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 5 437 45 discriminator 2
	leal	-15(%ebp), %ecx
	movl	-12(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 5 437 39 discriminator 2
	subl	%eax, %edx
	.loc 5 437 53 discriminator 2
	movl	28(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 5 437 48 discriminator 2
	movl	%edx, %ecx
	imull	%eax, %ecx
	.loc 5 437 56 discriminator 2
	movl	$-2139062143, %edx
	movl	%ecx, %eax
	imull	%edx
	leal	(%edx,%ecx), %eax
	sarl	$7, %eax
	movl	%eax, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 5 437 30 discriminator 2
	leal	(%ebx,%eax), %edx
	.loc 5 437 22 discriminator 2
	leal	-18(%ebp), %ecx
	movl	-12(%ebp), %eax
	addl	%ecx, %eax
	movb	%dl, (%eax)
	.loc 5 436 13 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L67
L66:
	.loc 5 438 59
	movl	12(%ebp), %eax
	addl	$1, %eax
	.loc 5 438 68
	movzbl	-18(%ebp,%eax), %eax
	.loc 5 438 26
	movzbl	%al, %ecx
	.loc 5 438 51
	movzbl	-17(%ebp), %eax
	.loc 5 438 26
	movzbl	%al, %edx
	.loc 5 438 35
	movl	$1, %eax
	subl	12(%ebp), %eax
	.loc 5 438 44
	movzbl	-18(%ebp,%eax), %eax
	.loc 5 438 26
	movzbl	%al, %eax
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbiw__write3P19stbi__write_contexthhh
	.loc 5 439 13
	jmp	L61
L59:
	.loc 5 443 53
	movl	12(%ebp), %eax
	addl	$1, %eax
	movl	%eax, %edx
	.loc 5 443 62
	movl	28(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 443 23
	movzbl	%al, %ecx
	.loc 5 443 46
	movl	28(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	.loc 5 443 23
	movzbl	%al, %edx
	.loc 5 443 31
	movl	$1, %eax
	subl	12(%ebp), %eax
	movl	%eax, %ebx
	.loc 5 443 40
	movl	28(%ebp), %eax
	addl	%ebx, %eax
	movzbl	(%eax), %eax
	.loc 5 443 23
	movzbl	%al, %eax
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbiw__write3P19stbi__write_contexthhh
	.loc 5 444 10
	nop
L61:
	.loc 5 446 4
	cmpl	$0, 20(%ebp)
	jle	L70
	.loc 5 447 34
	movl	16(%ebp), %eax
	leal	-1(%eax), %edx
	movl	28(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 447 20
	movzbl	%al, %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbiw__write1P19stbi__write_contexth
L70:
	.loc 5 448 1
	nop
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1747:
	.def	__ZL19stbiw__write_pixelsP19stbi__write_contextiiiiiPviii;	.scl	3;	.type	32;	.endef
__ZL19stbiw__write_pixelsP19stbi__write_contextiiiiiPviii:
LFB1748:
	.loc 5 451 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 5 452 17
	movl	$0, -28(%ebp)
	.loc 5 455 4
	cmpl	$0, 24(%ebp)
	jle	L81
	.loc 5 458 38
	movl	__ZL30stbi__flip_vertically_on_write, %eax
	.loc 5 458 4
	testl	%eax, %eax
	je	L74
	.loc 5 459 12
	negl	16(%ebp)
L74:
	.loc 5 461 4
	cmpl	$0, 16(%ebp)
	jns	L75
	.loc 5 462 13
	movl	$-1, -20(%ebp)
	.loc 5 462 21
	movl	24(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -16(%ebp)
	jmp	L80
L75:
	.loc 5 464 13
	movl	24(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 5 464 21
	movl	$0, -16(%ebp)
L80:
LBB8:
	.loc 5 467 13 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	-20(%ebp), %eax
	je	L71
LBB9:
LBB10:
	.loc 5 468 13
	movl	$0, -12(%ebp)
L79:
	.loc 5 468 19 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	20(%ebp), %eax
	jge	L78
LBB11:
	.loc 5 469 56
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 5 469 58
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 5 469 61
	imull	28(%ebp), %eax
	movl	%eax, %edx
	.loc 5 469 25
	movl	32(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 5 470 28
	movl	-24(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	44(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbiw__write_pixelP19stbi__write_contextiiiiPh
LBE11:
	.loc 5 468 7
	addl	$1, -12(%ebp)
	jmp	L79
L78:
LBE10:
	.loc 5 472 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbiw__write_flushP19stbi__write_context
	.loc 5 473 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 473 14
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	40(%ebp), %ecx
	movl	%ecx, 8(%esp)
	leal	-28(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL5:
LBE9:
	.loc 5 467 25
	movl	16(%ebp), %eax
	addl	%eax, -16(%ebp)
	.loc 5 467 4
	jmp	L80
L81:
LBE8:
	.loc 5 456 7
	nop
L71:
	.loc 5 475 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1748:
	.def	__ZL14stbiw__outfileP19stbi__write_contextiiiiiiPviiPKcz;	.scl	3;	.type	32;	.endef
__ZL14stbiw__outfileP19stbi__write_contextiiiiiiPviiPKcz:
LFB1749:
	.loc 5 478 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
LBB12:
	.loc 5 479 4
	cmpl	$0, 24(%ebp)
	js	L83
	.loc 5 479 14 discriminator 1
	cmpl	$0, 20(%ebp)
	jns	L84
L83:
	.loc 5 480 14
	movl	$0, %eax
	jmp	L85
L84:
LBB13:
	.loc 5 483 7
	leal	52(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 5 484 21
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	48(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbiw__writefvP19stbi__write_contextPKcPc
	.loc 5 486 26
	movl	32(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	44(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbiw__write_pixelsP19stbi__write_contextiiiiiPviii
	.loc 5 487 14
	movl	$1, %eax
L85:
LBE13:
LBE12:
	.loc 5 489 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1749:
	.section .rdata,"dr"
LC6:
	.ascii "11 4 22 44 44 22 444444\0"
	.text
	.def	__ZL19stbi_write_bmp_coreP19stbi__write_contextiiiPKv;	.scl	3;	.type	32;	.endef
__ZL19stbi_write_bmp_coreP19stbi__write_contextiiiPKv:
LFB1750:
	.loc 5 492 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$136, %esp
	.loc 5 493 17
	movl	12(%ebp), %eax
	movl	%eax, %edx
	sall	$2, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 5 493 8
	andl	$3, %eax
	movl	%eax, -12(%ebp)
	.loc 5 496 30
	movl	12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%eax, %edx
	.loc 5 496 32
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 5 496 37
	imull	16(%ebp), %eax
	.loc 5 494 25
	leal	54(%eax), %edx
	movl	$0, 108(%esp)
	movl	$0, 104(%esp)
	movl	$0, 100(%esp)
	movl	$0, 96(%esp)
	movl	$0, 92(%esp)
	movl	$0, 88(%esp)
	movl	$24, 84(%esp)
	movl	$1, 80(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 76(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 72(%esp)
	movl	$40, 68(%esp)
	movl	$54, 64(%esp)
	movl	$0, 60(%esp)
	movl	$0, 56(%esp)
	movl	%edx, 52(%esp)
	movl	$77, 48(%esp)
	movl	$66, 44(%esp)
	movl	$LC6, 40(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	$0, 32(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	$1, 24(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$-1, 8(%esp)
	movl	$-1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbiw__outfileP19stbi__write_contextiiiiiiPviiPKcz
	.loc 5 498 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1750:
	.globl	_stbi_write_bmp_to_func
	.def	_stbi_write_bmp_to_func;	.scl	2;	.type	32;	.endef
_stbi_write_bmp_to_func:
LFB1751:
	.loc 5 501 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	subl	$116, %esp
	.cfi_offset 7, -12
	.loc 5 502 24
	leal	-84(%ebp), %edx
	movl	$0, %eax
	movl	$19, %ecx
	movl	%edx, %edi
	rep stosl
	.loc 5 503 31
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL27stbi__start_write_callbacksP19stbi__write_contextPFvPvS1_iES1_
	.loc 5 504 30
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi_write_bmp_coreP19stbi__write_contextiiiPKv
	.loc 5 504 51
	nop
	.loc 5 505 1
	addl	$116, %esp
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1751:
	.globl	_stbi_write_bmp
	.def	_stbi_write_bmp;	.scl	2;	.type	32;	.endef
_stbi_write_bmp:
LFB1752:
	.loc 5 509 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	subl	$116, %esp
	.cfi_offset 7, -12
	.loc 5 510 24
	leal	-88(%ebp), %edx
	movl	$0, %eax
	movl	$19, %ecx
	movl	%edx, %edi
	rep stosl
LBB14:
	.loc 5 511 30
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__start_write_fileP19stbi__write_contextPKc
	.loc 5 511 43
	testl	%eax, %eax
	setne	%al
	.loc 5 511 4
	testb	%al, %al
	je	L91
LBB15:
	.loc 5 512 34
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi_write_bmp_coreP19stbi__write_contextiiiPKv
	movl	%eax, -12(%ebp)
	.loc 5 513 27
	leal	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__end_write_fileP19stbi__write_context
	.loc 5 514 14
	movl	-12(%ebp), %eax
	jmp	L93
L91:
LBE15:
	.loc 5 516 14
	movl	$0, %eax
L93:
LBE14:
	.loc 5 517 1 discriminator 1
	addl	$116, %esp
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1752:
	.section .rdata,"dr"
LC7:
	.ascii "111 221 2222 11\0"
	.text
	.def	__ZL19stbi_write_tga_coreP19stbi__write_contextiiiPv;	.scl	3;	.type	32;	.endef
__ZL19stbi_write_tga_coreP19stbi__write_contextiiiPv:
LFB1753:
	.loc 5 521 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$168, %esp
	.loc 5 522 31
	cmpl	$2, 20(%ebp)
	je	L95
	.loc 5 522 31 is_stmt 0 discriminator 2
	cmpl	$4, 20(%ebp)
	jne	L96
L95:
	.loc 5 522 31 discriminator 3
	movl	$1, %eax
	jmp	L97
L96:
	.loc 5 522 31 discriminator 4
	movl	$0, %eax
L97:
	.loc 5 522 8 is_stmt 1 discriminator 6
	movzbl	%al, %eax
	movl	%eax, -44(%ebp)
	.loc 5 523 31 discriminator 6
	cmpl	$0, -44(%ebp)
	je	L98
	.loc 5 523 31 is_stmt 0 discriminator 1
	movl	20(%ebp), %eax
	subl	$1, %eax
	jmp	L99
L98:
	.loc 5 523 31 discriminator 2
	movl	20(%ebp), %eax
L99:
	.loc 5 523 8 is_stmt 1 discriminator 4
	movl	%eax, -48(%ebp)
	.loc 5 524 32 discriminator 4
	cmpl	$1, -48(%ebp)
	jg	L100
	.loc 5 524 32 is_stmt 0 discriminator 1
	movl	$3, %eax
	jmp	L101
L100:
	.loc 5 524 32 discriminator 2
	movl	$2, %eax
L101:
	.loc 5 524 8 is_stmt 1 discriminator 4
	movl	%eax, -52(%ebp)
	.loc 5 526 4 discriminator 4
	cmpl	$0, 16(%ebp)
	js	L102
	.loc 5 526 14 discriminator 1
	cmpl	$0, 12(%ebp)
	jns	L103
L102:
	.loc 5 527 14
	movl	$0, %eax
	jmp	L104
L103:
LBB16:
	.loc 5 529 8
	movl	_stbi_write_tga_with_rle, %eax
	.loc 5 529 4
	testl	%eax, %eax
	jne	L105
	.loc 5 530 28
	movl	-44(%ebp), %eax
	leal	0(,%eax,8), %edx
	.loc 5 531 76
	movl	-48(%ebp), %ecx
	movl	-44(%ebp), %eax
	addl	%ecx, %eax
	.loc 5 530 28
	sall	$3, %eax
	movl	%edx, 88(%esp)
	movl	%eax, 84(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 80(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 76(%esp)
	movl	$0, 72(%esp)
	movl	$0, 68(%esp)
	movl	$0, 64(%esp)
	movl	$0, 60(%esp)
	movl	$0, 56(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 52(%esp)
	movl	$0, 48(%esp)
	movl	$0, 44(%esp)
	movl	$LC7, 40(%esp)
	movl	$0, 36(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	$0, 24(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$-1, 8(%esp)
	movl	$-1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbiw__outfileP19stbi__write_contextiiiiiiPviiPKcz
	.loc 5 531 107
	jmp	L104
L105:
LBB17:
	.loc 5 536 20
	movl	-44(%ebp), %eax
	leal	0(,%eax,8), %ecx
	.loc 5 536 85
	movl	-48(%ebp), %edx
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	.loc 5 536 20
	sall	$3, %eax
	movl	-52(%ebp), %edx
	addl	$8, %edx
	movl	%ecx, 52(%esp)
	movl	%eax, 48(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 44(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 40(%esp)
	movl	$0, 36(%esp)
	movl	$0, 32(%esp)
	movl	$0, 28(%esp)
	movl	$0, 24(%esp)
	movl	$0, 20(%esp)
	movl	%edx, 16(%esp)
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	$LC7, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbiw__writefP19stbi__write_contextPKcz
	.loc 5 538 41
	movl	__ZL30stbi__flip_vertically_on_write, %eax
	.loc 5 538 7
	testl	%eax, %eax
	je	L106
	.loc 5 539 12
	movl	$0, -16(%ebp)
	.loc 5 540 15
	movl	16(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 5 541 15
	movl	$1, -28(%ebp)
	jmp	L125
L106:
	.loc 5 543 12
	movl	16(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -16(%ebp)
	.loc 5 544 15
	movl	$-1, -24(%ebp)
	.loc 5 545 15
	movl	$-1, -28(%ebp)
L125:
LBB18:
	.loc 5 547 16 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	-24(%ebp), %eax
	je	L108
LBB19:
	.loc 5 548 58
	movl	-16(%ebp), %eax
	imull	12(%ebp), %eax
	.loc 5 548 62
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 5 548 25
	movl	24(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -56(%ebp)
LBB20:
	.loc 5 551 17
	movl	$0, -12(%ebp)
L124:
	.loc 5 551 24 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L109
LBB21:
	.loc 5 552 44
	movl	-12(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 5 552 28
	movl	-56(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -60(%ebp)
	.loc 5 553 17
	movl	$1, -36(%ebp)
	.loc 5 554 17
	movl	$1, -32(%ebp)
LBB22:
	.loc 5 556 23
	movl	12(%ebp), %eax
	subl	$1, %eax
	.loc 5 556 13
	cmpl	%eax, -12(%ebp)
	jge	L110
LBB23:
	.loc 5 557 16
	addl	$1, -32(%ebp)
	.loc 5 558 29
	movl	20(%ebp), %eax
	.loc 5 558 46
	movl	-12(%ebp), %edx
	addl	$1, %edx
	.loc 5 558 51
	imull	20(%ebp), %edx
	movl	%edx, %ecx
	.loc 5 558 41
	movl	-56(%ebp), %edx
	addl	%ecx, %edx
	.loc 5 558 29
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, (%esp)
	call	_memcmp
	movl	%eax, -36(%ebp)
LBB24:
	.loc 5 559 16
	cmpl	$0, -36(%ebp)
	je	L111
LBB25:
	.loc 5 560 40
	movl	-60(%ebp), %eax
	movl	%eax, -40(%ebp)
	.loc 5 561 26
	movl	-12(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -20(%ebp)
L115:
	.loc 5 561 41 discriminator 1
	movl	-20(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L110
	.loc 5 561 41 is_stmt 0 discriminator 2
	cmpl	$127, -32(%ebp)
	jg	L110
	.loc 5 562 32 is_stmt 1
	movl	20(%ebp), %eax
	.loc 5 562 47
	movl	-20(%ebp), %edx
	imull	20(%ebp), %edx
	movl	%edx, %ecx
	.loc 5 562 43
	movl	-56(%ebp), %edx
	addl	%ecx, %edx
	.loc 5 562 32
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	_memcmp
	.loc 5 562 22
	testl	%eax, %eax
	je	L113
	.loc 5 563 30
	movl	20(%ebp), %eax
	addl	%eax, -40(%ebp)
	.loc 5 564 25
	addl	$1, -32(%ebp)
	jmp	L126
L113:
	.loc 5 566 25
	subl	$1, -32(%ebp)
	.loc 5 567 25
	jmp	L110
L126:
	.loc 5 561 19 discriminator 3
	addl	$1, -20(%ebp)
	jmp	L115
L111:
LBE25:
	.loc 5 571 26
	movl	-12(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -20(%ebp)
L119:
	.loc 5 571 41 discriminator 1
	movl	-20(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L110
	.loc 5 571 41 is_stmt 0 discriminator 2
	cmpl	$127, -32(%ebp)
	jg	L110
	.loc 5 572 33 is_stmt 1
	movl	20(%ebp), %eax
	.loc 5 572 49
	movl	-20(%ebp), %edx
	imull	20(%ebp), %edx
	movl	%edx, %ecx
	.loc 5 572 45
	movl	-56(%ebp), %edx
	addl	%ecx, %edx
	.loc 5 572 33
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, (%esp)
	call	_memcmp
	.loc 5 572 22
	testl	%eax, %eax
	jne	L127
	.loc 5 573 25
	addl	$1, -32(%ebp)
	.loc 5 571 19
	addl	$1, -20(%ebp)
	jmp	L119
L127:
	.loc 5 575 25
	nop
L110:
LBE24:
LBE23:
LBE22:
LBB26:
	.loc 5 581 13
	cmpl	$0, -36(%ebp)
	je	L120
LBB27:
	.loc 5 582 39
	movl	-32(%ebp), %eax
	.loc 5 582 30
	subl	$1, %eax
	movb	%al, -61(%ebp)
	.loc 5 583 29
	movzbl	-61(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbiw__write1P19stbi__write_contexth
	.loc 5 584 23
	movl	$0, -20(%ebp)
L122:
	.loc 5 584 30 discriminator 3
	movl	-20(%ebp), %eax
	cmpl	-32(%ebp), %eax
	jge	L123
	.loc 5 585 75 discriminator 2
	movl	-20(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 5 585 37 discriminator 2
	movl	-60(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, 20(%esp)
	movl	$0, 16(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$-1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbiw__write_pixelP19stbi__write_contextiiiiPh
	.loc 5 584 16 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L122
L120:
LBE27:
LBB28:
	.loc 5 588 39
	movl	-32(%ebp), %eax
	.loc 5 588 30
	addl	$127, %eax
	movb	%al, -62(%ebp)
	.loc 5 589 29
	movzbl	-62(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbiw__write1P19stbi__write_contexth
	.loc 5 590 34
	movl	-60(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	$0, 16(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$-1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbiw__write_pixelP19stbi__write_contextiiiiPh
L123:
LBE28:
LBE26:
LBE21:
	.loc 5 551 31 discriminator 2
	movl	-32(%ebp), %eax
	addl	%eax, -12(%ebp)
	.loc 5 551 10 discriminator 2
	jmp	L124
L109:
LBE20:
LBE19:
	.loc 5 547 27
	movl	-28(%ebp), %eax
	addl	%eax, -16(%ebp)
	.loc 5 547 7
	jmp	L125
L108:
LBE18:
	.loc 5 594 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbiw__write_flushP19stbi__write_context
LBE17:
LBE16:
	.loc 5 596 11
	movl	$1, %eax
L104:
	.loc 5 597 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1753:
	.globl	_stbi_write_tga_to_func
	.def	_stbi_write_tga_to_func;	.scl	2;	.type	32;	.endef
_stbi_write_tga_to_func:
LFB1754:
	.loc 5 600 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	subl	$116, %esp
	.cfi_offset 7, -12
	.loc 5 601 24
	leal	-84(%ebp), %edx
	movl	$0, %eax
	movl	$19, %ecx
	movl	%edx, %edi
	rep stosl
	.loc 5 602 31
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL27stbi__start_write_callbacksP19stbi__write_contextPFvPvS1_iES1_
	.loc 5 603 30
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi_write_tga_coreP19stbi__write_contextiiiPv
	.loc 5 603 60
	nop
	.loc 5 604 1
	addl	$116, %esp
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1754:
	.globl	_stbi_write_tga
	.def	_stbi_write_tga;	.scl	2;	.type	32;	.endef
_stbi_write_tga:
LFB1755:
	.loc 5 608 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	subl	$116, %esp
	.cfi_offset 7, -12
	.loc 5 609 24
	leal	-88(%ebp), %edx
	movl	$0, %eax
	movl	$19, %ecx
	movl	%edx, %edi
	rep stosl
LBB29:
	.loc 5 610 30
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__start_write_fileP19stbi__write_contextPKc
	.loc 5 610 43
	testl	%eax, %eax
	setne	%al
	.loc 5 610 4
	testb	%al, %al
	je	L131
LBB30:
	.loc 5 611 34
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi_write_tga_coreP19stbi__write_contextiiiPv
	movl	%eax, -12(%ebp)
	.loc 5 612 27
	leal	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__end_write_fileP19stbi__write_context
	.loc 5 613 14
	movl	-12(%ebp), %eax
	jmp	L133
L131:
LBE30:
	.loc 5 615 14
	movl	$0, %eax
L133:
LBE29:
	.loc 5 616 1 discriminator 1
	addl	$116, %esp
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1755:
	.def	__ZL21stbiw__linear_to_rgbePhPf;	.scl	3;	.type	32;	.endef
__ZL21stbiw__linear_to_rgbePhPf:
LFB1756:
	.loc 5 626 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 5 628 20
	movl	12(%ebp), %eax
	flds	(%eax)
	movl	12(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	movl	12(%ebp), %eax
	addl	$8, %eax
	flds	(%eax)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L151
	.loc 5 628 20 is_stmt 0 discriminator 1
	movl	12(%ebp), %eax
	flds	4(%eax)
	fxch	%st(1)
	jmp	L137
L151:
	.loc 5 628 20 discriminator 2
	movl	12(%ebp), %eax
	flds	8(%eax)
	fxch	%st(1)
L137:
	.loc 5 628 20 discriminator 4
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L152
	.loc 5 628 20 discriminator 5
	movl	12(%ebp), %eax
	flds	(%eax)
	jmp	L140
L152:
	.loc 5 628 20 discriminator 6
	movl	12(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	movl	12(%ebp), %eax
	addl	$8, %eax
	flds	(%eax)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L153
	.loc 5 628 20 discriminator 8
	movl	12(%ebp), %eax
	flds	4(%eax)
	jmp	L140
L153:
	.loc 5 628 20 discriminator 9
	movl	12(%ebp), %eax
	flds	8(%eax)
L140:
	.loc 5 628 10 is_stmt 1 discriminator 12
	fstps	-12(%ebp)
LBB31:
	.loc 5 630 4 discriminator 12
	flds	-12(%ebp)
	flds	LC8
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L154
	.loc 5 631 43
	movl	8(%ebp), %eax
	addl	$3, %eax
	.loc 5 631 45
	movb	$0, (%eax)
	.loc 5 631 33
	movl	8(%ebp), %edx
	addl	$2, %edx
	.loc 5 631 43
	movzbl	(%eax), %eax
	.loc 5 631 35
	movb	%al, (%edx)
	.loc 5 631 23
	movl	8(%ebp), %eax
	addl	$1, %eax
	.loc 5 631 33
	movzbl	(%edx), %edx
	.loc 5 631 25
	movb	%dl, (%eax)
	.loc 5 631 23
	movzbl	(%eax), %edx
	.loc 5 631 15
	movl	8(%ebp), %eax
	movb	%dl, (%eax)
LBE31:
	.loc 5 640 1
	jmp	L155
L154:
LBB33:
LBB32:
	.loc 5 633 38
	leal	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	flds	-12(%ebp)
	fstps	(%esp)
	call	__ZSt5frexpfPi
	.loc 5 633 59
	flds	LC9
	fmulp	%st, %st(1)
	.loc 5 633 68
	fdivs	-12(%ebp)
	fstps	-16(%ebp)
	.loc 5 635 41
	movl	12(%ebp), %eax
	flds	(%eax)
	.loc 5 635 43
	fmuls	-16(%ebp)
	.loc 5 635 17
	fnstcw	-26(%ebp)
	movzwl	-26(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -28(%ebp)
	fldcw	-28(%ebp)
	fistps	-30(%ebp)
	fldcw	-26(%ebp)
	movzwl	-30(%ebp), %eax
	movl	%eax, %edx
	.loc 5 635 15
	movl	8(%ebp), %eax
	movb	%dl, (%eax)
	.loc 5 636 41
	movl	12(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 5 636 43
	fmuls	-16(%ebp)
	.loc 5 636 13
	movl	8(%ebp), %eax
	addl	$1, %eax
	.loc 5 636 17
	fldcw	-28(%ebp)
	fistps	-30(%ebp)
	fldcw	-26(%ebp)
	movzwl	-30(%ebp), %edx
	.loc 5 636 15
	movb	%dl, (%eax)
	.loc 5 637 41
	movl	12(%ebp), %eax
	addl	$8, %eax
	flds	(%eax)
	.loc 5 637 43
	fmuls	-16(%ebp)
	.loc 5 637 13
	movl	8(%ebp), %eax
	addl	$2, %eax
	.loc 5 637 17
	fldcw	-28(%ebp)
	fistps	-30(%ebp)
	fldcw	-26(%ebp)
	movzwl	-30(%ebp), %edx
	.loc 5 637 15
	movb	%dl, (%eax)
	.loc 5 638 42
	movl	-20(%ebp), %eax
	movl	%eax, %edx
	.loc 5 638 13
	movl	8(%ebp), %eax
	addl	$3, %eax
	.loc 5 638 42
	addl	$-128, %edx
	.loc 5 638 15
	movb	%dl, (%eax)
L155:
LBE32:
LBE33:
	.loc 5 640 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1756:
	.section .rdata,"dr"
LC10:
	.ascii "length+128 <= 255\0"
	.text
	.def	__ZL21stbiw__write_run_dataP19stbi__write_contextih;	.scl	3;	.type	32;	.endef
__ZL21stbiw__write_run_dataP19stbi__write_contextih:
LFB1757:
	.loc 5 643 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	movl	16(%ebp), %eax
	movb	%al, -28(%ebp)
	.loc 5 644 31
	movl	12(%ebp), %eax
	addl	$-128, %eax
	.loc 5 644 18
	movb	%al, -9(%ebp)
	.loc 5 645 4
	cmpl	$127, 12(%ebp)
	jle	L159
	.loc 5 645 4 is_stmt 0 discriminator 2
	movl	$645, 8(%esp)
	movl	$LC4, 4(%esp)
	movl	$LC10, (%esp)
	call	__assert
L159:
	.loc 5 646 7 is_stmt 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 646 11
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$1, 8(%esp)
	leal	-9(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL6:
	.loc 5 647 7
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 647 11
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$1, 8(%esp)
	leal	-28(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL7:
	.loc 5 648 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1757:
	.section .rdata,"dr"
LC11:
	.ascii "length <= 128\0"
	.text
	.def	__ZL22stbiw__write_dump_dataP19stbi__write_contextiPh;	.scl	3;	.type	32;	.endef
__ZL22stbiw__write_dump_dataP19stbi__write_contextiPh:
LFB1758:
	.loc 5 651 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 5 652 18
	movl	12(%ebp), %eax
	movb	%al, -9(%ebp)
	.loc 5 653 4
	movl	12(%ebp), %eax
	cmpl	$128, %eax
	jle	L163
	.loc 5 653 4 is_stmt 0 discriminator 2
	movl	$653, 8(%esp)
	movl	$LC4, 4(%esp)
	movl	$LC11, (%esp)
	call	__assert
L163:
	.loc 5 654 7 is_stmt 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 654 11
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$1, 8(%esp)
	leal	-9(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL8:
	.loc 5 655 7
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 655 11
	movl	12(%ebp), %ecx
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	%ecx, 8(%esp)
	movl	16(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL9:
	.loc 5 656 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1758:
	.def	__ZL25stbiw__write_hdr_scanlineP19stbi__write_contextiiPhPf;	.scl	3;	.type	32;	.endef
__ZL25stbiw__write_hdr_scanlineP19stbi__write_contextiiPhPf:
LFB1759:
	.loc 5 659 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 5 660 18
	movb	$2, -36(%ebp)
	movb	$2, -35(%ebp)
	movb	$0, -34(%ebp)
	movb	$0, -33(%ebp)
	.loc 5 665 38
	movl	12(%ebp), %eax
	sarl	$8, %eax
	.loc 5 665 22
	movb	%al, -34(%ebp)
	.loc 5 666 22
	movl	12(%ebp), %eax
	movb	%al, -33(%ebp)
LBB34:
	.loc 5 669 4
	cmpl	$7, 12(%ebp)
	jle	L165
	.loc 5 669 18 discriminator 1
	cmpl	$32767, 12(%ebp)
	jle	L166
L165:
	.loc 5 670 13
	movl	$0, -12(%ebp)
L170:
	.loc 5 670 19 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L192
	movl	16(%ebp), %eax
	subl	$3, %eax
	.loc 5 671 10
	cmpl	$1, %eax
	ja	L168
	.loc 5 673 43
	movl	-12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 5 673 53
	addl	$2, %eax
	leal	0(,%eax,4), %edx
	movl	24(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 5 673 31
	fstps	-44(%ebp)
	.loc 5 674 43
	movl	-12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 5 674 53
	addl	$1, %eax
	leal	0(,%eax,4), %edx
	movl	24(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 5 674 31
	fstps	-48(%ebp)
	.loc 5 675 43
	movl	-12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 5 675 53
	leal	0(,%eax,4), %edx
	movl	24(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 5 675 31
	fstps	-52(%ebp)
	.loc 5 676 21
	jmp	L169
L168:
	.loc 5 678 67
	movl	-12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 5 678 77
	leal	0(,%eax,4), %edx
	movl	24(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 5 678 55
	fstps	-44(%ebp)
	.loc 5 678 53
	flds	-44(%ebp)
	.loc 5 678 43
	fstps	-48(%ebp)
	.loc 5 678 41
	flds	-48(%ebp)
	.loc 5 678 31
	fstps	-52(%ebp)
	.loc 5 679 21
	nop
L169:
	.loc 5 681 31
	leal	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbiw__linear_to_rgbePhPf
	.loc 5 682 13
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 682 17
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$4, 8(%esp)
	leal	-40(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL10:
	.loc 5 670 7
	addl	$1, -12(%ebp)
	jmp	L170
L166:
LBB35:
	.loc 5 687 13
	movl	$0, -12(%ebp)
L175:
	.loc 5 687 19 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L172
	movl	16(%ebp), %eax
	subl	$3, %eax
	.loc 5 688 10
	cmpl	$1, %eax
	ja	L173
	.loc 5 690 43
	movl	-12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 5 690 53
	addl	$2, %eax
	leal	0(,%eax,4), %edx
	movl	24(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 5 690 31
	fstps	-44(%ebp)
	.loc 5 691 43
	movl	-12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 5 691 53
	addl	$1, %eax
	leal	0(,%eax,4), %edx
	movl	24(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 5 691 31
	fstps	-48(%ebp)
	.loc 5 692 43
	movl	-12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 5 692 53
	leal	0(,%eax,4), %edx
	movl	24(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 5 692 31
	fstps	-52(%ebp)
	.loc 5 693 21
	jmp	L174
L173:
	.loc 5 695 67
	movl	-12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 5 695 77
	leal	0(,%eax,4), %edx
	movl	24(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 5 695 55
	fstps	-44(%ebp)
	.loc 5 695 53
	flds	-44(%ebp)
	.loc 5 695 43
	fstps	-48(%ebp)
	.loc 5 695 41
	flds	-48(%ebp)
	.loc 5 695 31
	fstps	-52(%ebp)
	.loc 5 696 21
	nop
L174:
	.loc 5 698 31 discriminator 2
	leal	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbiw__linear_to_rgbePhPf
	.loc 5 699 20 discriminator 2
	movl	-12(%ebp), %edx
	.loc 5 699 29 discriminator 2
	movl	20(%ebp), %eax
	addl	%eax, %edx
	.loc 5 699 39 discriminator 2
	movzbl	-40(%ebp), %eax
	.loc 5 699 31 discriminator 2
	movb	%al, (%edx)
	.loc 5 700 20 discriminator 2
	movl	-12(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 5 700 29 discriminator 2
	movl	20(%ebp), %eax
	addl	%eax, %edx
	.loc 5 700 39 discriminator 2
	movzbl	-39(%ebp), %eax
	.loc 5 700 31 discriminator 2
	movb	%al, (%edx)
	.loc 5 701 27 discriminator 2
	movl	12(%ebp), %eax
	leal	(%eax,%eax), %edx
	.loc 5 701 20 discriminator 2
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 5 701 29 discriminator 2
	movl	20(%ebp), %eax
	addl	%eax, %edx
	.loc 5 701 39 discriminator 2
	movzbl	-38(%ebp), %eax
	.loc 5 701 31 discriminator 2
	movb	%al, (%edx)
	.loc 5 702 27 discriminator 2
	movl	12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%eax, %edx
	.loc 5 702 20 discriminator 2
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 5 702 29 discriminator 2
	movl	20(%ebp), %eax
	addl	%eax, %edx
	.loc 5 702 39 discriminator 2
	movzbl	-37(%ebp), %eax
	.loc 5 702 31 discriminator 2
	movb	%al, (%edx)
	.loc 5 687 7 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L175
L172:
	.loc 5 705 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 705 14
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$4, 8(%esp)
	leal	-36(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL11:
LBB36:
	.loc 5 708 13
	movl	$0, -16(%ebp)
L191:
	.loc 5 708 19 discriminator 1
	cmpl	$3, -16(%ebp)
	jg	L193
LBB37:
	.loc 5 709 46
	movl	12(%ebp), %eax
	imull	-16(%ebp), %eax
	movl	%eax, %edx
	.loc 5 709 25
	movl	20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -32(%ebp)
	.loc 5 711 12
	movl	$0, -12(%ebp)
L190:
	.loc 5 712 19
	movl	-12(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L176
LBB38:
	.loc 5 714 15
	movl	-12(%ebp), %eax
	movl	%eax, -20(%ebp)
L179:
	.loc 5 715 21
	movl	-20(%ebp), %eax
	addl	$2, %eax
	.loc 5 715 24
	cmpl	%eax, 12(%ebp)
	jle	L177
	.loc 5 716 26
	movl	-20(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 5 716 39
	movl	-20(%ebp), %eax
	leal	1(%eax), %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 5 716 16
	cmpb	%al, %dl
	jne	L178
	.loc 5 716 50 discriminator 1
	movl	-20(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 5 716 63 discriminator 1
	movl	-20(%ebp), %eax
	leal	2(%eax), %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 5 716 41 discriminator 1
	cmpb	%al, %dl
	je	L194
L178:
	.loc 5 718 16
	addl	$1, -20(%ebp)
	.loc 5 715 13
	jmp	L179
L194:
	.loc 5 717 19
	nop
L177:
	.loc 5 720 18
	movl	-20(%ebp), %eax
	addl	$2, %eax
	.loc 5 720 13
	cmpl	%eax, 12(%ebp)
	jg	L183
	.loc 5 721 18
	movl	12(%ebp), %eax
	movl	%eax, -20(%ebp)
L183:
	.loc 5 723 22
	movl	-12(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jge	L181
LBB39:
	.loc 5 724 20
	movl	-20(%ebp), %eax
	subl	-12(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 5 725 16
	cmpl	$128, -24(%ebp)
	jle	L182
	.loc 5 725 35 discriminator 1
	movl	$128, -24(%ebp)
L182:
	.loc 5 726 38
	movl	-12(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbiw__write_dump_dataP19stbi__write_contextiPh
	.loc 5 727 18
	movl	-24(%ebp), %eax
	addl	%eax, -12(%ebp)
LBE39:
	.loc 5 723 13
	jmp	L183
L181:
LBB40:
	.loc 5 730 18
	movl	-20(%ebp), %eax
	addl	$2, %eax
	.loc 5 730 13
	cmpl	%eax, 12(%ebp)
	jle	L190
L186:
LBB41:
	.loc 5 732 33
	movl	-20(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L189
	.loc 5 732 42 discriminator 1
	movl	-20(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 5 732 53 discriminator 1
	movl	-12(%ebp), %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 5 732 33 discriminator 1
	cmpb	%al, %dl
	jne	L189
	.loc 5 733 19
	addl	$1, -20(%ebp)
	.loc 5 732 16
	jmp	L186
L189:
	.loc 5 735 25
	movl	-12(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jge	L190
LBB42:
	.loc 5 736 23
	movl	-20(%ebp), %eax
	subl	-12(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 5 737 19
	cmpl	$127, -28(%ebp)
	jle	L188
	.loc 5 737 38 discriminator 1
	movl	$127, -28(%ebp)
L188:
	.loc 5 738 55
	movl	-12(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 738 40
	movzbl	%al, %eax
	movl	%eax, 8(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbiw__write_run_dataP19stbi__write_contextih
	.loc 5 739 21
	movl	-28(%ebp), %eax
	addl	%eax, -12(%ebp)
LBE42:
	.loc 5 735 16
	jmp	L189
L176:
LBE41:
LBE40:
LBE38:
LBE37:
	.loc 5 708 7 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L191
L192:
LBE36:
LBE35:
	.loc 5 669 4
	nop
L193:
LBE34:
	.loc 5 745 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1759:
	.section .rdata,"dr"
	.align 4
LC13:
	.ascii "EXPOSURE=          1.0000000000000\12\12-Y %d +X %d\12\0"
	.align 4
LC12:
	.ascii "#?RADIANCE\12# Written by stb_image_write.h\12FORMAT=32-bit_rle_rgbe\12\0"
	.text
	.def	__ZL19stbi_write_hdr_coreP19stbi__write_contextiiiPf;	.scl	3;	.type	32;	.endef
__ZL19stbi_write_hdr_coreP19stbi__write_contextiiiPf:
LFB1760:
	.loc 5 748 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$252, %esp
	.cfi_offset 7, -12
	.cfi_offset 6, -16
	.cfi_offset 3, -20
LBB43:
	.loc 5 749 4
	cmpl	$0, 16(%ebp)
	jle	L196
	.loc 5 749 15 discriminator 1
	cmpl	$0, 12(%ebp)
	jle	L196
	.loc 5 749 25 discriminator 2
	cmpl	$0, 24(%ebp)
	jne	L197
L196:
	.loc 5 750 14
	movl	$0, %eax
	jmp	L198
L197:
LBB44:
	.loc 5 753 50
	movl	12(%ebp), %eax
	sall	$2, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -32(%ebp)
	.loc 5 756 12
	leal	-230(%ebp), %eax
	movl	$LC12, %ebx
	movl	$66, %edx
	movl	(%ebx), %ecx
	movl	%ecx, (%eax)
	movl	-4(%ebx,%edx), %ecx
	movl	%ecx, -4(%eax,%edx)
	leal	4(%eax), %edi
	andl	$-4, %edi
	subl	%edi, %eax
	subl	%eax, %ebx
	addl	%eax, %edx
	andl	$-4, %edx
	movl	%edx, %eax
	shrl	$2, %eax
	movl	%ebx, %esi
	movl	%eax, %ecx
	rep movsl
	.loc 5 757 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 757 14
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$65, 8(%esp)
	leal	-230(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL12:
	.loc 5 760 22
	movl	12(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$LC13, 8(%esp)
	movl	$128, 4(%esp)
	leal	-164(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__sprintf_s, %eax
	call	*%eax
LVL13:
	movl	%eax, -36(%ebp)
	.loc 5 764 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 764 14
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	-36(%ebp), %ecx
	movl	%ecx, 8(%esp)
	leal	-164(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL14:
	.loc 5 766 12
	movl	$0, -28(%ebp)
L202:
	.loc 5 766 18 discriminator 1
	movl	-28(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L199
	.loc 5 767 68
	movl	20(%ebp), %eax
	imull	12(%ebp), %eax
	movl	%eax, %edx
	.loc 5 767 113
	movl	__ZL30stbi__flip_vertically_on_write, %eax
	.loc 5 767 103
	testl	%eax, %eax
	je	L200
	.loc 5 767 106 discriminator 1
	movl	16(%ebp), %eax
	subl	$1, %eax
	.loc 5 767 103 discriminator 1
	subl	-28(%ebp), %eax
	jmp	L201
L200:
	.loc 5 767 103 is_stmt 0 discriminator 2
	movl	-28(%ebp), %eax
L201:
	.loc 5 767 70 is_stmt 1 discriminator 4
	imull	%edx, %eax
	.loc 5 767 62 discriminator 4
	leal	0(,%eax,4), %edx
	.loc 5 767 35 discriminator 4
	movl	24(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, 16(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL25stbiw__write_hdr_scanlineP19stbi__write_contextiiPhPf
	.loc 5 766 7 discriminator 4
	addl	$1, -28(%ebp)
	jmp	L202
L199:
	.loc 5 768 7
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 5 769 14
	movl	$1, %eax
L198:
LBE44:
LBE43:
	.loc 5 771 1 discriminator 1
	addl	$252, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1760:
	.globl	_stbi_write_hdr_to_func
	.def	_stbi_write_hdr_to_func;	.scl	2;	.type	32;	.endef
_stbi_write_hdr_to_func:
LFB1761:
	.loc 5 774 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	subl	$116, %esp
	.cfi_offset 7, -12
	.loc 5 775 24
	leal	-84(%ebp), %edx
	movl	$0, %eax
	movl	$19, %ecx
	movl	%edx, %edi
	rep stosl
	.loc 5 776 31
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL27stbi__start_write_callbacksP19stbi__write_contextPFvPvS1_iES1_
	.loc 5 777 30
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi_write_hdr_coreP19stbi__write_contextiiiPf
	.loc 5 777 61
	nop
	.loc 5 778 1
	addl	$116, %esp
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1761:
	.globl	_stbi_write_hdr
	.def	_stbi_write_hdr;	.scl	2;	.type	32;	.endef
_stbi_write_hdr:
LFB1762:
	.loc 5 782 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	subl	$116, %esp
	.cfi_offset 7, -12
	.loc 5 783 24
	leal	-88(%ebp), %edx
	movl	$0, %eax
	movl	$19, %ecx
	movl	%edx, %edi
	rep stosl
LBB45:
	.loc 5 784 30
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__start_write_fileP19stbi__write_contextPKc
	.loc 5 784 43
	testl	%eax, %eax
	setne	%al
	.loc 5 784 4
	testb	%al, %al
	je	L206
LBB46:
	.loc 5 785 34
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi_write_hdr_coreP19stbi__write_contextiiiPf
	movl	%eax, -12(%ebp)
	.loc 5 786 27
	leal	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__end_write_fileP19stbi__write_context
	.loc 5 787 14
	movl	-12(%ebp), %eax
	jmp	L208
L206:
LBE46:
	.loc 5 789 14
	movl	$0, %eax
L208:
LBE45:
	.loc 5 790 1 discriminator 1
	addl	$116, %esp
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1762:
	.section .rdata,"dr"
LC14:
	.ascii "p\0"
	.text
	.def	__ZL14stbiw__sbgrowfPPvii;	.scl	3;	.type	32;	.endef
__ZL14stbiw__sbgrowfPPvii:
LFB1763:
	.loc 5 814 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 5 815 12
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 815 17
	testl	%eax, %eax
	je	L210
	.loc 5 815 21 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	subl	$8, %eax
	movl	(%eax), %eax
	.loc 5 815 20 discriminator 1
	leal	(%eax,%eax), %edx
	.loc 5 815 17 discriminator 1
	movl	12(%ebp), %eax
	addl	%edx, %eax
	jmp	L211
L210:
	.loc 5 815 17 is_stmt 0 discriminator 2
	movl	12(%ebp), %eax
	addl	$1, %eax
L211:
	.loc 5 815 8 is_stmt 1 discriminator 4
	movl	%eax, -12(%ebp)
	.loc 5 816 14 discriminator 4
	movl	16(%ebp), %eax
	imull	-12(%ebp), %eax
	leal	8(%eax), %edx
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	L212
	.loc 5 816 14 is_stmt 0 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	subl	$8, %eax
	jmp	L213
L212:
	.loc 5 816 14 discriminator 2
	movl	$0, %eax
L213:
	.loc 5 816 14 discriminator 4
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_realloc
	movl	%eax, -16(%ebp)
	.loc 5 817 4 is_stmt 1 discriminator 4
	movl	-16(%ebp), %eax
	testl	%eax, %eax
	jne	L216
	.loc 5 817 4 is_stmt 0 discriminator 2
	movl	$817, 8(%esp)
	movl	$LC4, 4(%esp)
	movl	$LC14, (%esp)
	call	__assert
L216:
	.loc 5 818 9 is_stmt 1
	movl	-16(%ebp), %eax
	.loc 5 818 4
	testl	%eax, %eax
	je	L217
	.loc 5 819 12
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 819 7
	testl	%eax, %eax
	jne	L218
	.loc 5 819 19 discriminator 1
	movl	-16(%ebp), %eax
	.loc 5 819 31 discriminator 1
	addl	$4, %eax
	.loc 5 819 33 discriminator 1
	movl	$0, (%eax)
L218:
	.loc 5 820 14
	movl	-16(%ebp), %eax
	leal	8(%eax), %edx
	.loc 5 820 12
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 5 821 7
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	leal	-8(%eax), %edx
	.loc 5 821 24
	movl	-12(%ebp), %eax
	movl	%eax, (%edx)
L217:
	.loc 5 823 12
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 824 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1763:
	.def	__ZL18stbiw__zlib_flushfPhPjPi;	.scl	3;	.type	32;	.endef
__ZL18stbiw__zlib_flushfPhPjPi:
LFB1764:
	.loc 5 827 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%esi
	pushl	%ebx
	subl	$16, %esp
	.cfi_offset 6, -12
	.cfi_offset 3, -16
L224:
	.loc 5 828 11
	movl	16(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 828 21
	cmpl	$7, %eax
	jle	L221
	.loc 5 829 7
	movl	8(%ebp), %eax
	testl	%eax, %eax
	je	L222
	.loc 5 829 7 is_stmt 0 discriminator 2
	movl	8(%ebp), %eax
	subl	$4, %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	subl	$8, %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jl	L223
L222:
	.loc 5 829 7 discriminator 3
	movl	$1, 8(%esp)
	movl	$1, 4(%esp)
	leal	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbiw__sbgrowfPPvii
L223:
	.loc 5 829 7 discriminator 5
	movl	12(%ebp), %eax
	movl	(%eax), %esi
	movl	8(%ebp), %ebx
	movl	8(%ebp), %eax
	leal	-4(%eax), %edx
	movl	(%edx), %eax
	leal	1(%eax), %ecx
	movl	%ecx, (%edx)
	addl	%ebx, %eax
	movl	%esi, %edx
	movb	%dl, (%eax)
	.loc 5 830 18 is_stmt 1 discriminator 5
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	shrl	$8, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 5 831 17 discriminator 5
	movl	16(%ebp), %eax
	movl	(%eax), %eax
	leal	-8(%eax), %edx
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 5 828 4 discriminator 5
	jmp	L224
L221:
	.loc 5 833 11
	movl	8(%ebp), %eax
	.loc 5 834 1
	addl	$16, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1764:
	.def	__ZL18stbiw__zlib_bitrevii;	.scl	3;	.type	32;	.endef
__ZL18stbiw__zlib_bitrevii:
LFB1765:
	.loc 5 837 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 5 838 8
	movl	$0, -4(%ebp)
L228:
	.loc 5 839 19
	movl	12(%ebp), %eax
	leal	-1(%eax), %edx
	movl	%edx, 12(%ebp)
	testl	%eax, %eax
	setne	%al
	testb	%al, %al
	je	L227
	.loc 5 840 18
	movl	-4(%ebp), %eax
	leal	(%eax,%eax), %edx
	.loc 5 840 32
	movl	8(%ebp), %eax
	andl	$1, %eax
	.loc 5 840 11
	orl	%edx, %eax
	movl	%eax, -4(%ebp)
	.loc 5 841 12
	sarl	8(%ebp)
	.loc 5 839 4
	jmp	L228
L227:
	.loc 5 843 11
	movl	-4(%ebp), %eax
	.loc 5 844 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1765:
	.def	__ZL18stbiw__zlib_countmPhS_i;	.scl	3;	.type	32;	.endef
__ZL18stbiw__zlib_countmPhS_i:
LFB1766:
	.loc 5 847 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 5 849 10
	movl	$0, -4(%ebp)
L233:
	.loc 5 849 24 discriminator 1
	movl	-4(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L231
	.loc 5 849 24 is_stmt 0 discriminator 2
	cmpl	$257, -4(%ebp)
	jg	L231
	.loc 5 850 14 is_stmt 1
	movl	-4(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 5 850 22
	movl	-4(%ebp), %ecx
	movl	12(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 5 850 7
	cmpb	%al, %dl
	jne	L235
	.loc 5 849 4 discriminator 3
	addl	$1, -4(%ebp)
	jmp	L233
L235:
	.loc 5 850 25
	nop
L231:
	.loc 5 851 11
	movl	-4(%ebp), %eax
	.loc 5 852 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1766:
	.def	__ZL12stbiw__zhashPh;	.scl	3;	.type	32;	.endef
__ZL12stbiw__zhashPh:
LFB1767:
	.loc 5 855 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 5 856 30
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 5 856 41
	movl	8(%ebp), %edx
	addl	$1, %edx
	movzbl	(%edx), %edx
	movzbl	%dl, %edx
	.loc 5 856 43
	sall	$8, %edx
	.loc 5 856 32
	addl	%eax, %edx
	.loc 5 856 58
	movl	8(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 5 856 60
	sall	$16, %eax
	.loc 5 856 49
	addl	%edx, %eax
	.loc 5 856 17
	movl	%eax, -4(%ebp)
	.loc 5 857 17
	movl	-4(%ebp), %eax
	sall	$3, %eax
	.loc 5 857 9
	xorl	%eax, -4(%ebp)
	.loc 5 858 17
	movl	-4(%ebp), %eax
	shrl	$5, %eax
	.loc 5 858 9
	addl	%eax, -4(%ebp)
	.loc 5 859 17
	movl	-4(%ebp), %eax
	sall	$4, %eax
	.loc 5 859 9
	xorl	%eax, -4(%ebp)
	.loc 5 860 17
	movl	-4(%ebp), %eax
	shrl	$17, %eax
	.loc 5 860 9
	addl	%eax, -4(%ebp)
	.loc 5 861 17
	movl	-4(%ebp), %eax
	sall	$25, %eax
	.loc 5 861 9
	xorl	%eax, -4(%ebp)
	.loc 5 862 17
	movl	-4(%ebp), %eax
	shrl	$6, %eax
	.loc 5 862 9
	addl	%eax, -4(%ebp)
	.loc 5 863 11
	movl	-4(%ebp), %eax
	.loc 5 864 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1767:
	.data
	.align 32
__ZZ18stbi_zlib_compressE7lengthc:
	.word	3
	.word	4
	.word	5
	.word	6
	.word	7
	.word	8
	.word	9
	.word	10
	.word	11
	.word	13
	.word	15
	.word	17
	.word	19
	.word	23
	.word	27
	.word	31
	.word	35
	.word	43
	.word	51
	.word	59
	.word	67
	.word	83
	.word	99
	.word	115
	.word	131
	.word	163
	.word	195
	.word	227
	.word	258
	.word	259
	.align 4
__ZZ18stbi_zlib_compressE8lengtheb:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	2
	.byte	2
	.byte	2
	.byte	2
	.byte	3
	.byte	3
	.byte	3
	.byte	3
	.byte	4
	.byte	4
	.byte	4
	.byte	4
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	0
	.align 32
__ZZ18stbi_zlib_compressE5distc:
	.word	1
	.word	2
	.word	3
	.word	4
	.word	5
	.word	7
	.word	9
	.word	13
	.word	17
	.word	25
	.word	33
	.word	49
	.word	65
	.word	97
	.word	129
	.word	193
	.word	257
	.word	385
	.word	513
	.word	769
	.word	1025
	.word	1537
	.word	2049
	.word	3073
	.word	4097
	.word	6145
	.word	8193
	.word	12289
	.word	16385
	.word	24577
	.word	-32768
	.align 4
__ZZ18stbi_zlib_compressE6disteb:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.byte	1
	.byte	2
	.byte	2
	.byte	3
	.byte	3
	.byte	4
	.byte	4
	.byte	5
	.byte	5
	.byte	6
	.byte	6
	.byte	7
	.byte	7
	.byte	8
	.byte	8
	.byte	9
	.byte	9
	.byte	10
	.byte	10
	.byte	11
	.byte	11
	.byte	12
	.byte	12
	.byte	13
	.byte	13
	.section .rdata,"dr"
LC15:
	.ascii "d <= 32767 && best <= 258\0"
	.text
	.globl	_stbi_zlib_compress
	.def	_stbi_zlib_compress;	.scl	2;	.type	32;	.endef
_stbi_zlib_compress:
LFB1768:
	.loc 5 883 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%esi
	pushl	%ebx
	subl	$96, %esp
	.cfi_offset 6, -12
	.cfi_offset 3, -16
	.loc 5 892 17
	movl	$0, -56(%ebp)
	.loc 5 893 13
	movl	$0, -60(%ebp)
	.loc 5 894 19
	movl	$0, -64(%ebp)
	.loc 5 895 53
	movl	$65536, (%esp)
	call	_malloc
	movl	%eax, -32(%ebp)
	.loc 5 896 4
	cmpl	$0, -32(%ebp)
	jne	L239
	.loc 5 897 14
	movl	$0, %eax
	jmp	L304
L239:
	.loc 5 898 4
	cmpl	$4, 20(%ebp)
	jg	L241
	.loc 5 898 29 discriminator 1
	movl	$5, 20(%ebp)
L241:
	.loc 5 900 4
	movl	-64(%ebp), %eax
	testl	%eax, %eax
	je	L242
	.loc 5 900 4 is_stmt 0 discriminator 2
	movl	-64(%ebp), %eax
	subl	$4, %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	-64(%ebp), %eax
	subl	$8, %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jl	L243
L242:
	.loc 5 900 4 discriminator 3
	movl	$1, 8(%esp)
	movl	$1, 4(%esp)
	leal	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbiw__sbgrowfPPvii
L243:
	.loc 5 900 4 discriminator 5
	movl	-64(%ebp), %ebx
	movl	-64(%ebp), %eax
	leal	-4(%eax), %edx
	movl	(%edx), %eax
	leal	1(%eax), %ecx
	movl	%ecx, (%edx)
	addl	%ebx, %eax
	movb	$120, (%eax)
	.loc 5 901 4 is_stmt 1 discriminator 5
	movl	-64(%ebp), %eax
	testl	%eax, %eax
	je	L244
	.loc 5 901 4 is_stmt 0 discriminator 2
	movl	-64(%ebp), %eax
	subl	$4, %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	-64(%ebp), %eax
	subl	$8, %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jl	L245
L244:
	.loc 5 901 4 discriminator 3
	movl	$1, 8(%esp)
	movl	$1, 4(%esp)
	leal	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbiw__sbgrowfPPvii
L245:
	.loc 5 901 4 discriminator 5
	movl	-64(%ebp), %ebx
	movl	-64(%ebp), %eax
	leal	-4(%eax), %edx
	movl	(%edx), %eax
	leal	1(%eax), %ecx
	movl	%ecx, (%edx)
	addl	%ebx, %eax
	movb	$94, (%eax)
	.loc 5 902 4 is_stmt 1 discriminator 5
	movl	-60(%ebp), %eax
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	movl	%eax, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
	.loc 5 903 4 discriminator 5
	movl	-60(%ebp), %eax
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	movl	%eax, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
	.loc 5 905 10 discriminator 5
	movl	$0, -12(%ebp)
L247:
	.loc 5 905 16 discriminator 3
	cmpl	$16383, -12(%ebp)
	jg	L246
	.loc 5 906 19 discriminator 2
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 5 906 21 discriminator 2
	movl	$0, (%eax)
	.loc 5 905 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L247
L246:
	.loc 5 908 5
	movl	$0, -12(%ebp)
L283:
	.loc 5 909 23
	movl	12(%ebp), %eax
	subl	$3, %eax
	.loc 5 909 13
	cmpl	%eax, -12(%ebp)
	jge	L248
LBB47:
	.loc 5 911 27
	movl	-12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL12stbiw__zhashPh
	.loc 5 911 51
	andl	$16383, %eax
	movl	%eax, -36(%ebp)
	.loc 5 911 54
	movl	$3, -20(%ebp)
	.loc 5 912 22
	movl	$0, -24(%ebp)
	.loc 5 913 43
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 5 913 23
	movl	%eax, -68(%ebp)
	.loc 5 914 15
	movl	-68(%ebp), %eax
	testl	%eax, %eax
	je	L249
	.loc 5 914 15 is_stmt 0 discriminator 1
	movl	-68(%ebp), %eax
	movl	-4(%eax), %eax
	jmp	L250
L249:
	.loc 5 914 15 discriminator 2
	movl	$0, %eax
L250:
	.loc 5 914 11 is_stmt 1 discriminator 4
	movl	%eax, -40(%ebp)
LBB48:
	.loc 5 915 13 discriminator 4
	movl	$0, -16(%ebp)
L254:
	.loc 5 915 19 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	-40(%ebp), %eax
	jge	L251
LBB49:
LBB50:
	.loc 5 916 28
	movl	-12(%ebp), %eax
	leal	-32767(%eax), %ecx
	.loc 5 916 21
	movl	-68(%ebp), %eax
	movl	-16(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 5 916 22
	subl	8(%ebp), %eax
	.loc 5 916 10
	cmpl	%eax, %ecx
	jg	L252
LBB51:
	.loc 5 917 39
	movl	12(%ebp), %eax
	subl	-12(%ebp), %eax
	movl	%eax, %edx
	movl	-12(%ebp), %ecx
	movl	8(%ebp), %eax
	addl	%eax, %ecx
	.loc 5 917 47
	movl	-68(%ebp), %eax
	movl	-16(%ebp), %ebx
	sall	$2, %ebx
	addl	%ebx, %eax
	.loc 5 917 39
	movl	(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_countmPhS_i
	.loc 5 917 68
	movl	%eax, -44(%ebp)
	.loc 5 918 13
	movl	-44(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jl	L252
	.loc 5 918 34 discriminator 1
	movl	-44(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 5 918 53 discriminator 1
	movl	-68(%ebp), %eax
	movl	-16(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	.loc 5 918 45 discriminator 1
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
L252:
LBE51:
LBE50:
LBE49:
	.loc 5 915 7 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L254
L251:
LBE48:
	.loc 5 922 23
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 5 922 7
	testl	%eax, %eax
	je	L255
	.loc 5 922 28 discriminator 1
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	subl	$4, %eax
	movl	(%eax), %eax
	.loc 5 922 58 discriminator 1
	movl	20(%ebp), %edx
	addl	%edx, %edx
	.loc 5 922 25 discriminator 1
	cmpl	%edx, %eax
	jne	L255
	.loc 5 923 10
	movl	20(%ebp), %eax
	leal	0(,%eax,4), %ecx
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	20(%ebp), %edx
	sall	$2, %edx
	addl	%eax, %edx
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %ebx
	movl	-32(%ebp), %eax
	addl	%ebx, %eax
	movl	(%eax), %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_memmove
	.loc 5 924 10
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	leal	-4(%eax), %edx
	.loc 5 924 36
	movl	20(%ebp), %eax
	movl	%eax, (%edx)
L255:
	.loc 5 926 7
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	L256
	.loc 5 926 7 is_stmt 0 discriminator 2
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	subl	$4, %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	movl	(%eax), %eax
	subl	$8, %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jl	L257
L256:
	.loc 5 926 7 discriminator 3
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	$4, 8(%esp)
	movl	$1, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbiw__sbgrowfPPvii
L257:
	.loc 5 926 7 discriminator 5
	movl	-12(%ebp), %ebx
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %esi
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	leal	-4(%eax), %edx
	movl	(%edx), %eax
	leal	1(%eax), %ecx
	movl	%ecx, (%edx)
	sall	$2, %eax
	addl	%esi, %eax
	movl	8(%ebp), %edx
	addl	%ebx, %edx
	movl	%edx, (%eax)
LBB52:
	.loc 5 928 7 is_stmt 1 discriminator 5
	cmpl	$0, -24(%ebp)
	je	L258
LBB53:
	.loc 5 930 33
	movl	-12(%ebp), %eax
	leal	1(%eax), %edx
	.loc 5 930 26
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL12stbiw__zhashPh
	.loc 5 930 12
	andl	$16383, %eax
	movl	%eax, -36(%ebp)
	.loc 5 931 30
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 5 931 16
	movl	%eax, -68(%ebp)
	.loc 5 932 14
	movl	-68(%ebp), %eax
	testl	%eax, %eax
	je	L259
	.loc 5 932 14 is_stmt 0 discriminator 1
	movl	-68(%ebp), %eax
	movl	-4(%eax), %eax
	jmp	L260
L259:
	.loc 5 932 14 discriminator 2
	movl	$0, %eax
L260:
	.loc 5 932 12 is_stmt 1 discriminator 4
	movl	%eax, -40(%ebp)
LBB54:
	.loc 5 933 16 discriminator 4
	movl	$0, -16(%ebp)
L264:
	.loc 5 933 22 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	-40(%ebp), %eax
	jge	L258
LBB55:
LBB56:
	.loc 5 934 31
	movl	-12(%ebp), %eax
	leal	-32766(%eax), %ecx
	.loc 5 934 24
	movl	-68(%ebp), %eax
	movl	-16(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 5 934 25
	subl	8(%ebp), %eax
	.loc 5 934 13
	cmpl	%eax, %ecx
	jg	L262
LBB57:
	.loc 5 935 71
	movl	12(%ebp), %eax
	subl	-12(%ebp), %eax
	.loc 5 935 42
	leal	-1(%eax), %ecx
	.loc 5 935 59
	movl	-12(%ebp), %eax
	leal	1(%eax), %edx
	.loc 5 935 42
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 5 935 50
	movl	-68(%ebp), %eax
	movl	-16(%ebp), %ebx
	sall	$2, %ebx
	addl	%ebx, %eax
	.loc 5 935 42
	movl	(%eax), %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_countmPhS_i
	.loc 5 935 75
	movl	%eax, -48(%ebp)
	.loc 5 936 16
	movl	-48(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jle	L262
	.loc 5 937 27
	movl	$0, -24(%ebp)
	.loc 5 938 19
	jmp	L258
L262:
LBE57:
LBE56:
LBE55:
	.loc 5 933 10 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L264
L258:
LBE54:
LBE53:
LBE52:
LBB58:
	.loc 5 944 7
	cmpl	$0, -24(%ebp)
	je	L265
LBB59:
	.loc 5 945 29
	movl	-12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 5 945 14
	subl	-24(%ebp), %eax
	movl	%eax, -52(%ebp)
	.loc 5 946 10
	cmpl	$32767, -52(%ebp)
	jg	L266
	.loc 5 946 10 is_stmt 0 discriminator 1
	cmpl	$258, -20(%ebp)
	jle	L305
L266:
	.loc 5 946 10 discriminator 4
	movl	$946, 8(%esp)
	movl	$LC4, 4(%esp)
	movl	$LC15, (%esp)
	call	__assert
	jmp	L269
L305:
	.loc 5 946 10
	nop
L269:
	.loc 5 947 16 is_stmt 1
	movl	$0, -16(%ebp)
L271:
	.loc 5 947 36 discriminator 3
	movl	-16(%ebp), %eax
	addl	$1, %eax
	.loc 5 947 38 discriminator 3
	movzwl	__ZZ18stbi_zlib_compressE7lengthc(%eax,%eax), %eax
	movzwl	%ax, %eax
	.loc 5 947 25 discriminator 3
	cmpl	%eax, -20(%ebp)
	jl	L270
	.loc 5 947 10 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L271
L270:
	.loc 5 948 10
	cmpl	$-113, -16(%ebp)
	jge	L272
	.loc 5 948 10 is_stmt 0 discriminator 1
	movl	-16(%ebp), %eax
	addl	$305, %eax
	movl	$8, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_bitrevii
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	addl	$8, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
	jmp	L273
L272:
	.loc 5 948 10 discriminator 2
	cmpl	$-1, -16(%ebp)
	jge	L274
	.loc 5 948 10 discriminator 4
	movl	-16(%ebp), %eax
	addl	$513, %eax
	movl	$9, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_bitrevii
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	addl	$9, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
	jmp	L273
L274:
	.loc 5 948 10 discriminator 5
	cmpl	$22, -16(%ebp)
	jg	L275
	.loc 5 948 10 discriminator 7
	movl	-16(%ebp), %eax
	addl	$1, %eax
	movl	$7, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_bitrevii
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	addl	$7, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
	jmp	L273
L275:
	.loc 5 948 10 discriminator 8
	movl	-16(%ebp), %eax
	addl	$169, %eax
	movl	$8, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_bitrevii
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	addl	$8, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
L273:
	.loc 5 949 24 is_stmt 1
	movl	-16(%ebp), %eax
	addl	$__ZZ18stbi_zlib_compressE8lengtheb, %eax
	movzbl	(%eax), %eax
	.loc 5 949 10
	testb	%al, %al
	je	L276
	.loc 5 949 27 discriminator 1
	movl	-16(%ebp), %eax
	movzwl	__ZZ18stbi_zlib_compressE7lengthc(%eax,%eax), %eax
	movzwl	%ax, %eax
	movl	-20(%ebp), %edx
	subl	%eax, %edx
	movl	-60(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	movl	%eax, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-16(%ebp), %eax
	addl	$__ZZ18stbi_zlib_compressE8lengtheb, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	-60(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
L276:
	.loc 5 950 16
	movl	$0, -16(%ebp)
L278:
	.loc 5 950 31 discriminator 3
	movl	-16(%ebp), %eax
	addl	$1, %eax
	.loc 5 950 33 discriminator 3
	movzwl	__ZZ18stbi_zlib_compressE5distc(%eax,%eax), %eax
	movzwl	%ax, %eax
	.loc 5 950 22 discriminator 3
	cmpl	%eax, -52(%ebp)
	jl	L277
	.loc 5 950 10 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L278
L277:
	.loc 5 951 10
	movl	$5, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_bitrevii
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	addl	$5, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
	.loc 5 952 22
	movl	-16(%ebp), %eax
	addl	$__ZZ18stbi_zlib_compressE6disteb, %eax
	movzbl	(%eax), %eax
	.loc 5 952 10
	testb	%al, %al
	je	L279
	.loc 5 952 25 discriminator 1
	movl	-16(%ebp), %eax
	movzwl	__ZZ18stbi_zlib_compressE5distc(%eax,%eax), %eax
	movzwl	%ax, %eax
	movl	-52(%ebp), %edx
	subl	%eax, %edx
	movl	-60(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	movl	%eax, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-16(%ebp), %eax
	addl	$__ZZ18stbi_zlib_compressE6disteb, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	-60(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
L279:
	.loc 5 953 12
	movl	-20(%ebp), %eax
	addl	%eax, -12(%ebp)
LBE59:
	jmp	L283
L265:
	.loc 5 955 10
	movl	-12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	cmpb	$-113, %al
	ja	L281
	.loc 5 955 10 is_stmt 0 discriminator 1
	movl	-12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	addl	$48, %eax
	movl	$8, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_bitrevii
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	addl	$8, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
	jmp	L282
L281:
	.loc 5 955 10 discriminator 2
	movl	-12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	addl	$256, %eax
	movl	$9, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_bitrevii
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	addl	$9, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
L282:
	.loc 5 956 10 is_stmt 1
	addl	$1, -12(%ebp)
LBE58:
LBE47:
	.loc 5 909 4
	jmp	L283
L248:
	.loc 5 960 12 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L284
	.loc 5 961 7
	movl	-12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	cmpb	$-113, %al
	ja	L285
	.loc 5 961 7 is_stmt 0 discriminator 1
	movl	-12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	addl	$48, %eax
	movl	$8, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_bitrevii
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	addl	$8, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
	jmp	L286
L285:
	.loc 5 961 7 discriminator 2
	movl	-12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	addl	$256, %eax
	movl	$9, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_bitrevii
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	addl	$9, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
L286:
	.loc 5 960 4 is_stmt 1
	addl	$1, -12(%ebp)
	jmp	L248
L284:
	.loc 5 962 4
	movl	$7, 4(%esp)
	movl	$0, (%esp)
	call	__ZL18stbiw__zlib_bitrevii
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	-56(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	addl	$7, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
L288:
	.loc 5 964 11
	movl	-60(%ebp), %eax
	testl	%eax, %eax
	je	L287
	.loc 5 965 7
	movl	-56(%ebp), %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -60(%ebp)
	movl	-64(%ebp), %eax
	leal	-60(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbiw__zlib_flushfPhPjPi
	movl	%eax, -64(%ebp)
	.loc 5 964 4
	jmp	L288
L287:
	.loc 5 967 10
	movl	$0, -12(%ebp)
L291:
	.loc 5 967 16 discriminator 1
	cmpl	$16383, -12(%ebp)
	jg	L289
	.loc 5 968 14
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 5 968 7
	testl	%eax, %eax
	je	L290
	.loc 5 968 14 discriminator 1
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	subl	$8, %eax
	movl	%eax, (%esp)
	call	_free
L290:
	.loc 5 967 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L291
L289:
	.loc 5 969 4
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
LBB60:
	.loc 5 973 20
	movl	$1, -72(%ebp)
	.loc 5 973 26
	movl	$0, -76(%ebp)
	.loc 5 974 11
	movl	12(%ebp), %ecx
	movl	$1584310703, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$11, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	imull	$5552, %eax, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -28(%ebp)
	.loc 5 975 8
	movl	$0, -16(%ebp)
L295:
	.loc 5 976 16
	movl	-16(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L292
	.loc 5 977 16
	movl	$0, -12(%ebp)
L294:
	.loc 5 977 22 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jge	L293
	.loc 5 977 53 discriminator 2
	movl	-16(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 5 977 55 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 5 977 44 discriminator 2
	movl	-72(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -72(%ebp)
	.loc 5 977 61 discriminator 2
	movl	-76(%ebp), %edx
	movl	-72(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -76(%ebp)
	.loc 5 977 10 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L294
L293:
	.loc 5 978 13
	movl	-72(%ebp), %ecx
	movl	$-2146992015, %edx
	movl	%ecx, %eax
	mull	%edx
	movl	%edx, %eax
	shrl	$15, %eax
	imull	$65521, %eax, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -72(%ebp)
	.loc 5 978 26
	movl	-76(%ebp), %ecx
	movl	$-2146992015, %edx
	movl	%ecx, %eax
	mull	%edx
	movl	%edx, %eax
	shrl	$15, %eax
	imull	$65521, %eax, %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -76(%ebp)
	.loc 5 979 12
	movl	-28(%ebp), %eax
	addl	%eax, -16(%ebp)
	.loc 5 980 19
	movl	$5552, -28(%ebp)
	.loc 5 976 7
	jmp	L295
L292:
	.loc 5 982 7
	movl	-64(%ebp), %eax
	testl	%eax, %eax
	je	L296
	.loc 5 982 7 is_stmt 0 discriminator 2
	movl	-64(%ebp), %eax
	subl	$4, %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	-64(%ebp), %eax
	subl	$8, %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jl	L297
L296:
	.loc 5 982 7 discriminator 3
	movl	$1, 8(%esp)
	movl	$1, 4(%esp)
	leal	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbiw__sbgrowfPPvii
L297:
	.loc 5 982 7 discriminator 5
	movl	-76(%ebp), %eax
	shrl	$8, %eax
	movl	%eax, %esi
	movl	-64(%ebp), %ebx
	movl	-64(%ebp), %eax
	leal	-4(%eax), %edx
	movl	(%edx), %eax
	leal	1(%eax), %ecx
	movl	%ecx, (%edx)
	addl	%ebx, %eax
	movl	%esi, %edx
	movb	%dl, (%eax)
	.loc 5 983 7 is_stmt 1 discriminator 5
	movl	-64(%ebp), %eax
	testl	%eax, %eax
	je	L298
	.loc 5 983 7 is_stmt 0 discriminator 2
	movl	-64(%ebp), %eax
	subl	$4, %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	-64(%ebp), %eax
	subl	$8, %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jl	L299
L298:
	.loc 5 983 7 discriminator 3
	movl	$1, 8(%esp)
	movl	$1, 4(%esp)
	leal	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbiw__sbgrowfPPvii
L299:
	.loc 5 983 7 discriminator 5
	movl	-76(%ebp), %esi
	movl	-64(%ebp), %ebx
	movl	-64(%ebp), %eax
	leal	-4(%eax), %edx
	movl	(%edx), %eax
	leal	1(%eax), %ecx
	movl	%ecx, (%edx)
	addl	%ebx, %eax
	movl	%esi, %edx
	movb	%dl, (%eax)
	.loc 5 984 7 is_stmt 1 discriminator 5
	movl	-64(%ebp), %eax
	testl	%eax, %eax
	je	L300
	.loc 5 984 7 is_stmt 0 discriminator 2
	movl	-64(%ebp), %eax
	subl	$4, %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	-64(%ebp), %eax
	subl	$8, %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jl	L301
L300:
	.loc 5 984 7 discriminator 3
	movl	$1, 8(%esp)
	movl	$1, 4(%esp)
	leal	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbiw__sbgrowfPPvii
L301:
	.loc 5 984 7 discriminator 5
	movl	-72(%ebp), %eax
	shrl	$8, %eax
	movl	%eax, %esi
	movl	-64(%ebp), %ebx
	movl	-64(%ebp), %eax
	leal	-4(%eax), %edx
	movl	(%edx), %eax
	leal	1(%eax), %ecx
	movl	%ecx, (%edx)
	addl	%ebx, %eax
	movl	%esi, %edx
	movb	%dl, (%eax)
	.loc 5 985 7 is_stmt 1 discriminator 5
	movl	-64(%ebp), %eax
	testl	%eax, %eax
	je	L302
	.loc 5 985 7 is_stmt 0 discriminator 2
	movl	-64(%ebp), %eax
	subl	$4, %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	-64(%ebp), %eax
	subl	$8, %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jl	L303
L302:
	.loc 5 985 7 discriminator 3
	movl	$1, 8(%esp)
	movl	$1, 4(%esp)
	leal	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbiw__sbgrowfPPvii
L303:
	.loc 5 985 7 discriminator 5
	movl	-72(%ebp), %esi
	movl	-64(%ebp), %ebx
	movl	-64(%ebp), %eax
	leal	-4(%eax), %edx
	movl	(%edx), %eax
	leal	1(%eax), %ecx
	movl	%ecx, (%edx)
	addl	%ebx, %eax
	movl	%esi, %edx
	movb	%dl, (%eax)
LBE60:
	.loc 5 987 13 is_stmt 1 discriminator 5
	movl	-64(%ebp), %eax
	movl	-4(%eax), %edx
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 5 989 4 discriminator 5
	movl	16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, %ecx
	movl	-64(%ebp), %eax
	movl	-64(%ebp), %edx
	subl	$8, %edx
	movl	%ecx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	_memmove
	.loc 5 990 11 discriminator 5
	movl	-64(%ebp), %eax
	.loc 5 990 29 discriminator 5
	subl	$8, %eax
L304:
	.loc 5 992 1 discriminator 1
	addl	$96, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1768:
	.data
	.align 32
__ZZL12stbiw__crc32PhiE9crc_table:
	.long	0
	.long	1996959894
	.long	-301047508
	.long	-1727442502
	.long	124634137
	.long	1886057615
	.long	-379345611
	.long	-1637575261
	.long	249268274
	.long	2044508324
	.long	-522852066
	.long	-1747789432
	.long	162941995
	.long	2125561021
	.long	-407360249
	.long	-1866523247
	.long	498536548
	.long	1789927666
	.long	-205950648
	.long	-2067906082
	.long	450548861
	.long	1843258603
	.long	-187386543
	.long	-2083289657
	.long	325883990
	.long	1684777152
	.long	-43845254
	.long	-1973040660
	.long	335633487
	.long	1661365465
	.long	-99664541
	.long	-1928851979
	.long	997073096
	.long	1281953886
	.long	-715111964
	.long	-1570279054
	.long	1006888145
	.long	1258607687
	.long	-770865667
	.long	-1526024853
	.long	901097722
	.long	1119000684
	.long	-608450090
	.long	-1396901568
	.long	853044451
	.long	1172266101
	.long	-589951537
	.long	-1412350631
	.long	651767980
	.long	1373503546
	.long	-925412992
	.long	-1076862698
	.long	565507253
	.long	1454621731
	.long	-809855591
	.long	-1195530993
	.long	671266974
	.long	1594198024
	.long	-972236366
	.long	-1324619484
	.long	795835527
	.long	1483230225
	.long	-1050600021
	.long	-1234817731
	.long	1994146192
	.long	31158534
	.long	-1731059524
	.long	-271249366
	.long	1907459465
	.long	112637215
	.long	-1614814043
	.long	-390540237
	.long	2013776290
	.long	251722036
	.long	-1777751922
	.long	-519137256
	.long	2137656763
	.long	141376813
	.long	-1855689577
	.long	-429695999
	.long	1802195444
	.long	476864866
	.long	-2056965928
	.long	-228458418
	.long	1812370925
	.long	453092731
	.long	-2113342271
	.long	-183516073
	.long	1706088902
	.long	314042704
	.long	-1950435094
	.long	-54949764
	.long	1658658271
	.long	366619977
	.long	-1932296973
	.long	-69972891
	.long	1303535960
	.long	984961486
	.long	-1547960204
	.long	-725929758
	.long	1256170817
	.long	1037604311
	.long	-1529756563
	.long	-740887301
	.long	1131014506
	.long	879679996
	.long	-1385723834
	.long	-631195440
	.long	1141124467
	.long	855842277
	.long	-1442165665
	.long	-586318647
	.long	1342533948
	.long	654459306
	.long	-1106571248
	.long	-921952122
	.long	1466479909
	.long	544179635
	.long	-1184443383
	.long	-832445281
	.long	1591671054
	.long	702138776
	.long	-1328506846
	.long	-942167884
	.long	1504918807
	.long	783551873
	.long	-1212326853
	.long	-1061524307
	.long	-306674912
	.long	-1698712650
	.long	62317068
	.long	1957810842
	.long	-355121351
	.long	-1647151185
	.long	81470997
	.long	1943803523
	.long	-480048366
	.long	-1805370492
	.long	225274430
	.long	2053790376
	.long	-468791541
	.long	-1828061283
	.long	167816743
	.long	2097651377
	.long	-267414716
	.long	-2029476910
	.long	503444072
	.long	1762050814
	.long	-144550051
	.long	-2140837941
	.long	426522225
	.long	1852507879
	.long	-19653770
	.long	-1982649376
	.long	282753626
	.long	1742555852
	.long	-105259153
	.long	-1900089351
	.long	397917763
	.long	1622183637
	.long	-690576408
	.long	-1580100738
	.long	953729732
	.long	1340076626
	.long	-776247311
	.long	-1497606297
	.long	1068828381
	.long	1219638859
	.long	-670225446
	.long	-1358292148
	.long	906185462
	.long	1090812512
	.long	-547295293
	.long	-1469587627
	.long	829329135
	.long	1181335161
	.long	-882789492
	.long	-1134132454
	.long	628085408
	.long	1382605366
	.long	-871598187
	.long	-1156888829
	.long	570562233
	.long	1426400815
	.long	-977650754
	.long	-1296233688
	.long	733239954
	.long	1555261956
	.long	-1026031705
	.long	-1244606671
	.long	752459403
	.long	1541320221
	.long	-1687895376
	.long	-328994266
	.long	1969922972
	.long	40735498
	.long	-1677130071
	.long	-351390145
	.long	1913087877
	.long	83908371
	.long	-1782625662
	.long	-491226604
	.long	2075208622
	.long	213261112
	.long	-1831694693
	.long	-438977011
	.long	2094854071
	.long	198958881
	.long	-2032938284
	.long	-237706686
	.long	1759359992
	.long	534414190
	.long	-2118248755
	.long	-155638181
	.long	1873836001
	.long	414664567
	.long	-2012718362
	.long	-15766928
	.long	1711684554
	.long	285281116
	.long	-1889165569
	.long	-127750551
	.long	1634467795
	.long	376229701
	.long	-1609899400
	.long	-686959890
	.long	1308918612
	.long	956543938
	.long	-1486412191
	.long	-799009033
	.long	1231636301
	.long	1047427035
	.long	-1362007478
	.long	-640263460
	.long	1088359270
	.long	936918000
	.long	-1447252397
	.long	-558129467
	.long	1202900863
	.long	817233897
	.long	-1111625188
	.long	-893730166
	.long	1404277552
	.long	615818150
	.long	-1160759803
	.long	-841546093
	.long	1423857449
	.long	601450431
	.long	-1285129682
	.long	-1000256840
	.long	1567103746
	.long	711928724
	.long	-1274298825
	.long	-1022587231
	.long	1510334235
	.long	755167117
	.text
	.def	__ZL12stbiw__crc32Phi;	.scl	3;	.type	32;	.endef
__ZL12stbiw__crc32Phi:
LFB1769:
	.loc 5 995 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 5 1035 17
	movl	$-1, -4(%ebp)
	.loc 5 1037 10
	movl	$0, -8(%ebp)
L308:
	.loc 5 1037 16 discriminator 3
	movl	-8(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L307
	.loc 5 1038 18 discriminator 2
	movl	-4(%ebp), %eax
	shrl	$8, %eax
	movl	%eax, %ecx
	.loc 5 1038 44 discriminator 2
	movl	-8(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 5 1038 53 discriminator 2
	movl	-4(%ebp), %eax
	movzbl	%al, %eax
	.loc 5 1038 46 discriminator 2
	xorl	%edx, %eax
	.loc 5 1038 60 discriminator 2
	movl	__ZZL12stbiw__crc32PhiE9crc_table(,%eax,4), %eax
	.loc 5 1038 11 discriminator 2
	xorl	%ecx, %eax
	movl	%eax, -4(%ebp)
	.loc 5 1037 4 discriminator 2
	addl	$1, -8(%ebp)
	jmp	L308
L307:
	.loc 5 1039 12
	movl	-4(%ebp), %eax
	notl	%eax
	.loc 5 1041 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1769:
	.def	__ZL12stbiw__wpcrcPPhi;	.scl	3;	.type	32;	.endef
__ZL12stbiw__wpcrcPPhi:
LFB1770:
	.loc 5 1048 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$24, %esp
	.cfi_offset 3, -12
	.loc 5 1049 35
	movl	12(%ebp), %eax
	leal	4(%eax), %edx
	.loc 5 1049 36
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1049 48
	movl	12(%ebp), %ecx
	movl	$-4, %ebx
	subl	%ecx, %ebx
	movl	%ebx, %ecx
	.loc 5 1049 35
	addl	%ecx, %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL12stbiw__crc32Phi
	.loc 5 1049 58
	movl	%eax, -8(%ebp)
	.loc 5 1050 4
	movl	-8(%ebp), %eax
	shrl	$24, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movb	%dl, (%eax)
	movl	-8(%ebp), %eax
	shrl	$16, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	addl	$1, %eax
	movb	%dl, (%eax)
	movl	-8(%ebp), %eax
	shrl	$8, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	addl	$2, %eax
	movb	%dl, (%eax)
	movl	-8(%ebp), %edx
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	addl	$3, %eax
	movb	%dl, (%eax)
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	leal	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 5 1051 1
	nop
	addl	$24, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1770:
	.def	__ZL12stbiw__paethiii;	.scl	3;	.type	32;	.endef
__ZL12stbiw__paethiii:
LFB1771:
	.loc 5 1054 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 5 1055 14
	movl	8(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%eax, %edx
	.loc 5 1055 18
	movl	16(%ebp), %eax
	.loc 5 1055 8
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -4(%ebp)
	.loc 5 1055 33
	movl	8(%ebp), %eax
	movl	-4(%ebp), %edx
	subl	%eax, %edx
	.loc 5 1055 23
	movl	%edx, %eax
	sarl	$31, %eax
	xorl	%eax, %edx
	movl	%edx, -8(%ebp)
	subl	%eax, -8(%ebp)
	.loc 5 1055 48
	movl	12(%ebp), %eax
	movl	-4(%ebp), %edx
	subl	%eax, %edx
	.loc 5 1055 38
	movl	%edx, %eax
	sarl	$31, %eax
	xorl	%eax, %edx
	movl	%edx, -12(%ebp)
	subl	%eax, -12(%ebp)
	.loc 5 1055 63
	movl	16(%ebp), %eax
	movl	-4(%ebp), %edx
	subl	%eax, %edx
	.loc 5 1055 53
	movl	%edx, %eax
	sarl	$31, %eax
	xorl	%eax, %edx
	movl	%edx, -16(%ebp)
	subl	%eax, -16(%ebp)
	.loc 5 1056 4
	movl	-8(%ebp), %eax
	cmpl	-12(%ebp), %eax
	jg	L312
	.loc 5 1056 17 discriminator 1
	movl	-8(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jg	L312
	.loc 5 1056 37 discriminator 2
	movl	8(%ebp), %eax
	jmp	L313
L312:
	.loc 5 1057 4
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jg	L314
	.loc 5 1057 25 discriminator 1
	movl	12(%ebp), %eax
	jmp	L313
L314:
	.loc 5 1058 11
	movl	16(%ebp), %eax
L313:
	.loc 5 1059 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1771:
	.data
	.align 4
__ZZL22stbiw__encode_png_linePhiiiiiiPaE7mapping:
	.long	0
	.long	1
	.long	2
	.long	3
	.long	4
	.align 4
__ZZL22stbiw__encode_png_linePhiiiiiiPaE8firstmap:
	.long	0
	.long	1
	.long	0
	.long	5
	.long	6
	.text
	.def	__ZL22stbiw__encode_png_linePhiiiiiiPa;	.scl	3;	.type	32;	.endef
__ZL22stbiw__encode_png_linePhiiiiiiPa:
LFB1772:
	.loc 5 1063 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%esi
	pushl	%ebx
	subl	$48, %esp
	.cfi_offset 6, -12
	.cfi_offset 3, -16
	.loc 5 1066 9
	cmpl	$0, 24(%ebp)
	je	L316
	.loc 5 1066 9 is_stmt 0 discriminator 1
	movl	$__ZZL22stbiw__encode_png_linePhiiiiiiPaE7mapping, %eax
	jmp	L317
L316:
	.loc 5 1066 9 discriminator 2
	movl	$__ZZL22stbiw__encode_png_linePhiiiiiiPaE8firstmap, %eax
L317:
	.loc 5 1066 9 discriminator 4
	movl	%eax, -16(%ebp)
	.loc 5 1068 32 is_stmt 1 discriminator 4
	movl	32(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1068 8 discriminator 4
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 5 1069 94 discriminator 4
	movl	__ZL30stbi__flip_vertically_on_write, %eax
	.loc 5 1069 79 discriminator 4
	testl	%eax, %eax
	je	L318
	.loc 5 1069 87 discriminator 1
	movl	20(%ebp), %eax
	subl	$1, %eax
	.loc 5 1069 79 discriminator 1
	subl	24(%ebp), %eax
	jmp	L319
L318:
	.loc 5 1069 79 is_stmt 0 discriminator 2
	movl	24(%ebp), %eax
L319:
	.loc 5 1069 45 is_stmt 1 discriminator 4
	imull	12(%ebp), %eax
	movl	%eax, %edx
	.loc 5 1069 19 discriminator 4
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 5 1070 73 discriminator 4
	movl	__ZL30stbi__flip_vertically_on_write, %eax
	.loc 5 1070 55 discriminator 4
	testl	%eax, %eax
	je	L320
	.loc 5 1070 55 is_stmt 0 discriminator 1
	movl	12(%ebp), %eax
	negl	%eax
	jmp	L321
L320:
	.loc 5 1070 55 discriminator 2
	movl	12(%ebp), %eax
L321:
	.loc 5 1070 8 is_stmt 1 discriminator 4
	movl	%eax, -28(%ebp)
	.loc 5 1072 4 discriminator 4
	cmpl	$0, -20(%ebp)
	jne	L322
	.loc 5 1073 35
	movl	16(%ebp), %eax
	imull	28(%ebp), %eax
	.loc 5 1073 13
	movl	%eax, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	36(%ebp), %eax
	movl	%eax, (%esp)
	call	_memcpy
	.loc 5 1074 7
	jmp	L315
L322:
	.loc 5 1078 11
	movl	$0, -12(%ebp)
L333:
	.loc 5 1078 18 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	28(%ebp), %eax
	jge	L324
	.loc 5 1079 7
	cmpl	$6, -20(%ebp)
	ja	L325
	movl	-20(%ebp), %eax
	sall	$2, %eax
	addl	$L327, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section .rdata,"dr"
	.align 4
L327:
	.long	L325
	.long	L332
	.long	L331
	.long	L330
	.long	L329
	.long	L328
	.long	L326
	.text
L332:
	.loc 5 1080 38
	movl	-12(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ecx
	.loc 5 1080 31
	movl	-12(%ebp), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1080 38
	movl	%ecx, %edx
	.loc 5 1080 33
	movb	%dl, (%eax)
	.loc 5 1080 41
	jmp	L325
L331:
	.loc 5 1081 38
	movl	-12(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 5 1081 45
	movl	-12(%ebp), %eax
	subl	-28(%ebp), %eax
	movl	%eax, %ecx
	.loc 5 1081 59
	movl	-24(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 5 1081 40
	movl	%edx, %ecx
	subl	%eax, %ecx
	.loc 5 1081 31
	movl	-12(%ebp), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1081 40
	movl	%ecx, %edx
	.loc 5 1081 33
	movb	%dl, (%eax)
	.loc 5 1081 62
	jmp	L325
L330:
	.loc 5 1082 38
	movl	-12(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 5 1082 46
	movl	-12(%ebp), %eax
	subl	-28(%ebp), %eax
	movl	%eax, %ecx
	.loc 5 1082 60
	movl	-24(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 5 1082 61
	sarl	%eax
	.loc 5 1082 40
	movl	%edx, %ecx
	subl	%eax, %ecx
	.loc 5 1082 31
	movl	-12(%ebp), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1082 40
	movl	%ecx, %edx
	.loc 5 1082 33
	movb	%dl, (%eax)
	.loc 5 1082 67
	jmp	L325
L329:
	.loc 5 1083 53
	movl	-12(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ebx
	.loc 5 1083 75
	movl	-12(%ebp), %eax
	subl	-28(%ebp), %eax
	movl	%eax, %edx
	.loc 5 1083 89
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 1083 69
	movzbl	%al, %eax
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	__ZL12stbiw__paethiii
	.loc 5 1083 55
	subl	%eax, %ebx
	movl	%ebx, %ecx
	.loc 5 1083 31
	movl	-12(%ebp), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1083 55
	movl	%ecx, %edx
	.loc 5 1083 33
	movb	%dl, (%eax)
	.loc 5 1083 96
	jmp	L325
L328:
	.loc 5 1084 38
	movl	-12(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ecx
	.loc 5 1084 31
	movl	-12(%ebp), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1084 38
	movl	%ecx, %edx
	.loc 5 1084 33
	movb	%dl, (%eax)
	.loc 5 1084 41
	jmp	L325
L326:
	.loc 5 1085 38
	movl	-12(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ecx
	.loc 5 1085 31
	movl	-12(%ebp), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1085 38
	movl	%ecx, %edx
	.loc 5 1085 33
	movb	%dl, (%eax)
	.loc 5 1085 41
	nop
L325:
	.loc 5 1078 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L333
L324:
	.loc 5 1088 4
	cmpl	$6, -20(%ebp)
	ja	L315
	movl	-20(%ebp), %eax
	sall	$2, %eax
	addl	$L335, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section .rdata,"dr"
	.align 4
L335:
	.long	L315
	.long	L340
	.long	L339
	.long	L338
	.long	L337
	.long	L336
	.long	L334
	.text
L340:
	.loc 5 1089 21
	movl	28(%ebp), %eax
	movl	%eax, -12(%ebp)
L342:
	.loc 5 1089 34 discriminator 3
	movl	16(%ebp), %eax
	imull	28(%ebp), %eax
	.loc 5 1089 27 discriminator 3
	cmpl	%eax, -12(%ebp)
	jge	L353
	.loc 5 1089 63 discriminator 2
	movl	-12(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 5 1089 70 discriminator 2
	movl	-12(%ebp), %eax
	subl	28(%ebp), %eax
	movl	%eax, %ecx
	.loc 5 1089 72 discriminator 2
	movl	-24(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 5 1089 65 discriminator 2
	movl	%edx, %ecx
	subl	%eax, %ecx
	.loc 5 1089 56 discriminator 2
	movl	-12(%ebp), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1089 65 discriminator 2
	movl	%ecx, %edx
	.loc 5 1089 58 discriminator 2
	movb	%dl, (%eax)
	.loc 5 1089 15 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L342
L339:
	.loc 5 1090 21
	movl	28(%ebp), %eax
	movl	%eax, -12(%ebp)
L344:
	.loc 5 1090 34 discriminator 3
	movl	16(%ebp), %eax
	imull	28(%ebp), %eax
	.loc 5 1090 27 discriminator 3
	cmpl	%eax, -12(%ebp)
	jge	L354
	.loc 5 1090 63 discriminator 2
	movl	-12(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 5 1090 70 discriminator 2
	movl	-12(%ebp), %eax
	subl	-28(%ebp), %eax
	movl	%eax, %ecx
	.loc 5 1090 84 discriminator 2
	movl	-24(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 5 1090 65 discriminator 2
	movl	%edx, %ecx
	subl	%eax, %ecx
	.loc 5 1090 56 discriminator 2
	movl	-12(%ebp), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1090 65 discriminator 2
	movl	%ecx, %edx
	.loc 5 1090 58 discriminator 2
	movb	%dl, (%eax)
	.loc 5 1090 15 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L344
L338:
	.loc 5 1091 21
	movl	28(%ebp), %eax
	movl	%eax, -12(%ebp)
L346:
	.loc 5 1091 34 discriminator 3
	movl	16(%ebp), %eax
	imull	28(%ebp), %eax
	.loc 5 1091 27 discriminator 3
	cmpl	%eax, -12(%ebp)
	jge	L355
	.loc 5 1091 63 discriminator 2
	movl	-12(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 5 1091 72 discriminator 2
	movl	-12(%ebp), %eax
	subl	28(%ebp), %eax
	movl	%eax, %ecx
	.loc 5 1091 74 discriminator 2
	movl	-24(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %ecx
	.loc 5 1091 81 discriminator 2
	movl	-12(%ebp), %eax
	subl	-28(%ebp), %eax
	movl	%eax, %ebx
	.loc 5 1091 95 discriminator 2
	movl	-24(%ebp), %eax
	addl	%ebx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 5 1091 76 discriminator 2
	addl	%ecx, %eax
	.loc 5 1091 97 discriminator 2
	sarl	%eax
	.loc 5 1091 65 discriminator 2
	movl	%edx, %ecx
	subl	%eax, %ecx
	.loc 5 1091 56 discriminator 2
	movl	-12(%ebp), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1091 65 discriminator 2
	movl	%ecx, %edx
	.loc 5 1091 58 discriminator 2
	movb	%dl, (%eax)
	.loc 5 1091 15 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L346
L337:
	.loc 5 1092 21
	movl	28(%ebp), %eax
	movl	%eax, -12(%ebp)
L348:
	.loc 5 1092 34 discriminator 3
	movl	16(%ebp), %eax
	imull	28(%ebp), %eax
	.loc 5 1092 27 discriminator 3
	cmpl	%eax, -12(%ebp)
	jge	L356
	.loc 5 1092 63 discriminator 2
	movl	-12(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ebx
	.loc 5 1092 111 discriminator 2
	movl	-12(%ebp), %eax
	subl	-28(%ebp), %eax
	.loc 5 1092 125 discriminator 2
	subl	28(%ebp), %eax
	movl	%eax, %edx
	.loc 5 1092 127 discriminator 2
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 1092 79 discriminator 2
	movzbl	%al, %ecx
	.loc 5 1092 91 discriminator 2
	movl	-12(%ebp), %eax
	subl	-28(%ebp), %eax
	movl	%eax, %edx
	.loc 5 1092 105 discriminator 2
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 1092 79 discriminator 2
	movzbl	%al, %edx
	.loc 5 1092 83 discriminator 2
	movl	-12(%ebp), %eax
	subl	28(%ebp), %eax
	movl	%eax, %esi
	.loc 5 1092 85 discriminator 2
	movl	-24(%ebp), %eax
	addl	%esi, %eax
	movzbl	(%eax), %eax
	.loc 5 1092 79 discriminator 2
	movzbl	%al, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL12stbiw__paethiii
	.loc 5 1092 65 discriminator 2
	subl	%eax, %ebx
	movl	%ebx, %ecx
	.loc 5 1092 56 discriminator 2
	movl	-12(%ebp), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1092 65 discriminator 2
	movl	%ecx, %edx
	.loc 5 1092 58 discriminator 2
	movb	%dl, (%eax)
	.loc 5 1092 15 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L348
L336:
	.loc 5 1093 21
	movl	28(%ebp), %eax
	movl	%eax, -12(%ebp)
L350:
	.loc 5 1093 34 discriminator 3
	movl	16(%ebp), %eax
	imull	28(%ebp), %eax
	.loc 5 1093 27 discriminator 3
	cmpl	%eax, -12(%ebp)
	jge	L357
	.loc 5 1093 63 discriminator 2
	movl	-12(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 5 1093 71 discriminator 2
	movl	-12(%ebp), %eax
	subl	28(%ebp), %eax
	movl	%eax, %ecx
	.loc 5 1093 73 discriminator 2
	movl	-24(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 5 1093 74 discriminator 2
	sarl	%eax
	.loc 5 1093 65 discriminator 2
	movl	%edx, %ecx
	subl	%eax, %ecx
	.loc 5 1093 56 discriminator 2
	movl	-12(%ebp), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1093 65 discriminator 2
	movl	%ecx, %edx
	.loc 5 1093 58 discriminator 2
	movb	%dl, (%eax)
	.loc 5 1093 15 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L350
L334:
	.loc 5 1094 21
	movl	28(%ebp), %eax
	movl	%eax, -12(%ebp)
L352:
	.loc 5 1094 34 discriminator 3
	movl	16(%ebp), %eax
	imull	28(%ebp), %eax
	.loc 5 1094 27 discriminator 3
	cmpl	%eax, -12(%ebp)
	jge	L358
	.loc 5 1094 63 discriminator 2
	movl	-12(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ebx
	.loc 5 1094 83 discriminator 2
	movl	-12(%ebp), %eax
	subl	28(%ebp), %eax
	movl	%eax, %edx
	.loc 5 1094 85 discriminator 2
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 1094 79 discriminator 2
	movzbl	%al, %eax
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL12stbiw__paethiii
	.loc 5 1094 65 discriminator 2
	subl	%eax, %ebx
	movl	%ebx, %ecx
	.loc 5 1094 56 discriminator 2
	movl	-12(%ebp), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1094 65 discriminator 2
	movl	%ecx, %edx
	.loc 5 1094 58 discriminator 2
	movb	%dl, (%eax)
	.loc 5 1094 15 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L352
L353:
	.loc 5 1089 75
	nop
	jmp	L315
L354:
	.loc 5 1090 87
	nop
	jmp	L315
L355:
	.loc 5 1091 103
	nop
	jmp	L315
L356:
	.loc 5 1092 131
	nop
	jmp	L315
L357:
	.loc 5 1093 80
	nop
	jmp	L315
L358:
	.loc 5 1094 94
	nop
L315:
	.loc 5 1096 1
	addl	$48, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1772:
	.section .rdata,"dr"
LC16:
	.ascii "o == out + *out_len\0"
	.text
	.globl	_stbi_write_png_to_mem
	.def	_stbi_write_png_to_mem;	.scl	2;	.type	32;	.endef
_stbi_write_png_to_mem:
LFB1773:
	.loc 5 1099 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$116, %esp
	.cfi_offset 3, -12
	.loc 5 1100 8
	movl	_stbi_write_force_png_filter, %eax
	movl	%eax, -12(%ebp)
	.loc 5 1101 8
	movl	$-1, -72(%ebp)
	movl	$0, -68(%ebp)
	movl	$4, -64(%ebp)
	movl	$2, -60(%ebp)
	movl	$6, -56(%ebp)
	.loc 5 1102 18
	movb	$-119, -80(%ebp)
	movb	$80, -79(%ebp)
	movb	$78, -78(%ebp)
	movb	$71, -77(%ebp)
	movb	$13, -76(%ebp)
	movb	$10, -75(%ebp)
	movb	$26, -74(%ebp)
	movb	$10, -73(%ebp)
	.loc 5 1107 4
	cmpl	$0, 12(%ebp)
	jne	L360
	.loc 5 1108 24
	movl	16(%ebp), %eax
	.loc 5 1108 20
	movl	24(%ebp), %edx
	imull	%edx, %eax
	movl	%eax, 12(%ebp)
L360:
	.loc 5 1110 4
	cmpl	$4, -12(%ebp)
	jle	L361
	.loc 5 1111 20
	movl	$-1, -12(%ebp)
L361:
	.loc 5 1114 29
	movl	16(%ebp), %eax
	imull	24(%ebp), %eax
	leal	1(%eax), %edx
	movl	20(%ebp), %eax
	imull	%edx, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -40(%ebp)
	.loc 5 1114 56
	cmpl	$0, -40(%ebp)
	jne	L362
	.loc 5 1114 74 discriminator 1
	movl	$0, %eax
	jmp	L379
L362:
	.loc 5 1115 34
	movl	16(%ebp), %eax
	imull	24(%ebp), %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -44(%ebp)
	.loc 5 1115 55
	cmpl	$0, -44(%ebp)
	jne	L364
	.loc 5 1115 75 discriminator 1
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 5 1115 100 discriminator 1
	movl	$0, %eax
	jmp	L379
L364:
LBB61:
	.loc 5 1116 10
	movl	$0, -16(%ebp)
L373:
	.loc 5 1116 16 discriminator 1
	movl	20(%ebp), %eax
	cmpl	%eax, -16(%ebp)
	jge	L365
LBB62:
LBB63:
	.loc 5 1118 7
	cmpl	$0, -12(%ebp)
	js	L366
	.loc 5 1119 22
	movl	-12(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 5 1120 32
	movl	20(%ebp), %ecx
	movl	16(%ebp), %edx
	movl	8(%ebp), %eax
	movl	-44(%ebp), %ebx
	movl	%ebx, 28(%esp)
	movl	-12(%ebp), %ebx
	movl	%ebx, 24(%esp)
	movl	24(%ebp), %ebx
	movl	%ebx, 20(%esp)
	movl	-16(%ebp), %ebx
	movl	%ebx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL22stbiw__encode_png_linePhiiiiiiPa
	jmp	L367
L366:
LBB64:
	.loc 5 1122 14
	movl	$0, -24(%ebp)
	.loc 5 1122 31
	movl	$2147483647, -28(%ebp)
	.loc 5 1123 27
	movl	$0, -20(%ebp)
L372:
	.loc 5 1123 44 discriminator 1
	cmpl	$4, -20(%ebp)
	jg	L368
	.loc 5 1124 35
	movl	20(%ebp), %ecx
	movl	16(%ebp), %edx
	movl	8(%ebp), %eax
	movl	-44(%ebp), %ebx
	movl	%ebx, 28(%esp)
	movl	-20(%ebp), %ebx
	movl	%ebx, 24(%esp)
	movl	24(%ebp), %ebx
	movl	%ebx, 20(%esp)
	movl	-16(%ebp), %ebx
	movl	%ebx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL22stbiw__encode_png_linePhiiiiiiPa
	.loc 5 1127 17
	movl	$0, -32(%ebp)
	.loc 5 1128 20
	movl	$0, -36(%ebp)
L370:
	.loc 5 1128 30 discriminator 3
	movl	16(%ebp), %eax
	imull	24(%ebp), %eax
	.loc 5 1128 27 discriminator 3
	cmpl	%eax, -36(%ebp)
	jge	L369
	.loc 5 1129 54 discriminator 2
	movl	-36(%ebp), %edx
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 1129 27 discriminator 2
	movsbl	%al, %eax
	.loc 5 1129 26 discriminator 2
	cltd
	xorl	%edx, %eax
	subl	%edx, %eax
	.loc 5 1129 20 discriminator 2
	addl	%eax, -32(%ebp)
	.loc 5 1128 13 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L370
L369:
	.loc 5 1131 13
	movl	-32(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jge	L371
	.loc 5 1132 32
	movl	-32(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 5 1133 28
	movl	-20(%ebp), %eax
	movl	%eax, -24(%ebp)
L371:
	.loc 5 1123 10 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L372
L368:
	.loc 5 1136 10
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	je	L367
	.loc 5 1137 35
	movl	20(%ebp), %ecx
	movl	16(%ebp), %edx
	movl	8(%ebp), %eax
	movl	-44(%ebp), %ebx
	movl	%ebx, 28(%esp)
	movl	-24(%ebp), %ebx
	movl	%ebx, 24(%esp)
	movl	24(%ebp), %ebx
	movl	%ebx, 20(%esp)
	movl	-16(%ebp), %ebx
	movl	%ebx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL22stbiw__encode_png_linePhiiiiiiPa
	.loc 5 1138 25
	movl	-24(%ebp), %eax
	movl	%eax, -20(%ebp)
L367:
LBE64:
LBE63:
	.loc 5 1142 16 discriminator 2
	movl	16(%ebp), %eax
	imull	24(%ebp), %eax
	.loc 5 1142 18 discriminator 2
	addl	$1, %eax
	.loc 5 1142 13 discriminator 2
	imull	-16(%ebp), %eax
	movl	%eax, %edx
	.loc 5 1142 21 discriminator 2
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1142 23 discriminator 2
	movl	-20(%ebp), %edx
	movb	%dl, (%eax)
	.loc 5 1143 7 discriminator 2
	movl	16(%ebp), %eax
	imull	24(%ebp), %eax
	movl	%eax, %ecx
	movl	16(%ebp), %eax
	imull	24(%ebp), %eax
	addl	$1, %eax
	imull	-16(%ebp), %eax
	leal	1(%eax), %edx
	movl	-40(%ebp), %eax
	addl	%eax, %edx
	movl	%ecx, 8(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	_memmove
LBE62:
	.loc 5 1116 4 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L373
L365:
LBE61:
	.loc 5 1145 4
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 5 1146 29
	movl	_stbi_write_png_compression_level, %edx
	.loc 5 1146 41
	movl	16(%ebp), %eax
	imull	24(%ebp), %eax
	.loc 5 1146 43
	leal	1(%eax), %ecx
	.loc 5 1146 29
	movl	20(%ebp), %eax
	imull	%ecx, %eax
	movl	%edx, 12(%esp)
	leal	-88(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_zlib_compress
	movl	%eax, -48(%ebp)
	.loc 5 1147 4
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 5 1148 4
	cmpl	$0, -48(%ebp)
	jne	L374
	.loc 5 1148 22 discriminator 1
	movl	$0, %eax
	jmp	L379
L374:
	.loc 5 1151 28
	movl	-88(%ebp), %eax
	addl	$57, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -52(%ebp)
	.loc 5 1152 4
	cmpl	$0, -52(%ebp)
	jne	L375
	.loc 5 1152 21 discriminator 1
	movl	$0, %eax
	jmp	L379
L375:
	.loc 5 1153 35
	movl	-88(%ebp), %eax
	leal	57(%eax), %edx
	.loc 5 1153 13
	movl	28(%ebp), %eax
	movl	%edx, (%eax)
	.loc 5 1155 5
	movl	-52(%ebp), %eax
	movl	%eax, -84(%ebp)
	.loc 5 1156 4
	movl	-84(%ebp), %ecx
	movl	-80(%ebp), %eax
	movl	-76(%ebp), %edx
	movl	%eax, (%ecx)
	movl	%edx, 4(%ecx)
	.loc 5 1156 29
	movl	-84(%ebp), %eax
	addl	$8, %eax
	movl	%eax, -84(%ebp)
	.loc 5 1157 4
	movl	-84(%ebp), %eax
	movb	$0, (%eax)
	movl	-84(%ebp), %eax
	addl	$1, %eax
	movb	$0, (%eax)
	movl	-84(%ebp), %eax
	addl	$2, %eax
	movb	$0, (%eax)
	movl	-84(%ebp), %eax
	addl	$3, %eax
	movb	$13, (%eax)
	movl	-84(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -84(%ebp)
	.loc 5 1158 4
	movl	$73, %edx
	movl	-84(%ebp), %eax
	movb	%dl, (%eax)
	movl	$72, %edx
	movl	-84(%ebp), %eax
	addl	$1, %eax
	movb	%dl, (%eax)
	movl	$68, %edx
	movl	-84(%ebp), %eax
	addl	$2, %eax
	movb	%dl, (%eax)
	movl	$82, %edx
	movl	-84(%ebp), %eax
	addl	$3, %eax
	movb	%dl, (%eax)
	movl	-84(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -84(%ebp)
	.loc 5 1159 4
	movl	16(%ebp), %eax
	shrl	$24, %eax
	movl	%eax, %edx
	movl	-84(%ebp), %eax
	movb	%dl, (%eax)
	movl	16(%ebp), %eax
	sarl	$16, %eax
	movl	%eax, %edx
	movl	-84(%ebp), %eax
	addl	$1, %eax
	movb	%dl, (%eax)
	movl	16(%ebp), %eax
	sarl	$8, %eax
	movl	%eax, %edx
	movl	-84(%ebp), %eax
	addl	$2, %eax
	movb	%dl, (%eax)
	movl	16(%ebp), %edx
	movl	-84(%ebp), %eax
	addl	$3, %eax
	movb	%dl, (%eax)
	movl	-84(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -84(%ebp)
	.loc 5 1160 4
	movl	20(%ebp), %eax
	shrl	$24, %eax
	movl	%eax, %edx
	movl	-84(%ebp), %eax
	movb	%dl, (%eax)
	movl	20(%ebp), %eax
	sarl	$16, %eax
	movl	%eax, %edx
	movl	-84(%ebp), %eax
	addl	$1, %eax
	movb	%dl, (%eax)
	movl	20(%ebp), %eax
	sarl	$8, %eax
	movl	%eax, %edx
	movl	-84(%ebp), %eax
	addl	$2, %eax
	movb	%dl, (%eax)
	movl	20(%ebp), %edx
	movl	-84(%ebp), %eax
	addl	$3, %eax
	movb	%dl, (%eax)
	movl	-84(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -84(%ebp)
	.loc 5 1161 6
	movl	-84(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -84(%ebp)
	.loc 5 1161 9
	movb	$8, (%eax)
	.loc 5 1162 11
	movl	24(%ebp), %eax
	movl	-72(%ebp,%eax,4), %ecx
	.loc 5 1162 6
	movl	-84(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -84(%ebp)
	.loc 5 1162 9
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 5 1163 6
	movl	-84(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -84(%ebp)
	.loc 5 1163 9
	movb	$0, (%eax)
	.loc 5 1164 6
	movl	-84(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -84(%ebp)
	.loc 5 1164 9
	movb	$0, (%eax)
	.loc 5 1165 6
	movl	-84(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -84(%ebp)
	.loc 5 1165 9
	movb	$0, (%eax)
	.loc 5 1166 16
	movl	$13, 4(%esp)
	leal	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbiw__wpcrcPPhi
	.loc 5 1168 4
	movl	-88(%ebp), %eax
	shrl	$24, %eax
	movl	%eax, %edx
	movl	-84(%ebp), %eax
	movb	%dl, (%eax)
	movl	-88(%ebp), %eax
	sarl	$16, %eax
	movl	%eax, %edx
	movl	-84(%ebp), %eax
	addl	$1, %eax
	movb	%dl, (%eax)
	movl	-88(%ebp), %eax
	sarl	$8, %eax
	movl	%eax, %edx
	movl	-84(%ebp), %eax
	addl	$2, %eax
	movb	%dl, (%eax)
	movl	-88(%ebp), %edx
	movl	-84(%ebp), %eax
	addl	$3, %eax
	movb	%dl, (%eax)
	movl	-84(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -84(%ebp)
	.loc 5 1169 4
	movl	$73, %edx
	movl	-84(%ebp), %eax
	movb	%dl, (%eax)
	movl	$68, %edx
	movl	-84(%ebp), %eax
	addl	$1, %eax
	movb	%dl, (%eax)
	movl	$65, %edx
	movl	-84(%ebp), %eax
	addl	$2, %eax
	movb	%dl, (%eax)
	movl	$84, %edx
	movl	-84(%ebp), %eax
	addl	$3, %eax
	movb	%dl, (%eax)
	movl	-84(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -84(%ebp)
	.loc 5 1170 4
	movl	-88(%ebp), %eax
	movl	%eax, %edx
	movl	-84(%ebp), %eax
	movl	%edx, 8(%esp)
	movl	-48(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_memmove
	.loc 5 1171 6
	movl	-84(%ebp), %eax
	movl	-88(%ebp), %edx
	addl	%edx, %eax
	movl	%eax, -84(%ebp)
	.loc 5 1172 4
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 5 1173 16
	movl	-88(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbiw__wpcrcPPhi
	.loc 5 1175 4
	movl	-84(%ebp), %eax
	movb	$0, (%eax)
	movl	-84(%ebp), %eax
	addl	$1, %eax
	movb	$0, (%eax)
	movl	-84(%ebp), %eax
	addl	$2, %eax
	movb	$0, (%eax)
	movl	-84(%ebp), %eax
	addl	$3, %eax
	movb	$0, (%eax)
	movl	-84(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -84(%ebp)
	.loc 5 1176 4
	movl	$73, %edx
	movl	-84(%ebp), %eax
	movb	%dl, (%eax)
	movl	$69, %edx
	movl	-84(%ebp), %eax
	addl	$1, %eax
	movb	%dl, (%eax)
	movl	$78, %edx
	movl	-84(%ebp), %eax
	addl	$2, %eax
	movb	%dl, (%eax)
	movl	$68, %edx
	movl	-84(%ebp), %eax
	addl	$3, %eax
	movb	%dl, (%eax)
	movl	-84(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -84(%ebp)
	.loc 5 1177 16
	movl	$0, 4(%esp)
	leal	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbiw__wpcrcPPhi
	.loc 5 1179 4
	movl	28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	movl	-52(%ebp), %eax
	addl	%eax, %edx
	movl	-84(%ebp), %eax
	cmpl	%eax, %edx
	je	L378
	.loc 5 1179 4 is_stmt 0 discriminator 2
	movl	$1179, 8(%esp)
	movl	$LC4, 4(%esp)
	movl	$LC16, (%esp)
	call	__assert
L378:
	.loc 5 1181 11 is_stmt 1
	movl	-52(%ebp), %eax
L379:
	.loc 5 1182 1 discriminator 1
	addl	$116, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1773:
	.globl	_stbi_write_png
	.def	_stbi_write_png;	.scl	2;	.type	32;	.endef
_stbi_write_png:
LFB1774:
	.loc 5 1186 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 5 1189 46
	leal	-20(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	24(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_write_png_to_mem
	movl	%eax, -12(%ebp)
	.loc 5 1190 4
	cmpl	$0, -12(%ebp)
	jne	L381
	.loc 5 1190 28 discriminator 1
	movl	$0, %eax
	jmp	L384
L381:
	.loc 5 1192 20
	movl	$LC3, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbiw__fopenPKcS0_
	movl	%eax, -16(%ebp)
	.loc 5 1193 4
	cmpl	$0, -16(%ebp)
	jne	L383
	.loc 5 1193 14 discriminator 1
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 5 1193 38 discriminator 1
	movl	$0, %eax
	jmp	L384
L383:
	.loc 5 1194 10
	movl	-20(%ebp), %eax
	movl	%eax, %edx
	movl	-16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	movl	$1, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	.loc 5 1195 10
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	_fclose
	.loc 5 1196 4
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 5 1197 11
	movl	$1, %eax
L384:
	.loc 5 1198 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1774:
	.globl	_stbi_write_png_to_func
	.def	_stbi_write_png_to_func;	.scl	2;	.type	32;	.endef
_stbi_write_png_to_func:
LFB1775:
	.loc 5 1202 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 5 1204 46
	leal	-16(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	28(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_write_png_to_mem
	movl	%eax, -12(%ebp)
	.loc 5 1205 4
	cmpl	$0, -12(%ebp)
	jne	L386
	.loc 5 1205 28 discriminator 1
	movl	$0, %eax
	jmp	L388
L386:
	.loc 5 1206 8
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	movl	8(%ebp), %eax
	call	*%eax
LVL15:
	.loc 5 1207 4
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 5 1208 11
	movl	$1, %eax
L388:
	.loc 5 1209 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1775:
	.section .rdata,"dr"
	.align 32
__ZL17stbiw__jpg_ZigZag:
	.byte	0
	.byte	1
	.byte	5
	.byte	6
	.byte	14
	.byte	15
	.byte	27
	.byte	28
	.byte	2
	.byte	4
	.byte	7
	.byte	13
	.byte	16
	.byte	26
	.byte	29
	.byte	42
	.byte	3
	.byte	8
	.byte	12
	.byte	17
	.byte	25
	.byte	30
	.byte	41
	.byte	43
	.byte	9
	.byte	11
	.byte	18
	.byte	24
	.byte	31
	.byte	40
	.byte	44
	.byte	53
	.byte	10
	.byte	19
	.byte	23
	.byte	32
	.byte	39
	.byte	45
	.byte	52
	.byte	54
	.byte	20
	.byte	22
	.byte	33
	.byte	38
	.byte	46
	.byte	51
	.byte	55
	.byte	60
	.byte	21
	.byte	34
	.byte	37
	.byte	47
	.byte	50
	.byte	56
	.byte	59
	.byte	61
	.byte	35
	.byte	36
	.byte	48
	.byte	49
	.byte	57
	.byte	58
	.byte	62
	.byte	63
	.text
	.def	__ZL20stbiw__jpg_writeBitsP19stbi__write_contextPiS1_PKt;	.scl	3;	.type	32;	.endef
__ZL20stbiw__jpg_writeBitsP19stbi__write_contextPiS1_PKt:
LFB1776:
	.loc 5 1223 112
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 5 1224 8
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 5 1224 27
	movl	16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 5 1225 18
	movl	20(%ebp), %eax
	addl	$2, %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	.loc 5 1225 11
	addl	%eax, -16(%ebp)
	.loc 5 1226 18
	movl	20(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %edx
	.loc 5 1226 27
	movl	$24, %eax
	subl	-16(%ebp), %eax
	.loc 5 1226 20
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 5 1226 11
	orl	%eax, -12(%ebp)
L392:
	.loc 5 1227 17
	cmpl	$7, -16(%ebp)
	jle	L390
LBB65:
	.loc 5 1228 33
	movl	-12(%ebp), %eax
	sarl	$16, %eax
	.loc 5 1228 21
	movb	%al, -17(%ebp)
	.loc 5 1229 18
	movzbl	-17(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbiw__putcP19stbi__write_contexth
	.loc 5 1230 7
	cmpb	$-1, -17(%ebp)
	jne	L391
	.loc 5 1231 21
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbiw__putcP19stbi__write_contexth
L391:
	.loc 5 1233 14
	sall	$8, -12(%ebp)
	.loc 5 1234 14
	subl	$8, -16(%ebp)
LBE65:
	.loc 5 1227 4
	jmp	L392
L390:
	.loc 5 1236 13
	movl	12(%ebp), %eax
	movl	-12(%ebp), %edx
	movl	%edx, (%eax)
	.loc 5 1237 13
	movl	16(%ebp), %eax
	movl	-16(%ebp), %edx
	movl	%edx, (%eax)
	.loc 5 1238 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1776:
	.def	__ZL14stbiw__jpg_DCTPfS_S_S_S_S_S_S_;	.scl	3;	.type	32;	.endef
__ZL14stbiw__jpg_DCTPfS_S_S_S_S_S_S_:
LFB1777:
	.loc 5 1240 124
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$112, %esp
	.loc 5 1241 10
	movl	8(%ebp), %eax
	flds	(%eax)
	fstps	-4(%ebp)
	.loc 5 1241 21
	movl	12(%ebp), %eax
	flds	(%eax)
	fstps	-8(%ebp)
	.loc 5 1241 32
	movl	16(%ebp), %eax
	flds	(%eax)
	fstps	-12(%ebp)
	.loc 5 1241 43
	movl	20(%ebp), %eax
	flds	(%eax)
	fstps	-16(%ebp)
	.loc 5 1241 54
	movl	24(%ebp), %eax
	flds	(%eax)
	fstps	-20(%ebp)
	.loc 5 1241 65
	movl	28(%ebp), %eax
	flds	(%eax)
	fstps	-24(%ebp)
	.loc 5 1241 76
	movl	32(%ebp), %eax
	flds	(%eax)
	fstps	-28(%ebp)
	.loc 5 1241 87
	movl	36(%ebp), %eax
	flds	(%eax)
	fstps	-32(%ebp)
	.loc 5 1244 10
	flds	-4(%ebp)
	fadds	-32(%ebp)
	fstps	-36(%ebp)
	.loc 5 1245 10
	flds	-4(%ebp)
	fsubs	-32(%ebp)
	fstps	-40(%ebp)
	.loc 5 1246 10
	flds	-8(%ebp)
	fadds	-28(%ebp)
	fstps	-44(%ebp)
	.loc 5 1247 10
	flds	-8(%ebp)
	fsubs	-28(%ebp)
	fstps	-48(%ebp)
	.loc 5 1248 10
	flds	-12(%ebp)
	fadds	-24(%ebp)
	fstps	-52(%ebp)
	.loc 5 1249 10
	flds	-12(%ebp)
	fsubs	-24(%ebp)
	fstps	-56(%ebp)
	.loc 5 1250 10
	flds	-16(%ebp)
	fadds	-20(%ebp)
	fstps	-60(%ebp)
	.loc 5 1251 10
	flds	-16(%ebp)
	fsubs	-20(%ebp)
	fstps	-64(%ebp)
	.loc 5 1254 10
	flds	-36(%ebp)
	fadds	-60(%ebp)
	fstps	-68(%ebp)
	.loc 5 1255 10
	flds	-36(%ebp)
	fsubs	-60(%ebp)
	fstps	-72(%ebp)
	.loc 5 1256 10
	flds	-44(%ebp)
	fadds	-52(%ebp)
	fstps	-76(%ebp)
	.loc 5 1257 10
	flds	-44(%ebp)
	fsubs	-52(%ebp)
	fstps	-80(%ebp)
	.loc 5 1259 7
	flds	-68(%ebp)
	fadds	-76(%ebp)
	fstps	-4(%ebp)
	.loc 5 1260 7
	flds	-68(%ebp)
	fsubs	-76(%ebp)
	fstps	-20(%ebp)
	.loc 5 1262 16
	flds	-80(%ebp)
	fadds	-72(%ebp)
	.loc 5 1262 7
	flds	LC17
	fmulp	%st, %st(1)
	fstps	-84(%ebp)
	.loc 5 1263 7
	flds	-72(%ebp)
	fadds	-84(%ebp)
	fstps	-12(%ebp)
	.loc 5 1264 7
	flds	-72(%ebp)
	fsubs	-84(%ebp)
	fstps	-28(%ebp)
	.loc 5 1267 10
	flds	-64(%ebp)
	fadds	-56(%ebp)
	fstps	-68(%ebp)
	.loc 5 1268 10
	flds	-56(%ebp)
	fadds	-48(%ebp)
	fstps	-76(%ebp)
	.loc 5 1269 10
	flds	-48(%ebp)
	fadds	-40(%ebp)
	fstps	-80(%ebp)
	.loc 5 1272 16
	flds	-68(%ebp)
	fsubs	-80(%ebp)
	.loc 5 1272 7
	flds	LC18
	fmulp	%st, %st(1)
	fstps	-88(%ebp)
	.loc 5 1273 15
	flds	-68(%ebp)
	flds	LC19
	fmulp	%st, %st(1)
	.loc 5 1273 7
	flds	-88(%ebp)
	faddp	%st, %st(1)
	fstps	-92(%ebp)
	.loc 5 1274 15
	flds	-80(%ebp)
	flds	LC20
	fmulp	%st, %st(1)
	.loc 5 1274 7
	flds	-88(%ebp)
	faddp	%st, %st(1)
	fstps	-96(%ebp)
	.loc 5 1275 7
	flds	-76(%ebp)
	flds	LC17
	fmulp	%st, %st(1)
	fstps	-100(%ebp)
	.loc 5 1277 8
	flds	-40(%ebp)
	fadds	-100(%ebp)
	fstps	-104(%ebp)
	.loc 5 1278 8
	flds	-40(%ebp)
	fsubs	-100(%ebp)
	fstps	-108(%ebp)
	.loc 5 1280 15
	flds	-108(%ebp)
	fadds	-92(%ebp)
	.loc 5 1280 9
	movl	28(%ebp), %eax
	fstps	(%eax)
	.loc 5 1281 15
	flds	-108(%ebp)
	fsubs	-92(%ebp)
	.loc 5 1281 9
	movl	20(%ebp), %eax
	fstps	(%eax)
	.loc 5 1282 15
	flds	-104(%ebp)
	fadds	-96(%ebp)
	.loc 5 1282 9
	movl	12(%ebp), %eax
	fstps	(%eax)
	.loc 5 1283 15
	flds	-104(%ebp)
	fsubs	-96(%ebp)
	.loc 5 1283 9
	movl	36(%ebp), %eax
	fstps	(%eax)
	.loc 5 1285 9
	movl	8(%ebp), %eax
	flds	-4(%ebp)
	fstps	(%eax)
	.loc 5 1285 21
	movl	16(%ebp), %eax
	flds	-12(%ebp)
	fstps	(%eax)
	.loc 5 1285 33
	movl	24(%ebp), %eax
	flds	-20(%ebp)
	fstps	(%eax)
	.loc 5 1285 45
	movl	32(%ebp), %eax
	flds	-28(%ebp)
	fstps	(%eax)
	.loc 5 1286 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1777:
	.def	__ZL19stbiw__jpg_calcBitsiPt;	.scl	3;	.type	32;	.endef
__ZL19stbiw__jpg_calcBitsiPt:
LFB1778:
	.loc 5 1288 66
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 5 1289 8
	movl	8(%ebp), %eax
	sarl	$31, %eax
	movl	%eax, %edx
	xorl	8(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -4(%ebp)
	.loc 5 1290 18
	cmpl	$0, 8(%ebp)
	jns	L395
	.loc 5 1290 18 is_stmt 0 discriminator 1
	movl	8(%ebp), %eax
	subl	$1, %eax
	jmp	L396
L395:
	.loc 5 1290 18 discriminator 2
	movl	8(%ebp), %eax
L396:
	.loc 5 1290 8 is_stmt 1 discriminator 4
	movl	%eax, 8(%ebp)
	.loc 5 1291 10 discriminator 4
	movl	12(%ebp), %eax
	addl	$2, %eax
	.loc 5 1291 12 discriminator 4
	movw	$1, (%eax)
L398:
	.loc 5 1292 15
	sarl	-4(%ebp)
	.loc 5 1292 19
	cmpl	$0, -4(%ebp)
	setne	%al
	testb	%al, %al
	je	L397
	.loc 5 1293 15
	movl	12(%ebp), %eax
	addl	$2, %eax
	movzwl	(%eax), %edx
	.loc 5 1293 7
	addl	$1, %edx
	movw	%dx, (%eax)
	.loc 5 1292 4
	jmp	L398
L397:
	.loc 5 1295 31
	movl	12(%ebp), %eax
	addl	$2, %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	.loc 5 1295 23
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 5 1295 33
	subl	$1, %eax
	movl	%eax, %edx
	.loc 5 1295 18
	movl	8(%ebp), %eax
	andl	%edx, %eax
	movl	%eax, %edx
	.loc 5 1295 12
	movl	12(%ebp), %eax
	movw	%dx, (%eax)
	.loc 5 1296 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1778:
	.def	__ZL20stbiw__jpg_processDUP19stbi__write_contextPiS1_PfiS2_iPA2_KtS5_;	.scl	3;	.type	32;	.endef
__ZL20stbiw__jpg_processDUP19stbi__write_contextPiS1_PfiS2_iPA2_KtS5_:
LFB1779:
	.loc 5 1298 202
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$412, %esp
	.cfi_offset 7, -12
	.cfi_offset 6, -16
	.cfi_offset 3, -20
	.loc 5 1299 48
	movl	40(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 5 1299 65
	movw	%ax, -80(%ebp)
	.loc 5 1299 63
	movl	40(%ebp), %eax
	movzwl	2(%eax), %eax
	.loc 5 1299 65
	movw	%ax, -78(%ebp)
	.loc 5 1300 51
	movl	40(%ebp), %eax
	addl	$960, %eax
	.loc 5 1300 54
	movzwl	(%eax), %eax
	.loc 5 1300 71
	movw	%ax, -84(%ebp)
	.loc 5 1300 66
	movl	40(%ebp), %eax
	addl	$960, %eax
	.loc 5 1300 69
	movzwl	2(%eax), %eax
	.loc 5 1300 71
	movw	%ax, -82(%ebp)
	.loc 5 1305 15
	movl	$0, -28(%ebp)
	.loc 5 1305 20
	movl	24(%ebp), %eax
	sall	$3, %eax
	movl	%eax, -60(%ebp)
L401:
	.loc 5 1305 41 discriminator 3
	movl	-28(%ebp), %eax
	cmpl	-60(%ebp), %eax
	jge	L400
	.loc 5 1306 153 discriminator 2
	movl	-28(%ebp), %eax
	.loc 5 1306 21 discriminator 2
	addl	$7, %eax
	leal	0(,%eax,4), %edx
	movl	20(%ebp), %eax
	leal	(%edx,%eax), %esi
	.loc 5 1306 136 discriminator 2
	movl	-28(%ebp), %eax
	.loc 5 1306 21 discriminator 2
	addl	$6, %eax
	leal	0(,%eax,4), %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -372(%ebp)
	.loc 5 1306 119 discriminator 2
	movl	-28(%ebp), %eax
	.loc 5 1306 21 discriminator 2
	addl	$5, %eax
	leal	0(,%eax,4), %edx
	movl	20(%ebp), %eax
	leal	(%edx,%eax), %ecx
	movl	%ecx, -376(%ebp)
	.loc 5 1306 102 discriminator 2
	movl	-28(%ebp), %eax
	.loc 5 1306 21 discriminator 2
	addl	$4, %eax
	leal	0(,%eax,4), %edx
	movl	20(%ebp), %eax
	leal	(%edx,%eax), %ebx
	movl	%ebx, -380(%ebp)
	.loc 5 1306 85 discriminator 2
	movl	-28(%ebp), %eax
	.loc 5 1306 21 discriminator 2
	addl	$3, %eax
	leal	0(,%eax,4), %edx
	movl	20(%ebp), %eax
	leal	(%edx,%eax), %edi
	.loc 5 1306 68 discriminator 2
	movl	-28(%ebp), %eax
	.loc 5 1306 21 discriminator 2
	addl	$2, %eax
	leal	0(,%eax,4), %edx
	movl	20(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 5 1306 51 discriminator 2
	movl	-28(%ebp), %eax
	.loc 5 1306 21 discriminator 2
	addl	$1, %eax
	leal	0(,%eax,4), %edx
	movl	20(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 5 1306 34 discriminator 2
	movl	-28(%ebp), %eax
	leal	0(,%eax,4), %edx
	.loc 5 1306 21 discriminator 2
	movl	20(%ebp), %eax
	addl	%edx, %eax
	movl	%esi, 28(%esp)
	movl	-372(%ebp), %esi
	movl	%esi, 24(%esp)
	movl	-376(%ebp), %esi
	movl	%esi, 20(%esp)
	movl	-380(%ebp), %esi
	movl	%esi, 16(%esp)
	movl	%edi, 12(%esp)
	movl	%ebx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbiw__jpg_DCTPfS_S_S_S_S_S_S_
	.loc 5 1305 52 discriminator 2
	movl	24(%ebp), %eax
	addl	%eax, -28(%ebp)
	.loc 5 1305 4 discriminator 2
	jmp	L401
L400:
	.loc 5 1309 15
	movl	$0, -28(%ebp)
L403:
	.loc 5 1309 26 discriminator 3
	cmpl	$7, -28(%ebp)
	jg	L402
	.loc 5 1311 98 discriminator 2
	movl	24(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	subl	%edx, %eax
	movl	%eax, %edx
	.loc 5 1311 88 discriminator 2
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1311 100 discriminator 2
	leal	0(,%eax,4), %edx
	.loc 5 1310 21 discriminator 2
	movl	20(%ebp), %eax
	leal	(%edx,%eax), %esi
	.loc 5 1311 71 discriminator 2
	movl	24(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 5 1311 61 discriminator 2
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1311 73 discriminator 2
	leal	0(,%eax,4), %edx
	.loc 5 1310 21 discriminator 2
	movl	20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -372(%ebp)
	.loc 5 1311 44 discriminator 2
	movl	24(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%eax, %edx
	.loc 5 1311 34 discriminator 2
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1311 46 discriminator 2
	leal	0(,%eax,4), %edx
	.loc 5 1310 21 discriminator 2
	movl	20(%ebp), %eax
	leal	(%edx,%eax), %edi
	movl	%edi, -376(%ebp)
	.loc 5 1310 138 discriminator 2
	movl	24(%ebp), %eax
	leal	0(,%eax,4), %edx
	.loc 5 1310 128 discriminator 2
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1310 140 discriminator 2
	leal	0(,%eax,4), %edx
	.loc 5 1310 21 discriminator 2
	movl	20(%ebp), %eax
	leal	(%edx,%eax), %ecx
	movl	%ecx, -380(%ebp)
	.loc 5 1310 111 discriminator 2
	movl	24(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%eax, %edx
	.loc 5 1310 101 discriminator 2
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1310 113 discriminator 2
	leal	0(,%eax,4), %edx
	.loc 5 1310 21 discriminator 2
	movl	20(%ebp), %eax
	leal	(%edx,%eax), %edi
	.loc 5 1310 84 discriminator 2
	movl	24(%ebp), %eax
	leal	(%eax,%eax), %edx
	.loc 5 1310 74 discriminator 2
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1310 86 discriminator 2
	leal	0(,%eax,4), %edx
	.loc 5 1310 21 discriminator 2
	movl	20(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 5 1310 49 discriminator 2
	movl	-28(%ebp), %edx
	movl	24(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1310 59 discriminator 2
	leal	0(,%eax,4), %edx
	.loc 5 1310 21 discriminator 2
	movl	20(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 5 1310 34 discriminator 2
	movl	-28(%ebp), %eax
	leal	0(,%eax,4), %edx
	.loc 5 1310 21 discriminator 2
	movl	20(%ebp), %eax
	addl	%edx, %eax
	movl	%esi, 28(%esp)
	movl	-372(%ebp), %esi
	movl	%esi, 24(%esp)
	movl	-376(%ebp), %esi
	movl	%esi, 20(%esp)
	movl	-380(%ebp), %esi
	movl	%esi, 16(%esp)
	movl	%edi, 12(%esp)
	movl	%ebx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbiw__jpg_DCTPfS_S_S_S_S_S_S_
	.loc 5 1309 4 discriminator 2
	addl	$1, -28(%ebp)
	jmp	L403
L402:
LBB66:
	.loc 5 1314 10
	movl	$0, -48(%ebp)
	.loc 5 1314 16
	movl	$0, -36(%ebp)
L410:
	.loc 5 1314 22 discriminator 1
	cmpl	$7, -48(%ebp)
	jg	L404
LBB67:
LBB68:
	.loc 5 1315 13
	movl	$0, -44(%ebp)
L409:
	.loc 5 1315 20 discriminator 2
	cmpl	$7, -44(%ebp)
	jg	L405
LBB69:
	.loc 5 1317 15
	movl	-48(%ebp), %eax
	imull	24(%ebp), %eax
	movl	%eax, %edx
	.loc 5 1317 12
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -32(%ebp)
	.loc 5 1318 19
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 5 1318 28
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	28(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 5 1318 12
	fmulp	%st, %st(1)
	fstps	-64(%ebp)
	.loc 5 1321 37
	flds	-64(%ebp)
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L427
	.loc 5 1321 53 discriminator 1
	flds	-64(%ebp)
	flds	LC22
	fsubrp	%st, %st(1)
	.loc 5 1321 37 discriminator 1
	fnstcw	-362(%ebp)
	movzwl	-362(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -364(%ebp)
	fldcw	-364(%ebp)
	fistpl	-368(%ebp)
	fldcw	-362(%ebp)
	movl	-368(%ebp), %edx
	jmp	L408
L427:
	.loc 5 1321 64 discriminator 2
	flds	-64(%ebp)
	flds	LC22
	faddp	%st, %st(1)
	.loc 5 1321 37 discriminator 2
	fnstcw	-362(%ebp)
	movzwl	-362(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -364(%ebp)
	fldcw	-364(%ebp)
	fistpl	-368(%ebp)
	fldcw	-362(%ebp)
	movl	-368(%ebp), %edx
L408:
	.loc 5 1321 32 discriminator 4
	movl	-36(%ebp), %eax
	addl	$__ZL17stbiw__jpg_ZigZag, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 5 1321 35 discriminator 4
	movl	%edx, -340(%ebp,%eax,4)
LBE69:
	.loc 5 1315 7 discriminator 4
	addl	$1, -44(%ebp)
	addl	$1, -36(%ebp)
	jmp	L409
L405:
LBE68:
LBE67:
	.loc 5 1314 4 discriminator 2
	addl	$1, -48(%ebp)
	jmp	L410
L404:
LBE66:
	.loc 5 1326 15
	movl	-340(%ebp), %eax
	.loc 5 1326 9
	subl	32(%ebp), %eax
	movl	%eax, -68(%ebp)
LBB70:
	.loc 5 1327 4
	cmpl	$0, -68(%ebp)
	jne	L411
	.loc 5 1328 27
	movl	36(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_writeBitsP19stbi__write_contextPiS1_PKt
	jmp	L412
L411:
LBB71:
	.loc 5 1331 26
	leal	-344(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbiw__jpg_calcBitsiPt
	.loc 5 1332 58
	movzwl	-342(%ebp), %eax
	movzwl	%ax, %eax
	.loc 5 1332 59
	leal	0(,%eax,4), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1332 27
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_writeBitsP19stbi__write_contextPiS1_PKt
	.loc 5 1333 27
	leal	-344(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_writeBitsP19stbi__write_contextPiS1_PKt
L412:
LBE71:
LBE70:
	.loc 5 1336 12
	movl	$63, -40(%ebp)
L414:
	.loc 5 1337 21 discriminator 3
	cmpl	$0, -40(%ebp)
	jle	L413
	.loc 5 1337 34 discriminator 1
	movl	-40(%ebp), %eax
	movl	-340(%ebp,%eax,4), %eax
	.loc 5 1337 21 discriminator 1
	testl	%eax, %eax
	jne	L413
	.loc 5 1337 4 discriminator 2
	subl	$1, -40(%ebp)
	jmp	L414
L413:
	.loc 5 1340 4
	cmpl	$0, -40(%ebp)
	jne	L415
	.loc 5 1341 27
	leal	-80(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_writeBitsP19stbi__write_contextPiS1_PKt
	.loc 5 1342 18
	movl	-340(%ebp), %eax
	jmp	L425
L415:
LBB72:
	.loc 5 1344 10
	movl	$1, -32(%ebp)
L423:
	.loc 5 1344 17 discriminator 1
	movl	-32(%ebp), %eax
	cmpl	-40(%ebp), %eax
	jg	L417
LBB73:
	.loc 5 1345 11
	movl	-32(%ebp), %eax
	movl	%eax, -72(%ebp)
L419:
	.loc 5 1348 18 discriminator 3
	movl	-32(%ebp), %eax
	movl	-340(%ebp,%eax,4), %eax
	.loc 5 1348 23 discriminator 3
	testl	%eax, %eax
	jne	L418
	.loc 5 1348 23 is_stmt 0 discriminator 1
	movl	-32(%ebp), %eax
	cmpl	-40(%ebp), %eax
	jg	L418
	.loc 5 1348 7 is_stmt 1 discriminator 2
	addl	$1, -32(%ebp)
	jmp	L419
L418:
	.loc 5 1350 16
	movl	-32(%ebp), %eax
	subl	-72(%ebp), %eax
	movl	%eax, -52(%ebp)
LBB74:
	.loc 5 1351 7
	cmpl	$15, -52(%ebp)
	jle	L420
LBB75:
	.loc 5 1352 14
	movl	-52(%ebp), %eax
	sarl	$4, %eax
	movl	%eax, -76(%ebp)
	.loc 5 1354 23
	movl	$1, -56(%ebp)
L422:
	.loc 5 1354 36 discriminator 1
	movl	-56(%ebp), %eax
	cmpl	-76(%ebp), %eax
	jg	L421
	.loc 5 1355 33
	leal	-84(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_writeBitsP19stbi__write_contextPiS1_PKt
	.loc 5 1354 10
	addl	$1, -56(%ebp)
	jmp	L422
L421:
	.loc 5 1356 19
	andl	$15, -52(%ebp)
L420:
LBE75:
LBE74:
	.loc 5 1358 26
	movl	-32(%ebp), %eax
	movl	-340(%ebp,%eax,4), %eax
	leal	-348(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL19stbiw__jpg_calcBitsiPt
	.loc 5 1359 61
	movl	-52(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	.loc 5 1359 72
	movzwl	-346(%ebp), %eax
	movzwl	%ax, %eax
	.loc 5 1359 65
	addl	%edx, %eax
	.loc 5 1359 73
	leal	0(,%eax,4), %edx
	movl	40(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1359 27
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_writeBitsP19stbi__write_contextPiS1_PKt
	.loc 5 1360 27
	leal	-348(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_writeBitsP19stbi__write_contextPiS1_PKt
LBE73:
	.loc 5 1344 4
	addl	$1, -32(%ebp)
	jmp	L423
L417:
LBE72:
	.loc 5 1362 4
	cmpl	$63, -40(%ebp)
	je	L424
	.loc 5 1363 27
	leal	-80(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_writeBitsP19stbi__write_contextPiS1_PKt
L424:
	.loc 5 1365 15
	movl	-340(%ebp), %eax
L425:
	.loc 5 1366 1 discriminator 1
	addl	$412, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1779:
	.section .rdata,"dr"
	.align 4
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE24std_dc_luminance_nrcodes:
	.byte	0
	.byte	0
	.byte	1
	.byte	5
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.align 4
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE23std_dc_luminance_values:
	.byte	0
	.byte	1
	.byte	2
	.byte	3
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	8
	.byte	9
	.byte	10
	.byte	11
	.align 4
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE24std_ac_luminance_nrcodes:
	.byte	0
	.byte	0
	.byte	2
	.byte	1
	.byte	3
	.byte	3
	.byte	2
	.byte	4
	.byte	3
	.byte	5
	.byte	5
	.byte	4
	.byte	4
	.byte	0
	.byte	0
	.byte	1
	.byte	125
	.align 32
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE23std_ac_luminance_values:
	.byte	1
	.byte	2
	.byte	3
	.byte	0
	.byte	4
	.byte	17
	.byte	5
	.byte	18
	.byte	33
	.byte	49
	.byte	65
	.byte	6
	.byte	19
	.byte	81
	.byte	97
	.byte	7
	.byte	34
	.byte	113
	.byte	20
	.byte	50
	.byte	-127
	.byte	-111
	.byte	-95
	.byte	8
	.byte	35
	.byte	66
	.byte	-79
	.byte	-63
	.byte	21
	.byte	82
	.byte	-47
	.byte	-16
	.byte	36
	.byte	51
	.byte	98
	.byte	114
	.byte	-126
	.byte	9
	.byte	10
	.byte	22
	.byte	23
	.byte	24
	.byte	25
	.byte	26
	.byte	37
	.byte	38
	.byte	39
	.byte	40
	.byte	41
	.byte	42
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	58
	.byte	67
	.byte	68
	.byte	69
	.byte	70
	.byte	71
	.byte	72
	.byte	73
	.byte	74
	.byte	83
	.byte	84
	.byte	85
	.byte	86
	.byte	87
	.byte	88
	.byte	89
	.byte	90
	.byte	99
	.byte	100
	.byte	101
	.byte	102
	.byte	103
	.byte	104
	.byte	105
	.byte	106
	.byte	115
	.byte	116
	.byte	117
	.byte	118
	.byte	119
	.byte	120
	.byte	121
	.byte	122
	.byte	-125
	.byte	-124
	.byte	-123
	.byte	-122
	.byte	-121
	.byte	-120
	.byte	-119
	.byte	-118
	.byte	-110
	.byte	-109
	.byte	-108
	.byte	-107
	.byte	-106
	.byte	-105
	.byte	-104
	.byte	-103
	.byte	-102
	.byte	-94
	.byte	-93
	.byte	-92
	.byte	-91
	.byte	-90
	.byte	-89
	.byte	-88
	.byte	-87
	.byte	-86
	.byte	-78
	.byte	-77
	.byte	-76
	.byte	-75
	.byte	-74
	.byte	-73
	.byte	-72
	.byte	-71
	.byte	-70
	.byte	-62
	.byte	-61
	.byte	-60
	.byte	-59
	.byte	-58
	.byte	-57
	.byte	-56
	.byte	-55
	.byte	-54
	.byte	-46
	.byte	-45
	.byte	-44
	.byte	-43
	.byte	-42
	.byte	-41
	.byte	-40
	.byte	-39
	.byte	-38
	.byte	-31
	.byte	-30
	.byte	-29
	.byte	-28
	.byte	-27
	.byte	-26
	.byte	-25
	.byte	-24
	.byte	-23
	.byte	-22
	.byte	-15
	.byte	-14
	.byte	-13
	.byte	-12
	.byte	-11
	.byte	-10
	.byte	-9
	.byte	-8
	.byte	-7
	.byte	-6
	.align 4
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE26std_dc_chrominance_nrcodes:
	.byte	0
	.byte	0
	.byte	3
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.align 4
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE25std_dc_chrominance_values:
	.byte	0
	.byte	1
	.byte	2
	.byte	3
	.byte	4
	.byte	5
	.byte	6
	.byte	7
	.byte	8
	.byte	9
	.byte	10
	.byte	11
	.align 4
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE26std_ac_chrominance_nrcodes:
	.byte	0
	.byte	0
	.byte	2
	.byte	1
	.byte	2
	.byte	4
	.byte	4
	.byte	3
	.byte	4
	.byte	7
	.byte	5
	.byte	4
	.byte	4
	.byte	0
	.byte	1
	.byte	2
	.byte	119
	.align 32
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE25std_ac_chrominance_values:
	.byte	0
	.byte	1
	.byte	2
	.byte	3
	.byte	17
	.byte	4
	.byte	5
	.byte	33
	.byte	49
	.byte	6
	.byte	18
	.byte	65
	.byte	81
	.byte	7
	.byte	97
	.byte	113
	.byte	19
	.byte	34
	.byte	50
	.byte	-127
	.byte	8
	.byte	20
	.byte	66
	.byte	-111
	.byte	-95
	.byte	-79
	.byte	-63
	.byte	9
	.byte	35
	.byte	51
	.byte	82
	.byte	-16
	.byte	21
	.byte	98
	.byte	114
	.byte	-47
	.byte	10
	.byte	22
	.byte	36
	.byte	52
	.byte	-31
	.byte	37
	.byte	-15
	.byte	23
	.byte	24
	.byte	25
	.byte	26
	.byte	38
	.byte	39
	.byte	40
	.byte	41
	.byte	42
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	58
	.byte	67
	.byte	68
	.byte	69
	.byte	70
	.byte	71
	.byte	72
	.byte	73
	.byte	74
	.byte	83
	.byte	84
	.byte	85
	.byte	86
	.byte	87
	.byte	88
	.byte	89
	.byte	90
	.byte	99
	.byte	100
	.byte	101
	.byte	102
	.byte	103
	.byte	104
	.byte	105
	.byte	106
	.byte	115
	.byte	116
	.byte	117
	.byte	118
	.byte	119
	.byte	120
	.byte	121
	.byte	122
	.byte	-126
	.byte	-125
	.byte	-124
	.byte	-123
	.byte	-122
	.byte	-121
	.byte	-120
	.byte	-119
	.byte	-118
	.byte	-110
	.byte	-109
	.byte	-108
	.byte	-107
	.byte	-106
	.byte	-105
	.byte	-104
	.byte	-103
	.byte	-102
	.byte	-94
	.byte	-93
	.byte	-92
	.byte	-91
	.byte	-90
	.byte	-89
	.byte	-88
	.byte	-87
	.byte	-86
	.byte	-78
	.byte	-77
	.byte	-76
	.byte	-75
	.byte	-74
	.byte	-73
	.byte	-72
	.byte	-71
	.byte	-70
	.byte	-62
	.byte	-61
	.byte	-60
	.byte	-59
	.byte	-58
	.byte	-57
	.byte	-56
	.byte	-55
	.byte	-54
	.byte	-46
	.byte	-45
	.byte	-44
	.byte	-43
	.byte	-42
	.byte	-41
	.byte	-40
	.byte	-39
	.byte	-38
	.byte	-30
	.byte	-29
	.byte	-28
	.byte	-27
	.byte	-26
	.byte	-25
	.byte	-24
	.byte	-23
	.byte	-22
	.byte	-14
	.byte	-13
	.byte	-12
	.byte	-11
	.byte	-10
	.byte	-9
	.byte	-8
	.byte	-7
	.byte	-6
	.align 32
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YDC_HT:
	.word	0
	.word	2
	.word	2
	.word	3
	.word	3
	.word	3
	.word	4
	.word	3
	.word	5
	.word	3
	.word	6
	.word	3
	.word	14
	.word	4
	.word	30
	.word	5
	.word	62
	.word	6
	.word	126
	.word	7
	.word	254
	.word	8
	.word	510
	.word	9
	.space 976
	.align 32
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE7UVDC_HT:
	.word	0
	.word	2
	.word	1
	.word	2
	.word	2
	.word	2
	.word	6
	.word	3
	.word	14
	.word	4
	.word	30
	.word	5
	.word	62
	.word	6
	.word	126
	.word	7
	.word	254
	.word	8
	.word	510
	.word	9
	.word	1022
	.word	10
	.word	2046
	.word	11
	.space 976
	.align 32
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YAC_HT:
	.word	10
	.word	4
	.word	0
	.word	2
	.word	1
	.word	2
	.word	4
	.word	3
	.word	11
	.word	4
	.word	26
	.word	5
	.word	120
	.word	7
	.word	248
	.word	8
	.word	1014
	.word	10
	.word	-126
	.word	16
	.word	-125
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	12
	.word	4
	.word	27
	.word	5
	.word	121
	.word	7
	.word	502
	.word	9
	.word	2038
	.word	11
	.word	-124
	.word	16
	.word	-123
	.word	16
	.word	-122
	.word	16
	.word	-121
	.word	16
	.word	-120
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	28
	.word	5
	.word	249
	.word	8
	.word	1015
	.word	10
	.word	4084
	.word	12
	.word	-119
	.word	16
	.word	-118
	.word	16
	.word	-117
	.word	16
	.word	-116
	.word	16
	.word	-115
	.word	16
	.word	-114
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	58
	.word	6
	.word	503
	.word	9
	.word	4085
	.word	12
	.word	-113
	.word	16
	.word	-112
	.word	16
	.word	-111
	.word	16
	.word	-110
	.word	16
	.word	-109
	.word	16
	.word	-108
	.word	16
	.word	-107
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	59
	.word	6
	.word	1016
	.word	10
	.word	-106
	.word	16
	.word	-105
	.word	16
	.word	-104
	.word	16
	.word	-103
	.word	16
	.word	-102
	.word	16
	.word	-101
	.word	16
	.word	-100
	.word	16
	.word	-99
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	122
	.word	7
	.word	2039
	.word	11
	.word	-98
	.word	16
	.word	-97
	.word	16
	.word	-96
	.word	16
	.word	-95
	.word	16
	.word	-94
	.word	16
	.word	-93
	.word	16
	.word	-92
	.word	16
	.word	-91
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	123
	.word	7
	.word	4086
	.word	12
	.word	-90
	.word	16
	.word	-89
	.word	16
	.word	-88
	.word	16
	.word	-87
	.word	16
	.word	-86
	.word	16
	.word	-85
	.word	16
	.word	-84
	.word	16
	.word	-83
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	250
	.word	8
	.word	4087
	.word	12
	.word	-82
	.word	16
	.word	-81
	.word	16
	.word	-80
	.word	16
	.word	-79
	.word	16
	.word	-78
	.word	16
	.word	-77
	.word	16
	.word	-76
	.word	16
	.word	-75
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	504
	.word	9
	.word	32704
	.word	15
	.word	-74
	.word	16
	.word	-73
	.word	16
	.word	-72
	.word	16
	.word	-71
	.word	16
	.word	-70
	.word	16
	.word	-69
	.word	16
	.word	-68
	.word	16
	.word	-67
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	505
	.word	9
	.word	-66
	.word	16
	.word	-65
	.word	16
	.word	-64
	.word	16
	.word	-63
	.word	16
	.word	-62
	.word	16
	.word	-61
	.word	16
	.word	-60
	.word	16
	.word	-59
	.word	16
	.word	-58
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	506
	.word	9
	.word	-57
	.word	16
	.word	-56
	.word	16
	.word	-55
	.word	16
	.word	-54
	.word	16
	.word	-53
	.word	16
	.word	-52
	.word	16
	.word	-51
	.word	16
	.word	-50
	.word	16
	.word	-49
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	1017
	.word	10
	.word	-48
	.word	16
	.word	-47
	.word	16
	.word	-46
	.word	16
	.word	-45
	.word	16
	.word	-44
	.word	16
	.word	-43
	.word	16
	.word	-42
	.word	16
	.word	-41
	.word	16
	.word	-40
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	1018
	.word	10
	.word	-39
	.word	16
	.word	-38
	.word	16
	.word	-37
	.word	16
	.word	-36
	.word	16
	.word	-35
	.word	16
	.word	-34
	.word	16
	.word	-33
	.word	16
	.word	-32
	.word	16
	.word	-31
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	2040
	.word	11
	.word	-30
	.word	16
	.word	-29
	.word	16
	.word	-28
	.word	16
	.word	-27
	.word	16
	.word	-26
	.word	16
	.word	-25
	.word	16
	.word	-24
	.word	16
	.word	-23
	.word	16
	.word	-22
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	-21
	.word	16
	.word	-20
	.word	16
	.word	-19
	.word	16
	.word	-18
	.word	16
	.word	-17
	.word	16
	.word	-16
	.word	16
	.word	-15
	.word	16
	.word	-14
	.word	16
	.word	-13
	.word	16
	.word	-12
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	2041
	.word	11
	.word	-11
	.word	16
	.word	-10
	.word	16
	.word	-9
	.word	16
	.word	-8
	.word	16
	.word	-7
	.word	16
	.word	-6
	.word	16
	.word	-5
	.word	16
	.word	-4
	.word	16
	.word	-3
	.word	16
	.word	-2
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.align 32
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE7UVAC_HT:
	.word	0
	.word	2
	.word	1
	.word	2
	.word	4
	.word	3
	.word	10
	.word	4
	.word	24
	.word	5
	.word	25
	.word	5
	.word	56
	.word	6
	.word	120
	.word	7
	.word	500
	.word	9
	.word	1014
	.word	10
	.word	4084
	.word	12
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	11
	.word	4
	.word	57
	.word	6
	.word	246
	.word	8
	.word	501
	.word	9
	.word	2038
	.word	11
	.word	4085
	.word	12
	.word	-120
	.word	16
	.word	-119
	.word	16
	.word	-118
	.word	16
	.word	-117
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	26
	.word	5
	.word	247
	.word	8
	.word	1015
	.word	10
	.word	4086
	.word	12
	.word	32706
	.word	15
	.word	-116
	.word	16
	.word	-115
	.word	16
	.word	-114
	.word	16
	.word	-113
	.word	16
	.word	-112
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	27
	.word	5
	.word	248
	.word	8
	.word	1016
	.word	10
	.word	4087
	.word	12
	.word	-111
	.word	16
	.word	-110
	.word	16
	.word	-109
	.word	16
	.word	-108
	.word	16
	.word	-107
	.word	16
	.word	-106
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	58
	.word	6
	.word	502
	.word	9
	.word	-105
	.word	16
	.word	-104
	.word	16
	.word	-103
	.word	16
	.word	-102
	.word	16
	.word	-101
	.word	16
	.word	-100
	.word	16
	.word	-99
	.word	16
	.word	-98
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	59
	.word	6
	.word	1017
	.word	10
	.word	-97
	.word	16
	.word	-96
	.word	16
	.word	-95
	.word	16
	.word	-94
	.word	16
	.word	-93
	.word	16
	.word	-92
	.word	16
	.word	-91
	.word	16
	.word	-90
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	121
	.word	7
	.word	2039
	.word	11
	.word	-89
	.word	16
	.word	-88
	.word	16
	.word	-87
	.word	16
	.word	-86
	.word	16
	.word	-85
	.word	16
	.word	-84
	.word	16
	.word	-83
	.word	16
	.word	-82
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	122
	.word	7
	.word	2040
	.word	11
	.word	-81
	.word	16
	.word	-80
	.word	16
	.word	-79
	.word	16
	.word	-78
	.word	16
	.word	-77
	.word	16
	.word	-76
	.word	16
	.word	-75
	.word	16
	.word	-74
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	249
	.word	8
	.word	-73
	.word	16
	.word	-72
	.word	16
	.word	-71
	.word	16
	.word	-70
	.word	16
	.word	-69
	.word	16
	.word	-68
	.word	16
	.word	-67
	.word	16
	.word	-66
	.word	16
	.word	-65
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	503
	.word	9
	.word	-64
	.word	16
	.word	-63
	.word	16
	.word	-62
	.word	16
	.word	-61
	.word	16
	.word	-60
	.word	16
	.word	-59
	.word	16
	.word	-58
	.word	16
	.word	-57
	.word	16
	.word	-56
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	504
	.word	9
	.word	-55
	.word	16
	.word	-54
	.word	16
	.word	-53
	.word	16
	.word	-52
	.word	16
	.word	-51
	.word	16
	.word	-50
	.word	16
	.word	-49
	.word	16
	.word	-48
	.word	16
	.word	-47
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	505
	.word	9
	.word	-46
	.word	16
	.word	-45
	.word	16
	.word	-44
	.word	16
	.word	-43
	.word	16
	.word	-42
	.word	16
	.word	-41
	.word	16
	.word	-40
	.word	16
	.word	-39
	.word	16
	.word	-38
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	506
	.word	9
	.word	-37
	.word	16
	.word	-36
	.word	16
	.word	-35
	.word	16
	.word	-34
	.word	16
	.word	-33
	.word	16
	.word	-32
	.word	16
	.word	-31
	.word	16
	.word	-30
	.word	16
	.word	-29
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	2041
	.word	11
	.word	-28
	.word	16
	.word	-27
	.word	16
	.word	-26
	.word	16
	.word	-25
	.word	16
	.word	-24
	.word	16
	.word	-23
	.word	16
	.word	-22
	.word	16
	.word	-21
	.word	16
	.word	-20
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	16352
	.word	14
	.word	-19
	.word	16
	.word	-18
	.word	16
	.word	-17
	.word	16
	.word	-16
	.word	16
	.word	-15
	.word	16
	.word	-14
	.word	16
	.word	-13
	.word	16
	.word	-12
	.word	16
	.word	-11
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	1018
	.word	10
	.word	32707
	.word	15
	.word	-10
	.word	16
	.word	-9
	.word	16
	.word	-8
	.word	16
	.word	-7
	.word	16
	.word	-6
	.word	16
	.word	-5
	.word	16
	.word	-4
	.word	16
	.word	-3
	.word	16
	.word	-2
	.word	16
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.word	0
	.align 32
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE3YQT:
	.long	16
	.long	11
	.long	10
	.long	16
	.long	24
	.long	40
	.long	51
	.long	61
	.long	12
	.long	12
	.long	14
	.long	19
	.long	26
	.long	58
	.long	60
	.long	55
	.long	14
	.long	13
	.long	16
	.long	24
	.long	40
	.long	57
	.long	69
	.long	56
	.long	14
	.long	17
	.long	22
	.long	29
	.long	51
	.long	87
	.long	80
	.long	62
	.long	18
	.long	22
	.long	37
	.long	56
	.long	68
	.long	109
	.long	103
	.long	77
	.long	24
	.long	35
	.long	55
	.long	64
	.long	81
	.long	104
	.long	113
	.long	92
	.long	49
	.long	64
	.long	78
	.long	87
	.long	103
	.long	121
	.long	120
	.long	101
	.long	72
	.long	92
	.long	95
	.long	98
	.long	112
	.long	100
	.long	103
	.long	99
	.align 32
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE4UVQT:
	.long	17
	.long	18
	.long	24
	.long	47
	.long	99
	.long	99
	.long	99
	.long	99
	.long	18
	.long	21
	.long	26
	.long	66
	.long	99
	.long	99
	.long	99
	.long	99
	.long	24
	.long	26
	.long	56
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	47
	.long	66
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.long	99
	.align 32
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE4aasf:
	.long	1077216499
	.long	1081808063
	.long	1080853343
	.long	1079302960
	.long	1077216499
	.long	1074674138
	.long	1069805333
	.long	1061668290
	.align 4
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE5head0:
	.byte	-1
	.byte	-40
	.byte	-1
	.byte	-32
	.byte	0
	.byte	16
	.byte	74
	.byte	70
	.byte	73
	.byte	70
	.byte	0
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.byte	1
	.byte	0
	.byte	1
	.byte	0
	.byte	0
	.byte	-1
	.byte	-37
	.byte	0
	.byte	-124
	.byte	0
	.align 4
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE5head2:
	.byte	-1
	.byte	-38
	.byte	0
	.byte	12
	.byte	3
	.byte	1
	.byte	0
	.byte	2
	.byte	17
	.byte	3
	.byte	17
	.byte	0
	.byte	63
	.byte	0
	.align 4
__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE8fillBits:
	.word	127
	.word	7
	.text
	.def	__ZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKvi;	.scl	3;	.type	32;	.endef
__ZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKvi:
LFB1780:
	.loc 5 1368 120
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	movl	$4472, %eax
	call	___chkstk_ms
	subl	%eax, %esp
	.loc 5 1444 4
	cmpl	$0, 24(%ebp)
	je	L429
	.loc 5 1444 16 discriminator 1
	movl	12(%ebp), %eax
	.loc 5 1444 13 discriminator 1
	testl	%eax, %eax
	je	L429
	.loc 5 1444 26 discriminator 2
	movl	16(%ebp), %eax
	.loc 5 1444 23 discriminator 2
	testl	%eax, %eax
	je	L429
	.loc 5 1444 34 discriminator 3
	cmpl	$4, 20(%ebp)
	jg	L429
	.loc 5 1444 46 discriminator 4
	cmpl	$0, 20(%ebp)
	jg	L430
L429:
	.loc 5 1445 14
	movl	$0, %eax
	jmp	L491
L430:
	.loc 5 1448 22
	cmpl	$0, 28(%ebp)
	je	L432
	.loc 5 1448 22 is_stmt 0 discriminator 1
	movl	28(%ebp), %eax
	jmp	L433
L432:
	.loc 5 1448 22 discriminator 2
	movl	$90, %eax
L433:
	.loc 5 1448 12 is_stmt 1 discriminator 4
	movl	%eax, 28(%ebp)
	.loc 5 1449 30 discriminator 4
	cmpl	$90, 28(%ebp)
	jg	L434
	.loc 5 1449 30 is_stmt 0 discriminator 1
	movl	$1, %eax
	jmp	L435
L434:
	.loc 5 1449 30 discriminator 2
	movl	$0, %eax
L435:
	.loc 5 1449 14 is_stmt 1 discriminator 4
	movl	%eax, -60(%ebp)
	.loc 5 1450 26 discriminator 4
	cmpl	$0, 28(%ebp)
	jle	L436
	.loc 5 1450 26 is_stmt 0 discriminator 1
	movl	$100, %eax
	cmpl	$100, 28(%ebp)
	cmovle	28(%ebp), %eax
	jmp	L437
L436:
	.loc 5 1450 26 discriminator 2
	movl	$1, %eax
L437:
	.loc 5 1450 12 is_stmt 1 discriminator 4
	movl	%eax, 28(%ebp)
	.loc 5 1451 27 discriminator 4
	cmpl	$49, 28(%ebp)
	jg	L438
	.loc 5 1451 27 is_stmt 0 discriminator 1
	movl	$5000, %eax
	cltd
	idivl	28(%ebp)
	jmp	L439
L438:
	.loc 5 1451 50 is_stmt 1 discriminator 2
	movl	$100, %eax
	subl	28(%ebp), %eax
	.loc 5 1451 27 discriminator 2
	addl	%eax, %eax
L439:
	.loc 5 1451 12 discriminator 4
	movl	%eax, 28(%ebp)
LBB76:
	.loc 5 1453 10 discriminator 4
	movl	$0, -20(%ebp)
L445:
	.loc 5 1453 17 discriminator 2
	cmpl	$63, -20(%ebp)
	jg	L440
LBB77:
	.loc 5 1454 29
	movl	-20(%ebp), %eax
	movl	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE3YQT(,%eax,4), %eax
	.loc 5 1454 30
	imull	28(%ebp), %eax
	.loc 5 1454 38
	leal	50(%eax), %ecx
	.loc 5 1454 17
	movl	$1374389535, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$5, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -64(%ebp)
	.loc 5 1455 36
	cmpl	$0, -64(%ebp)
	jle	L441
	.loc 5 1455 79 discriminator 1
	movl	$255, %eax
	cmpl	$255, -64(%ebp)
	cmovle	-64(%ebp), %eax
	.loc 5 1455 36 discriminator 1
	movl	%eax, %edx
	jmp	L442
L441:
	.loc 5 1455 36 is_stmt 0 discriminator 2
	movl	$1, %edx
L442:
	.loc 5 1455 33 is_stmt 1 discriminator 4
	movl	-20(%ebp), %eax
	addl	$__ZL17stbiw__jpg_ZigZag, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 5 1455 36 discriminator 4
	movb	%dl, -716(%ebp,%eax)
	.loc 5 1456 21 discriminator 4
	movl	-20(%ebp), %eax
	movl	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE4UVQT(,%eax,4), %eax
	.loc 5 1456 22 discriminator 4
	imull	28(%ebp), %eax
	.loc 5 1456 30 discriminator 4
	leal	50(%eax), %ecx
	.loc 5 1456 12 discriminator 4
	movl	$1374389535, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$5, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -68(%ebp)
	.loc 5 1457 37 discriminator 4
	cmpl	$0, -68(%ebp)
	jle	L443
	.loc 5 1457 82 discriminator 1
	movl	$255, %eax
	cmpl	$255, -68(%ebp)
	cmovle	-68(%ebp), %eax
	.loc 5 1457 37 discriminator 1
	movl	%eax, %edx
	jmp	L444
L443:
	.loc 5 1457 37 is_stmt 0 discriminator 2
	movl	$1, %edx
L444:
	.loc 5 1457 34 is_stmt 1 discriminator 4
	movl	-20(%ebp), %eax
	addl	$__ZL17stbiw__jpg_ZigZag, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 5 1457 37 discriminator 4
	movb	%dl, -780(%ebp,%eax)
LBE77:
	.loc 5 1453 4 discriminator 4
	addl	$1, -20(%ebp)
	jmp	L445
L440:
LBE76:
	.loc 5 1460 12
	movl	$0, -12(%ebp)
	.loc 5 1460 19
	movl	$0, -24(%ebp)
L449:
	.loc 5 1460 28 discriminator 1
	cmpl	$7, -12(%ebp)
	jg	L446
	.loc 5 1461 15
	movl	$0, -16(%ebp)
L448:
	.loc 5 1461 24 discriminator 3
	cmpl	$7, -16(%ebp)
	jg	L447
	.loc 5 1462 56 discriminator 2
	movl	-24(%ebp), %eax
	addl	$__ZL17stbiw__jpg_ZigZag, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 5 1462 57 discriminator 2
	movzbl	-716(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 5 1462 59 discriminator 2
	movl	%eax, -4412(%ebp)
	fildl	-4412(%ebp)
	.loc 5 1462 69 discriminator 2
	movl	-12(%ebp), %eax
	flds	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE4aasf(,%eax,4)
	.loc 5 1462 59 discriminator 2
	fmulp	%st, %st(1)
	.loc 5 1462 81 discriminator 2
	movl	-16(%ebp), %eax
	flds	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE4aasf(,%eax,4)
	.loc 5 1462 71 discriminator 2
	fmulp	%st, %st(1)
	.loc 5 1462 26 discriminator 2
	fld1
	fdivp	%st, %st(1)
	.loc 5 1462 22 discriminator 2
	movl	-24(%ebp), %eax
	fstps	-396(%ebp,%eax,4)
	.loc 5 1463 56 discriminator 2
	movl	-24(%ebp), %eax
	addl	$__ZL17stbiw__jpg_ZigZag, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 5 1463 57 discriminator 2
	movzbl	-780(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 5 1463 59 discriminator 2
	movl	%eax, -4412(%ebp)
	fildl	-4412(%ebp)
	.loc 5 1463 69 discriminator 2
	movl	-12(%ebp), %eax
	flds	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE4aasf(,%eax,4)
	.loc 5 1463 59 discriminator 2
	fmulp	%st, %st(1)
	.loc 5 1463 81 discriminator 2
	movl	-16(%ebp), %eax
	flds	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE4aasf(,%eax,4)
	.loc 5 1463 71 discriminator 2
	fmulp	%st, %st(1)
	.loc 5 1463 26 discriminator 2
	fld1
	fdivp	%st, %st(1)
	.loc 5 1463 22 discriminator 2
	movl	-24(%ebp), %eax
	fstps	-652(%ebp,%eax,4)
	.loc 5 1461 7 discriminator 2
	addl	$1, -16(%ebp)
	addl	$1, -24(%ebp)
	jmp	L448
L447:
	.loc 5 1460 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L449
L446:
LBB78:
	.loc 5 1471 27
	movl	$0, %ecx
	movl	$24, %eax
	andl	$-4, %eax
	movl	%eax, %edx
	movl	$0, %eax
L450:
	movl	%ecx, -804(%ebp,%eax)
	addl	$4, %eax
	cmpl	%edx, %eax
	jb	L450
	movb	$-1, -804(%ebp)
	movb	$-64, -803(%ebp)
	movb	$17, -801(%ebp)
	movb	$8, -800(%ebp)
	movb	$3, -795(%ebp)
	movb	$1, -794(%ebp)
	movb	$2, -791(%ebp)
	movb	$17, -790(%ebp)
	movb	$1, -789(%ebp)
	movb	$3, -788(%ebp)
	movb	$17, -787(%ebp)
	movb	$1, -786(%ebp)
	movb	$-1, -785(%ebp)
	movb	$-60, -784(%ebp)
	movb	$1, -783(%ebp)
	movb	$-94, -782(%ebp)
	.loc 5 1471 80
	movl	16(%ebp), %eax
	sarl	$8, %eax
	.loc 5 1472 122
	movb	%al, -799(%ebp)
	movl	16(%ebp), %eax
	movb	%al, -798(%ebp)
	.loc 5 1471 126
	movl	12(%ebp), %eax
	sarl	$8, %eax
	.loc 5 1472 122
	movb	%al, -797(%ebp)
	movl	12(%ebp), %eax
	movb	%al, -796(%ebp)
	cmpl	$0, -60(%ebp)
	je	L452
	.loc 5 1472 122 is_stmt 0 discriminator 1
	movl	$34, %eax
	jmp	L453
L452:
	.loc 5 1472 122 discriminator 2
	movl	$17, %eax
L453:
	.loc 5 1472 122 discriminator 4
	movb	%al, -793(%ebp)
	.loc 5 1473 10 is_stmt 1 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1473 14 discriminator 4
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$25, 8(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE5head0, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL16:
	.loc 5 1474 10 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1474 14 discriminator 4
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$64, 8(%esp)
	leal	-716(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL17:
	.loc 5 1475 18 discriminator 4
	movl	$1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbiw__putcP19stbi__write_contexth
	.loc 5 1476 10 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1476 14 discriminator 4
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$64, 8(%esp)
	leal	-780(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL18:
	.loc 5 1477 10 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1477 14 discriminator 4
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$24, 8(%esp)
	leal	-804(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL19:
	.loc 5 1478 10 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1478 14 discriminator 4
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE24std_dc_luminance_nrcodes+1, %ecx
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$16, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL20:
	.loc 5 1479 10 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1479 14 discriminator 4
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$12, 8(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE23std_dc_luminance_values, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL21:
	.loc 5 1480 18 discriminator 4
	movl	$16, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbiw__putcP19stbi__write_contexth
	.loc 5 1481 10 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1481 14 discriminator 4
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE24std_ac_luminance_nrcodes+1, %ecx
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$16, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL22:
	.loc 5 1482 10 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1482 14 discriminator 4
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$162, 8(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE23std_ac_luminance_values, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL23:
	.loc 5 1483 18 discriminator 4
	movl	$1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbiw__putcP19stbi__write_contexth
	.loc 5 1484 10 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1484 14 discriminator 4
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE26std_dc_chrominance_nrcodes+1, %ecx
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$16, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL24:
	.loc 5 1485 10 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1485 14 discriminator 4
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$12, 8(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE25std_dc_chrominance_values, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL25:
	.loc 5 1486 18 discriminator 4
	movl	$17, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbiw__putcP19stbi__write_contexth
	.loc 5 1487 10 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1487 14 discriminator 4
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE26std_ac_chrominance_nrcodes+1, %ecx
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$16, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL26:
	.loc 5 1488 10 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1488 14 discriminator 4
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$162, 8(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE25std_ac_chrominance_values, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL27:
	.loc 5 1489 10 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 5 1489 14 discriminator 4
	movl	8(%ebp), %edx
	movl	4(%edx), %edx
	movl	$14, 8(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE5head2, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL28:
LBE78:
LBB79:
	.loc 5 1495 11 discriminator 4
	movl	$0, -28(%ebp)
	.loc 5 1495 18 discriminator 4
	movl	$0, -32(%ebp)
	.loc 5 1495 25 discriminator 4
	movl	$0, -36(%ebp)
	.loc 5 1496 11 discriminator 4
	movl	$0, -808(%ebp)
	.loc 5 1496 21 discriminator 4
	movl	$0, -812(%ebp)
	.loc 5 1498 27 discriminator 4
	cmpl	$2, 20(%ebp)
	jle	L454
	.loc 5 1498 27 is_stmt 0 discriminator 1
	movl	$1, %eax
	jmp	L455
L454:
	.loc 5 1498 27 discriminator 2
	movl	$0, %eax
L455:
	.loc 5 1498 11 is_stmt 1 discriminator 4
	movl	%eax, -72(%ebp)
	.loc 5 1498 52 discriminator 4
	cmpl	$2, 20(%ebp)
	jle	L456
	.loc 5 1498 52 is_stmt 0 discriminator 5
	movl	$2, %eax
	jmp	L457
L456:
	.loc 5 1498 52 discriminator 6
	movl	$0, %eax
L457:
	.loc 5 1498 36 is_stmt 1 discriminator 8
	movl	%eax, -76(%ebp)
	.loc 5 1499 28 discriminator 8
	movl	24(%ebp), %eax
	movl	%eax, -80(%ebp)
	.loc 5 1500 42 discriminator 8
	movl	-72(%ebp), %edx
	.loc 5 1500 28 discriminator 8
	movl	-80(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -84(%ebp)
	.loc 5 1501 42 discriminator 8
	movl	-76(%ebp), %edx
	.loc 5 1501 28 discriminator 8
	movl	-80(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -88(%ebp)
LBB80:
	.loc 5 1503 7 discriminator 8
	cmpl	$0, -60(%ebp)
	je	L458
LBB81:
LBB82:
	.loc 5 1504 16
	movl	$0, -44(%ebp)
L476:
	.loc 5 1504 23 discriminator 1
	movl	16(%ebp), %eax
	cmpl	%eax, -44(%ebp)
	jge	L477
LBB83:
LBB84:
	.loc 5 1505 19
	movl	$0, -40(%ebp)
L475:
	.loc 5 1505 26 discriminator 2
	movl	12(%ebp), %eax
	cmpl	%eax, -40(%ebp)
	jge	L460
LBB85:
LBB86:
	.loc 5 1507 24
	movl	-44(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 5 1507 33
	movl	$0, -48(%ebp)
L470:
	.loc 5 1507 42 discriminator 1
	movl	-44(%ebp), %eax
	addl	$15, %eax
	cmpl	%eax, -12(%ebp)
	jg	L461
LBB87:
	.loc 5 1509 42
	movl	16(%ebp), %eax
	.loc 5 1509 52
	cmpl	%eax, -12(%ebp)
	jl	L462
	.loc 5 1509 67 discriminator 1
	movl	16(%ebp), %eax
	.loc 5 1509 52 discriminator 1
	subl	$1, %eax
	jmp	L463
L462:
	.loc 5 1509 52 is_stmt 0 discriminator 2
	movl	-12(%ebp), %eax
L463:
	.loc 5 1509 23 is_stmt 1 discriminator 4
	movl	%eax, -92(%ebp)
	.loc 5 1510 91 discriminator 4
	movl	__ZL30stbi__flip_vertically_on_write, %eax
	.loc 5 1510 64 discriminator 4
	testl	%eax, %eax
	je	L464
	.loc 5 1510 73 discriminator 1
	movl	16(%ebp), %eax
	subl	$1, %eax
	.loc 5 1510 64 discriminator 1
	subl	-92(%ebp), %eax
	jmp	L465
L464:
	.loc 5 1510 64 is_stmt 0 discriminator 2
	movl	-92(%ebp), %eax
L465:
	.loc 5 1510 103 is_stmt 1 discriminator 4
	movl	12(%ebp), %edx
	imull	%edx, %eax
	.loc 5 1510 23 discriminator 4
	movl	20(%ebp), %edx
	imull	%edx, %eax
	movl	%eax, -96(%ebp)
LBB88:
	.loc 5 1511 27 discriminator 4
	movl	-40(%ebp), %eax
	movl	%eax, -16(%ebp)
L469:
	.loc 5 1511 36 discriminator 2
	movl	-40(%ebp), %eax
	addl	$15, %eax
	cmpl	%eax, -16(%ebp)
	jg	L466
LBB89:
	.loc 5 1513 45
	movl	12(%ebp), %eax
	.loc 5 1513 54
	cmpl	%eax, -16(%ebp)
	jl	L467
	.loc 5 1513 68 discriminator 1
	movl	12(%ebp), %eax
	.loc 5 1513 54 discriminator 1
	subl	$1, %eax
	jmp	L468
L467:
	.loc 5 1513 54 is_stmt 0 discriminator 2
	movl	-16(%ebp), %eax
L468:
	.loc 5 1513 72 is_stmt 1 discriminator 4
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 5 1513 26 discriminator 4
	movl	-96(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -100(%ebp)
	.loc 5 1514 39 discriminator 4
	movl	-100(%ebp), %edx
	movl	-80(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 1514 28 discriminator 4
	movzbl	%al, %eax
	movw	%ax, -4412(%ebp)
	filds	-4412(%ebp)
	fstps	-104(%ebp)
	.loc 5 1514 53 discriminator 4
	movl	-100(%ebp), %edx
	movl	-84(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 1514 42 discriminator 4
	movzbl	%al, %eax
	movw	%ax, -4412(%ebp)
	filds	-4412(%ebp)
	fstps	-108(%ebp)
	.loc 5 1514 67 discriminator 4
	movl	-100(%ebp), %edx
	movl	-88(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 1514 56 discriminator 4
	movzbl	%al, %eax
	movw	%ax, -4412(%ebp)
	filds	-4412(%ebp)
	fstps	-112(%ebp)
	.loc 5 1515 39 discriminator 4
	flds	-104(%ebp)
	flds	LC24
	fmulp	%st, %st(1)
	.loc 5 1515 52 discriminator 4
	flds	-108(%ebp)
	flds	LC25
	fmulp	%st, %st(1)
	.loc 5 1515 42 discriminator 4
	faddp	%st, %st(1)
	.loc 5 1515 65 discriminator 4
	flds	-112(%ebp)
	flds	LC26
	fmulp	%st, %st(1)
	.loc 5 1515 55 discriminator 4
	faddp	%st, %st(1)
	.loc 5 1515 68 discriminator 4
	flds	LC27
	fsubrp	%st, %st(1)
	.loc 5 1515 28 discriminator 4
	movl	-48(%ebp), %eax
	fstps	-3884(%ebp,%eax,4)
	.loc 5 1516 39 discriminator 4
	flds	-104(%ebp)
	flds	LC28
	fmulp	%st, %st(1)
	.loc 5 1516 52 discriminator 4
	flds	-108(%ebp)
	flds	LC29
	fmulp	%st, %st(1)
	.loc 5 1516 42 discriminator 4
	fsubrp	%st, %st(1)
	.loc 5 1516 65 discriminator 4
	flds	-112(%ebp)
	flds	LC22
	fmulp	%st, %st(1)
	.loc 5 1516 55 discriminator 4
	faddp	%st, %st(1)
	.loc 5 1516 28 discriminator 4
	movl	-48(%ebp), %eax
	fstps	-2860(%ebp,%eax,4)
	.loc 5 1517 39 discriminator 4
	flds	-104(%ebp)
	flds	LC22
	fmulp	%st, %st(1)
	.loc 5 1517 52 discriminator 4
	flds	-108(%ebp)
	flds	LC30
	fmulp	%st, %st(1)
	.loc 5 1517 42 discriminator 4
	fsubrp	%st, %st(1)
	.loc 5 1517 65 discriminator 4
	flds	-112(%ebp)
	flds	LC31
	fmulp	%st, %st(1)
	.loc 5 1517 55 discriminator 4
	fsubrp	%st, %st(1)
	.loc 5 1517 28 discriminator 4
	movl	-48(%ebp), %eax
	fstps	-1836(%ebp,%eax,4)
LBE89:
	.loc 5 1511 19 discriminator 4
	addl	$1, -16(%ebp)
	addl	$1, -48(%ebp)
	jmp	L469
L466:
LBE88:
LBE87:
	.loc 5 1507 16 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L470
L461:
LBE86:
	.loc 5 1520 42
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YAC_HT, 32(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YDC_HT, 28(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 24(%esp)
	leal	-396(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	$16, 16(%esp)
	leal	-3884(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-812(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-808(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_processDUP19stbi__write_contextPiS1_PfiS2_iPA2_KtS5_
	movl	%eax, -28(%ebp)
	.loc 5 1521 42
	leal	-3884(%ebp), %eax
	addl	$32, %eax
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YAC_HT, 32(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YDC_HT, 28(%esp)
	movl	-28(%ebp), %edx
	movl	%edx, 24(%esp)
	leal	-396(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	$16, 16(%esp)
	movl	%eax, 12(%esp)
	leal	-812(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-808(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_processDUP19stbi__write_contextPiS1_PfiS2_iPA2_KtS5_
	movl	%eax, -28(%ebp)
	.loc 5 1522 42
	leal	-3884(%ebp), %eax
	addl	$512, %eax
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YAC_HT, 32(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YDC_HT, 28(%esp)
	movl	-28(%ebp), %edx
	movl	%edx, 24(%esp)
	leal	-396(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	$16, 16(%esp)
	movl	%eax, 12(%esp)
	leal	-812(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-808(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_processDUP19stbi__write_contextPiS1_PfiS2_iPA2_KtS5_
	movl	%eax, -28(%ebp)
	.loc 5 1523 42
	leal	-3884(%ebp), %eax
	addl	$544, %eax
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YAC_HT, 32(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YDC_HT, 28(%esp)
	movl	-28(%ebp), %edx
	movl	%edx, 24(%esp)
	leal	-396(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	$16, 16(%esp)
	movl	%eax, 12(%esp)
	leal	-812(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-808(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_processDUP19stbi__write_contextPiS1_PfiS2_iPA2_KtS5_
	movl	%eax, -28(%ebp)
LBB90:
LBB91:
	.loc 5 1529 26
	movl	$0, -52(%ebp)
	.loc 5 1529 35
	movl	$0, -48(%ebp)
L474:
	.loc 5 1529 43 discriminator 1
	cmpl	$7, -52(%ebp)
	jg	L471
LBB92:
LBB93:
	.loc 5 1530 29
	movl	$0, -56(%ebp)
L473:
	.loc 5 1530 37 discriminator 3
	cmpl	$7, -56(%ebp)
	jg	L472
LBB94:
	.loc 5 1531 38 discriminator 2
	movl	-52(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	-56(%ebp), %eax
	addl	%edx, %eax
	.loc 5 1531 29 discriminator 2
	addl	%eax, %eax
	movl	%eax, -116(%ebp)
	.loc 5 1532 43 discriminator 2
	movl	-116(%ebp), %eax
	flds	-2860(%ebp,%eax,4)
	.loc 5 1532 50 discriminator 2
	movl	-116(%ebp), %eax
	addl	$1, %eax
	.loc 5 1532 52 discriminator 2
	flds	-2860(%ebp,%eax,4)
	.loc 5 1532 45 discriminator 2
	faddp	%st, %st(1)
	.loc 5 1532 59 discriminator 2
	movl	-116(%ebp), %eax
	addl	$16, %eax
	.loc 5 1532 62 discriminator 2
	flds	-2860(%ebp,%eax,4)
	.loc 5 1532 54 discriminator 2
	faddp	%st, %st(1)
	.loc 5 1532 69 discriminator 2
	movl	-116(%ebp), %eax
	addl	$17, %eax
	.loc 5 1532 72 discriminator 2
	flds	-2860(%ebp,%eax,4)
	.loc 5 1532 64 discriminator 2
	faddp	%st, %st(1)
	.loc 5 1532 75 discriminator 2
	flds	LC32
	fmulp	%st, %st(1)
	.loc 5 1532 35 discriminator 2
	movl	-48(%ebp), %eax
	fstps	-4396(%ebp,%eax,4)
	.loc 5 1533 43 discriminator 2
	movl	-116(%ebp), %eax
	flds	-1836(%ebp,%eax,4)
	.loc 5 1533 50 discriminator 2
	movl	-116(%ebp), %eax
	addl	$1, %eax
	.loc 5 1533 52 discriminator 2
	flds	-1836(%ebp,%eax,4)
	.loc 5 1533 45 discriminator 2
	faddp	%st, %st(1)
	.loc 5 1533 59 discriminator 2
	movl	-116(%ebp), %eax
	addl	$16, %eax
	.loc 5 1533 62 discriminator 2
	flds	-1836(%ebp,%eax,4)
	.loc 5 1533 54 discriminator 2
	faddp	%st, %st(1)
	.loc 5 1533 69 discriminator 2
	movl	-116(%ebp), %eax
	addl	$17, %eax
	.loc 5 1533 72 discriminator 2
	flds	-1836(%ebp,%eax,4)
	.loc 5 1533 64 discriminator 2
	faddp	%st, %st(1)
	.loc 5 1533 75 discriminator 2
	flds	LC32
	fmulp	%st, %st(1)
	.loc 5 1533 35 discriminator 2
	movl	-48(%ebp), %eax
	fstps	-4140(%ebp,%eax,4)
LBE94:
	.loc 5 1530 22 discriminator 2
	addl	$1, -56(%ebp)
	addl	$1, -48(%ebp)
	jmp	L473
L472:
LBE93:
LBE92:
	.loc 5 1529 19 discriminator 2
	addl	$1, -52(%ebp)
	jmp	L474
L471:
LBE91:
	.loc 5 1536 45
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE7UVAC_HT, 32(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE7UVDC_HT, 28(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 24(%esp)
	leal	-652(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	$8, 16(%esp)
	leal	-4396(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-812(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-808(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_processDUP19stbi__write_contextPiS1_PfiS2_iPA2_KtS5_
	movl	%eax, -32(%ebp)
	.loc 5 1537 45
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE7UVAC_HT, 32(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE7UVDC_HT, 28(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 24(%esp)
	leal	-652(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	$8, 16(%esp)
	leal	-4140(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-812(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-808(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_processDUP19stbi__write_contextPiS1_PfiS2_iPA2_KtS5_
	movl	%eax, -36(%ebp)
LBE90:
LBE85:
	.loc 5 1505 37
	addl	$16, -40(%ebp)
	.loc 5 1505 13
	jmp	L475
L460:
LBE84:
LBE83:
	.loc 5 1504 35 discriminator 2
	addl	$16, -44(%ebp)
	.loc 5 1504 10 discriminator 2
	jmp	L476
L458:
LBE82:
LBE81:
LBB95:
LBB96:
	.loc 5 1542 16
	movl	$0, -44(%ebp)
L490:
	.loc 5 1542 23 discriminator 1
	movl	16(%ebp), %eax
	cmpl	%eax, -44(%ebp)
	jge	L477
LBB97:
LBB98:
	.loc 5 1543 19
	movl	$0, -40(%ebp)
L489:
	.loc 5 1543 26 discriminator 2
	movl	12(%ebp), %eax
	cmpl	%eax, -40(%ebp)
	jge	L478
LBB99:
LBB100:
	.loc 5 1545 24
	movl	-44(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 5 1545 33
	movl	$0, -48(%ebp)
L488:
	.loc 5 1545 42 discriminator 1
	movl	-44(%ebp), %eax
	addl	$7, %eax
	cmpl	%eax, -12(%ebp)
	jg	L479
LBB101:
	.loc 5 1547 42
	movl	16(%ebp), %eax
	.loc 5 1547 52
	cmpl	%eax, -12(%ebp)
	jl	L480
	.loc 5 1547 67 discriminator 1
	movl	16(%ebp), %eax
	.loc 5 1547 52 discriminator 1
	subl	$1, %eax
	jmp	L481
L480:
	.loc 5 1547 52 is_stmt 0 discriminator 2
	movl	-12(%ebp), %eax
L481:
	.loc 5 1547 23 is_stmt 1 discriminator 4
	movl	%eax, -120(%ebp)
	.loc 5 1548 91 discriminator 4
	movl	__ZL30stbi__flip_vertically_on_write, %eax
	.loc 5 1548 64 discriminator 4
	testl	%eax, %eax
	je	L482
	.loc 5 1548 73 discriminator 1
	movl	16(%ebp), %eax
	subl	$1, %eax
	.loc 5 1548 64 discriminator 1
	subl	-120(%ebp), %eax
	jmp	L483
L482:
	.loc 5 1548 64 is_stmt 0 discriminator 2
	movl	-120(%ebp), %eax
L483:
	.loc 5 1548 103 is_stmt 1 discriminator 4
	movl	12(%ebp), %edx
	imull	%edx, %eax
	.loc 5 1548 23 discriminator 4
	movl	20(%ebp), %edx
	imull	%edx, %eax
	movl	%eax, -124(%ebp)
LBB102:
	.loc 5 1549 27 discriminator 4
	movl	-40(%ebp), %eax
	movl	%eax, -16(%ebp)
L487:
	.loc 5 1549 36 discriminator 2
	movl	-40(%ebp), %eax
	addl	$7, %eax
	cmpl	%eax, -16(%ebp)
	jg	L484
LBB103:
	.loc 5 1551 45
	movl	12(%ebp), %eax
	.loc 5 1551 54
	cmpl	%eax, -16(%ebp)
	jl	L485
	.loc 5 1551 68 discriminator 1
	movl	12(%ebp), %eax
	.loc 5 1551 54 discriminator 1
	subl	$1, %eax
	jmp	L486
L485:
	.loc 5 1551 54 is_stmt 0 discriminator 2
	movl	-16(%ebp), %eax
L486:
	.loc 5 1551 72 is_stmt 1 discriminator 4
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 5 1551 26 discriminator 4
	movl	-124(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -128(%ebp)
	.loc 5 1552 39 discriminator 4
	movl	-128(%ebp), %edx
	movl	-80(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 1552 28 discriminator 4
	movzbl	%al, %eax
	movw	%ax, -4412(%ebp)
	filds	-4412(%ebp)
	fstps	-132(%ebp)
	.loc 5 1552 53 discriminator 4
	movl	-128(%ebp), %edx
	movl	-84(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 1552 42 discriminator 4
	movzbl	%al, %eax
	movw	%ax, -4412(%ebp)
	filds	-4412(%ebp)
	fstps	-136(%ebp)
	.loc 5 1552 67 discriminator 4
	movl	-128(%ebp), %edx
	movl	-88(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 5 1552 56 discriminator 4
	movzbl	%al, %eax
	movw	%ax, -4412(%ebp)
	filds	-4412(%ebp)
	fstps	-140(%ebp)
	.loc 5 1553 39 discriminator 4
	flds	-132(%ebp)
	flds	LC24
	fmulp	%st, %st(1)
	.loc 5 1553 52 discriminator 4
	flds	-136(%ebp)
	flds	LC25
	fmulp	%st, %st(1)
	.loc 5 1553 42 discriminator 4
	faddp	%st, %st(1)
	.loc 5 1553 65 discriminator 4
	flds	-140(%ebp)
	flds	LC26
	fmulp	%st, %st(1)
	.loc 5 1553 55 discriminator 4
	faddp	%st, %st(1)
	.loc 5 1553 68 discriminator 4
	flds	LC27
	fsubrp	%st, %st(1)
	.loc 5 1553 28 discriminator 4
	movl	-48(%ebp), %eax
	fstps	-3884(%ebp,%eax,4)
	.loc 5 1554 39 discriminator 4
	flds	-132(%ebp)
	flds	LC28
	fmulp	%st, %st(1)
	.loc 5 1554 52 discriminator 4
	flds	-136(%ebp)
	flds	LC29
	fmulp	%st, %st(1)
	.loc 5 1554 42 discriminator 4
	fsubrp	%st, %st(1)
	.loc 5 1554 65 discriminator 4
	flds	-140(%ebp)
	flds	LC22
	fmulp	%st, %st(1)
	.loc 5 1554 55 discriminator 4
	faddp	%st, %st(1)
	.loc 5 1554 28 discriminator 4
	movl	-48(%ebp), %eax
	fstps	-2860(%ebp,%eax,4)
	.loc 5 1555 39 discriminator 4
	flds	-132(%ebp)
	flds	LC22
	fmulp	%st, %st(1)
	.loc 5 1555 52 discriminator 4
	flds	-136(%ebp)
	flds	LC30
	fmulp	%st, %st(1)
	.loc 5 1555 42 discriminator 4
	fsubrp	%st, %st(1)
	.loc 5 1555 65 discriminator 4
	flds	-140(%ebp)
	flds	LC31
	fmulp	%st, %st(1)
	.loc 5 1555 55 discriminator 4
	fsubrp	%st, %st(1)
	.loc 5 1555 28 discriminator 4
	movl	-48(%ebp), %eax
	fstps	-1836(%ebp,%eax,4)
LBE103:
	.loc 5 1549 19 discriminator 4
	addl	$1, -16(%ebp)
	addl	$1, -48(%ebp)
	jmp	L487
L484:
LBE102:
LBE101:
	.loc 5 1545 16 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L488
L479:
LBE100:
	.loc 5 1559 42
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YAC_HT, 32(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YDC_HT, 28(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 24(%esp)
	leal	-396(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	$8, 16(%esp)
	leal	-3884(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-812(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-808(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_processDUP19stbi__write_contextPiS1_PfiS2_iPA2_KtS5_
	movl	%eax, -28(%ebp)
	.loc 5 1560 42
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE7UVAC_HT, 32(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE7UVDC_HT, 28(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 24(%esp)
	leal	-652(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	$8, 16(%esp)
	leal	-2860(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-812(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-808(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_processDUP19stbi__write_contextPiS1_PfiS2_iPA2_KtS5_
	movl	%eax, -32(%ebp)
	.loc 5 1561 42
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE7UVAC_HT, 32(%esp)
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE7UVDC_HT, 28(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 24(%esp)
	leal	-652(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	$8, 16(%esp)
	leal	-1836(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-812(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-808(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_processDUP19stbi__write_contextPiS1_PfiS2_iPA2_KtS5_
	movl	%eax, -36(%ebp)
LBE99:
	.loc 5 1543 37
	addl	$8, -40(%ebp)
	.loc 5 1543 13
	jmp	L489
L478:
LBE98:
LBE97:
	.loc 5 1542 35 discriminator 2
	addl	$8, -44(%ebp)
	.loc 5 1542 10 discriminator 2
	jmp	L490
L477:
LBE96:
LBE95:
LBE80:
	.loc 5 1567 27
	movl	$__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE8fillBits, 12(%esp)
	leal	-812(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-808(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbiw__jpg_writeBitsP19stbi__write_contextPiS1_PKt
LBE79:
	.loc 5 1571 15
	movl	$255, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbiw__putcP19stbi__write_contexth
	.loc 5 1572 15
	movl	$217, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbiw__putcP19stbi__write_contexth
	.loc 5 1574 11
	movl	$1, %eax
L491:
	.loc 5 1575 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1780:
	.globl	_stbi_write_jpg_to_func
	.def	_stbi_write_jpg_to_func;	.scl	2;	.type	32;	.endef
_stbi_write_jpg_to_func:
LFB1781:
	.loc 5 1578 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	subl	$116, %esp
	.cfi_offset 7, -12
	.loc 5 1579 24
	leal	-84(%ebp), %edx
	movl	$0, %eax
	movl	$19, %ecx
	movl	%edx, %edi
	rep stosl
	.loc 5 1580 31
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL27stbi__start_write_callbacksP19stbi__write_contextPFvPvS1_iES1_
	.loc 5 1581 30
	movl	32(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKvi
	.loc 5 1581 69
	nop
	.loc 5 1582 1
	addl	$116, %esp
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1781:
	.globl	_stbi_write_jpg
	.def	_stbi_write_jpg;	.scl	2;	.type	32;	.endef
_stbi_write_jpg:
LFB1782:
	.loc 5 1587 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	subl	$116, %esp
	.cfi_offset 7, -12
	.loc 5 1588 24
	leal	-88(%ebp), %edx
	movl	$0, %eax
	movl	$19, %ecx
	movl	%edx, %edi
	rep stosl
LBB104:
	.loc 5 1589 30
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__start_write_fileP19stbi__write_contextPKc
	.loc 5 1589 43
	testl	%eax, %eax
	setne	%al
	.loc 5 1589 4
	testb	%al, %al
	je	L495
LBB105:
	.loc 5 1590 34
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKvi
	movl	%eax, -12(%ebp)
	.loc 5 1591 27
	leal	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__end_write_fileP19stbi__write_context
	.loc 5 1592 14
	movl	-12(%ebp), %eax
	jmp	L497
L495:
LBE105:
	.loc 5 1594 14
	movl	$0, %eax
L497:
LBE104:
	.loc 5 1595 1 discriminator 1
	addl	$116, %esp
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1782:
	.def	__ZL15stbi__start_memP13stbi__contextPKhi;	.scl	3;	.type	32;	.endef
__ZL15stbi__start_memP13stbi__contextPKhi:
LFB1783:
	.file 6 "stb_image.h"
	.loc 6 791 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 792 15
	movl	8(%ebp), %eax
	movl	$0, 16(%eax)
	.loc 6 793 27
	movl	8(%ebp), %eax
	movl	$0, 32(%eax)
	.loc 6 794 29
	movl	8(%ebp), %eax
	movl	$0, 168(%eax)
	.loc 6 795 43
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 180(%eax)
	.loc 6 795 23
	movl	8(%ebp), %eax
	movl	180(%eax), %edx
	.loc 6 795 18
	movl	8(%ebp), %eax
	movl	%edx, 172(%eax)
	.loc 6 796 71
	movl	16(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 796 51
	movl	8(%ebp), %eax
	movl	%edx, 184(%eax)
	.loc 6 796 27
	movl	8(%ebp), %eax
	movl	184(%eax), %edx
	.loc 6 796 22
	movl	8(%ebp), %eax
	movl	%edx, 176(%eax)
	.loc 6 797 1
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1783:
	.def	__ZL21stbi__start_callbacksP13stbi__contextP17stbi_io_callbacksPv;	.scl	3;	.type	32;	.endef
__ZL21stbi__start_callbacksP13stbi__contextP17stbi_io_callbacksPv:
LFB1784:
	.loc 6 801 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 802 10
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	(%edx), %ecx
	movl	%ecx, 16(%eax)
	movl	4(%edx), %ecx
	movl	%ecx, 20(%eax)
	movl	8(%edx), %edx
	movl	%edx, 24(%eax)
	.loc 6 803 20
	movl	8(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 28(%eax)
	.loc 6 804 14
	movl	8(%ebp), %eax
	movl	$128, 36(%eax)
	.loc 6 805 27
	movl	8(%ebp), %eax
	movl	$1, 32(%eax)
	.loc 6 806 29
	movl	8(%ebp), %eax
	movl	$0, 168(%eax)
	.loc 6 807 48
	movl	8(%ebp), %eax
	leal	40(%eax), %edx
	.loc 6 807 43
	movl	8(%ebp), %eax
	movl	%edx, 180(%eax)
	.loc 6 807 23
	movl	8(%ebp), %eax
	movl	180(%eax), %edx
	.loc 6 807 18
	movl	8(%ebp), %eax
	movl	%edx, 172(%eax)
	.loc 6 808 23
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__refill_bufferP13stbi__context
	.loc 6 809 36
	movl	8(%ebp), %eax
	movl	176(%eax), %edx
	.loc 6 809 31
	movl	8(%ebp), %eax
	movl	%edx, 184(%eax)
	.loc 6 810 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1784:
	.def	__ZL16stbi__stdio_readPvPci;	.scl	3;	.type	32;	.endef
__ZL16stbi__stdio_readPvPci:
LFB1785:
	.loc 6 815 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 816 22
	movl	16(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$1, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_fread
	.loc 6 817 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1785:
	.def	__ZL16stbi__stdio_skipPvi;	.scl	3;	.type	32;	.endef
__ZL16stbi__stdio_skipPvi:
LFB1786:
	.loc 6 820 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 822 9
	movl	$1, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_fseek
	.loc 6 823 14
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_fgetc
	movl	%eax, -12(%ebp)
	.loc 6 824 4
	cmpl	$-1, -12(%ebp)
	je	L504
	.loc 6 825 13
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_ungetc
L504:
	.loc 6 827 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1786:
	.def	__ZL15stbi__stdio_eofPv;	.scl	3;	.type	32;	.endef
__ZL15stbi__stdio_eofPv:
LFB1787:
	.loc 6 830 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 831 15
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_feof
	.loc 6 831 30
	testl	%eax, %eax
	jne	L506
	.loc 6 831 39 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_ferror
	.loc 6 831 30 discriminator 2
	testl	%eax, %eax
	je	L507
L506:
	.loc 6 831 30 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L508
L507:
	.loc 6 831 30 discriminator 4
	movl	$0, %eax
L508:
	.loc 6 831 53 is_stmt 1 discriminator 6
	movzbl	%al, %eax
	.loc 6 832 1 discriminator 6
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1787:
	.data
	.align 4
__ZL21stbi__stdio_callbacks:
	.long	__ZL16stbi__stdio_readPvPci
	.long	__ZL16stbi__stdio_skipPvi
	.long	__ZL15stbi__stdio_eofPv
	.text
	.def	__ZL16stbi__start_fileP13stbi__contextP6_iobuf;	.scl	3;	.type	32;	.endef
__ZL16stbi__start_fileP13stbi__contextP6_iobuf:
LFB1788:
	.loc 6 842 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 843 25
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$__ZL21stbi__stdio_callbacks, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__start_callbacksP13stbi__contextP17stbi_io_callbacksPv
	.loc 6 844 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1788:
	.def	__ZL12stbi__rewindP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL12stbi__rewindP13stbi__context:
LFB1789:
	.loc 6 851 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 855 23
	movl	8(%ebp), %eax
	movl	180(%eax), %edx
	.loc 6 855 18
	movl	8(%ebp), %eax
	movl	%edx, 172(%eax)
	.loc 6 856 27
	movl	8(%ebp), %eax
	movl	184(%eax), %edx
	.loc 6 856 22
	movl	8(%ebp), %eax
	movl	%edx, 176(%eax)
	.loc 6 857 1
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1789:
	.globl	_stbi_failure_reason
	.def	_stbi_failure_reason;	.scl	2;	.type	32;	.endef
_stbi_failure_reason:
LFB1790:
	.loc 6 936 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 937 11
	movl	$___emutls_v._ZL22stbi__g_failure_reason, (%esp)
	call	___emutls_get_address
	movl	(%eax), %eax
	.loc 6 938 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1790:
	.def	__ZL9stbi__errPKc;	.scl	3;	.type	32;	.endef
__ZL9stbi__errPKc:
LFB1791:
	.loc 6 942 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 943 27
	movl	$___emutls_v._ZL22stbi__g_failure_reason, (%esp)
	call	___emutls_get_address
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%eax, (%edx)
	.loc 6 944 11
	movl	$0, %eax
	.loc 6 945 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1791:
	.def	__ZL12stbi__mallocj;	.scl	3;	.type	32;	.endef
__ZL12stbi__mallocj:
LFB1792:
	.loc 6 949 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 950 12
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_malloc
	.loc 6 951 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1792:
	.def	__ZL20stbi__addsizes_validii;	.scl	3;	.type	32;	.endef
__ZL20stbi__addsizes_validii:
LFB1793:
	.loc 6 966 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 967 4
	cmpl	$0, 12(%ebp)
	jns	L519
	.loc 6 967 22 discriminator 1
	movl	$0, %eax
	jmp	L520
L519:
	.loc 6 972 24
	movl	$2147483647, %eax
	subl	12(%ebp), %eax
	.loc 6 972 13
	cmpl	%eax, 8(%ebp)
	setle	%al
	.loc 6 972 26
	movzbl	%al, %eax
L520:
	.loc 6 973 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1793:
	.def	__ZL21stbi__mul2sizes_validii;	.scl	3;	.type	32;	.endef
__ZL21stbi__mul2sizes_validii:
LFB1794:
	.loc 6 978 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 979 4
	cmpl	$0, 8(%ebp)
	js	L522
	.loc 6 979 14 discriminator 2
	cmpl	$0, 12(%ebp)
	jns	L523
L522:
	.loc 6 979 31 discriminator 3
	movl	$0, %eax
	jmp	L524
L523:
	.loc 6 980 4
	cmpl	$0, 12(%ebp)
	jne	L525
	.loc 6 980 23 discriminator 1
	movl	$1, %eax
	jmp	L524
L525:
	.loc 6 982 23
	movl	$2147483647, %eax
	cltd
	idivl	12(%ebp)
	.loc 6 982 13
	cmpl	%eax, 8(%ebp)
	setle	%al
	.loc 6 982 24
	movzbl	%al, %eax
L524:
	.loc 6 983 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1794:
	.def	__ZL21stbi__mad2sizes_validiii;	.scl	3;	.type	32;	.endef
__ZL21stbi__mad2sizes_validiii:
LFB1795:
	.loc 6 988 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 989 32
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__mul2sizes_validii
	.loc 6 989 39
	testl	%eax, %eax
	je	L527
	.loc 6 989 62 discriminator 1
	movl	8(%ebp), %eax
	imull	12(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbi__addsizes_validii
	.loc 6 989 39 discriminator 1
	testl	%eax, %eax
	je	L527
	.loc 6 989 39 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L528
L527:
	.loc 6 989 39 discriminator 4
	movl	$0, %eax
L528:
	.loc 6 989 71 is_stmt 1 discriminator 6
	movzbl	%al, %eax
	.loc 6 990 1 discriminator 6
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1795:
	.def	__ZL21stbi__mad3sizes_validiiii;	.scl	3;	.type	32;	.endef
__ZL21stbi__mad3sizes_validiiii:
LFB1796:
	.loc 6 995 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 996 32
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__mul2sizes_validii
	.loc 6 996 72
	testl	%eax, %eax
	je	L531
	.loc 6 996 63 discriminator 1
	movl	8(%ebp), %eax
	imull	12(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL21stbi__mul2sizes_validii
	.loc 6 996 39 discriminator 1
	testl	%eax, %eax
	je	L531
	.loc 6 997 29 discriminator 3
	movl	8(%ebp), %eax
	imull	12(%ebp), %eax
	.loc 6 997 27 discriminator 3
	imull	16(%ebp), %eax
	movl	20(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbi__addsizes_validii
	.loc 6 996 72 discriminator 3
	testl	%eax, %eax
	je	L531
	.loc 6 996 72 is_stmt 0 discriminator 5
	movl	$1, %eax
	jmp	L532
L531:
	.loc 6 996 72 discriminator 6
	movl	$0, %eax
L532:
	.loc 6 997 38 is_stmt 1
	movzbl	%al, %eax
	.loc 6 998 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1796:
	.def	__ZL21stbi__mad4sizes_validiiiii;	.scl	3;	.type	32;	.endef
__ZL21stbi__mad4sizes_validiiiii:
LFB1797:
	.loc 6 1003 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 1004 32
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__mul2sizes_validii
	.loc 6 1005 39
	testl	%eax, %eax
	je	L535
	.loc 6 1004 63
	movl	8(%ebp), %eax
	imull	12(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL21stbi__mul2sizes_validii
	.loc 6 1004 39
	testl	%eax, %eax
	je	L535
	.loc 6 1005 30 discriminator 1
	movl	8(%ebp), %eax
	imull	12(%ebp), %eax
	.loc 6 1005 28 discriminator 1
	imull	16(%ebp), %eax
	movl	20(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL21stbi__mul2sizes_validii
	.loc 6 1004 72 discriminator 1
	testl	%eax, %eax
	je	L535
	.loc 6 1005 64 discriminator 3
	movl	8(%ebp), %eax
	imull	12(%ebp), %eax
	.loc 6 1005 66 discriminator 3
	imull	16(%ebp), %eax
	.loc 6 1005 62 discriminator 3
	imull	20(%ebp), %eax
	movl	24(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbi__addsizes_validii
	.loc 6 1005 39 discriminator 3
	testl	%eax, %eax
	je	L535
	.loc 6 1005 39 is_stmt 0 discriminator 2
	movl	$1, %eax
	jmp	L536
L535:
	.loc 6 1005 39 discriminator 1
	movl	$0, %eax
L536:
	.loc 6 1005 75 is_stmt 1 discriminator 5
	movzbl	%al, %eax
	.loc 6 1006 1 discriminator 5
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1797:
	.def	__ZL17stbi__malloc_mad2iii;	.scl	3;	.type	32;	.endef
__ZL17stbi__malloc_mad2iii:
LFB1798:
	.loc 6 1012 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 1013 30
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__mad2sizes_validiii
	.loc 6 1013 8
	testl	%eax, %eax
	sete	%al
	.loc 6 1013 4
	testb	%al, %al
	je	L539
	.loc 6 1013 50 discriminator 1
	movl	$0, %eax
	jmp	L540
L539:
	.loc 6 1014 25
	movl	8(%ebp), %eax
	imull	12(%ebp), %eax
	movl	%eax, %edx
	.loc 6 1014 28
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1014 23
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	.loc 6 1014 33
	nop
L540:
	.loc 6 1015 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1798:
	.def	__ZL17stbi__malloc_mad3iiii;	.scl	3;	.type	32;	.endef
__ZL17stbi__malloc_mad3iiii:
LFB1799:
	.loc 6 1019 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 1020 30
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__mad3sizes_validiiii
	.loc 6 1020 8
	testl	%eax, %eax
	sete	%al
	.loc 6 1020 4
	testb	%al, %al
	je	L542
	.loc 6 1020 53 discriminator 1
	movl	$0, %eax
	jmp	L543
L542:
	.loc 6 1021 25
	movl	8(%ebp), %eax
	imull	12(%ebp), %eax
	.loc 6 1021 27
	imull	16(%ebp), %eax
	movl	%eax, %edx
	.loc 6 1021 30
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1021 23
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	.loc 6 1021 35
	nop
L543:
	.loc 6 1022 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1799:
	.def	__ZL17stbi__malloc_mad4iiiii;	.scl	3;	.type	32;	.endef
__ZL17stbi__malloc_mad4iiiii:
LFB1800:
	.loc 6 1026 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 1027 30
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__mad4sizes_validiiiii
	.loc 6 1027 8
	testl	%eax, %eax
	sete	%al
	.loc 6 1027 4
	testb	%al, %al
	je	L545
	.loc 6 1027 56 discriminator 1
	movl	$0, %eax
	jmp	L546
L545:
	.loc 6 1028 25
	movl	8(%ebp), %eax
	imull	12(%ebp), %eax
	.loc 6 1028 27
	imull	16(%ebp), %eax
	.loc 6 1028 29
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 6 1028 32
	movl	24(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1028 23
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	.loc 6 1028 37
	nop
L546:
	.loc 6 1029 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1800:
	.globl	_stbi_image_free
	.def	_stbi_image_free;	.scl	2;	.type	32;	.endef
_stbi_image_free:
LFB1801:
	.loc 6 1048 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 1049 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1050 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1801:
.lcomm __ZL36stbi__vertically_flip_on_load_global,4,4
	.globl	_stbi_set_flip_vertically_on_load
	.def	_stbi_set_flip_vertically_on_load;	.scl	2;	.type	32;	.endef
_stbi_set_flip_vertically_on_load:
LFB1802:
	.loc 6 1063 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 1064 41
	movl	8(%ebp), %eax
	movl	%eax, __ZL36stbi__vertically_flip_on_load_global
	.loc 6 1065 1
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1802:
	.globl	_stbi_set_flip_vertically_on_load_thread
	.def	_stbi_set_flip_vertically_on_load_thread;	.scl	2;	.type	32;	.endef
_stbi_set_flip_vertically_on_load_thread:
LFB1803:
	.loc 6 1073 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 1074 40
	movl	$___emutls_v._ZL35stbi__vertically_flip_on_load_local, (%esp)
	call	___emutls_get_address
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%eax, (%edx)
	.loc 6 1075 38
	movl	$___emutls_v._ZL33stbi__vertically_flip_on_load_set, (%esp)
	call	___emutls_get_address
	movl	$1, (%eax)
	.loc 6 1076 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1803:
	.section .rdata,"dr"
LC33:
	.ascii "unknown image type\0"
	.text
	.def	__ZL15stbi__load_mainP13stbi__contextPiS1_S1_iP17stbi__result_infoi;	.scl	3;	.type	32;	.endef
__ZL15stbi__load_mainP13stbi__contextPiS1_S1_iP17stbi__result_infoi:
LFB1804:
	.loc 6 1084 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 1085 10
	movl	$12, 8(%esp)
	movl	$0, 4(%esp)
	movl	28(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 6 1086 25
	movl	28(%ebp), %eax
	movl	$8, (%eax)
	.loc 6 1087 22
	movl	28(%ebp), %eax
	movl	$0, 8(%eax)
	.loc 6 1088 21
	movl	28(%ebp), %eax
	movl	$0, 4(%eax)
	.loc 6 1091 23
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__jpeg_testP13stbi__context
	.loc 6 1091 26
	testl	%eax, %eax
	setne	%al
	.loc 6 1091 4
	testb	%al, %al
	je	L551
	.loc 6 1091 50 discriminator 1
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__jpeg_loadP13stbi__contextPiS1_S1_iP17stbi__result_info
	.loc 6 1091 74 discriminator 1
	jmp	L552
L551:
	.loc 6 1094 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__png_testP13stbi__context
	.loc 6 1094 25
	testl	%eax, %eax
	setne	%al
	.loc 6 1094 4
	testb	%al, %al
	je	L553
	.loc 6 1094 49 discriminator 1
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__png_loadP13stbi__contextPiS1_S1_iP17stbi__result_info
	.loc 6 1094 73 discriminator 1
	jmp	L552
L553:
	.loc 6 1097 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__bmp_testP13stbi__context
	.loc 6 1097 25
	testl	%eax, %eax
	setne	%al
	.loc 6 1097 4
	testb	%al, %al
	je	L554
	.loc 6 1097 49 discriminator 1
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__bmp_loadP13stbi__contextPiS1_S1_iP17stbi__result_info
	.loc 6 1097 73 discriminator 1
	jmp	L552
L554:
	.loc 6 1100 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__gif_testP13stbi__context
	.loc 6 1100 25
	testl	%eax, %eax
	setne	%al
	.loc 6 1100 4
	testb	%al, %al
	je	L555
	.loc 6 1100 49 discriminator 1
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__gif_loadP13stbi__contextPiS1_S1_iP17stbi__result_info
	.loc 6 1100 73 discriminator 1
	jmp	L552
L555:
	.loc 6 1103 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__psd_testP13stbi__context
	.loc 6 1103 25
	testl	%eax, %eax
	setne	%al
	.loc 6 1103 4
	testb	%al, %al
	je	L556
	.loc 6 1103 49 discriminator 1
	movl	32(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__psd_loadP13stbi__contextPiS1_S1_iP17stbi__result_infoi
	.loc 6 1103 78 discriminator 1
	jmp	L552
L556:
	.loc 6 1108 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__pic_testP13stbi__context
	.loc 6 1108 25
	testl	%eax, %eax
	setne	%al
	.loc 6 1108 4
	testb	%al, %al
	je	L557
	.loc 6 1108 49 discriminator 1
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__pic_loadP13stbi__contextPiS1_S1_iP17stbi__result_info
	.loc 6 1108 73 discriminator 1
	jmp	L552
L557:
	.loc 6 1111 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__pnm_testP13stbi__context
	.loc 6 1111 25
	testl	%eax, %eax
	setne	%al
	.loc 6 1111 4
	testb	%al, %al
	je	L558
	.loc 6 1111 49 discriminator 1
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__pnm_loadP13stbi__contextPiS1_S1_iP17stbi__result_info
	.loc 6 1111 73 discriminator 1
	jmp	L552
L558:
LBB106:
	.loc 6 1115 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__hdr_testP13stbi__context
	.loc 6 1115 25
	testl	%eax, %eax
	setne	%al
	.loc 6 1115 4
	testb	%al, %al
	je	L559
LBB107:
	.loc 6 1116 34
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__hdr_loadP13stbi__contextPiS1_S1_iP17stbi__result_info
	movl	%eax, -12(%ebp)
	.loc 6 1117 30
	cmpl	$0, 24(%ebp)
	jne	L560
	.loc 6 1117 30 is_stmt 0 discriminator 1
	movl	20(%ebp), %eax
	movl	(%eax), %eax
	jmp	L561
L560:
	.loc 6 1117 30 discriminator 2
	movl	24(%ebp), %eax
L561:
	.loc 6 1117 30 discriminator 4
	movl	16(%ebp), %edx
	movl	(%edx), %ecx
	movl	12(%ebp), %edx
	movl	(%edx), %edx
	movl	%eax, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__hdr_to_ldrPfiii
	.loc 6 1117 71 is_stmt 1 discriminator 4
	jmp	L552
L559:
LBE107:
LBE106:
	.loc 6 1123 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__tga_testP13stbi__context
	.loc 6 1123 25
	testl	%eax, %eax
	setne	%al
	.loc 6 1123 4
	testb	%al, %al
	je	L562
	.loc 6 1124 28
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__tga_loadP13stbi__contextPiS1_S1_iP17stbi__result_info
	.loc 6 1124 52
	jmp	L552
L562:
	.loc 6 1127 11
	movl	$LC33, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
L552:
	.loc 6 1128 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1804:
	.section .rdata,"dr"
LC34:
	.ascii "outofmem\0"
	.text
	.def	__ZL21stbi__convert_16_to_8Ptiii;	.scl	3;	.type	32;	.endef
__ZL21stbi__convert_16_to_8Ptiii:
LFB1805:
	.loc 6 1131 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 1133 20
	movl	12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 6 1133 8
	movl	20(%ebp), %edx
	imull	%edx, %eax
	movl	%eax, -16(%ebp)
	.loc 6 1136 38
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, -20(%ebp)
	.loc 6 1137 4
	cmpl	$0, -20(%ebp)
	jne	L564
	.loc 6 1137 32 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L565
L564:
	.loc 6 1139 11
	movl	$0, -12(%ebp)
L567:
	.loc 6 1139 18 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jge	L566
	.loc 6 1140 37 discriminator 2
	movl	-12(%ebp), %eax
	leal	(%eax,%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzwl	(%eax), %eax
	.loc 6 1140 45 discriminator 2
	shrw	$8, %ax
	movl	%eax, %ecx
	.loc 6 1140 16 discriminator 2
	movl	-12(%ebp), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1140 18 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 6 1139 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L567
L566:
	.loc 6 1142 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1143 11
	movl	-20(%ebp), %eax
L565:
	.loc 6 1144 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1805:
	.def	__ZL21stbi__convert_8_to_16Phiii;	.scl	3;	.type	32;	.endef
__ZL21stbi__convert_8_to_16Phiii:
LFB1806:
	.loc 6 1147 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 6 1149 20
	movl	12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 6 1149 8
	movl	20(%ebp), %edx
	imull	%edx, %eax
	movl	%eax, -16(%ebp)
	.loc 6 1152 52
	movl	-16(%ebp), %eax
	addl	%eax, %eax
	.loc 6 1152 44
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, -20(%ebp)
	.loc 6 1153 4
	cmpl	$0, -20(%ebp)
	jne	L569
	.loc 6 1153 50 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L570
L569:
	.loc 6 1155 11
	movl	$0, -12(%ebp)
L572:
	.loc 6 1155 18 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jge	L571
	.loc 6 1156 43 discriminator 2
	movl	-12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 1156 45 discriminator 2
	sall	$8, %eax
	movl	%eax, %ecx
	.loc 6 1156 59 discriminator 2
	movl	-12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 6 1156 17 discriminator 2
	movl	-12(%ebp), %eax
	leal	(%eax,%eax), %ebx
	movl	-20(%ebp), %eax
	addl	%ebx, %eax
	.loc 6 1156 51 discriminator 2
	addl	%ecx, %edx
	.loc 6 1156 19 discriminator 2
	movw	%dx, (%eax)
	.loc 6 1155 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L572
L571:
	.loc 6 1158 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1159 11
	movl	-20(%ebp), %eax
L570:
	.loc 6 1160 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1806:
	.def	__ZL19stbi__vertical_flipPviii;	.scl	3;	.type	32;	.endef
__ZL19stbi__vertical_flipPviii:
LFB1807:
	.loc 6 1163 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$2104, %esp
	.loc 6 1165 27
	movl	12(%ebp), %edx
	.loc 6 1165 37
	movl	20(%ebp), %eax
	.loc 6 1165 11
	imull	%edx, %eax
	movl	%eax, -28(%ebp)
	.loc 6 1167 13
	movl	8(%ebp), %eax
	movl	%eax, -32(%ebp)
LBB108:
	.loc 6 1169 13
	movl	$0, -12(%ebp)
L577:
	.loc 6 1169 26 discriminator 1
	movl	16(%ebp), %eax
	sarl	%eax
	.loc 6 1169 22 discriminator 1
	cmpl	%eax, -12(%ebp)
	jge	L578
LBB109:
	.loc 6 1170 34
	movl	-12(%ebp), %eax
	imull	-28(%ebp), %eax
	movl	%eax, %edx
	.loc 6 1170 16
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -16(%ebp)
	.loc 6 1171 34
	movl	16(%ebp), %eax
	subl	-12(%ebp), %eax
	.loc 6 1171 40
	subl	$1, %eax
	.loc 6 1171 44
	imull	-28(%ebp), %eax
	movl	%eax, %edx
	.loc 6 1171 16
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 6 1173 14
	movl	-28(%ebp), %eax
	movl	%eax, -24(%ebp)
L576:
	.loc 6 1174 14
	cmpl	$0, -24(%ebp)
	je	L575
LBB110:
	.loc 6 1175 17
	movl	$2048, %eax
	cmpl	$2048, -24(%ebp)
	cmovbe	-24(%ebp), %eax
	movl	%eax, -36(%ebp)
	.loc 6 1176 16
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-2084(%ebp), %eax
	movl	%eax, (%esp)
	call	_memcpy
	.loc 6 1177 16
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	_memcpy
	.loc 6 1178 16
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-2084(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	_memcpy
	.loc 6 1179 15
	movl	-36(%ebp), %eax
	addl	%eax, -16(%ebp)
	.loc 6 1180 15
	movl	-36(%ebp), %eax
	addl	%eax, -20(%ebp)
	.loc 6 1181 21
	movl	-36(%ebp), %eax
	subl	%eax, -24(%ebp)
LBE110:
	.loc 6 1174 7
	jmp	L576
L575:
LBE109:
	.loc 6 1169 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L577
L578:
LBE108:
	.loc 6 1184 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1807:
	.def	__ZL26stbi__vertical_flip_slicesPviiii;	.scl	3;	.type	32;	.endef
__ZL26stbi__vertical_flip_slicesPviiii:
LFB1808:
	.loc 6 1188 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 1190 23
	movl	12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 6 1190 8
	movl	24(%ebp), %edx
	imull	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 6 1192 13
	movl	8(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 6 1193 15
	movl	$0, -12(%ebp)
L581:
	.loc 6 1193 26 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	20(%ebp), %eax
	jge	L582
	.loc 6 1194 26 discriminator 2
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__vertical_flipPviii
	.loc 6 1195 13 discriminator 2
	movl	-20(%ebp), %eax
	addl	%eax, -16(%ebp)
	.loc 6 1193 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L581
L582:
	.loc 6 1197 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1808:
	.section .rdata,"dr"
LC35:
	.ascii "stb_image.h\0"
	.align 4
LC36:
	.ascii "ri.bits_per_channel == 8 || ri.bits_per_channel == 16\0"
	.text
	.def	__ZL31stbi__load_and_postprocess_8bitP13stbi__contextPiS1_S1_i;	.scl	3;	.type	32;	.endef
__ZL31stbi__load_and_postprocess_8bitP13stbi__contextPiS1_S1_i:
LFB1809:
	.loc 6 1201 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 6 1203 34
	movl	$8, 24(%esp)
	leal	-28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__load_mainP13stbi__contextPiS1_S1_iP17stbi__result_infoi
	movl	%eax, -12(%ebp)
	.loc 6 1205 4
	cmpl	$0, -12(%ebp)
	jne	L584
	.loc 6 1206 14
	movl	$0, %eax
	jmp	L597
L584:
	.loc 6 1209 4
	movl	-28(%ebp), %eax
	cmpl	$8, %eax
	je	L598
	.loc 6 1209 4 is_stmt 0 discriminator 2
	movl	-28(%ebp), %eax
	cmpl	$16, %eax
	je	L598
	.loc 6 1209 4 discriminator 4
	movl	$1209, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC36, (%esp)
	call	__assert
	jmp	L588
L598:
	.loc 6 1209 4
	nop
L588:
	.loc 6 1211 11 is_stmt 1
	movl	-28(%ebp), %eax
	.loc 6 1211 4
	cmpl	$8, %eax
	je	L589
	.loc 6 1212 37
	cmpl	$0, 24(%ebp)
	jne	L590
	.loc 6 1212 37 is_stmt 0 discriminator 1
	movl	20(%ebp), %eax
	movl	(%eax), %eax
	jmp	L591
L590:
	.loc 6 1212 37 discriminator 2
	movl	24(%ebp), %eax
L591:
	.loc 6 1212 37 discriminator 4
	movl	16(%ebp), %edx
	movl	(%edx), %ecx
	movl	12(%ebp), %edx
	movl	(%edx), %edx
	movl	%eax, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__convert_16_to_8Ptiii
	movl	%eax, -12(%ebp)
	.loc 6 1213 27 is_stmt 1 discriminator 4
	movl	$8, -28(%ebp)
L589:
LBB111:
	.loc 6 1218 8
	movl	$___emutls_v._ZL33stbi__vertically_flip_on_load_set, (%esp)
	call	___emutls_get_address
	movl	(%eax), %eax
	.loc 6 1218 37
	testl	%eax, %eax
	je	L592
	.loc 6 1218 37 is_stmt 0 discriminator 1
	movl	$___emutls_v._ZL35stbi__vertically_flip_on_load_local, (%esp)
	call	___emutls_get_address
	movl	(%eax), %eax
	testl	%eax, %eax
	setne	%al
	jmp	L593
L592:
	.loc 6 1218 37 discriminator 2
	movl	__ZL36stbi__vertically_flip_on_load_global, %eax
	testl	%eax, %eax
	setne	%al
L593:
	.loc 6 1218 4 is_stmt 1 discriminator 4
	testb	%al, %al
	je	L594
LBB112:
	.loc 6 1219 31
	cmpl	$0, 24(%ebp)
	jne	L595
	.loc 6 1219 31 is_stmt 0 discriminator 1
	movl	20(%ebp), %eax
	movl	(%eax), %eax
	jmp	L596
L595:
	.loc 6 1219 31 discriminator 2
	movl	24(%ebp), %eax
L596:
	.loc 6 1219 11 is_stmt 1 discriminator 4
	movl	%eax, -16(%ebp)
	.loc 6 1220 26 discriminator 4
	movl	16(%ebp), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	-16(%ebp), %ecx
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__vertical_flipPviii
L594:
LBE112:
LBE111:
	.loc 6 1223 29
	movl	-12(%ebp), %eax
L597:
	.loc 6 1224 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1809:
	.def	__ZL32stbi__load_and_postprocess_16bitP13stbi__contextPiS1_S1_i;	.scl	3;	.type	32;	.endef
__ZL32stbi__load_and_postprocess_16bitP13stbi__contextPiS1_S1_i:
LFB1810:
	.loc 6 1227 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 6 1229 34
	movl	$16, 24(%esp)
	leal	-28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__load_mainP13stbi__contextPiS1_S1_iP17stbi__result_infoi
	movl	%eax, -12(%ebp)
	.loc 6 1231 4
	cmpl	$0, -12(%ebp)
	jne	L600
	.loc 6 1232 14
	movl	$0, %eax
	jmp	L613
L600:
	.loc 6 1235 4
	movl	-28(%ebp), %eax
	cmpl	$8, %eax
	je	L614
	.loc 6 1235 4 is_stmt 0 discriminator 2
	movl	-28(%ebp), %eax
	cmpl	$16, %eax
	je	L614
	.loc 6 1235 4 discriminator 4
	movl	$1235, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC36, (%esp)
	call	__assert
	jmp	L604
L614:
	.loc 6 1235 4
	nop
L604:
	.loc 6 1237 11 is_stmt 1
	movl	-28(%ebp), %eax
	.loc 6 1237 4
	cmpl	$16, %eax
	je	L605
	.loc 6 1238 37
	cmpl	$0, 24(%ebp)
	jne	L606
	.loc 6 1238 37 is_stmt 0 discriminator 1
	movl	20(%ebp), %eax
	movl	(%eax), %eax
	jmp	L607
L606:
	.loc 6 1238 37 discriminator 2
	movl	24(%ebp), %eax
L607:
	.loc 6 1238 37 discriminator 4
	movl	16(%ebp), %edx
	movl	(%edx), %ecx
	movl	12(%ebp), %edx
	movl	(%edx), %edx
	movl	%eax, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__convert_8_to_16Phiii
	movl	%eax, -12(%ebp)
	.loc 6 1239 27 is_stmt 1 discriminator 4
	movl	$16, -28(%ebp)
L605:
LBB113:
	.loc 6 1245 8
	movl	$___emutls_v._ZL33stbi__vertically_flip_on_load_set, (%esp)
	call	___emutls_get_address
	movl	(%eax), %eax
	.loc 6 1245 37
	testl	%eax, %eax
	je	L608
	.loc 6 1245 37 is_stmt 0 discriminator 1
	movl	$___emutls_v._ZL35stbi__vertically_flip_on_load_local, (%esp)
	call	___emutls_get_address
	movl	(%eax), %eax
	testl	%eax, %eax
	setne	%al
	jmp	L609
L608:
	.loc 6 1245 37 discriminator 2
	movl	__ZL36stbi__vertically_flip_on_load_global, %eax
	testl	%eax, %eax
	setne	%al
L609:
	.loc 6 1245 4 is_stmt 1 discriminator 4
	testb	%al, %al
	je	L610
LBB114:
	.loc 6 1246 31
	cmpl	$0, 24(%ebp)
	jne	L611
	.loc 6 1246 31 is_stmt 0 discriminator 1
	movl	20(%ebp), %eax
	movl	(%eax), %eax
	jmp	L612
L611:
	.loc 6 1246 31 discriminator 2
	movl	24(%ebp), %eax
L612:
	.loc 6 1246 11 is_stmt 1 discriminator 4
	movl	%eax, -16(%ebp)
	.loc 6 1247 52 discriminator 4
	movl	-16(%ebp), %eax
	addl	%eax, %eax
	.loc 6 1247 26 discriminator 4
	movl	%eax, %ecx
	movl	16(%ebp), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__vertical_flipPviii
L610:
LBE114:
LBE113:
	.loc 6 1250 28
	movl	-12(%ebp), %eax
L613:
	.loc 6 1251 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1810:
	.def	__ZL23stbi__float_postprocessPfPiS0_S0_i;	.scl	3;	.type	32;	.endef
__ZL23stbi__float_postprocessPfPiS0_S0_i:
LFB1811:
	.loc 6 1255 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
LBB115:
	.loc 6 1256 8
	movl	$___emutls_v._ZL33stbi__vertically_flip_on_load_set, (%esp)
	call	___emutls_get_address
	movl	(%eax), %eax
	.loc 6 1256 51
	testl	%eax, %eax
	je	L616
	.loc 6 1256 51 is_stmt 0 discriminator 1
	movl	$___emutls_v._ZL35stbi__vertically_flip_on_load_local, (%esp)
	call	___emutls_get_address
	movl	(%eax), %eax
	testl	%eax, %eax
	setne	%al
	jmp	L617
L616:
	.loc 6 1256 51 discriminator 2
	movl	__ZL36stbi__vertically_flip_on_load_global, %eax
	testl	%eax, %eax
	setne	%al
L617:
	.loc 6 1256 4 is_stmt 1 discriminator 4
	testb	%al, %al
	je	L621
	.loc 6 1256 38 discriminator 5
	cmpl	$0, 8(%ebp)
	je	L621
LBB116:
	.loc 6 1257 31
	cmpl	$0, 24(%ebp)
	jne	L619
	.loc 6 1257 31 is_stmt 0 discriminator 1
	movl	20(%ebp), %eax
	movl	(%eax), %eax
	jmp	L620
L619:
	.loc 6 1257 31 discriminator 2
	movl	24(%ebp), %eax
L620:
	.loc 6 1257 11 is_stmt 1 discriminator 4
	movl	%eax, -12(%ebp)
	.loc 6 1258 52 discriminator 4
	movl	-12(%ebp), %eax
	sall	$2, %eax
	.loc 6 1258 26 discriminator 4
	movl	%eax, %ecx
	movl	16(%ebp), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__vertical_flipPviii
L621:
LBE116:
LBE115:
	.loc 6 1260 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1811:
	.def	__ZL11stbi__fopenPKcS0_;	.scl	3;	.type	32;	.endef
__ZL11stbi__fopenPKcS0_:
LFB1812:
	.loc 6 1278 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 1300 13
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_fopen
	movl	%eax, -12(%ebp)
	.loc 6 1302 11
	movl	-12(%ebp), %eax
	.loc 6 1303 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1812:
	.section .rdata,"dr"
LC37:
	.ascii "rb\0"
LC38:
	.ascii "can't fopen\0"
	.text
	.globl	_stbi_load
	.def	_stbi_load;	.scl	2;	.type	32;	.endef
_stbi_load:
LFB1813:
	.loc 6 1307 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 1308 25
	movl	$LC37, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbi__fopenPKcS0_
	movl	%eax, -12(%ebp)
	.loc 6 1310 4
	cmpl	$0, -12(%ebp)
	jne	L625
	.loc 6 1310 19 discriminator 1
	movl	$LC38, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L626
L625:
	.loc 6 1311 32
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_load_from_file
	movl	%eax, -16(%ebp)
	.loc 6 1312 10
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_fclose
	.loc 6 1313 11
	movl	-16(%ebp), %eax
L626:
	.loc 6 1314 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1813:
	.globl	_stbi_load_from_file
	.def	_stbi_load_from_file;	.scl	2;	.type	32;	.endef
_stbi_load_from_file:
LFB1814:
	.loc 6 1317 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$232, %esp
	.loc 6 1320 20
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-200(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__start_fileP13stbi__contextP6_iobuf
	.loc 6 1321 44
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-200(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL31stbi__load_and_postprocess_8bitP13stbi__contextPiS1_S1_i
	movl	%eax, -12(%ebp)
	.loc 6 1322 4
	cmpl	$0, -12(%ebp)
	je	L628
	.loc 6 1324 46
	movl	-28(%ebp), %edx
	.loc 6 1324 27
	movl	-24(%ebp), %eax
	.loc 6 1324 16
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 6 1324 12
	movl	$1, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_fseek
L628:
	.loc 6 1326 11
	movl	-12(%ebp), %eax
	.loc 6 1327 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1814:
	.globl	_stbi_load_from_file_16
	.def	_stbi_load_from_file_16;	.scl	2;	.type	32;	.endef
_stbi_load_from_file_16:
LFB1815:
	.loc 6 1330 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$232, %esp
	.loc 6 1333 20
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-200(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__start_fileP13stbi__contextP6_iobuf
	.loc 6 1334 45
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-200(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL32stbi__load_and_postprocess_16bitP13stbi__contextPiS1_S1_i
	movl	%eax, -12(%ebp)
	.loc 6 1335 4
	cmpl	$0, -12(%ebp)
	je	L631
	.loc 6 1337 46
	movl	-28(%ebp), %edx
	.loc 6 1337 27
	movl	-24(%ebp), %eax
	.loc 6 1337 16
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 6 1337 12
	movl	$1, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_fseek
L631:
	.loc 6 1339 11
	movl	-12(%ebp), %eax
	.loc 6 1340 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1815:
	.globl	_stbi_load_16
	.def	_stbi_load_16;	.scl	2;	.type	32;	.endef
_stbi_load_16:
LFB1816:
	.loc 6 1343 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 1344 25
	movl	$LC37, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbi__fopenPKcS0_
	movl	%eax, -12(%ebp)
	.loc 6 1346 4
	cmpl	$0, -12(%ebp)
	jne	L634
	.loc 6 1346 31 discriminator 1
	movl	$LC38, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L635
L634:
	.loc 6 1347 35
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_load_from_file_16
	movl	%eax, -16(%ebp)
	.loc 6 1348 10
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_fclose
	.loc 6 1349 11
	movl	-16(%ebp), %eax
L635:
	.loc 6 1350 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1816:
	.globl	_stbi_load_16_from_memory
	.def	_stbi_load_16_from_memory;	.scl	2;	.type	32;	.endef
_stbi_load_16_from_memory:
LFB1817:
	.loc 6 1356 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$232, %esp
	.loc 6 1358 19
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__start_memP13stbi__contextPKhi
	.loc 6 1359 43
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL32stbi__load_and_postprocess_16bitP13stbi__contextPiS1_S1_i
	.loc 6 1359 84
	nop
	.loc 6 1360 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1817:
	.globl	_stbi_load_16_from_callbacks
	.def	_stbi_load_16_from_callbacks;	.scl	2;	.type	32;	.endef
_stbi_load_16_from_callbacks:
LFB1818:
	.loc 6 1363 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$232, %esp
	.loc 6 1365 25
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__start_callbacksP13stbi__contextP17stbi_io_callbacksPv
	.loc 6 1366 43
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL32stbi__load_and_postprocess_16bitP13stbi__contextPiS1_S1_i
	.loc 6 1366 84
	nop
	.loc 6 1367 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1818:
	.globl	_stbi_load_from_memory
	.def	_stbi_load_from_memory;	.scl	2;	.type	32;	.endef
_stbi_load_from_memory:
LFB1819:
	.loc 6 1370 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$232, %esp
	.loc 6 1372 19
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__start_memP13stbi__contextPKhi
	.loc 6 1373 42
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL31stbi__load_and_postprocess_8bitP13stbi__contextPiS1_S1_i
	.loc 6 1373 63
	nop
	.loc 6 1374 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1819:
	.globl	_stbi_load_from_callbacks
	.def	_stbi_load_from_callbacks;	.scl	2;	.type	32;	.endef
_stbi_load_from_callbacks:
LFB1820:
	.loc 6 1377 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$232, %esp
	.loc 6 1379 25
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__start_callbacksP13stbi__contextP17stbi_io_callbacksPv
	.loc 6 1380 42
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL31stbi__load_and_postprocess_8bitP13stbi__contextPiS1_S1_i
	.loc 6 1380 63
	nop
	.loc 6 1381 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1820:
	.globl	_stbi_load_gif_from_memory
	.def	_stbi_load_gif_from_memory;	.scl	2;	.type	32;	.endef
_stbi_load_gif_from_memory:
LFB1821:
	.loc 6 1385 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$228, %esp
	.cfi_offset 3, -12
	.loc 6 1388 19
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-200(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__start_memP13stbi__contextPKhi
	.loc 6 1390 49
	movl	36(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-200(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__load_gif_mainP13stbi__contextPPiS1_S1_S1_S1_i
	movl	%eax, -12(%ebp)
	.loc 6 1391 8
	movl	$___emutls_v._ZL33stbi__vertically_flip_on_load_set, (%esp)
	call	___emutls_get_address
	movl	(%eax), %eax
	.loc 6 1391 37
	testl	%eax, %eax
	je	L645
	.loc 6 1391 37 is_stmt 0 discriminator 1
	movl	$___emutls_v._ZL35stbi__vertically_flip_on_load_local, (%esp)
	call	___emutls_get_address
	movl	(%eax), %eax
	testl	%eax, %eax
	setne	%al
	jmp	L646
L645:
	.loc 6 1391 37 discriminator 2
	movl	__ZL36stbi__vertically_flip_on_load_global, %eax
	testl	%eax, %eax
	setne	%al
L646:
	.loc 6 1391 4 is_stmt 1 discriminator 4
	testb	%al, %al
	je	L647
	.loc 6 1392 33
	movl	32(%ebp), %eax
	movl	(%eax), %ebx
	movl	28(%ebp), %eax
	movl	(%eax), %ecx
	movl	24(%ebp), %eax
	movl	(%eax), %edx
	movl	20(%ebp), %eax
	movl	(%eax), %eax
	movl	%ebx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbi__vertical_flip_slicesPviiii
L647:
	.loc 6 1395 11
	movl	-12(%ebp), %eax
	.loc 6 1396 1
	addl	$228, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1821:
	.def	__ZL16stbi__loadf_mainP13stbi__contextPiS1_S1_i;	.scl	3;	.type	32;	.endef
__ZL16stbi__loadf_mainP13stbi__contextPiS1_S1_i:
LFB1822:
	.loc 6 1401 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
LBB117:
	.loc 6 1404 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__hdr_testP13stbi__context
	.loc 6 1404 25
	testl	%eax, %eax
	setne	%al
	.loc 6 1404 4
	testb	%al, %al
	je	L650
LBB118:
	.loc 6 1406 39
	leal	-28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__hdr_loadP13stbi__contextPiS1_S1_iP17stbi__result_info
	movl	%eax, -12(%ebp)
	.loc 6 1407 7
	cmpl	$0, -12(%ebp)
	je	L651
	.loc 6 1408 33
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbi__float_postprocessPfPiS0_S0_i
L651:
	.loc 6 1409 14
	movl	-12(%ebp), %eax
	jmp	L652
L650:
LBE118:
LBE117:
	.loc 6 1412 42
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL31stbi__load_and_postprocess_8bitP13stbi__contextPiS1_S1_i
	movl	%eax, -16(%ebp)
	.loc 6 1413 4
	cmpl	$0, -16(%ebp)
	je	L653
	.loc 6 1414 30
	cmpl	$0, 24(%ebp)
	jne	L654
	.loc 6 1414 30 is_stmt 0 discriminator 1
	movl	20(%ebp), %eax
	movl	(%eax), %eax
	jmp	L655
L654:
	.loc 6 1414 30 discriminator 2
	movl	24(%ebp), %eax
L655:
	.loc 6 1414 30 discriminator 4
	movl	16(%ebp), %edx
	movl	(%edx), %ecx
	movl	12(%ebp), %edx
	movl	(%edx), %edx
	movl	%eax, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__ldr_to_hdrPhiii
	.loc 6 1414 72 is_stmt 1 discriminator 4
	jmp	L652
L653:
	.loc 6 1415 11
	movl	$LC33, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
L652:
	.loc 6 1416 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1822:
	.globl	_stbi_loadf_from_memory
	.def	_stbi_loadf_from_memory;	.scl	2;	.type	32;	.endef
_stbi_loadf_from_memory:
LFB1823:
	.loc 6 1419 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$232, %esp
	.loc 6 1421 19
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__start_memP13stbi__contextPKhi
	.loc 6 1422 27
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__loadf_mainP13stbi__contextPiS1_S1_i
	.loc 6 1422 48
	nop
	.loc 6 1423 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1823:
	.globl	_stbi_loadf_from_callbacks
	.def	_stbi_loadf_from_callbacks;	.scl	2;	.type	32;	.endef
_stbi_loadf_from_callbacks:
LFB1824:
	.loc 6 1426 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$232, %esp
	.loc 6 1428 25
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__start_callbacksP13stbi__contextP17stbi_io_callbacksPv
	.loc 6 1429 27
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__loadf_mainP13stbi__contextPiS1_S1_i
	.loc 6 1429 48
	nop
	.loc 6 1430 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1824:
	.globl	_stbi_loadf
	.def	_stbi_loadf;	.scl	2;	.type	32;	.endef
_stbi_loadf:
LFB1825:
	.loc 6 1434 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 1436 25
	movl	$LC37, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbi__fopenPKcS0_
	movl	%eax, -12(%ebp)
	.loc 6 1437 4
	cmpl	$0, -12(%ebp)
	jne	L661
	.loc 6 1437 19 discriminator 1
	movl	$LC38, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L662
L661:
	.loc 6 1438 33
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_loadf_from_file
	movl	%eax, -16(%ebp)
	.loc 6 1439 10
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_fclose
	.loc 6 1440 11
	movl	-16(%ebp), %eax
L662:
	.loc 6 1441 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1825:
	.globl	_stbi_loadf_from_file
	.def	_stbi_loadf_from_file;	.scl	2;	.type	32;	.endef
_stbi_loadf_from_file:
LFB1826:
	.loc 6 1444 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$232, %esp
	.loc 6 1446 20
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__start_fileP13stbi__contextP6_iobuf
	.loc 6 1447 27
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__loadf_mainP13stbi__contextPiS1_S1_i
	.loc 6 1447 48
	nop
	.loc 6 1448 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1826:
	.globl	_stbi_is_hdr_from_memory
	.def	_stbi_is_hdr_from_memory;	.scl	2;	.type	32;	.endef
_stbi_is_hdr_from_memory:
LFB1827:
	.loc 6 1458 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$216, %esp
	.loc 6 1461 19
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__start_memP13stbi__contextPKhi
	.loc 6 1462 25
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__hdr_testP13stbi__context
	.loc 6 1462 28
	nop
	.loc 6 1468 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1827:
	.globl	_stbi_is_hdr
	.def	_stbi_is_hdr;	.scl	2;	.type	32;	.endef
_stbi_is_hdr:
LFB1828:
	.loc 6 1472 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 1473 25
	movl	$LC37, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbi__fopenPKcS0_
	movl	%eax, -16(%ebp)
	.loc 6 1474 8
	movl	$0, -12(%ebp)
	.loc 6 1475 4
	cmpl	$0, -16(%ebp)
	je	L668
	.loc 6 1476 37
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_is_hdr_from_file
	movl	%eax, -12(%ebp)
	.loc 6 1477 13
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	_fclose
L668:
	.loc 6 1479 11
	movl	-12(%ebp), %eax
	.loc 6 1480 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1828:
	.globl	_stbi_is_hdr_from_file
	.def	_stbi_is_hdr_from_file;	.scl	2;	.type	32;	.endef
_stbi_is_hdr_from_file:
LFB1829:
	.loc 6 1483 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$232, %esp
	.loc 6 1485 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_ftell
	movl	%eax, -12(%ebp)
	.loc 6 1488 20
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__start_fileP13stbi__contextP6_iobuf
	.loc 6 1489 24
	leal	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__hdr_testP13stbi__context
	movl	%eax, -16(%ebp)
	.loc 6 1490 9
	movl	$0, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_fseek
	.loc 6 1491 11
	movl	-16(%ebp), %eax
	.loc 6 1496 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1829:
	.globl	_stbi_is_hdr_from_callbacks
	.def	_stbi_is_hdr_from_callbacks;	.scl	2;	.type	32;	.endef
_stbi_is_hdr_from_callbacks:
LFB1830:
	.loc 6 1500 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$216, %esp
	.loc 6 1503 25
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__start_callbacksP13stbi__contextP17stbi_io_callbacksPv
	.loc 6 1504 25
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__hdr_testP13stbi__context
	.loc 6 1504 28
	nop
	.loc 6 1510 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1830:
	.data
	.align 4
__ZL15stbi__l2h_gamma:
	.long	1074580685
	.align 4
__ZL15stbi__l2h_scale:
	.long	1065353216
	.text
	.globl	_stbi_ldr_to_hdr_gamma
	.def	_stbi_ldr_to_hdr_gamma;	.scl	2;	.type	32;	.endef
_stbi_ldr_to_hdr_gamma:
LFB1831:
	.loc 6 1515 51
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 1515 69
	flds	8(%ebp)
	fstps	__ZL15stbi__l2h_gamma
	.loc 6 1515 78
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1831:
	.globl	_stbi_ldr_to_hdr_scale
	.def	_stbi_ldr_to_hdr_scale;	.scl	2;	.type	32;	.endef
_stbi_ldr_to_hdr_scale:
LFB1832:
	.loc 6 1516 51
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 1516 69
	flds	8(%ebp)
	fstps	__ZL15stbi__l2h_scale
	.loc 6 1516 78
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1832:
	.data
	.align 4
__ZL17stbi__h2l_gamma_i:
	.long	1055439406
	.align 4
__ZL17stbi__h2l_scale_i:
	.long	1065353216
	.text
	.globl	_stbi_hdr_to_ldr_gamma
	.def	_stbi_hdr_to_ldr_gamma;	.scl	2;	.type	32;	.endef
_stbi_hdr_to_ldr_gamma:
LFB1833:
	.loc 6 1521 51
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 1521 74
	fld1
	fdivs	8(%ebp)
	.loc 6 1521 71
	fstps	__ZL17stbi__h2l_gamma_i
	.loc 6 1521 82
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1833:
	.globl	_stbi_hdr_to_ldr_scale
	.def	_stbi_hdr_to_ldr_scale;	.scl	2;	.type	32;	.endef
_stbi_hdr_to_ldr_scale:
LFB1834:
	.loc 6 1522 51
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 1522 74
	fld1
	fdivs	8(%ebp)
	.loc 6 1522 71
	fstps	__ZL17stbi__h2l_scale_i
	.loc 6 1522 82
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1834:
	.def	__ZL19stbi__refill_bufferP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL19stbi__refill_bufferP13stbi__context:
LFB1835:
	.loc 6 1538 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 6 1539 19
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 1539 24
	movl	8(%ebp), %edx
	movl	36(%edx), %ecx
	.loc 6 1539 51
	movl	8(%ebp), %edx
	leal	40(%edx), %ebx
	.loc 6 1539 24
	movl	8(%ebp), %edx
	movl	28(%edx), %edx
	movl	%ecx, 8(%esp)
	movl	%ebx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL29:
	movl	%eax, -12(%ebp)
	.loc 6 1540 29
	movl	8(%ebp), %eax
	movl	168(%eax), %edx
	.loc 6 1540 42
	movl	8(%ebp), %eax
	movl	172(%eax), %ecx
	.loc 6 1540 58
	movl	8(%ebp), %eax
	movl	180(%eax), %eax
	.loc 6 1540 53
	subl	%eax, %ecx
	movl	%ecx, %eax
	.loc 6 1540 29
	addl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 168(%eax)
	.loc 6 1541 4
	cmpl	$0, -12(%ebp)
	jne	L679
	.loc 6 1544 30
	movl	8(%ebp), %eax
	movl	$0, 32(%eax)
	.loc 6 1545 26
	movl	8(%ebp), %eax
	leal	40(%eax), %edx
	.loc 6 1545 21
	movl	8(%ebp), %eax
	movl	%edx, 172(%eax)
	.loc 6 1546 30
	movl	8(%ebp), %eax
	addl	$40, %eax
	.loc 6 1546 42
	leal	1(%eax), %edx
	.loc 6 1546 25
	movl	8(%ebp), %eax
	movl	%edx, 176(%eax)
	.loc 6 1547 11
	movl	8(%ebp), %eax
	movl	172(%eax), %eax
	.loc 6 1547 22
	movb	$0, (%eax)
	.loc 6 1552 1
	jmp	L681
L679:
	.loc 6 1549 26
	movl	8(%ebp), %eax
	leal	40(%eax), %edx
	.loc 6 1549 21
	movl	8(%ebp), %eax
	movl	%edx, 172(%eax)
	.loc 6 1550 30
	movl	8(%ebp), %eax
	leal	40(%eax), %edx
	.loc 6 1550 43
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 1550 25
	movl	8(%ebp), %eax
	movl	%edx, 176(%eax)
L681:
	.loc 6 1552 1
	nop
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1835:
	.def	__ZL10stbi__get8P13stbi__context;	.scl	3;	.type	32;	.endef
__ZL10stbi__get8P13stbi__context:
LFB1836:
	.loc 6 1555 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 1556 11
	movl	8(%ebp), %eax
	movl	172(%eax), %edx
	.loc 6 1556 27
	movl	8(%ebp), %eax
	movl	176(%eax), %eax
	.loc 6 1556 4
	cmpl	%eax, %edx
	jnb	L683
	.loc 6 1557 18
	movl	8(%ebp), %eax
	movl	172(%eax), %eax
	.loc 6 1557 28
	leal	1(%eax), %ecx
	movl	8(%ebp), %edx
	movl	%ecx, 172(%edx)
	movzbl	(%eax), %eax
	jmp	L684
L683:
	.loc 6 1558 11
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 6 1558 4
	testl	%eax, %eax
	je	L685
	.loc 6 1559 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__refill_bufferP13stbi__context
	.loc 6 1560 18
	movl	8(%ebp), %eax
	movl	172(%eax), %eax
	.loc 6 1560 28
	leal	1(%eax), %ecx
	movl	8(%ebp), %edx
	movl	%ecx, 172(%edx)
	movzbl	(%eax), %eax
	jmp	L684
L685:
	.loc 6 1562 11
	movl	$0, %eax
L684:
	.loc 6 1563 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1836:
	.def	__ZL12stbi__at_eofP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL12stbi__at_eofP13stbi__context:
LFB1837:
	.loc 6 1569 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 1570 14
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 1570 4
	testl	%eax, %eax
	je	L687
	.loc 6 1571 19
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	.loc 6 1571 23
	movl	8(%ebp), %edx
	movl	28(%edx), %edx
	movl	%edx, (%esp)
	call	*%eax
LVL30:
	.loc 6 1571 11
	testl	%eax, %eax
	sete	%al
	.loc 6 1571 7
	testb	%al, %al
	je	L688
	.loc 6 1571 49 discriminator 1
	movl	$0, %eax
	jmp	L689
L688:
	.loc 6 1574 14
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 6 1574 7
	testl	%eax, %eax
	jne	L687
	.loc 6 1574 47 discriminator 1
	movl	$1, %eax
	jmp	L689
L687:
	.loc 6 1577 14
	movl	8(%ebp), %eax
	movl	172(%eax), %edx
	.loc 6 1577 31
	movl	8(%ebp), %eax
	movl	176(%eax), %eax
	.loc 6 1577 25
	cmpl	%eax, %edx
	setnb	%al
	.loc 6 1577 31
	movzbl	%al, %eax
L689:
	.loc 6 1578 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1837:
	.def	__ZL10stbi__skipP13stbi__contexti;	.scl	3;	.type	32;	.endef
__ZL10stbi__skipP13stbi__contexti:
LFB1838:
	.loc 6 1585 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 1586 4
	cmpl	$0, 12(%ebp)
	je	L696
	.loc 6 1587 4
	cmpl	$0, 12(%ebp)
	jns	L693
	.loc 6 1588 26
	movl	8(%ebp), %eax
	movl	176(%eax), %edx
	.loc 6 1588 21
	movl	8(%ebp), %eax
	movl	%edx, 172(%eax)
	.loc 6 1589 7
	jmp	L690
L693:
LBB119:
	.loc 6 1591 14
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 1591 4
	testl	%eax, %eax
	je	L694
LBB120:
	.loc 6 1592 28
	movl	8(%ebp), %eax
	movl	176(%eax), %edx
	.loc 6 1592 48
	movl	8(%ebp), %eax
	movl	172(%eax), %eax
	.loc 6 1592 11
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -12(%ebp)
	.loc 6 1593 7
	movl	-12(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L694
	.loc 6 1594 29
	movl	8(%ebp), %eax
	movl	176(%eax), %edx
	.loc 6 1594 24
	movl	8(%ebp), %eax
	movl	%edx, 172(%eax)
	.loc 6 1595 17
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	.loc 6 1595 22
	movl	12(%ebp), %edx
	movl	%edx, %ecx
	subl	-12(%ebp), %ecx
	movl	8(%ebp), %edx
	movl	28(%edx), %edx
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL31:
	.loc 6 1596 10
	jmp	L690
L694:
LBE120:
LBE119:
	.loc 6 1599 18
	movl	8(%ebp), %eax
	movl	172(%eax), %edx
	movl	12(%ebp), %eax
	addl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 172(%eax)
	jmp	L690
L696:
	.loc 6 1586 16
	nop
L690:
	.loc 6 1600 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1838:
	.def	__ZL10stbi__getnP13stbi__contextPhi;	.scl	3;	.type	32;	.endef
__ZL10stbi__getnP13stbi__contextPhi:
LFB1839:
	.loc 6 1607 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
LBB121:
	.loc 6 1608 14
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 1608 4
	testl	%eax, %eax
	je	L698
LBB122:
	.loc 6 1609 28
	movl	8(%ebp), %eax
	movl	176(%eax), %edx
	.loc 6 1609 48
	movl	8(%ebp), %eax
	movl	172(%eax), %eax
	.loc 6 1609 11
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -12(%ebp)
LBB123:
	.loc 6 1610 7
	movl	-12(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L698
LBB124:
	.loc 6 1613 16
	movl	-12(%ebp), %edx
	.loc 6 1613 28
	movl	8(%ebp), %eax
	movl	172(%eax), %eax
	.loc 6 1613 16
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_memcpy
	.loc 6 1615 25
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 1615 30
	movl	16(%ebp), %edx
	movl	%edx, %ecx
	subl	-12(%ebp), %ecx
	movl	-12(%ebp), %ebx
	movl	12(%ebp), %edx
	addl	%edx, %ebx
	movl	8(%ebp), %edx
	movl	28(%edx), %edx
	movl	%ecx, 8(%esp)
	movl	%ebx, 4(%esp)
	movl	%edx, (%esp)
	call	*%eax
LVL32:
	movl	%eax, -16(%ebp)
	.loc 6 1616 28
	movl	16(%ebp), %eax
	subl	-12(%ebp), %eax
	.loc 6 1616 23
	cmpl	%eax, -16(%ebp)
	sete	%al
	.loc 6 1616 14
	movzbl	%al, %eax
	movl	%eax, -20(%ebp)
	.loc 6 1617 29
	movl	8(%ebp), %eax
	movl	176(%eax), %edx
	.loc 6 1617 24
	movl	8(%ebp), %eax
	movl	%edx, 172(%eax)
	.loc 6 1618 17
	movl	-20(%ebp), %eax
	jmp	L700
L698:
LBE124:
LBE123:
LBE122:
LBE121:
	.loc 6 1622 11
	movl	8(%ebp), %eax
	movl	172(%eax), %edx
	.loc 6 1622 21
	movl	16(%ebp), %eax
	addl	%eax, %edx
	.loc 6 1622 30
	movl	8(%ebp), %eax
	movl	176(%eax), %eax
	.loc 6 1622 4
	cmpl	%eax, %edx
	ja	L701
	.loc 6 1623 13
	movl	16(%ebp), %edx
	.loc 6 1623 25
	movl	8(%ebp), %eax
	movl	172(%eax), %eax
	.loc 6 1623 13
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_memcpy
	.loc 6 1624 21
	movl	8(%ebp), %eax
	movl	172(%eax), %edx
	movl	16(%ebp), %eax
	addl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 172(%eax)
	.loc 6 1625 14
	movl	$1, %eax
	jmp	L700
L701:
	.loc 6 1627 14
	movl	$0, %eax
L700:
	.loc 6 1628 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1839:
	.def	__ZL13stbi__get16beP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL13stbi__get16beP13stbi__context:
LFB1840:
	.loc 6 1635 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 6 1636 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 1636 24
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 6 1637 14
	movl	-12(%ebp), %eax
	sall	$8, %eax
	movl	%eax, %ebx
	.loc 6 1637 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %eax
	.loc 6 1637 34
	addl	%ebx, %eax
	.loc 6 1638 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1840:
	.def	__ZL13stbi__get32beP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL13stbi__get32beP13stbi__context:
LFB1841:
	.loc 6 1645 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 6 1646 34
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 1646 36
	movl	%eax, -12(%ebp)
	.loc 6 1647 14
	movl	-12(%ebp), %eax
	sall	$16, %eax
	movl	%eax, %ebx
	.loc 6 1647 36
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 1647 38
	addl	%ebx, %eax
	.loc 6 1648 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1841:
	.def	__ZL13stbi__get16leP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL13stbi__get16leP13stbi__context:
LFB1842:
	.loc 6 1655 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 1656 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 1656 24
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 6 1657 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %eax
	.loc 6 1657 30
	sall	$8, %eax
	movl	%eax, %edx
	.loc 6 1657 34
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1658 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1842:
	.def	__ZL13stbi__get32leP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL13stbi__get32leP13stbi__context:
LFB1843:
	.loc 6 1663 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 1664 34
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	.loc 6 1664 36
	movl	%eax, -12(%ebp)
	.loc 6 1665 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	.loc 6 1665 33
	sall	$16, %eax
	movl	%eax, %edx
	.loc 6 1665 38
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1666 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1843:
	.def	__ZL15stbi__compute_yiii;	.scl	3;	.type	32;	.endef
__ZL15stbi__compute_yiii:
LFB1844:
	.loc 6 1686 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 1687 25
	movl	8(%ebp), %eax
	imull	$77, %eax, %edx
	.loc 6 1687 34
	movl	12(%ebp), %eax
	imull	$150, %eax, %eax
	.loc 6 1687 30
	addl	%eax, %edx
	.loc 6 1687 46
	movl	16(%ebp), %eax
	imull	$29, %eax, %eax
	.loc 6 1687 40
	addl	%edx, %eax
	.loc 6 1687 51
	sarl	$8, %eax
	.loc 6 1688 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1844:
	.section .rdata,"dr"
	.align 4
LC39:
	.ascii "req_comp >= 1 && req_comp <= 4\0"
LC40:
	.ascii "unsupported\0"
	.text
	.def	__ZL20stbi__convert_formatPhiijj;	.scl	3;	.type	32;	.endef
__ZL20stbi__convert_formatPhiijj:
LFB1845:
	.loc 6 1695 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 1699 17
	movl	16(%ebp), %edx
	movl	12(%ebp), %eax
	.loc 6 1699 4
	cmpl	%eax, %edx
	jne	L713
	.loc 6 1699 34 discriminator 1
	movl	8(%ebp), %eax
	jmp	L714
L713:
	.loc 6 1700 4
	movl	16(%ebp), %eax
	testl	%eax, %eax
	jle	L715
	.loc 6 1700 4 is_stmt 0 discriminator 1
	movl	16(%ebp), %eax
	cmpl	$4, %eax
	jle	L761
L715:
	.loc 6 1700 4 discriminator 4
	movl	$1700, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC39, (%esp)
	call	__assert
	jmp	L718
L761:
	.loc 6 1700 4
	nop
L718:
	.loc 6 1702 46 is_stmt 1
	movl	24(%ebp), %ecx
	movl	20(%ebp), %edx
	movl	16(%ebp), %eax
	movl	$0, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad3iiii
	movl	%eax, -28(%ebp)
	.loc 6 1703 4
	cmpl	$0, -28(%ebp)
	jne	L719
	.loc 6 1704 7
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1705 14
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L714
L719:
LBB125:
	.loc 6 1708 10
	movl	$0, -16(%ebp)
L760:
	.loc 6 1708 18 discriminator 1
	movl	24(%ebp), %eax
	.loc 6 1708 16 discriminator 1
	cmpl	%eax, -16(%ebp)
	jge	L720
LBB126:
	.loc 6 1709 38
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	.loc 6 1709 42
	movl	12(%ebp), %edx
	imull	%eax, %edx
	.loc 6 1709 22
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 6 1710 38
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	.loc 6 1710 42
	movl	16(%ebp), %edx
	imull	%eax, %edx
	.loc 6 1710 22
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 6 1716 15
	movl	12(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1716 7
	subl	$10, %eax
	cmpl	$25, %eax
	ja	L721
	movl	L723(,%eax,4), %eax
	jmp	*%eax
	.section .rdata,"dr"
	.align 4
L723:
	.long	L734
	.long	L733
	.long	L732
	.long	L721
	.long	L721
	.long	L721
	.long	L721
	.long	L731
	.long	L721
	.long	L730
	.long	L729
	.long	L721
	.long	L721
	.long	L721
	.long	L721
	.long	L728
	.long	L727
	.long	L721
	.long	L726
	.long	L721
	.long	L721
	.long	L721
	.long	L721
	.long	L725
	.long	L724
	.long	L722
	.text
L734:
	.loc 6 1717 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L736:
	.loc 6 1717 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L762
	.loc 6 1717 41 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	(%eax), %edx
	.loc 6 1717 35 discriminator 2
	movl	-24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 1717 50 discriminator 2
	movl	-24(%ebp), %eax
	addl	$1, %eax
	.loc 6 1717 51 discriminator 2
	movb	$-1, (%eax)
	.loc 6 1717 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$1, -20(%ebp)
	addl	$2, -24(%ebp)
	jmp	L736
L733:
	.loc 6 1718 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L739:
	.loc 6 1718 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L763
	.loc 6 1718 50 is_stmt 1 discriminator 2
	movl	-24(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 1718 57 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 1718 51 discriminator 2
	movb	%al, (%edx)
	.loc 6 1718 42 discriminator 2
	movl	-24(%ebp), %eax
	addl	$1, %eax
	.loc 6 1718 50 discriminator 2
	movzbl	(%edx), %edx
	.loc 6 1718 43 discriminator 2
	movb	%dl, (%eax)
	.loc 6 1718 42 discriminator 2
	movzbl	(%eax), %edx
	.loc 6 1718 35 discriminator 2
	movl	-24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 1718 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$1, -20(%ebp)
	addl	$3, -24(%ebp)
	jmp	L739
L732:
	.loc 6 1719 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L741:
	.loc 6 1719 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L764
	.loc 6 1719 50 is_stmt 1 discriminator 2
	movl	-24(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 1719 57 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 1719 51 discriminator 2
	movb	%al, (%edx)
	.loc 6 1719 42 discriminator 2
	movl	-24(%ebp), %eax
	addl	$1, %eax
	.loc 6 1719 50 discriminator 2
	movzbl	(%edx), %edx
	.loc 6 1719 43 discriminator 2
	movb	%dl, (%eax)
	.loc 6 1719 42 discriminator 2
	movzbl	(%eax), %edx
	.loc 6 1719 35 discriminator 2
	movl	-24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 1719 66 discriminator 2
	movl	-24(%ebp), %eax
	addl	$3, %eax
	.loc 6 1719 67 discriminator 2
	movb	$-1, (%eax)
	.loc 6 1719 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$1, -20(%ebp)
	addl	$4, -24(%ebp)
	jmp	L741
L731:
	.loc 6 1720 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L743:
	.loc 6 1720 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L765
	.loc 6 1720 41 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	(%eax), %edx
	.loc 6 1720 35 discriminator 2
	movl	-24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 1720 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$2, -20(%ebp)
	addl	$1, -24(%ebp)
	jmp	L743
L730:
	.loc 6 1721 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L745:
	.loc 6 1721 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L766
	.loc 6 1721 50 is_stmt 1 discriminator 2
	movl	-24(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 1721 57 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 1721 51 discriminator 2
	movb	%al, (%edx)
	.loc 6 1721 42 discriminator 2
	movl	-24(%ebp), %eax
	addl	$1, %eax
	.loc 6 1721 50 discriminator 2
	movzbl	(%edx), %edx
	.loc 6 1721 43 discriminator 2
	movb	%dl, (%eax)
	.loc 6 1721 42 discriminator 2
	movzbl	(%eax), %edx
	.loc 6 1721 35 discriminator 2
	movl	-24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 1721 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$2, -20(%ebp)
	addl	$3, -24(%ebp)
	jmp	L745
L729:
	.loc 6 1722 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L747:
	.loc 6 1722 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L767
	.loc 6 1722 50 is_stmt 1 discriminator 2
	movl	-24(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 1722 57 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 1722 51 discriminator 2
	movb	%al, (%edx)
	.loc 6 1722 42 discriminator 2
	movl	-24(%ebp), %eax
	addl	$1, %eax
	.loc 6 1722 50 discriminator 2
	movzbl	(%edx), %edx
	.loc 6 1722 43 discriminator 2
	movb	%dl, (%eax)
	.loc 6 1722 42 discriminator 2
	movzbl	(%eax), %edx
	.loc 6 1722 35 discriminator 2
	movl	-24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 1722 66 discriminator 2
	movl	-24(%ebp), %eax
	leal	3(%eax), %edx
	.loc 6 1722 67 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	1(%eax), %eax
	movb	%al, (%edx)
	.loc 6 1722 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$2, -20(%ebp)
	addl	$4, -24(%ebp)
	jmp	L747
L726:
	.loc 6 1723 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L749:
	.loc 6 1723 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L768
	.loc 6 1723 41 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	(%eax), %edx
	.loc 6 1723 35 discriminator 2
	movl	-24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 1723 49 discriminator 2
	movl	-24(%ebp), %eax
	leal	1(%eax), %edx
	.loc 6 1723 50 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	1(%eax), %eax
	movb	%al, (%edx)
	.loc 6 1723 64 discriminator 2
	movl	-24(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 1723 65 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	2(%eax), %eax
	movb	%al, (%edx)
	.loc 6 1723 79 discriminator 2
	movl	-24(%ebp), %eax
	addl	$3, %eax
	.loc 6 1723 80 discriminator 2
	movb	$-1, (%eax)
	.loc 6 1723 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$3, -20(%ebp)
	addl	$4, -24(%ebp)
	jmp	L749
L728:
	.loc 6 1724 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L751:
	.loc 6 1724 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L769
	.loc 6 1724 71 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	.loc 6 1724 51 discriminator 2
	movzbl	%al, %ecx
	.loc 6 1724 64 discriminator 2
	movl	-20(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	.loc 6 1724 51 discriminator 2
	movzbl	%al, %edx
	.loc 6 1724 57 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 1724 51 discriminator 2
	movzbl	%al, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__compute_yiii
	movl	%eax, %edx
	.loc 6 1724 35 discriminator 2
	movl	-24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 1724 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$3, -20(%ebp)
	addl	$1, -24(%ebp)
	jmp	L751
L727:
	.loc 6 1725 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L753:
	.loc 6 1725 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L770
	.loc 6 1725 71 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	.loc 6 1725 51 discriminator 2
	movzbl	%al, %ecx
	.loc 6 1725 64 discriminator 2
	movl	-20(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	.loc 6 1725 51 discriminator 2
	movzbl	%al, %edx
	.loc 6 1725 57 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 1725 51 discriminator 2
	movzbl	%al, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__compute_yiii
	movl	%eax, %edx
	.loc 6 1725 35 discriminator 2
	movl	-24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 1725 81 discriminator 2
	movl	-24(%ebp), %eax
	addl	$1, %eax
	.loc 6 1725 83 discriminator 2
	movb	$-1, (%eax)
	.loc 6 1725 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$3, -20(%ebp)
	addl	$2, -24(%ebp)
	jmp	L753
L725:
	.loc 6 1726 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L755:
	.loc 6 1726 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L771
	.loc 6 1726 71 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	.loc 6 1726 51 discriminator 2
	movzbl	%al, %ecx
	.loc 6 1726 64 discriminator 2
	movl	-20(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	.loc 6 1726 51 discriminator 2
	movzbl	%al, %edx
	.loc 6 1726 57 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 1726 51 discriminator 2
	movzbl	%al, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__compute_yiii
	movl	%eax, %edx
	.loc 6 1726 35 discriminator 2
	movl	-24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 1726 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$4, -20(%ebp)
	addl	$1, -24(%ebp)
	jmp	L755
L724:
	.loc 6 1727 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L757:
	.loc 6 1727 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L772
	.loc 6 1727 71 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	.loc 6 1727 51 discriminator 2
	movzbl	%al, %ecx
	.loc 6 1727 64 discriminator 2
	movl	-20(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	.loc 6 1727 51 discriminator 2
	movzbl	%al, %edx
	.loc 6 1727 57 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 1727 51 discriminator 2
	movzbl	%al, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__compute_yiii
	movl	%eax, %edx
	.loc 6 1727 35 discriminator 2
	movl	-24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 1727 81 discriminator 2
	movl	-24(%ebp), %eax
	leal	1(%eax), %edx
	.loc 6 1727 83 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	3(%eax), %eax
	movb	%al, (%edx)
	.loc 6 1727 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$4, -20(%ebp)
	addl	$2, -24(%ebp)
	jmp	L757
L722:
	.loc 6 1728 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L759:
	.loc 6 1728 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L773
	.loc 6 1728 41 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	(%eax), %edx
	.loc 6 1728 35 discriminator 2
	movl	-24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 1728 49 discriminator 2
	movl	-24(%ebp), %eax
	leal	1(%eax), %edx
	.loc 6 1728 50 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	1(%eax), %eax
	movb	%al, (%edx)
	.loc 6 1728 64 discriminator 2
	movl	-24(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 1728 65 discriminator 2
	movl	-20(%ebp), %eax
	movzbl	2(%eax), %eax
	movb	%al, (%edx)
	.loc 6 1728 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$4, -20(%ebp)
	addl	$3, -24(%ebp)
	jmp	L759
L721:
	.loc 6 1729 19
	movl	$1729, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC5, (%esp)
	call	__assert
	.loc 6 1729 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1729 52
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1729 76
	movl	$LC40, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L714
L762:
	.loc 6 1717 95
	nop
	jmp	L737
L763:
	.loc 6 1718 95
	nop
	jmp	L737
L764:
	.loc 6 1719 95
	nop
	jmp	L737
L765:
	.loc 6 1720 95
	nop
	jmp	L737
L766:
	.loc 6 1721 95
	nop
	jmp	L737
L767:
	.loc 6 1722 95
	nop
	jmp	L737
L768:
	.loc 6 1723 95
	nop
	jmp	L737
L769:
	.loc 6 1724 95
	nop
	jmp	L737
L770:
	.loc 6 1725 95
	nop
	jmp	L737
L771:
	.loc 6 1726 95
	nop
	jmp	L737
L772:
	.loc 6 1727 95
	nop
	jmp	L737
L773:
	.loc 6 1728 95
	nop
L737:
LBE126:
	.loc 6 1708 4 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L760
L720:
LBE125:
	.loc 6 1734 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1735 11
	movl	-28(%ebp), %eax
L714:
	.loc 6 1736 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1845:
	.def	__ZL18stbi__compute_y_16iii;	.scl	3;	.type	32;	.endef
__ZL18stbi__compute_y_16iii:
LFB1846:
	.loc 6 1743 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 1744 30
	movl	8(%ebp), %eax
	imull	$77, %eax, %edx
	.loc 6 1744 39
	movl	12(%ebp), %eax
	imull	$150, %eax, %eax
	.loc 6 1744 35
	addl	%eax, %edx
	.loc 6 1744 51
	movl	16(%ebp), %eax
	imull	$29, %eax, %eax
	.loc 6 1744 45
	addl	%edx, %eax
	.loc 6 1744 56
	sarl	$8, %eax
	.loc 6 1745 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1846:
	.def	__ZL22stbi__convert_format16Ptiijj;	.scl	3;	.type	32;	.endef
__ZL22stbi__convert_format16Ptiijj:
LFB1847:
	.loc 6 1752 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 1756 17
	movl	16(%ebp), %edx
	movl	12(%ebp), %eax
	.loc 6 1756 4
	cmpl	%eax, %edx
	jne	L777
	.loc 6 1756 34 discriminator 1
	movl	8(%ebp), %eax
	jmp	L778
L777:
	.loc 6 1757 4
	movl	16(%ebp), %eax
	testl	%eax, %eax
	jle	L779
	.loc 6 1757 4 is_stmt 0 discriminator 1
	movl	16(%ebp), %eax
	cmpl	$4, %eax
	jle	L825
L779:
	.loc 6 1757 4 discriminator 4
	movl	$1757, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC39, (%esp)
	call	__assert
	jmp	L782
L825:
	.loc 6 1757 4
	nop
L782:
	.loc 6 1759 50 is_stmt 1
	movl	16(%ebp), %eax
	imull	20(%ebp), %eax
	.loc 6 1759 54
	imull	24(%ebp), %eax
	.loc 6 1759 40
	addl	%eax, %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, -28(%ebp)
	.loc 6 1760 4
	cmpl	$0, -28(%ebp)
	jne	L783
	.loc 6 1761 7
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1762 31
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L778
L783:
LBB127:
	.loc 6 1765 10
	movl	$0, -16(%ebp)
L824:
	.loc 6 1765 18 discriminator 1
	movl	24(%ebp), %eax
	.loc 6 1765 16 discriminator 1
	cmpl	%eax, -16(%ebp)
	jge	L784
LBB128:
	.loc 6 1766 37
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	.loc 6 1766 41
	movl	12(%ebp), %edx
	imull	%edx, %eax
	.loc 6 1766 33
	leal	(%eax,%eax), %edx
	.loc 6 1766 21
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 6 1767 37
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	.loc 6 1767 41
	movl	16(%ebp), %edx
	imull	%edx, %eax
	.loc 6 1767 33
	leal	(%eax,%eax), %edx
	.loc 6 1767 21
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 6 1773 15
	movl	12(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1773 7
	subl	$10, %eax
	cmpl	$25, %eax
	ja	L785
	movl	L787(,%eax,4), %eax
	jmp	*%eax
	.section .rdata,"dr"
	.align 4
L787:
	.long	L798
	.long	L797
	.long	L796
	.long	L785
	.long	L785
	.long	L785
	.long	L785
	.long	L795
	.long	L785
	.long	L794
	.long	L793
	.long	L785
	.long	L785
	.long	L785
	.long	L785
	.long	L792
	.long	L791
	.long	L785
	.long	L790
	.long	L785
	.long	L785
	.long	L785
	.long	L785
	.long	L789
	.long	L788
	.long	L786
	.text
L798:
	.loc 6 1774 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L800:
	.loc 6 1774 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L826
	.loc 6 1774 41 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	(%eax), %edx
	.loc 6 1774 35 discriminator 2
	movl	-24(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 1774 50 discriminator 2
	movl	-24(%ebp), %eax
	addl	$2, %eax
	.loc 6 1774 51 discriminator 2
	movw	$-1, (%eax)
	.loc 6 1774 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$2, -20(%ebp)
	addl	$4, -24(%ebp)
	jmp	L800
L797:
	.loc 6 1775 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L803:
	.loc 6 1775 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L827
	.loc 6 1775 50 is_stmt 1 discriminator 2
	movl	-24(%ebp), %eax
	leal	4(%eax), %edx
	.loc 6 1775 57 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 1775 51 discriminator 2
	movw	%ax, (%edx)
	.loc 6 1775 42 discriminator 2
	movl	-24(%ebp), %eax
	addl	$2, %eax
	.loc 6 1775 50 discriminator 2
	movzwl	(%edx), %edx
	.loc 6 1775 43 discriminator 2
	movw	%dx, (%eax)
	.loc 6 1775 42 discriminator 2
	movzwl	(%eax), %edx
	.loc 6 1775 35 discriminator 2
	movl	-24(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 1775 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$2, -20(%ebp)
	addl	$6, -24(%ebp)
	jmp	L803
L796:
	.loc 6 1776 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L805:
	.loc 6 1776 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L828
	.loc 6 1776 50 is_stmt 1 discriminator 2
	movl	-24(%ebp), %eax
	leal	4(%eax), %edx
	.loc 6 1776 57 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 1776 51 discriminator 2
	movw	%ax, (%edx)
	.loc 6 1776 42 discriminator 2
	movl	-24(%ebp), %eax
	addl	$2, %eax
	.loc 6 1776 50 discriminator 2
	movzwl	(%edx), %edx
	.loc 6 1776 43 discriminator 2
	movw	%dx, (%eax)
	.loc 6 1776 42 discriminator 2
	movzwl	(%eax), %edx
	.loc 6 1776 35 discriminator 2
	movl	-24(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 1776 66 discriminator 2
	movl	-24(%ebp), %eax
	addl	$6, %eax
	.loc 6 1776 67 discriminator 2
	movw	$-1, (%eax)
	.loc 6 1776 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$2, -20(%ebp)
	addl	$8, -24(%ebp)
	jmp	L805
L795:
	.loc 6 1777 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L807:
	.loc 6 1777 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L829
	.loc 6 1777 41 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	(%eax), %edx
	.loc 6 1777 35 discriminator 2
	movl	-24(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 1777 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$4, -20(%ebp)
	addl	$2, -24(%ebp)
	jmp	L807
L794:
	.loc 6 1778 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L809:
	.loc 6 1778 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L830
	.loc 6 1778 50 is_stmt 1 discriminator 2
	movl	-24(%ebp), %eax
	leal	4(%eax), %edx
	.loc 6 1778 57 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 1778 51 discriminator 2
	movw	%ax, (%edx)
	.loc 6 1778 42 discriminator 2
	movl	-24(%ebp), %eax
	addl	$2, %eax
	.loc 6 1778 50 discriminator 2
	movzwl	(%edx), %edx
	.loc 6 1778 43 discriminator 2
	movw	%dx, (%eax)
	.loc 6 1778 42 discriminator 2
	movzwl	(%eax), %edx
	.loc 6 1778 35 discriminator 2
	movl	-24(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 1778 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$4, -20(%ebp)
	addl	$6, -24(%ebp)
	jmp	L809
L793:
	.loc 6 1779 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L811:
	.loc 6 1779 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L831
	.loc 6 1779 50 is_stmt 1 discriminator 2
	movl	-24(%ebp), %eax
	leal	4(%eax), %edx
	.loc 6 1779 57 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 1779 51 discriminator 2
	movw	%ax, (%edx)
	.loc 6 1779 42 discriminator 2
	movl	-24(%ebp), %eax
	addl	$2, %eax
	.loc 6 1779 50 discriminator 2
	movzwl	(%edx), %edx
	.loc 6 1779 43 discriminator 2
	movw	%dx, (%eax)
	.loc 6 1779 42 discriminator 2
	movzwl	(%eax), %edx
	.loc 6 1779 35 discriminator 2
	movl	-24(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 1779 66 discriminator 2
	movl	-24(%ebp), %eax
	leal	6(%eax), %edx
	.loc 6 1779 67 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	2(%eax), %eax
	movw	%ax, (%edx)
	.loc 6 1779 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$4, -20(%ebp)
	addl	$8, -24(%ebp)
	jmp	L811
L790:
	.loc 6 1780 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L813:
	.loc 6 1780 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L832
	.loc 6 1780 41 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	(%eax), %edx
	.loc 6 1780 35 discriminator 2
	movl	-24(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 1780 49 discriminator 2
	movl	-24(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 1780 50 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	2(%eax), %eax
	movw	%ax, (%edx)
	.loc 6 1780 64 discriminator 2
	movl	-24(%ebp), %eax
	leal	4(%eax), %edx
	.loc 6 1780 65 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	4(%eax), %eax
	movw	%ax, (%edx)
	.loc 6 1780 79 discriminator 2
	movl	-24(%ebp), %eax
	addl	$6, %eax
	.loc 6 1780 80 discriminator 2
	movw	$-1, (%eax)
	.loc 6 1780 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$6, -20(%ebp)
	addl	$8, -24(%ebp)
	jmp	L813
L792:
	.loc 6 1781 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L815:
	.loc 6 1781 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L833
	.loc 6 1781 74 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	addl	$4, %eax
	movzwl	(%eax), %eax
	.loc 6 1781 54 discriminator 2
	movzwl	%ax, %ecx
	.loc 6 1781 67 discriminator 2
	movl	-20(%ebp), %eax
	addl	$2, %eax
	movzwl	(%eax), %eax
	.loc 6 1781 54 discriminator 2
	movzwl	%ax, %edx
	.loc 6 1781 60 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 1781 54 discriminator 2
	movzwl	%ax, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbi__compute_y_16iii
	movl	%eax, %edx
	.loc 6 1781 35 discriminator 2
	movl	-24(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 1781 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$6, -20(%ebp)
	addl	$2, -24(%ebp)
	jmp	L815
L791:
	.loc 6 1782 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L817:
	.loc 6 1782 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L834
	.loc 6 1782 74 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	addl	$4, %eax
	movzwl	(%eax), %eax
	.loc 6 1782 54 discriminator 2
	movzwl	%ax, %ecx
	.loc 6 1782 67 discriminator 2
	movl	-20(%ebp), %eax
	addl	$2, %eax
	movzwl	(%eax), %eax
	.loc 6 1782 54 discriminator 2
	movzwl	%ax, %edx
	.loc 6 1782 60 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 1782 54 discriminator 2
	movzwl	%ax, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbi__compute_y_16iii
	movl	%eax, %edx
	.loc 6 1782 35 discriminator 2
	movl	-24(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 1782 84 discriminator 2
	movl	-24(%ebp), %eax
	addl	$2, %eax
	.loc 6 1782 86 discriminator 2
	movw	$-1, (%eax)
	.loc 6 1782 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$6, -20(%ebp)
	addl	$4, -24(%ebp)
	jmp	L817
L789:
	.loc 6 1783 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L819:
	.loc 6 1783 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L835
	.loc 6 1783 74 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	addl	$4, %eax
	movzwl	(%eax), %eax
	.loc 6 1783 54 discriminator 2
	movzwl	%ax, %ecx
	.loc 6 1783 67 discriminator 2
	movl	-20(%ebp), %eax
	addl	$2, %eax
	movzwl	(%eax), %eax
	.loc 6 1783 54 discriminator 2
	movzwl	%ax, %edx
	.loc 6 1783 60 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 1783 54 discriminator 2
	movzwl	%ax, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbi__compute_y_16iii
	movl	%eax, %edx
	.loc 6 1783 35 discriminator 2
	movl	-24(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 1783 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$8, -20(%ebp)
	addl	$2, -24(%ebp)
	jmp	L819
L788:
	.loc 6 1784 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L821:
	.loc 6 1784 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L836
	.loc 6 1784 74 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	addl	$4, %eax
	movzwl	(%eax), %eax
	.loc 6 1784 54 discriminator 2
	movzwl	%ax, %ecx
	.loc 6 1784 67 discriminator 2
	movl	-20(%ebp), %eax
	addl	$2, %eax
	movzwl	(%eax), %eax
	.loc 6 1784 54 discriminator 2
	movzwl	%ax, %edx
	.loc 6 1784 60 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 1784 54 discriminator 2
	movzwl	%ax, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbi__compute_y_16iii
	movl	%eax, %edx
	.loc 6 1784 35 discriminator 2
	movl	-24(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 1784 84 discriminator 2
	movl	-24(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 1784 86 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	6(%eax), %eax
	movw	%ax, (%edx)
	.loc 6 1784 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$8, -20(%ebp)
	addl	$4, -24(%ebp)
	jmp	L821
L786:
	.loc 6 1785 10
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L823:
	.loc 6 1785 10 is_stmt 0 discriminator 3
	cmpl	$0, -12(%ebp)
	js	L837
	.loc 6 1785 41 is_stmt 1 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	(%eax), %edx
	.loc 6 1785 35 discriminator 2
	movl	-24(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 1785 49 discriminator 2
	movl	-24(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 1785 50 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	2(%eax), %eax
	movw	%ax, (%edx)
	.loc 6 1785 64 discriminator 2
	movl	-24(%ebp), %eax
	leal	4(%eax), %edx
	.loc 6 1785 65 discriminator 2
	movl	-20(%ebp), %eax
	movzwl	4(%eax), %eax
	movw	%ax, (%edx)
	.loc 6 1785 10 discriminator 2
	subl	$1, -12(%ebp)
	addl	$8, -20(%ebp)
	addl	$6, -24(%ebp)
	jmp	L823
L785:
	.loc 6 1786 19
	movl	$1786, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC5, (%esp)
	call	__assert
	.loc 6 1786 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1786 52
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1786 92
	movl	$LC40, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L778
L826:
	.loc 6 1774 98
	nop
	jmp	L801
L827:
	.loc 6 1775 98
	nop
	jmp	L801
L828:
	.loc 6 1776 98
	nop
	jmp	L801
L829:
	.loc 6 1777 98
	nop
	jmp	L801
L830:
	.loc 6 1778 98
	nop
	jmp	L801
L831:
	.loc 6 1779 98
	nop
	jmp	L801
L832:
	.loc 6 1780 98
	nop
	jmp	L801
L833:
	.loc 6 1781 98
	nop
	jmp	L801
L834:
	.loc 6 1782 98
	nop
	jmp	L801
L835:
	.loc 6 1783 98
	nop
	jmp	L801
L836:
	.loc 6 1784 98
	nop
	jmp	L801
L837:
	.loc 6 1785 98
	nop
L801:
LBE128:
	.loc 6 1765 4 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L824
L784:
LBE127:
	.loc 6 1791 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1792 11
	movl	-28(%ebp), %eax
L778:
	.loc 6 1793 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1847:
	.def	__ZL16stbi__ldr_to_hdrPhiii;	.scl	3;	.type	32;	.endef
__ZL16stbi__ldr_to_hdrPhiii:
LFB1848:
	.loc 6 1798 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 6 1801 4
	cmpl	$0, 8(%ebp)
	jne	L839
	.loc 6 1801 22 discriminator 1
	movl	$0, %eax
	jmp	L840
L839:
	.loc 6 1802 40
	movl	$0, 16(%esp)
	movl	$4, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad4iiiii
	movl	%eax, -24(%ebp)
	.loc 6 1803 4
	cmpl	$0, -24(%ebp)
	jne	L841
	.loc 6 1803 26 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1803 50 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L840
L841:
	.loc 6 1805 13
	movl	20(%ebp), %eax
	andl	$1, %eax
	.loc 6 1805 4
	testl	%eax, %eax
	je	L842
	.loc 6 1805 20 discriminator 1
	movl	20(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	L843
L842:
	.loc 6 1805 35 discriminator 2
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -20(%ebp)
L843:
	.loc 6 1806 10
	movl	$0, -12(%ebp)
L847:
	.loc 6 1806 19 discriminator 1
	movl	12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 6 1806 16 discriminator 1
	cmpl	%eax, -12(%ebp)
	jge	L844
	.loc 6 1807 13
	movl	$0, -16(%ebp)
L846:
	.loc 6 1807 19 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jge	L845
	.loc 6 1808 43 discriminator 2
	flds	__ZL15stbi__l2h_gamma
	.loc 6 1808 50 discriminator 2
	movl	-12(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 6 1808 55 discriminator 2
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 6 1808 57 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 1808 43 discriminator 2
	movl	%eax, -28(%ebp)
	fildl	-28(%ebp)
	flds	LC41
	fdivrp	%st, %st(1)
	fxch	%st(1)
	fstps	4(%esp)
	fstps	(%esp)
	call	__ZSt3powff
	.loc 6 1808 84 discriminator 2
	flds	__ZL15stbi__l2h_scale
	.loc 6 1808 18 discriminator 2
	movl	-12(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 6 1808 24 discriminator 2
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1808 27 discriminator 2
	leal	0(,%eax,4), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1808 84 discriminator 2
	fmulp	%st, %st(1)
	.loc 6 1808 29 discriminator 2
	fstps	(%eax)
	.loc 6 1807 7 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L846
L845:
	.loc 6 1806 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L847
L844:
	.loc 6 1811 4
	movl	-20(%ebp), %eax
	cmpl	20(%ebp), %eax
	jge	L848
	.loc 6 1812 13
	movl	$0, -12(%ebp)
L849:
	.loc 6 1812 22 discriminator 3
	movl	12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 6 1812 19 discriminator 3
	cmpl	%eax, -12(%ebp)
	jge	L848
	.loc 6 1813 37 discriminator 2
	movl	-12(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 6 1813 43 discriminator 2
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 6 1813 46 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 1813 47 discriminator 2
	movl	%eax, -28(%ebp)
	fildl	-28(%ebp)
	.loc 6 1813 18 discriminator 2
	movl	-12(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 6 1813 24 discriminator 2
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1813 27 discriminator 2
	leal	0(,%eax,4), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1813 47 discriminator 2
	flds	LC41
	fdivrp	%st, %st(1)
	.loc 6 1813 29 discriminator 2
	fstps	(%eax)
	.loc 6 1812 7 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L849
L848:
	.loc 6 1816 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1817 11
	movl	-24(%ebp), %eax
L840:
	.loc 6 1818 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1848:
	.def	__ZL16stbi__hdr_to_ldrPfiii;	.scl	3;	.type	32;	.endef
__ZL16stbi__hdr_to_ldrPfiii:
LFB1849:
	.loc 6 1824 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 6 1827 4
	cmpl	$0, 8(%ebp)
	jne	L851
	.loc 6 1827 22 discriminator 1
	movl	$0, %eax
	jmp	L852
L851:
	.loc 6 1828 42
	movl	$0, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad3iiii
	movl	%eax, -24(%ebp)
	.loc 6 1829 4
	cmpl	$0, -24(%ebp)
	jne	L853
	.loc 6 1829 26 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1829 50 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L852
L853:
	.loc 6 1831 13
	movl	20(%ebp), %eax
	andl	$1, %eax
	.loc 6 1831 4
	testl	%eax, %eax
	je	L854
	.loc 6 1831 20 discriminator 1
	movl	20(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	L855
L854:
	.loc 6 1831 35 discriminator 2
	movl	20(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -20(%ebp)
L855:
LBB129:
	.loc 6 1832 10
	movl	$0, -12(%ebp)
L868:
	.loc 6 1832 19 discriminator 1
	movl	12(%ebp), %eax
	imull	16(%ebp), %eax
	.loc 6 1832 16 discriminator 1
	cmpl	%eax, -12(%ebp)
	jge	L856
LBB130:
LBB131:
	.loc 6 1833 13
	movl	$0, -16(%ebp)
L862:
	.loc 6 1833 19 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jge	L857
LBB132:
	.loc 6 1834 31
	flds	__ZL17stbi__h2l_gamma_i
	.loc 6 1834 38
	movl	-12(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 6 1834 43
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1834 45
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 6 1834 31
	flds	__ZL17stbi__h2l_scale_i
	fmulp	%st, %st(1)
	fxch	%st(1)
	fstps	4(%esp)
	fstps	(%esp)
	call	__ZSt3powff
	.loc 6 1834 85
	flds	LC41
	fmulp	%st, %st(1)
	.loc 6 1834 91
	flds	LC22
	faddp	%st, %st(1)
	.loc 6 1834 93
	fstps	-28(%ebp)
	.loc 6 1835 16
	flds	-28(%ebp)
	.loc 6 1835 10
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L858
	.loc 6 1835 23 discriminator 1
	fldz
	fstps	-28(%ebp)
L858:
	.loc 6 1836 10
	flds	LC41
	.loc 6 1836 16
	flds	-28(%ebp)
	.loc 6 1836 10
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L860
	.loc 6 1836 25 discriminator 1
	flds	LC41
	fstps	-28(%ebp)
L860:
	.loc 6 1837 41 discriminator 2
	flds	-28(%ebp)
	fnstcw	-42(%ebp)
	movzwl	-42(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -44(%ebp)
	fldcw	-44(%ebp)
	fistpl	-48(%ebp)
	fldcw	-42(%ebp)
	movl	-48(%ebp), %ecx
	.loc 6 1837 18 discriminator 2
	movl	-12(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 6 1837 24 discriminator 2
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 6 1837 27 discriminator 2
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1837 29 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
LBE132:
	.loc 6 1833 7 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L862
L857:
LBE131:
LBB133:
	.loc 6 1839 7
	movl	-16(%ebp), %eax
	cmpl	20(%ebp), %eax
	jge	L863
LBB134:
	.loc 6 1840 26
	movl	-12(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 6 1840 31
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1840 33
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 6 1840 35
	flds	LC41
	fmulp	%st, %st(1)
	.loc 6 1840 41
	flds	LC22
	faddp	%st, %st(1)
	.loc 6 1840 16
	fstps	-32(%ebp)
	.loc 6 1841 16
	flds	-32(%ebp)
	.loc 6 1841 10
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L864
	.loc 6 1841 23 discriminator 1
	fldz
	fstps	-32(%ebp)
L864:
	.loc 6 1842 10
	flds	LC41
	.loc 6 1842 16
	flds	-32(%ebp)
	.loc 6 1842 10
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L866
	.loc 6 1842 25 discriminator 1
	flds	LC41
	fstps	-32(%ebp)
L866:
	.loc 6 1843 41
	flds	-32(%ebp)
	fnstcw	-42(%ebp)
	movzwl	-42(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -44(%ebp)
	fldcw	-44(%ebp)
	fistpl	-48(%ebp)
	fldcw	-42(%ebp)
	movl	-48(%ebp), %ecx
	.loc 6 1843 18
	movl	-12(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 6 1843 24
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 6 1843 27
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1843 29
	movl	%ecx, %edx
	movb	%dl, (%eax)
L863:
LBE134:
LBE133:
LBE130:
	.loc 6 1832 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L868
L856:
LBE129:
	.loc 6 1846 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 1847 11
	movl	-24(%ebp), %eax
L852:
	.loc 6 1848 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1849:
	.section .rdata,"dr"
LC42:
	.ascii "bad code lengths\0"
	.text
	.def	__ZL19stbi__build_huffmanP13stbi__huffmanPi;	.scl	3;	.type	32;	.endef
__ZL19stbi__build_huffmanP13stbi__huffmanPi:
LFB1850:
	.loc 6 1943 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 1944 12
	movl	$0, -20(%ebp)
	.loc 6 1947 10
	movl	$0, -12(%ebp)
L877:
	.loc 6 1947 16 discriminator 1
	cmpl	$15, -12(%ebp)
	jg	L874
	.loc 6 1948 13
	movl	$0, -16(%ebp)
L876:
	.loc 6 1948 28 discriminator 3
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 6 1948 19 discriminator 3
	cmpl	%eax, -16(%ebp)
	jge	L875
	.loc 6 1949 37 discriminator 2
	movl	-12(%ebp), %eax
	movl	%eax, %ecx
	.loc 6 1949 19 discriminator 2
	movl	-20(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -20(%ebp)
	.loc 6 1949 37 discriminator 2
	addl	$1, %ecx
	.loc 6 1949 23 discriminator 2
	movl	8(%ebp), %edx
	movb	%cl, 1280(%edx,%eax)
	.loc 6 1948 7 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L876
L875:
	.loc 6 1947 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L877
L874:
	.loc 6 1950 15
	movl	8(%ebp), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	addl	$1280, %eax
	movb	$0, (%eax)
	.loc 6 1953 9
	movl	$0, -24(%ebp)
	.loc 6 1954 6
	movl	$0, -20(%ebp)
	.loc 6 1955 9
	movl	$1, -16(%ebp)
L883:
	.loc 6 1955 15 discriminator 1
	cmpl	$16, -16(%ebp)
	jg	L878
	.loc 6 1957 23
	movl	-20(%ebp), %eax
	subl	-24(%ebp), %eax
	movl	%eax, %ecx
	.loc 6 1957 19
	movl	8(%ebp), %eax
	movl	-16(%ebp), %edx
	addl	$400, %edx
	movl	%ecx, 12(%eax,%edx,4)
	.loc 6 1958 20
	movl	8(%ebp), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	addl	$1280, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 1958 7
	cmpl	%eax, -16(%ebp)
	jne	L879
L881:
	.loc 6 1959 26
	movl	8(%ebp), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	addl	$1280, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 1959 28
	cmpl	%eax, -16(%ebp)
	jne	L880
	.loc 6 1960 48
	movl	-24(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -24(%ebp)
	.loc 6 1960 22
	movl	-20(%ebp), %eax
	leal	1(%eax), %ecx
	movl	%ecx, -20(%ebp)
	.loc 6 1960 26
	movl	%edx, %ecx
	movl	8(%ebp), %edx
	addl	$256, %eax
	movw	%cx, (%edx,%eax,2)
	.loc 6 1959 10
	jmp	L881
L880:
	.loc 6 1961 18
	movl	-24(%ebp), %eax
	leal	-1(%eax), %edx
	.loc 6 1961 21
	movl	-16(%ebp), %eax
	movl	%eax, %ecx
	shrl	%cl, %edx
	movl	%edx, %eax
	.loc 6 1961 10
	testl	%eax, %eax
	je	L879
	.loc 6 1961 42 discriminator 1
	movl	$LC42, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L882
L879:
	.loc 6 1964 34 discriminator 2
	movl	$16, %eax
	subl	-16(%ebp), %eax
	.loc 6 1964 28 discriminator 2
	movl	-24(%ebp), %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %ecx
	.loc 6 1964 21 discriminator 2
	movl	8(%ebp), %eax
	movl	-16(%ebp), %edx
	addl	$384, %edx
	movl	%ecx, 4(%eax,%edx,4)
	.loc 6 1965 12 discriminator 2
	sall	-24(%ebp)
	.loc 6 1955 4 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L883
L878:
	.loc 6 1967 18
	movl	8(%ebp), %eax
	movl	-16(%ebp), %edx
	addl	$384, %edx
	movl	$-1, 4(%eax,%edx,4)
	.loc 6 1970 14
	movl	8(%ebp), %eax
	.loc 6 1970 10
	movl	$512, 8(%esp)
	movl	$255, 4(%esp)
	movl	%eax, (%esp)
	call	_memset
LBB135:
	.loc 6 1971 10
	movl	$0, -12(%ebp)
L888:
	.loc 6 1971 16 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jge	L884
LBB136:
	.loc 6 1972 24
	movl	8(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	addl	$1280, %eax
	movzbl	(%eax), %eax
	.loc 6 1972 11
	movzbl	%al, %eax
	movl	%eax, -28(%ebp)
LBB137:
	.loc 6 1973 7
	cmpl	$9, -28(%ebp)
	jg	L885
LBB138:
	.loc 6 1974 27
	movl	8(%ebp), %eax
	movl	-12(%ebp), %edx
	addl	$256, %edx
	movzwl	(%eax,%edx,2), %eax
	movzwl	%ax, %edx
	.loc 6 1974 42
	movl	$9, %eax
	subl	-28(%ebp), %eax
	.loc 6 1974 14
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	movl	%eax, -32(%ebp)
	.loc 6 1975 33
	movl	$9, %eax
	subl	-28(%ebp), %eax
	.loc 6 1975 14
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	movl	%eax, -36(%ebp)
	.loc 6 1976 16
	movl	$0, -16(%ebp)
L887:
	.loc 6 1976 22 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-36(%ebp), %eax
	jge	L885
	.loc 6 1977 22 discriminator 2
	movl	-32(%ebp), %edx
	movl	-16(%ebp), %eax
	addl	%eax, %edx
	.loc 6 1977 26 discriminator 2
	movl	-12(%ebp), %eax
	movl	%eax, %ecx
	movl	8(%ebp), %eax
	movb	%cl, (%eax,%edx)
	.loc 6 1976 10 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L887
L885:
LBE138:
LBE137:
LBE136:
	.loc 6 1971 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L888
L884:
LBE135:
	.loc 6 1981 11
	movl	$1, %eax
L882:
	.loc 6 1982 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1850:
	.def	__ZL19stbi__build_fast_acPsP13stbi__huffman;	.scl	3;	.type	32;	.endef
__ZL19stbi__build_fast_acPsP13stbi__huffman:
LFB1851:
	.loc 6 1987 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$32, %esp
LBB139:
	.loc 6 1989 10
	movl	$0, -4(%ebp)
L895:
	.loc 6 1989 16 discriminator 1
	cmpl	$511, -4(%ebp)
	jg	L896
LBB140:
	.loc 6 1990 15
	movl	12(%ebp), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movb	%al, -9(%ebp)
	.loc 6 1991 16
	movl	-4(%ebp), %eax
	leal	(%eax,%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1991 18
	movw	$0, (%eax)
LBB141:
	.loc 6 1992 7
	cmpb	$-1, -9(%ebp)
	je	L891
LBB142:
	.loc 6 1993 33
	movzbl	-9(%ebp), %eax
	movl	12(%ebp), %edx
	movzbl	1024(%edx,%eax), %eax
	.loc 6 1993 14
	movzbl	%al, %eax
	movl	%eax, -16(%ebp)
	.loc 6 1994 24
	movl	-16(%ebp), %eax
	sarl	$4, %eax
	.loc 6 1994 14
	andl	$15, %eax
	movl	%eax, -20(%ebp)
	.loc 6 1995 14
	movl	-16(%ebp), %eax
	andl	$15, %eax
	movl	%eax, -24(%ebp)
	.loc 6 1996 32
	movzbl	-9(%ebp), %eax
	movl	12(%ebp), %edx
	movzbl	1280(%edx,%eax), %eax
	.loc 6 1996 14
	movzbl	%al, %eax
	movl	%eax, -28(%ebp)
LBB143:
	.loc 6 1998 10
	cmpl	$0, -24(%ebp)
	je	L891
	.loc 6 1998 29 discriminator 1
	movl	-28(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 6 1998 22 discriminator 1
	cmpl	$9, %eax
	jg	L891
LBB144:
	.loc 6 2000 25
	movl	-28(%ebp), %eax
	movl	-4(%ebp), %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 6 2000 33
	andl	$511, %eax
	movl	%eax, %edx
	.loc 6 2000 73
	movl	$9, %eax
	subl	-24(%ebp), %eax
	.loc 6 2000 17
	movl	%eax, %ecx
	sarl	%cl, %edx
	movl	%edx, %eax
	movl	%eax, -8(%ebp)
	.loc 6 2001 35
	movl	-24(%ebp), %eax
	subl	$1, %eax
	.loc 6 2001 17
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	movl	%eax, -32(%ebp)
	.loc 6 2002 13
	movl	-8(%ebp), %eax
	cmpl	-32(%ebp), %eax
	jge	L893
	.loc 6 2002 34 discriminator 1
	movl	-24(%ebp), %eax
	movl	$-1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	.loc 6 2002 26 discriminator 1
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	addl	$1, %eax
	movl	%eax, -8(%ebp)
L893:
	.loc 6 2004 13
	cmpl	$-128, -8(%ebp)
	jl	L891
	.loc 6 2004 27 discriminator 1
	cmpl	$127, -8(%ebp)
	jg	L891
	.loc 6 2005 54
	movl	-8(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 6 2005 67
	sall	$4, %eax
	movl	%eax, %edx
	.loc 6 2005 74
	movl	-28(%ebp), %eax
	movl	%eax, %ecx
	movl	-24(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 2005 67
	addl	%eax, %edx
	.loc 6 2005 25
	movl	-4(%ebp), %eax
	leal	(%eax,%eax), %ecx
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 2005 27
	movw	%dx, (%eax)
L891:
LBE144:
LBE143:
LBE142:
LBE141:
LBE140:
	.loc 6 1989 4 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L895
L896:
LBE139:
	.loc 6 2009 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1851:
	.def	__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg;	.scl	3;	.type	32;	.endef
__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg:
LFB1852:
	.loc 6 2012 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
L905:
LBB145:
	.loc 6 2014 27
	movl	8(%ebp), %eax
	movl	18376(%eax), %eax
	.loc 6 2014 34
	testl	%eax, %eax
	jne	L898
	.loc 6 2014 50 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 2014 34 discriminator 1
	movzbl	%al, %eax
	jmp	L899
L898:
	.loc 6 2014 34 is_stmt 0 discriminator 2
	movl	$0, %eax
L899:
	.loc 6 2014 55 is_stmt 1 discriminator 4
	movl	%eax, -16(%ebp)
LBB146:
	.loc 6 2015 7 discriminator 4
	cmpl	$255, -16(%ebp)
	jne	L900
LBB147:
	.loc 6 2016 28
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 2016 33
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
L902:
	.loc 6 2017 19 discriminator 2
	cmpl	$255, -12(%ebp)
	jne	L901
	.loc 6 2017 42 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 2017 30 discriminator 1
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 6 2017 10 discriminator 1
	jmp	L902
L901:
	.loc 6 2018 10
	cmpl	$0, -12(%ebp)
	je	L900
	.loc 6 2019 23
	movl	-12(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movb	%dl, 18372(%eax)
	.loc 6 2020 23
	movl	8(%ebp), %eax
	movl	$1, 18376(%eax)
	.loc 6 2021 13
	jmp	L897
L900:
LBE147:
LBE146:
	.loc 6 2024 22
	movl	8(%ebp), %eax
	movl	18364(%eax), %edx
	.loc 6 2024 39
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2024 34
	movl	$24, %ecx
	subl	%eax, %ecx
	movl	%ecx, %eax
	.loc 6 2024 27
	movl	-16(%ebp), %ebx
	movl	%eax, %ecx
	sall	%cl, %ebx
	movl	%ebx, %eax
	.loc 6 2024 22
	orl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 18364(%eax)
	.loc 6 2025 20
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	leal	8(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 18368(%eax)
LBE145:
	.loc 6 2026 16
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2026 26
	cmpl	$24, %eax
	jg	L897
	.loc 6 2013 4
	jmp	L905
L897:
	.loc 6 2027 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1852:
	.section .rdata,"dr"
	.align 32
__ZL11stbi__bmask:
	.long	0
	.long	1
	.long	3
	.long	7
	.long	15
	.long	31
	.long	63
	.long	127
	.long	255
	.long	511
	.long	1023
	.long	2047
	.long	4095
	.long	8191
	.long	16383
	.long	32767
	.long	65535
	.align 4
LC43:
	.ascii "(((j->code_buffer) >> (32 - h->size[c])) & stbi__bmask[h->size[c]]) == h->code[c]\0"
	.text
	.def	__ZL22stbi__jpeg_huff_decodeP10stbi__jpegP13stbi__huffman;	.scl	3;	.type	32;	.endef
__ZL22stbi__jpeg_huff_decodeP10stbi__jpegP13stbi__huffman:
LFB1853:
	.loc 6 2034 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 2038 11
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2038 4
	cmpl	$15, %eax
	jg	L907
	.loc 6 2038 51 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg
L907:
	.loc 6 2042 12
	movl	8(%ebp), %eax
	movl	18364(%eax), %eax
	.loc 6 2042 24
	shrl	$23, %eax
	.loc 6 2042 6
	movl	%eax, -16(%ebp)
	.loc 6 2043 17
	movl	12(%ebp), %edx
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 6 2043 6
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
LBB148:
	.loc 6 2044 4
	cmpl	$254, -12(%ebp)
	jg	L908
LBB149:
	.loc 6 2045 24
	movl	12(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	addl	$1280, %eax
	movzbl	(%eax), %eax
	.loc 6 2045 11
	movzbl	%al, %eax
	movl	%eax, -20(%ebp)
	.loc 6 2046 18
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2046 7
	cmpl	%eax, -20(%ebp)
	jle	L909
	.loc 6 2047 18
	movl	$-1, %eax
	jmp	L910
L909:
	.loc 6 2048 22
	movl	8(%ebp), %eax
	movl	18364(%eax), %edx
	movl	-20(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	8(%ebp), %eax
	movl	%edx, 18364(%eax)
	.loc 6 2049 20
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	subl	-20(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 18368(%eax)
	.loc 6 2050 25
	movl	12(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	addl	$1024, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	jmp	L910
L908:
LBE149:
LBE148:
	.loc 6 2059 14
	movl	8(%ebp), %eax
	movl	18364(%eax), %eax
	.loc 6 2059 9
	shrl	$16, %eax
	movl	%eax, -24(%ebp)
	.loc 6 2060 10
	movl	$10, -12(%ebp)
L913:
	.loc 6 2061 30
	movl	12(%ebp), %eax
	movl	-12(%ebp), %edx
	addl	$384, %edx
	movl	4(%eax,%edx,4), %eax
	.loc 6 2061 7
	cmpl	%eax, -24(%ebp)
	jb	L920
	.loc 6 2060 4
	addl	$1, -12(%ebp)
	.loc 6 2061 7
	jmp	L913
L920:
	.loc 6 2062 10
	nop
	.loc 6 2063 4
	cmpl	$17, -12(%ebp)
	jne	L914
	.loc 6 2065 20
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	leal	-16(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 18368(%eax)
	.loc 6 2066 15
	movl	$-1, %eax
	jmp	L910
L914:
	.loc 6 2069 15
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2069 4
	cmpl	%eax, -12(%ebp)
	jle	L915
	.loc 6 2070 15
	movl	$-1, %eax
	jmp	L910
L915:
	.loc 6 2073 13
	movl	8(%ebp), %eax
	movl	18364(%eax), %edx
	.loc 6 2073 32
	movl	$32, %eax
	subl	-12(%ebp), %eax
	.loc 6 2073 25
	movl	%eax, %ecx
	shrl	%cl, %edx
	.loc 6 2073 53
	movl	-12(%ebp), %eax
	movl	__ZL11stbi__bmask(,%eax,4), %eax
	.loc 6 2073 38
	movl	%edx, %ecx
	andl	%eax, %ecx
	.loc 6 2073 68
	movl	12(%ebp), %eax
	movl	-12(%ebp), %edx
	addl	$400, %edx
	movl	12(%eax,%edx,4), %eax
	.loc 6 2073 56
	addl	%ecx, %eax
	.loc 6 2073 6
	movl	%eax, -16(%ebp)
	.loc 6 2074 4
	movl	8(%ebp), %eax
	movl	18364(%eax), %edx
	movl	12(%ebp), %ecx
	movl	-16(%ebp), %eax
	addl	%ecx, %eax
	addl	$1280, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	movl	$32, %ecx
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, %ecx
	shrl	%cl, %edx
	movl	%edx, %ecx
	movl	12(%ebp), %edx
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	addl	$1280, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	movl	__ZL11stbi__bmask(,%eax,4), %eax
	andl	%eax, %ecx
	movl	12(%ebp), %eax
	movl	-16(%ebp), %edx
	addl	$256, %edx
	movzwl	(%eax,%edx,2), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %ecx
	je	L918
	.loc 6 2074 4 is_stmt 0 discriminator 2
	movl	$2074, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC43, (%esp)
	call	__assert
L918:
	.loc 6 2077 17 is_stmt 1
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	subl	-12(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 18368(%eax)
	.loc 6 2078 19
	movl	8(%ebp), %eax
	movl	18364(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	8(%ebp), %eax
	movl	%edx, 18364(%eax)
	.loc 6 2079 22
	movl	12(%ebp), %edx
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	addl	$1024, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
L910:
	.loc 6 2080 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1853:
	.section .rdata,"dr"
	.align 32
__ZL11stbi__jbias:
	.long	0
	.long	-1
	.long	-3
	.long	-7
	.long	-15
	.long	-31
	.long	-63
	.long	-127
	.long	-255
	.long	-511
	.long	-1023
	.long	-2047
	.long	-4095
	.long	-8191
	.long	-16383
	.long	-32767
	.text
	.def	__ZL20stbi__extend_receiveP10stbi__jpegi;	.scl	3;	.type	32;	.endef
__ZL20stbi__extend_receiveP10stbi__jpegi:
LFB1854:
	.loc 6 2088 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 2091 11
	movl	8(%ebp), %eax
	movl	18368(%eax), %edx
	.loc 6 2091 21
	movl	12(%ebp), %eax
	.loc 6 2091 4
	cmpl	%eax, %edx
	jge	L922
	.loc 6 2091 50 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg
L922:
	.loc 6 2093 26
	movl	8(%ebp), %eax
	movl	18364(%eax), %eax
	.loc 6 2093 8
	sarl	$31, %eax
	movl	%eax, -12(%ebp)
	.loc 6 2094 8
	movl	8(%ebp), %eax
	movl	18364(%eax), %edx
	movl	12(%ebp), %eax
	.loc 6 2094 6
	movl	%eax, %ecx
	roll	%cl, %edx
	movl	%edx, %eax
	movl	%eax, -16(%ebp)
	.loc 6 2095 10
	movl	12(%ebp), %eax
	.loc 6 2095 4
	testl	%eax, %eax
	js	L923
	.loc 6 2095 19 discriminator 2
	movl	12(%ebp), %eax
	.loc 6 2095 14 discriminator 2
	cmpl	$16, %eax
	jle	L924
L923:
	.loc 6 2095 79 discriminator 3
	movl	$0, %eax
	jmp	L925
L924:
	.loc 6 2096 39
	movl	12(%ebp), %eax
	movl	__ZL11stbi__bmask(,%eax,4), %eax
	.loc 6 2096 25
	notl	%eax
	.loc 6 2096 23
	andl	-16(%ebp), %eax
	movl	%eax, %edx
	.loc 6 2096 19
	movl	8(%ebp), %eax
	movl	%edx, 18364(%eax)
	.loc 6 2097 22
	movl	12(%ebp), %eax
	movl	__ZL11stbi__bmask(,%eax,4), %eax
	.loc 6 2097 6
	andl	%eax, -16(%ebp)
	.loc 6 2098 17
	movl	8(%ebp), %eax
	movl	18368(%eax), %edx
	movl	12(%ebp), %eax
	subl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 18368(%eax)
	.loc 6 2099 29
	movl	12(%ebp), %eax
	movl	__ZL11stbi__jbias(,%eax,4), %eax
	.loc 6 2099 33
	movl	-12(%ebp), %edx
	notl	%edx
	.loc 6 2099 31
	andl	%edx, %eax
	movl	%eax, %edx
	.loc 6 2099 13
	movl	-16(%ebp), %eax
	addl	%edx, %eax
L925:
	.loc 6 2100 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1854:
	.def	__ZL19stbi__jpeg_get_bitsP10stbi__jpegi;	.scl	3;	.type	32;	.endef
__ZL19stbi__jpeg_get_bitsP10stbi__jpegi:
LFB1855:
	.loc 6 2104 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 2106 11
	movl	8(%ebp), %eax
	movl	18368(%eax), %edx
	.loc 6 2106 21
	movl	12(%ebp), %eax
	.loc 6 2106 4
	cmpl	%eax, %edx
	jge	L927
	.loc 6 2106 50 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg
L927:
	.loc 6 2107 8
	movl	8(%ebp), %eax
	movl	18364(%eax), %edx
	movl	12(%ebp), %eax
	.loc 6 2107 6
	movl	%eax, %ecx
	roll	%cl, %edx
	movl	%edx, %eax
	movl	%eax, -12(%ebp)
	.loc 6 2108 39
	movl	12(%ebp), %eax
	movl	__ZL11stbi__bmask(,%eax,4), %eax
	.loc 6 2108 25
	notl	%eax
	.loc 6 2108 23
	andl	-12(%ebp), %eax
	movl	%eax, %edx
	.loc 6 2108 19
	movl	8(%ebp), %eax
	movl	%edx, 18364(%eax)
	.loc 6 2109 22
	movl	12(%ebp), %eax
	movl	__ZL11stbi__bmask(,%eax,4), %eax
	.loc 6 2109 6
	andl	%eax, -12(%ebp)
	.loc 6 2110 17
	movl	8(%ebp), %eax
	movl	18368(%eax), %edx
	movl	12(%ebp), %eax
	subl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 18368(%eax)
	.loc 6 2111 11
	movl	-12(%ebp), %eax
	.loc 6 2112 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1855:
	.def	__ZL18stbi__jpeg_get_bitP10stbi__jpeg;	.scl	3;	.type	32;	.endef
__ZL18stbi__jpeg_get_bitP10stbi__jpeg:
LFB1856:
	.loc 6 2115 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 2117 11
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2117 4
	testl	%eax, %eax
	jg	L930
	.loc 6 2117 50 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg
L930:
	.loc 6 2118 6
	movl	8(%ebp), %eax
	movl	18364(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 6 2119 19
	movl	8(%ebp), %eax
	movl	18364(%eax), %eax
	leal	(%eax,%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 18364(%eax)
	.loc 6 2120 9
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2120 4
	leal	-1(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 18368(%eax)
	.loc 6 2121 13
	movl	-12(%ebp), %eax
	.loc 6 2121 15
	andl	$-2147483648, %eax
	.loc 6 2122 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1856:
	.section .rdata,"dr"
	.align 32
__ZL19stbi__jpeg_dezigzag:
	.byte	0
	.byte	1
	.byte	8
	.byte	16
	.byte	9
	.byte	2
	.byte	3
	.byte	10
	.byte	17
	.byte	24
	.byte	32
	.byte	25
	.byte	18
	.byte	11
	.byte	4
	.byte	5
	.byte	12
	.byte	19
	.byte	26
	.byte	33
	.byte	40
	.byte	48
	.byte	41
	.byte	34
	.byte	27
	.byte	20
	.byte	13
	.byte	6
	.byte	7
	.byte	14
	.byte	21
	.byte	28
	.byte	35
	.byte	42
	.byte	49
	.byte	56
	.byte	57
	.byte	50
	.byte	43
	.byte	36
	.byte	29
	.byte	22
	.byte	15
	.byte	23
	.byte	30
	.byte	37
	.byte	44
	.byte	51
	.byte	58
	.byte	59
	.byte	52
	.byte	45
	.byte	38
	.byte	31
	.byte	39
	.byte	46
	.byte	53
	.byte	60
	.byte	61
	.byte	54
	.byte	47
	.byte	55
	.byte	62
	.byte	63
	.byte	63
	.byte	63
	.byte	63
	.byte	63
	.byte	63
	.byte	63
	.byte	63
	.byte	63
	.byte	63
	.byte	63
	.byte	63
	.byte	63
	.byte	63
	.byte	63
	.byte	63
LC44:
	.ascii "bad huffman code\0"
	.text
	.def	__ZL23stbi__jpeg_decode_blockP10stbi__jpegPsP13stbi__huffmanS3_S1_iPt;	.scl	3;	.type	32;	.endef
__ZL23stbi__jpeg_decode_blockP10stbi__jpegPsP13stbi__huffmanS3_S1_iPt:
LFB1857:
	.loc 6 2143 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 6 2147 11
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2147 4
	cmpl	$15, %eax
	jg	L933
	.loc 6 2147 51 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg
L933:
	.loc 6 2148 30
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__jpeg_huff_decodeP10stbi__jpegP13stbi__huffman
	movl	%eax, -16(%ebp)
	.loc 6 2149 4
	cmpl	$0, -16(%ebp)
	jns	L934
	.loc 6 2149 22 discriminator 1
	movl	$LC44, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L935
L934:
	.loc 6 2152 10
	movl	$128, 8(%esp)
	movl	$0, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 6 2154 13
	cmpl	$0, -16(%ebp)
	je	L936
	.loc 6 2154 35 discriminator 1
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__extend_receiveP10stbi__jpegi
	jmp	L937
L936:
	.loc 6 2154 13 discriminator 2
	movl	$0, %eax
L937:
	.loc 6 2154 9 discriminator 4
	movl	%eax, -20(%ebp)
	.loc 6 2155 24 discriminator 4
	movl	8(%ebp), %ecx
	movl	28(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18100, %eax
	movl	(%eax), %edx
	.loc 6 2155 7 discriminator 4
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 6 2156 27 discriminator 4
	movl	8(%ebp), %ecx
	movl	28(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	leal	18100(%eax), %edx
	movl	-24(%ebp), %eax
	movl	%eax, (%edx)
	.loc 6 2157 12 discriminator 4
	movl	32(%ebp), %eax
	movzwl	(%eax), %eax
	movl	-24(%ebp), %edx
	imull	%edx, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 2160 6 discriminator 4
	movl	$1, -12(%ebp)
L945:
LBB150:
	.loc 6 2164 14
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2164 7
	cmpl	$15, %eax
	jg	L938
	.loc 6 2164 54 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg
L938:
	.loc 6 2165 15
	movl	8(%ebp), %eax
	movl	18364(%eax), %eax
	.loc 6 2165 27
	shrl	$23, %eax
	.loc 6 2165 9
	movl	%eax, -28(%ebp)
	.loc 6 2166 16
	movl	-28(%ebp), %eax
	leal	(%eax,%eax), %edx
	movl	24(%ebp), %eax
	addl	%edx, %eax
	movzwl	(%eax), %eax
	.loc 6 2166 9
	cwtl
	movl	%eax, -32(%ebp)
LBB151:
	.loc 6 2167 7
	cmpl	$0, -32(%ebp)
	je	L939
	.loc 6 2168 18
	movl	-32(%ebp), %eax
	sarl	$4, %eax
	.loc 6 2168 24
	andl	$15, %eax
	.loc 6 2168 12
	addl	%eax, -12(%ebp)
	.loc 6 2169 12
	movl	-32(%ebp), %eax
	andl	$15, %eax
	movl	%eax, -36(%ebp)
	.loc 6 2170 25
	movl	8(%ebp), %eax
	movl	18364(%eax), %edx
	movl	-36(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	8(%ebp), %eax
	movl	%edx, 18364(%eax)
	.loc 6 2171 23
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	subl	-36(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 18368(%eax)
	.loc 6 2173 37
	movl	-12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -12(%ebp)
	.loc 6 2173 39
	movzbl	__ZL19stbi__jpeg_dezigzag(%eax), %eax
	.loc 6 2173 14
	movzbl	%al, %eax
	movl	%eax, -40(%ebp)
	.loc 6 2174 34
	movl	-32(%ebp), %eax
	sarl	$8, %eax
	.loc 6 2174 20
	movl	%eax, %ecx
	.loc 6 2174 53
	movl	-40(%ebp), %eax
	leal	(%eax,%eax), %edx
	movl	32(%ebp), %eax
	addl	%edx, %eax
	.loc 6 2174 20
	movzwl	(%eax), %eax
	imull	%eax, %ecx
	movl	%ecx, %edx
	.loc 6 2174 18
	movl	-40(%ebp), %eax
	leal	(%eax,%eax), %ecx
	movl	12(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 2174 20
	movw	%dx, (%eax)
	jmp	L940
L939:
LBB152:
	.loc 6 2176 41
	movl	20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__jpeg_huff_decodeP10stbi__jpegP13stbi__huffman
	movl	%eax, -44(%ebp)
	.loc 6 2177 10
	cmpl	$0, -44(%ebp)
	jns	L941
	.loc 6 2177 29 discriminator 1
	movl	$LC44, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L935
L941:
	.loc 6 2178 12
	movl	-44(%ebp), %eax
	andl	$15, %eax
	movl	%eax, -36(%ebp)
	.loc 6 2179 12
	movl	-44(%ebp), %eax
	sarl	$4, %eax
	movl	%eax, -32(%ebp)
	.loc 6 2180 10
	cmpl	$0, -36(%ebp)
	jne	L942
	.loc 6 2181 13
	cmpl	$240, -44(%ebp)
	jne	L946
	.loc 6 2182 15
	addl	$16, -12(%ebp)
	jmp	L940
L942:
	.loc 6 2184 15
	movl	-32(%ebp), %eax
	addl	%eax, -12(%ebp)
	.loc 6 2186 40
	movl	-12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -12(%ebp)
	.loc 6 2186 42
	movzbl	__ZL19stbi__jpeg_dezigzag(%eax), %eax
	.loc 6 2186 17
	movzbl	%al, %eax
	movl	%eax, -40(%ebp)
	.loc 6 2187 54
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__extend_receiveP10stbi__jpegi
	.loc 6 2187 23
	movl	%eax, %ecx
	.loc 6 2187 73
	movl	-40(%ebp), %eax
	leal	(%eax,%eax), %edx
	movl	32(%ebp), %eax
	addl	%edx, %eax
	.loc 6 2187 23
	movzwl	(%eax), %eax
	imull	%eax, %ecx
	movl	%ecx, %edx
	.loc 6 2187 21
	movl	-40(%ebp), %eax
	leal	(%eax,%eax), %ecx
	movl	12(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 2187 23
	movw	%dx, (%eax)
L940:
LBE152:
LBE151:
LBE150:
	.loc 6 2190 15
	cmpl	$63, -12(%ebp)
	jg	L944
	.loc 6 2161 4
	jmp	L945
L946:
LBB155:
LBB154:
LBB153:
	.loc 6 2181 29
	nop
L944:
LBE153:
LBE154:
LBE155:
	.loc 6 2191 11
	movl	$1, %eax
L935:
	.loc 6 2192 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1857:
	.section .rdata,"dr"
LC45:
	.ascii "can't merge dc and ac\0"
	.text
	.def	__ZL31stbi__jpeg_decode_block_prog_dcP10stbi__jpegPsP13stbi__huffmani;	.scl	3;	.type	32;	.endef
__ZL31stbi__jpeg_decode_block_prog_dcP10stbi__jpegPsP13stbi__huffmani:
LFB1858:
	.loc 6 2195 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 6 2198 11
	movl	8(%ebp), %eax
	movl	18388(%eax), %eax
	.loc 6 2198 4
	testl	%eax, %eax
	je	L948
	.loc 6 2198 33 discriminator 1
	movl	$LC45, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L949
L948:
	.loc 6 2200 11
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2200 4
	cmpl	$15, %eax
	jg	L950
	.loc 6 2200 51 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg
L950:
	.loc 6 2202 11
	movl	8(%ebp), %eax
	movl	18392(%eax), %eax
	.loc 6 2202 4
	testl	%eax, %eax
	jne	L951
	.loc 6 2204 13
	movl	$128, 8(%esp)
	movl	$0, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 6 2205 33
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__jpeg_huff_decodeP10stbi__jpegP13stbi__huffman
	movl	%eax, -12(%ebp)
	.loc 6 2206 7
	cmpl	$-1, -12(%ebp)
	jne	L952
	.loc 6 2206 27 discriminator 1
	movl	$LC45, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L949
L952:
	.loc 6 2207 16
	cmpl	$0, -12(%ebp)
	je	L953
	.loc 6 2207 38 discriminator 1
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__extend_receiveP10stbi__jpegi
	jmp	L954
L953:
	.loc 6 2207 16 discriminator 2
	movl	$0, %eax
L954:
	.loc 6 2207 12 discriminator 4
	movl	%eax, -16(%ebp)
	.loc 6 2209 27 discriminator 4
	movl	8(%ebp), %ecx
	movl	20(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18100, %eax
	movl	(%eax), %edx
	.loc 6 2209 10 discriminator 4
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 6 2210 30 discriminator 4
	movl	8(%ebp), %ecx
	movl	20(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	leal	18100(%eax), %edx
	movl	-20(%ebp), %eax
	movl	%eax, (%edx)
	.loc 6 2211 35 discriminator 4
	movl	8(%ebp), %eax
	movl	18396(%eax), %eax
	.loc 6 2211 29 discriminator 4
	movl	-20(%ebp), %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 6 2211 15 discriminator 4
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movw	%dx, (%eax)
	jmp	L955
L951:
	.loc 6 2214 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__jpeg_get_bitP10stbi__jpeg
	.loc 6 2214 32
	testl	%eax, %eax
	setne	%al
	.loc 6 2214 7
	testb	%al, %al
	je	L955
	.loc 6 2215 18
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	movl	%eax, %edx
	.loc 6 2215 38
	movl	8(%ebp), %eax
	movl	18396(%eax), %eax
	.loc 6 2215 32
	movl	$1, %ebx
	movl	%eax, %ecx
	sall	%cl, %ebx
	movl	%ebx, %eax
	.loc 6 2215 18
	addl	%edx, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movw	%dx, (%eax)
L955:
	.loc 6 2217 11
	movl	$1, %eax
L949:
	.loc 6 2218 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1858:
	.def	__ZL31stbi__jpeg_decode_block_prog_acP10stbi__jpegPsP13stbi__huffmanS1_;	.scl	3;	.type	32;	.endef
__ZL31stbi__jpeg_decode_block_prog_acP10stbi__jpegPsP13stbi__huffmanS1_:
LFB1859:
	.loc 6 2223 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$88, %esp
	.loc 6 2225 11
	movl	8(%ebp), %eax
	movl	18384(%eax), %eax
	.loc 6 2225 4
	testl	%eax, %eax
	jne	L957
	.loc 6 2225 35 discriminator 1
	movl	$LC45, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L958
L957:
LBB156:
	.loc 6 2227 11
	movl	8(%ebp), %eax
	movl	18392(%eax), %eax
	.loc 6 2227 4
	testl	%eax, %eax
	jne	L959
LBB157:
	.loc 6 2228 11
	movl	8(%ebp), %eax
	movl	18396(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 6 2230 14
	movl	8(%ebp), %eax
	movl	18400(%eax), %eax
	.loc 6 2230 7
	testl	%eax, %eax
	je	L960
	.loc 6 2231 15
	movl	8(%ebp), %eax
	movl	18400(%eax), %eax
	.loc 6 2231 10
	leal	-1(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 18400(%eax)
	.loc 6 2232 17
	movl	$1, %eax
	jmp	L958
L960:
	.loc 6 2235 9
	movl	8(%ebp), %eax
	movl	18384(%eax), %eax
	movl	%eax, -12(%ebp)
L969:
LBB158:
	.loc 6 2239 17
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2239 10
	cmpl	$15, %eax
	jg	L961
	.loc 6 2239 57 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg
L961:
	.loc 6 2240 18
	movl	8(%ebp), %eax
	movl	18364(%eax), %eax
	.loc 6 2240 30
	shrl	$23, %eax
	.loc 6 2240 12
	movl	%eax, -28(%ebp)
	.loc 6 2241 19
	movl	-28(%ebp), %eax
	leal	(%eax,%eax), %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	movzwl	(%eax), %eax
	.loc 6 2241 12
	cwtl
	movl	%eax, -32(%ebp)
LBB159:
	.loc 6 2242 10
	cmpl	$0, -32(%ebp)
	je	L962
	.loc 6 2243 21
	movl	-32(%ebp), %eax
	sarl	$4, %eax
	.loc 6 2243 27
	andl	$15, %eax
	.loc 6 2243 15
	addl	%eax, -12(%ebp)
	.loc 6 2244 15
	movl	-32(%ebp), %eax
	andl	$15, %eax
	movl	%eax, -36(%ebp)
	.loc 6 2245 28
	movl	8(%ebp), %eax
	movl	18364(%eax), %edx
	movl	-36(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	8(%ebp), %eax
	movl	%edx, 18364(%eax)
	.loc 6 2246 26
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	subl	-36(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 18368(%eax)
	.loc 6 2247 40
	movl	-12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -12(%ebp)
	.loc 6 2247 42
	movzbl	__ZL19stbi__jpeg_dezigzag(%eax), %eax
	.loc 6 2247 17
	movzbl	%al, %eax
	movl	%eax, -40(%ebp)
	.loc 6 2248 37
	movl	-32(%ebp), %eax
	sarl	$8, %eax
	movl	%eax, %edx
	.loc 6 2248 43
	movl	-24(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	.loc 6 2248 21
	movl	-40(%ebp), %eax
	leal	(%eax,%eax), %ecx
	movl	12(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 2248 23
	movw	%dx, (%eax)
	jmp	L963
L962:
LBB160:
	.loc 6 2250 44
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__jpeg_huff_decodeP10stbi__jpegP13stbi__huffman
	movl	%eax, -44(%ebp)
	.loc 6 2251 13
	cmpl	$0, -44(%ebp)
	jns	L964
	.loc 6 2251 32 discriminator 1
	movl	$LC44, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L958
L964:
	.loc 6 2252 15
	movl	-44(%ebp), %eax
	andl	$15, %eax
	movl	%eax, -36(%ebp)
	.loc 6 2253 15
	movl	-44(%ebp), %eax
	sarl	$4, %eax
	movl	%eax, -32(%ebp)
	.loc 6 2254 13
	cmpl	$0, -36(%ebp)
	jne	L965
	.loc 6 2255 16
	cmpl	$14, -32(%ebp)
	jg	L966
	.loc 6 2256 35
	movl	-32(%ebp), %eax
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	.loc 6 2256 30
	movl	8(%ebp), %eax
	movl	%edx, 18400(%eax)
	.loc 6 2257 19
	cmpl	$0, -32(%ebp)
	je	L967
	.loc 6 2258 55
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__jpeg_get_bitsP10stbi__jpegi
	movl	%eax, %edx
	.loc 6 2258 33
	movl	8(%ebp), %eax
	movl	18400(%eax), %eax
	addl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 18400(%eax)
L967:
	.loc 6 2259 24
	movl	8(%ebp), %eax
	movl	18400(%eax), %eax
	.loc 6 2259 19
	leal	-1(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 18400(%eax)
	.loc 6 2260 19
	jmp	L970
L966:
	.loc 6 2262 18
	addl	$16, -12(%ebp)
	jmp	L963
L965:
	.loc 6 2264 18
	movl	-32(%ebp), %eax
	addl	%eax, -12(%ebp)
	.loc 6 2265 43
	movl	-12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -12(%ebp)
	.loc 6 2265 45
	movzbl	__ZL19stbi__jpeg_dezigzag(%eax), %eax
	.loc 6 2265 20
	movzbl	%al, %eax
	movl	%eax, -40(%ebp)
	.loc 6 2266 57
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__extend_receiveP10stbi__jpegi
	movl	%eax, %edx
	.loc 6 2266 63
	movl	-24(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	.loc 6 2266 24
	movl	-40(%ebp), %eax
	leal	(%eax,%eax), %ecx
	movl	12(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 2266 26
	movw	%dx, (%eax)
L963:
LBE160:
LBE159:
LBE158:
	.loc 6 2269 24
	movl	8(%ebp), %eax
	movl	18388(%eax), %eax
	.loc 6 2269 18
	cmpl	%eax, -12(%ebp)
	jg	L970
	.loc 6 2236 7
	jmp	L969
L959:
LBE157:
LBB161:
	.loc 6 2273 36
	movl	8(%ebp), %eax
	movl	18396(%eax), %eax
	.loc 6 2273 30
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 6 2273 13
	movw	%ax, -46(%ebp)
LBB162:
	.loc 6 2275 14
	movl	8(%ebp), %eax
	movl	18400(%eax), %eax
	.loc 6 2275 7
	testl	%eax, %eax
	je	L971
LBB163:
	.loc 6 2276 15
	movl	8(%ebp), %eax
	movl	18400(%eax), %eax
	.loc 6 2276 10
	leal	-1(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 18400(%eax)
LBB164:
	.loc 6 2277 17
	movl	8(%ebp), %eax
	movl	18384(%eax), %eax
	movl	%eax, -12(%ebp)
L976:
	.loc 6 2277 42 discriminator 1
	movl	8(%ebp), %eax
	movl	18388(%eax), %eax
	.loc 6 2277 36 discriminator 1
	cmpl	%eax, -12(%ebp)
	jg	L970
LBB165:
	.loc 6 2278 51
	movl	-12(%ebp), %eax
	addl	$__ZL19stbi__jpeg_dezigzag, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 2278 52
	leal	(%eax,%eax), %edx
	.loc 6 2278 20
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -52(%ebp)
	.loc 6 2279 17
	movl	-52(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 2279 13
	testw	%ax, %ax
	je	L973
	.loc 6 2280 38
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__jpeg_get_bitP10stbi__jpeg
	.loc 6 2280 41
	testl	%eax, %eax
	setne	%al
	.loc 6 2280 16
	testb	%al, %al
	je	L973
	.loc 6 2281 24
	movl	-52(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 2281 27
	andw	-46(%ebp), %ax
	.loc 6 2281 19
	testw	%ax, %ax
	jne	L973
	.loc 6 2282 26
	movl	-52(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 2282 22
	testw	%ax, %ax
	jle	L974
	.loc 6 2283 28
	movl	-52(%ebp), %eax
	movzwl	(%eax), %eax
	movl	%eax, %edx
	movzwl	-46(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	movl	-52(%ebp), %eax
	movw	%dx, (%eax)
	jmp	L973
L974:
	.loc 6 2285 28
	movl	-52(%ebp), %eax
	movzwl	(%eax), %eax
	movl	%eax, %edx
	movzwl	-46(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, %edx
	movl	-52(%ebp), %eax
	movw	%dx, (%eax)
L973:
LBE165:
	.loc 6 2277 10 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L976
L971:
LBE164:
LBE163:
LBB166:
	.loc 6 2289 12
	movl	8(%ebp), %eax
	movl	18384(%eax), %eax
	movl	%eax, -12(%ebp)
L990:
LBB167:
	.loc 6 2292 44
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__jpeg_huff_decodeP10stbi__jpegP13stbi__huffman
	movl	%eax, -56(%ebp)
	.loc 6 2293 13
	cmpl	$0, -56(%ebp)
	jns	L977
	.loc 6 2293 32 discriminator 1
	movl	$LC44, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L958
L977:
	.loc 6 2294 15
	movl	-56(%ebp), %eax
	andl	$15, %eax
	movl	%eax, -20(%ebp)
	.loc 6 2295 15
	movl	-56(%ebp), %eax
	sarl	$4, %eax
	movl	%eax, -16(%ebp)
	.loc 6 2296 13
	cmpl	$0, -20(%ebp)
	jne	L978
	.loc 6 2297 16
	cmpl	$14, -16(%ebp)
	jg	L989
	.loc 6 2298 35
	movl	-16(%ebp), %eax
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 6 2298 41
	leal	-1(%eax), %edx
	.loc 6 2298 30
	movl	8(%ebp), %eax
	movl	%edx, 18400(%eax)
	.loc 6 2299 19
	cmpl	$0, -16(%ebp)
	je	L980
	.loc 6 2300 55
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__jpeg_get_bitsP10stbi__jpegi
	movl	%eax, %edx
	.loc 6 2300 33
	movl	8(%ebp), %eax
	movl	18400(%eax), %eax
	addl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 18400(%eax)
L980:
	.loc 6 2301 21
	movl	$64, -16(%ebp)
	jmp	L989
L978:
	.loc 6 2308 16
	cmpl	$1, -20(%ebp)
	je	L981
	.loc 6 2308 35 discriminator 1
	movl	$LC44, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L958
L981:
	.loc 6 2310 38
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__jpeg_get_bitP10stbi__jpeg
	.loc 6 2310 41
	testl	%eax, %eax
	setne	%al
	.loc 6 2310 16
	testb	%al, %al
	je	L982
	.loc 6 2311 21
	movswl	-46(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	L989
L982:
	.loc 6 2313 23
	movswl	-46(%ebp), %eax
	.loc 6 2313 21
	negl	%eax
	movl	%eax, -20(%ebp)
L989:
	.loc 6 2317 28
	movl	8(%ebp), %eax
	movl	18388(%eax), %eax
	.loc 6 2317 22
	cmpl	%eax, -12(%ebp)
	jg	L983
LBB168:
	.loc 6 2318 54
	movl	-12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -12(%ebp)
	.loc 6 2318 56
	movzbl	__ZL19stbi__jpeg_dezigzag(%eax), %eax
	movzbl	%al, %eax
	.loc 6 2318 57
	leal	(%eax,%eax), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -60(%ebp)
	.loc 6 2319 20
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 2319 16
	testw	%ax, %ax
	je	L984
	.loc 6 2320 41
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__jpeg_get_bitP10stbi__jpeg
	.loc 6 2320 44
	testl	%eax, %eax
	setne	%al
	.loc 6 2320 19
	testb	%al, %al
	je	L989
	.loc 6 2321 27
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 2321 30
	andw	-46(%ebp), %ax
	.loc 6 2321 22
	testw	%ax, %ax
	jne	L989
	.loc 6 2322 29
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 2322 25
	testw	%ax, %ax
	jle	L986
	.loc 6 2323 31
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	movl	%eax, %edx
	movzwl	-46(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movw	%dx, (%eax)
	jmp	L989
L986:
	.loc 6 2325 31
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	movl	%eax, %edx
	movzwl	-46(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movw	%dx, (%eax)
	jmp	L989
L984:
	.loc 6 2328 19
	cmpl	$0, -16(%ebp)
	jne	L988
	.loc 6 2329 25
	movl	-20(%ebp), %eax
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 2330 22
	jmp	L983
L988:
	.loc 6 2332 19
	subl	$1, -16(%ebp)
LBE168:
	.loc 6 2317 13
	jmp	L989
L983:
LBE167:
	.loc 6 2335 27
	movl	8(%ebp), %eax
	movl	18388(%eax), %eax
	.loc 6 2335 21
	cmpl	%eax, -12(%ebp)
	jg	L970
	.loc 6 2290 10
	jmp	L990
L970:
LBE166:
LBE162:
LBE161:
LBE156:
	.loc 6 2338 11
	movl	$1, %eax
L958:
	.loc 6 2339 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1859:
	.def	__ZL11stbi__clampi;	.scl	3;	.type	32;	.endef
__ZL11stbi__clampi:
LFB1860:
	.loc 6 2343 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 2345 8
	movl	8(%ebp), %eax
	.loc 6 2345 4
	cmpl	$255, %eax
	jbe	L992
	.loc 6 2346 7
	cmpl	$0, 8(%ebp)
	jns	L993
	.loc 6 2346 25 discriminator 1
	movl	$0, %eax
	jmp	L994
L993:
	.loc 6 2347 7
	cmpl	$255, 8(%ebp)
	jle	L992
	.loc 6 2347 27 discriminator 1
	movl	$-1, %eax
	jmp	L994
L992:
	.loc 6 2349 21
	movl	8(%ebp), %eax
L994:
	.loc 6 2350 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1860:
	.def	__ZL16stbi__idct_blockPhiPs;	.scl	3;	.type	32;	.endef
__ZL16stbi__idct_blockPhiPs:
LFB1861:
	.loc 6 2394 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$404, %esp
	.cfi_offset 3, -12
	.loc 6 2395 19
	leal	-388(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 6 2397 11
	movl	16(%ebp), %eax
	movl	%eax, -24(%ebp)
LBB169:
	.loc 6 2400 10
	movl	$0, -12(%ebp)
L999:
	.loc 6 2400 16 discriminator 1
	cmpl	$7, -12(%ebp)
	jg	L996
LBB170:
LBB171:
	.loc 6 2402 15
	movl	-24(%ebp), %eax
	addl	$16, %eax
	movzwl	(%eax), %eax
	.loc 6 2402 7
	testw	%ax, %ax
	jne	L997
	.loc 6 2402 27 discriminator 1
	movl	-24(%ebp), %eax
	addl	$32, %eax
	movzwl	(%eax), %eax
	.loc 6 2402 20 discriminator 1
	testw	%ax, %ax
	jne	L997
	.loc 6 2402 39 discriminator 2
	movl	-24(%ebp), %eax
	addl	$48, %eax
	movzwl	(%eax), %eax
	.loc 6 2402 32 discriminator 2
	testw	%ax, %ax
	jne	L997
	.loc 6 2402 51 discriminator 3
	movl	-24(%ebp), %eax
	addl	$64, %eax
	movzwl	(%eax), %eax
	.loc 6 2402 44 discriminator 3
	testw	%ax, %ax
	jne	L997
	.loc 6 2403 19
	movl	-24(%ebp), %eax
	addl	$80, %eax
	movzwl	(%eax), %eax
	.loc 6 2403 12
	testw	%ax, %ax
	jne	L997
	.loc 6 2403 31 discriminator 1
	movl	-24(%ebp), %eax
	addl	$96, %eax
	movzwl	(%eax), %eax
	.loc 6 2403 24 discriminator 1
	testw	%ax, %ax
	jne	L997
	.loc 6 2403 43 discriminator 2
	movl	-24(%ebp), %eax
	addl	$112, %eax
	movzwl	(%eax), %eax
	.loc 6 2403 36 discriminator 2
	testw	%ax, %ax
	jne	L997
LBB172:
	.loc 6 2408 26
	movl	-24(%ebp), %eax
	movzwl	(%eax), %eax
	cwtl
	.loc 6 2408 14
	sall	$2, %eax
	movl	%eax, -28(%ebp)
	.loc 6 2409 68
	movl	-16(%ebp), %eax
	addl	$224, %eax
	.loc 6 2409 70
	movl	-28(%ebp), %edx
	movl	%edx, (%eax)
	.loc 6 2409 60
	movl	-16(%ebp), %edx
	addl	$192, %edx
	.loc 6 2409 68
	movl	(%eax), %eax
	.loc 6 2409 62
	movl	%eax, (%edx)
	.loc 6 2409 52
	movl	-16(%ebp), %eax
	addl	$160, %eax
	.loc 6 2409 60
	movl	(%edx), %edx
	.loc 6 2409 54
	movl	%edx, (%eax)
	.loc 6 2409 44
	movl	-16(%ebp), %edx
	subl	$-128, %edx
	.loc 6 2409 52
	movl	(%eax), %eax
	.loc 6 2409 46
	movl	%eax, (%edx)
	.loc 6 2409 36
	movl	-16(%ebp), %eax
	addl	$96, %eax
	.loc 6 2409 44
	movl	(%edx), %edx
	.loc 6 2409 38
	movl	%edx, (%eax)
	.loc 6 2409 28
	movl	-16(%ebp), %edx
	addl	$64, %edx
	.loc 6 2409 36
	movl	(%eax), %eax
	.loc 6 2409 30
	movl	%eax, (%edx)
	.loc 6 2409 20
	movl	-16(%ebp), %eax
	addl	$32, %eax
	.loc 6 2409 28
	movl	(%edx), %edx
	.loc 6 2409 22
	movl	%edx, (%eax)
	.loc 6 2409 20
	movl	(%eax), %edx
	.loc 6 2409 15
	movl	-16(%ebp), %eax
	movl	%edx, (%eax)
LBE172:
	.loc 6 2409 78
	jmp	L998
L997:
LBB173:
	.loc 6 2411 10
	movl	-24(%ebp), %eax
	addl	$32, %eax
	movzwl	(%eax), %eax
	cwtl
	movl	%eax, -32(%ebp)
	movl	-24(%ebp), %eax
	addl	$96, %eax
	movzwl	(%eax), %eax
	cwtl
	movl	%eax, -36(%ebp)
	movl	-32(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	imull	$2217, %eax, %eax
	movl	%eax, -40(%ebp)
	movl	-36(%ebp), %eax
	imull	$-7567, %eax, %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -44(%ebp)
	movl	-32(%ebp), %eax
	imull	$3135, %eax, %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -48(%ebp)
	movl	-24(%ebp), %eax
	movzwl	(%eax), %eax
	cwtl
	movl	%eax, -32(%ebp)
	movl	-24(%ebp), %eax
	addl	$64, %eax
	movzwl	(%eax), %eax
	cwtl
	movl	%eax, -36(%ebp)
	movl	-32(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	sall	$12, %eax
	movl	%eax, -52(%ebp)
	movl	-32(%ebp), %eax
	subl	-36(%ebp), %eax
	sall	$12, %eax
	movl	%eax, -56(%ebp)
	movl	-52(%ebp), %edx
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -60(%ebp)
	movl	-52(%ebp), %eax
	subl	-48(%ebp), %eax
	movl	%eax, -64(%ebp)
	movl	-56(%ebp), %edx
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -68(%ebp)
	movl	-56(%ebp), %eax
	subl	-44(%ebp), %eax
	movl	%eax, -72(%ebp)
	movl	-24(%ebp), %eax
	addl	$112, %eax
	movzwl	(%eax), %eax
	cwtl
	movl	%eax, -52(%ebp)
	movl	-24(%ebp), %eax
	addl	$80, %eax
	movzwl	(%eax), %eax
	cwtl
	movl	%eax, -56(%ebp)
	movl	-24(%ebp), %eax
	addl	$48, %eax
	movzwl	(%eax), %eax
	cwtl
	movl	%eax, -44(%ebp)
	movl	-24(%ebp), %eax
	addl	$16, %eax
	movzwl	(%eax), %eax
	cwtl
	movl	%eax, -48(%ebp)
	movl	-52(%ebp), %edx
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -36(%ebp)
	movl	-56(%ebp), %edx
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -76(%ebp)
	movl	-52(%ebp), %edx
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -40(%ebp)
	movl	-56(%ebp), %edx
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -32(%ebp)
	movl	-36(%ebp), %edx
	movl	-76(%ebp), %eax
	addl	%edx, %eax
	imull	$4816, %eax, %eax
	movl	%eax, -80(%ebp)
	movl	-52(%ebp), %eax
	imull	$1223, %eax, %eax
	movl	%eax, -52(%ebp)
	movl	-56(%ebp), %eax
	imull	$8410, %eax, %eax
	movl	%eax, -56(%ebp)
	movl	-44(%ebp), %eax
	imull	$12586, %eax, %eax
	movl	%eax, -44(%ebp)
	movl	-48(%ebp), %eax
	imull	$6149, %eax, %eax
	movl	%eax, -48(%ebp)
	movl	-40(%ebp), %eax
	imull	$-3685, %eax, %edx
	movl	-80(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -40(%ebp)
	movl	-32(%ebp), %eax
	imull	$-10497, %eax, %edx
	movl	-80(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -32(%ebp)
	movl	-36(%ebp), %eax
	imull	$-8034, %eax, %eax
	movl	%eax, -36(%ebp)
	movl	-76(%ebp), %eax
	imull	$-1597, %eax, %eax
	movl	%eax, -76(%ebp)
	movl	-40(%ebp), %edx
	movl	-76(%ebp), %eax
	addl	%edx, %eax
	addl	%eax, -48(%ebp)
	movl	-32(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	addl	%eax, -44(%ebp)
	movl	-32(%ebp), %edx
	movl	-76(%ebp), %eax
	addl	%edx, %eax
	addl	%eax, -56(%ebp)
	movl	-40(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	addl	%eax, -52(%ebp)
	.loc 6 2414 13
	addl	$512, -60(%ebp)
	.loc 6 2414 24
	addl	$512, -68(%ebp)
	.loc 6 2414 35
	addl	$512, -72(%ebp)
	.loc 6 2414 46
	addl	$512, -64(%ebp)
	.loc 6 2415 21
	movl	-60(%ebp), %edx
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	.loc 6 2415 26
	sarl	$10, %eax
	movl	%eax, %edx
	.loc 6 2415 16
	movl	-16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 2416 21
	movl	-60(%ebp), %eax
	subl	-48(%ebp), %eax
	movl	%eax, %edx
	.loc 6 2416 14
	movl	-16(%ebp), %eax
	addl	$224, %eax
	.loc 6 2416 26
	sarl	$10, %edx
	.loc 6 2416 16
	movl	%edx, (%eax)
	.loc 6 2417 21
	movl	-68(%ebp), %edx
	movl	-44(%ebp), %eax
	addl	%eax, %edx
	.loc 6 2417 14
	movl	-16(%ebp), %eax
	addl	$32, %eax
	.loc 6 2417 26
	sarl	$10, %edx
	.loc 6 2417 16
	movl	%edx, (%eax)
	.loc 6 2418 21
	movl	-68(%ebp), %eax
	subl	-44(%ebp), %eax
	movl	%eax, %edx
	.loc 6 2418 14
	movl	-16(%ebp), %eax
	addl	$192, %eax
	.loc 6 2418 26
	sarl	$10, %edx
	.loc 6 2418 16
	movl	%edx, (%eax)
	.loc 6 2419 21
	movl	-72(%ebp), %edx
	movl	-56(%ebp), %eax
	addl	%eax, %edx
	.loc 6 2419 14
	movl	-16(%ebp), %eax
	addl	$64, %eax
	.loc 6 2419 26
	sarl	$10, %edx
	.loc 6 2419 16
	movl	%edx, (%eax)
	.loc 6 2420 21
	movl	-72(%ebp), %eax
	subl	-56(%ebp), %eax
	movl	%eax, %edx
	.loc 6 2420 14
	movl	-16(%ebp), %eax
	addl	$160, %eax
	.loc 6 2420 26
	sarl	$10, %edx
	.loc 6 2420 16
	movl	%edx, (%eax)
	.loc 6 2421 21
	movl	-64(%ebp), %edx
	movl	-52(%ebp), %eax
	addl	%eax, %edx
	.loc 6 2421 14
	movl	-16(%ebp), %eax
	addl	$96, %eax
	.loc 6 2421 26
	sarl	$10, %edx
	.loc 6 2421 16
	movl	%edx, (%eax)
	.loc 6 2422 21
	movl	-64(%ebp), %eax
	subl	-52(%ebp), %eax
	movl	%eax, %edx
	.loc 6 2422 14
	movl	-16(%ebp), %eax
	subl	$-128, %eax
	.loc 6 2422 26
	sarl	$10, %edx
	.loc 6 2422 16
	movl	%edx, (%eax)
L998:
LBE173:
LBE171:
LBE170:
	.loc 6 2400 4 discriminator 2
	addl	$1, -12(%ebp)
	addl	$2, -24(%ebp)
	addl	$4, -16(%ebp)
	jmp	L999
L996:
LBE169:
LBB174:
	.loc 6 2426 10
	movl	$0, -12(%ebp)
	.loc 6 2426 15
	leal	-388(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 6 2426 22
	movl	8(%ebp), %eax
	movl	%eax, -20(%ebp)
L1001:
	.loc 6 2426 30 discriminator 3
	cmpl	$7, -12(%ebp)
	jg	L1002
LBB175:
	.loc 6 2428 7 discriminator 2
	movl	-16(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -84(%ebp)
	movl	-16(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -88(%ebp)
	movl	-84(%ebp), %edx
	movl	-88(%ebp), %eax
	addl	%edx, %eax
	imull	$2217, %eax, %eax
	movl	%eax, -92(%ebp)
	movl	-88(%ebp), %eax
	imull	$-7567, %eax, %edx
	movl	-92(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -96(%ebp)
	movl	-84(%ebp), %eax
	imull	$3135, %eax, %edx
	movl	-92(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -100(%ebp)
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -84(%ebp)
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -88(%ebp)
	movl	-84(%ebp), %edx
	movl	-88(%ebp), %eax
	addl	%edx, %eax
	sall	$12, %eax
	movl	%eax, -104(%ebp)
	movl	-84(%ebp), %eax
	subl	-88(%ebp), %eax
	sall	$12, %eax
	movl	%eax, -108(%ebp)
	movl	-104(%ebp), %edx
	movl	-100(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -112(%ebp)
	movl	-104(%ebp), %eax
	subl	-100(%ebp), %eax
	movl	%eax, -116(%ebp)
	movl	-108(%ebp), %edx
	movl	-96(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -120(%ebp)
	movl	-108(%ebp), %eax
	subl	-96(%ebp), %eax
	movl	%eax, -124(%ebp)
	movl	-16(%ebp), %eax
	movl	28(%eax), %eax
	movl	%eax, -104(%ebp)
	movl	-16(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -108(%ebp)
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -96(%ebp)
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -100(%ebp)
	movl	-104(%ebp), %edx
	movl	-96(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -88(%ebp)
	movl	-108(%ebp), %edx
	movl	-100(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -128(%ebp)
	movl	-104(%ebp), %edx
	movl	-100(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -92(%ebp)
	movl	-108(%ebp), %edx
	movl	-96(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -84(%ebp)
	movl	-88(%ebp), %edx
	movl	-128(%ebp), %eax
	addl	%edx, %eax
	imull	$4816, %eax, %eax
	movl	%eax, -132(%ebp)
	movl	-104(%ebp), %eax
	imull	$1223, %eax, %eax
	movl	%eax, -104(%ebp)
	movl	-108(%ebp), %eax
	imull	$8410, %eax, %eax
	movl	%eax, -108(%ebp)
	movl	-96(%ebp), %eax
	imull	$12586, %eax, %eax
	movl	%eax, -96(%ebp)
	movl	-100(%ebp), %eax
	imull	$6149, %eax, %eax
	movl	%eax, -100(%ebp)
	movl	-92(%ebp), %eax
	imull	$-3685, %eax, %edx
	movl	-132(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -92(%ebp)
	movl	-84(%ebp), %eax
	imull	$-10497, %eax, %edx
	movl	-132(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -84(%ebp)
	movl	-88(%ebp), %eax
	imull	$-8034, %eax, %eax
	movl	%eax, -88(%ebp)
	movl	-128(%ebp), %eax
	imull	$-1597, %eax, %eax
	movl	%eax, -128(%ebp)
	movl	-92(%ebp), %edx
	movl	-128(%ebp), %eax
	addl	%edx, %eax
	addl	%eax, -100(%ebp)
	movl	-84(%ebp), %edx
	movl	-88(%ebp), %eax
	addl	%edx, %eax
	addl	%eax, -96(%ebp)
	movl	-84(%ebp), %edx
	movl	-128(%ebp), %eax
	addl	%edx, %eax
	addl	%eax, -108(%ebp)
	movl	-92(%ebp), %edx
	movl	-88(%ebp), %eax
	addl	%edx, %eax
	addl	%eax, -104(%ebp)
	.loc 6 2435 10 discriminator 2
	addl	$16842752, -112(%ebp)
	.loc 6 2436 10 discriminator 2
	addl	$16842752, -120(%ebp)
	.loc 6 2437 10 discriminator 2
	addl	$16842752, -124(%ebp)
	.loc 6 2438 10 discriminator 2
	addl	$16842752, -116(%ebp)
	.loc 6 2441 29 discriminator 2
	movl	-112(%ebp), %edx
	movl	-100(%ebp), %eax
	addl	%edx, %eax
	.loc 6 2441 25 discriminator 2
	sarl	$17, %eax
	movl	%eax, (%esp)
	call	__ZL11stbi__clampi
	movl	%eax, %edx
	.loc 6 2441 12 discriminator 2
	movl	-20(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 2442 29 discriminator 2
	movl	-112(%ebp), %eax
	subl	-100(%ebp), %eax
	.loc 6 2442 25 discriminator 2
	sarl	$17, %eax
	.loc 6 2442 10 discriminator 2
	movl	-20(%ebp), %edx
	leal	7(%edx), %ebx
	.loc 6 2442 25 discriminator 2
	movl	%eax, (%esp)
	call	__ZL11stbi__clampi
	.loc 6 2442 12 discriminator 2
	movb	%al, (%ebx)
	.loc 6 2443 29 discriminator 2
	movl	-120(%ebp), %edx
	movl	-96(%ebp), %eax
	addl	%edx, %eax
	.loc 6 2443 25 discriminator 2
	sarl	$17, %eax
	.loc 6 2443 10 discriminator 2
	movl	-20(%ebp), %edx
	leal	1(%edx), %ebx
	.loc 6 2443 25 discriminator 2
	movl	%eax, (%esp)
	call	__ZL11stbi__clampi
	.loc 6 2443 12 discriminator 2
	movb	%al, (%ebx)
	.loc 6 2444 29 discriminator 2
	movl	-120(%ebp), %eax
	subl	-96(%ebp), %eax
	.loc 6 2444 25 discriminator 2
	sarl	$17, %eax
	.loc 6 2444 10 discriminator 2
	movl	-20(%ebp), %edx
	leal	6(%edx), %ebx
	.loc 6 2444 25 discriminator 2
	movl	%eax, (%esp)
	call	__ZL11stbi__clampi
	.loc 6 2444 12 discriminator 2
	movb	%al, (%ebx)
	.loc 6 2445 29 discriminator 2
	movl	-124(%ebp), %edx
	movl	-108(%ebp), %eax
	addl	%edx, %eax
	.loc 6 2445 25 discriminator 2
	sarl	$17, %eax
	.loc 6 2445 10 discriminator 2
	movl	-20(%ebp), %edx
	leal	2(%edx), %ebx
	.loc 6 2445 25 discriminator 2
	movl	%eax, (%esp)
	call	__ZL11stbi__clampi
	.loc 6 2445 12 discriminator 2
	movb	%al, (%ebx)
	.loc 6 2446 29 discriminator 2
	movl	-124(%ebp), %eax
	subl	-108(%ebp), %eax
	.loc 6 2446 25 discriminator 2
	sarl	$17, %eax
	.loc 6 2446 10 discriminator 2
	movl	-20(%ebp), %edx
	leal	5(%edx), %ebx
	.loc 6 2446 25 discriminator 2
	movl	%eax, (%esp)
	call	__ZL11stbi__clampi
	.loc 6 2446 12 discriminator 2
	movb	%al, (%ebx)
	.loc 6 2447 29 discriminator 2
	movl	-116(%ebp), %edx
	movl	-104(%ebp), %eax
	addl	%edx, %eax
	.loc 6 2447 25 discriminator 2
	sarl	$17, %eax
	.loc 6 2447 10 discriminator 2
	movl	-20(%ebp), %edx
	leal	3(%edx), %ebx
	.loc 6 2447 25 discriminator 2
	movl	%eax, (%esp)
	call	__ZL11stbi__clampi
	.loc 6 2447 12 discriminator 2
	movb	%al, (%ebx)
	.loc 6 2448 29 discriminator 2
	movl	-116(%ebp), %eax
	subl	-104(%ebp), %eax
	.loc 6 2448 25 discriminator 2
	sarl	$17, %eax
	.loc 6 2448 10 discriminator 2
	movl	-20(%ebp), %edx
	leal	4(%edx), %ebx
	.loc 6 2448 25 discriminator 2
	movl	%eax, (%esp)
	call	__ZL11stbi__clampi
	.loc 6 2448 12 discriminator 2
	movb	%al, (%ebx)
LBE175:
	.loc 6 2426 4 discriminator 2
	addl	$1, -12(%ebp)
	.loc 6 2426 40 discriminator 2
	addl	$32, -16(%ebp)
	.loc 6 2426 45 discriminator 2
	movl	12(%ebp), %eax
	addl	%eax, -20(%ebp)
	.loc 6 2426 4 discriminator 2
	jmp	L1001
L1002:
LBE174:
	.loc 6 2450 1
	nop
	addl	$404, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1861:
	.def	__ZL16stbi__get_markerP10stbi__jpeg;	.scl	3;	.type	32;	.endef
__ZL16stbi__get_markerP10stbi__jpeg:
LFB1862:
	.loc 6 2846 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 2848 11
	movl	8(%ebp), %eax
	movzbl	18372(%eax), %eax
	.loc 6 2848 4
	cmpb	$-1, %al
	je	L1004
	.loc 6 2848 44 discriminator 1
	movl	8(%ebp), %eax
	movzbl	18372(%eax), %eax
	movb	%al, -9(%ebp)
	.loc 6 2848 67 discriminator 1
	movl	8(%ebp), %eax
	movb	$-1, 18372(%eax)
	.loc 6 2848 95 discriminator 1
	movzbl	-9(%ebp), %eax
	jmp	L1005
L1004:
	.loc 6 2849 18
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movb	%al, -9(%ebp)
	.loc 6 2850 4
	cmpb	$-1, -9(%ebp)
	je	L1006
	.loc 6 2850 26 discriminator 1
	movl	$-1, %eax
	jmp	L1005
L1006:
	.loc 6 2851 13
	cmpb	$-1, -9(%ebp)
	jne	L1007
	.loc 6 2852 21
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movb	%al, -9(%ebp)
	.loc 6 2851 4
	jmp	L1006
L1007:
	.loc 6 2853 11
	movzbl	-9(%ebp), %eax
L1005:
	.loc 6 2854 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1862:
	.def	__ZL16stbi__jpeg_resetP10stbi__jpeg;	.scl	3;	.type	32;	.endef
__ZL16stbi__jpeg_resetP10stbi__jpeg:
LFB1863:
	.loc 6 2863 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 2864 17
	movl	8(%ebp), %eax
	movl	$0, 18368(%eax)
	.loc 6 2865 19
	movl	8(%ebp), %eax
	movl	$0, 18364(%eax)
	.loc 6 2866 14
	movl	8(%ebp), %eax
	movl	$0, 18376(%eax)
	.loc 6 2867 102
	movl	8(%ebp), %eax
	movl	$0, 18316(%eax)
	.loc 6 2867 94
	movl	8(%ebp), %eax
	movl	18316(%eax), %edx
	.loc 6 2867 77
	movl	8(%ebp), %eax
	movl	%edx, 18244(%eax)
	.loc 6 2867 69
	movl	8(%ebp), %eax
	movl	18244(%eax), %edx
	.loc 6 2867 52
	movl	8(%ebp), %eax
	movl	%edx, 18172(%eax)
	.loc 6 2867 44
	movl	8(%ebp), %eax
	movl	18172(%eax), %edx
	.loc 6 2867 27
	movl	8(%ebp), %eax
	movl	%edx, 18100(%eax)
	.loc 6 2868 14
	movl	8(%ebp), %eax
	movb	$-1, 18372(%eax)
	.loc 6 2869 17
	movl	8(%ebp), %eax
	movl	18436(%eax), %eax
	.loc 6 2869 34
	testl	%eax, %eax
	je	L1009
	.loc 6 2869 34 is_stmt 0 discriminator 1
	movl	8(%ebp), %eax
	movl	18436(%eax), %eax
	jmp	L1010
L1009:
	.loc 6 2869 34 discriminator 2
	movl	$2147483647, %eax
L1010:
	.loc 6 2869 12 is_stmt 1 discriminator 4
	movl	8(%ebp), %edx
	movl	%eax, 18440(%edx)
	.loc 6 2870 15 discriminator 4
	movl	8(%ebp), %eax
	movl	$0, 18400(%eax)
	.loc 6 2873 1 discriminator 4
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1863:
	.def	__ZL30stbi__parse_entropy_coded_dataP10stbi__jpeg;	.scl	3;	.type	32;	.endef
__ZL30stbi__parse_entropy_coded_dataP10stbi__jpeg:
LFB1864:
	.loc 6 2876 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$316, %esp
	.cfi_offset 7, -12
	.cfi_offset 6, -16
	.cfi_offset 3, -20
	.loc 6 2877 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__jpeg_resetP10stbi__jpeg
LBB176:
	.loc 6 2878 12
	movl	8(%ebp), %eax
	movl	18380(%eax), %eax
	.loc 6 2878 4
	testl	%eax, %eax
	jne	L1012
LBB177:
LBB178:
	.loc 6 2879 14
	movl	8(%ebp), %eax
	movl	18416(%eax), %eax
	.loc 6 2879 7
	cmpl	$1, %eax
	jne	L1013
LBB179:
	.loc 6 2882 14
	movl	8(%ebp), %eax
	movl	18420(%eax), %eax
	movl	%eax, -84(%ebp)
	.loc 6 2887 34
	movl	8(%ebp), %ecx
	movl	-84(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18104, %eax
	movl	(%eax), %eax
	.loc 6 2887 35
	addl	$7, %eax
	.loc 6 2887 14
	sarl	$3, %eax
	movl	%eax, -88(%ebp)
	.loc 6 2888 34
	movl	8(%ebp), %ecx
	movl	-84(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18108, %eax
	movl	(%eax), %eax
	.loc 6 2888 35
	addl	$7, %eax
	.loc 6 2888 14
	sarl	$3, %eax
	movl	%eax, -92(%ebp)
LBB180:
	.loc 6 2889 16
	movl	$0, -32(%ebp)
L1023:
	.loc 6 2889 22 discriminator 1
	movl	-32(%ebp), %eax
	cmpl	-92(%ebp), %eax
	jge	L1014
LBB181:
LBB182:
	.loc 6 2890 19
	movl	$0, -28(%ebp)
L1022:
	.loc 6 2890 25 discriminator 1
	movl	-28(%ebp), %eax
	cmpl	-88(%ebp), %eax
	jge	L1015
LBB183:
	.loc 6 2891 20
	movl	8(%ebp), %ecx
	movl	-84(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18096, %eax
	movl	(%eax), %eax
	movl	%eax, -96(%ebp)
	.loc 6 2892 144
	movl	8(%ebp), %ecx
	movl	-84(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18088, %eax
	movl	(%eax), %eax
	.loc 6 2892 146
	addl	$105, %eax
	sall	$7, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	leal	4(%eax), %esi
	.loc 6 2892 112
	movl	-96(%ebp), %eax
	sall	$10, %eax
	leal	13952(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	leal	4(%eax), %ebx
	.loc 6 2892 87
	movl	8(%ebp), %eax
	leal	6724(%eax), %edx
	.loc 6 2892 94
	movl	-96(%ebp), %eax
	imull	$1680, %eax, %eax
	.loc 6 2892 44
	leal	(%edx,%eax), %ecx
	.loc 6 2892 57
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -284(%ebp)
	.loc 6 2892 80
	movl	8(%ebp), %edi
	movl	-84(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%edi, %eax
	addl	$18092, %eax
	movl	(%eax), %eax
	.loc 6 2892 64
	imull	$1680, %eax, %eax
	.loc 6 2892 44
	movl	-284(%ebp), %edi
	leal	(%edi,%eax), %edx
	movl	%esi, 24(%esp)
	movl	-84(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	%ebx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	leal	-276(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbi__jpeg_decode_blockP10stbi__jpegPsP13stbi__huffmanS3_S1_iPt
	.loc 6 2892 20
	testl	%eax, %eax
	sete	%al
	.loc 6 2892 16
	testb	%al, %al
	je	L1016
	.loc 6 2892 157 discriminator 2
	movl	$0, %eax
	jmp	L1024
L1016:
	.loc 6 2893 19
	movl	8(%ebp), %eax
	movl	18444(%eax), %ecx
	.loc 6 2893 36
	movl	8(%ebp), %ebx
	movl	-84(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18112, %eax
	movl	(%eax), %ebx
	.loc 6 2893 52
	movl	8(%ebp), %esi
	movl	-84(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%esi, %eax
	addl	$18120, %eax
	movl	(%eax), %esi
	.loc 6 2893 72
	movl	8(%ebp), %edi
	movl	-84(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%edi, %eax
	addl	$18112, %eax
	movl	(%eax), %eax
	.loc 6 2893 74
	imull	-32(%ebp), %eax
	.loc 6 2893 76
	sall	$3, %eax
	movl	%eax, %edx
	.loc 6 2893 80
	movl	-28(%ebp), %eax
	sall	$3, %eax
	.loc 6 2893 78
	addl	%edx, %eax
	.loc 6 2893 36
	leal	(%esi,%eax), %edx
	leal	-276(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ebx, 4(%esp)
	movl	%edx, (%esp)
	call	*%ecx
LVL33:
	.loc 6 2895 25
	movl	8(%ebp), %eax
	movl	18440(%eax), %eax
	.loc 6 2895 20
	leal	-1(%eax), %edx
	.loc 6 2895 30
	movl	8(%ebp), %eax
	movl	%edx, 18440(%eax)
	.loc 6 2895 25
	movl	8(%ebp), %eax
	movl	18440(%eax), %eax
	.loc 6 2895 30
	testl	%eax, %eax
	setle	%al
	.loc 6 2895 16
	testb	%al, %al
	je	L1018
	.loc 6 2896 26
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2896 19
	cmpl	$23, %eax
	jg	L1019
	.loc 6 2896 66 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg
L1019:
	.loc 6 2899 24
	movl	8(%ebp), %eax
	movzbl	18372(%eax), %eax
	.loc 6 2899 19
	cmpb	$-49, %al
	jbe	L1020
	.loc 6 2899 24 discriminator 2
	movl	8(%ebp), %eax
	movzbl	18372(%eax), %eax
	.loc 6 2899 23 discriminator 2
	cmpb	$-41, %al
	jbe	L1021
L1020:
	.loc 6 2899 57 discriminator 3
	movl	$1, %eax
	jmp	L1024
L1021:
	.loc 6 2900 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__jpeg_resetP10stbi__jpeg
L1018:
LBE183:
	.loc 6 2890 13 discriminator 2
	addl	$1, -28(%ebp)
	jmp	L1022
L1015:
LBE182:
LBE181:
	.loc 6 2889 10 discriminator 2
	addl	$1, -32(%ebp)
	jmp	L1023
L1014:
LBE180:
	.loc 6 2904 17
	movl	$1, %eax
	jmp	L1024
L1013:
LBE179:
LBB184:
LBB185:
	.loc 6 2908 16
	movl	$0, -40(%ebp)
L1040:
	.loc 6 2908 27 discriminator 1
	movl	8(%ebp), %eax
	movl	18064(%eax), %eax
	.loc 6 2908 22 discriminator 1
	cmpl	%eax, -40(%ebp)
	jge	L1025
LBB186:
LBB187:
	.loc 6 2909 19
	movl	$0, -36(%ebp)
L1039:
	.loc 6 2909 30 discriminator 1
	movl	8(%ebp), %eax
	movl	18060(%eax), %eax
	.loc 6 2909 25 discriminator 1
	cmpl	%eax, -36(%ebp)
	jge	L1026
LBB188:
LBB189:
	.loc 6 2911 22
	movl	$0, -44(%ebp)
L1034:
	.loc 6 2911 33 discriminator 1
	movl	8(%ebp), %eax
	movl	18416(%eax), %eax
	.loc 6 2911 28 discriminator 1
	cmpl	%eax, -44(%ebp)
	jge	L1027
LBB190:
	.loc 6 2912 23
	movl	8(%ebp), %eax
	movl	-44(%ebp), %edx
	addl	$4604, %edx
	movl	4(%eax,%edx,4), %eax
	movl	%eax, -100(%ebp)
LBB191:
	.loc 6 2915 25
	movl	$0, -52(%ebp)
L1033:
	.loc 6 2915 48 discriminator 1
	movl	8(%ebp), %ecx
	movl	-100(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18084, %eax
	movl	(%eax), %eax
	.loc 6 2915 31 discriminator 1
	cmpl	%eax, -52(%ebp)
	jge	L1028
LBB192:
LBB193:
	.loc 6 2916 28
	movl	$0, -48(%ebp)
L1032:
	.loc 6 2916 51 discriminator 1
	movl	8(%ebp), %ecx
	movl	-100(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18080, %eax
	movl	(%eax), %eax
	.loc 6 2916 34 discriminator 1
	cmpl	%eax, -48(%ebp)
	jge	L1029
LBB194:
	.loc 6 2917 52
	movl	8(%ebp), %ecx
	movl	-100(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18080, %eax
	movl	(%eax), %eax
	.loc 6 2917 36
	imull	-36(%ebp), %eax
	movl	%eax, %edx
	.loc 6 2917 54
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	.loc 6 2917 29
	sall	$3, %eax
	movl	%eax, -104(%ebp)
	.loc 6 2918 52
	movl	8(%ebp), %ecx
	movl	-100(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18084, %eax
	movl	(%eax), %eax
	.loc 6 2918 36
	imull	-40(%ebp), %eax
	movl	%eax, %edx
	.loc 6 2918 54
	movl	-52(%ebp), %eax
	addl	%edx, %eax
	.loc 6 2918 29
	sall	$3, %eax
	movl	%eax, -108(%ebp)
	.loc 6 2919 29
	movl	8(%ebp), %ecx
	movl	-100(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18096, %eax
	movl	(%eax), %eax
	movl	%eax, -112(%ebp)
	.loc 6 2920 153
	movl	8(%ebp), %ecx
	movl	-100(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18088, %eax
	movl	(%eax), %eax
	.loc 6 2920 155
	addl	$105, %eax
	sall	$7, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	leal	4(%eax), %esi
	.loc 6 2920 121
	movl	-112(%ebp), %eax
	sall	$10, %eax
	leal	13952(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	leal	4(%eax), %ebx
	.loc 6 2920 96
	movl	8(%ebp), %eax
	leal	6724(%eax), %edx
	.loc 6 2920 103
	movl	-112(%ebp), %eax
	imull	$1680, %eax, %eax
	.loc 6 2920 53
	leal	(%edx,%eax), %ecx
	.loc 6 2920 66
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -284(%ebp)
	.loc 6 2920 89
	movl	8(%ebp), %edi
	movl	-100(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%edi, %eax
	addl	$18092, %eax
	movl	(%eax), %eax
	.loc 6 2920 73
	imull	$1680, %eax, %eax
	.loc 6 2920 53
	movl	-284(%ebp), %edi
	leal	(%edi,%eax), %edx
	movl	%esi, 24(%esp)
	movl	-100(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	%ebx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	leal	-276(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbi__jpeg_decode_blockP10stbi__jpegPsP13stbi__huffmanS3_S1_iPt
	.loc 6 2920 29
	testl	%eax, %eax
	sete	%al
	.loc 6 2920 25
	testb	%al, %al
	je	L1030
	.loc 6 2920 166 discriminator 2
	movl	$0, %eax
	jmp	L1024
L1030:
	.loc 6 2921 28
	movl	8(%ebp), %eax
	movl	18444(%eax), %ecx
	.loc 6 2921 45
	movl	8(%ebp), %ebx
	movl	-100(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18112, %eax
	movl	(%eax), %ebx
	.loc 6 2921 61
	movl	8(%ebp), %esi
	movl	-100(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%esi, %eax
	addl	$18120, %eax
	movl	(%eax), %esi
	.loc 6 2921 81
	movl	8(%ebp), %edi
	movl	-100(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%edi, %eax
	addl	$18112, %eax
	movl	(%eax), %eax
	.loc 6 2921 83
	imull	-108(%ebp), %eax
	movl	%eax, %edx
	.loc 6 2921 86
	movl	-104(%ebp), %eax
	addl	%edx, %eax
	.loc 6 2921 45
	leal	(%esi,%eax), %edx
	leal	-276(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ebx, 4(%esp)
	movl	%edx, (%esp)
	call	*%ecx
LVL34:
LBE194:
	.loc 6 2916 22
	addl	$1, -48(%ebp)
	jmp	L1032
L1029:
LBE193:
LBE192:
	.loc 6 2915 19 discriminator 2
	addl	$1, -52(%ebp)
	jmp	L1033
L1028:
LBE191:
LBE190:
	.loc 6 2911 16 discriminator 2
	addl	$1, -44(%ebp)
	jmp	L1034
L1027:
LBE189:
	.loc 6 2927 25
	movl	8(%ebp), %eax
	movl	18440(%eax), %eax
	.loc 6 2927 20
	leal	-1(%eax), %edx
	.loc 6 2927 30
	movl	8(%ebp), %eax
	movl	%edx, 18440(%eax)
	.loc 6 2927 25
	movl	8(%ebp), %eax
	movl	18440(%eax), %eax
	.loc 6 2927 30
	testl	%eax, %eax
	setle	%al
	.loc 6 2927 16
	testb	%al, %al
	je	L1035
	.loc 6 2928 26
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2928 19
	cmpl	$23, %eax
	jg	L1036
	.loc 6 2928 66 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg
L1036:
	.loc 6 2929 24
	movl	8(%ebp), %eax
	movzbl	18372(%eax), %eax
	.loc 6 2929 19
	cmpb	$-49, %al
	jbe	L1037
	.loc 6 2929 24 discriminator 2
	movl	8(%ebp), %eax
	movzbl	18372(%eax), %eax
	.loc 6 2929 23 discriminator 2
	cmpb	$-41, %al
	jbe	L1038
L1037:
	.loc 6 2929 57 discriminator 3
	movl	$1, %eax
	jmp	L1024
L1038:
	.loc 6 2930 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__jpeg_resetP10stbi__jpeg
L1035:
LBE188:
	.loc 6 2909 13 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1039
L1026:
LBE187:
LBE186:
	.loc 6 2908 10 discriminator 2
	addl	$1, -40(%ebp)
	jmp	L1040
L1025:
LBE185:
	.loc 6 2934 17
	movl	$1, %eax
	jmp	L1024
L1012:
LBE184:
LBE178:
LBE177:
LBB195:
LBB196:
	.loc 6 2937 14
	movl	8(%ebp), %eax
	movl	18416(%eax), %eax
	.loc 6 2937 7
	cmpl	$1, %eax
	jne	L1041
LBB197:
	.loc 6 2939 14
	movl	8(%ebp), %eax
	movl	18420(%eax), %eax
	movl	%eax, -116(%ebp)
	.loc 6 2944 34
	movl	8(%ebp), %ecx
	movl	-116(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18104, %eax
	movl	(%eax), %eax
	.loc 6 2944 35
	addl	$7, %eax
	.loc 6 2944 14
	sarl	$3, %eax
	movl	%eax, -120(%ebp)
	.loc 6 2945 34
	movl	8(%ebp), %ecx
	movl	-116(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18108, %eax
	movl	(%eax), %eax
	.loc 6 2945 35
	addl	$7, %eax
	.loc 6 2945 14
	sarl	$3, %eax
	movl	%eax, -124(%ebp)
LBB198:
	.loc 6 2946 16
	movl	$0, -60(%ebp)
L1051:
	.loc 6 2946 22 discriminator 1
	movl	-60(%ebp), %eax
	cmpl	-124(%ebp), %eax
	jge	L1042
LBB199:
LBB200:
	.loc 6 2947 19
	movl	$0, -56(%ebp)
L1050:
	.loc 6 2947 25 discriminator 1
	movl	-56(%ebp), %eax
	cmpl	-120(%ebp), %eax
	jge	L1043
LBB201:
	.loc 6 2948 45
	movl	8(%ebp), %ecx
	movl	-116(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18136, %eax
	movl	(%eax), %ecx
	.loc 6 2948 82
	movl	8(%ebp), %ebx
	movl	-116(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18140, %eax
	movl	(%eax), %eax
	.loc 6 2948 65
	imull	-60(%ebp), %eax
	movl	%eax, %edx
	.loc 6 2948 61
	movl	-56(%ebp), %eax
	addl	%edx, %eax
	.loc 6 2948 51
	sall	$7, %eax
	.loc 6 2948 23
	addl	%ecx, %eax
	movl	%eax, -128(%ebp)
LBB202:
	.loc 6 2949 23
	movl	8(%ebp), %eax
	movl	18384(%eax), %eax
	.loc 6 2949 16
	testl	%eax, %eax
	jne	L1044
	.loc 6 2950 92
	movl	8(%ebp), %ecx
	movl	-116(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18092, %eax
	movl	(%eax), %eax
	.loc 6 2950 55
	imull	$1680, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	leal	4(%eax), %edx
	movl	-116(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL31stbi__jpeg_decode_block_prog_dcP10stbi__jpegPsP13stbi__huffmani
	.loc 6 2950 23
	testl	%eax, %eax
	sete	%al
	.loc 6 2950 19
	testb	%al, %al
	je	L1045
	.loc 6 2951 29
	movl	$0, %eax
	jmp	L1024
L1044:
LBB203:
	.loc 6 2953 23
	movl	8(%ebp), %ecx
	movl	-116(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18096, %eax
	movl	(%eax), %eax
	movl	%eax, -132(%ebp)
	.loc 6 2954 95
	movl	-132(%ebp), %eax
	sall	$10, %eax
	leal	13952(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	leal	4(%eax), %edx
	.loc 6 2954 55
	movl	-132(%ebp), %eax
	imull	$1680, %eax, %eax
	leal	6720(%eax), %ecx
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	addl	$4, %eax
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL31stbi__jpeg_decode_block_prog_acP10stbi__jpegPsP13stbi__huffmanS1_
	.loc 6 2954 23
	testl	%eax, %eax
	sete	%al
	.loc 6 2954 19
	testb	%al, %al
	je	L1045
	.loc 6 2955 29
	movl	$0, %eax
	jmp	L1024
L1045:
LBE203:
LBE202:
	.loc 6 2958 25
	movl	8(%ebp), %eax
	movl	18440(%eax), %eax
	.loc 6 2958 20
	leal	-1(%eax), %edx
	.loc 6 2958 30
	movl	8(%ebp), %eax
	movl	%edx, 18440(%eax)
	.loc 6 2958 25
	movl	8(%ebp), %eax
	movl	18440(%eax), %eax
	.loc 6 2958 30
	testl	%eax, %eax
	setle	%al
	.loc 6 2958 16
	testb	%al, %al
	je	L1046
	.loc 6 2959 26
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2959 19
	cmpl	$23, %eax
	jg	L1047
	.loc 6 2959 66 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg
L1047:
	.loc 6 2960 24
	movl	8(%ebp), %eax
	movzbl	18372(%eax), %eax
	.loc 6 2960 19
	cmpb	$-49, %al
	jbe	L1048
	.loc 6 2960 24 discriminator 2
	movl	8(%ebp), %eax
	movzbl	18372(%eax), %eax
	.loc 6 2960 23 discriminator 2
	cmpb	$-41, %al
	jbe	L1049
L1048:
	.loc 6 2960 57 discriminator 3
	movl	$1, %eax
	jmp	L1024
L1049:
	.loc 6 2961 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__jpeg_resetP10stbi__jpeg
L1046:
LBE201:
	.loc 6 2947 13 discriminator 2
	addl	$1, -56(%ebp)
	jmp	L1050
L1043:
LBE200:
LBE199:
	.loc 6 2946 10 discriminator 2
	addl	$1, -60(%ebp)
	jmp	L1051
L1042:
LBE198:
	.loc 6 2965 17
	movl	$1, %eax
	jmp	L1024
L1041:
LBE197:
LBB204:
LBB205:
	.loc 6 2968 16
	movl	$0, -68(%ebp)
L1066:
	.loc 6 2968 27 discriminator 1
	movl	8(%ebp), %eax
	movl	18064(%eax), %eax
	.loc 6 2968 22 discriminator 1
	cmpl	%eax, -68(%ebp)
	jge	L1052
LBB206:
LBB207:
	.loc 6 2969 19
	movl	$0, -64(%ebp)
L1065:
	.loc 6 2969 30 discriminator 1
	movl	8(%ebp), %eax
	movl	18060(%eax), %eax
	.loc 6 2969 25 discriminator 1
	cmpl	%eax, -64(%ebp)
	jge	L1053
LBB208:
LBB209:
	.loc 6 2971 22
	movl	$0, -72(%ebp)
L1060:
	.loc 6 2971 33 discriminator 1
	movl	8(%ebp), %eax
	movl	18416(%eax), %eax
	.loc 6 2971 28 discriminator 1
	cmpl	%eax, -72(%ebp)
	jge	L1054
LBB210:
	.loc 6 2972 23
	movl	8(%ebp), %eax
	movl	-72(%ebp), %edx
	addl	$4604, %edx
	movl	4(%eax,%edx,4), %eax
	movl	%eax, -136(%ebp)
LBB211:
	.loc 6 2975 25
	movl	$0, -80(%ebp)
L1059:
	.loc 6 2975 48 discriminator 1
	movl	8(%ebp), %ecx
	movl	-136(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18084, %eax
	movl	(%eax), %eax
	.loc 6 2975 31 discriminator 1
	cmpl	%eax, -80(%ebp)
	jge	L1055
LBB212:
LBB213:
	.loc 6 2976 28
	movl	$0, -76(%ebp)
L1058:
	.loc 6 2976 51 discriminator 1
	movl	8(%ebp), %ecx
	movl	-136(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18080, %eax
	movl	(%eax), %eax
	.loc 6 2976 34 discriminator 1
	cmpl	%eax, -76(%ebp)
	jge	L1056
LBB214:
	.loc 6 2977 52
	movl	8(%ebp), %ecx
	movl	-136(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18080, %eax
	movl	(%eax), %eax
	.loc 6 2977 36
	imull	-64(%ebp), %eax
	movl	%eax, %edx
	.loc 6 2977 29
	movl	-76(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -140(%ebp)
	.loc 6 2978 52
	movl	8(%ebp), %ecx
	movl	-136(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18084, %eax
	movl	(%eax), %eax
	.loc 6 2978 36
	imull	-68(%ebp), %eax
	movl	%eax, %edx
	.loc 6 2978 29
	movl	-80(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -144(%ebp)
	.loc 6 2979 54
	movl	8(%ebp), %ecx
	movl	-136(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18136, %eax
	movl	(%eax), %ecx
	.loc 6 2979 93
	movl	8(%ebp), %ebx
	movl	-136(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18140, %eax
	movl	(%eax), %eax
	.loc 6 2979 76
	imull	-144(%ebp), %eax
	movl	%eax, %edx
	.loc 6 2979 71
	movl	-140(%ebp), %eax
	addl	%edx, %eax
	.loc 6 2979 60
	sall	$7, %eax
	.loc 6 2979 32
	addl	%ecx, %eax
	movl	%eax, -148(%ebp)
	.loc 6 2980 98
	movl	8(%ebp), %ecx
	movl	-136(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18092, %eax
	movl	(%eax), %eax
	.loc 6 2980 61
	imull	$1680, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	leal	4(%eax), %edx
	movl	-136(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	movl	-148(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL31stbi__jpeg_decode_block_prog_dcP10stbi__jpegPsP13stbi__huffmani
	.loc 6 2980 29
	testl	%eax, %eax
	sete	%al
	.loc 6 2980 25
	testb	%al, %al
	je	L1057
	.loc 6 2981 35
	movl	$0, %eax
	jmp	L1024
L1057:
LBE214:
	.loc 6 2976 22 discriminator 2
	addl	$1, -76(%ebp)
	jmp	L1058
L1056:
LBE213:
LBE212:
	.loc 6 2975 19 discriminator 2
	addl	$1, -80(%ebp)
	jmp	L1059
L1055:
LBE211:
LBE210:
	.loc 6 2971 16 discriminator 2
	addl	$1, -72(%ebp)
	jmp	L1060
L1054:
LBE209:
	.loc 6 2987 25
	movl	8(%ebp), %eax
	movl	18440(%eax), %eax
	.loc 6 2987 20
	leal	-1(%eax), %edx
	.loc 6 2987 30
	movl	8(%ebp), %eax
	movl	%edx, 18440(%eax)
	.loc 6 2987 25
	movl	8(%ebp), %eax
	movl	18440(%eax), %eax
	.loc 6 2987 30
	testl	%eax, %eax
	setle	%al
	.loc 6 2987 16
	testb	%al, %al
	je	L1061
	.loc 6 2988 26
	movl	8(%ebp), %eax
	movl	18368(%eax), %eax
	.loc 6 2988 19
	cmpl	$23, %eax
	jg	L1062
	.loc 6 2988 66 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__grow_buffer_unsafeP10stbi__jpeg
L1062:
	.loc 6 2989 24
	movl	8(%ebp), %eax
	movzbl	18372(%eax), %eax
	.loc 6 2989 19
	cmpb	$-49, %al
	jbe	L1063
	.loc 6 2989 24 discriminator 2
	movl	8(%ebp), %eax
	movzbl	18372(%eax), %eax
	.loc 6 2989 23 discriminator 2
	cmpb	$-41, %al
	jbe	L1064
L1063:
	.loc 6 2989 57 discriminator 3
	movl	$1, %eax
	jmp	L1024
L1064:
	.loc 6 2990 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__jpeg_resetP10stbi__jpeg
L1061:
LBE208:
	.loc 6 2969 13 discriminator 2
	addl	$1, -64(%ebp)
	jmp	L1065
L1053:
LBE207:
LBE206:
	.loc 6 2968 10 discriminator 2
	addl	$1, -68(%ebp)
	jmp	L1066
L1052:
LBE205:
	.loc 6 2994 17
	movl	$1, %eax
L1024:
LBE204:
LBE196:
LBE195:
LBE176:
	.loc 6 2997 1 discriminator 1
	addl	$316, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1864:
	.def	__ZL21stbi__jpeg_dequantizePsPt;	.scl	3;	.type	32;	.endef
__ZL21stbi__jpeg_dequantizePsPt:
LFB1865:
	.loc 6 3000 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 6 3002 10
	movl	$0, -4(%ebp)
L1069:
	.loc 6 3002 16 discriminator 3
	cmpl	$63, -4(%ebp)
	jg	L1070
	.loc 6 3003 15 discriminator 2
	movl	-4(%ebp), %eax
	leal	(%eax,%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzwl	(%eax), %eax
	movl	%eax, %ecx
	.loc 6 3003 27 discriminator 2
	movl	-4(%ebp), %eax
	leal	(%eax,%eax), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3003 15 discriminator 2
	movzwl	(%eax), %eax
	imull	%eax, %ecx
	movl	%ecx, %edx
	movl	-4(%ebp), %eax
	leal	(%eax,%eax), %ecx
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	movw	%dx, (%eax)
	.loc 6 3002 4 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L1069
L1070:
	.loc 6 3004 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1865:
	.def	__ZL17stbi__jpeg_finishP10stbi__jpeg;	.scl	3;	.type	32;	.endef
__ZL17stbi__jpeg_finishP10stbi__jpeg:
LFB1866:
	.loc 6 3007 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$60, %esp
	.cfi_offset 7, -12
	.cfi_offset 6, -16
	.cfi_offset 3, -20
LBB215:
	.loc 6 3008 11
	movl	8(%ebp), %eax
	movl	18380(%eax), %eax
	.loc 6 3008 4
	testl	%eax, %eax
	je	L1079
LBB216:
LBB217:
	.loc 6 3011 13
	movl	$0, -36(%ebp)
L1078:
	.loc 6 3011 24 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3011 27 discriminator 1
	movl	8(%eax), %eax
	.loc 6 3011 19 discriminator 1
	cmpl	%eax, -36(%ebp)
	jge	L1079
LBB218:
	.loc 6 3012 34
	movl	8(%ebp), %ecx
	movl	-36(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18104, %eax
	movl	(%eax), %eax
	.loc 6 3012 35
	addl	$7, %eax
	.loc 6 3012 14
	sarl	$3, %eax
	movl	%eax, -40(%ebp)
	.loc 6 3013 34
	movl	8(%ebp), %ecx
	movl	-36(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18108, %eax
	movl	(%eax), %eax
	.loc 6 3013 35
	addl	$7, %eax
	.loc 6 3013 14
	sarl	$3, %eax
	movl	%eax, -44(%ebp)
LBB219:
	.loc 6 3014 16
	movl	$0, -32(%ebp)
L1077:
	.loc 6 3014 22 discriminator 1
	movl	-32(%ebp), %eax
	cmpl	-44(%ebp), %eax
	jge	L1074
LBB220:
LBB221:
	.loc 6 3015 19
	movl	$0, -28(%ebp)
L1076:
	.loc 6 3015 25 discriminator 3
	movl	-28(%ebp), %eax
	cmpl	-40(%ebp), %eax
	jge	L1075
LBB222:
	.loc 6 3016 45 discriminator 2
	movl	8(%ebp), %ecx
	movl	-36(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18136, %eax
	movl	(%eax), %ecx
	.loc 6 3016 82 discriminator 2
	movl	8(%ebp), %ebx
	movl	-36(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18140, %eax
	movl	(%eax), %eax
	.loc 6 3016 65 discriminator 2
	imull	-32(%ebp), %eax
	movl	%eax, %edx
	.loc 6 3016 61 discriminator 2
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3016 51 discriminator 2
	sall	$7, %eax
	.loc 6 3016 23 discriminator 2
	addl	%ecx, %eax
	movl	%eax, -48(%ebp)
	.loc 6 3017 70 discriminator 2
	movl	8(%ebp), %ecx
	movl	-36(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18088, %eax
	movl	(%eax), %eax
	.loc 6 3017 72 discriminator 2
	addl	$105, %eax
	sall	$7, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	addl	$4, %eax
	.loc 6 3017 37 discriminator 2
	movl	%eax, 4(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__jpeg_dequantizePsPt
	.loc 6 3018 19 discriminator 2
	movl	8(%ebp), %eax
	movl	18444(%eax), %ecx
	.loc 6 3018 36 discriminator 2
	movl	8(%ebp), %ebx
	movl	-36(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18112, %eax
	movl	(%eax), %ebx
	.loc 6 3018 52 discriminator 2
	movl	8(%ebp), %esi
	movl	-36(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%esi, %eax
	addl	$18120, %eax
	movl	(%eax), %esi
	.loc 6 3018 72 discriminator 2
	movl	8(%ebp), %edi
	movl	-36(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%edi, %eax
	addl	$18112, %eax
	movl	(%eax), %eax
	.loc 6 3018 74 discriminator 2
	imull	-32(%ebp), %eax
	.loc 6 3018 76 discriminator 2
	sall	$3, %eax
	movl	%eax, %edx
	.loc 6 3018 80 discriminator 2
	movl	-28(%ebp), %eax
	sall	$3, %eax
	.loc 6 3018 78 discriminator 2
	addl	%edx, %eax
	.loc 6 3018 36 discriminator 2
	leal	(%esi,%eax), %edx
	movl	-48(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ebx, 4(%esp)
	movl	%edx, (%esp)
	call	*%ecx
LVL35:
LBE222:
	.loc 6 3015 13 discriminator 2
	addl	$1, -28(%ebp)
	jmp	L1076
L1075:
LBE221:
LBE220:
	.loc 6 3014 10 discriminator 2
	addl	$1, -32(%ebp)
	jmp	L1077
L1074:
LBE219:
LBE218:
	.loc 6 3011 7 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1078
L1079:
LBE217:
LBE216:
LBE215:
	.loc 6 3023 1
	nop
	addl	$60, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1866:
	.section .rdata,"dr"
	.align 4
__ZZL20stbi__process_markerP10stbi__jpegiE3tag:
	.byte	74
	.byte	70
	.byte	73
	.byte	70
	.byte	0
	.align 4
__ZZL20stbi__process_markerP10stbi__jpegiE3tag_0:
	.byte	65
	.byte	100
	.byte	111
	.byte	98
	.byte	101
	.byte	0
LC46:
	.ascii "expected marker\0"
LC47:
	.ascii "bad DRI len\0"
LC48:
	.ascii "bad DQT type\0"
LC49:
	.ascii "bad DQT table\0"
LC50:
	.ascii "bad DHT header\0"
LC51:
	.ascii "bad COM len\0"
LC52:
	.ascii "bad APP len\0"
LC53:
	.ascii "unknown marker\0"
	.text
	.def	__ZL20stbi__process_markerP10stbi__jpegi;	.scl	3;	.type	32;	.endef
__ZL20stbi__process_markerP10stbi__jpegi:
LFB1867:
	.loc 6 3026 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$148, %esp
	.cfi_offset 3, -12
	cmpl	$219, 12(%ebp)
	je	L1081
	cmpl	$219, 12(%ebp)
	jg	L1082
	cmpl	$196, 12(%ebp)
	je	L1083
	jmp	L1084
L1082:
	cmpl	$221, 12(%ebp)
	je	L1085
	cmpl	$255, 12(%ebp)
	jne	L1084
LBB223:
LBB224:
	.loc 6 3030 17
	movl	$LC46, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1086
L1085:
	.loc 6 3033 27
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 3033 34
	cmpl	$4, %eax
	setne	%al
	.loc 6 3033 10
	testb	%al, %al
	je	L1087
	.loc 6 3033 47 discriminator 1
	movl	$LC47, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1086
L1087:
	.loc 6 3034 45
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, %edx
	.loc 6 3034 30
	movl	8(%ebp), %eax
	movl	%edx, 18436(%eax)
	.loc 6 3035 17
	movl	$1, %eax
	jmp	L1086
L1081:
	.loc 6 3038 27
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 3038 12
	subl	$2, %eax
	movl	%eax, -12(%ebp)
L1097:
	.loc 6 3039 19
	cmpl	$0, -12(%ebp)
	jle	L1088
LBB225:
	.loc 6 3040 31
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 3040 36
	movzbl	%al, %eax
	movl	%eax, -48(%ebp)
	.loc 6 3041 17
	movl	-48(%ebp), %eax
	sarl	$4, %eax
	movl	%eax, -52(%ebp)
	.loc 6 3041 42
	cmpl	$0, -52(%ebp)
	setne	%al
	.loc 6 3041 29
	movzbl	%al, %eax
	movl	%eax, -56(%ebp)
	.loc 6 3042 17
	movl	-48(%ebp), %eax
	andl	$15, %eax
	movl	%eax, -60(%ebp)
	.loc 6 3043 13
	cmpl	$0, -52(%ebp)
	je	L1089
	.loc 6 3043 24 discriminator 1
	cmpl	$1, -52(%ebp)
	je	L1089
	.loc 6 3043 42 discriminator 2
	movl	$LC48, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1086
L1089:
	.loc 6 3044 13
	cmpl	$3, -60(%ebp)
	jle	L1090
	.loc 6 3044 31 discriminator 1
	movl	$LC49, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1086
L1090:
	.loc 6 3046 19
	movl	$0, -16(%ebp)
L1094:
	.loc 6 3046 25 discriminator 2
	cmpl	$63, -16(%ebp)
	jg	L1091
	.loc 6 3047 54
	cmpl	$0, -56(%ebp)
	je	L1092
	.loc 6 3047 94 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	jmp	L1093
L1092:
	.loc 6 3047 113 discriminator 2
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 3047 54 discriminator 2
	movzbl	%al, %eax
L1093:
	.loc 6 3047 51 discriminator 4
	movl	-16(%ebp), %edx
	addl	$__ZL19stbi__jpeg_dezigzag, %edx
	movzbl	(%edx), %edx
	movzbl	%dl, %ecx
	.loc 6 3047 54 discriminator 4
	movl	8(%ebp), %edx
	movl	-60(%ebp), %ebx
	sall	$6, %ebx
	addl	%ebx, %ecx
	addl	$6720, %ecx
	movw	%ax, 4(%edx,%ecx,2)
	.loc 6 3046 13 discriminator 4
	addl	$1, -16(%ebp)
	jmp	L1094
L1091:
	.loc 6 3048 27
	cmpl	$0, -56(%ebp)
	je	L1095
	.loc 6 3048 27 is_stmt 0 discriminator 1
	movl	$129, %eax
	jmp	L1096
L1095:
	.loc 6 3048 27 discriminator 2
	movl	$65, %eax
L1096:
	.loc 6 3048 15 is_stmt 1 discriminator 4
	subl	%eax, -12(%ebp)
LBE225:
	.loc 6 3039 10 discriminator 4
	jmp	L1097
L1088:
	.loc 6 3050 18
	cmpl	$0, -12(%ebp)
	sete	%al
	.loc 6 3050 20
	movzbl	%al, %eax
	jmp	L1086
L1083:
	.loc 6 3053 27
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 3053 12
	subl	$2, %eax
	movl	%eax, -12(%ebp)
L1111:
	.loc 6 3054 19
	cmpl	$0, -12(%ebp)
	jle	L1098
LBB226:
	.loc 6 3056 29
	movl	$0, -28(%ebp)
	.loc 6 3057 31
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 3057 36
	movzbl	%al, %eax
	movl	%eax, -64(%ebp)
	.loc 6 3058 17
	movl	-64(%ebp), %eax
	sarl	$4, %eax
	movl	%eax, -68(%ebp)
	.loc 6 3059 17
	movl	-64(%ebp), %eax
	andl	$15, %eax
	movl	%eax, -72(%ebp)
	.loc 6 3060 13
	cmpl	$1, -68(%ebp)
	jg	L1099
	.loc 6 3060 24 discriminator 2
	cmpl	$3, -72(%ebp)
	jle	L1100
L1099:
	.loc 6 3060 42 discriminator 3
	movl	$LC50, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1086
L1100:
	.loc 6 3061 19
	movl	$0, -24(%ebp)
L1103:
	.loc 6 3061 25 discriminator 2
	cmpl	$15, -24(%ebp)
	jg	L1102
	.loc 6 3062 37
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %edx
	.loc 6 3062 25
	movl	-24(%ebp), %eax
	movl	%edx, -136(%ebp,%eax,4)
	.loc 6 3063 28
	movl	-24(%ebp), %eax
	movl	-136(%ebp,%eax,4), %eax
	.loc 6 3063 18
	addl	%eax, -28(%ebp)
	.loc 6 3061 13
	addl	$1, -24(%ebp)
	jmp	L1103
L1102:
	.loc 6 3065 15
	subl	$17, -12(%ebp)
	.loc 6 3066 13
	cmpl	$0, -68(%ebp)
	jne	L1104
	.loc 6 3067 44
	movl	8(%ebp), %eax
	leal	4(%eax), %edx
	.loc 6 3067 51
	movl	-72(%ebp), %eax
	imull	$1680, %eax, %eax
	.loc 6 3067 40
	addl	%eax, %edx
	leal	-136(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL19stbi__build_huffmanP13stbi__huffmanPi
	.loc 6 3067 20
	testl	%eax, %eax
	sete	%al
	.loc 6 3067 16
	testb	%al, %al
	je	L1105
	.loc 6 3067 71 discriminator 1
	movl	$0, %eax
	jmp	L1086
L1105:
	.loc 6 3068 18
	movl	-72(%ebp), %eax
	imull	$1680, %eax, %eax
	leal	1024(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	addl	$4, %eax
	movl	%eax, -20(%ebp)
	jmp	L1106
L1104:
	.loc 6 3070 44
	movl	8(%ebp), %eax
	leal	6724(%eax), %edx
	.loc 6 3070 51
	movl	-72(%ebp), %eax
	imull	$1680, %eax, %eax
	.loc 6 3070 40
	addl	%eax, %edx
	leal	-136(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL19stbi__build_huffmanP13stbi__huffmanPi
	.loc 6 3070 20
	testl	%eax, %eax
	sete	%al
	.loc 6 3070 16
	testb	%al, %al
	je	L1107
	.loc 6 3070 71 discriminator 1
	movl	$0, %eax
	jmp	L1086
L1107:
	.loc 6 3071 18
	movl	-72(%ebp), %eax
	imull	$1680, %eax, %eax
	leal	7744(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	addl	$4, %eax
	movl	%eax, -20(%ebp)
L1106:
	.loc 6 3073 19
	movl	$0, -24(%ebp)
L1109:
	.loc 6 3073 25 discriminator 2
	movl	-24(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jge	L1108
	.loc 6 3074 33
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3074 19
	movl	-24(%ebp), %ecx
	movl	-20(%ebp), %edx
	leal	(%ecx,%edx), %ebx
	.loc 6 3074 33
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 3074 21
	movb	%al, (%ebx)
	.loc 6 3073 13
	addl	$1, -24(%ebp)
	jmp	L1109
L1108:
	.loc 6 3075 13
	cmpl	$0, -68(%ebp)
	je	L1110
	.loc 6 3076 55
	movl	8(%ebp), %eax
	leal	6724(%eax), %edx
	.loc 6 3076 63
	movl	-72(%ebp), %eax
	imull	$1680, %eax, %eax
	.loc 6 3076 35
	addl	%eax, %edx
	.loc 6 3076 49
	movl	-72(%ebp), %eax
	sall	$10, %eax
	leal	13952(%eax), %ecx
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	addl	$4, %eax
	.loc 6 3076 35
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL19stbi__build_fast_acPsP13stbi__huffman
L1110:
	.loc 6 3077 15
	movl	-28(%ebp), %eax
	subl	%eax, -12(%ebp)
LBE226:
	.loc 6 3054 10
	jmp	L1111
L1098:
	.loc 6 3079 18
	cmpl	$0, -12(%ebp)
	sete	%al
	.loc 6 3079 20
	movzbl	%al, %eax
	jmp	L1086
L1084:
LBE224:
LBE223:
LBB227:
	.loc 6 3083 4
	cmpl	$223, 12(%ebp)
	jle	L1112
	.loc 6 3083 19 discriminator 1
	cmpl	$239, 12(%ebp)
	jle	L1113
L1112:
	.loc 6 3083 33 discriminator 3
	cmpl	$254, 12(%ebp)
	jne	L1114
L1113:
LBB228:
	.loc 6 3084 24
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -12(%ebp)
	.loc 6 3085 7
	cmpl	$1, -12(%ebp)
	jg	L1115
	.loc 6 3086 10
	cmpl	$254, 12(%ebp)
	jne	L1116
	.loc 6 3087 20
	movl	$LC51, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1086
L1116:
	.loc 6 3089 20
	movl	$LC52, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1086
L1115:
	.loc 6 3091 9
	subl	$2, -12(%ebp)
LBB229:
	.loc 6 3093 7
	cmpl	$224, 12(%ebp)
	jne	L1117
	.loc 6 3093 21 discriminator 1
	cmpl	$4, -12(%ebp)
	jle	L1117
LBB230:
	.loc 6 3095 14
	movl	$1, -32(%ebp)
	.loc 6 3097 16
	movl	$0, -36(%ebp)
L1120:
	.loc 6 3097 22 discriminator 1
	cmpl	$4, -36(%ebp)
	jg	L1118
	.loc 6 3098 27
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 3098 42
	movl	-36(%ebp), %eax
	addl	$__ZZL20stbi__process_markerP10stbi__jpegiE3tag, %eax
	movzbl	(%eax), %eax
	.loc 6 3098 34
	cmpb	%al, %dl
	setne	%al
	.loc 6 3098 13
	testb	%al, %al
	je	L1119
	.loc 6 3099 19
	movl	$0, -32(%ebp)
L1119:
	.loc 6 3097 10 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1120
L1118:
	.loc 6 3100 12
	subl	$5, -12(%ebp)
	.loc 6 3101 10
	cmpl	$0, -32(%ebp)
	je	L1127
	.loc 6 3102 21
	movl	8(%ebp), %eax
	movl	$1, 18404(%eax)
LBE230:
	.loc 6 3102 24
	jmp	L1127
L1117:
LBB231:
LBB232:
	.loc 6 3103 14
	cmpl	$238, 12(%ebp)
	jne	L1122
	.loc 6 3103 28 discriminator 1
	cmpl	$11, -12(%ebp)
	jle	L1122
LBB233:
	.loc 6 3105 14
	movl	$1, -40(%ebp)
	.loc 6 3107 16
	movl	$0, -44(%ebp)
L1125:
	.loc 6 3107 22 discriminator 1
	cmpl	$5, -44(%ebp)
	jg	L1123
	.loc 6 3108 27
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 3108 42
	movl	-44(%ebp), %eax
	addl	$__ZZL20stbi__process_markerP10stbi__jpegiE3tag_0, %eax
	movzbl	(%eax), %eax
	.loc 6 3108 34
	cmpb	%al, %dl
	setne	%al
	.loc 6 3108 13
	testb	%al, %al
	je	L1124
	.loc 6 3109 19
	movl	$0, -40(%ebp)
L1124:
	.loc 6 3107 10 discriminator 2
	addl	$1, -44(%ebp)
	jmp	L1125
L1123:
	.loc 6 3110 12
	subl	$6, -12(%ebp)
	.loc 6 3111 10
	cmpl	$0, -40(%ebp)
	je	L1122
	.loc 6 3112 23
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 3113 26
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 3114 26
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 3115 50
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %edx
	.loc 6 3115 38
	movl	8(%ebp), %eax
	movl	%edx, 18408(%eax)
	.loc 6 3116 15
	subl	$6, -12(%ebp)
	jmp	L1122
L1127:
LBE233:
LBE232:
LBE231:
	.loc 6 3102 24
	nop
L1122:
LBE229:
	.loc 6 3120 17
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	-12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 3121 14
	movl	$1, %eax
	jmp	L1086
L1114:
LBE228:
LBE227:
	.loc 6 3124 11
	movl	$LC53, (%esp)
	call	__ZL9stbi__errPKc
	nop
L1086:
	.loc 6 3125 1
	addl	$148, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1867:
	.section .rdata,"dr"
LC54:
	.ascii "bad SOS component count\0"
LC55:
	.ascii "bad SOS len\0"
LC56:
	.ascii "bad DC huff\0"
LC57:
	.ascii "bad AC huff\0"
LC58:
	.ascii "bad SOS\0"
	.text
	.def	__ZL25stbi__process_scan_headerP10stbi__jpeg;	.scl	3;	.type	32;	.endef
__ZL25stbi__process_scan_headerP10stbi__jpeg:
LFB1868:
	.loc 6 3129 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$52, %esp
	.cfi_offset 3, -12
	.loc 6 3131 26
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -20(%ebp)
	.loc 6 3132 26
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %edx
	.loc 6 3132 14
	movl	8(%ebp), %eax
	movl	%edx, 18416(%eax)
	.loc 6 3133 11
	movl	8(%ebp), %eax
	movl	18416(%eax), %eax
	.loc 6 3133 4
	testl	%eax, %eax
	jle	L1129
	.loc 6 3133 28 discriminator 2
	movl	8(%ebp), %eax
	movl	18416(%eax), %eax
	.loc 6 3133 22 discriminator 2
	cmpl	$4, %eax
	jg	L1129
	.loc 6 3133 45 discriminator 4
	movl	8(%ebp), %eax
	movl	18416(%eax), %edx
	.loc 6 3133 63 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3133 66 discriminator 4
	movl	8(%eax), %eax
	.loc 6 3133 39 discriminator 4
	cmpl	%eax, %edx
	jle	L1130
L1129:
	.loc 6 3133 80 discriminator 5
	movl	$LC54, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1131
L1130:
	.loc 6 3134 21
	movl	8(%ebp), %eax
	movl	18416(%eax), %eax
	.loc 6 3134 15
	addl	$3, %eax
	addl	%eax, %eax
	.loc 6 3134 4
	cmpl	%eax, -20(%ebp)
	je	L1132
	.loc 6 3134 36 discriminator 1
	movl	$LC55, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1131
L1132:
LBB234:
	.loc 6 3135 10
	movl	$0, -12(%ebp)
L1140:
	.loc 6 3135 21 discriminator 1
	movl	8(%ebp), %eax
	movl	18416(%eax), %eax
	.loc 6 3135 16 discriminator 1
	cmpl	%eax, -12(%ebp)
	jge	L1133
LBB235:
	.loc 6 3136 26
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 3136 31
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	.loc 6 3137 25
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 3137 30
	movzbl	%al, %eax
	movl	%eax, -28(%ebp)
	.loc 6 3138 18
	movl	$0, -16(%ebp)
L1136:
	.loc 6 3138 34 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3138 37 discriminator 1
	movl	8(%eax), %eax
	.loc 6 3138 29 discriminator 1
	cmpl	%eax, -16(%ebp)
	jge	L1134
	.loc 6 3139 33
	movl	8(%ebp), %ecx
	movl	-16(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18076, %eax
	movl	(%eax), %eax
	.loc 6 3139 10
	cmpl	%eax, -24(%ebp)
	je	L1147
	.loc 6 3138 7 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L1136
L1147:
	.loc 6 3140 13
	nop
L1134:
	.loc 6 3141 23
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3141 26
	movl	8(%eax), %eax
	.loc 6 3141 7
	cmpl	%eax, -16(%ebp)
	jne	L1137
	.loc 6 3141 40 discriminator 1
	movl	$0, %eax
	jmp	L1131
L1137:
	.loc 6 3142 33
	movl	-28(%ebp), %eax
	sarl	$4, %eax
	movl	%eax, %ecx
	.loc 6 3142 29
	movl	8(%ebp), %ebx
	movl	-16(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18092, %eax
	movl	%ecx, (%eax)
	.loc 6 3142 64
	movl	8(%ebp), %ecx
	movl	-16(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18092, %eax
	movl	(%eax), %eax
	.loc 6 3142 41
	cmpl	$3, %eax
	jle	L1138
	.loc 6 3142 79 discriminator 1
	movl	$LC56, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1131
L1138:
	.loc 6 3143 33
	movl	-28(%ebp), %eax
	andl	$15, %eax
	movl	%eax, %ecx
	.loc 6 3143 29
	movl	8(%ebp), %ebx
	movl	-16(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18096, %eax
	movl	%ecx, (%eax)
	.loc 6 3143 64
	movl	8(%ebp), %ecx
	movl	-16(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18096, %eax
	movl	(%eax), %eax
	.loc 6 3143 41
	cmpl	$3, %eax
	jle	L1139
	.loc 6 3143 79 discriminator 1
	movl	$LC57, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1131
L1139:
	.loc 6 3144 19 discriminator 2
	movl	8(%ebp), %eax
	movl	-12(%ebp), %edx
	leal	4604(%edx), %ecx
	movl	-16(%ebp), %edx
	movl	%edx, 4(%eax,%ecx,4)
LBE235:
	.loc 6 3135 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1140
L1133:
LBE234:
LBB236:
	.loc 6 3149 33
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %edx
	.loc 6 3149 21
	movl	8(%ebp), %eax
	movl	%edx, 18384(%eax)
	.loc 6 3150 33
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %edx
	.loc 6 3150 21
	movl	8(%ebp), %eax
	movl	%edx, 18388(%eax)
	.loc 6 3151 22
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 3151 10
	movzbl	%al, %eax
	movl	%eax, -32(%ebp)
	.loc 6 3152 26
	movl	-32(%ebp), %eax
	sarl	$4, %eax
	movl	%eax, %edx
	.loc 6 3152 20
	movl	8(%ebp), %eax
	movl	%edx, 18392(%eax)
	.loc 6 3153 26
	movl	-32(%ebp), %eax
	andl	$15, %eax
	movl	%eax, %edx
	.loc 6 3153 20
	movl	8(%ebp), %eax
	movl	%edx, 18396(%eax)
	.loc 6 3154 14
	movl	8(%ebp), %eax
	movl	18380(%eax), %eax
	.loc 6 3154 7
	testl	%eax, %eax
	je	L1141
	.loc 6 3155 17
	movl	8(%ebp), %eax
	movl	18384(%eax), %eax
	.loc 6 3155 10
	cmpl	$63, %eax
	jg	L1142
	.loc 6 3155 39 discriminator 1
	movl	8(%ebp), %eax
	movl	18388(%eax), %eax
	.loc 6 3155 33 discriminator 1
	cmpl	$63, %eax
	jg	L1142
	.loc 6 3155 60 discriminator 2
	movl	8(%ebp), %eax
	movl	18384(%eax), %edx
	.loc 6 3155 76 discriminator 2
	movl	8(%ebp), %eax
	movl	18388(%eax), %eax
	.loc 6 3155 54 discriminator 2
	cmpl	%eax, %edx
	jg	L1142
	.loc 6 3155 91 discriminator 3
	movl	8(%ebp), %eax
	movl	18392(%eax), %eax
	.loc 6 3155 85 discriminator 3
	cmpl	$13, %eax
	jg	L1142
	.loc 6 3155 112 discriminator 4
	movl	8(%ebp), %eax
	movl	18396(%eax), %eax
	.loc 6 3155 106 discriminator 4
	cmpl	$13, %eax
	jle	L1143
L1142:
	.loc 6 3156 20
	movl	$LC58, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1131
L1141:
	.loc 6 3158 17
	movl	8(%ebp), %eax
	movl	18384(%eax), %eax
	.loc 6 3158 10
	testl	%eax, %eax
	je	L1144
	.loc 6 3158 41 discriminator 1
	movl	$LC58, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1131
L1144:
	.loc 6 3159 17
	movl	8(%ebp), %eax
	movl	18392(%eax), %eax
	.loc 6 3159 10
	testl	%eax, %eax
	jne	L1145
	.loc 6 3159 38 discriminator 2
	movl	8(%ebp), %eax
	movl	18396(%eax), %eax
	.loc 6 3159 32 discriminator 2
	testl	%eax, %eax
	je	L1146
L1145:
	.loc 6 3159 60 discriminator 3
	movl	$LC58, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1131
L1146:
	.loc 6 3160 22
	movl	8(%ebp), %eax
	movl	$63, 18388(%eax)
L1143:
LBE236:
	.loc 6 3164 11
	movl	$1, %eax
L1131:
	.loc 6 3165 1
	addl	$52, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1868:
	.def	__ZL26stbi__free_jpeg_componentsP10stbi__jpegii;	.scl	3;	.type	32;	.endef
__ZL26stbi__free_jpeg_componentsP10stbi__jpegii:
LFB1869:
	.loc 6 3168 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 3170 10
	movl	$0, -12(%ebp)
L1153:
	.loc 6 3170 16 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L1149
	.loc 6 3171 26
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18124, %eax
	movl	(%eax), %eax
	.loc 6 3171 7
	testl	%eax, %eax
	je	L1150
	.loc 6 3172 10
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18124, %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 3173 34
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18124, %eax
	movl	$0, (%eax)
	.loc 6 3174 30
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18120, %eax
	movl	$0, (%eax)
L1150:
	.loc 6 3176 26
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18128, %eax
	movl	(%eax), %eax
	.loc 6 3176 7
	testl	%eax, %eax
	je	L1151
	.loc 6 3177 10
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18128, %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 3178 35
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18128, %eax
	movl	$0, (%eax)
	.loc 6 3179 31
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18136, %eax
	movl	$0, (%eax)
L1151:
	.loc 6 3181 26
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18132, %eax
	movl	(%eax), %eax
	.loc 6 3181 7
	testl	%eax, %eax
	je	L1152
	.loc 6 3182 10
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18132, %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 3183 33
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18132, %eax
	movl	$0, (%eax)
L1152:
	.loc 6 3170 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1153
L1149:
	.loc 6 3186 11
	movl	16(%ebp), %eax
	.loc 6 3187 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1869:
	.section .rdata,"dr"
__ZZL26stbi__process_frame_headerP10stbi__jpegiE3rgb:
	.byte	82
	.byte	71
	.byte	66
LC59:
	.ascii "bad SOF len\0"
LC60:
	.ascii "only 8-bit\0"
LC61:
	.ascii "no header height\0"
LC62:
	.ascii "0 width\0"
LC63:
	.ascii "too large\0"
LC64:
	.ascii "bad component count\0"
LC65:
	.ascii "bad H\0"
LC66:
	.ascii "bad V\0"
LC67:
	.ascii "bad TQ\0"
	.text
	.def	__ZL26stbi__process_frame_headerP10stbi__jpegi;	.scl	3;	.type	32;	.endef
__ZL26stbi__process_frame_headerP10stbi__jpegi:
LFB1870:
	.loc 6 3190 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$52, %esp
	.cfi_offset 3, -12
	.loc 6 3191 19
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 6 3192 18
	movl	$1, -16(%ebp)
	.loc 6 3192 26
	movl	$1, -20(%ebp)
	.loc 6 3193 22
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -28(%ebp)
	.loc 6 3193 35
	cmpl	$10, -28(%ebp)
	jg	L1156
	.loc 6 3193 55 discriminator 1
	movl	$LC59, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1157
L1156:
	.loc 6 3194 19
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 3194 7
	movzbl	%al, %eax
	movl	%eax, -32(%ebp)
	.loc 6 3194 35
	cmpl	$8, -32(%ebp)
	je	L1158
	.loc 6 3194 54 discriminator 1
	movl	$LC60, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1157
L1158:
	.loc 6 3195 28
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, %edx
	.loc 6 3195 13
	movl	-24(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 6 3195 42
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 3195 35
	testl	%eax, %eax
	jne	L1159
	.loc 6 3195 61 discriminator 1
	movl	$LC61, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1157
L1159:
	.loc 6 3196 28
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, %edx
	.loc 6 3196 13
	movl	-24(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 3196 42
	movl	-24(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3196 35
	testl	%eax, %eax
	jne	L1160
	.loc 6 3196 61 discriminator 1
	movl	$LC62, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1157
L1160:
	.loc 6 3197 11
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 3197 4
	cmpl	$16777216, %eax
	jbe	L1161
	.loc 6 3197 47 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1157
L1161:
	.loc 6 3198 11
	movl	-24(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3198 4
	cmpl	$16777216, %eax
	jbe	L1162
	.loc 6 3198 47 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1157
L1162:
	.loc 6 3199 18
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 3199 6
	movzbl	%al, %eax
	movl	%eax, -36(%ebp)
	.loc 6 3200 4
	cmpl	$3, -36(%ebp)
	je	L1163
	.loc 6 3200 15 discriminator 1
	cmpl	$1, -36(%ebp)
	je	L1163
	.loc 6 3200 25 discriminator 2
	cmpl	$4, -36(%ebp)
	je	L1163
	.loc 6 3200 43 discriminator 3
	movl	$LC64, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1157
L1163:
	.loc 6 3201 13
	movl	-24(%ebp), %eax
	movl	-36(%ebp), %edx
	movl	%edx, 8(%eax)
	.loc 6 3202 10
	movl	$0, -12(%ebp)
L1165:
	.loc 6 3202 16 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	-36(%ebp), %eax
	jge	L1164
	.loc 6 3203 27 discriminator 2
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18120, %eax
	movl	$0, (%eax)
	.loc 6 3204 30 discriminator 2
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18132, %eax
	movl	$0, (%eax)
	.loc 6 3202 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1165
L1164:
	.loc 6 3207 21
	movl	-24(%ebp), %eax
	movl	8(%eax), %edx
	.loc 6 3207 17
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	.loc 6 3207 15
	addl	$8, %eax
	.loc 6 3207 4
	cmpl	%eax, -28(%ebp)
	je	L1166
	.loc 6 3207 35 discriminator 1
	movl	$LC59, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1157
L1166:
	.loc 6 3209 11
	movl	8(%ebp), %eax
	movl	$0, 18412(%eax)
LBB237:
	.loc 6 3210 10
	movl	$0, -12(%ebp)
L1174:
	.loc 6 3210 21 discriminator 1
	movl	-24(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 3210 16 discriminator 1
	cmpl	%eax, -12(%ebp)
	jge	L1167
LBB238:
	.loc 6 3212 37
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %ecx
	.loc 6 3212 25
	movl	8(%ebp), %ebx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18076, %eax
	movl	%ecx, (%eax)
	.loc 6 3213 14
	movl	-24(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 3213 7
	cmpl	$3, %eax
	jne	L1168
	.loc 6 3213 43 discriminator 1
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18076, %eax
	movl	(%eax), %edx
	.loc 6 3213 54 discriminator 1
	movl	-12(%ebp), %eax
	addl	$__ZZL26stbi__process_frame_headerP10stbi__jpegiE3rgb, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 3213 25 discriminator 1
	cmpl	%eax, %edx
	jne	L1168
	.loc 6 3214 15
	movl	8(%ebp), %eax
	movl	18412(%eax), %eax
	.loc 6 3214 10
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 18412(%eax)
L1168:
	.loc 6 3215 21
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 3215 9
	movzbl	%al, %eax
	movl	%eax, -40(%ebp)
	.loc 6 3216 29
	movl	-40(%ebp), %eax
	sarl	$4, %eax
	movl	%eax, %ecx
	.loc 6 3216 24
	movl	8(%ebp), %ebx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18080, %eax
	movl	%ecx, (%eax)
	.loc 6 3216 57
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18080, %eax
	movl	(%eax), %eax
	.loc 6 3216 37
	testl	%eax, %eax
	je	L1169
	.loc 6 3216 77 discriminator 2
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18080, %eax
	movl	(%eax), %eax
	.loc 6 3216 59 discriminator 2
	cmpl	$4, %eax
	jle	L1170
L1169:
	.loc 6 3216 91 discriminator 3
	movl	$LC65, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1157
L1170:
	.loc 6 3217 28
	movl	-40(%ebp), %eax
	andl	$15, %eax
	movl	%eax, %ecx
	.loc 6 3217 24
	movl	8(%ebp), %ebx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18084, %eax
	movl	%ecx, (%eax)
	.loc 6 3217 57
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18084, %eax
	movl	(%eax), %eax
	.loc 6 3217 37
	testl	%eax, %eax
	je	L1171
	.loc 6 3217 77 discriminator 2
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18084, %eax
	movl	(%eax), %eax
	.loc 6 3217 59 discriminator 2
	cmpl	$4, %eax
	jle	L1172
L1171:
	.loc 6 3217 91 discriminator 3
	movl	$LC66, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1157
L1172:
	.loc 6 3218 37
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %ecx
	.loc 6 3218 25
	movl	8(%ebp), %ebx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18088, %eax
	movl	%ecx, (%eax)
	.loc 6 3218 62
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18088, %eax
	movl	(%eax), %eax
	.loc 6 3218 43
	cmpl	$3, %eax
	jle	L1173
	.loc 6 3218 77 discriminator 1
	movl	$LC67, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1157
L1173:
LBE238:
	.loc 6 3210 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1174
L1167:
LBE237:
	.loc 6 3221 4
	cmpl	$0, 12(%ebp)
	je	L1175
	.loc 6 3221 40 discriminator 1
	movl	$1, %eax
	jmp	L1157
L1175:
	.loc 6 3223 30
	movl	-24(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 3223 44
	movl	-24(%ebp), %edx
	movl	4(%edx), %edx
	.loc 6 3223 30
	movl	%edx, %ecx
	.loc 6 3223 34
	movl	-24(%ebp), %edx
	movl	(%edx), %edx
	.loc 6 3223 30
	movl	$0, 12(%esp)
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL21stbi__mad3sizes_validiiii
	.loc 6 3223 8
	testl	%eax, %eax
	sete	%al
	.loc 6 3223 4
	testb	%al, %al
	je	L1176
	.loc 6 3223 72 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1157
L1176:
	.loc 6 3225 10
	movl	$0, -12(%ebp)
L1180:
	.loc 6 3225 21 discriminator 1
	movl	-24(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 3225 16 discriminator 1
	cmpl	%eax, -12(%ebp)
	jge	L1177
	.loc 6 3226 26
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18080, %eax
	movl	(%eax), %eax
	.loc 6 3226 7
	cmpl	%eax, -16(%ebp)
	jge	L1178
	.loc 6 3226 43 discriminator 1
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18080, %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
L1178:
	.loc 6 3227 26
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18084, %eax
	movl	(%eax), %eax
	.loc 6 3227 7
	cmpl	%eax, -20(%ebp)
	jge	L1179
	.loc 6 3227 43 discriminator 1
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18084, %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
L1179:
	.loc 6 3225 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1180
L1177:
	.loc 6 3231 17
	movl	8(%ebp), %eax
	movl	-16(%ebp), %edx
	movl	%edx, 18052(%eax)
	.loc 6 3232 17
	movl	8(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%edx, 18056(%eax)
	.loc 6 3233 25
	movl	-16(%ebp), %eax
	leal	0(,%eax,8), %edx
	.loc 6 3233 17
	movl	8(%ebp), %eax
	movl	%edx, 18068(%eax)
	.loc 6 3234 25
	movl	-20(%ebp), %eax
	leal	0(,%eax,8), %edx
	.loc 6 3234 17
	movl	8(%ebp), %eax
	movl	%edx, 18072(%eax)
	.loc 6 3236 23
	movl	-24(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 3236 34
	movl	8(%ebp), %eax
	movl	18068(%eax), %eax
	.loc 6 3236 29
	addl	%edx, %eax
	.loc 6 3236 43
	leal	-1(%eax), %edx
	.loc 6 3236 52
	movl	8(%ebp), %eax
	movl	18068(%eax), %eax
	movl	%eax, %ecx
	.loc 6 3236 47
	movl	%edx, %eax
	movl	$0, %edx
	divl	%ecx
	movl	%eax, %edx
	.loc 6 3236 17
	movl	8(%ebp), %eax
	movl	%edx, 18060(%eax)
	.loc 6 3237 23
	movl	-24(%ebp), %eax
	movl	4(%eax), %edx
	.loc 6 3237 34
	movl	8(%ebp), %eax
	movl	18072(%eax), %eax
	.loc 6 3237 29
	addl	%edx, %eax
	.loc 6 3237 43
	leal	-1(%eax), %edx
	.loc 6 3237 52
	movl	8(%ebp), %eax
	movl	18072(%eax), %eax
	movl	%eax, %ecx
	.loc 6 3237 47
	movl	%edx, %eax
	movl	$0, %edx
	divl	%ecx
	movl	%eax, %edx
	.loc 6 3237 17
	movl	8(%ebp), %eax
	movl	%edx, 18064(%eax)
	.loc 6 3239 10
	movl	$0, -12(%ebp)
L1185:
	.loc 6 3239 21 discriminator 1
	movl	-24(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 3239 16 discriminator 1
	cmpl	%eax, -12(%ebp)
	jge	L1181
	.loc 6 3241 30
	movl	-24(%ebp), %eax
	movl	(%eax), %ecx
	.loc 6 3241 53
	movl	8(%ebp), %ebx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18080, %eax
	movl	(%eax), %eax
	.loc 6 3241 36
	imull	%eax, %ecx
	movl	%ecx, %edx
	.loc 6 3241 55
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3241 62
	subl	$1, %eax
	.loc 6 3241 66
	movl	-16(%ebp), %ebx
	movl	$0, %edx
	divl	%ebx
	movl	%eax, %ebx
	.loc 6 3241 24
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18104, %eax
	movl	%ebx, (%eax)
	.loc 6 3242 30
	movl	-24(%ebp), %eax
	movl	4(%eax), %ecx
	.loc 6 3242 53
	movl	8(%ebp), %ebx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18084, %eax
	movl	(%eax), %eax
	.loc 6 3242 36
	imull	%eax, %ecx
	movl	%ecx, %edx
	.loc 6 3242 55
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3242 62
	subl	$1, %eax
	.loc 6 3242 66
	movl	-20(%ebp), %ebx
	movl	$0, %edx
	divl	%ebx
	movl	%eax, %ebx
	.loc 6 3242 24
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18108, %eax
	movl	%ebx, (%eax)
	.loc 6 3250 30
	movl	8(%ebp), %eax
	movl	18060(%eax), %ecx
	.loc 6 3250 57
	movl	8(%ebp), %ebx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18080, %eax
	movl	(%eax), %eax
	.loc 6 3250 40
	imull	%ecx, %eax
	.loc 6 3250 59
	leal	0(,%eax,8), %ecx
	.loc 6 3250 25
	movl	8(%ebp), %ebx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18112, %eax
	movl	%ecx, (%eax)
	.loc 6 3251 30
	movl	8(%ebp), %eax
	movl	18064(%eax), %ecx
	.loc 6 3251 57
	movl	8(%ebp), %ebx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18084, %eax
	movl	(%eax), %eax
	.loc 6 3251 40
	imull	%ecx, %eax
	.loc 6 3251 59
	leal	0(,%eax,8), %ecx
	.loc 6 3251 25
	movl	8(%ebp), %ebx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18116, %eax
	movl	%ecx, (%eax)
	.loc 6 3252 28
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18136, %eax
	movl	$0, (%eax)
	.loc 6 3253 32
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18128, %eax
	movl	$0, (%eax)
	.loc 6 3254 30
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18132, %eax
	movl	$0, (%eax)
	.loc 6 3255 50
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18116, %eax
	movl	(%eax), %ecx
	movl	8(%ebp), %ebx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18112, %eax
	movl	(%eax), %eax
	movl	$15, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad2iii
	movl	%eax, %ebx
	.loc 6 3255 31
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18124, %eax
	movl	%ebx, (%eax)
	.loc 6 3256 26
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18124, %eax
	movl	(%eax), %eax
	.loc 6 3256 7
	testl	%eax, %eax
	jne	L1182
	.loc 6 3257 43
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	%eax, %edx
	movl	-12(%ebp), %eax
	addl	$1, %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbi__free_jpeg_componentsP10stbi__jpegii
	.loc 6 3257 90
	jmp	L1157
L1182:
	.loc 6 3259 66
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18124, %eax
	movl	(%eax), %eax
	.loc 6 3259 75
	addl	$15, %eax
	.loc 6 3259 81
	andl	$-16, %eax
	.loc 6 3259 27
	movl	%eax, %ebx
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18120, %eax
	movl	%ebx, (%eax)
	.loc 6 3260 14
	movl	8(%ebp), %eax
	movl	18380(%eax), %eax
	.loc 6 3260 7
	testl	%eax, %eax
	je	L1183
	.loc 6 3262 50
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18112, %eax
	movl	(%eax), %eax
	.loc 6 3262 53
	leal	7(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$3, %eax
	movl	%eax, %ebx
	.loc 6 3262 33
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18140, %eax
	movl	%ebx, (%eax)
	.loc 6 3263 50
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18116, %eax
	movl	(%eax), %eax
	.loc 6 3263 53
	leal	7(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$3, %eax
	movl	%eax, %ebx
	.loc 6 3263 33
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18144, %eax
	movl	%ebx, (%eax)
	.loc 6 3264 54
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18116, %eax
	movl	(%eax), %ecx
	movl	8(%ebp), %ebx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18112, %eax
	movl	(%eax), %eax
	movl	$15, 12(%esp)
	movl	$2, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad3iiii
	movl	%eax, %ebx
	.loc 6 3264 35
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18128, %eax
	movl	%ebx, (%eax)
	.loc 6 3265 29
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18128, %eax
	movl	(%eax), %eax
	.loc 6 3265 10
	testl	%eax, %eax
	jne	L1184
	.loc 6 3266 46
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	%eax, %edx
	movl	-12(%ebp), %eax
	addl	$1, %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbi__free_jpeg_componentsP10stbi__jpegii
	.loc 6 3266 93
	jmp	L1157
L1184:
	.loc 6 3267 68
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18128, %eax
	movl	(%eax), %eax
	.loc 6 3267 78
	addl	$15, %eax
	.loc 6 3267 84
	andl	$-16, %eax
	.loc 6 3267 31
	movl	%eax, %ebx
	movl	8(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18136, %eax
	movl	%ebx, (%eax)
L1183:
	.loc 6 3239 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1185
L1181:
	.loc 6 3271 11
	movl	$1, %eax
L1157:
	.loc 6 3272 1
	addl	$52, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1870:
	.section .rdata,"dr"
LC68:
	.ascii "no SOI\0"
LC69:
	.ascii "no SOF\0"
	.text
	.def	__ZL24stbi__decode_jpeg_headerP10stbi__jpegi;	.scl	3;	.type	32;	.endef
__ZL24stbi__decode_jpeg_headerP10stbi__jpegi:
LFB1871:
	.loc 6 3284 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 3286 12
	movl	8(%ebp), %eax
	movl	$0, 18404(%eax)
	.loc 6 3287 29
	movl	8(%ebp), %eax
	movl	$-1, 18408(%eax)
	.loc 6 3288 14
	movl	8(%ebp), %eax
	movb	$-1, 18372(%eax)
	.loc 6 3289 24
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__get_markerP10stbi__jpeg
	movzbl	%al, %eax
	.loc 6 3289 6
	movl	%eax, -12(%ebp)
	.loc 6 3290 8
	movl	-12(%ebp), %eax
	.loc 6 3290 4
	cmpl	$216, %eax
	je	L1187
	.loc 6 3290 30 discriminator 1
	movl	$LC68, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1197
L1187:
	.loc 6 3291 4
	cmpl	$1, 12(%ebp)
	jne	L1189
	.loc 6 3291 40 discriminator 1
	movl	$1, %eax
	jmp	L1197
L1189:
	.loc 6 3292 24
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__get_markerP10stbi__jpeg
	movzbl	%al, %eax
	.loc 6 3292 6
	movl	%eax, -12(%ebp)
L1195:
	.loc 6 3293 12
	movl	-12(%ebp), %eax
	.loc 6 3293 11
	cmpl	$192, %eax
	je	L1190
	.loc 6 3293 12 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	$193, %eax
	je	L1190
	.loc 6 3293 12 is_stmt 0 discriminator 2
	movl	-12(%ebp), %eax
	.loc 6 3293 11 is_stmt 1 discriminator 2
	cmpl	$194, %eax
	je	L1190
	.loc 6 3294 32
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__process_markerP10stbi__jpegi
	.loc 6 3294 11
	testl	%eax, %eax
	sete	%al
	.loc 6 3294 7
	testb	%al, %al
	je	L1191
	.loc 6 3294 46 discriminator 2
	movl	$0, %eax
	jmp	L1197
L1191:
	.loc 6 3295 27
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__get_markerP10stbi__jpeg
	movzbl	%al, %eax
	.loc 6 3295 9
	movl	%eax, -12(%ebp)
L1194:
	.loc 6 3296 16
	movl	-12(%ebp), %eax
	cmpl	$255, %eax
	jne	L1195
	.loc 6 3298 26
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 3298 32
	testl	%eax, %eax
	setne	%al
	.loc 6 3298 10
	testb	%al, %al
	je	L1193
	.loc 6 3298 41 discriminator 2
	movl	$LC69, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1197
L1193:
	.loc 6 3299 30
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__get_markerP10stbi__jpeg
	movzbl	%al, %eax
	.loc 6 3299 12
	movl	%eax, -12(%ebp)
	.loc 6 3296 7
	jmp	L1194
L1190:
	.loc 6 3302 21
	movl	-12(%ebp), %eax
	cmpl	$194, %eax
	sete	%al
	movzbl	%al, %edx
	.loc 6 3302 19
	movl	8(%ebp), %eax
	movl	%edx, 18380(%eax)
	.loc 6 3303 35
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbi__process_frame_headerP10stbi__jpegi
	.loc 6 3303 8
	testl	%eax, %eax
	sete	%al
	.loc 6 3303 4
	testb	%al, %al
	je	L1196
	.loc 6 3303 53 discriminator 2
	movl	$0, %eax
	jmp	L1197
L1196:
	.loc 6 3304 11
	movl	$1, %eax
L1197:
	.loc 6 3305 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1871:
	.section .rdata,"dr"
LC70:
	.ascii "bad DNL len\0"
LC71:
	.ascii "bad DNL height\0"
	.text
	.def	__ZL23stbi__decode_jpeg_imageP10stbi__jpeg;	.scl	3;	.type	32;	.endef
__ZL23stbi__decode_jpeg_imageP10stbi__jpeg:
LFB1872:
	.loc 6 3309 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 3311 11
	movl	$0, -24(%ebp)
L1200:
	.loc 6 3311 18 discriminator 3
	movl	-24(%ebp), %eax
	cmpl	$3, %eax
	jg	L1199
	.loc 6 3312 22 discriminator 2
	movl	-24(%ebp), %edx
	.loc 6 3312 31 discriminator 2
	movl	8(%ebp), %ecx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18124, %eax
	movl	$0, (%eax)
	.loc 6 3313 22 discriminator 2
	movl	-24(%ebp), %edx
	.loc 6 3313 32 discriminator 2
	movl	8(%ebp), %ecx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18128, %eax
	movl	$0, (%eax)
	.loc 6 3311 4 discriminator 2
	movl	-24(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -24(%ebp)
	jmp	L1200
L1199:
	.loc 6 3315 24
	movl	8(%ebp), %eax
	movl	$0, 18436(%eax)
	.loc 6 3316 33
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__decode_jpeg_headerP10stbi__jpegi
	.loc 6 3316 8
	testl	%eax, %eax
	sete	%al
	.loc 6 3316 4
	testb	%al, %al
	je	L1201
	.loc 6 3316 62 discriminator 2
	movl	$0, %eax
	jmp	L1217
L1201:
	.loc 6 3317 24
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__get_markerP10stbi__jpeg
	movzbl	%al, %eax
	.loc 6 3317 6
	movl	%eax, -24(%ebp)
L1215:
	.loc 6 3318 11
	movl	-24(%ebp), %eax
	cmpl	$217, %eax
	je	L1203
LBB239:
LBB240:
	.loc 6 3319 11
	movl	-24(%ebp), %eax
	.loc 6 3319 7
	cmpl	$218, %eax
	jne	L1204
LBB241:
	.loc 6 3320 40
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL25stbi__process_scan_headerP10stbi__jpeg
	.loc 6 3320 14
	testl	%eax, %eax
	sete	%al
	.loc 6 3320 10
	testb	%al, %al
	je	L1205
	.loc 6 3320 52 discriminator 2
	movl	$0, %eax
	jmp	L1217
L1205:
	.loc 6 3321 45
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL30stbi__parse_entropy_coded_dataP10stbi__jpeg
	.loc 6 3321 14
	testl	%eax, %eax
	sete	%al
	.loc 6 3321 10
	testb	%al, %al
	je	L1206
	.loc 6 3321 57 discriminator 2
	movl	$0, %eax
	jmp	L1217
L1206:
LBB242:
	.loc 6 3322 17
	movl	8(%ebp), %eax
	movzbl	18372(%eax), %eax
	.loc 6 3322 10
	cmpb	$-1, %al
	jne	L1211
L1210:
LBB243:
	.loc 6 3324 33
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 3324 20
	testl	%eax, %eax
	sete	%al
	testb	%al, %al
	je	L1211
LBB244:
	.loc 6 3325 34
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 3325 39
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 6 3326 16
	cmpl	$255, -12(%ebp)
	jne	L1210
	.loc 6 3327 41
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 3327 29
	movl	8(%ebp), %eax
	movb	%dl, 18372(%eax)
	.loc 6 3328 19
	jmp	L1211
L1204:
LBE244:
LBE243:
LBE242:
LBE241:
LBB245:
LBB246:
	.loc 6 3333 18
	movl	-24(%ebp), %eax
	.loc 6 3333 14
	cmpl	$220, %eax
	jne	L1212
LBB247:
	.loc 6 3334 32
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -16(%ebp)
	.loc 6 3335 41
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 3335 46
	movl	%eax, -20(%ebp)
	.loc 6 3336 10
	cmpl	$4, -16(%ebp)
	je	L1213
	.loc 6 3336 30 discriminator 1
	movl	$LC70, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1217
L1213:
	.loc 6 3337 23
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3337 26
	movl	4(%eax), %eax
	.loc 6 3337 10
	cmpl	%eax, -20(%ebp)
	je	L1211
	.loc 6 3337 40 discriminator 1
	movl	$LC71, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1217
L1212:
LBE247:
	.loc 6 3339 35
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__process_markerP10stbi__jpegi
	.loc 6 3339 14
	testl	%eax, %eax
	sete	%al
	.loc 6 3339 10
	testb	%al, %al
	je	L1211
	.loc 6 3339 50 discriminator 2
	movl	$0, %eax
	jmp	L1217
L1211:
LBE246:
LBE245:
LBE240:
	.loc 6 3341 27
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__get_markerP10stbi__jpeg
	movzbl	%al, %eax
	.loc 6 3341 9
	movl	%eax, -24(%ebp)
LBE239:
	.loc 6 3318 4
	jmp	L1215
L1203:
	.loc 6 3343 11
	movl	8(%ebp), %eax
	movl	18380(%eax), %eax
	.loc 6 3343 4
	testl	%eax, %eax
	je	L1216
	.loc 6 3344 24
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbi__jpeg_finishP10stbi__jpeg
L1216:
	.loc 6 3345 11
	movl	$1, %eax
L1217:
	.loc 6 3346 1 discriminator 2
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1872:
	.def	__ZL14resample_row_1PhS_S_ii;	.scl	3;	.type	32;	.endef
__ZL14resample_row_1PhS_S_ii:
LFB1873:
	.loc 6 3356 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 3361 11
	movl	12(%ebp), %eax
	.loc 6 3362 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1873:
	.def	__ZL22stbi__resample_row_v_2PhS_S_ii;	.scl	3;	.type	32;	.endef
__ZL22stbi__resample_row_v_2PhS_S_ii:
LFB1874:
	.loc 6 3365 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 6 3369 10
	movl	$0, -4(%ebp)
L1222:
	.loc 6 3369 16 discriminator 3
	movl	-4(%ebp), %eax
	cmpl	20(%ebp), %eax
	jge	L1221
	.loc 6 3370 16 discriminator 2
	movl	-4(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	%edx, %eax
	addl	%eax, %eax
	leal	(%eax,%edx), %ecx
	movl	-4(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	addl	%ecx, %eax
	addl	$2, %eax
	sarl	$2, %eax
	movl	%eax, %ecx
	.loc 6 3370 12 discriminator 2
	movl	-4(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3370 14 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 6 3369 4 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L1222
L1221:
	.loc 6 3371 11
	movl	8(%ebp), %eax
	.loc 6 3372 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1874:
	.def	__ZL22stbi__resample_row_h_2PhS_S_ii;	.scl	3;	.type	32;	.endef
__ZL22stbi__resample_row_h_2PhS_S_ii:
LFB1875:
	.loc 6 3375 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 6 3378 13
	movl	12(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 6 3380 4
	cmpl	$1, 20(%ebp)
	jne	L1225
	.loc 6 3382 21
	movl	8(%ebp), %eax
	addl	$1, %eax
	.loc 6 3382 32
	movl	-8(%ebp), %edx
	movzbl	(%edx), %edx
	.loc 6 3382 23
	movb	%dl, (%eax)
	.loc 6 3382 21
	movzbl	(%eax), %edx
	.loc 6 3382 14
	movl	8(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 3383 14
	movl	8(%ebp), %eax
	jmp	L1226
L1225:
	.loc 6 3386 20
	movl	-8(%ebp), %eax
	movzbl	(%eax), %edx
	.loc 6 3386 11
	movl	8(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 3387 13
	movl	-8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%eax, %edx
	movl	-8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	addl	%edx, %eax
	addl	$2, %eax
	sarl	$2, %eax
	movl	%eax, %edx
	.loc 6 3387 9
	movl	8(%ebp), %eax
	addl	$1, %eax
	.loc 6 3387 11
	movb	%dl, (%eax)
LBB248:
	.loc 6 3388 10
	movl	$1, -4(%ebp)
L1228:
	.loc 6 3388 19 discriminator 3
	movl	20(%ebp), %eax
	subl	$1, %eax
	.loc 6 3388 16 discriminator 3
	cmpl	%eax, -4(%ebp)
	jge	L1227
LBB249:
	.loc 6 3389 24 discriminator 2
	movl	-4(%ebp), %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 6 3389 16 discriminator 2
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	.loc 6 3389 11 discriminator 2
	addl	$2, %eax
	movl	%eax, -12(%ebp)
	.loc 6 3390 20 discriminator 2
	movl	-4(%ebp), %eax
	leal	-1(%eax), %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	sarl	$2, %eax
	movl	%eax, %edx
	.loc 6 3390 12 discriminator 2
	movl	-4(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, %ecx
	.loc 6 3390 16 discriminator 2
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 3390 18 discriminator 2
	movb	%dl, (%eax)
	.loc 6 3391 20 discriminator 2
	movl	-4(%ebp), %eax
	leal	1(%eax), %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	sarl	$2, %eax
	movl	%eax, %ecx
	.loc 6 3391 12 discriminator 2
	movl	-4(%ebp), %eax
	addl	%eax, %eax
	.loc 6 3391 16 discriminator 2
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3391 18 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
LBE249:
	.loc 6 3388 4 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L1228
L1227:
LBE248:
	.loc 6 3393 17
	movl	20(%ebp), %eax
	leal	-2(%eax), %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%eax, %edx
	movl	20(%ebp), %eax
	leal	-1(%eax), %ecx
	movl	-8(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	addl	%edx, %eax
	addl	$2, %eax
	sarl	$2, %eax
	movl	%eax, %edx
	.loc 6 3393 9
	movl	-4(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, %ecx
	.loc 6 3393 13
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 3393 15
	movb	%dl, (%eax)
	.loc 6 3394 26
	movl	20(%ebp), %eax
	leal	-1(%eax), %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3394 9
	movl	-4(%ebp), %edx
	addl	%edx, %edx
	.loc 6 3394 13
	leal	1(%edx), %ecx
	movl	8(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 3394 26
	movzbl	(%eax), %eax
	.loc 6 3394 15
	movb	%al, (%edx)
	.loc 6 3399 11
	movl	8(%ebp), %eax
L1226:
	.loc 6 3400 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1875:
	.def	__ZL23stbi__resample_row_hv_2PhS_S_ii;	.scl	3;	.type	32;	.endef
__ZL23stbi__resample_row_hv_2PhS_S_ii:
LFB1876:
	.loc 6 3405 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 6 3408 4
	cmpl	$1, 20(%ebp)
	jne	L1230
	.loc 6 3409 25
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%eax, %edx
	movl	16(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	addl	%edx, %eax
	addl	$2, %eax
	sarl	$2, %eax
	movl	%eax, %edx
	.loc 6 3409 21
	movl	8(%ebp), %eax
	addl	$1, %eax
	.loc 6 3409 23
	movb	%dl, (%eax)
	.loc 6 3409 21
	movzbl	(%eax), %edx
	.loc 6 3409 14
	movl	8(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 3410 14
	movl	8(%ebp), %eax
	jmp	L1231
L1230:
	.loc 6 3413 20
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 6 3413 10
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%eax, %edx
	.loc 6 3413 32
	movl	16(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 3413 7
	addl	%edx, %eax
	movl	%eax, -8(%ebp)
	.loc 6 3414 13
	movl	-8(%ebp), %eax
	addl	$2, %eax
	sarl	$2, %eax
	.loc 6 3414 11
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 3415 10
	movl	$1, -4(%ebp)
L1233:
	.loc 6 3415 16 discriminator 3
	movl	-4(%ebp), %eax
	cmpl	20(%ebp), %eax
	jge	L1232
	.loc 6 3416 10 discriminator 2
	movl	-8(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 6 3417 23 discriminator 2
	movl	-4(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 6 3417 13 discriminator 2
	movl	%edx, %eax
	addl	%eax, %eax
	leal	(%eax,%edx), %ecx
	.loc 6 3417 33 discriminator 2
	movl	-4(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 3417 10 discriminator 2
	addl	%ecx, %eax
	movl	%eax, -8(%ebp)
	.loc 6 3418 20 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%eax, %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	addl	$8, %eax
	sarl	$4, %eax
	movl	%eax, %ecx
	.loc 6 3418 12 discriminator 2
	movl	-4(%ebp), %eax
	addl	%eax, %eax
	.loc 6 3418 16 discriminator 2
	leal	-1(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3418 18 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 6 3419 20 discriminator 2
	movl	-8(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%eax, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	addl	$8, %eax
	sarl	$4, %eax
	movl	%eax, %edx
	.loc 6 3419 12 discriminator 2
	movl	-4(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, %ecx
	.loc 6 3419 16 discriminator 2
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 3419 18 discriminator 2
	movb	%dl, (%eax)
	.loc 6 3415 4 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L1233
L1232:
	.loc 6 3421 17
	movl	-8(%ebp), %eax
	addl	$2, %eax
	sarl	$2, %eax
	movl	%eax, %ecx
	.loc 6 3421 9
	movl	20(%ebp), %eax
	addl	%eax, %eax
	.loc 6 3421 13
	leal	-1(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3421 15
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 6 3425 11
	movl	8(%ebp), %eax
L1231:
	.loc 6 3426 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1876:
	.def	__ZL26stbi__resample_row_genericPhS_S_ii;	.scl	3;	.type	32;	.endef
__ZL26stbi__resample_row_genericPhS_S_ii:
LFB1877:
	.loc 6 3546 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 6 3550 10
	movl	$0, -4(%ebp)
L1238:
	.loc 6 3550 16 discriminator 1
	movl	-4(%ebp), %eax
	cmpl	20(%ebp), %eax
	jge	L1235
	.loc 6 3551 13
	movl	$0, -8(%ebp)
L1237:
	.loc 6 3551 19 discriminator 3
	movl	-8(%ebp), %eax
	cmpl	24(%ebp), %eax
	jge	L1236
	.loc 6 3552 33 discriminator 2
	movl	-4(%ebp), %edx
	movl	12(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 6 3552 15 discriminator 2
	movl	-4(%ebp), %eax
	imull	24(%ebp), %eax
	movl	%eax, %edx
	.loc 6 3552 18 discriminator 2
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 6 3552 20 discriminator 2
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 6 3552 33 discriminator 2
	movzbl	(%ecx), %eax
	.loc 6 3552 22 discriminator 2
	movb	%al, (%edx)
	.loc 6 3551 7 discriminator 2
	addl	$1, -8(%ebp)
	jmp	L1237
L1236:
	.loc 6 3550 4 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L1238
L1235:
	.loc 6 3553 11
	movl	8(%ebp), %eax
	.loc 6 3554 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1877:
	.def	__ZL22stbi__YCbCr_to_RGB_rowPhPKhS1_S1_ii;	.scl	3;	.type	32;	.endef
__ZL22stbi__YCbCr_to_RGB_rowPhPKhS1_S1_ii:
LFB1878:
	.loc 6 3560 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$32, %esp
LBB250:
	.loc 6 3562 10
	movl	$0, -4(%ebp)
L1251:
	.loc 6 3562 16 discriminator 1
	movl	-4(%ebp), %eax
	cmpl	24(%ebp), %eax
	jge	L1252
LBB251:
	.loc 6 3563 25
	movl	-4(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 3563 27
	sall	$20, %eax
	.loc 6 3563 11
	addl	$524288, %eax
	movl	%eax, -20(%ebp)
	.loc 6 3565 21
	movl	-4(%ebp), %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 3565 11
	addl	$-128, %eax
	movl	%eax, -24(%ebp)
	.loc 6 3566 21
	movl	-4(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 3566 11
	addl	$-128, %eax
	movl	%eax, -28(%ebp)
	.loc 6 3567 24
	movl	-24(%ebp), %eax
	imull	$1470208, %eax, %edx
	.loc 6 3567 9
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -8(%ebp)
	.loc 6 3568 24
	movl	-24(%ebp), %eax
	imull	$-748800, %eax, %edx
	.loc 6 3568 19
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 6 3568 61
	movl	-28(%ebp), %eax
	imull	$-360960, %eax, %eax
	.loc 6 3568 92
	movw	$0, %ax
	.loc 6 3568 55
	addl	%edx, %eax
	.loc 6 3568 9
	movl	%eax, -12(%ebp)
	.loc 6 3569 61
	movl	-28(%ebp), %eax
	imull	$1858048, %eax, %edx
	.loc 6 3569 9
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -16(%ebp)
	.loc 6 3570 9
	sarl	$20, -8(%ebp)
	.loc 6 3571 9
	sarl	$20, -12(%ebp)
	.loc 6 3572 9
	sarl	$20, -16(%ebp)
	.loc 6 3573 11
	movl	-8(%ebp), %eax
	.loc 6 3573 7
	cmpl	$255, %eax
	jbe	L1242
	.loc 6 3573 33 discriminator 1
	cmpl	$0, -8(%ebp)
	jns	L1243
	.loc 6 3573 46 discriminator 2
	movl	$0, -8(%ebp)
	jmp	L1242
L1243:
	.loc 6 3573 58 discriminator 3
	movl	$255, -8(%ebp)
L1242:
	.loc 6 3574 11
	movl	-12(%ebp), %eax
	.loc 6 3574 7
	cmpl	$255, %eax
	jbe	L1245
	.loc 6 3574 33 discriminator 1
	cmpl	$0, -12(%ebp)
	jns	L1246
	.loc 6 3574 46 discriminator 2
	movl	$0, -12(%ebp)
	jmp	L1245
L1246:
	.loc 6 3574 58 discriminator 3
	movl	$255, -12(%ebp)
L1245:
	.loc 6 3575 11
	movl	-16(%ebp), %eax
	.loc 6 3575 7
	cmpl	$255, %eax
	jbe	L1248
	.loc 6 3575 33 discriminator 1
	cmpl	$0, -16(%ebp)
	jns	L1249
	.loc 6 3575 46 discriminator 2
	movl	$0, -16(%ebp)
	jmp	L1248
L1249:
	.loc 6 3575 58 discriminator 3
	movl	$255, -16(%ebp)
L1248:
	.loc 6 3576 14 discriminator 2
	movl	-8(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 3577 12 discriminator 2
	movl	8(%ebp), %eax
	addl	$1, %eax
	.loc 6 3577 14 discriminator 2
	movl	-12(%ebp), %edx
	movb	%dl, (%eax)
	.loc 6 3578 12 discriminator 2
	movl	8(%ebp), %eax
	addl	$2, %eax
	.loc 6 3578 14 discriminator 2
	movl	-16(%ebp), %edx
	movb	%dl, (%eax)
	.loc 6 3579 12 discriminator 2
	movl	8(%ebp), %eax
	addl	$3, %eax
	.loc 6 3579 14 discriminator 2
	movb	$-1, (%eax)
	.loc 6 3580 11 discriminator 2
	movl	28(%ebp), %eax
	addl	%eax, 8(%ebp)
LBE251:
	.loc 6 3562 4 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L1251
L1252:
LBE250:
	.loc 6 3582 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1878:
	.def	__ZL16stbi__setup_jpegP10stbi__jpeg;	.scl	3;	.type	32;	.endef
__ZL16stbi__setup_jpegP10stbi__jpeg:
LFB1879:
	.loc 6 3721 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 3722 25
	movl	8(%ebp), %eax
	movl	$__ZL16stbi__idct_blockPhiPs, 18444(%eax)
	.loc 6 3723 27
	movl	8(%ebp), %eax
	movl	$__ZL22stbi__YCbCr_to_RGB_rowPhPKhS1_S1_ii, 18448(%eax)
	.loc 6 3724 32
	movl	8(%ebp), %eax
	movl	$__ZL23stbi__resample_row_hv_2PhS_S_ii, 18452(%eax)
	.loc 6 3739 1
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1879:
	.def	__ZL18stbi__cleanup_jpegP10stbi__jpeg;	.scl	3;	.type	32;	.endef
__ZL18stbi__cleanup_jpegP10stbi__jpeg:
LFB1880:
	.loc 6 3743 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 3744 37
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3744 30
	movl	8(%eax), %eax
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbi__free_jpeg_componentsP10stbi__jpegii
	.loc 6 3745 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1880:
	.def	__ZL15stbi__blinn_8x8hh;	.scl	3;	.type	32;	.endef
__ZL15stbi__blinn_8x8hh:
LFB1881:
	.loc 6 3759 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	movl	8(%ebp), %edx
	movl	12(%ebp), %eax
	movb	%dl, -20(%ebp)
	movb	%al, -24(%ebp)
	.loc 6 3760 22
	movzbl	-20(%ebp), %edx
	movzbl	-24(%ebp), %eax
	imull	%edx, %eax
	.loc 6 3760 25
	subl	$-128, %eax
	.loc 6 3760 17
	movl	%eax, -4(%ebp)
	.loc 6 3761 30
	movl	-4(%ebp), %eax
	shrl	$8, %eax
	movl	%eax, %edx
	.loc 6 3761 25
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3761 36
	shrl	$8, %eax
	.loc 6 3762 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1881:
	.section .rdata,"dr"
LC72:
	.ascii "bad req_comp\0"
	.text
	.def	__ZL15load_jpeg_imageP10stbi__jpegPiS1_S1_i;	.scl	3;	.type	32;	.endef
__ZL15load_jpeg_imageP10stbi__jpegPiS1_S1_i:
LFB1882:
	.loc 6 3765 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$268, %esp
	.cfi_offset 7, -12
	.cfi_offset 6, -16
	.cfi_offset 3, -20
	.loc 6 3767 7
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3767 16
	movl	$0, 8(%eax)
	.loc 6 3770 4
	cmpl	$0, 24(%ebp)
	js	L1258
	.loc 6 3770 21 discriminator 2
	cmpl	$4, 24(%ebp)
	jle	L1259
L1258:
	.loc 6 3770 45 discriminator 3
	movl	$LC72, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1260
L1259:
	.loc 6 3773 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbi__decode_jpeg_imageP10stbi__jpeg
	.loc 6 3773 8
	testl	%eax, %eax
	sete	%al
	.loc 6 3773 4
	testb	%al, %al
	je	L1261
	.loc 6 3773 57 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__cleanup_jpegP10stbi__jpeg
	.loc 6 3773 69 discriminator 1
	movl	$0, %eax
	jmp	L1260
L1261:
	.loc 6 3776 17
	cmpl	$0, 24(%ebp)
	jne	L1262
	.loc 6 3776 33 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3776 36 discriminator 1
	movl	8(%eax), %eax
	.loc 6 3776 47 discriminator 1
	cmpl	$2, %eax
	jle	L1263
	.loc 6 3776 47 is_stmt 0 discriminator 3
	movl	$3, %eax
	jmp	L1265
L1263:
	.loc 6 3776 47 discriminator 4
	movl	$1, %eax
	jmp	L1265
L1262:
	.loc 6 3776 17 is_stmt 1 discriminator 2
	movl	24(%ebp), %eax
L1265:
	.loc 6 3776 6 discriminator 8
	movl	%eax, -48(%ebp)
	.loc 6 3778 16 discriminator 8
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3778 19 discriminator 8
	movl	8(%eax), %eax
	.loc 6 3778 30 discriminator 8
	cmpl	$3, %eax
	jne	L1266
	.loc 6 3778 37 discriminator 1
	movl	8(%ebp), %eax
	movl	18412(%eax), %eax
	.loc 6 3778 30 discriminator 1
	cmpl	$3, %eax
	je	L1267
	.loc 6 3778 53 discriminator 4
	movl	8(%ebp), %eax
	movl	18408(%eax), %eax
	.loc 6 3778 46 discriminator 4
	testl	%eax, %eax
	jne	L1266
	.loc 6 3778 87 discriminator 5
	movl	8(%ebp), %eax
	movl	18404(%eax), %eax
	.loc 6 3778 80 discriminator 5
	testl	%eax, %eax
	jne	L1266
L1267:
	.loc 6 3778 30 discriminator 7
	movl	$1, %eax
	jmp	L1268
L1266:
	.loc 6 3778 30 is_stmt 0 discriminator 8
	movl	$0, %eax
L1268:
	.loc 6 3778 11 is_stmt 1 discriminator 10
	movzbl	%al, %eax
	movl	%eax, -52(%ebp)
	.loc 6 3780 11 discriminator 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3780 14 discriminator 10
	movl	8(%eax), %eax
	.loc 6 3780 4 discriminator 10
	cmpl	$3, %eax
	jne	L1269
	.loc 6 3780 25 discriminator 1
	cmpl	$2, -48(%ebp)
	jg	L1269
	.loc 6 3780 34 discriminator 2
	cmpl	$0, -52(%ebp)
	jne	L1269
	.loc 6 3781 16
	movl	$1, -28(%ebp)
	jmp	L1270
L1269:
	.loc 6 3783 21
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3783 16
	movl	8(%eax), %eax
	movl	%eax, -28(%ebp)
L1270:
LBB252:
	.loc 6 3790 16
	movl	$0, -100(%ebp)
	movl	$0, -96(%ebp)
	movl	$0, -92(%ebp)
	movl	$0, -88(%ebp)
LBB253:
	.loc 6 3794 13
	movl	$0, -32(%ebp)
L1279:
	.loc 6 3794 19 discriminator 1
	movl	-32(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jge	L1271
LBB254:
	.loc 6 3795 26
	leal	-228(%ebp), %eax
	movl	-32(%ebp), %edx
	sall	$5, %edx
	addl	%edx, %eax
	movl	%eax, -56(%ebp)
	.loc 6 3799 63
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3799 66
	movl	(%eax), %eax
	.loc 6 3799 59
	addl	$3, %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, %ebx
	.loc 6 3799 33
	movl	8(%ebp), %ecx
	movl	-32(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18132, %eax
	movl	%ebx, (%eax)
	.loc 6 3800 30
	movl	8(%ebp), %ecx
	movl	-32(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18132, %eax
	movl	(%eax), %eax
	.loc 6 3800 10
	testl	%eax, %eax
	jne	L1272
	.loc 6 3800 59 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__cleanup_jpegP10stbi__jpeg
	.loc 6 3800 71 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1260
L1272:
	.loc 6 3802 26
	movl	8(%ebp), %eax
	movl	18052(%eax), %ecx
	.loc 6 3802 53
	movl	8(%ebp), %ebx
	movl	-32(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18080, %eax
	movl	(%eax), %edi
	.loc 6 3802 36
	movl	%ecx, %eax
	cltd
	idivl	%edi
	movl	%eax, %edx
	.loc 6 3802 21
	movl	-56(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 6 3803 26
	movl	8(%ebp), %eax
	movl	18056(%eax), %ecx
	.loc 6 3803 53
	movl	8(%ebp), %ebx
	movl	-32(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18084, %eax
	movl	(%eax), %edi
	.loc 6 3803 36
	movl	%ecx, %eax
	cltd
	idivl	%edi
	movl	%eax, %edx
	.loc 6 3803 21
	movl	-56(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 6 3804 26
	movl	-56(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 3804 29
	sarl	%eax
	movl	%eax, %edx
	.loc 6 3804 21
	movl	-56(%ebp), %eax
	movl	%edx, 24(%eax)
	.loc 6 3805 27
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3805 30
	movl	(%eax), %edx
	.loc 6 3805 41
	movl	-56(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 3805 36
	addl	%edx, %eax
	.loc 6 3805 43
	leal	-1(%eax), %edx
	.loc 6 3805 52
	movl	-56(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, %ecx
	.loc 6 3805 47
	movl	%edx, %eax
	movl	$0, %edx
	divl	%ecx
	movl	%eax, %edx
	.loc 6 3805 21
	movl	-56(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 6 3806 21
	movl	-56(%ebp), %eax
	movl	$0, 28(%eax)
	.loc 6 3807 49
	movl	8(%ebp), %ecx
	movl	-32(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ecx, %eax
	addl	$18120, %eax
	movl	(%eax), %edx
	.loc 6 3807 32
	movl	-56(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 6 3807 26
	movl	-56(%ebp), %eax
	movl	8(%eax), %edx
	.loc 6 3807 21
	movl	-56(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 6 3809 22
	movl	-56(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 3809 10
	cmpl	$1, %eax
	jne	L1274
	.loc 6 3809 36 discriminator 1
	movl	-56(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 3809 30 discriminator 1
	cmpl	$1, %eax
	jne	L1274
	.loc 6 3809 57 discriminator 2
	movl	-56(%ebp), %eax
	movl	$__ZL14resample_row_1PhS_S_ii, (%eax)
	jmp	L1275
L1274:
	.loc 6 3810 22
	movl	-56(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 3810 15
	cmpl	$1, %eax
	jne	L1276
	.loc 6 3810 36 discriminator 1
	movl	-56(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 3810 30 discriminator 1
	cmpl	$2, %eax
	jne	L1276
	.loc 6 3810 57 discriminator 2
	movl	-56(%ebp), %eax
	movl	$__ZL22stbi__resample_row_v_2PhS_S_ii, (%eax)
	jmp	L1275
L1276:
	.loc 6 3811 22
	movl	-56(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 3811 15
	cmpl	$2, %eax
	jne	L1277
	.loc 6 3811 36 discriminator 1
	movl	-56(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 3811 30 discriminator 1
	cmpl	$1, %eax
	jne	L1277
	.loc 6 3811 57 discriminator 2
	movl	-56(%ebp), %eax
	movl	$__ZL22stbi__resample_row_h_2PhS_S_ii, (%eax)
	jmp	L1275
L1277:
	.loc 6 3812 22
	movl	-56(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 3812 15
	cmpl	$2, %eax
	jne	L1278
	.loc 6 3812 36 discriminator 1
	movl	-56(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 3812 30 discriminator 1
	cmpl	$2, %eax
	jne	L1278
	.loc 6 3812 62 discriminator 2
	movl	8(%ebp), %eax
	movl	18452(%eax), %edx
	.loc 6 3812 57 discriminator 2
	movl	-56(%ebp), %eax
	movl	%edx, (%eax)
	jmp	L1275
L1278:
	.loc 6 3813 57
	movl	-56(%ebp), %eax
	movl	$__ZL26stbi__resample_row_genericPhS_S_ii, (%eax)
L1275:
LBE254:
	.loc 6 3794 7 discriminator 2
	addl	$1, -32(%ebp)
	jmp	L1279
L1271:
LBE253:
	.loc 6 3817 65
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3817 68
	movl	4(%eax), %eax
	.loc 6 3817 45
	movl	%eax, %edx
	.loc 6 3817 52
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3817 55
	movl	(%eax), %eax
	.loc 6 3817 45
	movl	$1, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad3iiii
	movl	%eax, -60(%ebp)
	.loc 6 3818 7
	cmpl	$0, -60(%ebp)
	jne	L1280
	.loc 6 3818 40 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__cleanup_jpegP10stbi__jpeg
	.loc 6 3818 52 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1260
L1280:
LBB255:
	.loc 6 3821 13
	movl	$0, -40(%ebp)
L1318:
	.loc 6 3821 24 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3821 27 discriminator 1
	movl	4(%eax), %eax
	.loc 6 3821 19 discriminator 1
	cmpl	%eax, -40(%ebp)
	jnb	L1281
LBB256:
	.loc 6 3822 41
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3822 44
	movl	(%eax), %edx
	.loc 6 3822 36
	movl	-48(%ebp), %eax
	imull	%edx, %eax
	.loc 6 3822 50
	imull	-40(%ebp), %eax
	movl	%eax, %edx
	.loc 6 3822 19
	movl	-60(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -44(%ebp)
LBB257:
	.loc 6 3823 16
	movl	$0, -32(%ebp)
L1288:
	.loc 6 3823 22 discriminator 1
	movl	-32(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jge	L1282
LBB258:
	.loc 6 3824 29
	leal	-228(%ebp), %eax
	movl	-32(%ebp), %edx
	sall	$5, %edx
	addl	%edx, %eax
	movl	%eax, -64(%ebp)
	.loc 6 3825 28
	movl	-64(%ebp), %eax
	movl	24(%eax), %edx
	.loc 6 3825 41
	movl	-64(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 3825 44
	sarl	%eax
	.loc 6 3825 34
	cmpl	%eax, %edx
	setge	%al
	.loc 6 3825 17
	movzbl	%al, %eax
	movl	%eax, -68(%ebp)
	.loc 6 3826 29
	movl	-64(%ebp), %eax
	movl	(%eax), %esi
	.loc 6 3826 37
	movl	-64(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -236(%ebp)
	movl	-64(%ebp), %eax
	movl	20(%eax), %edi
	cmpl	$0, -68(%ebp)
	je	L1283
	.loc 6 3826 37 is_stmt 0 discriminator 1
	movl	-64(%ebp), %eax
	movl	4(%eax), %ebx
	jmp	L1284
L1283:
	.loc 6 3826 37 discriminator 2
	movl	-64(%ebp), %eax
	movl	8(%eax), %ebx
L1284:
	.loc 6 3826 37 discriminator 4
	cmpl	$0, -68(%ebp)
	je	L1285
	.loc 6 3826 37 discriminator 5
	movl	-64(%ebp), %eax
	movl	8(%eax), %ecx
	jmp	L1286
L1285:
	.loc 6 3826 37 discriminator 6
	movl	-64(%ebp), %eax
	movl	4(%eax), %ecx
L1286:
	.loc 6 3826 37 discriminator 8
	movl	8(%ebp), %eax
	movl	%eax, -240(%ebp)
	movl	-32(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	-240(%ebp), %eax
	addl	$18132, %eax
	movl	(%eax), %eax
	movl	-236(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	%edi, 12(%esp)
	movl	%ebx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	*%esi
LVL36:
	movl	%eax, %edx
	.loc 6 3826 24 is_stmt 1 discriminator 8
	movl	-32(%ebp), %eax
	movl	%edx, -100(%ebp,%eax,4)
	.loc 6 3830 22 discriminator 8
	movl	-64(%ebp), %eax
	movl	24(%eax), %eax
	.loc 6 3830 17 discriminator 8
	leal	1(%eax), %edx
	.loc 6 3830 28 discriminator 8
	movl	-64(%ebp), %eax
	movl	%edx, 24(%eax)
	.loc 6 3830 22 discriminator 8
	movl	-64(%ebp), %eax
	movl	24(%eax), %edx
	.loc 6 3830 34 discriminator 8
	movl	-64(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 3830 28 discriminator 8
	cmpl	%eax, %edx
	setge	%al
	.loc 6 3830 13 discriminator 8
	testb	%al, %al
	je	L1287
	.loc 6 3831 25
	movl	-64(%ebp), %eax
	movl	$0, 24(%eax)
	.loc 6 3832 30
	movl	-64(%ebp), %eax
	movl	8(%eax), %edx
	.loc 6 3832 25
	movl	-64(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 6 3833 25
	movl	-64(%ebp), %eax
	movl	28(%eax), %eax
	.loc 6 3833 20
	leal	1(%eax), %edx
	.loc 6 3833 30
	movl	-64(%ebp), %eax
	movl	%edx, 28(%eax)
	.loc 6 3833 25
	movl	-64(%ebp), %eax
	movl	28(%eax), %ecx
	.loc 6 3833 47
	movl	8(%ebp), %ebx
	movl	-32(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18108, %eax
	movl	(%eax), %eax
	.loc 6 3833 30
	cmpl	%eax, %ecx
	setl	%al
	.loc 6 3833 16
	testb	%al, %al
	je	L1287
	.loc 6 3834 28
	movl	-64(%ebp), %eax
	movl	8(%eax), %ecx
	.loc 6 3834 46
	movl	8(%ebp), %ebx
	movl	-32(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	addl	%edx, %eax
	sall	$3, %eax
	addl	%ebx, %eax
	addl	$18112, %eax
	movl	(%eax), %eax
	.loc 6 3834 28
	leal	(%ecx,%eax), %edx
	movl	-64(%ebp), %eax
	movl	%edx, 8(%eax)
L1287:
LBE258:
	.loc 6 3823 10 discriminator 2
	addl	$1, -32(%ebp)
	jmp	L1288
L1282:
LBE257:
LBB259:
	.loc 6 3837 10
	cmpl	$2, -48(%ebp)
	jle	L1289
LBB260:
	.loc 6 3838 22
	movl	-100(%ebp), %eax
	movl	%eax, -72(%ebp)
LBB261:
	.loc 6 3839 20
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3839 23
	movl	8(%eax), %eax
	.loc 6 3839 13
	cmpl	$3, %eax
	jne	L1290
	.loc 6 3840 16
	cmpl	$0, -52(%ebp)
	je	L1291
	.loc 6 3841 25
	movl	$0, -36(%ebp)
L1293:
	.loc 6 3841 36 discriminator 3
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3841 39 discriminator 3
	movl	(%eax), %eax
	.loc 6 3841 31 discriminator 3
	cmpl	%eax, -36(%ebp)
	jnb	L1304
	.loc 6 3842 34 discriminator 2
	movl	-72(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 6 3842 29 discriminator 2
	movl	-44(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 3843 40 discriminator 2
	movl	-96(%ebp), %edx
	.loc 6 3843 43 discriminator 2
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3843 27 discriminator 2
	movl	-44(%ebp), %edx
	addl	$1, %edx
	.loc 6 3843 43 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 3843 29 discriminator 2
	movb	%al, (%edx)
	.loc 6 3844 40 discriminator 2
	movl	-92(%ebp), %edx
	.loc 6 3844 43 discriminator 2
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3844 27 discriminator 2
	movl	-44(%ebp), %edx
	addl	$2, %edx
	.loc 6 3844 43 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 3844 29 discriminator 2
	movb	%al, (%edx)
	.loc 6 3845 27 discriminator 2
	movl	-44(%ebp), %eax
	addl	$3, %eax
	.loc 6 3845 29 discriminator 2
	movb	$-1, (%eax)
	.loc 6 3846 26 discriminator 2
	movl	-48(%ebp), %eax
	addl	%eax, -44(%ebp)
	.loc 6 3841 19 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1293
L1291:
	.loc 6 3849 22
	movl	8(%ebp), %eax
	movl	18448(%eax), %eax
	.loc 6 3849 77
	movl	8(%ebp), %edx
	movl	(%edx), %edx
	.loc 6 3849 80
	movl	(%edx), %edx
	.loc 6 3849 41
	movl	%edx, %esi
	.loc 6 3849 71
	movl	-92(%ebp), %ecx
	.loc 6 3849 59
	movl	-96(%ebp), %edx
	.loc 6 3849 41
	movl	-48(%ebp), %ebx
	movl	%ebx, 20(%esp)
	movl	%esi, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	-72(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-44(%ebp), %edx
	movl	%edx, (%esp)
	call	*%eax
LVL37:
	jmp	L1304
L1290:
LBB262:
LBB263:
	.loc 6 3851 27
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3851 30
	movl	8(%eax), %eax
	.loc 6 3851 20
	cmpl	$4, %eax
	jne	L1295
LBB264:
LBB265:
	.loc 6 3852 23
	movl	8(%ebp), %eax
	movl	18408(%eax), %eax
	.loc 6 3852 16
	testl	%eax, %eax
	jne	L1296
LBB266:
LBB267:
	.loc 6 3853 25
	movl	$0, -36(%ebp)
L1298:
	.loc 6 3853 36 discriminator 3
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3853 39 discriminator 3
	movl	(%eax), %eax
	.loc 6 3853 31 discriminator 3
	cmpl	%eax, -36(%ebp)
	jnb	L1304
LBB268:
	.loc 6 3854 43 discriminator 2
	movl	-88(%ebp), %edx
	.loc 6 3854 46 discriminator 2
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3854 30 discriminator 2
	movzbl	(%eax), %eax
	movb	%al, -73(%ebp)
	.loc 6 3855 46 discriminator 2
	movzbl	-73(%ebp), %edx
	.loc 6 3855 56 discriminator 2
	movl	-100(%ebp), %ecx
	.loc 6 3855 59 discriminator 2
	movl	-36(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 6 3855 46 discriminator 2
	movzbl	%al, %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__blinn_8x8hh
	movl	%eax, %edx
	.loc 6 3855 29 discriminator 2
	movl	-44(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 3856 46 discriminator 2
	movzbl	-73(%ebp), %edx
	.loc 6 3856 56 discriminator 2
	movl	-96(%ebp), %ecx
	.loc 6 3856 59 discriminator 2
	movl	-36(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 6 3856 46 discriminator 2
	movzbl	%al, %eax
	.loc 6 3856 27 discriminator 2
	movl	-44(%ebp), %ecx
	leal	1(%ecx), %ebx
	.loc 6 3856 46 discriminator 2
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__blinn_8x8hh
	.loc 6 3856 29 discriminator 2
	movb	%al, (%ebx)
	.loc 6 3857 46 discriminator 2
	movzbl	-73(%ebp), %edx
	.loc 6 3857 56 discriminator 2
	movl	-92(%ebp), %ecx
	.loc 6 3857 59 discriminator 2
	movl	-36(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 6 3857 46 discriminator 2
	movzbl	%al, %eax
	.loc 6 3857 27 discriminator 2
	movl	-44(%ebp), %ecx
	leal	2(%ecx), %ebx
	.loc 6 3857 46 discriminator 2
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__blinn_8x8hh
	.loc 6 3857 29 discriminator 2
	movb	%al, (%ebx)
	.loc 6 3858 27 discriminator 2
	movl	-44(%ebp), %eax
	addl	$3, %eax
	.loc 6 3858 29 discriminator 2
	movb	$-1, (%eax)
	.loc 6 3859 26 discriminator 2
	movl	-48(%ebp), %eax
	addl	%eax, -44(%ebp)
LBE268:
	.loc 6 3853 19 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1298
L1296:
LBE267:
LBE266:
LBB269:
LBB270:
	.loc 6 3861 30
	movl	8(%ebp), %eax
	movl	18408(%eax), %eax
	.loc 6 3861 23
	cmpl	$2, %eax
	jne	L1300
LBB271:
	.loc 6 3862 22
	movl	8(%ebp), %eax
	movl	18448(%eax), %eax
	.loc 6 3862 77
	movl	8(%ebp), %edx
	movl	(%edx), %edx
	.loc 6 3862 80
	movl	(%edx), %edx
	.loc 6 3862 41
	movl	%edx, %esi
	.loc 6 3862 71
	movl	-92(%ebp), %ecx
	.loc 6 3862 59
	movl	-96(%ebp), %edx
	.loc 6 3862 41
	movl	-48(%ebp), %ebx
	movl	%ebx, 20(%esp)
	movl	%esi, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	-72(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-44(%ebp), %edx
	movl	%edx, (%esp)
	call	*%eax
LVL38:
LBB272:
	.loc 6 3863 25
	movl	$0, -36(%ebp)
L1302:
	.loc 6 3863 36 discriminator 3
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3863 39 discriminator 3
	movl	(%eax), %eax
	.loc 6 3863 31 discriminator 3
	cmpl	%eax, -36(%ebp)
	jnb	L1304
LBB273:
	.loc 6 3864 43 discriminator 2
	movl	-88(%ebp), %edx
	.loc 6 3864 46 discriminator 2
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3864 30 discriminator 2
	movzbl	(%eax), %eax
	movb	%al, -74(%ebp)
	.loc 6 3865 46 discriminator 2
	movzbl	-74(%ebp), %edx
	.loc 6 3865 58 discriminator 2
	movl	-44(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 3865 51 discriminator 2
	notl	%eax
	.loc 6 3865 46 discriminator 2
	movzbl	%al, %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__blinn_8x8hh
	movl	%eax, %edx
	.loc 6 3865 29 discriminator 2
	movl	-44(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 3866 46 discriminator 2
	movzbl	-74(%ebp), %edx
	.loc 6 3866 58 discriminator 2
	movl	-44(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	.loc 6 3866 51 discriminator 2
	notl	%eax
	.loc 6 3866 46 discriminator 2
	movzbl	%al, %eax
	.loc 6 3866 27 discriminator 2
	movl	-44(%ebp), %ecx
	leal	1(%ecx), %ebx
	.loc 6 3866 46 discriminator 2
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__blinn_8x8hh
	.loc 6 3866 29 discriminator 2
	movb	%al, (%ebx)
	.loc 6 3867 46 discriminator 2
	movzbl	-74(%ebp), %edx
	.loc 6 3867 58 discriminator 2
	movl	-44(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	.loc 6 3867 51 discriminator 2
	notl	%eax
	.loc 6 3867 46 discriminator 2
	movzbl	%al, %eax
	.loc 6 3867 27 discriminator 2
	movl	-44(%ebp), %ecx
	leal	2(%ecx), %ebx
	.loc 6 3867 46 discriminator 2
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__blinn_8x8hh
	.loc 6 3867 29 discriminator 2
	movb	%al, (%ebx)
	.loc 6 3868 26 discriminator 2
	movl	-48(%ebp), %eax
	addl	%eax, -44(%ebp)
LBE273:
	.loc 6 3863 19 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1302
L1300:
LBE272:
LBE271:
	.loc 6 3871 22
	movl	8(%ebp), %eax
	movl	18448(%eax), %eax
	.loc 6 3871 77
	movl	8(%ebp), %edx
	movl	(%edx), %edx
	.loc 6 3871 80
	movl	(%edx), %edx
	.loc 6 3871 41
	movl	%edx, %esi
	.loc 6 3871 71
	movl	-92(%ebp), %ecx
	.loc 6 3871 59
	movl	-96(%ebp), %edx
	.loc 6 3871 41
	movl	-48(%ebp), %ebx
	movl	%ebx, 20(%esp)
	movl	%esi, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	-72(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-44(%ebp), %edx
	movl	%edx, (%esp)
	call	*%eax
LVL39:
	jmp	L1304
L1295:
LBE270:
LBE269:
LBE265:
LBE264:
	.loc 6 3874 22
	movl	$0, -36(%ebp)
L1303:
	.loc 6 3874 33 discriminator 3
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3874 36 discriminator 3
	movl	(%eax), %eax
	.loc 6 3874 28 discriminator 3
	cmpl	%eax, -36(%ebp)
	jnb	L1304
	.loc 6 3875 49 discriminator 2
	movl	-72(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3875 42 discriminator 2
	movl	-44(%ebp), %edx
	addl	$2, %edx
	.loc 6 3875 49 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 3875 44 discriminator 2
	movb	%al, (%edx)
	.loc 6 3875 33 discriminator 2
	movl	-44(%ebp), %eax
	addl	$1, %eax
	.loc 6 3875 42 discriminator 2
	movzbl	(%edx), %edx
	.loc 6 3875 35 discriminator 2
	movb	%dl, (%eax)
	.loc 6 3875 33 discriminator 2
	movzbl	(%eax), %edx
	.loc 6 3875 26 discriminator 2
	movl	-44(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 3876 24 discriminator 2
	movl	-44(%ebp), %eax
	addl	$3, %eax
	.loc 6 3876 26 discriminator 2
	movb	$-1, (%eax)
	.loc 6 3877 23 discriminator 2
	movl	-48(%ebp), %eax
	addl	%eax, -44(%ebp)
	.loc 6 3874 16 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1303
L1289:
LBE263:
LBE262:
LBE261:
LBE260:
LBB274:
LBB275:
	.loc 6 3880 13
	cmpl	$0, -52(%ebp)
	je	L1305
	.loc 6 3881 16
	cmpl	$1, -48(%ebp)
	jne	L1306
	.loc 6 3882 25
	movl	$0, -36(%ebp)
L1307:
	.loc 6 3882 36 discriminator 3
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3882 39 discriminator 3
	movl	(%eax), %eax
	.loc 6 3882 31 discriminator 3
	cmpl	%eax, -36(%ebp)
	jnb	L1304
	.loc 6 3883 86 discriminator 2
	movl	-92(%ebp), %edx
	.loc 6 3883 89 discriminator 2
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 6 3883 46 discriminator 2
	movzbl	%al, %ecx
	.loc 6 3883 71 discriminator 2
	movl	-96(%ebp), %edx
	.loc 6 3883 74 discriminator 2
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 6 3883 46 discriminator 2
	movzbl	%al, %edx
	.loc 6 3883 56 discriminator 2
	movl	-100(%ebp), %ebx
	.loc 6 3883 59 discriminator 2
	movl	-36(%ebp), %eax
	addl	%ebx, %eax
	movzbl	(%eax), %eax
	.loc 6 3883 46 discriminator 2
	movzbl	%al, %eax
	.loc 6 3883 26 discriminator 2
	movl	-44(%ebp), %ebx
	leal	1(%ebx), %esi
	movl	%esi, -44(%ebp)
	.loc 6 3883 46 discriminator 2
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__compute_yiii
	.loc 6 3883 29 discriminator 2
	movb	%al, (%ebx)
	.loc 6 3882 19 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1307
L1306:
	.loc 6 3885 25
	movl	$0, -36(%ebp)
L1308:
	.loc 6 3885 36 discriminator 3
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3885 39 discriminator 3
	movl	(%eax), %eax
	.loc 6 3885 31 discriminator 3
	cmpl	%eax, -36(%ebp)
	jnb	L1304
	.loc 6 3886 86 discriminator 2
	movl	-92(%ebp), %edx
	.loc 6 3886 89 discriminator 2
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 6 3886 46 discriminator 2
	movzbl	%al, %ecx
	.loc 6 3886 71 discriminator 2
	movl	-96(%ebp), %edx
	.loc 6 3886 74 discriminator 2
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 6 3886 46 discriminator 2
	movzbl	%al, %edx
	.loc 6 3886 56 discriminator 2
	movl	-100(%ebp), %ebx
	.loc 6 3886 59 discriminator 2
	movl	-36(%ebp), %eax
	addl	%ebx, %eax
	movzbl	(%eax), %eax
	.loc 6 3886 46 discriminator 2
	movzbl	%al, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__compute_yiii
	movl	%eax, %edx
	.loc 6 3886 29 discriminator 2
	movl	-44(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 3887 27 discriminator 2
	movl	-44(%ebp), %eax
	addl	$1, %eax
	.loc 6 3887 29 discriminator 2
	movb	$-1, (%eax)
	.loc 6 3885 19 discriminator 2
	addl	$1, -36(%ebp)
	.loc 6 3885 55 discriminator 2
	addl	$2, -44(%ebp)
	.loc 6 3885 19 discriminator 2
	jmp	L1308
L1305:
LBB276:
LBB277:
	.loc 6 3890 27
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3890 30
	movl	8(%eax), %eax
	.loc 6 3890 20
	cmpl	$4, %eax
	jne	L1309
	.loc 6 3890 47 discriminator 1
	movl	8(%ebp), %eax
	movl	18408(%eax), %eax
	.loc 6 3890 41 discriminator 1
	testl	%eax, %eax
	jne	L1309
LBB278:
LBB279:
	.loc 6 3891 22
	movl	$0, -36(%ebp)
L1311:
	.loc 6 3891 33 discriminator 3
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3891 36 discriminator 3
	movl	(%eax), %eax
	.loc 6 3891 28 discriminator 3
	cmpl	%eax, -36(%ebp)
	jnb	L1322
LBB280:
	.loc 6 3892 40 discriminator 2
	movl	-88(%ebp), %edx
	.loc 6 3892 43 discriminator 2
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3892 27 discriminator 2
	movzbl	(%eax), %eax
	movb	%al, -75(%ebp)
	.loc 6 3893 46 discriminator 2
	movzbl	-75(%ebp), %edx
	.loc 6 3893 56 discriminator 2
	movl	-100(%ebp), %ecx
	.loc 6 3893 59 discriminator 2
	movl	-36(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 6 3893 46 discriminator 2
	movzbl	%al, %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__blinn_8x8hh
	movb	%al, -76(%ebp)
	.loc 6 3894 46 discriminator 2
	movzbl	-75(%ebp), %edx
	.loc 6 3894 56 discriminator 2
	movl	-96(%ebp), %ecx
	.loc 6 3894 59 discriminator 2
	movl	-36(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 6 3894 46 discriminator 2
	movzbl	%al, %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__blinn_8x8hh
	movb	%al, -77(%ebp)
	.loc 6 3895 46 discriminator 2
	movzbl	-75(%ebp), %edx
	.loc 6 3895 56 discriminator 2
	movl	-92(%ebp), %ecx
	.loc 6 3895 59 discriminator 2
	movl	-36(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 6 3895 46 discriminator 2
	movzbl	%al, %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__blinn_8x8hh
	movb	%al, -78(%ebp)
	.loc 6 3896 43 discriminator 2
	movzbl	-78(%ebp), %ecx
	movzbl	-77(%ebp), %edx
	movzbl	-76(%ebp), %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__compute_yiii
	movl	%eax, %edx
	.loc 6 3896 26 discriminator 2
	movl	-44(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 3897 24 discriminator 2
	movl	-44(%ebp), %eax
	addl	$1, %eax
	.loc 6 3897 26 discriminator 2
	movb	$-1, (%eax)
	.loc 6 3898 23 discriminator 2
	movl	-48(%ebp), %eax
	addl	%eax, -44(%ebp)
LBE280:
	.loc 6 3891 16 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1311
L1309:
LBE279:
LBE278:
LBB281:
LBB282:
	.loc 6 3900 27
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3900 30
	movl	8(%eax), %eax
	.loc 6 3900 20
	cmpl	$4, %eax
	jne	L1312
	.loc 6 3900 47 discriminator 1
	movl	8(%ebp), %eax
	movl	18408(%eax), %eax
	.loc 6 3900 41 discriminator 1
	cmpl	$2, %eax
	jne	L1312
	.loc 6 3901 22
	movl	$0, -36(%ebp)
L1314:
	.loc 6 3901 33 discriminator 3
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3901 36 discriminator 3
	movl	(%eax), %eax
	.loc 6 3901 28 discriminator 3
	cmpl	%eax, -36(%ebp)
	jnb	L1323
	.loc 6 3902 74 discriminator 2
	movl	-88(%ebp), %edx
	.loc 6 3902 77 discriminator 2
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 6 3902 43 discriminator 2
	movzbl	%al, %edx
	.loc 6 3902 59 discriminator 2
	movl	-100(%ebp), %ecx
	.loc 6 3902 62 discriminator 2
	movl	-36(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 6 3902 48 discriminator 2
	notl	%eax
	.loc 6 3902 43 discriminator 2
	movzbl	%al, %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbi__blinn_8x8hh
	movl	%eax, %edx
	.loc 6 3902 26 discriminator 2
	movl	-44(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 3903 24 discriminator 2
	movl	-44(%ebp), %eax
	addl	$1, %eax
	.loc 6 3903 26 discriminator 2
	movb	$-1, (%eax)
	.loc 6 3904 23 discriminator 2
	movl	-48(%ebp), %eax
	addl	%eax, -44(%ebp)
	.loc 6 3901 16 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1314
L1312:
LBB283:
	.loc 6 3907 25
	movl	-100(%ebp), %eax
	movl	%eax, -84(%ebp)
	.loc 6 3908 16
	cmpl	$1, -48(%ebp)
	jne	L1315
	.loc 6 3909 25
	movl	$0, -36(%ebp)
L1316:
	.loc 6 3909 36 discriminator 3
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3909 39 discriminator 3
	movl	(%eax), %eax
	.loc 6 3909 31 discriminator 3
	cmpl	%eax, -36(%ebp)
	jnb	L1304
	.loc 6 3909 63 discriminator 2
	movl	-84(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	.loc 6 3909 56 discriminator 2
	movl	-44(%ebp), %ecx
	movl	-36(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 3909 63 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 3909 58 discriminator 2
	movb	%al, (%edx)
	.loc 6 3909 19 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1316
L1315:
	.loc 6 3911 25
	movl	$0, -36(%ebp)
L1317:
	.loc 6 3911 36 discriminator 3
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3911 39 discriminator 3
	movl	(%eax), %eax
	.loc 6 3911 31 discriminator 3
	cmpl	%eax, -36(%ebp)
	jnb	L1304
	.loc 6 3911 65 discriminator 2
	movl	-84(%ebp), %edx
	movl	-36(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 6 3911 57 discriminator 2
	movl	-44(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -44(%ebp)
	.loc 6 3911 65 discriminator 2
	movzbl	(%ecx), %edx
	.loc 6 3911 60 discriminator 2
	movb	%dl, (%eax)
	.loc 6 3911 72 discriminator 2
	movl	-44(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -44(%ebp)
	.loc 6 3911 75 discriminator 2
	movb	$-1, (%eax)
	.loc 6 3911 19 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1317
L1322:
LBE283:
LBE282:
LBE281:
	.loc 6 3899 16
	nop
	jmp	L1304
L1323:
LBB285:
LBB284:
	.loc 6 3900 20
	nop
L1304:
LBE284:
LBE285:
LBE277:
LBE276:
LBE275:
LBE274:
LBE259:
LBE256:
	.loc 6 3821 7 discriminator 2
	addl	$1, -40(%ebp)
	jmp	L1318
L1281:
LBE255:
	.loc 6 3915 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__cleanup_jpegP10stbi__jpeg
	.loc 6 3916 19
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3916 22
	movl	(%eax), %eax
	movl	%eax, %edx
	.loc 6 3916 14
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 3917 19
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3917 22
	movl	4(%eax), %eax
	movl	%eax, %edx
	.loc 6 3917 14
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 3918 7
	cmpl	$0, 20(%ebp)
	je	L1319
	.loc 6 3918 28 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3918 31 discriminator 1
	movl	8(%eax), %eax
	.loc 6 3918 42 discriminator 1
	cmpl	$2, %eax
	jle	L1320
	.loc 6 3918 42 is_stmt 0 discriminator 2
	movl	$3, %edx
	jmp	L1321
L1320:
	.loc 6 3918 42 discriminator 3
	movl	$1, %edx
L1321:
	.loc 6 3918 23 is_stmt 1 discriminator 5
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
L1319:
	.loc 6 3919 14
	movl	-60(%ebp), %eax
L1260:
LBE252:
	.loc 6 3921 1 discriminator 7
	addl	$268, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1882:
	.def	__ZL15stbi__jpeg_loadP13stbi__contextPiS1_S1_iP17stbi__result_info;	.scl	3;	.type	32;	.endef
__ZL15stbi__jpeg_loadP13stbi__contextPiS1_S1_iP17stbi__result_info:
LFB1883:
	.loc 6 3924 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 3926 46
	movl	$18456, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, -12(%ebp)
	.loc 6 3928 9
	movl	-12(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%edx, (%eax)
	.loc 6 3929 20
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__setup_jpegP10stbi__jpeg
	.loc 6 3930 28
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15load_jpeg_imageP10stbi__jpegPiS1_S1_i
	movl	%eax, -16(%ebp)
	.loc 6 3931 4
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 3932 11
	movl	-16(%ebp), %eax
	.loc 6 3933 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1883:
	.def	__ZL15stbi__jpeg_testP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL15stbi__jpeg_testP13stbi__context:
LFB1884:
	.loc 6 3936 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 3938 45
	movl	$18456, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, -12(%ebp)
	.loc 6 3939 9
	movl	-12(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%edx, (%eax)
	.loc 6 3940 20
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__setup_jpegP10stbi__jpeg
	.loc 6 3941 32
	movl	$1, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__decode_jpeg_headerP10stbi__jpegi
	movl	%eax, -16(%ebp)
	.loc 6 3942 16
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 3943 4
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 3944 11
	movl	-16(%ebp), %eax
	.loc 6 3945 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1884:
	.def	__ZL19stbi__jpeg_info_rawP10stbi__jpegPiS1_S1_;	.scl	3;	.type	32;	.endef
__ZL19stbi__jpeg_info_rawP10stbi__jpegPiS1_S1_:
LFB1885:
	.loc 6 3948 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 3949 33
	movl	$2, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__decode_jpeg_headerP10stbi__jpegi
	.loc 6 3949 8
	testl	%eax, %eax
	sete	%al
	.loc 6 3949 4
	testb	%al, %al
	je	L1329
	.loc 6 3950 19
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 3951 14
	movl	$0, %eax
	jmp	L1330
L1329:
	.loc 6 3953 4
	cmpl	$0, 12(%ebp)
	je	L1331
	.loc 6 3953 19 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3953 22 discriminator 1
	movl	(%eax), %eax
	movl	%eax, %edx
	.loc 6 3953 14 discriminator 1
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
L1331:
	.loc 6 3954 4
	cmpl	$0, 16(%ebp)
	je	L1332
	.loc 6 3954 19 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3954 22 discriminator 1
	movl	4(%eax), %eax
	movl	%eax, %edx
	.loc 6 3954 14 discriminator 1
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
L1332:
	.loc 6 3955 4
	cmpl	$0, 20(%ebp)
	je	L1333
	.loc 6 3955 25 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 3955 28 discriminator 1
	movl	8(%eax), %eax
	.loc 6 3955 39 discriminator 1
	cmpl	$2, %eax
	jle	L1334
	.loc 6 3955 39 is_stmt 0 discriminator 2
	movl	$3, %edx
	jmp	L1335
L1334:
	.loc 6 3955 39 discriminator 3
	movl	$1, %edx
L1335:
	.loc 6 3955 20 is_stmt 1 discriminator 5
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
L1333:
	.loc 6 3956 11
	movl	$1, %eax
L1330:
	.loc 6 3957 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1885:
	.def	__ZL15stbi__jpeg_infoP13stbi__contextPiS1_S1_;	.scl	3;	.type	32;	.endef
__ZL15stbi__jpeg_infoP13stbi__contextPiS1_S1_:
LFB1886:
	.loc 6 3960 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 3962 47
	movl	$18456, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, -12(%ebp)
	.loc 6 3963 9
	movl	-12(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%edx, (%eax)
	.loc 6 3964 32
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__jpeg_info_rawP10stbi__jpegPiS1_S1_
	movl	%eax, -16(%ebp)
	.loc 6 3965 4
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 3966 11
	movl	-16(%ebp), %eax
	.loc 6 3967 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1886:
	.def	__ZL18stbi__bitreverse16i;	.scl	3;	.type	32;	.endef
__ZL18stbi__bitreverse16i:
LFB1887:
	.loc 6 3996 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 3997 21
	movl	8(%ebp), %eax
	sarl	%eax
	andl	$21845, %eax
	movl	%eax, %edx
	.loc 6 3997 44
	movl	8(%ebp), %eax
	addl	%eax, %eax
	andl	$43690, %eax
	.loc 6 3997 5
	orl	%edx, %eax
	movl	%eax, 8(%ebp)
	.loc 6 3998 21
	movl	8(%ebp), %eax
	sarl	$2, %eax
	andl	$13107, %eax
	movl	%eax, %edx
	.loc 6 3998 44
	movl	8(%ebp), %eax
	sall	$2, %eax
	andl	$52428, %eax
	.loc 6 3998 5
	orl	%edx, %eax
	movl	%eax, 8(%ebp)
	.loc 6 3999 21
	movl	8(%ebp), %eax
	sarl	$4, %eax
	andl	$3855, %eax
	movl	%eax, %edx
	.loc 6 3999 44
	movl	8(%ebp), %eax
	sall	$4, %eax
	andl	$61680, %eax
	.loc 6 3999 5
	orl	%edx, %eax
	movl	%eax, 8(%ebp)
	.loc 6 4000 21
	movl	8(%ebp), %eax
	sarl	$8, %eax
	movzbl	%al, %edx
	.loc 6 4000 44
	movl	8(%ebp), %eax
	sall	$8, %eax
	movzwl	%ax, %eax
	.loc 6 4000 5
	orl	%edx, %eax
	movl	%eax, 8(%ebp)
	.loc 6 4001 10
	movl	8(%ebp), %eax
	.loc 6 4002 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1887:
	.section .rdata,"dr"
LC73:
	.ascii "bits <= 16\0"
	.text
	.def	__ZL17stbi__bit_reverseii;	.scl	3;	.type	32;	.endef
__ZL17stbi__bit_reverseii:
LFB1888:
	.loc 6 4005 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 4006 4
	cmpl	$16, 12(%ebp)
	jle	L1343
	.loc 6 4006 4 is_stmt 0 discriminator 2
	movl	$4006, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC73, (%esp)
	call	__assert
L1343:
	.loc 6 4009 29 is_stmt 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__bitreverse16i
	movl	%eax, %edx
	.loc 6 4009 39
	movl	$16, %eax
	subl	12(%ebp), %eax
	.loc 6 4009 44
	movl	%eax, %ecx
	sarl	%cl, %edx
	movl	%edx, %eax
	.loc 6 4010 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1888:
	.section .rdata,"dr"
LC74:
	.ascii "bad sizes\0"
LC75:
	.ascii "bad codelengths\0"
	.text
	.def	__ZL20stbi__zbuild_huffmanP14stbi__zhuffmanPKhi;	.scl	3;	.type	32;	.endef
__ZL20stbi__zbuild_huffmanP14stbi__zhuffmanPKhi:
LFB1889:
	.loc 6 4013 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$180, %esp
	.cfi_offset 3, -12
	.loc 6 4014 10
	movl	$0, -16(%ebp)
	.loc 6 4018 10
	movl	$68, 8(%esp)
	movl	$0, 4(%esp)
	leal	-168(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 6 4019 14
	movl	8(%ebp), %eax
	.loc 6 4019 10
	movl	$1024, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	_memset
	.loc 6 4020 10
	movl	$0, -12(%ebp)
L1347:
	.loc 6 4020 16 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L1346
	.loc 6 4021 25 discriminator 2
	movl	-12(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4021 26 discriminator 2
	movl	-168(%ebp,%eax,4), %edx
	.loc 6 4021 7 discriminator 2
	addl	$1, %edx
	movl	%edx, -168(%ebp,%eax,4)
	.loc 6 4020 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1347
L1346:
	.loc 6 4022 13
	movl	$0, -168(%ebp)
	.loc 6 4023 10
	movl	$1, -12(%ebp)
L1351:
	.loc 6 4023 16 discriminator 1
	cmpl	$15, -12(%ebp)
	jg	L1348
	.loc 6 4024 18
	movl	-12(%ebp), %eax
	movl	-168(%ebp,%eax,4), %edx
	.loc 6 4024 25
	movl	-12(%ebp), %eax
	movl	$1, %ebx
	movl	%eax, %ecx
	sall	%cl, %ebx
	movl	%ebx, %eax
	.loc 6 4024 7
	cmpl	%eax, %edx
	jle	L1349
	.loc 6 4025 17
	movl	$LC74, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1361
L1349:
	.loc 6 4023 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1351
L1348:
	.loc 6 4026 9
	movl	$0, -20(%ebp)
	.loc 6 4027 10
	movl	$1, -12(%ebp)
L1354:
	.loc 6 4027 16 discriminator 1
	cmpl	$15, -12(%ebp)
	jg	L1352
	.loc 6 4028 20
	movl	-12(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%edx, -100(%ebp,%eax,4)
	.loc 6 4029 23
	movl	-20(%ebp), %eax
	movl	%eax, %ecx
	movl	8(%ebp), %eax
	movl	-12(%ebp), %edx
	addl	$512, %edx
	movw	%cx, (%eax,%edx,2)
	.loc 6 4030 25
	movl	-16(%ebp), %eax
	movl	%eax, %ecx
	movl	8(%ebp), %eax
	movl	-12(%ebp), %edx
	addl	$560, %edx
	movw	%cx, 4(%eax,%edx,2)
	.loc 6 4031 29
	movl	-12(%ebp), %eax
	movl	-168(%ebp,%eax,4), %eax
	.loc 6 4031 12
	addl	%eax, -20(%ebp)
	.loc 6 4032 18
	movl	-12(%ebp), %eax
	movl	-168(%ebp,%eax,4), %eax
	.loc 6 4032 7
	testl	%eax, %eax
	je	L1353
	.loc 6 4033 27
	movl	-12(%ebp), %eax
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 6 4033 10
	cmpl	%eax, -20(%ebp)
	jle	L1353
	.loc 6 4033 41 discriminator 1
	movl	$LC75, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1361
L1353:
	.loc 6 4034 34 discriminator 2
	movl	$16, %eax
	subl	-12(%ebp), %eax
	.loc 6 4034 28 discriminator 2
	movl	-20(%ebp), %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %ecx
	.loc 6 4034 21 discriminator 2
	movl	8(%ebp), %eax
	movl	-12(%ebp), %edx
	addl	$264, %edx
	movl	%ecx, (%eax,%edx,4)
	.loc 6 4035 12 discriminator 2
	sall	-20(%ebp)
	.loc 6 4036 19 discriminator 2
	movl	-12(%ebp), %eax
	movl	-168(%ebp,%eax,4), %eax
	.loc 6 4036 9 discriminator 2
	addl	%eax, -16(%ebp)
	.loc 6 4027 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1354
L1352:
	.loc 6 4038 19
	movl	8(%ebp), %eax
	movl	$65536, 1120(%eax)
LBB286:
	.loc 6 4039 10
	movl	$0, -12(%ebp)
L1360:
	.loc 6 4039 16 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L1355
LBB287:
	.loc 6 4040 25
	movl	-12(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 6 4040 11
	movzbl	%al, %eax
	movl	%eax, -28(%ebp)
LBB288:
	.loc 6 4041 7
	cmpl	$0, -28(%ebp)
	je	L1356
LBB289:
	.loc 6 4042 29
	movl	-28(%ebp), %eax
	movl	-100(%ebp,%eax,4), %edx
	.loc 6 4042 47
	movl	8(%ebp), %eax
	movl	-28(%ebp), %ecx
	addl	$512, %ecx
	movzwl	(%eax,%ecx,2), %eax
	movzwl	%ax, %eax
	.loc 6 4042 31
	movl	%edx, %ecx
	subl	%eax, %ecx
	.loc 6 4042 67
	movl	8(%ebp), %eax
	movl	-28(%ebp), %edx
	addl	$560, %edx
	movzwl	4(%eax,%edx,2), %eax
	movzwl	%ax, %eax
	.loc 6 4042 14
	addl	%ecx, %eax
	movl	%eax, -32(%ebp)
	.loc 6 4043 50
	movl	-28(%ebp), %eax
	sall	$9, %eax
	.loc 6 4043 56
	movl	%eax, %edx
	movl	-12(%ebp), %eax
	orl	%edx, %eax
	.loc 6 4043 23
	movw	%ax, -34(%ebp)
	.loc 6 4044 22
	movl	-28(%ebp), %eax
	movl	%eax, %ecx
	movl	8(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	addl	$1156, %eax
	movb	%cl, (%eax)
	.loc 6 4045 22
	movl	-12(%ebp), %eax
	movl	%eax, %ecx
	movl	8(%ebp), %eax
	movl	-32(%ebp), %edx
	addl	$720, %edx
	movw	%cx, 4(%eax,%edx,2)
LBB290:
	.loc 6 4046 10
	cmpl	$9, -28(%ebp)
	jg	L1357
LBB291:
	.loc 6 4047 38
	movl	-28(%ebp), %eax
	movl	-100(%ebp,%eax,4), %eax
	movl	-28(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbi__bit_reverseii
	movl	%eax, -24(%ebp)
L1359:
	.loc 6 4048 22
	cmpl	$511, -24(%ebp)
	jg	L1357
	.loc 6 4049 27
	movl	8(%ebp), %eax
	movl	-24(%ebp), %edx
	movzwl	-34(%ebp), %ecx
	movw	%cx, (%eax,%edx,2)
	.loc 6 4050 24
	movl	-28(%ebp), %eax
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 6 4050 18
	addl	%eax, -24(%ebp)
	.loc 6 4048 13
	jmp	L1359
L1357:
LBE291:
LBE290:
	.loc 6 4053 23
	movl	-28(%ebp), %eax
	movl	-100(%ebp,%eax,4), %eax
	.loc 6 4053 10
	leal	1(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%edx, -100(%ebp,%eax,4)
L1356:
LBE289:
LBE288:
LBE287:
	.loc 6 4039 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1360
L1355:
LBE286:
	.loc 6 4056 11
	movl	$1, %eax
L1361:
	.loc 6 4057 1 discriminator 1
	addl	$180, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1889:
	.def	__ZL10stbi__zeofP10stbi__zbuf;	.scl	3;	.type	32;	.endef
__ZL10stbi__zeofP10stbi__zbuf:
LFB1890:
	.loc 6 4080 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 4081 15
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 4081 29
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 4081 23
	cmpl	%eax, %edx
	setnb	%al
	.loc 6 4081 40
	movzbl	%al, %eax
	.loc 6 4082 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1890:
	.def	__ZL11stbi__zget8P10stbi__zbuf;	.scl	3;	.type	32;	.endef
__ZL11stbi__zget8P10stbi__zbuf:
LFB1891:
	.loc 6 4085 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 4086 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__zeofP10stbi__zbuf
	.loc 6 4086 42
	testl	%eax, %eax
	jne	L1365
	.loc 6 4086 35 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 4086 42 discriminator 1
	leal	1(%eax), %ecx
	movl	8(%ebp), %edx
	movl	%ecx, (%edx)
	movzbl	(%eax), %eax
	jmp	L1367
L1365:
	.loc 6 4086 42 is_stmt 0 discriminator 2
	movl	$0, %eax
L1367:
	.loc 6 4087 1 is_stmt 1 discriminator 5
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1891:
	.def	__ZL15stbi__fill_bitsP10stbi__zbuf;	.scl	3;	.type	32;	.endef
__ZL15stbi__fill_bitsP10stbi__zbuf:
LFB1892:
	.loc 6 4090 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
L1371:
	.loc 6 4092 14
	movl	8(%ebp), %eax
	movl	12(%eax), %edx
	.loc 6 4092 39
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 4092 26
	movl	%eax, %ecx
	shrl	%cl, %edx
	movl	%edx, %eax
	.loc 6 4092 7
	testl	%eax, %eax
	je	L1369
	.loc 6 4093 25
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 6 4093 20
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 4094 9
	jmp	L1368
L1369:
	.loc 6 4096 51
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbi__zget8P10stbi__zbuf
	.loc 6 4096 25
	movzbl	%al, %edx
	.loc 6 4096 61
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 4096 55
	movl	%eax, %ecx
	sall	%cl, %edx
	.loc 6 4096 22
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	orl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 6 4097 19
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	leal	8(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 6 4098 16
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 4098 25
	cmpl	$24, %eax
	jg	L1368
	.loc 6 4091 4
	jmp	L1371
L1368:
	.loc 6 4099 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1892:
	.def	__ZL14stbi__zreceiveP10stbi__zbufi;	.scl	3;	.type	32;	.endef
__ZL14stbi__zreceiveP10stbi__zbufi:
LFB1893:
	.loc 6 4102 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 6 4104 11
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 4104 4
	cmpl	%eax, 12(%ebp)
	jle	L1373
	.loc 6 4104 40 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__fill_bitsP10stbi__zbuf
L1373:
	.loc 6 4105 11
	movl	8(%ebp), %eax
	movl	12(%eax), %edx
	.loc 6 4105 29
	movl	12(%ebp), %eax
	movl	$1, %ebx
	movl	%eax, %ecx
	sall	%cl, %ebx
	movl	%ebx, %eax
	.loc 6 4105 35
	subl	$1, %eax
	.loc 6 4105 6
	andl	%edx, %eax
	movl	%eax, -12(%ebp)
	.loc 6 4106 19
	movl	8(%ebp), %eax
	movl	12(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, %ecx
	shrl	%cl, %edx
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 6 4107 16
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	subl	12(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 6 4108 11
	movl	-12(%ebp), %eax
	.loc 6 4109 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1893:
	.def	__ZL30stbi__zhuffman_decode_slowpathP10stbi__zbufP14stbi__zhuffman;	.scl	3;	.type	32;	.endef
__ZL30stbi__zhuffman_decode_slowpathP10stbi__zbufP14stbi__zhuffman:
LFB1894:
	.loc 6 4112 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 4116 29
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 4116 25
	movl	$16, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbi__bit_reverseii
	movl	%eax, -16(%ebp)
	.loc 6 4117 10
	movl	$10, -12(%ebp)
L1378:
	.loc 6 4118 27
	movl	12(%ebp), %eax
	movl	-12(%ebp), %edx
	addl	$264, %edx
	movl	(%eax,%edx,4), %eax
	.loc 6 4118 7
	cmpl	%eax, -16(%ebp)
	jl	L1384
	.loc 6 4117 4
	addl	$1, -12(%ebp)
	.loc 6 4118 7
	jmp	L1378
L1384:
	.loc 6 4119 10
	nop
	.loc 6 4120 4
	cmpl	$15, -12(%ebp)
	jle	L1379
	.loc 6 4120 25 discriminator 1
	movl	$-1, %eax
	jmp	L1380
L1379:
	.loc 6 4122 17
	movl	$16, %eax
	subl	-12(%ebp), %eax
	.loc 6 4122 11
	movl	-16(%ebp), %edx
	movl	%eax, %ecx
	sarl	%cl, %edx
	movl	%edx, %ecx
	.loc 6 4122 38
	movl	12(%ebp), %eax
	movl	-12(%ebp), %edx
	addl	$512, %edx
	movzwl	(%eax,%edx,2), %eax
	movzwl	%ax, %eax
	.loc 6 4122 22
	subl	%eax, %ecx
	.loc 6 4122 58
	movl	12(%ebp), %eax
	movl	-12(%ebp), %edx
	addl	$560, %edx
	movzwl	4(%eax,%edx,2), %eax
	movzwl	%ax, %eax
	.loc 6 4122 6
	addl	%ecx, %eax
	movl	%eax, -20(%ebp)
	.loc 6 4123 10
	movl	-20(%ebp), %eax
	.loc 6 4123 4
	cmpl	$287, %eax
	jbe	L1381
	.loc 6 4123 39 discriminator 1
	movl	$-1, %eax
	jmp	L1380
L1381:
	.loc 6 4124 17
	movl	12(%ebp), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	addl	$1156, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4124 4
	cmpl	%eax, -12(%ebp)
	je	L1382
	.loc 6 4124 33 discriminator 1
	movl	$-1, %eax
	jmp	L1380
L1382:
	.loc 6 4125 19
	movl	8(%ebp), %eax
	movl	12(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, %ecx
	shrl	%cl, %edx
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 6 4126 16
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	subl	-12(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 6 4127 21
	movl	12(%ebp), %eax
	movl	-20(%ebp), %edx
	addl	$720, %edx
	movzwl	4(%eax,%edx,2), %eax
	movzwl	%ax, %eax
L1380:
	.loc 6 4128 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1894:
	.def	__ZL21stbi__zhuffman_decodeP10stbi__zbufP14stbi__zhuffman;	.scl	3;	.type	32;	.endef
__ZL21stbi__zhuffman_decodeP10stbi__zbufP14stbi__zhuffman:
LFB1895:
	.loc 6 4131 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 4133 11
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 4133 4
	cmpl	$15, %eax
	jg	L1386
	.loc 6 4134 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__zeofP10stbi__zbuf
	.loc 6 4134 24
	testl	%eax, %eax
	setne	%al
	.loc 6 4134 7
	testb	%al, %al
	je	L1387
	.loc 6 4135 18
	movl	$-1, %eax
	jmp	L1388
L1387:
	.loc 6 4137 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__fill_bitsP10stbi__zbuf
L1386:
	.loc 6 4139 19
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 4139 31
	andl	$511, %eax
	movl	%eax, %edx
	.loc 6 4139 49
	movl	12(%ebp), %eax
	movzwl	(%eax,%edx,2), %eax
	.loc 6 4139 6
	movzwl	%ax, %eax
	movl	%eax, -12(%ebp)
	.loc 6 4140 4
	cmpl	$0, -12(%ebp)
	je	L1389
	.loc 6 4141 9
	movl	-12(%ebp), %eax
	sarl	$9, %eax
	movl	%eax, -16(%ebp)
	.loc 6 4142 22
	movl	8(%ebp), %eax
	movl	12(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%eax, %ecx
	shrl	%cl, %edx
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 6 4143 19
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	subl	-16(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 6 4144 18
	movl	-12(%ebp), %eax
	andl	$511, %eax
	jmp	L1388
L1389:
	.loc 6 4146 41
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL30stbi__zhuffman_decode_slowpathP10stbi__zbufP14stbi__zhuffman
	.loc 6 4146 46
	nop
L1388:
	.loc 6 4147 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1895:
	.section .rdata,"dr"
LC76:
	.ascii "output buffer limit\0"
	.text
	.def	__ZL13stbi__zexpandP10stbi__zbufPci;	.scl	3;	.type	32;	.endef
__ZL13stbi__zexpandP10stbi__zbufPci:
LFB1896:
	.loc 6 4150 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 4153 12
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 16(%eax)
	.loc 6 4154 12
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 6 4154 4
	testl	%eax, %eax
	jne	L1391
	.loc 6 4154 33 discriminator 1
	movl	$LC76, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1392
L1391:
	.loc 6 4155 31
	movl	8(%ebp), %eax
	movl	16(%eax), %edx
	.loc 6 4155 41
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	.loc 6 4155 36
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 6 4155 10
	movl	%eax, -16(%ebp)
	.loc 6 4156 39
	movl	8(%ebp), %eax
	movl	24(%eax), %edx
	.loc 6 4156 53
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	.loc 6 4156 48
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 6 4156 22
	movl	%eax, -20(%ebp)
	.loc 6 4156 10
	movl	-20(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 6 4157 17
	movl	-16(%ebp), %eax
	notl	%eax
	movl	%eax, %edx
	.loc 6 4157 25
	movl	16(%ebp), %eax
	.loc 6 4157 4
	cmpl	%eax, %edx
	jnb	L1393
	.loc 6 4157 46 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1392
L1393:
	.loc 6 4158 15
	movl	16(%ebp), %edx
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4158 19
	cmpl	%eax, -12(%ebp)
	jnb	L1394
	.loc 6 4159 16
	movl	-12(%ebp), %eax
	.loc 6 4159 7
	testl	%eax, %eax
	jns	L1395
	.loc 6 4159 39 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1392
L1395:
	.loc 6 4160 13
	sall	-12(%ebp)
	.loc 6 4158 4
	jmp	L1393
L1394:
	.loc 6 4162 17
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	-12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_realloc
	movl	%eax, -24(%ebp)
	.loc 6 4164 4
	cmpl	$0, -24(%ebp)
	jne	L1396
	.loc 6 4164 26 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1392
L1396:
	.loc 6 4165 18
	movl	8(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%edx, 20(%eax)
	.loc 6 4166 22
	movl	-24(%ebp), %edx
	movl	-16(%ebp), %eax
	addl	%eax, %edx
	.loc 6 4166 18
	movl	8(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 6 4167 22
	movl	-24(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 4167 18
	movl	8(%ebp), %eax
	movl	%edx, 24(%eax)
	.loc 6 4168 11
	movl	$1, %eax
L1392:
	.loc 6 4169 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1896:
	.section .rdata,"dr"
	.align 32
__ZL18stbi__zlength_base:
	.long	3
	.long	4
	.long	5
	.long	6
	.long	7
	.long	8
	.long	9
	.long	10
	.long	11
	.long	13
	.long	15
	.long	17
	.long	19
	.long	23
	.long	27
	.long	31
	.long	35
	.long	43
	.long	51
	.long	59
	.long	67
	.long	83
	.long	99
	.long	115
	.long	131
	.long	163
	.long	195
	.long	227
	.long	258
	.long	0
	.long	0
	.align 32
__ZL19stbi__zlength_extra:
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	1
	.long	1
	.long	1
	.long	1
	.long	2
	.long	2
	.long	2
	.long	2
	.long	3
	.long	3
	.long	3
	.long	3
	.long	4
	.long	4
	.long	4
	.long	4
	.long	5
	.long	5
	.long	5
	.long	5
	.long	0
	.long	0
	.long	0
	.align 32
__ZL16stbi__zdist_base:
	.long	1
	.long	2
	.long	3
	.long	4
	.long	5
	.long	7
	.long	9
	.long	13
	.long	17
	.long	25
	.long	33
	.long	49
	.long	65
	.long	97
	.long	129
	.long	193
	.long	257
	.long	385
	.long	513
	.long	769
	.long	1025
	.long	1537
	.long	2049
	.long	3073
	.long	4097
	.long	6145
	.long	8193
	.long	12289
	.long	16385
	.long	24577
	.long	0
	.long	0
	.align 32
__ZL17stbi__zdist_extra:
	.long	0
	.long	0
	.long	0
	.long	0
	.long	1
	.long	1
	.long	2
	.long	2
	.long	3
	.long	3
	.long	4
	.long	4
	.long	5
	.long	5
	.long	6
	.long	6
	.long	7
	.long	7
	.long	8
	.long	8
	.long	9
	.long	9
	.long	10
	.long	10
	.long	11
	.long	11
	.long	12
	.long	12
	.long	13
	.long	13
	.space 8
LC77:
	.ascii "bad dist\0"
	.text
	.def	__ZL25stbi__parse_huffman_blockP10stbi__zbuf;	.scl	3;	.type	32;	.endef
__ZL25stbi__parse_huffman_blockP10stbi__zbuf:
LFB1897:
	.loc 6 4186 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 4187 10
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -12(%ebp)
L1415:
LBB292:
LBB293:
	.loc 6 4189 36
	movl	8(%ebp), %eax
	addl	$32, %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__zhuffman_decodeP10stbi__zbufP14stbi__zhuffman
	movl	%eax, -28(%ebp)
LBB294:
	.loc 6 4190 7
	cmpl	$255, -28(%ebp)
	jg	L1398
	.loc 6 4191 10
	cmpl	$0, -28(%ebp)
	jns	L1399
	.loc 6 4191 28 discriminator 1
	movl	$LC44, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1400
L1399:
	.loc 6 4192 25
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	.loc 6 4192 10
	cmpl	%eax, -12(%ebp)
	jb	L1401
	.loc 6 4193 31
	movl	$1, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__zexpandP10stbi__zbufPci
	.loc 6 4193 17
	testl	%eax, %eax
	sete	%al
	.loc 6 4193 13
	testb	%al, %al
	je	L1402
	.loc 6 4193 52 discriminator 1
	movl	$0, %eax
	jmp	L1400
L1402:
	.loc 6 4194 18
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -12(%ebp)
L1401:
	.loc 6 4196 15
	movl	-12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -12(%ebp)
	.loc 6 4196 18
	movl	-28(%ebp), %edx
	movb	%dl, (%eax)
	jmp	L1415
L1398:
LBB295:
	.loc 6 4200 10
	cmpl	$256, -28(%ebp)
	jne	L1404
	.loc 6 4201 21
	movl	8(%ebp), %eax
	movl	-12(%ebp), %edx
	movl	%edx, 16(%eax)
	.loc 6 4202 20
	movl	$1, %eax
	jmp	L1400
L1404:
	.loc 6 4204 12
	subl	$257, -28(%ebp)
	.loc 6 4205 14
	movl	-28(%ebp), %eax
	movl	__ZL18stbi__zlength_base(,%eax,4), %eax
	movl	%eax, -20(%ebp)
	.loc 6 4206 35
	movl	-28(%ebp), %eax
	movl	__ZL19stbi__zlength_extra(,%eax,4), %eax
	.loc 6 4206 10
	testl	%eax, %eax
	je	L1405
	.loc 6 4206 84 discriminator 1
	movl	-28(%ebp), %eax
	movl	__ZL19stbi__zlength_extra(,%eax,4), %eax
	.loc 6 4206 59 discriminator 1
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__zreceiveP10stbi__zbufi
	movl	%eax, %edx
	.loc 6 4206 42 discriminator 1
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -20(%ebp)
L1405:
	.loc 6 4207 35
	movl	8(%ebp), %eax
	addl	$2052, %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__zhuffman_decodeP10stbi__zbufP14stbi__zhuffman
	movl	%eax, -28(%ebp)
	.loc 6 4208 10
	cmpl	$0, -28(%ebp)
	jns	L1406
	.loc 6 4208 28 discriminator 1
	movl	$LC44, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1400
L1406:
	.loc 6 4209 15
	movl	-28(%ebp), %eax
	movl	__ZL16stbi__zdist_base(,%eax,4), %eax
	movl	%eax, -24(%ebp)
	.loc 6 4210 33
	movl	-28(%ebp), %eax
	movl	__ZL17stbi__zdist_extra(,%eax,4), %eax
	.loc 6 4210 10
	testl	%eax, %eax
	je	L1407
	.loc 6 4210 81 discriminator 1
	movl	-28(%ebp), %eax
	movl	__ZL17stbi__zdist_extra(,%eax,4), %eax
	.loc 6 4210 58 discriminator 1
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__zreceiveP10stbi__zbufi
	movl	%eax, %edx
	.loc 6 4210 41 discriminator 1
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -24(%ebp)
L1407:
	.loc 6 4211 24
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	.loc 6 4211 19
	movl	-12(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 6 4211 10
	cmpl	%eax, -24(%ebp)
	jle	L1408
	.loc 6 4211 50 discriminator 1
	movl	$LC77, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1400
L1408:
	.loc 6 4212 19
	movl	-20(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 4212 30
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	.loc 6 4212 10
	cmpl	%eax, %edx
	jbe	L1409
	.loc 6 4213 31
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__zexpandP10stbi__zbufPci
	.loc 6 4213 17
	testl	%eax, %eax
	sete	%al
	.loc 6 4213 13
	testb	%al, %al
	je	L1410
	.loc 6 4213 54 discriminator 1
	movl	$0, %eax
	jmp	L1400
L1410:
	.loc 6 4214 18
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -12(%ebp)
L1409:
	.loc 6 4216 32
	movl	-24(%ebp), %eax
	negl	%eax
	movl	%eax, %edx
	.loc 6 4216 12
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -16(%ebp)
LBB296:
	.loc 6 4217 10
	cmpl	$1, -24(%ebp)
	jne	L1411
LBB297:
	.loc 6 4218 21
	movl	-16(%ebp), %eax
	movzbl	(%eax), %eax
	movb	%al, -29(%ebp)
	.loc 6 4219 13
	cmpl	$0, -20(%ebp)
	je	L1415
L1413:
	.loc 6 4219 32 discriminator 1
	movl	-12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -12(%ebp)
	.loc 6 4219 35 discriminator 1
	movzbl	-29(%ebp), %edx
	movb	%dl, (%eax)
	.loc 6 4219 49 discriminator 1
	subl	$1, -20(%ebp)
	cmpl	$0, -20(%ebp)
	setne	%al
	testb	%al, %al
	je	L1415
	.loc 6 4219 24
	jmp	L1413
L1411:
LBE297:
	.loc 6 4221 13
	cmpl	$0, -20(%ebp)
	je	L1415
L1414:
	.loc 6 4221 39 discriminator 1
	movl	-16(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -16(%ebp)
	.loc 6 4221 37 discriminator 1
	movzbl	(%eax), %ecx
	.loc 6 4221 32 discriminator 1
	movl	-12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -12(%ebp)
	.loc 6 4221 37 discriminator 1
	movl	%ecx, %edx
	.loc 6 4221 35 discriminator 1
	movb	%dl, (%eax)
	.loc 6 4221 52 discriminator 1
	subl	$1, -20(%ebp)
	cmpl	$0, -20(%ebp)
	setne	%al
	testb	%al, %al
	je	L1415
	.loc 6 4221 24
	jmp	L1414
L1400:
LBE296:
LBE295:
LBE294:
LBE293:
LBE292:
	.loc 6 4225 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1897:
	.section .rdata,"dr"
	.align 4
__ZZL27stbi__compute_huffman_codesP10stbi__zbufE15length_dezigzag:
	.byte	16
	.byte	17
	.byte	18
	.byte	0
	.byte	8
	.byte	7
	.byte	9
	.byte	6
	.byte	10
	.byte	5
	.byte	11
	.byte	4
	.byte	12
	.byte	3
	.byte	13
	.byte	2
	.byte	14
	.byte	1
	.byte	15
	.text
	.def	__ZL27stbi__compute_huffman_codesP10stbi__zbuf;	.scl	3;	.type	32;	.endef
__ZL27stbi__compute_huffman_codesP10stbi__zbuf:
LFB1898:
	.loc 6 4228 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$2564, %esp
	.cfi_offset 3, -12
	.loc 6 4235 30
	movl	$5, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__zreceiveP10stbi__zbufi
	.loc 6 4235 36
	addl	$257, %eax
	.loc 6 4235 38
	movl	%eax, -28(%ebp)
	.loc 6 4236 30
	movl	$5, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__zreceiveP10stbi__zbufi
	.loc 6 4236 36
	addl	$1, %eax
	.loc 6 4236 38
	movl	%eax, -32(%ebp)
	.loc 6 4237 30
	movl	$4, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__zreceiveP10stbi__zbufi
	.loc 6 4237 36
	addl	$4, %eax
	.loc 6 4237 38
	movl	%eax, -36(%ebp)
	.loc 6 4238 8
	movl	-28(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -40(%ebp)
	.loc 6 4240 10
	movl	$19, 8(%esp)
	movl	$0, 4(%esp)
	leal	-2538(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
LBB298:
	.loc 6 4241 10
	movl	$0, -12(%ebp)
L1418:
	.loc 6 4241 16 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	-36(%ebp), %eax
	jge	L1417
LBB299:
	.loc 6 4242 29 discriminator 2
	movl	$3, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__zreceiveP10stbi__zbufi
	.loc 6 4242 33 discriminator 2
	movl	%eax, -44(%ebp)
	.loc 6 4243 41 discriminator 2
	movl	-12(%ebp), %eax
	addl	$__ZZL27stbi__compute_huffman_codesP10stbi__zbufE15length_dezigzag, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4243 44 discriminator 2
	movl	-44(%ebp), %edx
	movb	%dl, -2538(%ebp,%eax)
LBE299:
	.loc 6 4241 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1418
L1417:
LBE298:
	.loc 6 4245 29
	movl	$19, 8(%esp)
	leal	-2538(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-2064(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__zbuild_huffmanP14stbi__zhuffmanPKhi
	.loc 6 4245 8
	testl	%eax, %eax
	sete	%al
	.loc 6 4245 4
	testb	%al, %al
	je	L1419
	.loc 6 4245 75 discriminator 2
	movl	$0, %eax
	jmp	L1436
L1419:
	.loc 6 4247 6
	movl	$0, -16(%ebp)
L1432:
	.loc 6 4248 13
	movl	-16(%ebp), %eax
	cmpl	-40(%ebp), %eax
	jge	L1421
LBB300:
	.loc 6 4249 36
	leal	-2064(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__zhuffman_decodeP10stbi__zbufP14stbi__zhuffman
	movl	%eax, -20(%ebp)
	.loc 6 4250 7
	cmpl	$0, -20(%ebp)
	js	L1422
	.loc 6 4250 17 discriminator 2
	cmpl	$18, -20(%ebp)
	jle	L1423
L1422:
	.loc 6 4250 36 discriminator 3
	movl	$LC75, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1436
L1423:
LBB301:
	.loc 6 4251 7
	cmpl	$15, -20(%ebp)
	jg	L1424
	.loc 6 4252 20
	movl	-16(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -16(%ebp)
	.loc 6 4252 24
	movl	-20(%ebp), %edx
	movb	%dl, -2519(%ebp,%eax)
	jmp	L1432
L1424:
LBB302:
	.loc 6 4254 18
	movb	$0, -21(%ebp)
	.loc 6 4255 10
	cmpl	$16, -20(%ebp)
	jne	L1426
	.loc 6 4256 31
	movl	$2, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__zreceiveP10stbi__zbufi
	.loc 6 4256 36
	addl	$3, %eax
	.loc 6 4256 15
	movl	%eax, -20(%ebp)
	.loc 6 4257 13
	cmpl	$0, -16(%ebp)
	jne	L1427
	.loc 6 4257 32 discriminator 1
	movl	$LC75, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1436
L1427:
	.loc 6 4258 30
	movl	-16(%ebp), %eax
	subl	$1, %eax
	.loc 6 4258 18
	movzbl	-2519(%ebp,%eax), %eax
	movb	%al, -21(%ebp)
	jmp	L1428
L1426:
	.loc 6 4259 17
	cmpl	$17, -20(%ebp)
	jne	L1429
	.loc 6 4260 31
	movl	$3, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__zreceiveP10stbi__zbufi
	.loc 6 4260 36
	addl	$3, %eax
	.loc 6 4260 15
	movl	%eax, -20(%ebp)
	jmp	L1428
L1429:
	.loc 6 4261 17
	cmpl	$18, -20(%ebp)
	jne	L1430
	.loc 6 4262 31
	movl	$7, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__zreceiveP10stbi__zbufi
	.loc 6 4262 36
	addl	$11, %eax
	.loc 6 4262 15
	movl	%eax, -20(%ebp)
	jmp	L1428
L1430:
	.loc 6 4264 20
	movl	$LC75, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1436
L1428:
	.loc 6 4266 19
	movl	-40(%ebp), %eax
	subl	-16(%ebp), %eax
	.loc 6 4266 10
	cmpl	%eax, -20(%ebp)
	jle	L1431
	.loc 6 4266 35 discriminator 1
	movl	$LC75, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1436
L1431:
	.loc 6 4267 16
	movl	-20(%ebp), %edx
	movzbl	-21(%ebp), %eax
	movl	-16(%ebp), %ecx
	leal	-2519(%ebp), %ebx
	addl	%ebx, %ecx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	_memset
	.loc 6 4268 12
	movl	-20(%ebp), %eax
	addl	%eax, -16(%ebp)
LBE302:
LBE301:
LBE300:
	.loc 6 4248 4
	jmp	L1432
L1421:
	.loc 6 4271 4
	movl	-16(%ebp), %eax
	cmpl	-40(%ebp), %eax
	je	L1433
	.loc 6 4271 26 discriminator 1
	movl	$LC75, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1436
L1433:
	.loc 6 4272 29
	movl	8(%ebp), %eax
	leal	32(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-2519(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL20stbi__zbuild_huffmanP14stbi__zhuffmanPKhi
	.loc 6 4272 8
	testl	%eax, %eax
	sete	%al
	.loc 6 4272 4
	testb	%al, %al
	je	L1434
	.loc 6 4272 68 discriminator 2
	movl	$0, %eax
	jmp	L1436
L1434:
	.loc 6 4273 29
	movl	-28(%ebp), %eax
	leal	-2519(%ebp), %edx
	leal	(%edx,%eax), %ecx
	movl	8(%ebp), %eax
	leal	2052(%eax), %edx
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL20stbi__zbuild_huffmanP14stbi__zhuffmanPKhi
	.loc 6 4273 8
	testl	%eax, %eax
	sete	%al
	.loc 6 4273 4
	testb	%al, %al
	je	L1435
	.loc 6 4273 76 discriminator 2
	movl	$0, %eax
	jmp	L1436
L1435:
	.loc 6 4274 11
	movl	$1, %eax
L1436:
	.loc 6 4275 1 discriminator 1
	addl	$2564, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1898:
	.section .rdata,"dr"
LC78:
	.ascii "zlib corrupt\0"
LC79:
	.ascii "read past buffer\0"
	.text
	.def	__ZL30stbi__parse_uncompressed_blockP10stbi__zbuf;	.scl	3;	.type	32;	.endef
__ZL30stbi__parse_uncompressed_blockP10stbi__zbuf:
LFB1899:
	.loc 6 4278 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 6 4281 11
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 4281 20
	andl	$7, %eax
	.loc 6 4281 4
	testl	%eax, %eax
	je	L1438
	.loc 6 4282 28
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 4282 21
	andl	$7, %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__zreceiveP10stbi__zbufi
L1438:
	.loc 6 4284 6
	movl	$0, -12(%ebp)
L1440:
	.loc 6 4285 14
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 4285 23
	testl	%eax, %eax
	jle	L1439
	.loc 6 4286 35
	movl	8(%ebp), %eax
	movl	12(%eax), %ecx
	.loc 6 4286 15
	movl	-12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -12(%ebp)
	.loc 6 4286 19
	movl	%ecx, %edx
	movb	%dl, -24(%ebp,%eax)
	.loc 6 4287 22
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	shrl	$8, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 6 4288 19
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	leal	-8(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 6 4285 4
	jmp	L1440
L1439:
	.loc 6 4290 11
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 4290 4
	testl	%eax, %eax
	jns	L1441
	.loc 6 4290 32 discriminator 1
	movl	$LC78, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1447
L1441:
	.loc 6 4292 13
	cmpl	$3, -12(%ebp)
	jg	L1443
	.loc 6 4293 15
	movl	-12(%ebp), %ebx
	leal	1(%ebx), %eax
	movl	%eax, -12(%ebp)
	.loc 6 4293 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbi__zget8P10stbi__zbuf
	.loc 6 4293 19
	movb	%al, -24(%ebp,%ebx)
	.loc 6 4292 4
	jmp	L1441
L1443:
	.loc 6 4294 19
	movzbl	-23(%ebp), %eax
	movzbl	%al, %eax
	.loc 6 4294 21
	sall	$8, %eax
	movl	%eax, %edx
	.loc 6 4294 37
	movzbl	-24(%ebp), %eax
	movzbl	%al, %eax
	.loc 6 4294 9
	addl	%edx, %eax
	movl	%eax, -16(%ebp)
	.loc 6 4295 19
	movzbl	-21(%ebp), %eax
	movzbl	%al, %eax
	.loc 6 4295 21
	sall	$8, %eax
	movl	%eax, %edx
	.loc 6 4295 37
	movzbl	-22(%ebp), %eax
	movzbl	%al, %eax
	.loc 6 4295 9
	addl	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 6 4296 21
	movl	-16(%ebp), %eax
	xorl	$65535, %eax
	.loc 6 4296 4
	cmpl	%eax, -20(%ebp)
	je	L1444
	.loc 6 4296 39 discriminator 1
	movl	$LC78, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1447
L1444:
	.loc 6 4297 11
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 4297 19
	movl	-16(%ebp), %eax
	addl	%eax, %edx
	.loc 6 4297 30
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 4297 4
	cmpl	%eax, %edx
	jbe	L1445
	.loc 6 4297 50 discriminator 1
	movl	$LC79, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1447
L1445:
	.loc 6 4298 11
	movl	8(%ebp), %eax
	movl	16(%eax), %edx
	.loc 6 4298 16
	movl	-16(%ebp), %eax
	addl	%eax, %edx
	.loc 6 4298 27
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	.loc 6 4298 4
	cmpl	%eax, %edx
	jbe	L1446
	.loc 6 4299 25
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	-16(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__zexpandP10stbi__zbufPci
	.loc 6 4299 11
	testl	%eax, %eax
	sete	%al
	.loc 6 4299 7
	testb	%al, %al
	je	L1446
	.loc 6 4299 51 discriminator 1
	movl	$0, %eax
	jmp	L1447
L1446:
	.loc 6 4300 10
	movl	-16(%ebp), %ecx
	.loc 6 4300 23
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 4300 14
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 4300 10
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_memcpy
	.loc 6 4301 15
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-16(%ebp), %eax
	addl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 4302 12
	movl	8(%ebp), %eax
	movl	16(%eax), %edx
	movl	-16(%ebp), %eax
	addl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 6 4303 11
	movl	$1, %eax
L1447:
	.loc 6 4304 1 discriminator 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1899:
	.section .rdata,"dr"
LC80:
	.ascii "bad zlib header\0"
LC81:
	.ascii "no preset dict\0"
LC82:
	.ascii "bad compression\0"
	.text
	.def	__ZL23stbi__parse_zlib_headerP10stbi__zbuf;	.scl	3;	.type	32;	.endef
__ZL23stbi__parse_zlib_headerP10stbi__zbuf:
LFB1900:
	.loc 6 4307 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 4308 27
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbi__zget8P10stbi__zbuf
	.loc 6 4308 29
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 6 4309 8
	movl	-12(%ebp), %eax
	andl	$15, %eax
	movl	%eax, -16(%ebp)
	.loc 6 4311 27
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbi__zget8P10stbi__zbuf
	.loc 6 4311 29
	movzbl	%al, %eax
	movl	%eax, -20(%ebp)
	.loc 6 4312 18
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__zeofP10stbi__zbuf
	.loc 6 4312 21
	testl	%eax, %eax
	setne	%al
	.loc 6 4312 4
	testb	%al, %al
	je	L1449
	.loc 6 4312 30 discriminator 1
	movl	$LC80, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1450
L1449:
	.loc 6 4313 12
	movl	-12(%ebp), %eax
	sall	$8, %eax
	movl	%eax, %edx
	.loc 6 4313 16
	movl	-20(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 6 4313 22
	movl	$-2078209981, %edx
	movl	%ecx, %eax
	imull	%edx
	leal	(%edx,%ecx), %eax
	sarl	$4, %eax
	movl	%eax, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, %edx
	sall	$5, %edx
	subl	%eax, %edx
	movl	%ecx, %eax
	subl	%edx, %eax
	.loc 6 4313 4
	testl	%eax, %eax
	je	L1451
	.loc 6 4313 40 discriminator 1
	movl	$LC80, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1450
L1451:
	.loc 6 4314 12
	movl	-20(%ebp), %eax
	andl	$32, %eax
	.loc 6 4314 4
	testl	%eax, %eax
	je	L1452
	.loc 6 4314 25 discriminator 1
	movl	$LC81, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1450
L1452:
	.loc 6 4315 4
	cmpl	$8, -16(%ebp)
	je	L1453
	.loc 6 4315 24 discriminator 1
	movl	$LC82, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1450
L1453:
	.loc 6 4317 11
	movl	$1, %eax
L1450:
	.loc 6 4318 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1900:
	.section .rdata,"dr"
	.align 32
__ZL21stbi__zdefault_length:
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	9
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	7
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.byte	8
	.align 32
__ZL23stbi__zdefault_distance:
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.byte	5
	.text
	.def	__ZL16stbi__parse_zlibP10stbi__zbufi;	.scl	3;	.type	32;	.endef
__ZL16stbi__parse_zlibP10stbi__zbufi:
LFB1901:
	.loc 6 4350 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 4352 4
	cmpl	$0, 12(%ebp)
	je	L1455
	.loc 6 4353 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbi__parse_zlib_headerP10stbi__zbuf
	.loc 6 4353 11
	testl	%eax, %eax
	sete	%al
	.loc 6 4353 7
	testb	%al, %al
	je	L1455
	.loc 6 4353 47 discriminator 1
	movl	$0, %eax
	jmp	L1456
L1455:
	.loc 6 4354 16
	movl	8(%ebp), %eax
	movl	$0, 8(%eax)
	.loc 6 4355 19
	movl	8(%ebp), %eax
	movl	$0, 12(%eax)
L1464:
	.loc 6 4357 29
	movl	$1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__zreceiveP10stbi__zbufi
	.loc 6 4357 13
	movl	%eax, -12(%ebp)
	.loc 6 4358 28
	movl	$2, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__zreceiveP10stbi__zbufi
	.loc 6 4358 12
	movl	%eax, -16(%ebp)
	.loc 6 4359 7
	cmpl	$0, -16(%ebp)
	jne	L1457
	.loc 6 4360 45
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL30stbi__parse_uncompressed_blockP10stbi__zbuf
	.loc 6 4360 14
	testl	%eax, %eax
	sete	%al
	.loc 6 4360 10
	testb	%al, %al
	je	L1458
	.loc 6 4360 57 discriminator 1
	movl	$0, %eax
	jmp	L1456
L1457:
	.loc 6 4361 14
	cmpl	$3, -16(%ebp)
	jne	L1459
	.loc 6 4362 17
	movl	$0, %eax
	jmp	L1456
L1459:
	.loc 6 4364 10
	cmpl	$1, -16(%ebp)
	jne	L1460
	.loc 6 4366 38
	movl	8(%ebp), %eax
	addl	$32, %eax
	movl	$288, 8(%esp)
	movl	$__ZL21stbi__zdefault_length, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbi__zbuild_huffmanP14stbi__zhuffmanPKhi
	.loc 6 4366 17
	testl	%eax, %eax
	sete	%al
	.loc 6 4366 13
	testb	%al, %al
	je	L1461
	.loc 6 4366 93 discriminator 1
	movl	$0, %eax
	jmp	L1456
L1461:
	.loc 6 4367 38
	movl	8(%ebp), %eax
	addl	$2052, %eax
	movl	$32, 8(%esp)
	movl	$__ZL23stbi__zdefault_distance, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbi__zbuild_huffmanP14stbi__zhuffmanPKhi
	.loc 6 4367 17
	testl	%eax, %eax
	sete	%al
	.loc 6 4367 13
	testb	%al, %al
	je	L1462
	.loc 6 4367 93 discriminator 1
	movl	$0, %eax
	jmp	L1456
L1460:
	.loc 6 4369 45
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL27stbi__compute_huffman_codesP10stbi__zbuf
	.loc 6 4369 17
	testl	%eax, %eax
	sete	%al
	.loc 6 4369 13
	testb	%al, %al
	je	L1462
	.loc 6 4369 57 discriminator 1
	movl	$0, %eax
	jmp	L1456
L1462:
	.loc 6 4371 40
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL25stbi__parse_huffman_blockP10stbi__zbuf
	.loc 6 4371 14
	testl	%eax, %eax
	sete	%al
	.loc 6 4371 10
	testb	%al, %al
	je	L1458
	.loc 6 4371 52 discriminator 1
	movl	$0, %eax
	jmp	L1456
L1458:
	.loc 6 4373 13
	cmpl	$0, -12(%ebp)
	jne	L1463
	.loc 6 4356 4
	jmp	L1464
L1463:
	.loc 6 4374 11
	movl	$1, %eax
L1456:
	.loc 6 4375 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1901:
	.def	__ZL13stbi__do_zlibP10stbi__zbufPciii;	.scl	3;	.type	32;	.endef
__ZL13stbi__do_zlibP10stbi__zbufPciii:
LFB1902:
	.loc 6 4378 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 4379 18
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 20(%eax)
	.loc 6 4380 18
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 16(%eax)
	.loc 6 4381 25
	movl	16(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 4381 18
	movl	8(%ebp), %eax
	movl	%edx, 24(%eax)
	.loc 6 4382 20
	movl	8(%ebp), %eax
	movl	20(%ebp), %edx
	movl	%edx, 28(%eax)
	.loc 6 4384 27
	movl	24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__parse_zlibP10stbi__zbufi
	.loc 6 4385 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1902:
	.globl	_stbi_zlib_decode_malloc_guesssize
	.def	_stbi_zlib_decode_malloc_guesssize;	.scl	2;	.type	32;	.endef
_stbi_zlib_decode_malloc_guesssize:
LFB1903:
	.loc 6 4388 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	movl	$4120, %eax
	call	___chkstk_ms
	subl	%eax, %esp
	.loc 6 4390 35
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, -12(%ebp)
	.loc 6 4391 4
	cmpl	$0, -12(%ebp)
	jne	L1468
	.loc 6 4391 26 discriminator 1
	movl	$0, %eax
	jmp	L1472
L1468:
	.loc 6 4392 14
	movl	8(%ebp), %eax
	movl	%eax, -4084(%ebp)
	.loc 6 4393 39
	movl	12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4393 18
	movl	%eax, -4080(%ebp)
	.loc 6 4394 21
	movl	$1, 16(%esp)
	movl	$1, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-4084(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__do_zlibP10stbi__zbufPciii
	.loc 6 4394 48
	testl	%eax, %eax
	setne	%al
	.loc 6 4394 4
	testb	%al, %al
	je	L1470
	.loc 6 4395 7
	cmpl	$0, 20(%ebp)
	je	L1471
	.loc 6 4395 38 discriminator 1
	movl	-4068(%ebp), %edx
	.loc 6 4395 47 discriminator 1
	movl	-4064(%ebp), %eax
	.loc 6 4395 43 discriminator 1
	subl	%eax, %edx
	.loc 6 4395 27 discriminator 1
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
L1471:
	.loc 6 4396 16
	movl	-4064(%ebp), %eax
	jmp	L1472
L1470:
	.loc 6 4398 7
	movl	-4064(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 4399 14
	movl	$0, %eax
L1472:
	.loc 6 4401 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1903:
	.globl	_stbi_zlib_decode_malloc
	.def	_stbi_zlib_decode_malloc;	.scl	2;	.type	32;	.endef
_stbi_zlib_decode_malloc:
LFB1904:
	.loc 6 4404 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 4405 44
	movl	16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$16384, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_zlib_decode_malloc_guesssize
	.loc 6 4406 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1904:
	.globl	_stbi_zlib_decode_malloc_guesssize_headerflag
	.def	_stbi_zlib_decode_malloc_guesssize_headerflag;	.scl	2;	.type	32;	.endef
_stbi_zlib_decode_malloc_guesssize_headerflag:
LFB1905:
	.loc 6 4409 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	movl	$4120, %eax
	call	___chkstk_ms
	subl	%eax, %esp
	.loc 6 4411 35
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, -12(%ebp)
	.loc 6 4412 4
	cmpl	$0, -12(%ebp)
	jne	L1476
	.loc 6 4412 26 discriminator 1
	movl	$0, %eax
	jmp	L1480
L1476:
	.loc 6 4413 14
	movl	8(%ebp), %eax
	movl	%eax, -4084(%ebp)
	.loc 6 4414 39
	movl	12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4414 18
	movl	%eax, -4080(%ebp)
	.loc 6 4415 21
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	$1, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-4084(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__do_zlibP10stbi__zbufPciii
	.loc 6 4415 59
	testl	%eax, %eax
	setne	%al
	.loc 6 4415 4
	testb	%al, %al
	je	L1478
	.loc 6 4416 7
	cmpl	$0, 20(%ebp)
	je	L1479
	.loc 6 4416 38 discriminator 1
	movl	-4068(%ebp), %edx
	.loc 6 4416 47 discriminator 1
	movl	-4064(%ebp), %eax
	.loc 6 4416 43 discriminator 1
	subl	%eax, %edx
	.loc 6 4416 27 discriminator 1
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
L1479:
	.loc 6 4417 16
	movl	-4064(%ebp), %eax
	jmp	L1480
L1478:
	.loc 6 4419 7
	movl	-4064(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 4420 14
	movl	$0, %eax
L1480:
	.loc 6 4422 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1905:
	.globl	_stbi_zlib_decode_buffer
	.def	_stbi_zlib_decode_buffer;	.scl	2;	.type	32;	.endef
_stbi_zlib_decode_buffer:
LFB1906:
	.loc 6 4425 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	movl	$4120, %eax
	call	___chkstk_ms
	subl	%eax, %esp
	.loc 6 4427 14
	movl	16(%ebp), %eax
	movl	%eax, -4080(%ebp)
	.loc 6 4428 40
	movl	20(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4428 18
	movl	%eax, -4076(%ebp)
	.loc 6 4429 21
	movl	$1, 16(%esp)
	movl	$0, 12(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-4080(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__do_zlibP10stbi__zbufPciii
	.loc 6 4429 46
	testl	%eax, %eax
	setne	%al
	.loc 6 4429 4
	testb	%al, %al
	je	L1482
	.loc 6 4430 23
	movl	-4064(%ebp), %edx
	.loc 6 4430 32
	movl	-4060(%ebp), %eax
	.loc 6 4430 42
	subl	%eax, %edx
	movl	%edx, %eax
	jmp	L1484
L1482:
	.loc 6 4432 15
	movl	$-1, %eax
L1484:
	.loc 6 4433 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1906:
	.globl	_stbi_zlib_decode_noheader_malloc
	.def	_stbi_zlib_decode_noheader_malloc;	.scl	2;	.type	32;	.endef
_stbi_zlib_decode_noheader_malloc:
LFB1907:
	.loc 6 4436 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	movl	$4120, %eax
	call	___chkstk_ms
	subl	%eax, %esp
	.loc 6 4438 35
	movl	$16384, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, -12(%ebp)
	.loc 6 4439 4
	cmpl	$0, -12(%ebp)
	jne	L1486
	.loc 6 4439 26 discriminator 1
	movl	$0, %eax
	jmp	L1490
L1486:
	.loc 6 4440 14
	movl	8(%ebp), %eax
	movl	%eax, -4084(%ebp)
	.loc 6 4441 38
	movl	12(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4441 18
	movl	%eax, -4080(%ebp)
	.loc 6 4442 21
	movl	$0, 16(%esp)
	movl	$1, 12(%esp)
	movl	$16384, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-4084(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__do_zlibP10stbi__zbufPciii
	.loc 6 4442 41
	testl	%eax, %eax
	setne	%al
	.loc 6 4442 4
	testb	%al, %al
	je	L1488
	.loc 6 4443 7
	cmpl	$0, 16(%ebp)
	je	L1489
	.loc 6 4443 38 discriminator 1
	movl	-4068(%ebp), %edx
	.loc 6 4443 47 discriminator 1
	movl	-4064(%ebp), %eax
	.loc 6 4443 43 discriminator 1
	subl	%eax, %edx
	.loc 6 4443 27 discriminator 1
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
L1489:
	.loc 6 4444 16
	movl	-4064(%ebp), %eax
	jmp	L1490
L1488:
	.loc 6 4446 7
	movl	-4064(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 4447 14
	movl	$0, %eax
L1490:
	.loc 6 4449 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1907:
	.globl	_stbi_zlib_decode_noheader_buffer
	.def	_stbi_zlib_decode_noheader_buffer;	.scl	2;	.type	32;	.endef
_stbi_zlib_decode_noheader_buffer:
LFB1908:
	.loc 6 4452 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	movl	$4120, %eax
	call	___chkstk_ms
	subl	%eax, %esp
	.loc 6 4454 14
	movl	16(%ebp), %eax
	movl	%eax, -4080(%ebp)
	.loc 6 4455 40
	movl	20(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4455 18
	movl	%eax, -4076(%ebp)
	.loc 6 4456 21
	movl	$0, 16(%esp)
	movl	$0, 12(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-4080(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__do_zlibP10stbi__zbufPciii
	.loc 6 4456 46
	testl	%eax, %eax
	setne	%al
	.loc 6 4456 4
	testb	%al, %al
	je	L1492
	.loc 6 4457 23
	movl	-4064(%ebp), %edx
	.loc 6 4457 32
	movl	-4060(%ebp), %eax
	.loc 6 4457 42
	subl	%eax, %edx
	movl	%edx, %eax
	jmp	L1494
L1492:
	.loc 6 4459 15
	movl	$-1, %eax
L1494:
	.loc 6 4460 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1908:
	.def	__ZL22stbi__get_chunk_headerP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL22stbi__get_chunk_headerP13stbi__context:
LFB1909:
	.loc 6 4481 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 4483 28
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 4483 13
	movl	%eax, -16(%ebp)
	.loc 6 4484 28
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 4484 13
	movl	%eax, -12(%ebp)
	.loc 6 4485 11
	movl	-16(%ebp), %eax
	movl	-12(%ebp), %edx
	.loc 6 4486 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1909:
	.section .rdata,"dr"
	.align 4
__ZZL22stbi__check_png_headerP13stbi__contextE7png_sig:
	.byte	-119
	.byte	80
	.byte	78
	.byte	71
	.byte	13
	.byte	10
	.byte	26
	.byte	10
LC83:
	.ascii "bad png sig\0"
	.text
	.def	__ZL22stbi__check_png_headerP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL22stbi__check_png_headerP13stbi__context:
LFB1910:
	.loc 6 4489 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 4492 10
	movl	$0, -12(%ebp)
L1501:
	.loc 6 4492 16 discriminator 1
	cmpl	$7, -12(%ebp)
	jg	L1498
	.loc 6 4493 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 4493 37
	movl	-12(%ebp), %eax
	addl	$__ZZL22stbi__check_png_headerP13stbi__contextE7png_sig, %eax
	movzbl	(%eax), %eax
	.loc 6 4493 25
	cmpb	%al, %dl
	setne	%al
	.loc 6 4493 7
	testb	%al, %al
	je	L1499
	.loc 6 4493 47 discriminator 1
	movl	$LC83, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1500
L1499:
	.loc 6 4492 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1501
L1498:
	.loc 6 4494 11
	movl	$1, %eax
L1500:
	.loc 6 4495 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1910:
	.data
	.align 4
__ZL16first_row_filter:
	.byte	0
	.byte	1
	.byte	0
	.byte	5
	.byte	6
	.text
	.def	__ZL11stbi__paethiii;	.scl	3;	.type	32;	.endef
__ZL11stbi__paethiii:
LFB1911:
	.loc 6 4526 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 6 4527 14
	movl	8(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4527 8
	subl	16(%ebp), %eax
	movl	%eax, -4(%ebp)
	.loc 6 4528 18
	movl	-4(%ebp), %eax
	subl	8(%ebp), %eax
	movl	%eax, %edx
	.loc 6 4528 8
	movl	%edx, %eax
	sarl	$31, %eax
	xorl	%eax, %edx
	movl	%edx, -8(%ebp)
	subl	%eax, -8(%ebp)
	.loc 6 4529 18
	movl	-4(%ebp), %eax
	subl	12(%ebp), %eax
	movl	%eax, %edx
	.loc 6 4529 8
	movl	%edx, %eax
	sarl	$31, %eax
	xorl	%eax, %edx
	movl	%edx, -12(%ebp)
	subl	%eax, -12(%ebp)
	.loc 6 4530 18
	movl	-4(%ebp), %eax
	subl	16(%ebp), %eax
	movl	%eax, %edx
	.loc 6 4530 8
	movl	%edx, %eax
	sarl	$31, %eax
	xorl	%eax, %edx
	movl	%edx, -16(%ebp)
	subl	%eax, -16(%ebp)
	.loc 6 4531 4
	movl	-8(%ebp), %eax
	cmpl	-12(%ebp), %eax
	jg	L1503
	.loc 6 4531 17 discriminator 1
	movl	-8(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jg	L1503
	.loc 6 4531 37 discriminator 2
	movl	8(%ebp), %eax
	jmp	L1504
L1503:
	.loc 6 4532 4
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jg	L1505
	.loc 6 4532 25 discriminator 1
	movl	12(%ebp), %eax
	jmp	L1504
L1505:
	.loc 6 4533 11
	movl	16(%ebp), %eax
L1504:
	.loc 6 4534 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1911:
	.section .rdata,"dr"
	.align 4
__ZL23stbi__depth_scale_table:
	.byte	0
	.byte	-1
	.byte	85
	.byte	0
	.byte	17
	.byte	0
	.byte	0
	.byte	0
	.byte	1
	.align 4
LC84:
	.ascii "out_n == s->img_n || out_n == s->img_n+1\0"
LC85:
	.ascii "not enough pixels\0"
LC86:
	.ascii "invalid filter\0"
LC87:
	.ascii "invalid width\0"
LC88:
	.ascii "img_n+1 == out_n\0"
LC89:
	.ascii "img_n == 3\0"
	.text
	.def	__ZL26stbi__create_png_image_rawP9stbi__pngPhjijjii;	.scl	3;	.type	32;	.endef
__ZL26stbi__create_png_image_rawP9stbi__pngPhjijjii:
LFB1912:
	.loc 6 4540 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%esi
	pushl	%ebx
	subl	$112, %esp
	.cfi_offset 6, -12
	.cfi_offset 3, -16
	.loc 6 4541 28
	cmpl	$16, 32(%ebp)
	jne	L1507
	.loc 6 4541 28 is_stmt 0 discriminator 1
	movl	$2, %eax
	jmp	L1508
L1507:
	.loc 6 4541 28 discriminator 2
	movl	$1, %eax
L1508:
	.loc 6 4541 8 is_stmt 1 discriminator 4
	movl	%eax, -64(%ebp)
	.loc 6 4542 19 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -68(%ebp)
	.loc 6 4543 31 discriminator 4
	movl	20(%ebp), %eax
	imull	24(%ebp), %eax
	movl	%eax, %edx
	.loc 6 4543 37 discriminator 4
	movl	-64(%ebp), %eax
	.loc 6 4543 21 discriminator 4
	imull	%edx, %eax
	movl	%eax, -72(%ebp)
	.loc 6 4546 8 discriminator 4
	movl	-68(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -76(%ebp)
	.loc 6 4548 8 discriminator 4
	movl	20(%ebp), %eax
	imull	-64(%ebp), %eax
	movl	%eax, -80(%ebp)
	.loc 6 4549 8 discriminator 4
	movl	-76(%ebp), %eax
	imull	-64(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 6 4550 8 discriminator 4
	movl	24(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 6 4552 4 discriminator 4
	movl	-68(%ebp), %eax
	movl	8(%eax), %eax
	cmpl	%eax, 20(%ebp)
	je	L1636
	.loc 6 4552 4 is_stmt 0 discriminator 2
	movl	-68(%ebp), %eax
	movl	8(%eax), %eax
	addl	$1, %eax
	cmpl	%eax, 20(%ebp)
	je	L1636
	.loc 6 4552 4 discriminator 4
	movl	$4552, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC84, (%esp)
	call	__assert
	jmp	L1511
L1636:
	.loc 6 4552 4
	nop
L1511:
	.loc 6 4553 42 is_stmt 1
	movl	28(%ebp), %edx
	movl	24(%ebp), %eax
	movl	$0, 12(%esp)
	movl	-80(%ebp), %ecx
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad3iiii
	movl	%eax, %edx
	.loc 6 4553 11
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 6 4554 12
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 4554 4
	testl	%eax, %eax
	jne	L1512
	.loc 6 4554 24 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1513
L1512:
	.loc 6 4556 30
	movl	24(%ebp), %eax
	movl	$7, 12(%esp)
	movl	32(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__mad3sizes_validiiii
	.loc 6 4556 8
	testl	%eax, %eax
	sete	%al
	.loc 6 4556 4
	testb	%al, %al
	je	L1514
	.loc 6 4556 59 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1513
L1514:
	.loc 6 4557 31
	movl	-76(%ebp), %eax
	imull	24(%ebp), %eax
	movl	%eax, %edx
	.loc 6 4557 35
	movl	32(%ebp), %eax
	imull	%edx, %eax
	.loc 6 4557 44
	addl	$7, %eax
	.loc 6 4557 20
	shrl	$3, %eax
	movl	%eax, -84(%ebp)
	.loc 6 4558 31
	movl	-84(%ebp), %eax
	leal	1(%eax), %edx
	.loc 6 4558 12
	movl	28(%ebp), %eax
	imull	%edx, %eax
	movl	%eax, -88(%ebp)
	.loc 6 4563 4
	movl	16(%ebp), %eax
	cmpl	-88(%ebp), %eax
	jnb	L1515
	.loc 6 4563 34 discriminator 1
	movl	$LC85, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1513
L1515:
LBB303:
	.loc 6 4565 10
	movl	$0, -16(%ebp)
L1602:
	.loc 6 4565 16 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	28(%ebp), %eax
	jnb	L1516
LBB304:
	.loc 6 4566 25
	movl	8(%ebp), %eax
	movl	12(%eax), %edx
	.loc 6 4566 37
	movl	-72(%ebp), %eax
	imull	-16(%ebp), %eax
	.loc 6 4566 16
	addl	%edx, %eax
	movl	%eax, -32(%ebp)
	.loc 6 4568 24
	movl	12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, 12(%ebp)
	.loc 6 4568 20
	movzbl	(%eax), %eax
	.loc 6 4568 24
	movzbl	%al, %eax
	movl	%eax, -40(%ebp)
	.loc 6 4570 7
	cmpl	$4, -40(%ebp)
	jle	L1517
	.loc 6 4571 17
	movl	$LC86, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1513
L1517:
	.loc 6 4573 7
	cmpl	$7, 32(%ebp)
	jg	L1518
	.loc 6 4574 10
	movl	-84(%ebp), %eax
	cmpl	24(%ebp), %eax
	jbe	L1519
	.loc 6 4574 42 discriminator 1
	movl	$LC87, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1513
L1519:
	.loc 6 4575 18
	movl	20(%ebp), %eax
	imull	24(%ebp), %eax
	.loc 6 4575 25
	subl	-84(%ebp), %eax
	.loc 6 4575 14
	addl	%eax, -32(%ebp)
	.loc 6 4576 23
	movl	$1, -24(%ebp)
	.loc 6 4577 16
	movl	-84(%ebp), %eax
	movl	%eax, -28(%ebp)
L1518:
	.loc 6 4579 19
	movl	-72(%ebp), %eax
	negl	%eax
	movl	%eax, %edx
	.loc 6 4579 13
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -36(%ebp)
	.loc 6 4582 7
	cmpl	$0, -16(%ebp)
	jne	L1520
	.loc 6 4582 51 discriminator 1
	movl	-40(%ebp), %eax
	addl	$__ZL16first_row_filter, %eax
	movzbl	(%eax), %eax
	.loc 6 4582 26 discriminator 1
	movzbl	%al, %eax
	movl	%eax, -40(%ebp)
L1520:
	.loc 6 4585 13
	movl	$0, -20(%ebp)
L1531:
	.loc 6 4585 19 discriminator 1
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L1521
	.loc 6 4586 10
	cmpl	$6, -40(%ebp)
	ja	L1522
	movl	-40(%ebp), %eax
	sall	$2, %eax
	addl	$L1524, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section .rdata,"dr"
	.align 4
L1524:
	.long	L1530
	.long	L1529
	.long	L1528
	.long	L1527
	.long	L1526
	.long	L1525
	.long	L1523
	.text
L1530:
	.loc 6 4587 53
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4587 44
	movl	-20(%ebp), %ecx
	movl	-32(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 4587 53
	movzbl	(%eax), %eax
	.loc 6 4587 46
	movb	%al, (%edx)
	.loc 6 4587 56
	jmp	L1522
L1529:
	.loc 6 4588 53
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4588 44
	movl	-20(%ebp), %ecx
	movl	-32(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 4588 53
	movzbl	(%eax), %eax
	.loc 6 4588 46
	movb	%al, (%edx)
	.loc 6 4588 56
	jmp	L1522
L1528:
	.loc 6 4589 48
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ecx
	movl	-20(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 6 4589 44
	movl	-20(%ebp), %ebx
	movl	-32(%ebp), %eax
	addl	%ebx, %eax
	.loc 6 4589 48
	addl	%ecx, %edx
	.loc 6 4589 46
	movb	%dl, (%eax)
	.loc 6 4589 83
	jmp	L1522
L1527:
	.loc 6 4590 48
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	movl	-20(%ebp), %ecx
	movl	-36(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	sarl	%eax
	movl	%eax, %ebx
	.loc 6 4590 44
	movl	-20(%ebp), %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 4590 48
	addl	%ebx, %edx
	.loc 6 4590 46
	movb	%dl, (%eax)
	.loc 6 4590 88
	jmp	L1522
L1526:
	.loc 6 4591 48
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ebx
	movl	-20(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	__ZL11stbi__paethiii
	movl	%eax, %ecx
	.loc 6 4591 44
	movl	-20(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4591 48
	leal	(%ebx,%ecx), %edx
	.loc 6 4591 46
	movb	%dl, (%eax)
	.loc 6 4591 100
	jmp	L1522
L1525:
	.loc 6 4592 53
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4592 44
	movl	-20(%ebp), %ecx
	movl	-32(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 4592 53
	movzbl	(%eax), %eax
	.loc 6 4592 46
	movb	%al, (%edx)
	.loc 6 4592 56
	jmp	L1522
L1523:
	.loc 6 4593 53
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4593 44
	movl	-20(%ebp), %ecx
	movl	-32(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 4593 53
	movzbl	(%eax), %eax
	.loc 6 4593 46
	movb	%al, (%edx)
	.loc 6 4593 56
	nop
L1522:
	.loc 6 4585 7 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L1531
L1521:
	.loc 6 4597 7
	cmpl	$8, 32(%ebp)
	jne	L1532
	.loc 6 4598 10
	movl	-76(%ebp), %eax
	cmpl	20(%ebp), %eax
	je	L1533
	.loc 6 4599 22
	movl	-76(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4599 24
	movb	$-1, (%eax)
L1533:
	.loc 6 4600 14
	movl	-76(%ebp), %eax
	addl	%eax, 12(%ebp)
	.loc 6 4601 14
	movl	20(%ebp), %eax
	addl	%eax, -32(%ebp)
	.loc 6 4602 16
	movl	20(%ebp), %eax
	addl	%eax, -36(%ebp)
	jmp	L1534
L1532:
	.loc 6 4603 14
	cmpl	$16, 32(%ebp)
	jne	L1535
	.loc 6 4604 10
	movl	-76(%ebp), %eax
	cmpl	20(%ebp), %eax
	je	L1536
	.loc 6 4605 29
	movl	-24(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4605 33
	movb	$-1, (%eax)
	.loc 6 4606 31
	movl	-24(%ebp), %eax
	leal	1(%eax), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4606 33
	movb	$-1, (%eax)
L1536:
	.loc 6 4608 14
	movl	-24(%ebp), %eax
	addl	%eax, 12(%ebp)
	.loc 6 4609 14
	movl	-80(%ebp), %eax
	addl	%eax, -32(%ebp)
	.loc 6 4610 16
	movl	-80(%ebp), %eax
	addl	%eax, -36(%ebp)
	jmp	L1534
L1535:
	.loc 6 4612 14
	addl	$1, 12(%ebp)
	.loc 6 4613 14
	addl	$1, -32(%ebp)
	.loc 6 4614 16
	addl	$1, -36(%ebp)
L1534:
LBB305:
	.loc 6 4618 7
	cmpl	$7, 32(%ebp)
	jle	L1537
	.loc 6 4618 21 discriminator 1
	movl	-76(%ebp), %eax
	cmpl	20(%ebp), %eax
	jne	L1538
L1537:
LBB306:
	.loc 6 4619 26
	movl	-28(%ebp), %eax
	leal	-1(%eax), %edx
	.loc 6 4619 14
	movl	-24(%ebp), %eax
	imull	%edx, %eax
	movl	%eax, -92(%ebp)
	.loc 6 4623 10
	cmpl	$6, -40(%ebp)
	ja	L1539
	movl	-40(%ebp), %eax
	sall	$2, %eax
	addl	$L1541, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section .rdata,"dr"
	.align 4
L1541:
	.long	L1547
	.long	L1546
	.long	L1545
	.long	L1544
	.long	L1543
	.long	L1542
	.long	L1540
	.text
L1547:
	.loc 6 4625 46
	movl	-92(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	_memcpy
	.loc 6 4625 62
	jmp	L1539
L1546:
	.loc 6 4626 13
	movl	$0, -20(%ebp)
L1549:
	.loc 6 4626 13 is_stmt 0 discriminator 3
	movl	-20(%ebp), %eax
	cmpl	-92(%ebp), %eax
	jge	L1637
	.loc 6 4626 57 is_stmt 1 discriminator 2
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ecx
	movl	-20(%ebp), %eax
	subl	-24(%ebp), %eax
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 6 4626 53 discriminator 2
	movl	-20(%ebp), %ebx
	movl	-32(%ebp), %eax
	addl	%ebx, %eax
	.loc 6 4626 57 discriminator 2
	addl	%ecx, %edx
	.loc 6 4626 55 discriminator 2
	movb	%dl, (%eax)
	.loc 6 4626 13 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L1549
L1545:
	.loc 6 4627 13
	movl	$0, -20(%ebp)
L1551:
	.loc 6 4627 13 is_stmt 0 discriminator 3
	movl	-20(%ebp), %eax
	cmpl	-92(%ebp), %eax
	jge	L1638
	.loc 6 4627 57 is_stmt 1 discriminator 2
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ecx
	movl	-20(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 6 4627 53 discriminator 2
	movl	-20(%ebp), %ebx
	movl	-32(%ebp), %eax
	addl	%ebx, %eax
	.loc 6 4627 57 discriminator 2
	addl	%ecx, %edx
	.loc 6 4627 55 discriminator 2
	movb	%dl, (%eax)
	.loc 6 4627 13 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L1551
L1544:
	.loc 6 4628 13
	movl	$0, -20(%ebp)
L1553:
	.loc 6 4628 13 is_stmt 0 discriminator 3
	movl	-20(%ebp), %eax
	cmpl	-92(%ebp), %eax
	jge	L1639
	.loc 6 4628 57 is_stmt 1 discriminator 2
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	movl	-20(%ebp), %ecx
	movl	-36(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %ecx
	movl	-20(%ebp), %eax
	subl	-24(%ebp), %eax
	movl	%eax, %ebx
	movl	-32(%ebp), %eax
	addl	%ebx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	addl	%ecx, %eax
	sarl	%eax
	movl	%eax, %ebx
	.loc 6 4628 53 discriminator 2
	movl	-20(%ebp), %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 4628 57 discriminator 2
	addl	%ebx, %edx
	.loc 6 4628 55 discriminator 2
	movb	%dl, (%eax)
	.loc 6 4628 13 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L1553
L1543:
	.loc 6 4629 13
	movl	$0, -20(%ebp)
L1555:
	.loc 6 4629 13 is_stmt 0 discriminator 3
	movl	-20(%ebp), %eax
	cmpl	-92(%ebp), %eax
	jge	L1640
	.loc 6 4629 57 is_stmt 1 discriminator 2
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ebx
	movl	-20(%ebp), %eax
	subl	-24(%ebp), %eax
	movl	%eax, %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %ecx
	movl	-20(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	-20(%ebp), %eax
	subl	-24(%ebp), %eax
	movl	%eax, %esi
	movl	-32(%ebp), %eax
	addl	%esi, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL11stbi__paethiii
	movl	%eax, %ecx
	.loc 6 4629 53 discriminator 2
	movl	-20(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4629 57 discriminator 2
	leal	(%ebx,%ecx), %edx
	.loc 6 4629 55 discriminator 2
	movb	%dl, (%eax)
	.loc 6 4629 13 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L1555
L1542:
	.loc 6 4630 13
	movl	$0, -20(%ebp)
L1557:
	.loc 6 4630 13 is_stmt 0 discriminator 3
	movl	-20(%ebp), %eax
	cmpl	-92(%ebp), %eax
	jge	L1641
	.loc 6 4630 57 is_stmt 1 discriminator 2
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	movl	-20(%ebp), %eax
	subl	-24(%ebp), %eax
	movl	%eax, %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	sarl	%eax
	movl	%eax, %ebx
	.loc 6 4630 53 discriminator 2
	movl	-20(%ebp), %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 4630 57 discriminator 2
	addl	%ebx, %edx
	.loc 6 4630 55 discriminator 2
	movb	%dl, (%eax)
	.loc 6 4630 13 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L1557
L1540:
	.loc 6 4631 13
	movl	$0, -20(%ebp)
L1559:
	.loc 6 4631 13 is_stmt 0 discriminator 3
	movl	-20(%ebp), %eax
	cmpl	-92(%ebp), %eax
	jge	L1642
	.loc 6 4631 57 is_stmt 1 discriminator 2
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ebx
	movl	-20(%ebp), %eax
	subl	-24(%ebp), %eax
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL11stbi__paethiii
	movl	%eax, %ecx
	.loc 6 4631 53 discriminator 2
	movl	-20(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4631 57 discriminator 2
	leal	(%ebx,%ecx), %edx
	.loc 6 4631 55 discriminator 2
	movb	%dl, (%eax)
	.loc 6 4631 13 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L1559
L1637:
	.loc 6 4626 105
	nop
	jmp	L1539
L1638:
	.loc 6 4627 94
	nop
	jmp	L1539
L1639:
	.loc 6 4628 123
	nop
	jmp	L1539
L1640:
	.loc 6 4629 149
	nop
	jmp	L1539
L1641:
	.loc 6 4630 112
	nop
	jmp	L1539
L1642:
	.loc 6 4631 122
	nop
L1539:
	.loc 6 4634 14
	movl	-92(%ebp), %eax
	addl	%eax, 12(%ebp)
LBE306:
	.loc 6 4634 19
	jmp	L1560
L1538:
	.loc 6 4636 10
	movl	-76(%ebp), %eax
	addl	$1, %eax
	cmpl	%eax, 20(%ebp)
	je	L1563
	.loc 6 4636 10 is_stmt 0 discriminator 2
	movl	$4636, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC88, (%esp)
	call	__assert
L1563:
	.loc 6 4641 10 is_stmt 1
	cmpl	$6, -40(%ebp)
	ja	L1564
	movl	-40(%ebp), %eax
	sall	$2, %eax
	addl	$L1566, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section .rdata,"dr"
	.align 4
L1566:
	.long	L1572
	.long	L1571
	.long	L1570
	.long	L1569
	.long	L1568
	.long	L1567
	.long	L1565
	.text
L1572:
	.loc 6 4642 13
	movl	24(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L1576:
	.loc 6 4642 13 is_stmt 0 discriminator 7
	cmpl	$0, -12(%ebp)
	je	L1643
	.loc 6 4642 13 discriminator 2
	movl	$0, -20(%ebp)
L1575:
	.loc 6 4642 13 discriminator 6
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L1574
	.loc 6 4642 62 is_stmt 1 discriminator 5
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4642 53 discriminator 5
	movl	-20(%ebp), %ecx
	movl	-32(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 4642 62 discriminator 5
	movzbl	(%eax), %eax
	.loc 6 4642 55 discriminator 5
	movb	%al, (%edx)
	.loc 6 4642 13 discriminator 5
	addl	$1, -20(%ebp)
	jmp	L1575
L1574:
	.loc 6 4642 13 is_stmt 0 discriminator 4
	subl	$1, -12(%ebp)
	movl	-24(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movb	$-1, (%eax)
	movl	-24(%ebp), %eax
	addl	%eax, 12(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -32(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -36(%ebp)
	jmp	L1576
L1571:
	.loc 6 4643 13 is_stmt 1
	movl	24(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L1580:
	.loc 6 4643 13 is_stmt 0 discriminator 7
	cmpl	$0, -12(%ebp)
	je	L1644
	.loc 6 4643 13 discriminator 2
	movl	$0, -20(%ebp)
L1579:
	.loc 6 4643 13 discriminator 6
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L1578
	.loc 6 4643 57 is_stmt 1 discriminator 5
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ecx
	movl	-20(%ebp), %eax
	subl	-80(%ebp), %eax
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 6 4643 53 discriminator 5
	movl	-20(%ebp), %ebx
	movl	-32(%ebp), %eax
	addl	%ebx, %eax
	.loc 6 4643 57 discriminator 5
	addl	%ecx, %edx
	.loc 6 4643 55 discriminator 5
	movb	%dl, (%eax)
	.loc 6 4643 13 discriminator 5
	addl	$1, -20(%ebp)
	jmp	L1579
L1578:
	.loc 6 4643 13 is_stmt 0 discriminator 4
	subl	$1, -12(%ebp)
	movl	-24(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movb	$-1, (%eax)
	movl	-24(%ebp), %eax
	addl	%eax, 12(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -32(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -36(%ebp)
	jmp	L1580
L1570:
	.loc 6 4644 13 is_stmt 1
	movl	24(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L1584:
	.loc 6 4644 13 is_stmt 0 discriminator 7
	cmpl	$0, -12(%ebp)
	je	L1645
	.loc 6 4644 13 discriminator 2
	movl	$0, -20(%ebp)
L1583:
	.loc 6 4644 13 discriminator 6
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L1582
	.loc 6 4644 57 is_stmt 1 discriminator 5
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ecx
	movl	-20(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 6 4644 53 discriminator 5
	movl	-20(%ebp), %ebx
	movl	-32(%ebp), %eax
	addl	%ebx, %eax
	.loc 6 4644 57 discriminator 5
	addl	%ecx, %edx
	.loc 6 4644 55 discriminator 5
	movb	%dl, (%eax)
	.loc 6 4644 13 discriminator 5
	addl	$1, -20(%ebp)
	jmp	L1583
L1582:
	.loc 6 4644 13 is_stmt 0 discriminator 4
	subl	$1, -12(%ebp)
	movl	-24(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movb	$-1, (%eax)
	movl	-24(%ebp), %eax
	addl	%eax, 12(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -32(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -36(%ebp)
	jmp	L1584
L1569:
	.loc 6 4645 13 is_stmt 1
	movl	24(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L1588:
	.loc 6 4645 13 is_stmt 0 discriminator 7
	cmpl	$0, -12(%ebp)
	je	L1646
	.loc 6 4645 13 discriminator 2
	movl	$0, -20(%ebp)
L1587:
	.loc 6 4645 13 discriminator 6
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L1586
	.loc 6 4645 57 is_stmt 1 discriminator 5
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	movl	-20(%ebp), %ecx
	movl	-36(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %ecx
	movl	-20(%ebp), %eax
	subl	-80(%ebp), %eax
	movl	%eax, %ebx
	movl	-32(%ebp), %eax
	addl	%ebx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	addl	%ecx, %eax
	sarl	%eax
	movl	%eax, %ebx
	.loc 6 4645 53 discriminator 5
	movl	-20(%ebp), %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 4645 57 discriminator 5
	addl	%ebx, %edx
	.loc 6 4645 55 discriminator 5
	movb	%dl, (%eax)
	.loc 6 4645 13 discriminator 5
	addl	$1, -20(%ebp)
	jmp	L1587
L1586:
	.loc 6 4645 13 is_stmt 0 discriminator 4
	subl	$1, -12(%ebp)
	movl	-24(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movb	$-1, (%eax)
	movl	-24(%ebp), %eax
	addl	%eax, 12(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -32(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -36(%ebp)
	jmp	L1588
L1568:
	.loc 6 4646 13 is_stmt 1
	movl	24(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L1592:
	.loc 6 4646 13 is_stmt 0 discriminator 7
	cmpl	$0, -12(%ebp)
	je	L1647
	.loc 6 4646 13 discriminator 2
	movl	$0, -20(%ebp)
L1591:
	.loc 6 4646 13 discriminator 6
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L1590
	.loc 6 4646 57 is_stmt 1 discriminator 5
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ebx
	movl	-20(%ebp), %eax
	subl	-80(%ebp), %eax
	movl	%eax, %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %ecx
	movl	-20(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	-20(%ebp), %eax
	subl	-80(%ebp), %eax
	movl	%eax, %esi
	movl	-32(%ebp), %eax
	addl	%esi, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL11stbi__paethiii
	movl	%eax, %ecx
	.loc 6 4646 53 discriminator 5
	movl	-20(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4646 57 discriminator 5
	leal	(%ebx,%ecx), %edx
	.loc 6 4646 55 discriminator 5
	movb	%dl, (%eax)
	.loc 6 4646 13 discriminator 5
	addl	$1, -20(%ebp)
	jmp	L1591
L1590:
	.loc 6 4646 13 is_stmt 0 discriminator 4
	subl	$1, -12(%ebp)
	movl	-24(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movb	$-1, (%eax)
	movl	-24(%ebp), %eax
	addl	%eax, 12(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -32(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -36(%ebp)
	jmp	L1592
L1567:
	.loc 6 4647 13 is_stmt 1
	movl	24(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L1596:
	.loc 6 4647 13 is_stmt 0 discriminator 7
	cmpl	$0, -12(%ebp)
	je	L1648
	.loc 6 4647 13 discriminator 2
	movl	$0, -20(%ebp)
L1595:
	.loc 6 4647 13 discriminator 6
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L1594
	.loc 6 4647 57 is_stmt 1 discriminator 5
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	movl	-20(%ebp), %eax
	subl	-80(%ebp), %eax
	movl	%eax, %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	sarl	%eax
	movl	%eax, %ebx
	.loc 6 4647 53 discriminator 5
	movl	-20(%ebp), %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	.loc 6 4647 57 discriminator 5
	addl	%ebx, %edx
	.loc 6 4647 55 discriminator 5
	movb	%dl, (%eax)
	.loc 6 4647 13 discriminator 5
	addl	$1, -20(%ebp)
	jmp	L1595
L1594:
	.loc 6 4647 13 is_stmt 0 discriminator 4
	subl	$1, -12(%ebp)
	movl	-24(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movb	$-1, (%eax)
	movl	-24(%ebp), %eax
	addl	%eax, 12(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -32(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -36(%ebp)
	jmp	L1596
L1565:
	.loc 6 4648 13 is_stmt 1
	movl	24(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
L1600:
	.loc 6 4648 13 is_stmt 0 discriminator 7
	cmpl	$0, -12(%ebp)
	je	L1649
	.loc 6 4648 13 discriminator 2
	movl	$0, -20(%ebp)
L1599:
	.loc 6 4648 13 discriminator 6
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L1598
	.loc 6 4648 57 is_stmt 1 discriminator 5
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ebx
	movl	-20(%ebp), %eax
	subl	-80(%ebp), %eax
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL11stbi__paethiii
	movl	%eax, %ecx
	.loc 6 4648 53 discriminator 5
	movl	-20(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4648 57 discriminator 5
	leal	(%ebx,%ecx), %edx
	.loc 6 4648 55 discriminator 5
	movb	%dl, (%eax)
	.loc 6 4648 13 discriminator 5
	addl	$1, -20(%ebp)
	jmp	L1599
L1598:
	.loc 6 4648 13 is_stmt 0 discriminator 4
	subl	$1, -12(%ebp)
	movl	-24(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movb	$-1, (%eax)
	movl	-24(%ebp), %eax
	addl	%eax, 12(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -32(%ebp)
	movl	-80(%ebp), %eax
	addl	%eax, -36(%ebp)
	jmp	L1600
L1643:
	.loc 6 4642 67 is_stmt 1
	nop
	jmp	L1564
L1644:
	.loc 6 4643 106
	nop
	jmp	L1564
L1645:
	.loc 6 4644 94
	nop
	jmp	L1564
L1646:
	.loc 6 4645 124
	nop
	jmp	L1564
L1647:
	.loc 6 4646 151
	nop
	jmp	L1564
L1648:
	.loc 6 4647 113
	nop
	jmp	L1564
L1649:
	.loc 6 4648 123
	nop
L1564:
	.loc 6 4654 10
	cmpl	$16, 32(%ebp)
	jne	L1560
	.loc 6 4655 22
	movl	8(%ebp), %eax
	movl	12(%eax), %edx
	.loc 6 4655 34
	movl	-72(%ebp), %eax
	imull	-16(%ebp), %eax
	.loc 6 4655 17
	addl	%edx, %eax
	movl	%eax, -32(%ebp)
	.loc 6 4656 19
	movl	$0, -12(%ebp)
L1601:
	.loc 6 4656 25 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	24(%ebp), %eax
	jnb	L1560
	.loc 6 4657 34 discriminator 2
	movl	-24(%ebp), %eax
	leal	1(%eax), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4657 36 discriminator 2
	movb	$-1, (%eax)
	.loc 6 4656 13 discriminator 2
	addl	$1, -12(%ebp)
	.loc 6 4656 37 discriminator 2
	movl	-80(%ebp), %eax
	addl	%eax, -32(%ebp)
	.loc 6 4656 13 discriminator 2
	jmp	L1601
L1560:
LBE305:
LBE304:
	.loc 6 4565 4 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L1602
L1516:
LBE303:
LBB307:
	.loc 6 4666 4
	cmpl	$7, 32(%ebp)
	jg	L1603
LBB308:
LBB309:
	.loc 6 4667 13
	movl	$0, -16(%ebp)
L1632:
	.loc 6 4667 19 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	28(%ebp), %eax
	jnb	L1633
LBB310:
	.loc 6 4668 28
	movl	8(%ebp), %eax
	movl	12(%eax), %edx
	.loc 6 4668 40
	movl	-72(%ebp), %eax
	imull	-16(%ebp), %eax
	.loc 6 4668 19
	addl	%edx, %eax
	movl	%eax, -44(%ebp)
	.loc 6 4669 28
	movl	8(%ebp), %eax
	movl	12(%eax), %edx
	.loc 6 4669 40
	movl	-72(%ebp), %eax
	imull	-16(%ebp), %eax
	movl	%eax, %ecx
	.loc 6 4669 46
	movl	20(%ebp), %eax
	imull	24(%ebp), %eax
	.loc 6 4669 43
	addl	%ecx, %eax
	.loc 6 4669 53
	subl	-84(%ebp), %eax
	.loc 6 4669 19
	addl	%edx, %eax
	movl	%eax, -48(%ebp)
	.loc 6 4672 18
	cmpl	$0, 36(%ebp)
	jne	L1605
	.loc 6 4672 18 is_stmt 0 discriminator 1
	movl	32(%ebp), %eax
	addl	$__ZL23stbi__depth_scale_table, %eax
	movzbl	(%eax), %eax
	jmp	L1606
L1605:
	.loc 6 4672 18 discriminator 2
	movl	$1, %eax
L1606:
	.loc 6 4672 18 discriminator 4
	movb	%al, -93(%ebp)
	.loc 6 4680 10 is_stmt 1 discriminator 4
	cmpl	$4, 32(%ebp)
	jne	L1607
	.loc 6 4681 21
	movl	-76(%ebp), %eax
	imull	24(%ebp), %eax
	.loc 6 4681 19
	movl	%eax, -20(%ebp)
L1609:
	.loc 6 4681 31 discriminator 3
	cmpl	$1, -20(%ebp)
	jle	L1608
	.loc 6 4682 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4682 39 discriminator 2
	sarl	$4, %eax
	.loc 6 4682 23 discriminator 2
	movl	%eax, %ecx
	.loc 6 4682 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4682 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4683 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 4683 23 discriminator 2
	andl	$15, %eax
	movl	%eax, %ecx
	.loc 6 4683 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4683 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4681 38 discriminator 2
	subl	$2, -20(%ebp)
	.loc 6 4681 13 discriminator 2
	addl	$1, -48(%ebp)
	jmp	L1609
L1608:
	.loc 6 4685 13
	cmpl	$0, -20(%ebp)
	jle	L1610
	.loc 6 4685 43 discriminator 1
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4685 47 discriminator 1
	sarl	$4, %eax
	.loc 6 4685 31 discriminator 1
	movl	%eax, %ecx
	.loc 6 4685 28 discriminator 1
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4685 31 discriminator 1
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	jmp	L1610
L1607:
	.loc 6 4686 17
	cmpl	$2, 32(%ebp)
	jne	L1611
	.loc 6 4687 21
	movl	-76(%ebp), %eax
	imull	24(%ebp), %eax
	.loc 6 4687 19
	movl	%eax, -20(%ebp)
L1613:
	.loc 6 4687 31 discriminator 3
	cmpl	$3, -20(%ebp)
	jle	L1612
	.loc 6 4688 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4688 39 discriminator 2
	sarl	$6, %eax
	.loc 6 4688 23 discriminator 2
	movl	%eax, %ecx
	.loc 6 4688 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4688 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4689 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4689 39 discriminator 2
	sarl	$4, %eax
	.loc 6 4689 23 discriminator 2
	andl	$3, %eax
	movl	%eax, %ecx
	.loc 6 4689 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4689 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4690 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4690 39 discriminator 2
	sarl	$2, %eax
	.loc 6 4690 23 discriminator 2
	andl	$3, %eax
	movl	%eax, %ecx
	.loc 6 4690 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4690 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4691 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 4691 23 discriminator 2
	andl	$3, %eax
	movl	%eax, %ecx
	.loc 6 4691 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4691 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4687 38 discriminator 2
	subl	$4, -20(%ebp)
	.loc 6 4687 13 discriminator 2
	addl	$1, -48(%ebp)
	jmp	L1613
L1612:
	.loc 6 4693 13
	cmpl	$0, -20(%ebp)
	jle	L1614
	.loc 6 4693 43 discriminator 1
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4693 47 discriminator 1
	sarl	$6, %eax
	.loc 6 4693 31 discriminator 1
	movl	%eax, %ecx
	.loc 6 4693 28 discriminator 1
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4693 31 discriminator 1
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
L1614:
	.loc 6 4694 13
	cmpl	$1, -20(%ebp)
	jle	L1615
	.loc 6 4694 43 discriminator 1
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4694 47 discriminator 1
	sarl	$4, %eax
	.loc 6 4694 31 discriminator 1
	andl	$3, %eax
	movl	%eax, %ecx
	.loc 6 4694 28 discriminator 1
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4694 31 discriminator 1
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
L1615:
	.loc 6 4695 13
	cmpl	$2, -20(%ebp)
	jle	L1610
	.loc 6 4695 43 discriminator 1
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4695 47 discriminator 1
	sarl	$2, %eax
	.loc 6 4695 31 discriminator 1
	andl	$3, %eax
	movl	%eax, %ecx
	.loc 6 4695 28 discriminator 1
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4695 31 discriminator 1
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	jmp	L1610
L1611:
	.loc 6 4696 17
	cmpl	$1, 32(%ebp)
	jne	L1610
	.loc 6 4697 21
	movl	-76(%ebp), %eax
	imull	24(%ebp), %eax
	.loc 6 4697 19
	movl	%eax, -20(%ebp)
L1617:
	.loc 6 4697 31 discriminator 3
	cmpl	$7, -20(%ebp)
	jle	L1616
	.loc 6 4698 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4698 39 discriminator 2
	sarl	$7, %eax
	.loc 6 4698 23 discriminator 2
	movl	%eax, %ecx
	.loc 6 4698 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4698 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4699 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4699 39 discriminator 2
	sarl	$6, %eax
	.loc 6 4699 23 discriminator 2
	andl	$1, %eax
	movl	%eax, %ecx
	.loc 6 4699 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4699 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4700 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4700 39 discriminator 2
	sarl	$5, %eax
	.loc 6 4700 23 discriminator 2
	andl	$1, %eax
	movl	%eax, %ecx
	.loc 6 4700 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4700 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4701 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4701 39 discriminator 2
	sarl	$4, %eax
	.loc 6 4701 23 discriminator 2
	andl	$1, %eax
	movl	%eax, %ecx
	.loc 6 4701 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4701 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4702 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4702 39 discriminator 2
	sarl	$3, %eax
	.loc 6 4702 23 discriminator 2
	andl	$1, %eax
	movl	%eax, %ecx
	.loc 6 4702 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4702 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4703 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4703 39 discriminator 2
	sarl	$2, %eax
	.loc 6 4703 23 discriminator 2
	andl	$1, %eax
	movl	%eax, %ecx
	.loc 6 4703 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4703 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4704 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4704 39 discriminator 2
	sarl	%eax
	.loc 6 4704 23 discriminator 2
	andl	$1, %eax
	movl	%eax, %ecx
	.loc 6 4704 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4704 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4705 35 discriminator 2
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 4705 23 discriminator 2
	andl	$1, %eax
	movl	%eax, %ecx
	.loc 6 4705 20 discriminator 2
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4705 23 discriminator 2
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
	.loc 6 4697 38 discriminator 2
	subl	$8, -20(%ebp)
	.loc 6 4697 13 discriminator 2
	addl	$1, -48(%ebp)
	jmp	L1617
L1616:
	.loc 6 4707 13
	cmpl	$0, -20(%ebp)
	jle	L1618
	.loc 6 4707 43 discriminator 1
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4707 47 discriminator 1
	sarl	$7, %eax
	.loc 6 4707 31 discriminator 1
	movl	%eax, %ecx
	.loc 6 4707 28 discriminator 1
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4707 31 discriminator 1
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
L1618:
	.loc 6 4708 13
	cmpl	$1, -20(%ebp)
	jle	L1619
	.loc 6 4708 43 discriminator 1
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4708 47 discriminator 1
	sarl	$6, %eax
	.loc 6 4708 31 discriminator 1
	andl	$1, %eax
	movl	%eax, %ecx
	.loc 6 4708 28 discriminator 1
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4708 31 discriminator 1
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
L1619:
	.loc 6 4709 13
	cmpl	$2, -20(%ebp)
	jle	L1620
	.loc 6 4709 43 discriminator 1
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4709 47 discriminator 1
	sarl	$5, %eax
	.loc 6 4709 31 discriminator 1
	andl	$1, %eax
	movl	%eax, %ecx
	.loc 6 4709 28 discriminator 1
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4709 31 discriminator 1
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
L1620:
	.loc 6 4710 13
	cmpl	$3, -20(%ebp)
	jle	L1621
	.loc 6 4710 43 discriminator 1
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4710 47 discriminator 1
	sarl	$4, %eax
	.loc 6 4710 31 discriminator 1
	andl	$1, %eax
	movl	%eax, %ecx
	.loc 6 4710 28 discriminator 1
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4710 31 discriminator 1
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
L1621:
	.loc 6 4711 13
	cmpl	$4, -20(%ebp)
	jle	L1622
	.loc 6 4711 43 discriminator 1
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4711 47 discriminator 1
	sarl	$3, %eax
	.loc 6 4711 31 discriminator 1
	andl	$1, %eax
	movl	%eax, %ecx
	.loc 6 4711 28 discriminator 1
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4711 31 discriminator 1
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
L1622:
	.loc 6 4712 13
	cmpl	$5, -20(%ebp)
	jle	L1623
	.loc 6 4712 43 discriminator 1
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4712 47 discriminator 1
	sarl	$2, %eax
	.loc 6 4712 31 discriminator 1
	andl	$1, %eax
	movl	%eax, %ecx
	.loc 6 4712 28 discriminator 1
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4712 31 discriminator 1
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
L1623:
	.loc 6 4713 13
	cmpl	$6, -20(%ebp)
	jle	L1610
	.loc 6 4713 43 discriminator 1
	movl	-48(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4713 47 discriminator 1
	sarl	%eax
	.loc 6 4713 31 discriminator 1
	andl	$1, %eax
	movl	%eax, %ecx
	.loc 6 4713 28 discriminator 1
	movl	-44(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -44(%ebp)
	.loc 6 4713 31 discriminator 1
	movl	%ecx, %eax
	mulb	-93(%ebp)
	movb	%al, (%edx)
L1610:
LBB311:
	.loc 6 4715 10
	movl	-76(%ebp), %eax
	cmpl	20(%ebp), %eax
	je	L1624
LBB312:
	.loc 6 4718 22
	movl	8(%ebp), %eax
	movl	12(%eax), %edx
	.loc 6 4718 34
	movl	-72(%ebp), %eax
	imull	-16(%ebp), %eax
	.loc 6 4718 17
	addl	%edx, %eax
	movl	%eax, -44(%ebp)
	.loc 6 4719 13
	cmpl	$1, -76(%ebp)
	jne	L1625
	.loc 6 4720 24
	movl	24(%ebp), %eax
	subl	$1, %eax
	.loc 6 4720 22
	movl	%eax, -52(%ebp)
L1627:
	.loc 6 4720 30 discriminator 3
	cmpl	$0, -52(%ebp)
	js	L1624
	.loc 6 4721 24 discriminator 2
	movl	-52(%ebp), %eax
	addl	%eax, %eax
	.loc 6 4721 28 discriminator 2
	leal	1(%eax), %edx
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4721 30 discriminator 2
	movb	$-1, (%eax)
	.loc 6 4722 37 discriminator 2
	movl	-52(%ebp), %edx
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4722 24 discriminator 2
	movl	-52(%ebp), %edx
	addl	%edx, %edx
	movl	%edx, %ecx
	.loc 6 4722 28 discriminator 2
	movl	-44(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 4722 37 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 4722 30 discriminator 2
	movb	%al, (%edx)
	.loc 6 4720 16 discriminator 2
	subl	$1, -52(%ebp)
	jmp	L1627
L1625:
	.loc 6 4725 16
	cmpl	$3, -76(%ebp)
	je	L1630
	.loc 6 4725 16 is_stmt 0 discriminator 2
	movl	$4725, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC89, (%esp)
	call	__assert
L1630:
	.loc 6 4726 24 is_stmt 1
	movl	24(%ebp), %eax
	subl	$1, %eax
	.loc 6 4726 22
	movl	%eax, -52(%ebp)
L1631:
	.loc 6 4726 30 discriminator 3
	cmpl	$0, -52(%ebp)
	js	L1624
	.loc 6 4727 24 discriminator 2
	movl	-52(%ebp), %eax
	sall	$2, %eax
	.loc 6 4727 28 discriminator 2
	leal	3(%eax), %edx
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4727 30 discriminator 2
	movb	$-1, (%eax)
	.loc 6 4728 37 discriminator 2
	movl	-52(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	.loc 6 4728 41 discriminator 2
	leal	2(%eax), %edx
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4728 24 discriminator 2
	movl	-52(%ebp), %edx
	sall	$2, %edx
	.loc 6 4728 28 discriminator 2
	leal	2(%edx), %ecx
	movl	-44(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 4728 41 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 4728 30 discriminator 2
	movb	%al, (%edx)
	.loc 6 4729 37 discriminator 2
	movl	-52(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	.loc 6 4729 41 discriminator 2
	leal	1(%eax), %edx
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4729 24 discriminator 2
	movl	-52(%ebp), %edx
	sall	$2, %edx
	.loc 6 4729 28 discriminator 2
	leal	1(%edx), %ecx
	movl	-44(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 4729 41 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 4729 30 discriminator 2
	movb	%al, (%edx)
	.loc 6 4730 37 discriminator 2
	movl	-52(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 6 4730 41 discriminator 2
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4730 24 discriminator 2
	movl	-52(%ebp), %edx
	sall	$2, %edx
	movl	%edx, %ecx
	.loc 6 4730 28 discriminator 2
	movl	-44(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 4730 41 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 4730 30 discriminator 2
	movb	%al, (%edx)
	.loc 6 4726 16 discriminator 2
	subl	$1, -52(%ebp)
	jmp	L1631
L1624:
LBE312:
LBE311:
LBE310:
	.loc 6 4667 7 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L1632
L1603:
LBE309:
LBE308:
LBB313:
LBB314:
	.loc 6 4735 11
	cmpl	$16, 32(%ebp)
	jne	L1633
LBB315:
	.loc 6 4740 16
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -56(%ebp)
	.loc 6 4741 21
	movl	-56(%ebp), %eax
	movl	%eax, -60(%ebp)
	.loc 6 4743 12
	movl	$0, -12(%ebp)
L1635:
	.loc 6 4743 21 discriminator 3
	movl	24(%ebp), %eax
	imull	28(%ebp), %eax
	movl	%eax, %edx
	.loc 6 4743 23 discriminator 3
	movl	20(%ebp), %eax
	imull	%edx, %eax
	.loc 6 4743 18 discriminator 3
	cmpl	%eax, -12(%ebp)
	jnb	L1633
	.loc 6 4744 25 discriminator 2
	movl	-56(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4744 27 discriminator 2
	sall	$8, %eax
	.loc 6 4744 33 discriminator 2
	movl	%eax, %edx
	.loc 6 4744 40 discriminator 2
	movl	-56(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4744 33 discriminator 2
	orl	%edx, %eax
	movl	%eax, %edx
	.loc 6 4744 17 discriminator 2
	movl	-60(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 4743 7 discriminator 2
	addl	$1, -12(%ebp)
	addl	$2, -60(%ebp)
	.loc 6 4743 46 discriminator 2
	addl	$2, -56(%ebp)
	.loc 6 4743 7 discriminator 2
	jmp	L1635
L1633:
LBE315:
LBE314:
LBE313:
LBE307:
	.loc 6 4748 11
	movl	$1, %eax
L1513:
	.loc 6 4749 1
	addl	$112, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1912:
	.def	__ZL22stbi__create_png_imageP9stbi__pngPhjiiii;	.scl	3;	.type	32;	.endef
__ZL22stbi__create_png_imageP9stbi__pngPhjiiii:
LFB1913:
	.loc 6 4752 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$196, %esp
	.cfi_offset 3, -12
	.loc 6 4753 29
	cmpl	$16, 24(%ebp)
	jne	L1651
	.loc 6 4753 29 is_stmt 0 discriminator 1
	movl	$2, %eax
	jmp	L1652
L1651:
	.loc 6 4753 29 discriminator 2
	movl	$1, %eax
L1652:
	.loc 6 4753 8 is_stmt 1 discriminator 4
	movl	%eax, -24(%ebp)
	.loc 6 4754 8 discriminator 4
	movl	20(%ebp), %eax
	imull	-24(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 6 4757 4 discriminator 4
	cmpl	$0, 32(%ebp)
	jne	L1653
	.loc 6 4758 95
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 4758 40
	movl	4(%eax), %edx
	.loc 6 4758 82
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 4758 40
	movl	(%eax), %eax
	movl	28(%ebp), %ecx
	movl	%ecx, 28(%esp)
	movl	24(%ebp), %ecx
	movl	%ecx, 24(%esp)
	movl	%edx, 20(%esp)
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbi__create_png_image_rawP9stbi__pngPhjijjii
	.loc 6 4758 117
	jmp	L1654
L1653:
	.loc 6 4761 58
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 4761 61
	movl	4(%eax), %eax
	.loc 6 4761 41
	movl	%eax, %ecx
	.loc 6 4761 45
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 4761 48
	movl	(%eax), %eax
	.loc 6 4761 41
	movl	%eax, %edx
	movl	$0, 12(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL17stbi__malloc_mad3iiii
	movl	%eax, -32(%ebp)
LBB316:
	.loc 6 4762 10
	movl	$0, -12(%ebp)
L1662:
	.loc 6 4762 16 discriminator 1
	cmpl	$6, -12(%ebp)
	jg	L1655
LBB317:
	.loc 6 4763 11
	movl	$0, -80(%ebp)
	movl	$4, -76(%ebp)
	movl	$0, -72(%ebp)
	movl	$2, -68(%ebp)
	movl	$0, -64(%ebp)
	movl	$1, -60(%ebp)
	movl	$0, -56(%ebp)
	.loc 6 4764 11
	movl	$0, -108(%ebp)
	movl	$0, -104(%ebp)
	movl	$4, -100(%ebp)
	movl	$0, -96(%ebp)
	movl	$2, -92(%ebp)
	movl	$0, -88(%ebp)
	movl	$1, -84(%ebp)
	.loc 6 4765 11
	movl	$8, -136(%ebp)
	movl	$8, -132(%ebp)
	movl	$4, -128(%ebp)
	movl	$4, -124(%ebp)
	movl	$2, -120(%ebp)
	movl	$2, -116(%ebp)
	movl	$1, -112(%ebp)
	.loc 6 4766 11
	movl	$8, -164(%ebp)
	movl	$8, -160(%ebp)
	movl	$8, -156(%ebp)
	movl	$4, -152(%ebp)
	movl	$4, -148(%ebp)
	movl	$2, -144(%ebp)
	movl	$2, -140(%ebp)
	.loc 6 4769 15
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 4769 18
	movl	(%eax), %edx
	.loc 6 4769 33
	movl	-12(%ebp), %eax
	movl	-80(%ebp,%eax,4), %eax
	.loc 6 4769 24
	subl	%eax, %edx
	.loc 6 4769 43
	movl	-12(%ebp), %eax
	movl	-136(%ebp,%eax,4), %eax
	.loc 6 4769 35
	addl	%edx, %eax
	.loc 6 4769 44
	leal	-1(%eax), %edx
	.loc 6 4769 56
	movl	-12(%ebp), %eax
	movl	-136(%ebp,%eax,4), %eax
	movl	%eax, %ecx
	.loc 6 4769 48
	movl	%edx, %eax
	movl	$0, %edx
	divl	%ecx
	.loc 6 4769 9
	movl	%eax, -36(%ebp)
	.loc 6 4770 15
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 4770 18
	movl	4(%eax), %edx
	.loc 6 4770 33
	movl	-12(%ebp), %eax
	movl	-108(%ebp,%eax,4), %eax
	.loc 6 4770 24
	subl	%eax, %edx
	.loc 6 4770 43
	movl	-12(%ebp), %eax
	movl	-164(%ebp,%eax,4), %eax
	.loc 6 4770 35
	addl	%edx, %eax
	.loc 6 4770 44
	leal	-1(%eax), %edx
	.loc 6 4770 56
	movl	-12(%ebp), %eax
	movl	-164(%ebp,%eax,4), %eax
	movl	%eax, %ecx
	.loc 6 4770 48
	movl	%edx, %eax
	movl	$0, %edx
	divl	%ecx
	.loc 6 4770 9
	movl	%eax, -40(%ebp)
LBB318:
	.loc 6 4771 7
	cmpl	$0, -36(%ebp)
	je	L1656
	.loc 6 4771 13 discriminator 1
	cmpl	$0, -40(%ebp)
	je	L1656
LBB319:
	.loc 6 4772 40
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 4772 43
	movl	8(%eax), %eax
	.loc 6 4772 49
	imull	-36(%ebp), %eax
	.loc 6 4772 53
	imull	24(%ebp), %eax
	.loc 6 4772 62
	addl	$7, %eax
	.loc 6 4772 67
	sarl	$3, %eax
	.loc 6 4772 73
	addl	$1, %eax
	.loc 6 4772 78
	imull	-40(%ebp), %eax
	.loc 6 4772 23
	movl	%eax, -44(%ebp)
	.loc 6 4773 41
	movl	-40(%ebp), %edx
	movl	-36(%ebp), %eax
	movl	28(%ebp), %ecx
	movl	%ecx, 28(%esp)
	movl	24(%ebp), %ecx
	movl	%ecx, 24(%esp)
	movl	%edx, 20(%esp)
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbi__create_png_image_rawP9stbi__pngPhjijjii
	.loc 6 4773 14
	testl	%eax, %eax
	sete	%al
	.loc 6 4773 10
	testb	%al, %al
	je	L1657
	.loc 6 4774 13
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 4775 20
	movl	$0, %eax
	jmp	L1654
L1657:
LBB320:
	.loc 6 4777 16
	movl	$0, -20(%ebp)
L1661:
	.loc 6 4777 22 discriminator 1
	movl	-20(%ebp), %eax
	cmpl	-40(%ebp), %eax
	jge	L1658
LBB321:
LBB322:
	.loc 6 4778 19
	movl	$0, -16(%ebp)
L1660:
	.loc 6 4778 25 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-36(%ebp), %eax
	jge	L1659
LBB323:
	.loc 6 4779 36 discriminator 2
	movl	-12(%ebp), %eax
	movl	-164(%ebp,%eax,4), %eax
	.loc 6 4779 29 discriminator 2
	imull	-20(%ebp), %eax
	movl	%eax, %edx
	.loc 6 4779 45 discriminator 2
	movl	-12(%ebp), %eax
	movl	-108(%ebp,%eax,4), %eax
	.loc 6 4779 20 discriminator 2
	addl	%edx, %eax
	movl	%eax, -48(%ebp)
	.loc 6 4780 36 discriminator 2
	movl	-12(%ebp), %eax
	movl	-136(%ebp,%eax,4), %eax
	.loc 6 4780 29 discriminator 2
	imull	-16(%ebp), %eax
	movl	%eax, %edx
	.loc 6 4780 45 discriminator 2
	movl	-12(%ebp), %eax
	movl	-80(%ebp,%eax,4), %eax
	.loc 6 4780 20 discriminator 2
	addl	%edx, %eax
	movl	%eax, -52(%ebp)
	.loc 6 4781 22 discriminator 2
	movl	-28(%ebp), %eax
	.loc 6 4782 26 discriminator 2
	movl	8(%ebp), %edx
	movl	12(%edx), %ecx
	.loc 6 4782 34 discriminator 2
	movl	-20(%ebp), %edx
	movl	%edx, %ebx
	imull	-36(%ebp), %ebx
	.loc 6 4782 36 discriminator 2
	movl	-16(%ebp), %edx
	addl	%ebx, %edx
	.loc 6 4782 39 discriminator 2
	imull	-28(%ebp), %edx
	.loc 6 4782 30 discriminator 2
	addl	%edx, %ecx
	.loc 6 4781 40 discriminator 2
	movl	8(%ebp), %edx
	movl	(%edx), %edx
	.loc 6 4781 43 discriminator 2
	movl	(%edx), %ebx
	.loc 6 4781 36 discriminator 2
	movl	-48(%ebp), %edx
	imull	%edx, %ebx
	.loc 6 4781 48 discriminator 2
	movl	-28(%ebp), %edx
	imull	%edx, %ebx
	.loc 6 4781 66 discriminator 2
	movl	-52(%ebp), %edx
	imull	-28(%ebp), %edx
	.loc 6 4781 59 discriminator 2
	addl	%edx, %ebx
	movl	-32(%ebp), %edx
	addl	%ebx, %edx
	.loc 6 4781 22 discriminator 2
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	_memcpy
LBE323:
	.loc 6 4778 13 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L1660
L1659:
LBE322:
LBE321:
	.loc 6 4777 10 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L1661
L1658:
LBE320:
	.loc 6 4785 10
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 4786 21
	movl	-44(%ebp), %eax
	addl	%eax, 12(%ebp)
	.loc 6 4787 25
	movl	-44(%ebp), %eax
	subl	%eax, 16(%ebp)
L1656:
LBE319:
LBE318:
LBE317:
	.loc 6 4762 4
	addl	$1, -12(%ebp)
	jmp	L1662
L1655:
LBE316:
	.loc 6 4790 11
	movl	8(%ebp), %eax
	movl	-32(%ebp), %edx
	movl	%edx, 12(%eax)
	.loc 6 4792 11
	movl	$1, %eax
L1654:
	.loc 6 4793 1
	addl	$196, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1913:
	.section .rdata,"dr"
LC90:
	.ascii "out_n == 2 || out_n == 4\0"
	.text
	.def	__ZL26stbi__compute_transparencyP9stbi__pngPhi;	.scl	3;	.type	32;	.endef
__ZL26stbi__compute_transparencyP9stbi__pngPhi:
LFB1914:
	.loc 6 4796 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 4797 19
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 6 4798 37
	movl	-20(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 4798 48
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 4798 20
	imull	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 6 4799 13
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 6 4803 4
	cmpl	$2, 16(%ebp)
	je	L1675
	.loc 6 4803 4 is_stmt 0 discriminator 2
	cmpl	$4, 16(%ebp)
	je	L1675
	.loc 6 4803 4 discriminator 4
	movl	$4803, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC90, (%esp)
	call	__assert
	jmp	L1666
L1675:
	.loc 6 4803 4
	nop
L1666:
	.loc 6 4805 4 is_stmt 1
	cmpl	$2, 16(%ebp)
	jne	L1667
	.loc 6 4806 13
	movl	$0, -12(%ebp)
L1671:
	.loc 6 4806 19 discriminator 2
	movl	-12(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jnb	L1668
	.loc 6 4807 21
	movl	-16(%ebp), %eax
	movzbl	(%eax), %edx
	.loc 6 4807 30
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 4807 15
	cmpb	%al, %dl
	jne	L1669
	.loc 6 4807 15 is_stmt 0 discriminator 1
	movl	$0, %edx
	jmp	L1670
L1669:
	.loc 6 4807 15 discriminator 2
	movl	$-1, %edx
L1670:
	.loc 6 4807 13 is_stmt 1 discriminator 4
	movl	-16(%ebp), %eax
	addl	$1, %eax
	.loc 6 4807 15 discriminator 4
	movb	%dl, (%eax)
	.loc 6 4808 12 discriminator 4
	addl	$2, -16(%ebp)
	.loc 6 4806 7 discriminator 4
	addl	$1, -12(%ebp)
	jmp	L1671
L1667:
	.loc 6 4811 13
	movl	$0, -12(%ebp)
L1673:
	.loc 6 4811 19 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jnb	L1668
	.loc 6 4812 17
	movl	-16(%ebp), %eax
	movzbl	(%eax), %edx
	.loc 6 4812 26
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 4812 10
	cmpb	%al, %dl
	jne	L1672
	.loc 6 4812 34 discriminator 1
	movl	-16(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %edx
	.loc 6 4812 43 discriminator 1
	movl	12(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	.loc 6 4812 28 discriminator 1
	cmpb	%al, %dl
	jne	L1672
	.loc 6 4812 51 discriminator 2
	movl	-16(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %edx
	.loc 6 4812 60 discriminator 2
	movl	12(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	.loc 6 4812 45 discriminator 2
	cmpb	%al, %dl
	jne	L1672
	.loc 6 4813 16
	movl	-16(%ebp), %eax
	addl	$3, %eax
	.loc 6 4813 18
	movb	$0, (%eax)
L1672:
	.loc 6 4814 12 discriminator 2
	addl	$4, -16(%ebp)
	.loc 6 4811 7 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1673
L1668:
	.loc 6 4817 11
	movl	$1, %eax
	.loc 6 4818 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1914:
	.def	__ZL28stbi__compute_transparency16P9stbi__pngPti;	.scl	3;	.type	32;	.endef
__ZL28stbi__compute_transparency16P9stbi__pngPti:
LFB1915:
	.loc 6 4821 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 4822 19
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 6 4823 37
	movl	-20(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 4823 48
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 4823 20
	imull	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 6 4824 18
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 6 4828 4
	cmpl	$2, 16(%ebp)
	je	L1688
	.loc 6 4828 4 is_stmt 0 discriminator 2
	cmpl	$4, 16(%ebp)
	je	L1688
	.loc 6 4828 4 discriminator 4
	movl	$4828, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC90, (%esp)
	call	__assert
	jmp	L1679
L1688:
	.loc 6 4828 4
	nop
L1679:
	.loc 6 4830 4 is_stmt 1
	cmpl	$2, 16(%ebp)
	jne	L1680
	.loc 6 4831 14
	movl	$0, -12(%ebp)
L1684:
	.loc 6 4831 21 discriminator 2
	movl	-12(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jnb	L1681
	.loc 6 4832 21
	movl	-16(%ebp), %eax
	movzwl	(%eax), %edx
	.loc 6 4832 30
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 4832 15
	cmpw	%ax, %dx
	jne	L1682
	.loc 6 4832 15 is_stmt 0 discriminator 1
	movl	$0, %edx
	jmp	L1683
L1682:
	.loc 6 4832 15 discriminator 2
	movl	$-1, %edx
L1683:
	.loc 6 4832 13 is_stmt 1 discriminator 4
	movl	-16(%ebp), %eax
	addl	$2, %eax
	.loc 6 4832 15 discriminator 4
	movw	%dx, (%eax)
	.loc 6 4833 12 discriminator 4
	addl	$4, -16(%ebp)
	.loc 6 4831 7 discriminator 4
	addl	$1, -12(%ebp)
	jmp	L1684
L1680:
	.loc 6 4836 14
	movl	$0, -12(%ebp)
L1686:
	.loc 6 4836 21 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jnb	L1681
	.loc 6 4837 17
	movl	-16(%ebp), %eax
	movzwl	(%eax), %edx
	.loc 6 4837 26
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	.loc 6 4837 10
	cmpw	%ax, %dx
	jne	L1685
	.loc 6 4837 34 discriminator 1
	movl	-16(%ebp), %eax
	addl	$2, %eax
	movzwl	(%eax), %edx
	.loc 6 4837 43 discriminator 1
	movl	12(%ebp), %eax
	addl	$2, %eax
	movzwl	(%eax), %eax
	.loc 6 4837 28 discriminator 1
	cmpw	%ax, %dx
	jne	L1685
	.loc 6 4837 51 discriminator 2
	movl	-16(%ebp), %eax
	addl	$4, %eax
	movzwl	(%eax), %edx
	.loc 6 4837 60 discriminator 2
	movl	12(%ebp), %eax
	addl	$4, %eax
	movzwl	(%eax), %eax
	.loc 6 4837 45 discriminator 2
	cmpw	%ax, %dx
	jne	L1685
	.loc 6 4838 16
	movl	-16(%ebp), %eax
	addl	$6, %eax
	.loc 6 4838 18
	movw	$0, (%eax)
L1685:
	.loc 6 4839 12 discriminator 2
	addl	$8, -16(%ebp)
	.loc 6 4836 7 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1686
L1681:
	.loc 6 4842 11
	movl	$1, %eax
	.loc 6 4843 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1915:
	.def	__ZL24stbi__expand_png_paletteP9stbi__pngPhii;	.scl	3;	.type	32;	.endef
__ZL24stbi__expand_png_paletteP9stbi__pngPhii:
LFB1916:
	.loc 6 4846 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 4847 37
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 4847 40
	movl	(%eax), %edx
	.loc 6 4847 51
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 4847 54
	movl	4(%eax), %eax
	.loc 6 4847 20
	imull	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 6 4848 28
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 6 4850 37
	movl	-20(%ebp), %eax
	movl	$0, 8(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad2iii
	movl	%eax, -16(%ebp)
	.loc 6 4851 4
	cmpl	$0, -16(%ebp)
	jne	L1690
	.loc 6 4851 26 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1691
L1690:
	.loc 6 4854 13
	movl	-16(%ebp), %eax
	movl	%eax, -28(%ebp)
LBB324:
	.loc 6 4856 4
	cmpl	$3, 20(%ebp)
	jne	L1692
LBB325:
LBB326:
	.loc 6 4857 13
	movl	$0, -12(%ebp)
L1694:
	.loc 6 4857 19 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jnb	L1695
LBB327:
	.loc 6 4858 24 discriminator 2
	movl	-24(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4858 14 discriminator 2
	sall	$2, %eax
	movl	%eax, -32(%ebp)
	.loc 6 4859 28 discriminator 2
	movl	-32(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 6 4859 15 discriminator 2
	movl	-16(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 4860 28 discriminator 2
	movl	-32(%ebp), %eax
	leal	1(%eax), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4860 13 discriminator 2
	movl	-16(%ebp), %edx
	addl	$1, %edx
	.loc 6 4860 28 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 4860 15 discriminator 2
	movb	%al, (%edx)
	.loc 6 4861 28 discriminator 2
	movl	-32(%ebp), %eax
	leal	2(%eax), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4861 13 discriminator 2
	movl	-16(%ebp), %edx
	addl	$2, %edx
	.loc 6 4861 28 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 4861 15 discriminator 2
	movb	%al, (%edx)
	.loc 6 4862 12 discriminator 2
	addl	$3, -16(%ebp)
LBE327:
	.loc 6 4857 7 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1694
L1692:
LBE326:
LBE325:
LBB328:
LBB329:
	.loc 6 4865 13
	movl	$0, -12(%ebp)
L1696:
	.loc 6 4865 19 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jnb	L1695
LBB330:
	.loc 6 4866 24 discriminator 2
	movl	-24(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 4866 14 discriminator 2
	sall	$2, %eax
	movl	%eax, -36(%ebp)
	.loc 6 4867 28 discriminator 2
	movl	-36(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 6 4867 15 discriminator 2
	movl	-16(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 4868 28 discriminator 2
	movl	-36(%ebp), %eax
	leal	1(%eax), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4868 13 discriminator 2
	movl	-16(%ebp), %edx
	addl	$1, %edx
	.loc 6 4868 28 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 4868 15 discriminator 2
	movb	%al, (%edx)
	.loc 6 4869 28 discriminator 2
	movl	-36(%ebp), %eax
	leal	2(%eax), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4869 13 discriminator 2
	movl	-16(%ebp), %edx
	addl	$2, %edx
	.loc 6 4869 28 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 4869 15 discriminator 2
	movb	%al, (%edx)
	.loc 6 4870 28 discriminator 2
	movl	-36(%ebp), %eax
	leal	3(%eax), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4870 13 discriminator 2
	movl	-16(%ebp), %edx
	addl	$3, %edx
	.loc 6 4870 28 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 4870 15 discriminator 2
	movb	%al, (%edx)
	.loc 6 4871 12 discriminator 2
	addl	$4, -16(%ebp)
LBE330:
	.loc 6 4865 7 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1696
L1695:
LBE329:
LBE328:
LBE324:
	.loc 6 4874 4
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 4875 11
	movl	8(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	%edx, 12(%eax)
	.loc 6 4879 11
	movl	$1, %eax
L1691:
	.loc 6 4880 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1916:
.lcomm __ZL27stbi__unpremultiply_on_load,4,4
.lcomm __ZL20stbi__de_iphone_flag,4,4
	.globl	_stbi_set_unpremultiply_on_load
	.def	_stbi_set_unpremultiply_on_load;	.scl	2;	.type	32;	.endef
_stbi_set_unpremultiply_on_load:
LFB1917:
	.loc 6 4886 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 4887 32
	movl	8(%ebp), %eax
	movl	%eax, __ZL27stbi__unpremultiply_on_load
	.loc 6 4888 1
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1917:
	.globl	_stbi_convert_iphone_png_to_rgb
	.def	_stbi_convert_iphone_png_to_rgb;	.scl	2;	.type	32;	.endef
_stbi_convert_iphone_png_to_rgb:
LFB1918:
	.loc 6 4891 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 4892 25
	movl	8(%ebp), %eax
	movl	%eax, __ZL20stbi__de_iphone_flag
	.loc 6 4893 1
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1918:
	.section .rdata,"dr"
LC91:
	.ascii "s->img_out_n == 4\0"
	.text
	.def	__ZL15stbi__de_iphoneP9stbi__png;	.scl	3;	.type	32;	.endef
__ZL15stbi__de_iphoneP9stbi__png:
LFB1919:
	.loc 6 4896 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 4897 19
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 6 4898 37
	movl	-20(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 4898 48
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 4898 20
	imull	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 6 4899 13
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -16(%ebp)
LBB331:
	.loc 6 4901 11
	movl	-20(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 4901 4
	cmpl	$3, %eax
	jne	L1700
LBB332:
LBB333:
	.loc 6 4902 13
	movl	$0, -12(%ebp)
L1702:
	.loc 6 4902 19 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jnb	L1713
LBB334:
	.loc 6 4903 18 discriminator 2
	movl	-16(%ebp), %eax
	movzbl	(%eax), %eax
	movb	%al, -25(%ebp)
	.loc 6 4904 15 discriminator 2
	movl	-16(%ebp), %eax
	movzbl	2(%eax), %edx
	movl	-16(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 4905 13 discriminator 2
	movl	-16(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 4905 15 discriminator 2
	movzbl	-25(%ebp), %eax
	movb	%al, (%edx)
	.loc 6 4906 12 discriminator 2
	addl	$3, -16(%ebp)
LBE334:
	.loc 6 4902 7 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1702
L1700:
LBE333:
LBE332:
LBB335:
	.loc 6 4909 7
	movl	-20(%ebp), %eax
	movl	12(%eax), %eax
	cmpl	$4, %eax
	je	L1706
	.loc 6 4909 7 is_stmt 0 discriminator 2
	movl	$4909, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC91, (%esp)
	call	__assert
L1706:
LBB336:
	.loc 6 4910 38 is_stmt 1
	movl	__ZL27stbi__unpremultiply_on_load, %eax
	.loc 6 4910 7
	testl	%eax, %eax
	je	L1707
LBB337:
LBB338:
	.loc 6 4912 16
	movl	$0, -12(%ebp)
L1711:
	.loc 6 4912 22 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jnb	L1713
LBB339:
	.loc 6 4913 21
	movl	-16(%ebp), %eax
	movzbl	3(%eax), %eax
	movb	%al, -26(%ebp)
	.loc 6 4914 21
	movl	-16(%ebp), %eax
	movzbl	(%eax), %eax
	movb	%al, -27(%ebp)
LBB340:
	.loc 6 4915 13
	cmpb	$0, -26(%ebp)
	je	L1709
LBB341:
	.loc 6 4916 24
	movzbl	-26(%ebp), %eax
	shrb	%al
	movb	%al, -28(%ebp)
	.loc 6 4917 27
	movl	-16(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 6 4917 29
	movl	%edx, %eax
	sall	$8, %eax
	subl	%edx, %eax
	movl	%eax, %edx
	.loc 6 4917 35
	movzbl	-28(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4917 43
	movzbl	-26(%ebp), %ecx
	cltd
	idivl	%ecx
	.loc 6 4917 21
	movl	%eax, %edx
	movl	-16(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 4918 27
	movl	-16(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 6 4918 29
	movl	%edx, %eax
	sall	$8, %eax
	subl	%edx, %eax
	movl	%eax, %edx
	.loc 6 4918 35
	movzbl	-28(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4918 43
	movzbl	-26(%ebp), %ecx
	cltd
	idivl	%ecx
	movl	%eax, %edx
	.loc 6 4918 19
	movl	-16(%ebp), %eax
	addl	$1, %eax
	.loc 6 4918 21
	movb	%dl, (%eax)
	.loc 6 4919 29
	movzbl	-27(%ebp), %edx
	movl	%edx, %eax
	sall	$8, %eax
	subl	%edx, %eax
	movl	%eax, %edx
	.loc 6 4919 35
	movzbl	-28(%ebp), %eax
	addl	%edx, %eax
	.loc 6 4919 43
	movzbl	-26(%ebp), %ecx
	cltd
	idivl	%ecx
	movl	%eax, %edx
	.loc 6 4919 19
	movl	-16(%ebp), %eax
	addl	$2, %eax
	.loc 6 4919 21
	movb	%dl, (%eax)
LBE341:
	jmp	L1710
L1709:
	.loc 6 4921 21
	movl	-16(%ebp), %eax
	movzbl	2(%eax), %edx
	movl	-16(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 4922 19
	movl	-16(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 4922 21
	movzbl	-27(%ebp), %eax
	movb	%al, (%edx)
L1710:
LBE340:
	.loc 6 4924 15 discriminator 2
	addl	$4, -16(%ebp)
LBE339:
	.loc 6 4912 10 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1711
L1707:
LBE338:
LBE337:
LBB342:
LBB343:
	.loc 6 4928 16
	movl	$0, -12(%ebp)
L1712:
	.loc 6 4928 22 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jnb	L1713
LBB344:
	.loc 6 4929 21 discriminator 2
	movl	-16(%ebp), %eax
	movzbl	(%eax), %eax
	movb	%al, -29(%ebp)
	.loc 6 4930 18 discriminator 2
	movl	-16(%ebp), %eax
	movzbl	2(%eax), %edx
	movl	-16(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 4931 16 discriminator 2
	movl	-16(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 4931 18 discriminator 2
	movzbl	-29(%ebp), %eax
	movb	%al, (%edx)
	.loc 6 4932 15 discriminator 2
	addl	$4, -16(%ebp)
LBE344:
	.loc 6 4928 10 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1712
L1713:
LBE343:
LBE342:
LBE336:
LBE335:
LBE331:
	.loc 6 4936 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1919:
	.data
	.align 4
__ZZL20stbi__parse_png_fileP9stbi__pngiiE13invalid_chunk:
	.ascii "XXXX PNG chunk not known\0"
	.section .rdata,"dr"
LC92:
	.ascii "multiple IHDR\0"
LC93:
	.ascii "bad IHDR len\0"
LC94:
	.ascii "1/2/4/8/16-bit only\0"
LC95:
	.ascii "bad ctype\0"
LC96:
	.ascii "bad comp method\0"
LC97:
	.ascii "bad filter method\0"
LC98:
	.ascii "bad interlace method\0"
LC99:
	.ascii "0-pixel image\0"
LC100:
	.ascii "first not IHDR\0"
LC101:
	.ascii "invalid PLTE\0"
LC102:
	.ascii "tRNS after IDAT\0"
LC103:
	.ascii "tRNS before PLTE\0"
LC104:
	.ascii "bad tRNS len\0"
LC105:
	.ascii "tRNS with alpha\0"
LC106:
	.ascii "no PLTE\0"
LC107:
	.ascii "outofdata\0"
LC108:
	.ascii "no IDAT\0"
	.text
	.def	__ZL20stbi__parse_png_fileP9stbi__pngii;	.scl	3;	.type	32;	.endef
__ZL20stbi__parse_png_fileP9stbi__pngii:
LFB1920:
	.loc 6 4941 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%esi
	pushl	%ebx
	subl	$1152, %esp
	.cfi_offset 6, -12
	.cfi_offset 3, -16
	.loc 6 4942 27
	movb	$0, -9(%ebp)
	.loc 6 4943 12
	movb	$0, -10(%ebp)
	.loc 6 4943 25
	movw	$0, -1099(%ebp)
	movb	$0, -1097(%ebp)
	.loc 6 4945 17
	movl	$0, -16(%ebp)
	.loc 6 4945 25
	movl	$0, -20(%ebp)
	.loc 6 4945 43
	movl	$0, -28(%ebp)
	.loc 6 4946 8
	movl	$1, -32(%ebp)
	.loc 6 4946 18
	movl	$0, -40(%ebp)
	.loc 6 4946 31
	movl	$0, -44(%ebp)
	.loc 6 4946 40
	movl	$0, -48(%ebp)
	.loc 6 4947 19
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -52(%ebp)
	.loc 6 4949 16
	movl	8(%ebp), %eax
	movl	$0, 8(%eax)
	.loc 6 4950 13
	movl	8(%ebp), %eax
	movl	$0, 4(%eax)
	.loc 6 4951 11
	movl	8(%ebp), %eax
	movl	$0, 12(%eax)
	.loc 6 4953 31
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__check_png_headerP13stbi__context
	.loc 6 4953 8
	testl	%eax, %eax
	sete	%al
	.loc 6 4953 4
	testb	%al, %al
	je	L1715
	.loc 6 4953 43 discriminator 2
	movl	$0, %eax
	jmp	L1793
L1715:
	.loc 6 4955 4
	cmpl	$1, 12(%ebp)
	jne	L1717
	.loc 6 4955 40 discriminator 1
	movl	$1, %eax
	jmp	L1793
L1717:
LBB345:
LBB346:
	.loc 6 4958 50
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__get_chunk_headerP13stbi__context
	movl	%eax, -1116(%ebp)
	movl	%edx, -1112(%ebp)
LBB347:
	.loc 6 4959 17
	movl	-1112(%ebp), %eax
	cmpl	$1229278788, %eax
	je	L1718
	cmpl	$1229278788, %eax
	ja	L1719
	cmpl	$1130840649, %eax
	je	L1720
	cmpl	$1229209940, %eax
	je	L1721
	jmp	L1722
L1719:
	cmpl	$1347179589, %eax
	je	L1723
	cmpl	$1951551059, %eax
	je	L1724
	cmpl	$1229472850, %eax
	je	L1725
	jmp	L1722
L1720:
LBB348:
	.loc 6 4961 23
	movl	$1, -48(%ebp)
	.loc 6 4962 29
	movl	-1116(%ebp), %eax
	.loc 6 4962 23
	movl	%eax, 4(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 4963 13
	jmp	L1726
L1725:
LBB349:
	.loc 6 4966 13
	cmpl	$0, -32(%ebp)
	jne	L1727
	.loc 6 4966 32 discriminator 1
	movl	$LC92, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1727:
	.loc 6 4967 19
	movl	$0, -32(%ebp)
	.loc 6 4968 19
	movl	-1116(%ebp), %eax
	.loc 6 4968 13
	cmpl	$13, %eax
	je	L1729
	.loc 6 4968 40 discriminator 1
	movl	$LC93, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1729:
	.loc 6 4969 37
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	movl	%eax, %edx
	.loc 6 4969 22
	movl	-52(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 4970 37
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	movl	%eax, %edx
	.loc 6 4970 22
	movl	-52(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 6 4971 20
	movl	-52(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 4971 13
	cmpl	$16777216, %eax
	jbe	L1730
	.loc 6 4971 56 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1730:
	.loc 6 4972 20
	movl	-52(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 4972 13
	cmpl	$16777216, %eax
	jbe	L1731
	.loc 6 4972 56 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1731:
	.loc 6 4973 34
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %edx
	.loc 6 4973 22
	movl	8(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 6 4973 47
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 4973 40
	cmpl	$1, %eax
	je	L1732
	.loc 6 4973 64 discriminator 2
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 4973 58 discriminator 2
	cmpl	$2, %eax
	je	L1732
	.loc 6 4973 81 discriminator 3
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 4973 75 discriminator 3
	cmpl	$4, %eax
	je	L1732
	.loc 6 4973 98 discriminator 4
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 4973 92 discriminator 4
	cmpl	$8, %eax
	je	L1732
	.loc 6 4973 115 discriminator 5
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 4973 109 discriminator 5
	cmpl	$16, %eax
	je	L1732
	.loc 6 4973 136 discriminator 6
	movl	$LC94, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1732:
	.loc 6 4974 31
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 4974 19
	movzbl	%al, %eax
	movl	%eax, -44(%ebp)
	.loc 6 4974 37
	cmpl	$6, -44(%ebp)
	jle	L1733
	.loc 6 4974 67 discriminator 2
	movl	$LC95, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1733:
	.loc 6 4975 13
	cmpl	$3, -44(%ebp)
	jne	L1734
	.loc 6 4975 34 discriminator 1
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 4975 28 discriminator 1
	cmpl	$16, %eax
	jne	L1734
	.loc 6 4975 71 discriminator 2
	movl	$LC95, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1734:
	.loc 6 4976 13
	cmpl	$3, -44(%ebp)
	jne	L1735
	.loc 6 4976 39 discriminator 1
	movb	$3, -9(%ebp)
	jmp	L1736
L1735:
	.loc 6 4976 59 discriminator 2
	movl	-44(%ebp), %eax
	andl	$1, %eax
	.loc 6 4976 49 discriminator 2
	testl	%eax, %eax
	je	L1736
	.loc 6 4976 71 discriminator 3
	movl	$LC95, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1736:
	.loc 6 4977 31
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 4977 19
	movzbl	%al, %eax
	movl	%eax, -56(%ebp)
	.loc 6 4977 37
	cmpl	$0, -56(%ebp)
	je	L1737
	.loc 6 4977 54 discriminator 2
	movl	$LC96, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1737:
	.loc 6 4978 31
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 4978 19
	movzbl	%al, %eax
	movl	%eax, -60(%ebp)
	.loc 6 4978 37
	cmpl	$0, -60(%ebp)
	je	L1738
	.loc 6 4978 56 discriminator 2
	movl	$LC97, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1738:
	.loc 6 4979 35
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 4979 23
	movzbl	%al, %eax
	movl	%eax, -40(%ebp)
	.loc 6 4979 40
	cmpl	$1, -40(%ebp)
	jle	L1739
	.loc 6 4979 64 discriminator 2
	movl	$LC98, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1739:
	.loc 6 4980 21
	movl	-52(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 4980 13
	testl	%eax, %eax
	je	L1740
	.loc 6 4980 34 discriminator 2
	movl	-52(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 4980 27 discriminator 2
	testl	%eax, %eax
	jne	L1741
L1740:
	.loc 6 4980 48 discriminator 3
	movl	$LC99, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1741:
	.loc 6 4981 13
	cmpb	$0, -9(%ebp)
	jne	L1742
	.loc 6 4982 34
	movl	-44(%ebp), %eax
	andl	$2, %eax
	.loc 6 4982 38
	testl	%eax, %eax
	je	L1743
	.loc 6 4982 38 is_stmt 0 discriminator 1
	movl	$3, %edx
	jmp	L1744
L1743:
	.loc 6 4982 38 discriminator 2
	movl	$1, %edx
L1744:
	.loc 6 4982 60 is_stmt 1 discriminator 4
	movl	-44(%ebp), %eax
	sarl	$2, %eax
	andl	$1, %eax
	.loc 6 4982 47 discriminator 4
	addl	%eax, %edx
	.loc 6 4982 25 discriminator 4
	movl	-52(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 6 4983 35 discriminator 4
	movl	-52(%ebp), %eax
	movl	(%eax), %esi
	.loc 6 4983 30 discriminator 4
	movl	$1073741824, %eax
	movl	$0, %edx
	divl	%esi
	movl	%eax, %edx
	.loc 6 4983 46 discriminator 4
	movl	-52(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, %ecx
	.loc 6 4983 41 discriminator 4
	movl	%edx, %eax
	movl	$0, %edx
	divl	%ecx
	movl	%eax, %edx
	.loc 6 4983 57 discriminator 4
	movl	-52(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 4983 16 discriminator 4
	cmpl	%eax, %edx
	jnb	L1745
	.loc 6 4983 71 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1745:
	.loc 6 4984 16
	cmpl	$2, 12(%ebp)
	jne	L1794
	.loc 6 4984 54 discriminator 1
	movl	$1, %eax
	jmp	L1793
L1742:
	.loc 6 4988 25
	movl	-52(%ebp), %eax
	movl	$1, 8(%eax)
	.loc 6 4989 35
	movl	-52(%ebp), %eax
	movl	(%eax), %esi
	.loc 6 4989 45
	movl	$268435456, %eax
	movl	$0, %edx
	divl	%esi
	movl	%eax, %edx
	.loc 6 4989 50
	movl	-52(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 4989 16
	cmpl	%eax, %edx
	jnb	L1794
	.loc 6 4989 64 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1723:
LBE349:
	.loc 6 4996 13
	cmpl	$0, -32(%ebp)
	je	L1747
	.loc 6 4996 31 discriminator 1
	movl	$LC100, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1747:
	.loc 6 4997 19
	movl	-1116(%ebp), %eax
	.loc 6 4997 13
	cmpl	$768, %eax
	jbe	L1748
	.loc 6 4997 42 discriminator 1
	movl	$LC101, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1748:
	.loc 6 4998 25
	movl	-1116(%ebp), %eax
	.loc 6 4998 21
	movl	$-1431655765, %edx
	mull	%edx
	movl	%edx, %eax
	shrl	%eax
	movl	%eax, -28(%ebp)
	.loc 6 4999 25
	movl	-28(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%eax, %edx
	.loc 6 4999 34
	movl	-1116(%ebp), %eax
	.loc 6 4999 13
	cmpl	%eax, %edx
	je	L1749
	.loc 6 4999 49 discriminator 1
	movl	$LC101, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1749:
	.loc 6 5000 19
	movl	$0, -24(%ebp)
L1751:
	.loc 6 5000 25 discriminator 2
	movl	-24(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jnb	L1795
	.loc 6 5001 25
	movl	-24(%ebp), %eax
	leal	0(,%eax,4), %ebx
	.loc 6 5001 43
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5001 31
	movb	%al, -1096(%ebp,%ebx)
	.loc 6 5002 25
	movl	-24(%ebp), %eax
	sall	$2, %eax
	.loc 6 5002 27
	leal	1(%eax), %ebx
	.loc 6 5002 43
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5002 31
	movb	%al, -1096(%ebp,%ebx)
	.loc 6 5003 25
	movl	-24(%ebp), %eax
	sall	$2, %eax
	.loc 6 5003 27
	leal	2(%eax), %ebx
	.loc 6 5003 43
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5003 31
	movb	%al, -1096(%ebp,%ebx)
	.loc 6 5004 25
	movl	-24(%ebp), %eax
	sall	$2, %eax
	.loc 6 5004 27
	addl	$3, %eax
	.loc 6 5004 31
	movb	$-1, -1096(%ebp,%eax)
	.loc 6 5000 13
	addl	$1, -24(%ebp)
	jmp	L1751
L1724:
	.loc 6 5010 13
	cmpl	$0, -32(%ebp)
	je	L1752
	.loc 6 5010 31 discriminator 1
	movl	$LC100, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1752:
	.loc 6 5011 20
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5011 13
	testl	%eax, %eax
	je	L1753
	.loc 6 5011 34 discriminator 1
	movl	$LC102, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1753:
	.loc 6 5012 13
	cmpb	$0, -9(%ebp)
	je	L1754
	.loc 6 5013 16
	cmpl	$2, 12(%ebp)
	jne	L1755
	.loc 6 5013 58 discriminator 1
	movl	-52(%ebp), %eax
	movl	$4, 8(%eax)
	.loc 6 5013 70 discriminator 1
	movl	$1, %eax
	jmp	L1793
L1755:
	.loc 6 5014 16
	cmpl	$0, -28(%ebp)
	jne	L1756
	.loc 6 5014 41 discriminator 1
	movl	$LC103, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1756:
	.loc 6 5015 22
	movl	-1116(%ebp), %eax
	.loc 6 5015 16
	cmpl	%eax, -28(%ebp)
	jnb	L1757
	.loc 6 5015 47 discriminator 1
	movl	$LC104, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1757:
	.loc 6 5016 26
	movb	$4, -9(%ebp)
	.loc 6 5017 22
	movl	$0, -24(%ebp)
L1759:
	.loc 6 5017 32 discriminator 2
	movl	-1116(%ebp), %eax
	.loc 6 5017 28 discriminator 2
	cmpl	%eax, -24(%ebp)
	jnb	L1796
	.loc 6 5018 28
	movl	-24(%ebp), %eax
	sall	$2, %eax
	.loc 6 5018 30
	leal	3(%eax), %ebx
	.loc 6 5018 46
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5018 34
	movb	%al, -1096(%ebp,%ebx)
	.loc 6 5017 16
	addl	$1, -24(%ebp)
	jmp	L1759
L1754:
	.loc 6 5020 25
	movl	-52(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 5020 31
	andl	$1, %eax
	.loc 6 5020 16
	testl	%eax, %eax
	jne	L1760
	.loc 6 5020 44 discriminator 1
	movl	$LC105, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1760:
	.loc 6 5021 22
	movl	-1116(%ebp), %edx
	.loc 6 5021 50
	movl	-52(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 5021 55
	addl	%eax, %eax
	.loc 6 5021 16
	cmpl	%eax, %edx
	je	L1761
	.loc 6 5021 66 discriminator 1
	movl	$LC104, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1761:
	.loc 6 5022 26
	movb	$1, -10(%ebp)
	.loc 6 5023 23
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 5023 16
	cmpl	$16, %eax
	jne	L1762
	.loc 6 5024 26
	movl	$0, -36(%ebp)
L1763:
	.loc 6 5024 38 discriminator 4
	movl	-52(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 5024 33 discriminator 4
	cmpl	%eax, -36(%ebp)
	jge	L1796
	.loc 6 5024 87 discriminator 2
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 5024 58 discriminator 2
	movl	%eax, %edx
	movl	-36(%ebp), %eax
	movw	%dx, -1106(%ebp,%eax,2)
	.loc 6 5024 19 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1763
L1762:
	.loc 6 5026 26
	movl	$0, -36(%ebp)
L1764:
	.loc 6 5026 38 discriminator 4
	movl	-52(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 5026 33 discriminator 4
	cmpl	%eax, -36(%ebp)
	jge	L1796
	.loc 6 5026 81 discriminator 2
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 5026 92 discriminator 2
	movl	%eax, %ecx
	.loc 6 5026 121 discriminator 2
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 5026 126 discriminator 2
	movzbl	__ZL23stbi__depth_scale_table(%eax), %edx
	.loc 6 5026 92 discriminator 2
	movl	%ecx, %eax
	imull	%edx, %eax
	.loc 6 5026 56 discriminator 2
	leal	-1099(%ebp), %ecx
	movl	-36(%ebp), %edx
	addl	%ecx, %edx
	movb	%al, (%edx)
	.loc 6 5026 19 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L1764
L1721:
LBB350:
	.loc 6 5033 13
	cmpl	$0, -32(%ebp)
	je	L1765
	.loc 6 5033 31 discriminator 1
	movl	$LC100, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1765:
	.loc 6 5034 13
	cmpb	$0, -9(%ebp)
	je	L1766
	.loc 6 5034 27 discriminator 1
	cmpl	$0, -28(%ebp)
	jne	L1766
	.loc 6 5034 47 discriminator 2
	movl	$LC106, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1766:
	.loc 6 5035 13
	cmpl	$2, 12(%ebp)
	jne	L1767
	.loc 6 5035 55 discriminator 1
	movzbl	-9(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 6 5035 75 discriminator 1
	movl	$1, %eax
	jmp	L1793
L1767:
	.loc 6 5036 32
	movl	-1116(%ebp), %edx
	.loc 6 5036 28
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5036 17
	movl	%eax, %edx
	.loc 6 5036 42
	movl	-16(%ebp), %eax
	.loc 6 5036 13
	cmpl	%eax, %edx
	jge	L1768
	.loc 6 5036 60 discriminator 1
	movl	$0, %eax
	jmp	L1793
L1768:
LBB351:
	.loc 6 5037 26
	movl	-1116(%ebp), %edx
	.loc 6 5037 22
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5037 13
	cmpl	%eax, -20(%ebp)
	jnb	L1769
LBB352:
	.loc 6 5038 29
	movl	-20(%ebp), %eax
	movl	%eax, -64(%ebp)
	.loc 6 5040 16
	cmpl	$0, -20(%ebp)
	jne	L1772
	.loc 6 5040 54 discriminator 1
	movl	-1116(%ebp), %eax
	.loc 6 5040 50 discriminator 1
	movl	$4096, %edx
	cmpl	$4096, %eax
	cmovb	%edx, %eax
	movl	%eax, -20(%ebp)
L1772:
	.loc 6 5041 32
	movl	-1116(%ebp), %edx
	.loc 6 5041 28
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5041 39
	cmpl	%eax, -20(%ebp)
	jnb	L1771
	.loc 6 5042 31
	sall	-20(%ebp)
	.loc 6 5041 16
	jmp	L1772
L1771:
	.loc 6 5044 32
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	-20(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_realloc
	movl	%eax, -68(%ebp)
	.loc 6 5044 92
	cmpl	$0, -68(%ebp)
	jne	L1773
	.loc 6 5044 114 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1773:
	.loc 6 5045 25
	movl	8(%ebp), %eax
	movl	-68(%ebp), %edx
	movl	%edx, 4(%eax)
L1769:
LBE352:
LBE351:
	.loc 6 5047 48
	movl	-1116(%ebp), %eax
	.loc 6 5047 28
	movl	%eax, %ecx
	.loc 6 5047 35
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 6 5047 28
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%ecx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__getnP13stbi__contextPhi
	.loc 6 5047 17
	testl	%eax, %eax
	sete	%al
	.loc 6 5047 13
	testb	%al, %al
	je	L1774
	.loc 6 5047 64 discriminator 2
	movl	$LC107, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1774:
	.loc 6 5048 23
	movl	-1116(%ebp), %eax
	.loc 6 5048 18
	addl	%eax, -16(%ebp)
	.loc 6 5049 13
	jmp	L1726
L1718:
LBE350:
LBB353:
	.loc 6 5054 13
	cmpl	$0, -32(%ebp)
	je	L1775
	.loc 6 5054 31 discriminator 1
	movl	$LC100, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1775:
	.loc 6 5055 13
	cmpl	$0, 12(%ebp)
	je	L1777
	.loc 6 5055 49 discriminator 1
	movl	$1, %eax
	jmp	L1793
L1777:
	.loc 6 5056 20
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5056 13
	testl	%eax, %eax
	jne	L1778
	.loc 6 5056 42 discriminator 1
	movl	$LC108, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1778:
	.loc 6 5058 23
	movl	-52(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 5058 34
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 5058 29
	imull	%edx, %eax
	.loc 6 5058 40
	addl	$7, %eax
	.loc 6 5058 17
	shrl	$3, %eax
	movl	%eax, -72(%ebp)
	.loc 6 5059 32
	movl	-52(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5059 27
	imull	-72(%ebp), %eax
	movl	%eax, %edx
	.loc 6 5059 43
	movl	-52(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 5059 38
	imull	%eax, %edx
	.loc 6 5059 67
	movl	-52(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5059 62
	addl	%edx, %eax
	.loc 6 5059 21
	movl	%eax, -1120(%ebp)
	.loc 6 5060 83
	cmpl	$0, -48(%ebp)
	sete	%al
	movzbl	%al, %ecx
	movl	-1120(%ebp), %eax
	movl	%eax, %ebx
	movl	-16(%ebp), %edx
	.loc 6 5060 96
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5060 83
	movl	%ecx, 16(%esp)
	leal	-1120(%ebp), %ecx
	movl	%ecx, 12(%esp)
	movl	%ebx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_stbi_zlib_decode_malloc_guesssize_headerflag
	movl	%eax, %edx
	.loc 6 5060 25
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 6 5061 20
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 5061 13
	testl	%eax, %eax
	jne	L1779
	.loc 6 5061 45 discriminator 1
	movl	$0, %eax
	jmp	L1793
L1779:
	.loc 6 5062 13
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 5062 43
	movl	8(%ebp), %eax
	movl	$0, 4(%eax)
	.loc 6 5063 33
	movl	-52(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 5063 38
	addl	$1, %eax
	.loc 6 5063 13
	cmpl	%eax, 16(%ebp)
	jne	L1780
	.loc 6 5063 41 discriminator 1
	cmpl	$3, 16(%ebp)
	je	L1780
	.loc 6 5063 58 discriminator 3
	cmpb	$0, -9(%ebp)
	je	L1781
L1780:
	.loc 6 5063 73 discriminator 5
	cmpb	$0, -10(%ebp)
	je	L1782
L1781:
	.loc 6 5064 34
	movl	-52(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 5064 39
	leal	1(%eax), %edx
	.loc 6 5064 29
	movl	-52(%ebp), %eax
	movl	%edx, 12(%eax)
	jmp	L1783
L1782:
	.loc 6 5066 34
	movl	-52(%ebp), %eax
	movl	8(%eax), %edx
	.loc 6 5066 29
	movl	-52(%ebp), %eax
	movl	%edx, 12(%eax)
L1783:
	.loc 6 5067 40
	movl	8(%ebp), %eax
	movl	16(%eax), %ebx
	movl	-52(%ebp), %eax
	movl	12(%eax), %ecx
	movl	-1120(%ebp), %edx
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	-40(%ebp), %esi
	movl	%esi, 24(%esp)
	movl	-44(%ebp), %esi
	movl	%esi, 20(%esp)
	movl	%ebx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__create_png_imageP9stbi__pngPhjiiii
	.loc 6 5067 17
	testl	%eax, %eax
	sete	%al
	.loc 6 5067 13
	testb	%al, %al
	je	L1784
	.loc 6 5067 116 discriminator 2
	movl	$0, %eax
	jmp	L1793
L1784:
	.loc 6 5068 13
	cmpb	$0, -10(%ebp)
	je	L1785
	.loc 6 5069 23
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 5069 16
	cmpl	$16, %eax
	jne	L1786
	.loc 6 5070 52
	movl	-52(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, 8(%esp)
	leal	-1106(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL28stbi__compute_transparency16P9stbi__pngPti
	.loc 6 5070 23
	testl	%eax, %eax
	sete	%al
	.loc 6 5070 19
	testb	%al, %al
	je	L1785
	.loc 6 5070 84 discriminator 2
	movl	$0, %eax
	jmp	L1793
L1786:
	.loc 6 5072 50
	movl	-52(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, 8(%esp)
	leal	-1099(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbi__compute_transparencyP9stbi__pngPhi
	.loc 6 5072 23
	testl	%eax, %eax
	sete	%al
	.loc 6 5072 19
	testb	%al, %al
	je	L1785
	.loc 6 5072 80 discriminator 2
	movl	$0, %eax
	jmp	L1793
L1785:
	.loc 6 5075 13
	cmpl	$0, -48(%ebp)
	je	L1787
	.loc 6 5075 30 discriminator 1
	movl	__ZL20stbi__de_iphone_flag, %eax
	.loc 6 5075 27 discriminator 1
	testl	%eax, %eax
	je	L1787
	.loc 6 5075 57 discriminator 2
	movl	-52(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 5075 51 discriminator 2
	cmpl	$2, %eax
	jle	L1787
	.loc 6 5076 31
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__de_iphoneP9stbi__png
L1787:
	.loc 6 5077 13
	cmpb	$0, -9(%ebp)
	je	L1788
	.loc 6 5079 25
	movzbl	-9(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 6 5080 29
	movzbl	-9(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 6 5081 16
	cmpl	$2, 16(%ebp)
	jle	L1789
	.loc 6 5081 48 discriminator 1
	movl	-52(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 12(%eax)
L1789:
	.loc 6 5082 45
	movl	-52(%ebp), %eax
	movl	12(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	leal	-1096(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__expand_png_paletteP9stbi__pngPhii
	.loc 6 5082 20
	testl	%eax, %eax
	sete	%al
	.loc 6 5082 16
	testb	%al, %al
	je	L1790
	.loc 6 5083 26
	movl	$0, %eax
	jmp	L1793
L1788:
	.loc 6 5084 20
	cmpb	$0, -10(%ebp)
	je	L1790
	.loc 6 5086 21
	movl	-52(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 5086 16
	leal	1(%eax), %edx
	movl	-52(%ebp), %eax
	movl	%edx, 8(%eax)
L1790:
	.loc 6 5088 13
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 5088 49
	movl	8(%ebp), %eax
	movl	$0, 8(%eax)
	.loc 6 5090 26
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 5091 20
	movl	$1, %eax
	jmp	L1793
L1722:
LBE353:
	.loc 6 5096 13
	cmpl	$0, -32(%ebp)
	je	L1791
	.loc 6 5096 31 discriminator 1
	movl	$LC100, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1791:
LBB354:
	.loc 6 5097 20
	movl	-1112(%ebp), %eax
	.loc 6 5097 25
	andl	$536870912, %eax
	.loc 6 5097 13
	testl	%eax, %eax
	jne	L1792
LBB355:
	.loc 6 5101 35
	movl	-1112(%ebp), %eax
	shrl	$24, %eax
	.loc 6 5101 33
	movb	%al, __ZZL20stbi__parse_png_fileP9stbi__pngiiE13invalid_chunk
	.loc 6 5102 35
	movl	-1112(%ebp), %eax
	shrl	$16, %eax
	.loc 6 5102 33
	movb	%al, __ZZL20stbi__parse_png_fileP9stbi__pngiiE13invalid_chunk+1
	.loc 6 5103 35
	movl	-1112(%ebp), %eax
	shrl	$8, %eax
	.loc 6 5103 33
	movb	%al, __ZZL20stbi__parse_png_fileP9stbi__pngiiE13invalid_chunk+2
	.loc 6 5104 35
	movl	-1112(%ebp), %eax
	.loc 6 5104 33
	movb	%al, __ZZL20stbi__parse_png_fileP9stbi__pngiiE13invalid_chunk+3
	.loc 6 5106 23
	movl	$__ZZL20stbi__parse_png_fileP9stbi__pngiiE13invalid_chunk, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L1793
L1792:
LBE355:
LBE354:
	.loc 6 5108 29
	movl	-1116(%ebp), %eax
	.loc 6 5108 23
	movl	%eax, 4(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 5109 13
	jmp	L1726
L1794:
LBB356:
	.loc 6 4992 13
	nop
	jmp	L1726
L1795:
LBE356:
	.loc 6 5006 13
	nop
	jmp	L1726
L1796:
	.loc 6 5029 13
	nop
L1726:
LBE348:
LBE347:
	.loc 6 5112 20
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
LBE346:
	.loc 6 5113 4
	jmp	L1717
L1793:
LBE345:
	.loc 6 5114 1 discriminator 6
	addl	$1152, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1920:
	.section .rdata,"dr"
LC109:
	.ascii "bad bits_per_channel\0"
	.text
	.def	__ZL12stbi__do_pngP9stbi__pngPiS1_S1_iP17stbi__result_info;	.scl	3;	.type	32;	.endef
__ZL12stbi__do_pngP9stbi__pngPiS1_S1_iP17stbi__result_info:
LFB1921:
	.loc 6 5117 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 5118 10
	movl	$0, -12(%ebp)
	.loc 6 5119 4
	cmpl	$0, 24(%ebp)
	js	L1798
	.loc 6 5119 21 discriminator 2
	cmpl	$4, 24(%ebp)
	jle	L1799
L1798:
	.loc 6 5119 45 discriminator 3
	movl	$LC72, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1800
L1799:
	.loc 6 5120 28
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__parse_png_fileP9stbi__pngii
	.loc 6 5120 58
	testl	%eax, %eax
	setne	%al
	.loc 6 5120 4
	testb	%al, %al
	je	L1801
	.loc 6 5121 14
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 5121 7
	cmpl	$8, %eax
	jg	L1802
	.loc 6 5122 31
	movl	28(%ebp), %eax
	movl	$8, (%eax)
	jmp	L1803
L1802:
	.loc 6 5123 19
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 5123 12
	cmpl	$16, %eax
	jne	L1804
	.loc 6 5124 31
	movl	28(%ebp), %eax
	movl	$16, (%eax)
	jmp	L1803
L1804:
	.loc 6 5126 17
	movl	$LC109, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1800
L1803:
	.loc 6 5127 14
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 6 5128 14
	movl	8(%ebp), %eax
	movl	$0, 12(%eax)
	.loc 6 5129 7
	cmpl	$0, 24(%ebp)
	je	L1805
	.loc 6 5129 38 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5129 41 discriminator 1
	movl	12(%eax), %eax
	.loc 6 5129 20 discriminator 1
	cmpl	%eax, 24(%ebp)
	je	L1805
	.loc 6 5130 18
	movl	28(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5130 10
	cmpl	$8, %eax
	jne	L1806
	.loc 6 5131 112
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5131 42
	movl	4(%eax), %ecx
	.loc 6 5131 99
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5131 42
	movl	(%eax), %edx
	.loc 6 5131 72
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5131 42
	movl	12(%eax), %eax
	movl	%ecx, 16(%esp)
	movl	%edx, 12(%esp)
	movl	24(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__convert_formatPhiijj
	movl	%eax, -12(%ebp)
	jmp	L1807
L1806:
	.loc 6 5133 113
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5133 44
	movl	4(%eax), %ecx
	.loc 6 5133 100
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5133 44
	movl	(%eax), %edx
	.loc 6 5133 73
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5133 44
	movl	12(%eax), %eax
	movl	%ecx, 16(%esp)
	movl	%edx, 12(%esp)
	movl	24(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__convert_format16Ptiijj
	movl	%eax, -12(%ebp)
L1807:
	.loc 6 5134 13
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5134 26
	movl	24(%ebp), %edx
	movl	%edx, 12(%eax)
	.loc 6 5135 10
	cmpl	$0, -12(%ebp)
	jne	L1805
	.loc 6 5135 37 discriminator 1
	movl	-12(%ebp), %eax
	jmp	L1800
L1805:
	.loc 6 5137 15
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5137 18
	movl	(%eax), %eax
	movl	%eax, %edx
	.loc 6 5137 10
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 5138 15
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5138 18
	movl	4(%eax), %eax
	movl	%eax, %edx
	.loc 6 5138 10
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 5139 7
	cmpl	$0, 20(%ebp)
	je	L1801
	.loc 6 5139 22 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5139 25 discriminator 1
	movl	8(%eax), %edx
	.loc 6 5139 17 discriminator 1
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
L1801:
	.loc 6 5141 4
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 5141 40
	movl	8(%ebp), %eax
	movl	$0, 12(%eax)
	.loc 6 5142 4
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 5142 40
	movl	8(%ebp), %eax
	movl	$0, 8(%eax)
	.loc 6 5143 4
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 5143 40
	movl	8(%ebp), %eax
	movl	$0, 4(%eax)
	.loc 6 5145 11
	movl	-12(%ebp), %eax
L1800:
	.loc 6 5146 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1921:
	.def	__ZL14stbi__png_loadP13stbi__contextPiS1_S1_iP17stbi__result_info;	.scl	3;	.type	32;	.endef
__ZL14stbi__png_loadP13stbi__contextPiS1_S1_iP17stbi__result_info:
LFB1922:
	.loc 6 5149 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 6 5151 8
	movl	8(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 6 5152 23
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__do_pngP9stbi__pngPiS1_S1_iP17stbi__result_info
	.loc 6 5152 49
	nop
	.loc 6 5153 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1922:
	.def	__ZL14stbi__png_testP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL14stbi__png_testP13stbi__context:
LFB1923:
	.loc 6 5156 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 5158 30
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__check_png_headerP13stbi__context
	movl	%eax, -12(%ebp)
	.loc 6 5159 16
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5160 11
	movl	-12(%ebp), %eax
	.loc 6 5161 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1923:
	.def	__ZL18stbi__png_info_rawP9stbi__pngPiS1_S1_;	.scl	3;	.type	32;	.endef
__ZL18stbi__png_info_rawP9stbi__pngPiS1_S1_:
LFB1924:
	.loc 6 5164 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 5165 29
	movl	$0, 8(%esp)
	movl	$2, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__parse_png_fileP9stbi__pngii
	.loc 6 5165 8
	testl	%eax, %eax
	sete	%al
	.loc 6 5165 4
	testb	%al, %al
	je	L1813
	.loc 6 5166 19
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5167 14
	movl	$0, %eax
	jmp	L1814
L1813:
	.loc 6 5169 4
	cmpl	$0, 12(%ebp)
	je	L1815
	.loc 6 5169 19 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5169 22 discriminator 1
	movl	(%eax), %eax
	movl	%eax, %edx
	.loc 6 5169 14 discriminator 1
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
L1815:
	.loc 6 5170 4
	cmpl	$0, 16(%ebp)
	je	L1816
	.loc 6 5170 19 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5170 22 discriminator 1
	movl	4(%eax), %eax
	movl	%eax, %edx
	.loc 6 5170 14 discriminator 1
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
L1816:
	.loc 6 5171 4
	cmpl	$0, 20(%ebp)
	je	L1817
	.loc 6 5171 25 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5171 28 discriminator 1
	movl	8(%eax), %edx
	.loc 6 5171 20 discriminator 1
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
L1817:
	.loc 6 5172 11
	movl	$1, %eax
L1814:
	.loc 6 5173 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1924:
	.def	__ZL14stbi__png_infoP13stbi__contextPiS1_S1_;	.scl	3;	.type	32;	.endef
__ZL14stbi__png_infoP13stbi__contextPiS1_S1_:
LFB1925:
	.loc 6 5176 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 5178 8
	movl	8(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 6 5179 29
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__png_info_rawP9stbi__pngPiS1_S1_
	.loc 6 5179 44
	nop
	.loc 6 5180 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1925:
	.def	__ZL14stbi__png_is16P13stbi__context;	.scl	3;	.type	32;	.endef
__ZL14stbi__png_is16P13stbi__context:
LFB1926:
	.loc 6 5183 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 5185 8
	movl	8(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 6 5186 27
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	leal	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__png_info_rawP9stbi__pngPiS1_S1_
	.loc 6 5186 8
	testl	%eax, %eax
	sete	%al
	.loc 6 5186 4
	testb	%al, %al
	je	L1821
	.loc 6 5187 12
	movl	$0, %eax
	jmp	L1824
L1821:
	.loc 6 5188 10
	movl	-12(%ebp), %eax
	.loc 6 5188 4
	cmpl	$16, %eax
	je	L1823
	.loc 6 5189 19
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5190 14
	movl	$0, %eax
	jmp	L1824
L1823:
	.loc 6 5192 11
	movl	$1, %eax
L1824:
	.loc 6 5193 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1926:
	.def	__ZL18stbi__bmp_test_rawP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL18stbi__bmp_test_rawP13stbi__context:
LFB1927:
	.loc 6 5200 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 5203 18
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5203 22
	cmpb	$66, %al
	setne	%al
	.loc 6 5203 4
	testb	%al, %al
	je	L1826
	.loc 6 5203 37 discriminator 1
	movl	$0, %eax
	jmp	L1827
L1826:
	.loc 6 5204 18
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5204 22
	cmpb	$77, %al
	setne	%al
	.loc 6 5204 4
	testb	%al, %al
	je	L1828
	.loc 6 5204 37 discriminator 1
	movl	$0, %eax
	jmp	L1827
L1828:
	.loc 6 5205 17
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5206 17
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	.loc 6 5207 17
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	.loc 6 5208 17
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5209 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5209 7
	movl	%eax, -12(%ebp)
	.loc 6 5210 55
	cmpl	$12, -12(%ebp)
	je	L1829
	.loc 6 5210 18 discriminator 2
	cmpl	$40, -12(%ebp)
	je	L1829
	.loc 6 5210 30 discriminator 4
	cmpl	$56, -12(%ebp)
	je	L1829
	.loc 6 5210 42 discriminator 6
	cmpl	$108, -12(%ebp)
	je	L1829
	.loc 6 5210 55 discriminator 8
	cmpl	$124, -12(%ebp)
	jne	L1830
L1829:
	.loc 6 5210 55 is_stmt 0 discriminator 9
	movl	$1, %eax
	jmp	L1831
L1830:
	.loc 6 5210 55 discriminator 10
	movl	$0, %eax
L1831:
	.loc 6 5210 6 is_stmt 1 discriminator 12
	movzbl	%al, %eax
	movl	%eax, -16(%ebp)
	.loc 6 5211 11 discriminator 12
	movl	-16(%ebp), %eax
L1827:
	.loc 6 5212 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1927:
	.def	__ZL14stbi__bmp_testP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL14stbi__bmp_testP13stbi__context:
LFB1928:
	.loc 6 5215 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 5216 30
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__bmp_test_rawP13stbi__context
	movl	%eax, -12(%ebp)
	.loc 6 5217 16
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5218 11
	movl	-12(%ebp), %eax
	.loc 6 5219 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1928:
	.def	__ZL14stbi__high_bitj;	.scl	3;	.type	32;	.endef
__ZL14stbi__high_bitj:
LFB1929:
	.loc 6 5224 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 6 5225 8
	movl	$0, -4(%ebp)
	.loc 6 5226 4
	cmpl	$0, 8(%ebp)
	jne	L1835
	.loc 6 5226 24 discriminator 1
	movl	$-1, %eax
	jmp	L1836
L1835:
	.loc 6 5227 4
	cmpl	$65535, 8(%ebp)
	jbe	L1837
	.loc 6 5227 26 discriminator 1
	addl	$16, -4(%ebp)
	.loc 6 5227 35 discriminator 1
	shrl	$16, 8(%ebp)
L1837:
	.loc 6 5228 4
	cmpl	$255, 8(%ebp)
	jbe	L1838
	.loc 6 5228 26 discriminator 1
	addl	$8, -4(%ebp)
	.loc 6 5228 35 discriminator 1
	shrl	$8, 8(%ebp)
L1838:
	.loc 6 5229 4
	cmpl	$15, 8(%ebp)
	jbe	L1839
	.loc 6 5229 26 discriminator 1
	addl	$4, -4(%ebp)
	.loc 6 5229 35 discriminator 1
	shrl	$4, 8(%ebp)
L1839:
	.loc 6 5230 4
	cmpl	$3, 8(%ebp)
	jbe	L1840
	.loc 6 5230 26 discriminator 1
	addl	$2, -4(%ebp)
	.loc 6 5230 35 discriminator 1
	shrl	$2, 8(%ebp)
L1840:
	.loc 6 5231 4
	cmpl	$1, 8(%ebp)
	jbe	L1841
	.loc 6 5231 26 discriminator 1
	addl	$1, -4(%ebp)
L1841:
	.loc 6 5232 11
	movl	-4(%ebp), %eax
L1836:
	.loc 6 5233 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1929:
	.def	__ZL14stbi__bitcountj;	.scl	3;	.type	32;	.endef
__ZL14stbi__bitcountj:
LFB1930:
	.loc 6 5236 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 5237 11
	movl	8(%ebp), %eax
	andl	$1431655765, %eax
	movl	%eax, %edx
	.loc 6 5237 31
	movl	8(%ebp), %eax
	shrl	%eax
	.loc 6 5237 38
	andl	$1431655765, %eax
	.loc 6 5237 6
	addl	%edx, %eax
	movl	%eax, 8(%ebp)
	.loc 6 5238 11
	movl	8(%ebp), %eax
	andl	$858993459, %eax
	movl	%eax, %edx
	.loc 6 5238 31
	movl	8(%ebp), %eax
	shrl	$2, %eax
	.loc 6 5238 38
	andl	$858993459, %eax
	.loc 6 5238 6
	addl	%edx, %eax
	movl	%eax, 8(%ebp)
	.loc 6 5239 16
	movl	8(%ebp), %eax
	shrl	$4, %eax
	movl	%eax, %edx
	.loc 6 5239 11
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5239 6
	andl	$252645135, %eax
	movl	%eax, 8(%ebp)
	.loc 6 5240 16
	movl	8(%ebp), %eax
	shrl	$8, %eax
	.loc 6 5240 6
	addl	%eax, 8(%ebp)
	.loc 6 5241 16
	movl	8(%ebp), %eax
	shrl	$16, %eax
	.loc 6 5241 6
	addl	%eax, 8(%ebp)
	.loc 6 5242 13
	movl	8(%ebp), %eax
	.loc 6 5242 15
	movzbl	%al, %eax
	.loc 6 5243 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1930:
	.data
	.align 32
__ZZL17stbi__shiftsignedjiiE9mul_table:
	.long	0
	.long	255
	.long	85
	.long	73
	.long	17
	.long	33
	.long	65
	.long	129
	.long	1
	.align 32
__ZZL17stbi__shiftsignedjiiE11shift_table:
	.long	0
	.long	0
	.long	0
	.long	1
	.long	0
	.long	2
	.long	4
	.long	6
	.long	0
	.section .rdata,"dr"
LC110:
	.ascii "v < 256\0"
LC111:
	.ascii "bits >= 0 && bits <= 8\0"
	.text
	.def	__ZL17stbi__shiftsignedjii;	.scl	3;	.type	32;	.endef
__ZL17stbi__shiftsignedjii:
LFB1931:
	.loc 6 5249 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 5258 4
	cmpl	$0, 12(%ebp)
	jns	L1845
	.loc 6 5259 13
	movl	12(%ebp), %eax
	negl	%eax
	.loc 6 5259 9
	movl	%eax, %ecx
	sall	%cl, 8(%ebp)
	jmp	L1846
L1845:
	.loc 6 5261 9
	movl	12(%ebp), %eax
	movl	%eax, %ecx
	shrl	%cl, 8(%ebp)
L1846:
	.loc 6 5262 4
	cmpl	$255, 8(%ebp)
	jbe	L1849
	.loc 6 5262 4 is_stmt 0 discriminator 2
	movl	$5262, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC110, (%esp)
	call	__assert
L1849:
	.loc 6 5263 12 is_stmt 1
	movl	$8, %eax
	subl	16(%ebp), %eax
	.loc 6 5263 6
	movl	%eax, %ecx
	shrl	%cl, 8(%ebp)
	.loc 6 5264 4
	cmpl	$0, 16(%ebp)
	js	L1850
	.loc 6 5264 4 is_stmt 0 discriminator 1
	cmpl	$8, 16(%ebp)
	jle	L1855
L1850:
	.loc 6 5264 4 discriminator 4
	movl	$5264, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC111, (%esp)
	call	__assert
	jmp	L1853
L1855:
	.loc 6 5264 4
	nop
L1853:
	.loc 6 5265 47 is_stmt 1
	movl	16(%ebp), %eax
	movl	__ZZL17stbi__shiftsignedjiiE9mul_table(,%eax,4), %eax
	.loc 6 5265 31
	imull	8(%ebp), %eax
	.loc 6 5265 11
	movl	%eax, %edx
	.loc 6 5265 69
	movl	16(%ebp), %eax
	movl	__ZZL17stbi__shiftsignedjiiE11shift_table(,%eax,4), %eax
	movl	%eax, %ecx
	sarl	%cl, %edx
	movl	%edx, %eax
	.loc 6 5266 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1931:
	.section .rdata,"dr"
LC112:
	.ascii "not BMP\0"
LC113:
	.ascii "bad BMP\0"
LC114:
	.ascii "unknown BMP\0"
LC115:
	.ascii "BMP RLE\0"
	.text
	.def	__ZL22stbi__bmp_parse_headerP13stbi__contextP14stbi__bmp_data;	.scl	3;	.type	32;	.endef
__ZL22stbi__bmp_parse_headerP13stbi__contextP14stbi__bmp_data:
LFB1932:
	.loc 6 5276 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 5278 18
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5278 29
	cmpb	$66, %al
	jne	L1857
	.loc 6 5278 42 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5278 29 discriminator 2
	cmpb	$77, %al
	je	L1858
L1857:
	.loc 6 5278 29 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L1859
L1858:
	.loc 6 5278 29 discriminator 4
	movl	$0, %eax
L1859:
	.loc 6 5278 4 is_stmt 1 discriminator 6
	testb	%al, %al
	je	L1860
	.loc 6 5278 61 discriminator 7
	movl	$LC112, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1861
L1860:
	.loc 6 5279 17
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5280 17
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	.loc 6 5281 17
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	.loc 6 5282 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	movl	%eax, %edx
	.loc 6 5282 17
	movl	12(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 6 5283 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5283 20
	movl	%eax, -16(%ebp)
	.loc 6 5283 14
	movl	12(%ebp), %eax
	movl	-16(%ebp), %edx
	movl	%edx, 8(%eax)
	.loc 6 5284 46
	movl	12(%ebp), %eax
	movl	$0, 24(%eax)
	.loc 6 5284 43
	movl	12(%ebp), %eax
	movl	24(%eax), %edx
	.loc 6 5284 35
	movl	12(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 6 5284 32
	movl	12(%ebp), %eax
	movl	20(%eax), %edx
	.loc 6 5284 24
	movl	12(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 6 5284 21
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	.loc 6 5284 13
	movl	12(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 6 5285 21
	movl	12(%ebp), %eax
	movl	$14, 32(%eax)
	.loc 6 5287 14
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5287 4
	testl	%eax, %eax
	jns	L1862
	.loc 6 5287 33 discriminator 1
	movl	$LC113, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1861
L1862:
	.loc 6 5289 4
	cmpl	$12, -16(%ebp)
	je	L1863
	.loc 6 5289 18 discriminator 1
	cmpl	$40, -16(%ebp)
	je	L1863
	.loc 6 5289 31 discriminator 2
	cmpl	$56, -16(%ebp)
	je	L1863
	.loc 6 5289 44 discriminator 3
	cmpl	$108, -16(%ebp)
	je	L1863
	.loc 6 5289 58 discriminator 4
	cmpl	$124, -16(%ebp)
	je	L1863
	.loc 6 5289 80 discriminator 5
	movl	$LC114, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1861
L1863:
	.loc 6 5290 4
	cmpl	$12, -16(%ebp)
	jne	L1864
	.loc 6 5291 31
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, %edx
	.loc 6 5291 16
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 5292 31
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, %edx
	.loc 6 5292 16
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	jmp	L1865
L1864:
	.loc 6 5294 31
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	movl	%eax, %edx
	.loc 6 5294 16
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 5295 31
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	movl	%eax, %edx
	.loc 6 5295 16
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
L1865:
	.loc 6 5297 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	.loc 6 5297 25
	cmpl	$1, %eax
	setne	%al
	.loc 6 5297 4
	testb	%al, %al
	je	L1866
	.loc 6 5297 38 discriminator 1
	movl	$LC113, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1861
L1866:
	.loc 6 5298 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, %edx
	.loc 6 5298 14
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
LBB357:
	.loc 6 5299 4
	cmpl	$12, -16(%ebp)
	je	L1867
LBB358:
	.loc 6 5300 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5300 37
	movl	%eax, -20(%ebp)
	.loc 6 5301 7
	cmpl	$1, -20(%ebp)
	je	L1868
	.loc 6 5301 25 discriminator 2
	cmpl	$2, -20(%ebp)
	jne	L1869
L1868:
	.loc 6 5301 50 discriminator 3
	movl	$LC115, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1861
L1869:
	.loc 6 5302 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5303 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5304 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5305 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5306 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
LBB359:
	.loc 6 5307 7
	cmpl	$40, -16(%ebp)
	je	L1870
	.loc 6 5307 21 discriminator 1
	cmpl	$56, -16(%ebp)
	jne	L1871
L1870:
	.loc 6 5308 10
	cmpl	$56, -16(%ebp)
	jne	L1872
	.loc 6 5309 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5310 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5311 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5312 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
L1872:
	.loc 6 5314 20
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5314 10
	cmpl	$16, %eax
	je	L1873
	.loc 6 5314 39 discriminator 1
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5314 30 discriminator 1
	cmpl	$32, %eax
	jne	L1883
L1873:
	.loc 6 5315 13
	cmpl	$0, -20(%ebp)
	jne	L1875
	.loc 6 5316 26
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5316 16
	cmpl	$32, %eax
	jne	L1876
	.loc 6 5317 28
	movl	12(%ebp), %eax
	movl	$16711680, 12(%eax)
	.loc 6 5318 28
	movl	12(%ebp), %eax
	movl	$65280, 16(%eax)
	.loc 6 5319 28
	movl	12(%ebp), %eax
	movl	$255, 20(%eax)
	.loc 6 5320 28
	movl	12(%ebp), %eax
	movl	$-16777216, 24(%eax)
	.loc 6 5321 31
	movl	12(%ebp), %eax
	movl	$0, 28(%eax)
	.loc 6 5314 10
	jmp	L1883
L1876:
	.loc 6 5323 28
	movl	12(%ebp), %eax
	movl	$31744, 12(%eax)
	.loc 6 5324 28
	movl	12(%ebp), %eax
	movl	$992, 16(%eax)
	.loc 6 5325 28
	movl	12(%ebp), %eax
	movl	$31, 20(%eax)
	.loc 6 5314 10
	jmp	L1883
L1875:
	.loc 6 5327 20
	cmpl	$3, -20(%ebp)
	jne	L1878
	.loc 6 5328 40
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	movl	%eax, %edx
	.loc 6 5328 25
	movl	12(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 6 5329 40
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	movl	%eax, %edx
	.loc 6 5329 25
	movl	12(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 6 5330 40
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	movl	%eax, %edx
	.loc 6 5330 25
	movl	12(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 6 5331 33
	movl	12(%ebp), %eax
	movl	32(%eax), %eax
	leal	12(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, 32(%eax)
	.loc 6 5333 26
	movl	12(%ebp), %eax
	movl	12(%eax), %edx
	.loc 6 5333 38
	movl	12(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 5333 16
	cmpl	%eax, %edx
	jne	L1883
	.loc 6 5333 50 discriminator 1
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	.loc 6 5333 62 discriminator 1
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	.loc 6 5333 41 discriminator 1
	cmpl	%eax, %edx
	jne	L1883
	.loc 6 5335 26
	movl	$LC113, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1861
L1878:
	.loc 6 5338 23
	movl	$LC113, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1861
L1871:
LBB360:
	.loc 6 5342 10
	cmpl	$108, -16(%ebp)
	je	L1880
	.loc 6 5342 25 discriminator 1
	cmpl	$124, -16(%ebp)
	je	L1880
	.loc 6 5343 20
	movl	$LC113, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1861
L1880:
	.loc 6 5344 34
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	movl	%eax, %edx
	.loc 6 5344 19
	movl	12(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 6 5345 34
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	movl	%eax, %edx
	.loc 6 5345 19
	movl	12(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 6 5346 34
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	movl	%eax, %edx
	.loc 6 5346 19
	movl	12(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 6 5347 34
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	movl	%eax, %edx
	.loc 6 5347 19
	movl	12(%ebp), %eax
	movl	%edx, 24(%eax)
	.loc 6 5348 23
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5349 16
	movl	$0, -12(%ebp)
L1882:
	.loc 6 5349 22 discriminator 3
	cmpl	$11, -12(%ebp)
	jg	L1881
	.loc 6 5350 26 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5349 10 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L1882
L1881:
	.loc 6 5351 10
	cmpl	$124, -16(%ebp)
	jne	L1867
	.loc 6 5352 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5353 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5354 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	.loc 6 5355 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
	jmp	L1867
L1883:
LBE360:
	.loc 6 5314 10
	nop
L1867:
LBE359:
LBE358:
LBE357:
	.loc 6 5359 20
	movl	$1, %eax
L1861:
	.loc 6 5360 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1932:
	.section .rdata,"dr"
	.align 4
LC116:
	.ascii "info.offset == s->callback_already_read + (int) (s->img_buffer - s->img_buffer_original)\0"
LC117:
	.ascii "bad offset\0"
LC118:
	.ascii "invalid\0"
LC119:
	.ascii "bad bpp\0"
LC120:
	.ascii "bad masks\0"
	.text
	.def	__ZL14stbi__bmp_loadP13stbi__contextPiS1_S1_iP17stbi__result_info;	.scl	3;	.type	32;	.endef
__ZL14stbi__bmp_loadP13stbi__contextPiS1_S1_iP17stbi__result_info:
LFB1933:
	.loc 6 5364 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$1252, %esp
	.cfi_offset 3, -12
	.loc 6 5366 17
	movl	$0, -100(%ebp)
	.loc 6 5366 22
	movl	$0, -104(%ebp)
	.loc 6 5366 27
	movl	$0, -108(%ebp)
	.loc 6 5366 32
	movl	$0, -112(%ebp)
	.loc 6 5368 8
	movl	$0, -20(%ebp)
	.loc 6 5373 15
	movl	$255, -1180(%ebp)
	.loc 6 5374 30
	leal	-1208(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__bmp_parse_headerP13stbi__contextP14stbi__bmp_data
	.loc 6 5374 41
	testl	%eax, %eax
	sete	%al
	.loc 6 5374 4
	testb	%al, %al
	je	L1885
	.loc 6 5375 14
	movl	$0, %eax
	jmp	L1966
L1885:
	.loc 6 5377 32
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5377 39
	testl	%eax, %eax
	setg	%al
	.loc 6 5377 20
	movzbl	%al, %eax
	movl	%eax, -116(%ebp)
	.loc 6 5378 28
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5378 18
	cltd
	xorl	%edx, %eax
	subl	%edx, %eax
	movl	%eax, %edx
	.loc 6 5378 13
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 6 5380 11
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5380 4
	cmpl	$16777216, %eax
	jbe	L1887
	.loc 6 5380 47 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1966
L1887:
	.loc 6 5381 11
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5381 4
	cmpl	$16777216, %eax
	jbe	L1888
	.loc 6 5381 47 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1966
L1888:
	.loc 6 5383 7
	movl	-1196(%ebp), %eax
	movl	%eax, -100(%ebp)
	.loc 6 5384 7
	movl	-1192(%ebp), %eax
	movl	%eax, -104(%ebp)
	.loc 6 5385 7
	movl	-1188(%ebp), %eax
	movl	%eax, -108(%ebp)
	.loc 6 5386 7
	movl	-1184(%ebp), %eax
	movl	%eax, -112(%ebp)
	.loc 6 5387 10
	movl	-1180(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 6 5389 13
	movl	-1200(%ebp), %eax
	.loc 6 5389 4
	cmpl	$12, %eax
	jne	L1889
	.loc 6 5390 16
	movl	-1208(%ebp), %eax
	.loc 6 5390 7
	cmpl	$23, %eax
	jg	L1890
	.loc 6 5391 24
	movl	-1204(%ebp), %edx
	.loc 6 5391 38
	movl	-1176(%ebp), %eax
	.loc 6 5391 31
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 6 5391 49
	leal	-24(%eax), %ecx
	.loc 6 5391 16
	movl	$1431655766, %edx
	movl	%ecx, %eax
	imull	%edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -20(%ebp)
	jmp	L1890
L1889:
	.loc 6 5393 16
	movl	-1208(%ebp), %eax
	.loc 6 5393 7
	cmpl	$15, %eax
	jg	L1890
	.loc 6 5394 24
	movl	-1204(%ebp), %edx
	.loc 6 5394 38
	movl	-1176(%ebp), %eax
	.loc 6 5394 31
	subl	%eax, %edx
	.loc 6 5394 56
	movl	-1200(%ebp), %eax
	.loc 6 5394 49
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 6 5394 16
	sarl	$2, %eax
	movl	%eax, -20(%ebp)
L1890:
	.loc 6 5396 4
	cmpl	$0, -20(%ebp)
	jne	L1891
	.loc 6 5397 7
	movl	-1204(%ebp), %edx
	movl	8(%ebp), %eax
	movl	168(%eax), %ecx
	movl	8(%ebp), %eax
	movl	172(%eax), %ebx
	movl	8(%ebp), %eax
	movl	180(%eax), %eax
	subl	%eax, %ebx
	movl	%ebx, %eax
	addl	%ecx, %eax
	cmpl	%eax, %edx
	je	L1894
	.loc 6 5397 7 is_stmt 0 discriminator 2
	movl	$5397, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC116, (%esp)
	call	__assert
L1894:
	.loc 6 5398 16 is_stmt 1
	movl	-1204(%ebp), %edx
	.loc 6 5398 29
	movl	8(%ebp), %eax
	movl	168(%eax), %ecx
	.loc 6 5398 57
	movl	8(%ebp), %eax
	movl	172(%eax), %eax
	.loc 6 5398 73
	movl	8(%ebp), %ebx
	addl	$40, %ebx
	.loc 6 5398 68
	subl	%ebx, %eax
	.loc 6 5398 51
	addl	%ecx, %eax
	.loc 6 5398 7
	cmpl	%eax, %edx
	je	L1891
	.loc 6 5399 16
	movl	$LC117, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1966
L1891:
	.loc 6 5403 13
	movl	-1208(%ebp), %eax
	.loc 6 5403 4
	cmpl	$24, %eax
	jne	L1895
	.loc 6 5403 23 discriminator 1
	cmpl	$-16777216, -112(%ebp)
	jne	L1895
	.loc 6 5404 16
	movl	8(%ebp), %eax
	movl	$3, 8(%eax)
	jmp	L1896
L1895:
	.loc 6 5406 21
	cmpl	$0, -112(%ebp)
	je	L1897
	.loc 6 5406 21 is_stmt 0 discriminator 1
	movl	$4, %edx
	jmp	L1898
L1897:
	.loc 6 5406 21 discriminator 2
	movl	$3, %edx
L1898:
	.loc 6 5406 16 is_stmt 1 discriminator 4
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
L1896:
	.loc 6 5407 4
	cmpl	$0, 24(%ebp)
	je	L1899
	.loc 6 5407 17 discriminator 1
	cmpl	$2, 24(%ebp)
	jle	L1899
	.loc 6 5408 14
	movl	24(%ebp), %eax
	movl	%eax, -36(%ebp)
	jmp	L1900
L1899:
	.loc 6 5410 14
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -36(%ebp)
L1900:
	.loc 6 5413 52
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5413 30
	movl	%eax, %edx
	.loc 6 5413 42
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5413 30
	movl	$0, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__mad3sizes_validiiii
	.loc 6 5413 8
	testl	%eax, %eax
	sete	%al
	.loc 6 5413 4
	testb	%al, %al
	je	L1901
	.loc 6 5414 14
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1966
L1901:
	.loc 6 5416 61
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5416 39
	movl	%eax, %edx
	.loc 6 5416 51
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5416 39
	movl	$0, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad3iiii
	movl	%eax, -12(%ebp)
	.loc 6 5417 4
	cmpl	$0, -12(%ebp)
	jne	L1902
	.loc 6 5417 21 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1966
L1902:
LBB361:
	.loc 6 5418 13
	movl	-1208(%ebp), %eax
	.loc 6 5418 4
	cmpl	$15, %eax
	jg	L1903
LBB362:
	.loc 6 5419 11
	movl	$0, -40(%ebp)
	.loc 6 5420 7
	cmpl	$0, -20(%ebp)
	je	L1904
	.loc 6 5420 22 discriminator 2
	cmpl	$256, -20(%ebp)
	jle	L1905
L1904:
	.loc 6 5420 40 discriminator 3
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 5420 63 discriminator 3
	movl	$LC118, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1966
L1905:
	.loc 6 5421 13
	movl	$0, -24(%ebp)
L1908:
	.loc 6 5421 19 discriminator 1
	movl	-24(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jge	L1906
	.loc 6 5422 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 5422 20
	movl	-24(%ebp), %eax
	movb	%dl, -1167(%ebp,%eax,4)
	.loc 6 5423 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 5423 20
	movl	-24(%ebp), %eax
	movb	%dl, -1168(%ebp,%eax,4)
	.loc 6 5424 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 5424 20
	movl	-24(%ebp), %eax
	movb	%dl, -1169(%ebp,%eax,4)
	.loc 6 5425 19
	movl	-1200(%ebp), %eax
	.loc 6 5425 10
	cmpl	$12, %eax
	je	L1907
	.loc 6 5425 40 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
L1907:
	.loc 6 5426 20 discriminator 2
	movl	-24(%ebp), %eax
	movb	$-1, -1166(%ebp,%eax,4)
	.loc 6 5421 7 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L1908
L1906:
	.loc 6 5428 26
	movl	-1204(%ebp), %edx
	.loc 6 5428 40
	movl	-1176(%ebp), %eax
	.loc 6 5428 33
	subl	%eax, %edx
	.loc 6 5428 58
	movl	-1200(%ebp), %eax
	.loc 6 5428 51
	subl	%eax, %edx
	.loc 6 5428 78
	movl	-1200(%ebp), %eax
	.loc 6 5428 88
	cmpl	$12, %eax
	jne	L1909
	.loc 6 5428 88 is_stmt 0 discriminator 1
	movl	$3, %eax
	jmp	L1910
L1909:
	.loc 6 5428 88 discriminator 2
	movl	$4, %eax
L1910:
	.loc 6 5428 70 is_stmt 1 discriminator 4
	imull	-20(%ebp), %eax
	.loc 6 5428 17 discriminator 4
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 5429 16 discriminator 4
	movl	-1208(%ebp), %eax
	.loc 6 5429 7 discriminator 4
	cmpl	$1, %eax
	jne	L1911
	.loc 6 5429 38 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5429 44 discriminator 1
	addl	$7, %eax
	.loc 6 5429 49 discriminator 1
	shrl	$3, %eax
	.loc 6 5429 32 discriminator 1
	movl	%eax, -32(%ebp)
	jmp	L1912
L1911:
	.loc 6 5430 21
	movl	-1208(%ebp), %eax
	.loc 6 5430 12
	cmpl	$4, %eax
	jne	L1913
	.loc 6 5430 43 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5430 49 discriminator 1
	addl	$1, %eax
	.loc 6 5430 54 discriminator 1
	shrl	%eax
	.loc 6 5430 37 discriminator 1
	movl	%eax, -32(%ebp)
	jmp	L1912
L1913:
	.loc 6 5431 21
	movl	-1208(%ebp), %eax
	.loc 6 5431 12
	cmpl	$8, %eax
	jne	L1914
	.loc 6 5431 42 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5431 37 discriminator 1
	movl	%eax, -32(%ebp)
	jmp	L1912
L1914:
	.loc 6 5432 14
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 5432 37
	movl	$LC119, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1966
L1912:
	.loc 6 5433 14
	movl	-32(%ebp), %eax
	negl	%eax
	.loc 6 5433 11
	andl	$3, %eax
	movl	%eax, -120(%ebp)
LBB363:
	.loc 6 5434 16
	movl	-1208(%ebp), %eax
	.loc 6 5434 7
	cmpl	$1, %eax
	jne	L1915
LBB364:
LBB365:
	.loc 6 5435 16
	movl	$0, -28(%ebp)
L1922:
	.loc 6 5435 33 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5435 22 discriminator 1
	cmpl	%eax, -28(%ebp)
	jge	L1933
LBB366:
	.loc 6 5436 17
	movl	$7, -44(%ebp)
	.loc 6 5436 47
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5436 49
	movzbl	%al, %eax
	movl	%eax, -48(%ebp)
LBB367:
	.loc 6 5437 19
	movl	$0, -24(%ebp)
L1921:
	.loc 6 5437 36 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5437 25 discriminator 1
	cmpl	%eax, -24(%ebp)
	jge	L1917
LBB368:
	.loc 6 5438 30
	movl	-44(%ebp), %eax
	movl	-48(%ebp), %edx
	movl	%eax, %ecx
	sarl	%cl, %edx
	movl	%edx, %eax
	.loc 6 5438 20
	andl	$1, %eax
	movl	%eax, -124(%ebp)
	.loc 6 5439 21
	movl	-40(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	%eax, %edx
	.loc 6 5439 23
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 5439 39
	movl	-124(%ebp), %eax
	movzbl	-1169(%ebp,%eax,4), %eax
	.loc 6 5439 25
	movb	%al, (%edx)
	.loc 6 5440 21
	movl	-40(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	%eax, %edx
	.loc 6 5440 23
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 5440 39
	movl	-124(%ebp), %eax
	movzbl	-1168(%ebp,%eax,4), %eax
	.loc 6 5440 25
	movb	%al, (%edx)
	.loc 6 5441 21
	movl	-40(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	%eax, %edx
	.loc 6 5441 23
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 5441 39
	movl	-124(%ebp), %eax
	movzbl	-1167(%ebp,%eax,4), %eax
	.loc 6 5441 25
	movb	%al, (%edx)
	.loc 6 5442 16
	cmpl	$4, -36(%ebp)
	jne	L1918
	.loc 6 5442 38 discriminator 1
	movl	-40(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	%eax, %edx
	.loc 6 5442 40 discriminator 1
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5442 42 discriminator 1
	movb	$-1, (%eax)
L1918:
	.loc 6 5443 21
	movl	-24(%ebp), %eax
	leal	1(%eax), %edx
	.loc 6 5443 36
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5443 16
	cmpl	%eax, %edx
	je	L1967
	.loc 6 5444 34
	subl	$1, -44(%ebp)
	movl	-44(%ebp), %eax
	shrl	$31, %eax
	.loc 6 5444 16
	testb	%al, %al
	je	L1920
	.loc 6 5445 30
	movl	$7, -44(%ebp)
	.loc 6 5446 33
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5446 21
	movzbl	%al, %eax
	movl	%eax, -48(%ebp)
L1920:
LBE368:
	.loc 6 5437 13 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L1921
L1967:
LBB369:
	.loc 6 5443 43
	nop
L1917:
LBE369:
LBE367:
	.loc 6 5449 23
	movl	-120(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
LBE366:
	.loc 6 5435 10
	addl	$1, -28(%ebp)
	jmp	L1922
L1915:
LBE365:
LBE364:
LBB370:
LBB371:
	.loc 6 5452 16
	movl	$0, -28(%ebp)
L1932:
	.loc 6 5452 33 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5452 22 discriminator 1
	cmpl	%eax, -28(%ebp)
	jge	L1933
LBB372:
LBB373:
	.loc 6 5453 19
	movl	$0, -24(%ebp)
L1931:
	.loc 6 5453 36 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5453 25 discriminator 1
	cmpl	%eax, -24(%ebp)
	jge	L1924
LBB374:
	.loc 6 5454 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5454 34
	movzbl	%al, %eax
	movl	%eax, -52(%ebp)
	.loc 6 5454 36
	movl	$0, -56(%ebp)
	.loc 6 5455 25
	movl	-1208(%ebp), %eax
	.loc 6 5455 16
	cmpl	$4, %eax
	jne	L1925
	.loc 6 5456 22
	movl	-52(%ebp), %eax
	andl	$15, %eax
	movl	%eax, -56(%ebp)
	.loc 6 5457 21
	sarl	$4, -52(%ebp)
L1925:
	.loc 6 5459 21
	movl	-40(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	%eax, %edx
	.loc 6 5459 23
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 5459 35
	movl	-52(%ebp), %eax
	movzbl	-1169(%ebp,%eax,4), %eax
	.loc 6 5459 25
	movb	%al, (%edx)
	.loc 6 5460 21
	movl	-40(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	%eax, %edx
	.loc 6 5460 23
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 5460 35
	movl	-52(%ebp), %eax
	movzbl	-1168(%ebp,%eax,4), %eax
	.loc 6 5460 25
	movb	%al, (%edx)
	.loc 6 5461 21
	movl	-40(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	%eax, %edx
	.loc 6 5461 23
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 5461 35
	movl	-52(%ebp), %eax
	movzbl	-1167(%ebp,%eax,4), %eax
	.loc 6 5461 25
	movb	%al, (%edx)
	.loc 6 5462 16
	cmpl	$4, -36(%ebp)
	jne	L1926
	.loc 6 5462 38 discriminator 1
	movl	-40(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	%eax, %edx
	.loc 6 5462 40 discriminator 1
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5462 42 discriminator 1
	movb	$-1, (%eax)
L1926:
	.loc 6 5463 21
	movl	-24(%ebp), %eax
	leal	1(%eax), %edx
	.loc 6 5463 36
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5463 16
	cmpl	%eax, %edx
	je	L1968
	.loc 6 5464 26
	movl	-1208(%ebp), %eax
	.loc 6 5464 36
	cmpl	$8, %eax
	jne	L1928
	.loc 6 5464 48 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5464 36 discriminator 1
	movzbl	%al, %eax
	jmp	L1929
L1928:
	.loc 6 5464 36 is_stmt 0 discriminator 2
	movl	-56(%ebp), %eax
L1929:
	.loc 6 5464 18 is_stmt 1 discriminator 5
	movl	%eax, -52(%ebp)
	.loc 6 5465 21 discriminator 5
	movl	-40(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	%eax, %edx
	.loc 6 5465 23 discriminator 5
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 5465 35 discriminator 5
	movl	-52(%ebp), %eax
	movzbl	-1169(%ebp,%eax,4), %eax
	.loc 6 5465 25 discriminator 5
	movb	%al, (%edx)
	.loc 6 5466 21 discriminator 5
	movl	-40(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	%eax, %edx
	.loc 6 5466 23 discriminator 5
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 5466 35 discriminator 5
	movl	-52(%ebp), %eax
	movzbl	-1168(%ebp,%eax,4), %eax
	.loc 6 5466 25 discriminator 5
	movb	%al, (%edx)
	.loc 6 5467 21 discriminator 5
	movl	-40(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	%eax, %edx
	.loc 6 5467 23 discriminator 5
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 5467 35 discriminator 5
	movl	-52(%ebp), %eax
	movzbl	-1167(%ebp,%eax,4), %eax
	.loc 6 5467 25 discriminator 5
	movb	%al, (%edx)
	.loc 6 5468 16 discriminator 5
	cmpl	$4, -36(%ebp)
	jne	L1930
	.loc 6 5468 38 discriminator 1
	movl	-40(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	%eax, %edx
	.loc 6 5468 40 discriminator 1
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5468 42 discriminator 1
	movb	$-1, (%eax)
L1930:
LBE374:
	.loc 6 5453 45 discriminator 2
	addl	$2, -24(%ebp)
	.loc 6 5453 13 discriminator 2
	jmp	L1931
L1968:
LBB375:
	.loc 6 5463 43
	nop
L1924:
LBE375:
LBE373:
	.loc 6 5470 23
	movl	-120(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
LBE372:
	.loc 6 5452 10
	addl	$1, -28(%ebp)
	jmp	L1932
L1903:
LBE371:
LBE370:
LBE363:
LBE362:
LBB376:
	.loc 6 5474 11
	movl	$0, -60(%ebp)
	.loc 6 5474 20
	movl	$0, -64(%ebp)
	.loc 6 5474 29
	movl	$0, -68(%ebp)
	.loc 6 5474 38
	movl	$0, -72(%ebp)
	.loc 6 5474 47
	movl	$0, -76(%ebp)
	.loc 6 5474 56
	movl	$0, -80(%ebp)
	.loc 6 5474 65
	movl	$0, -84(%ebp)
	.loc 6 5474 74
	movl	$0, -88(%ebp)
	.loc 6 5475 11
	movl	$0, -92(%ebp)
	.loc 6 5476 11
	movl	$0, -96(%ebp)
	.loc 6 5477 26
	movl	-1204(%ebp), %edx
	.loc 6 5477 40
	movl	-1176(%ebp), %eax
	.loc 6 5477 33
	subl	%eax, %edx
	.loc 6 5477 58
	movl	-1200(%ebp), %eax
	.loc 6 5477 17
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 5478 16
	movl	-1208(%ebp), %eax
	.loc 6 5478 7
	cmpl	$24, %eax
	jne	L1934
	.loc 6 5478 42 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 5478 37 discriminator 1
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	.loc 6 5478 33 discriminator 1
	movl	%eax, -32(%ebp)
	jmp	L1935
L1934:
	.loc 6 5479 21
	movl	-1208(%ebp), %eax
	.loc 6 5479 12
	cmpl	$16, %eax
	jne	L1936
	.loc 6 5479 45 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5479 41 discriminator 1
	addl	%eax, %eax
	.loc 6 5479 38 discriminator 1
	movl	%eax, -32(%ebp)
	jmp	L1935
L1936:
	.loc 6 5480 44
	movl	$0, -32(%ebp)
L1935:
	.loc 6 5481 14
	movl	-32(%ebp), %eax
	negl	%eax
	.loc 6 5481 11
	andl	$3, %eax
	movl	%eax, -120(%ebp)
	.loc 6 5482 16
	movl	-1208(%ebp), %eax
	.loc 6 5482 7
	cmpl	$24, %eax
	jne	L1937
	.loc 6 5483 15
	movl	$1, -96(%ebp)
	jmp	L1938
L1937:
	.loc 6 5484 23
	movl	-1208(%ebp), %eax
	.loc 6 5484 14
	cmpl	$32, %eax
	jne	L1938
	.loc 6 5485 10
	cmpl	$255, -108(%ebp)
	jne	L1938
	.loc 6 5485 25 discriminator 1
	cmpl	$65280, -104(%ebp)
	jne	L1938
	.loc 6 5485 41 discriminator 2
	cmpl	$16711680, -100(%ebp)
	jne	L1938
	.loc 6 5485 61 discriminator 3
	cmpl	$-16777216, -112(%ebp)
	jne	L1938
	.loc 6 5486 18
	movl	$2, -96(%ebp)
L1938:
	.loc 6 5488 7
	cmpl	$0, -96(%ebp)
	jne	L1939
	.loc 6 5489 10
	cmpl	$0, -100(%ebp)
	je	L1940
	.loc 6 5489 18 discriminator 2
	cmpl	$0, -104(%ebp)
	je	L1940
	.loc 6 5489 25 discriminator 4
	cmpl	$0, -108(%ebp)
	jne	L1941
L1940:
	.loc 6 5489 35 discriminator 5
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 5489 58 discriminator 5
	movl	$LC120, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1966
L1941:
	.loc 6 5491 33
	movl	-100(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__high_bitj
	.loc 6 5491 17
	subl	$7, %eax
	movl	%eax, -60(%ebp)
	.loc 6 5491 64
	movl	-100(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__bitcountj
	movl	%eax, -76(%ebp)
	.loc 6 5492 33
	movl	-104(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__high_bitj
	.loc 6 5492 17
	subl	$7, %eax
	movl	%eax, -64(%ebp)
	.loc 6 5492 64
	movl	-104(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__bitcountj
	movl	%eax, -80(%ebp)
	.loc 6 5493 33
	movl	-108(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__high_bitj
	.loc 6 5493 17
	subl	$7, %eax
	movl	%eax, -68(%ebp)
	.loc 6 5493 64
	movl	-108(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__bitcountj
	movl	%eax, -84(%ebp)
	.loc 6 5494 33
	movl	-112(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__high_bitj
	.loc 6 5494 17
	subl	$7, %eax
	movl	%eax, -72(%ebp)
	.loc 6 5494 64
	movl	-112(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__bitcountj
	movl	%eax, -88(%ebp)
	.loc 6 5495 10
	cmpl	$8, -76(%ebp)
	jg	L1942
	.loc 6 5495 25 discriminator 2
	cmpl	$8, -80(%ebp)
	jg	L1942
	.loc 6 5495 39 discriminator 4
	cmpl	$8, -84(%ebp)
	jg	L1942
	.loc 6 5495 53 discriminator 6
	cmpl	$8, -88(%ebp)
	jle	L1939
L1942:
	.loc 6 5495 70 discriminator 7
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 5495 93 discriminator 7
	movl	$LC120, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L1966
L1939:
LBB377:
	.loc 6 5497 13
	movl	$0, -28(%ebp)
L1956:
	.loc 6 5497 30 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5497 19 discriminator 1
	cmpl	%eax, -28(%ebp)
	jge	L1933
LBB378:
LBB379:
	.loc 6 5498 10
	cmpl	$0, -96(%ebp)
	je	L1943
LBB380:
LBB381:
	.loc 6 5499 19
	movl	$0, -24(%ebp)
L1948:
	.loc 6 5499 36 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5499 25 discriminator 1
	cmpl	%eax, -24(%ebp)
	jge	L1949
LBB382:
	.loc 6 5501 23
	movl	-92(%ebp), %eax
	leal	2(%eax), %edx
	movl	-12(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 6 5501 37
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5501 25
	movb	%al, (%ebx)
	.loc 6 5502 23
	movl	-92(%ebp), %eax
	leal	1(%eax), %edx
	movl	-12(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 6 5502 37
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5502 25
	movb	%al, (%ebx)
	.loc 6 5503 23
	movl	-92(%ebp), %edx
	movl	-12(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 6 5503 37
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5503 25
	movb	%al, (%ebx)
	.loc 6 5504 18
	addl	$3, -92(%ebp)
	.loc 6 5505 18
	cmpl	$2, -96(%ebp)
	jne	L1945
	.loc 6 5505 43 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	jmp	L1946
L1945:
	.loc 6 5505 18 discriminator 2
	movl	$-1, %eax
L1946:
	.loc 6 5505 18 is_stmt 0 discriminator 5
	movb	%al, -125(%ebp)
	.loc 6 5506 22 is_stmt 1 discriminator 5
	movzbl	-125(%ebp), %eax
	orl	%eax, -16(%ebp)
	.loc 6 5507 16 discriminator 5
	cmpl	$4, -36(%ebp)
	jne	L1947
	.loc 6 5507 38 discriminator 1
	movl	-92(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -92(%ebp)
	movl	%eax, %edx
	.loc 6 5507 40 discriminator 1
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 5507 42 discriminator 1
	movzbl	-125(%ebp), %eax
	movb	%al, (%edx)
L1947:
LBE382:
	.loc 6 5499 13 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L1948
L1943:
LBE381:
LBE380:
LBB383:
	.loc 6 5510 17
	movl	-1208(%ebp), %eax
	movl	%eax, -132(%ebp)
LBB384:
	.loc 6 5511 19
	movl	$0, -24(%ebp)
L1955:
	.loc 6 5511 36 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5511 25 discriminator 1
	cmpl	%eax, -24(%ebp)
	jge	L1949
LBB385:
	.loc 6 5512 44
	cmpl	$16, -132(%ebp)
	jne	L1950
	.loc 6 5512 74 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	jmp	L1951
L1950:
	.loc 6 5512 93 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32leP13stbi__context
L1951:
	.loc 6 5512 96 discriminator 6
	movl	%eax, -136(%ebp)
	.loc 6 5514 27 discriminator 6
	movl	-136(%ebp), %eax
	andl	-100(%ebp), %eax
	movl	-76(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-60(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbi__shiftsignedjii
	movl	%eax, %ecx
	.loc 6 5514 21 discriminator 6
	movl	-92(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -92(%ebp)
	movl	%eax, %edx
	.loc 6 5514 23 discriminator 6
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5514 25 discriminator 6
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 6 5515 27 discriminator 6
	movl	-136(%ebp), %eax
	andl	-104(%ebp), %eax
	movl	-80(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-64(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbi__shiftsignedjii
	movl	%eax, %ecx
	.loc 6 5515 21 discriminator 6
	movl	-92(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -92(%ebp)
	movl	%eax, %edx
	.loc 6 5515 23 discriminator 6
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5515 25 discriminator 6
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 6 5516 27 discriminator 6
	movl	-136(%ebp), %eax
	andl	-108(%ebp), %eax
	movl	-84(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-68(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbi__shiftsignedjii
	movl	%eax, %ecx
	.loc 6 5516 21 discriminator 6
	movl	-92(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -92(%ebp)
	movl	%eax, %edx
	.loc 6 5516 23 discriminator 6
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5516 25 discriminator 6
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 6 5517 24 discriminator 6
	cmpl	$0, -112(%ebp)
	je	L1952
	.loc 6 5517 43 discriminator 1
	movl	-136(%ebp), %eax
	andl	-112(%ebp), %eax
	movl	-88(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-72(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbi__shiftsignedjii
	jmp	L1953
L1952:
	.loc 6 5517 24 discriminator 2
	movl	$255, %eax
L1953:
	.loc 6 5517 18 discriminator 5
	movl	%eax, -1212(%ebp)
	.loc 6 5518 22 discriminator 5
	movl	-1212(%ebp), %eax
	orl	%eax, -16(%ebp)
	.loc 6 5519 16 discriminator 5
	cmpl	$4, -36(%ebp)
	jne	L1954
	.loc 6 5519 42 discriminator 1
	movl	-1212(%ebp), %ecx
	.loc 6 5519 38 discriminator 1
	movl	-92(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -92(%ebp)
	movl	%eax, %edx
	.loc 6 5519 40 discriminator 1
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5519 42 discriminator 1
	movl	%ecx, %edx
	movb	%dl, (%eax)
L1954:
LBE385:
	.loc 6 5511 13 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L1955
L1949:
LBE384:
LBE383:
LBE379:
	.loc 6 5522 20
	movl	-120(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
LBE378:
	.loc 6 5497 7
	addl	$1, -28(%ebp)
	jmp	L1956
L1933:
LBE377:
LBE376:
LBE361:
	.loc 6 5527 4
	cmpl	$4, -36(%ebp)
	jne	L1957
	.loc 6 5527 20 discriminator 1
	cmpl	$0, -16(%ebp)
	jne	L1957
	.loc 6 5528 19
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 5528 28
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5528 24
	imull	%edx, %eax
	sall	$2, %eax
	.loc 6 5528 33
	subl	$1, %eax
	.loc 6 5528 13
	movl	%eax, -24(%ebp)
L1958:
	.loc 6 5528 39 discriminator 3
	cmpl	$0, -24(%ebp)
	js	L1957
	.loc 6 5529 15 discriminator 2
	movl	-24(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5529 17 discriminator 2
	movb	$-1, (%eax)
	.loc 6 5528 47 discriminator 2
	subl	$4, -24(%ebp)
	.loc 6 5528 7 discriminator 2
	jmp	L1958
L1957:
LBB386:
	.loc 6 5531 4
	cmpl	$0, -116(%ebp)
	je	L1959
LBB387:
LBB388:
	.loc 6 5533 13
	movl	$0, -28(%ebp)
L1963:
	.loc 6 5533 30 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 5533 35 discriminator 1
	sarl	%eax
	.loc 6 5533 19 discriminator 1
	cmpl	%eax, -28(%ebp)
	jge	L1959
LBB389:
	.loc 6 5534 45
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 5534 41
	movl	-28(%ebp), %eax
	imull	%eax, %edx
	.loc 6 5534 50
	movl	-36(%ebp), %eax
	imull	%eax, %edx
	.loc 6 5534 19
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -140(%ebp)
	.loc 6 5535 34
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 6 5535 41
	movl	-28(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	leal	-1(%eax), %edx
	.loc 6 5535 48
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5535 44
	imull	%eax, %edx
	.loc 6 5535 53
	movl	-36(%ebp), %eax
	imull	%eax, %edx
	.loc 6 5535 19
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -144(%ebp)
	.loc 6 5536 16
	movl	$0, -24(%ebp)
L1962:
	.loc 6 5536 33 discriminator 3
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 5536 38 discriminator 3
	imull	-36(%ebp), %eax
	.loc 6 5536 22 discriminator 3
	cmpl	%eax, -24(%ebp)
	jge	L1961
	.loc 6 5537 21 discriminator 2
	movl	-24(%ebp), %edx
	movl	-140(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5537 15 discriminator 2
	movzbl	(%eax), %eax
	movb	%al, -145(%ebp)
	.loc 6 5537 36 discriminator 2
	movl	-24(%ebp), %edx
	movl	-144(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5537 28 discriminator 2
	movl	-24(%ebp), %ecx
	movl	-140(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 5537 36 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 5537 30 discriminator 2
	movb	%al, (%edx)
	.loc 6 5537 43 discriminator 2
	movl	-24(%ebp), %edx
	movl	-144(%ebp), %eax
	addl	%eax, %edx
	.loc 6 5537 45 discriminator 2
	movzbl	-145(%ebp), %eax
	movb	%al, (%edx)
	.loc 6 5536 10 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L1962
L1961:
LBE389:
	.loc 6 5533 7 discriminator 2
	addl	$1, -28(%ebp)
	jmp	L1963
L1959:
LBE388:
LBE387:
LBE386:
	.loc 6 5542 4
	cmpl	$0, 24(%ebp)
	je	L1964
	.loc 6 5542 17 discriminator 1
	movl	24(%ebp), %eax
	cmpl	-36(%ebp), %eax
	je	L1964
	.loc 6 5543 33
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%edx, 16(%esp)
	movl	%eax, 12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__convert_formatPhiijj
	movl	%eax, -12(%ebp)
	.loc 6 5544 7
	cmpl	$0, -12(%ebp)
	jne	L1964
	.loc 6 5544 31 discriminator 1
	movl	-12(%ebp), %eax
	jmp	L1966
L1964:
	.loc 6 5547 12
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	.loc 6 5547 7
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 5548 12
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, %edx
	.loc 6 5548 7
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 5549 4
	cmpl	$0, 20(%ebp)
	je	L1965
	.loc 6 5549 25 discriminator 1
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	.loc 6 5549 20 discriminator 1
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
L1965:
	.loc 6 5550 11
	movl	-12(%ebp), %eax
L1966:
	.loc 6 5551 1 discriminator 2
	addl	$1252, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1933:
	.def	__ZL18stbi__tga_get_compiiPi;	.scl	3;	.type	32;	.endef
__ZL18stbi__tga_get_compiiPi:
LFB1934:
	.loc 6 5559 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 6 5561 4
	cmpl	$0, 16(%ebp)
	je	L1970
	.loc 6 5561 28 discriminator 1
	movl	16(%ebp), %eax
	movl	$0, (%eax)
L1970:
	.loc 6 5562 4
	movl	8(%ebp), %eax
	subl	$8, %eax
	cmpl	$24, %eax
	ja	L1971
	movl	L1973(,%eax,4), %eax
	jmp	*%eax
	.section .rdata,"dr"
	.align 4
L1973:
	.long	L1976
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1975
	.long	L1974
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1972
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1971
	.long	L1972
	.text
L1976:
	.loc 6 5563 23
	movl	$1, %eax
	jmp	L1977
L1974:
	.loc 6 5564 16
	cmpl	$0, 12(%ebp)
	je	L1975
	.loc 6 5564 35 discriminator 1
	movl	$2, %eax
	jmp	L1977
L1975:
	.loc 6 5566 16
	cmpl	$0, 16(%ebp)
	je	L1978
	.loc 6 5566 39 discriminator 1
	movl	16(%ebp), %eax
	movl	$1, (%eax)
L1978:
	.loc 6 5567 23
	movl	$3, %eax
	jmp	L1977
L1972:
	.loc 6 5569 38
	movl	8(%ebp), %eax
	leal	7(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$3, %eax
	jmp	L1977
L1971:
	.loc 6 5570 23
	movl	$0, %eax
L1977:
	.loc 6 5572 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1934:
	.def	__ZL14stbi__tga_infoP13stbi__contextPiS1_S1_;	.scl	3;	.type	32;	.endef
__ZL14stbi__tga_infoP13stbi__contextPiS1_S1_:
LFB1935:
	.loc 6 5575 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 5578 15
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5579 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5579 23
	movzbl	%al, %eax
	movl	%eax, -20(%ebp)
	.loc 6 5580 5
	cmpl	$1, -20(%ebp)
	jle	L1980
	.loc 6 5581 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5582 16
	movl	$0, %eax
	jmp	L1981
L1980:
	.loc 6 5584 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5584 20
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	.loc 6 5585 5
	cmpl	$1, -20(%ebp)
	jne	L1982
	.loc 6 5586 9
	cmpl	$1, -24(%ebp)
	je	L1983
	.loc 6 5586 33 discriminator 1
	cmpl	$9, -24(%ebp)
	je	L1983
	.loc 6 5587 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5588 20
	movl	$0, %eax
	jmp	L1981
L1983:
	.loc 6 5590 19
	movl	$4, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 5591 24
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5591 12
	movzbl	%al, %eax
	movl	%eax, -28(%ebp)
	.loc 6 5592 9
	cmpl	$8, -28(%ebp)
	je	L1984
	.loc 6 5592 24 discriminator 1
	cmpl	$15, -28(%ebp)
	je	L1984
	.loc 6 5592 38 discriminator 2
	cmpl	$16, -28(%ebp)
	je	L1984
	.loc 6 5592 52 discriminator 3
	cmpl	$24, -28(%ebp)
	je	L1984
	.loc 6 5592 66 discriminator 4
	cmpl	$32, -28(%ebp)
	je	L1984
	.loc 6 5593 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5594 20
	movl	$0, %eax
	jmp	L1981
L1984:
	.loc 6 5596 19
	movl	$4, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 5597 26
	movl	-28(%ebp), %eax
	movl	%eax, -16(%ebp)
	jmp	L1985
L1982:
	.loc 6 5599 9
	cmpl	$2, -24(%ebp)
	je	L1986
	.loc 6 5599 36 discriminator 1
	cmpl	$3, -24(%ebp)
	je	L1986
	.loc 6 5599 61 discriminator 2
	cmpl	$10, -24(%ebp)
	je	L1986
	.loc 6 5599 87 discriminator 3
	cmpl	$11, -24(%ebp)
	je	L1986
	.loc 6 5600 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5601 20
	movl	$0, %eax
	jmp	L1981
L1986:
	.loc 6 5603 19
	movl	$9, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 5604 26
	movl	$0, -16(%ebp)
L1985:
	.loc 6 5606 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, -32(%ebp)
	.loc 6 5607 5
	cmpl	$0, -32(%ebp)
	jg	L1987
	.loc 6 5608 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5609 16
	movl	$0, %eax
	jmp	L1981
L1987:
	.loc 6 5611 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, -36(%ebp)
	.loc 6 5612 5
	cmpl	$0, -36(%ebp)
	jg	L1988
	.loc 6 5613 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5614 16
	movl	$0, %eax
	jmp	L1981
L1988:
	.loc 6 5616 36
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5616 24
	movzbl	%al, %eax
	movl	%eax, -40(%ebp)
	.loc 6 5617 15
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5618 5
	cmpl	$0, -16(%ebp)
	je	L1989
	.loc 6 5619 9
	cmpl	$8, -40(%ebp)
	je	L1990
	.loc 6 5619 38 discriminator 1
	cmpl	$16, -40(%ebp)
	je	L1990
	.loc 6 5622 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5623 20
	movl	$0, %eax
	jmp	L1981
L1990:
	.loc 6 5625 38
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__tga_get_compiiPi
	movl	%eax, -12(%ebp)
	jmp	L1991
L1989:
	.loc 6 5627 81
	cmpl	$3, -24(%ebp)
	je	L1992
	.loc 6 5627 81 is_stmt 0 discriminator 2
	cmpl	$11, -24(%ebp)
	jne	L1993
L1992:
	.loc 6 5627 81 discriminator 3
	movl	$1, %eax
	jmp	L1994
L1993:
	.loc 6 5627 81 discriminator 4
	movl	$0, %eax
L1994:
	.loc 6 5627 38 is_stmt 1 discriminator 6
	movzbl	%al, %eax
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__tga_get_compiiPi
	movl	%eax, -12(%ebp)
L1991:
	.loc 6 5629 5
	cmpl	$0, -12(%ebp)
	jne	L1995
	.loc 6 5630 19
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5631 14
	movl	$0, %eax
	jmp	L1981
L1995:
	.loc 6 5633 5
	cmpl	$0, 12(%ebp)
	je	L1996
	.loc 6 5633 15 discriminator 1
	movl	12(%ebp), %eax
	movl	-32(%ebp), %edx
	movl	%edx, (%eax)
L1996:
	.loc 6 5634 5
	cmpl	$0, 16(%ebp)
	je	L1997
	.loc 6 5634 15 discriminator 1
	movl	16(%ebp), %eax
	movl	-36(%ebp), %edx
	movl	%edx, (%eax)
L1997:
	.loc 6 5635 5
	cmpl	$0, 20(%ebp)
	je	L1998
	.loc 6 5635 21 discriminator 1
	movl	20(%ebp), %eax
	movl	-12(%ebp), %edx
	movl	%edx, (%eax)
L1998:
	.loc 6 5636 12
	movl	$1, %eax
L1981:
	.loc 6 5637 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1935:
	.def	__ZL14stbi__tga_testP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL14stbi__tga_testP13stbi__context:
LFB1936:
	.loc 6 5640 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 5641 8
	movl	$0, -12(%ebp)
	.loc 6 5643 14
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5644 31
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5644 19
	movzbl	%al, %eax
	movl	%eax, -16(%ebp)
	.loc 6 5645 4
	cmpl	$1, -16(%ebp)
	jg	L2012
	.loc 6 5646 19
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5646 7
	movzbl	%al, %eax
	movl	%eax, -20(%ebp)
	.loc 6 5647 4
	cmpl	$1, -16(%ebp)
	jne	L2002
	.loc 6 5648 7
	cmpl	$1, -20(%ebp)
	je	L2003
	.loc 6 5648 19 discriminator 1
	cmpl	$9, -20(%ebp)
	jne	L2013
L2003:
	.loc 6 5649 17
	movl	$4, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 5650 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5650 10
	movzbl	%al, %eax
	movl	%eax, -20(%ebp)
	.loc 6 5651 7
	cmpl	$8, -20(%ebp)
	je	L2004
	.loc 6 5651 22 discriminator 1
	cmpl	$15, -20(%ebp)
	je	L2004
	.loc 6 5651 36 discriminator 2
	cmpl	$16, -20(%ebp)
	je	L2004
	.loc 6 5651 50 discriminator 3
	cmpl	$24, -20(%ebp)
	je	L2004
	.loc 6 5651 64 discriminator 4
	cmpl	$32, -20(%ebp)
	jne	L2014
L2004:
	.loc 6 5652 17
	movl	$4, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	jmp	L2005
L2002:
	.loc 6 5654 7
	cmpl	$2, -20(%ebp)
	je	L2006
	.loc 6 5654 22 discriminator 1
	cmpl	$3, -20(%ebp)
	je	L2006
	.loc 6 5654 35 discriminator 2
	cmpl	$10, -20(%ebp)
	je	L2006
	.loc 6 5654 49 discriminator 3
	cmpl	$11, -20(%ebp)
	jne	L2015
L2006:
	.loc 6 5655 17
	movl	$9, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
L2005:
	.loc 6 5657 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	.loc 6 5657 26
	testl	%eax, %eax
	setle	%al
	.loc 6 5657 4
	testb	%al, %al
	jne	L2016
	.loc 6 5658 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	.loc 6 5658 26
	testl	%eax, %eax
	setle	%al
	.loc 6 5658 4
	testb	%al, %al
	jne	L2017
	.loc 6 5659 19
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5659 7
	movzbl	%al, %eax
	movl	%eax, -20(%ebp)
	.loc 6 5660 4
	cmpl	$1, -16(%ebp)
	jne	L2009
	.loc 6 5660 31 discriminator 1
	cmpl	$8, -20(%ebp)
	je	L2009
	.loc 6 5660 44 discriminator 2
	cmpl	$16, -20(%ebp)
	jne	L2018
L2009:
	.loc 6 5661 4
	cmpl	$8, -20(%ebp)
	je	L2010
	.loc 6 5661 19 discriminator 1
	cmpl	$15, -20(%ebp)
	je	L2010
	.loc 6 5661 33 discriminator 2
	cmpl	$16, -20(%ebp)
	je	L2010
	.loc 6 5661 47 discriminator 3
	cmpl	$24, -20(%ebp)
	je	L2010
	.loc 6 5661 61 discriminator 4
	cmpl	$32, -20(%ebp)
	jne	L2019
L2010:
	.loc 6 5663 8
	movl	$1, -12(%ebp)
	jmp	L2001
L2012:
	.loc 6 5645 35
	nop
	jmp	L2001
L2013:
	.loc 6 5648 36
	nop
	jmp	L2001
L2014:
	.loc 6 5651 85
	nop
	jmp	L2001
L2015:
	.loc 6 5654 70
	nop
	jmp	L2001
L2016:
	.loc 6 5657 37
	nop
	jmp	L2001
L2017:
	.loc 6 5658 37
	nop
	jmp	L2001
L2018:
	.loc 6 5660 65
	nop
	jmp	L2001
L2019:
	.loc 6 5661 82
	nop
L2001:
	.loc 6 5666 16
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5667 11
	movl	-12(%ebp), %eax
	.loc 6 5668 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1936:
	.def	__ZL20stbi__tga_read_rgb16P13stbi__contextPh;	.scl	3;	.type	32;	.endef
__ZL20stbi__tga_read_rgb16P13stbi__contextPh:
LFB1937:
	.loc 6 5672 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 5673 49
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	.loc 6 5673 51
	movw	%ax, -10(%ebp)
	.loc 6 5674 17
	movw	$31, -12(%ebp)
	.loc 6 5676 16
	movzwl	-10(%ebp), %eax
	sarl	$10, %eax
	movl	%eax, %edx
	.loc 6 5676 23
	movzwl	-12(%ebp), %eax
	.loc 6 5676 8
	andl	%edx, %eax
	movl	%eax, -16(%ebp)
	.loc 6 5677 16
	movzwl	-10(%ebp), %eax
	sarl	$5, %eax
	movl	%eax, %edx
	.loc 6 5677 22
	movzwl	-12(%ebp), %eax
	.loc 6 5677 8
	andl	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 6 5678 15
	movzwl	-10(%ebp), %eax
	andw	-12(%ebp), %ax
	.loc 6 5678 8
	movzwl	%ax, %eax
	movl	%eax, -24(%ebp)
	.loc 6 5680 26
	movl	-16(%ebp), %edx
	movl	%edx, %eax
	sall	$8, %eax
	subl	%edx, %eax
	movl	%eax, %ecx
	.loc 6 5680 32
	movl	$-2078209981, %edx
	movl	%ecx, %eax
	imull	%edx
	leal	(%edx,%ecx), %eax
	sarl	$4, %eax
	movl	%eax, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 6 5680 11
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 5681 26
	movl	-20(%ebp), %edx
	movl	%edx, %eax
	sall	$8, %eax
	subl	%edx, %eax
	movl	%eax, %ecx
	.loc 6 5681 32
	movl	$-2078209981, %edx
	movl	%ecx, %eax
	imull	%edx
	leal	(%edx,%ecx), %eax
	sarl	$4, %eax
	movl	%eax, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	.loc 6 5681 9
	movl	12(%ebp), %eax
	addl	$1, %eax
	.loc 6 5681 11
	movb	%dl, (%eax)
	.loc 6 5682 26
	movl	-24(%ebp), %edx
	movl	%edx, %eax
	sall	$8, %eax
	subl	%edx, %eax
	movl	%eax, %ecx
	.loc 6 5682 32
	movl	$-2078209981, %edx
	movl	%ecx, %eax
	imull	%edx
	leal	(%edx,%ecx), %eax
	sarl	$4, %eax
	movl	%eax, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	.loc 6 5682 9
	movl	12(%ebp), %eax
	addl	$2, %eax
	.loc 6 5682 11
	movb	%dl, (%eax)
	.loc 6 5688 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1937:
	.section .rdata,"dr"
LC121:
	.ascii "bad format\0"
LC122:
	.ascii "bad palette\0"
LC123:
	.ascii "tga_comp == STBI_rgb\0"
	.text
	.def	__ZL14stbi__tga_loadP13stbi__contextPiS1_S1_iP17stbi__result_info;	.scl	3;	.type	32;	.endef
__ZL14stbi__tga_loadP13stbi__contextPiS1_S1_iP17stbi__result_info:
LFB1938:
	.loc 6 5691 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$168, %esp
	.loc 6 5693 31
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5693 33
	movzbl	%al, %eax
	movl	%eax, -72(%ebp)
	.loc 6 5694 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5694 34
	movzbl	%al, %eax
	movl	%eax, -76(%ebp)
	.loc 6 5695 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5695 37
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 6 5696 8
	movl	$0, -16(%ebp)
	.loc 6 5697 41
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, -80(%ebp)
	.loc 6 5698 39
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, -84(%ebp)
	.loc 6 5699 37
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5699 39
	movzbl	%al, %eax
	movl	%eax, -88(%ebp)
	.loc 6 5700 36
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, -92(%ebp)
	.loc 6 5701 36
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, -96(%ebp)
	.loc 6 5702 33
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, -100(%ebp)
	.loc 6 5703 34
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, -104(%ebp)
	.loc 6 5704 39
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5704 41
	movzbl	%al, %eax
	movl	%eax, -108(%ebp)
	.loc 6 5705 18
	movl	$0, -132(%ebp)
	.loc 6 5706 33
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5706 35
	movzbl	%al, %eax
	movl	%eax, -112(%ebp)
	.loc 6 5710 19
	movl	$0, -28(%ebp)
	.loc 6 5712 18
	movl	$0, -136(%ebp)
	.loc 6 5713 8
	movl	$0, -40(%ebp)
	.loc 6 5714 8
	movl	$0, -44(%ebp)
	.loc 6 5715 8
	movl	$1, -48(%ebp)
	.loc 6 5720 4
	cmpl	$16777216, -104(%ebp)
	jle	L2022
	.loc 6 5720 49 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2078
L2022:
	.loc 6 5721 4
	cmpl	$16777216, -100(%ebp)
	jle	L2024
	.loc 6 5721 48 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2078
L2024:
	.loc 6 5724 4
	cmpl	$7, -12(%ebp)
	jle	L2025
	.loc 6 5726 22
	subl	$8, -12(%ebp)
	.loc 6 5727 18
	movl	$1, -16(%ebp)
L2025:
	.loc 6 5729 21
	movl	-112(%ebp), %eax
	andl	$32, %eax
	testl	%eax, %eax
	sete	%al
	.loc 6 5729 17
	movzbl	%al, %eax
	movl	%eax, -112(%ebp)
	.loc 6 5732 4
	cmpl	$0, -76(%ebp)
	je	L2026
	.loc 6 5732 52 discriminator 1
	leal	-132(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__tga_get_compiiPi
	movl	%eax, -20(%ebp)
	jmp	L2027
L2026:
	.loc 6 5733 38
	cmpl	$3, -12(%ebp)
	sete	%al
	movzbl	%al, %eax
	leal	-132(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-108(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__tga_get_compiiPi
	movl	%eax, -20(%ebp)
L2027:
	.loc 6 5735 4
	cmpl	$0, -20(%ebp)
	jne	L2028
	.loc 6 5736 14
	movl	$LC121, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2078
L2028:
	.loc 6 5739 7
	movl	12(%ebp), %eax
	movl	-100(%ebp), %edx
	movl	%edx, (%eax)
	.loc 6 5740 7
	movl	16(%ebp), %eax
	movl	-104(%ebp), %edx
	movl	%edx, (%eax)
	.loc 6 5741 4
	cmpl	$0, 20(%ebp)
	je	L2029
	.loc 6 5741 20 discriminator 1
	movl	20(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%edx, (%eax)
L2029:
	.loc 6 5743 30
	movl	$0, 12(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-104(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-100(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__mad3sizes_validiiii
	.loc 6 5743 8
	testl	%eax, %eax
	sete	%al
	.loc 6 5743 4
	testb	%al, %al
	je	L2030
	.loc 6 5744 14
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2078
L2030:
	.loc 6 5746 48
	movl	$0, 12(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-104(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-100(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad3iiii
	movl	%eax, -24(%ebp)
	.loc 6 5747 4
	cmpl	$0, -24(%ebp)
	jne	L2031
	.loc 6 5747 26 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2078
L2031:
	.loc 6 5750 14
	movl	-72(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
LBB390:
	.loc 6 5752 4
	cmpl	$0, -76(%ebp)
	jne	L2032
	.loc 6 5752 22 discriminator 1
	cmpl	$0, -16(%ebp)
	jne	L2032
	.loc 6 5752 40 discriminator 2
	movl	-132(%ebp), %eax
	.loc 6 5752 37 discriminator 2
	testl	%eax, %eax
	jne	L2032
LBB391:
LBB392:
	.loc 6 5753 13
	movl	$0, -32(%ebp)
L2036:
	.loc 6 5753 19 discriminator 1
	movl	-32(%ebp), %eax
	cmpl	-104(%ebp), %eax
	jge	L2079
LBB393:
	.loc 6 5754 33
	cmpl	$0, -112(%ebp)
	je	L2034
	.loc 6 5754 46 discriminator 1
	movl	-104(%ebp), %eax
	subl	-32(%ebp), %eax
	.loc 6 5754 33 discriminator 1
	subl	$1, %eax
	jmp	L2035
L2034:
	.loc 6 5754 33 is_stmt 0 discriminator 2
	movl	-32(%ebp), %eax
L2035:
	.loc 6 5754 14 is_stmt 1 discriminator 4
	movl	%eax, -116(%ebp)
	.loc 6 5755 43 discriminator 4
	movl	-116(%ebp), %eax
	imull	-100(%ebp), %eax
	.loc 6 5755 53 discriminator 4
	imull	-20(%ebp), %eax
	movl	%eax, %edx
	.loc 6 5755 19 discriminator 4
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -120(%ebp)
	.loc 6 5756 20 discriminator 4
	movl	-100(%ebp), %eax
	imull	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__getnP13stbi__contextPhi
LBE393:
	.loc 6 5753 7 discriminator 4
	addl	$1, -32(%ebp)
	jmp	L2036
L2032:
LBE392:
LBE391:
LBB394:
LBB395:
	.loc 6 5760 7
	cmpl	$0, -76(%ebp)
	je	L2038
LBB396:
	.loc 6 5762 10
	cmpl	$0, -84(%ebp)
	jne	L2039
	.loc 6 5763 13
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 5764 20
	movl	$LC122, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2078
L2039:
	.loc 6 5768 20
	movl	-80(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 5770 57
	movl	$0, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad2iii
	movl	%eax, -28(%ebp)
	.loc 6 5771 10
	cmpl	$0, -28(%ebp)
	jne	L2040
	.loc 6 5772 13
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 5773 20
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2078
L2040:
LBB397:
	.loc 6 5775 23
	movl	-132(%ebp), %eax
	.loc 6 5775 10
	testl	%eax, %eax
	je	L2041
LBB398:
	.loc 6 5776 22
	movl	-28(%ebp), %eax
	movl	%eax, -52(%ebp)
	.loc 6 5777 13
	cmpl	$3, -20(%ebp)
	je	L2044
	.loc 6 5777 13 is_stmt 0 discriminator 2
	movl	$5777, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC123, (%esp)
	call	__assert
L2044:
	.loc 6 5778 19 is_stmt 1
	movl	$0, -32(%ebp)
L2046:
	.loc 6 5778 25 discriminator 1
	movl	-32(%ebp), %eax
	cmpl	-84(%ebp), %eax
	jge	L2038
	.loc 6 5779 36
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__tga_read_rgb16P13stbi__contextPh
	.loc 6 5780 26
	movl	-20(%ebp), %eax
	addl	%eax, -52(%ebp)
	.loc 6 5778 13
	addl	$1, -32(%ebp)
	jmp	L2046
L2041:
LBE398:
	.loc 6 5782 32
	movl	-84(%ebp), %eax
	imull	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__getnP13stbi__contextPhi
	.loc 6 5782 21
	testl	%eax, %eax
	sete	%al
	.loc 6 5782 17
	testb	%al, %al
	je	L2038
	.loc 6 5783 16
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 5784 16
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 5785 23
	movl	$LC122, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2078
L2038:
LBE397:
LBE396:
LBE395:
LBB399:
	.loc 6 5789 13
	movl	$0, -32(%ebp)
L2068:
	.loc 6 5789 31 discriminator 1
	movl	-100(%ebp), %eax
	imull	-104(%ebp), %eax
	.loc 6 5789 19 discriminator 1
	cmpl	%eax, -32(%ebp)
	jge	L2048
LBB400:
LBB401:
	.loc 6 5792 10
	cmpl	$0, -16(%ebp)
	je	L2049
LBB402:
LBB403:
	.loc 6 5794 13
	cmpl	$0, -40(%ebp)
	jne	L2050
LBB404:
	.loc 6 5797 40
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5797 42
	movzbl	%al, %eax
	movl	%eax, -124(%ebp)
	.loc 6 5798 41
	movl	-124(%ebp), %eax
	andl	$127, %eax
	.loc 6 5798 26
	addl	$1, %eax
	movl	%eax, -40(%ebp)
	.loc 6 5799 30
	movl	-124(%ebp), %eax
	sarl	$7, %eax
	movl	%eax, -44(%ebp)
	.loc 6 5800 32
	movl	$1, -48(%ebp)
LBE404:
	jmp	L2052
L2050:
	.loc 6 5801 20
	cmpl	$0, -44(%ebp)
	jne	L2052
	.loc 6 5803 32
	movl	$1, -48(%ebp)
	jmp	L2052
L2049:
LBE403:
LBE402:
	.loc 6 5807 29
	movl	$1, -48(%ebp)
L2052:
LBE401:
LBB405:
	.loc 6 5810 10
	cmpl	$0, -48(%ebp)
	je	L2053
LBB406:
LBB407:
	.loc 6 5813 13
	cmpl	$0, -76(%ebp)
	je	L2054
LBB408:
	.loc 6 5816 56
	cmpl	$8, -108(%ebp)
	jne	L2055
	.loc 6 5816 68 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5816 56 discriminator 1
	movzbl	%al, %eax
	jmp	L2056
L2055:
	.loc 6 5816 87 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
L2056:
	.loc 6 5816 89 discriminator 6
	movl	%eax, -56(%ebp)
	.loc 6 5817 16 discriminator 6
	movl	-56(%ebp), %eax
	cmpl	-84(%ebp), %eax
	jl	L2057
	.loc 6 5819 27
	movl	$0, -56(%ebp)
L2057:
	.loc 6 5821 24
	movl	-56(%ebp), %eax
	imull	-20(%ebp), %eax
	movl	%eax, -56(%ebp)
	.loc 6 5822 23
	movl	$0, -36(%ebp)
L2059:
	.loc 6 5822 30 discriminator 3
	movl	-36(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jge	L2060
	.loc 6 5823 52 discriminator 2
	movl	-56(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 6 5823 54 discriminator 2
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 6 5823 31 discriminator 2
	leal	-136(%ebp), %ecx
	movl	-36(%ebp), %edx
	addl	%ecx, %edx
	movb	%al, (%edx)
	.loc 6 5822 16 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L2059
L2054:
LBE408:
	.loc 6 5825 32
	movl	-132(%ebp), %eax
	.loc 6 5825 20
	testl	%eax, %eax
	je	L2061
	.loc 6 5826 16
	cmpl	$3, -20(%ebp)
	je	L2064
	.loc 6 5826 16 is_stmt 0 discriminator 2
	movl	$5826, 8(%esp)
	movl	$LC35, 4(%esp)
	movl	$LC123, (%esp)
	call	__assert
L2064:
	.loc 6 5827 36 is_stmt 1
	leal	-136(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__tga_read_rgb16P13stbi__contextPh
	jmp	L2060
L2061:
	.loc 6 5830 23
	movl	$0, -36(%ebp)
L2065:
	.loc 6 5830 30 discriminator 2
	movl	-36(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jge	L2060
	.loc 6 5831 43
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %ecx
	.loc 6 5831 31
	leal	-136(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movb	%cl, (%eax)
	.loc 6 5830 16
	addl	$1, -36(%ebp)
	jmp	L2065
L2060:
LBE407:
	.loc 6 5835 29
	movl	$0, -48(%ebp)
L2053:
LBE406:
LBE405:
	.loc 6 5839 17
	movl	$0, -36(%ebp)
L2067:
	.loc 6 5839 24 discriminator 3
	movl	-36(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jge	L2066
	.loc 6 5840 22 discriminator 2
	movl	-32(%ebp), %eax
	imull	-20(%ebp), %eax
	movl	%eax, %edx
	.loc 6 5840 31 discriminator 2
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 6 5840 33 discriminator 2
	movl	-24(%ebp), %eax
	addl	%eax, %edx
	.loc 6 5840 47 discriminator 2
	leal	-136(%ebp), %ecx
	movl	-36(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 6 5840 35 discriminator 2
	movb	%al, (%edx)
	.loc 6 5839 10 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L2067
L2066:
	.loc 6 5843 10 discriminator 2
	subl	$1, -40(%ebp)
LBE400:
	.loc 6 5789 7 discriminator 2
	addl	$1, -32(%ebp)
	jmp	L2068
L2048:
LBE399:
LBB409:
	.loc 6 5846 7
	cmpl	$0, -112(%ebp)
	je	L2069
LBB410:
LBB411:
	.loc 6 5848 17
	movl	$0, -36(%ebp)
L2073:
	.loc 6 5848 23 discriminator 1
	movl	-36(%ebp), %eax
	addl	%eax, %eax
	.loc 6 5848 26 discriminator 1
	cmpl	%eax, -104(%ebp)
	jle	L2069
LBB412:
	.loc 6 5850 28
	movl	-36(%ebp), %eax
	imull	-100(%ebp), %eax
	.loc 6 5850 17
	movl	-20(%ebp), %edx
	imull	%edx, %eax
	movl	%eax, -60(%ebp)
	.loc 6 5851 38
	movl	-104(%ebp), %eax
	subl	$1, %eax
	.loc 6 5851 42
	subl	-36(%ebp), %eax
	.loc 6 5851 47
	imull	-100(%ebp), %eax
	.loc 6 5851 17
	movl	-20(%ebp), %edx
	imull	%edx, %eax
	movl	%eax, -64(%ebp)
LBB413:
	.loc 6 5852 20
	movl	-100(%ebp), %eax
	imull	-20(%ebp), %eax
	movl	%eax, -32(%ebp)
L2072:
	.loc 6 5852 46 discriminator 3
	cmpl	$0, -32(%ebp)
	jle	L2071
LBB414:
	.loc 6 5854 52 discriminator 2
	movl	-60(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5854 30 discriminator 2
	movzbl	(%eax), %eax
	movb	%al, -125(%ebp)
	.loc 6 5855 50 discriminator 2
	movl	-64(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 6 5855 31 discriminator 2
	movl	-60(%ebp), %ecx
	movl	-24(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 5855 50 discriminator 2
	movzbl	(%eax), %eax
	.loc 6 5855 33 discriminator 2
	movb	%al, (%edx)
	.loc 6 5856 31 discriminator 2
	movl	-64(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%eax, %edx
	.loc 6 5856 33 discriminator 2
	movzbl	-125(%ebp), %eax
	movb	%al, (%edx)
	.loc 6 5857 16 discriminator 2
	addl	$1, -60(%ebp)
	.loc 6 5858 16 discriminator 2
	addl	$1, -64(%ebp)
LBE414:
	.loc 6 5852 13 discriminator 2
	subl	$1, -32(%ebp)
	jmp	L2072
L2071:
LBE413:
LBE412:
	.loc 6 5848 10 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L2073
L2069:
LBE411:
LBE410:
LBE409:
	.loc 6 5863 7
	cmpl	$0, -28(%ebp)
	je	L2037
	.loc 6 5865 10
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	jmp	L2037
L2079:
LBE394:
	.loc 6 5757 7
	nop
L2037:
LBE390:
LBB415:
	.loc 6 5870 4
	cmpl	$2, -20(%ebp)
	jle	L2074
	.loc 6 5870 25 discriminator 1
	movl	-132(%ebp), %eax
	.loc 6 5870 22 discriminator 1
	testl	%eax, %eax
	jne	L2074
LBB416:
	.loc 6 5872 22
	movl	-24(%ebp), %eax
	movl	%eax, -68(%ebp)
LBB417:
	.loc 6 5873 13
	movl	$0, -32(%ebp)
L2076:
	.loc 6 5873 31 discriminator 3
	movl	-100(%ebp), %eax
	imull	-104(%ebp), %eax
	.loc 6 5873 19 discriminator 3
	cmpl	%eax, -32(%ebp)
	jge	L2074
LBB418:
	.loc 6 5875 24 discriminator 2
	movl	-68(%ebp), %eax
	movzbl	(%eax), %eax
	movb	%al, -126(%ebp)
	.loc 6 5876 23 discriminator 2
	movl	-68(%ebp), %eax
	movzbl	2(%eax), %edx
	movl	-68(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 5877 21 discriminator 2
	movl	-68(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 5877 23 discriminator 2
	movzbl	-126(%ebp), %eax
	movb	%al, (%edx)
	.loc 6 5878 20 discriminator 2
	movl	-20(%ebp), %eax
	addl	%eax, -68(%ebp)
LBE418:
	.loc 6 5873 7 discriminator 2
	addl	$1, -32(%ebp)
	jmp	L2076
L2074:
LBE417:
LBE416:
LBE415:
	.loc 6 5883 4
	cmpl	$0, 24(%ebp)
	je	L2077
	.loc 6 5883 17 discriminator 1
	movl	24(%ebp), %eax
	cmpl	-20(%ebp), %eax
	je	L2077
	.loc 6 5884 38
	movl	-104(%ebp), %edx
	movl	-100(%ebp), %eax
	movl	%edx, 16(%esp)
	movl	%eax, 12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__convert_formatPhiijj
	movl	%eax, -24(%ebp)
L2077:
	.loc 6 5889 38
	movl	$0, -96(%ebp)
	.loc 6 5889 23
	movl	-96(%ebp), %eax
	movl	%eax, -92(%ebp)
	.loc 6 5888 59
	movl	-92(%ebp), %eax
	movl	%eax, -88(%ebp)
	.loc 6 5888 40
	movl	-88(%ebp), %eax
	movl	%eax, -84(%ebp)
	.loc 6 5888 22
	movl	-84(%ebp), %eax
	movl	%eax, -80(%ebp)
	.loc 6 5892 11
	movl	-24(%ebp), %eax
L2078:
	.loc 6 5893 1 discriminator 2
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1938:
	.def	__ZL14stbi__psd_testP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL14stbi__psd_testP13stbi__context:
LFB1939:
	.loc 6 5901 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 5902 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 5902 30
	cmpl	$943870035, %eax
	sete	%al
	.loc 6 5902 43
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 6 5903 16
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 5904 11
	movl	-12(%ebp), %eax
	.loc 6 5905 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1939:
	.def	__ZL20stbi__psd_decode_rleP13stbi__contextPhi;	.scl	3;	.type	32;	.endef
__ZL20stbi__psd_decode_rleP13stbi__contextPhi:
LFB1940:
	.loc 6 5908 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 5911 10
	movl	$0, -12(%ebp)
L2092:
	.loc 6 5912 18
	movl	16(%ebp), %eax
	subl	-12(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 6 5912 40
	cmpl	$0, -20(%ebp)
	setg	%al
	testb	%al, %al
	je	L2083
LBB419:
	.loc 6 5913 23
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 5913 11
	movzbl	%al, %eax
	movl	%eax, -16(%ebp)
LBB420:
	.loc 6 5914 7
	cmpl	$128, -16(%ebp)
	je	L2092
LBB421:
LBB422:
	.loc 6 5916 14
	cmpl	$127, -16(%ebp)
	jg	L2085
	.loc 6 5918 13
	addl	$1, -16(%ebp)
	.loc 6 5919 10
	movl	-16(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jle	L2086
	.loc 6 5919 34 discriminator 1
	movl	$0, %eax
	jmp	L2087
L2086:
	.loc 6 5920 16
	movl	-16(%ebp), %eax
	addl	%eax, -12(%ebp)
L2088:
	.loc 6 5921 17
	cmpl	$0, -16(%ebp)
	je	L2092
	.loc 6 5922 28
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 5922 16
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 5923 15
	addl	$4, 12(%ebp)
	.loc 6 5924 16
	subl	$1, -16(%ebp)
	.loc 6 5921 10
	jmp	L2088
L2085:
LBB423:
LBB424:
	.loc 6 5926 14
	cmpl	$128, -16(%ebp)
	jle	L2092
LBB425:
	.loc 6 5930 14
	movl	$257, %eax
	subl	-16(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 6 5931 10
	movl	-16(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jle	L2089
	.loc 6 5931 34 discriminator 1
	movl	$0, %eax
	jmp	L2087
L2089:
	.loc 6 5932 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movb	%al, -21(%ebp)
	.loc 6 5933 16
	movl	-16(%ebp), %eax
	addl	%eax, -12(%ebp)
L2091:
	.loc 6 5934 17
	cmpl	$0, -16(%ebp)
	je	L2092
	.loc 6 5935 16
	movl	12(%ebp), %eax
	movzbl	-21(%ebp), %edx
	movb	%dl, (%eax)
	.loc 6 5936 15
	addl	$4, 12(%ebp)
	.loc 6 5937 16
	subl	$1, -16(%ebp)
	.loc 6 5934 10
	jmp	L2091
L2083:
LBE425:
LBE424:
LBE423:
LBE422:
LBE421:
LBE420:
LBE419:
	.loc 6 5942 11
	movl	$1, %eax
L2087:
	.loc 6 5943 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1940:
	.section .rdata,"dr"
LC124:
	.ascii "not PSD\0"
LC125:
	.ascii "wrong version\0"
LC126:
	.ascii "wrong channel count\0"
LC127:
	.ascii "unsupported bit depth\0"
LC128:
	.ascii "wrong color format\0"
LC129:
	.ascii "corrupt\0"
	.text
	.def	__ZL14stbi__psd_loadP13stbi__contextPiS1_S1_iP17stbi__result_infoi;	.scl	3;	.type	32;	.endef
__ZL14stbi__psd_loadP13stbi__contextPiS1_S1_iP17stbi__result_infoi:
LFB1941:
	.loc 6 5946 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$152, %esp
	.loc 6 5956 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 5956 25
	cmpl	$943870035, %eax
	setne	%al
	.loc 6 5956 4
	testb	%al, %al
	je	L2094
	.loc 6 5957 14
	movl	$LC124, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2095
L2094:
	.loc 6 5960 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 5960 25
	cmpl	$1, %eax
	setne	%al
	.loc 6 5960 4
	testb	%al, %al
	je	L2096
	.loc 6 5961 14
	movl	$LC125, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2095
L2096:
	.loc 6 5964 14
	movl	$6, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 5967 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -44(%ebp)
	.loc 6 5968 4
	cmpl	$0, -44(%ebp)
	js	L2097
	.loc 6 5968 25 discriminator 1
	cmpl	$16, -44(%ebp)
	jle	L2098
L2097:
	.loc 6 5969 14
	movl	$LC126, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2095
L2098:
	.loc 6 5972 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 5972 6
	movl	%eax, -48(%ebp)
	.loc 6 5973 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 5973 6
	movl	%eax, -52(%ebp)
	.loc 6 5975 4
	cmpl	$16777216, -48(%ebp)
	jle	L2099
	.loc 6 5975 40 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2095
L2099:
	.loc 6 5976 4
	cmpl	$16777216, -52(%ebp)
	jle	L2100
	.loc 6 5976 40 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2095
L2100:
	.loc 6 5979 28
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -56(%ebp)
	.loc 6 5980 4
	cmpl	$8, -56(%ebp)
	je	L2101
	.loc 6 5980 22 discriminator 1
	cmpl	$16, -56(%ebp)
	je	L2101
	.loc 6 5981 14
	movl	$LC127, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2095
L2101:
	.loc 6 5993 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 5993 25
	cmpl	$3, %eax
	setne	%al
	.loc 6 5993 4
	testb	%al, %al
	je	L2102
	.loc 6 5994 14
	movl	$LC128, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2095
L2102:
	.loc 6 5997 30
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 5997 14
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 6000 31
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 6000 14
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 6003 31
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 6003 14
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 6009 31
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -60(%ebp)
	.loc 6 6010 4
	cmpl	$1, -60(%ebp)
	jle	L2103
	.loc 6 6011 14
	movl	$LC82, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2095
L2103:
	.loc 6 6014 30
	movl	$0, 12(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$4, (%esp)
	call	__ZL21stbi__mad3sizes_validiiii
	.loc 6 6014 8
	testl	%eax, %eax
	sete	%al
	.loc 6 6014 4
	testb	%al, %al
	je	L2104
	.loc 6 6015 14
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2095
L2104:
	.loc 6 6019 4
	cmpl	$0, -60(%ebp)
	jne	L2105
	.loc 6 6019 21 discriminator 1
	cmpl	$16, -56(%ebp)
	jne	L2105
	.loc 6 6019 39 discriminator 2
	cmpl	$16, 32(%ebp)
	jne	L2105
	.loc 6 6020 42
	movl	$0, 12(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$8, (%esp)
	call	__ZL17stbi__malloc_mad3iiii
	movl	%eax, -20(%ebp)
	.loc 6 6021 28
	movl	28(%ebp), %eax
	movl	$16, (%eax)
	jmp	L2106
L2105:
	.loc 6 6023 43
	movl	-52(%ebp), %eax
	imull	-48(%ebp), %eax
	sall	$2, %eax
	.loc 6 6023 37
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, -20(%ebp)
L2106:
	.loc 6 6025 4
	cmpl	$0, -20(%ebp)
	jne	L2107
	.loc 6 6025 21 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2095
L2107:
	.loc 6 6026 15
	movl	-52(%ebp), %eax
	imull	-48(%ebp), %eax
	movl	%eax, -64(%ebp)
LBB426:
	.loc 6 6032 4
	cmpl	$0, -60(%ebp)
	je	L2108
LBB427:
	.loc 6 6043 23
	movl	-48(%ebp), %eax
	imull	-44(%ebp), %eax
	.loc 6 6043 17
	addl	%eax, %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
LBB428:
	.loc 6 6046 20
	movl	$0, -12(%ebp)
L2115:
	.loc 6 6046 33 discriminator 1
	cmpl	$3, -12(%ebp)
	jg	L2116
LBB429:
	.loc 6 6049 17
	movl	-12(%ebp), %edx
	.loc 6 6049 12
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 6 6050 10
	movl	-12(%ebp), %eax
	cmpl	-44(%ebp), %eax
	jl	L2110
	.loc 6 6052 20
	movl	$0, -16(%ebp)
L2114:
	.loc 6 6052 27 discriminator 2
	movl	-16(%ebp), %eax
	cmpl	-64(%ebp), %eax
	jge	L2111
	.loc 6 6053 19
	cmpl	$3, -12(%ebp)
	jne	L2112
	.loc 6 6053 19 is_stmt 0 discriminator 1
	movl	$-1, %edx
	jmp	L2113
L2112:
	.loc 6 6053 19 discriminator 2
	movl	$0, %edx
L2113:
	.loc 6 6053 19 discriminator 4
	movl	-24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 6052 13 is_stmt 1 discriminator 4
	addl	$1, -16(%ebp)
	.loc 6 6052 48 discriminator 4
	addl	$4, -24(%ebp)
	.loc 6 6052 13 discriminator 4
	jmp	L2114
L2110:
	.loc 6 6056 38
	movl	-64(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__psd_decode_rleP13stbi__contextPhi
	.loc 6 6056 17
	testl	%eax, %eax
	sete	%al
	.loc 6 6056 13
	testb	%al, %al
	je	L2111
	.loc 6 6057 16
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 6058 23
	movl	$LC129, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2095
L2111:
LBE429:
	.loc 6 6046 7 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L2115
L2108:
LBE428:
LBE427:
LBB430:
LBB431:
	.loc 6 6068 20
	movl	$0, -12(%ebp)
L2134:
	.loc 6 6068 33 discriminator 1
	cmpl	$3, -12(%ebp)
	jg	L2116
LBB432:
LBB433:
	.loc 6 6069 10
	movl	-12(%ebp), %eax
	cmpl	-44(%ebp), %eax
	jl	L2117
LBB434:
LBB435:
	.loc 6 6071 13
	cmpl	$16, -56(%ebp)
	jne	L2118
	.loc 6 6071 32 discriminator 1
	cmpl	$16, 32(%ebp)
	jne	L2118
LBB436:
	.loc 6 6072 57
	movl	-12(%ebp), %eax
	leal	(%eax,%eax), %edx
	.loc 6 6072 30
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -28(%ebp)
	.loc 6 6073 29
	cmpl	$3, -12(%ebp)
	jne	L2119
	.loc 6 6073 29 is_stmt 0 discriminator 1
	movl	$-1, %eax
	jmp	L2120
L2119:
	.loc 6 6073 29 discriminator 2
	movl	$0, %eax
L2120:
	.loc 6 6073 29 discriminator 4
	movw	%ax, -66(%ebp)
	.loc 6 6074 23 is_stmt 1 discriminator 4
	movl	$0, -16(%ebp)
L2122:
	.loc 6 6074 30 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-64(%ebp), %eax
	jge	L2147
	.loc 6 6075 22 discriminator 2
	movl	-28(%ebp), %eax
	movzwl	-66(%ebp), %edx
	movw	%dx, (%eax)
	.loc 6 6074 16 discriminator 2
	addl	$1, -16(%ebp)
	.loc 6 6074 51 discriminator 2
	addl	$8, -28(%ebp)
	.loc 6 6074 16 discriminator 2
	jmp	L2122
L2118:
LBE436:
LBB437:
	.loc 6 6077 32
	movl	-12(%ebp), %edx
	.loc 6 6077 25
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -32(%ebp)
	.loc 6 6078 24
	cmpl	$3, -12(%ebp)
	jne	L2124
	.loc 6 6078 24 is_stmt 0 discriminator 1
	movl	$-1, %eax
	jmp	L2125
L2124:
	.loc 6 6078 24 discriminator 2
	movl	$0, %eax
L2125:
	.loc 6 6078 24 discriminator 4
	movb	%al, -67(%ebp)
	.loc 6 6079 23 is_stmt 1 discriminator 4
	movl	$0, -16(%ebp)
L2126:
	.loc 6 6079 30 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-64(%ebp), %eax
	jge	L2127
	.loc 6 6080 22 discriminator 2
	movl	-32(%ebp), %eax
	movzbl	-67(%ebp), %edx
	movb	%dl, (%eax)
	.loc 6 6079 16 discriminator 2
	addl	$1, -16(%ebp)
	.loc 6 6079 51 discriminator 2
	addl	$4, -32(%ebp)
	.loc 6 6079 16 discriminator 2
	jmp	L2126
L2117:
LBE437:
LBE435:
LBE434:
LBB439:
LBB440:
	.loc 6 6083 21
	movl	28(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 6083 13
	cmpl	$16, %eax
	jne	L2128
LBB441:
	.loc 6 6084 57
	movl	-12(%ebp), %eax
	leal	(%eax,%eax), %edx
	.loc 6 6084 30
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -36(%ebp)
	.loc 6 6085 23
	movl	$0, -16(%ebp)
L2130:
	.loc 6 6085 30 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-64(%ebp), %eax
	jge	L2127
	.loc 6 6086 52 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 6086 22 discriminator 2
	movl	%eax, %edx
	movl	-36(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 6085 16 discriminator 2
	addl	$1, -16(%ebp)
	.loc 6 6085 51 discriminator 2
	addl	$8, -36(%ebp)
	.loc 6 6085 16 discriminator 2
	jmp	L2130
L2128:
LBE441:
LBB442:
	.loc 6 6088 32
	movl	-12(%ebp), %edx
	.loc 6 6088 25
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -40(%ebp)
	.loc 6 6089 16
	cmpl	$16, -56(%ebp)
	jne	L2131
	.loc 6 6090 26
	movl	$0, -16(%ebp)
L2132:
	.loc 6 6090 33 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-64(%ebp), %eax
	jge	L2127
	.loc 6 6091 51 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 6091 55 discriminator 2
	sarl	$8, %eax
	.loc 6 6091 25 discriminator 2
	movl	%eax, %edx
	movl	-40(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 6090 19 discriminator 2
	addl	$1, -16(%ebp)
	.loc 6 6090 54 discriminator 2
	addl	$4, -40(%ebp)
	.loc 6 6090 19 discriminator 2
	jmp	L2132
L2131:
	.loc 6 6093 26
	movl	$0, -16(%ebp)
L2133:
	.loc 6 6093 33 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-64(%ebp), %eax
	jge	L2127
	.loc 6 6094 37 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 6094 25 discriminator 2
	movl	-40(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 6093 19 discriminator 2
	addl	$1, -16(%ebp)
	.loc 6 6093 54 discriminator 2
	addl	$4, -40(%ebp)
	.loc 6 6093 19 discriminator 2
	jmp	L2133
L2147:
LBE442:
LBE440:
LBE439:
LBB443:
LBB438:
	.loc 6 6075 27
	nop
L2127:
LBE438:
LBE443:
LBE433:
LBE432:
	.loc 6 6068 7 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L2134
L2116:
LBE431:
LBE430:
LBE426:
LBB444:
	.loc 6 6102 4
	cmpl	$3, -44(%ebp)
	jle	L2135
LBB445:
LBB446:
	.loc 6 6103 15
	movl	28(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 6103 7
	cmpl	$16, %eax
	jne	L2136
LBB447:
LBB448:
	.loc 6 6104 16
	movl	$0, -16(%ebp)
L2139:
	.loc 6 6104 25 discriminator 1
	movl	-52(%ebp), %eax
	imull	-48(%ebp), %eax
	.loc 6 6104 22 discriminator 1
	cmpl	%eax, -16(%ebp)
	jge	L2135
LBB449:
	.loc 6 6105 56
	movl	-16(%ebp), %eax
	leal	0(,%eax,8), %edx
	.loc 6 6105 27
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -72(%ebp)
LBB450:
	.loc 6 6106 24
	movl	-72(%ebp), %eax
	addl	$6, %eax
	movzwl	(%eax), %eax
	.loc 6 6106 13
	testw	%ax, %ax
	je	L2138
	.loc 6 6106 41 discriminator 1
	movl	-72(%ebp), %eax
	addl	$6, %eax
	movzwl	(%eax), %eax
	.loc 6 6106 31 discriminator 1
	cmpw	$-1, %ax
	je	L2138
LBB451:
	.loc 6 6107 33
	movl	-72(%ebp), %eax
	addl	$6, %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	.loc 6 6107 35
	movl	%eax, -120(%ebp)
	fildl	-120(%ebp)
	.loc 6 6107 22
	flds	LC130
	fdivrp	%st, %st(1)
	fstps	-76(%ebp)
	.loc 6 6108 22
	fld1
	fdivs	-76(%ebp)
	fstps	-80(%ebp)
	.loc 6 6109 44
	fld1
	fsubs	-80(%ebp)
	.loc 6 6109 22
	flds	LC130
	fmulp	%st, %st(1)
	fstps	-84(%ebp)
	.loc 6 6110 50
	movl	-72(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	.loc 6 6110 51
	movl	%eax, -120(%ebp)
	fildl	-120(%ebp)
	fmuls	-80(%ebp)
	.loc 6 6110 55
	fadds	-84(%ebp)
	.loc 6 6110 27
	fnstcw	-106(%ebp)
	movzwl	-106(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -108(%ebp)
	fldcw	-108(%ebp)
	fistpl	-116(%ebp)
	fldcw	-106(%ebp)
	movl	-116(%ebp), %eax
	movl	%eax, %edx
	.loc 6 6110 25
	movl	-72(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 6111 50
	movl	-72(%ebp), %eax
	addl	$2, %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	.loc 6 6111 51
	movl	%eax, -120(%ebp)
	fildl	-120(%ebp)
	fmuls	-80(%ebp)
	.loc 6 6111 55
	fadds	-84(%ebp)
	.loc 6 6111 23
	movl	-72(%ebp), %eax
	addl	$2, %eax
	.loc 6 6111 27
	fldcw	-108(%ebp)
	fistpl	-116(%ebp)
	fldcw	-106(%ebp)
	movl	-116(%ebp), %edx
	.loc 6 6111 25
	movw	%dx, (%eax)
	.loc 6 6112 50
	movl	-72(%ebp), %eax
	addl	$4, %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	.loc 6 6112 51
	movl	%eax, -120(%ebp)
	fildl	-120(%ebp)
	fmuls	-80(%ebp)
	.loc 6 6112 55
	fadds	-84(%ebp)
	.loc 6 6112 23
	movl	-72(%ebp), %eax
	addl	$4, %eax
	.loc 6 6112 27
	fldcw	-108(%ebp)
	fistpl	-116(%ebp)
	fldcw	-106(%ebp)
	movl	-116(%ebp), %edx
	.loc 6 6112 25
	movw	%dx, (%eax)
L2138:
LBE451:
LBE450:
LBE449:
	.loc 6 6104 10 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L2139
L2136:
LBE448:
LBE447:
LBB452:
LBB453:
	.loc 6 6116 16
	movl	$0, -16(%ebp)
L2142:
	.loc 6 6116 25 discriminator 1
	movl	-52(%ebp), %eax
	imull	-48(%ebp), %eax
	.loc 6 6116 22 discriminator 1
	cmpl	%eax, -16(%ebp)
	jge	L2135
LBB454:
	.loc 6 6117 43
	movl	-16(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 6 6117 28
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -88(%ebp)
LBB455:
	.loc 6 6118 24
	movl	-88(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	.loc 6 6118 13
	testb	%al, %al
	je	L2141
	.loc 6 6118 41 discriminator 1
	movl	-88(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	.loc 6 6118 31 discriminator 1
	cmpb	$-1, %al
	je	L2141
LBB456:
	.loc 6 6119 33
	movl	-88(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 6119 35
	movl	%eax, -120(%ebp)
	fildl	-120(%ebp)
	.loc 6 6119 22
	flds	LC41
	fdivrp	%st, %st(1)
	fstps	-92(%ebp)
	.loc 6 6120 22
	fld1
	fdivs	-92(%ebp)
	fstps	-96(%ebp)
	.loc 6 6121 42
	fld1
	fsubs	-96(%ebp)
	.loc 6 6121 22
	flds	LC41
	fmulp	%st, %st(1)
	fstps	-100(%ebp)
	.loc 6 6122 51
	movl	-88(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 6122 52
	movl	%eax, -120(%ebp)
	fildl	-120(%ebp)
	fmuls	-96(%ebp)
	.loc 6 6122 56
	fadds	-100(%ebp)
	.loc 6 6122 27
	fnstcw	-106(%ebp)
	movzwl	-106(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -108(%ebp)
	fldcw	-108(%ebp)
	fistps	-110(%ebp)
	fldcw	-106(%ebp)
	movzwl	-110(%ebp), %eax
	movl	%eax, %edx
	.loc 6 6122 25
	movl	-88(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 6123 51
	movl	-88(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 6123 52
	movl	%eax, -120(%ebp)
	fildl	-120(%ebp)
	fmuls	-96(%ebp)
	.loc 6 6123 56
	fadds	-100(%ebp)
	.loc 6 6123 23
	movl	-88(%ebp), %eax
	addl	$1, %eax
	.loc 6 6123 27
	fldcw	-108(%ebp)
	fistps	-110(%ebp)
	fldcw	-106(%ebp)
	movzwl	-110(%ebp), %edx
	.loc 6 6123 25
	movb	%dl, (%eax)
	.loc 6 6124 51
	movl	-88(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 6124 52
	movl	%eax, -120(%ebp)
	fildl	-120(%ebp)
	fmuls	-96(%ebp)
	.loc 6 6124 56
	fadds	-100(%ebp)
	.loc 6 6124 23
	movl	-88(%ebp), %eax
	addl	$2, %eax
	.loc 6 6124 27
	fldcw	-108(%ebp)
	fistps	-110(%ebp)
	fldcw	-106(%ebp)
	movzwl	-110(%ebp), %edx
	.loc 6 6124 25
	movb	%dl, (%eax)
L2141:
LBE456:
LBE455:
LBE454:
	.loc 6 6116 10 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L2142
L2135:
LBE453:
LBE452:
LBE446:
LBE445:
LBE444:
	.loc 6 6131 4
	cmpl	$0, 24(%ebp)
	je	L2143
	.loc 6 6131 17 discriminator 1
	cmpl	$4, 24(%ebp)
	je	L2143
	.loc 6 6132 15
	movl	28(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 6132 7
	cmpl	$16, %eax
	jne	L2144
	.loc 6 6133 50
	movl	-48(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	%edx, 16(%esp)
	movl	%eax, 12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$4, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__convert_format16Ptiijj
	movl	%eax, -20(%ebp)
	jmp	L2145
L2144:
	.loc 6 6135 36
	movl	-48(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	%edx, 16(%esp)
	movl	%eax, 12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$4, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__convert_formatPhiijj
	movl	%eax, -20(%ebp)
L2145:
	.loc 6 6136 7
	cmpl	$0, -20(%ebp)
	jne	L2143
	.loc 6 6136 31 discriminator 1
	movl	-20(%ebp), %eax
	jmp	L2095
L2143:
	.loc 6 6139 4
	cmpl	$0, 20(%ebp)
	je	L2146
	.loc 6 6139 20 discriminator 1
	movl	20(%ebp), %eax
	movl	$4, (%eax)
L2146:
	.loc 6 6140 7
	movl	16(%ebp), %eax
	movl	-48(%ebp), %edx
	movl	%edx, (%eax)
	.loc 6 6141 7
	movl	12(%ebp), %eax
	movl	-52(%ebp), %edx
	movl	%edx, (%eax)
	.loc 6 6143 11
	movl	-20(%ebp), %eax
L2095:
	.loc 6 6144 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1941:
	.def	__ZL13stbi__pic_is4P13stbi__contextPKc;	.scl	3;	.type	32;	.endef
__ZL13stbi__pic_is4P13stbi__contextPKc:
LFB1942:
	.loc 6 6156 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 6158 10
	movl	$0, -12(%ebp)
L2152:
	.loc 6 6158 15 discriminator 1
	cmpl	$3, -12(%ebp)
	jg	L2149
	.loc 6 6159 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %ecx
	.loc 6 6159 42
	movl	-12(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 6 6159 25
	cmpb	%al, %cl
	setne	%al
	.loc 6 6159 7
	testb	%al, %al
	je	L2150
	.loc 6 6160 17
	movl	$0, %eax
	jmp	L2151
L2150:
	.loc 6 6158 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L2152
L2149:
	.loc 6 6162 11
	movl	$1, %eax
L2151:
	.loc 6 6163 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1942:
	.section .rdata,"dr"
LC131:
	.ascii "S\200\366"
	.ascii "4\0"
LC132:
	.ascii "PICT\0"
	.text
	.def	__ZL19stbi__pic_test_coreP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL19stbi__pic_test_coreP13stbi__context:
LFB1943:
	.loc 6 6166 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 6169 22
	movl	$LC131, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__pic_is4P13stbi__contextPKc
	.loc 6 6169 8
	testl	%eax, %eax
	sete	%al
	.loc 6 6169 4
	testb	%al, %al
	je	L2154
	.loc 6 6170 14
	movl	$0, %eax
	jmp	L2155
L2154:
	.loc 6 6172 9
	movl	$0, -12(%ebp)
L2157:
	.loc 6 6172 13 discriminator 3
	cmpl	$83, -12(%ebp)
	jg	L2156
	.loc 6 6173 17 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6172 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L2157
L2156:
	.loc 6 6175 22
	movl	$LC132, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__pic_is4P13stbi__contextPKc
	.loc 6 6175 8
	testl	%eax, %eax
	sete	%al
	.loc 6 6175 4
	testb	%al, %al
	je	L2158
	.loc 6 6176 14
	movl	$0, %eax
	jmp	L2155
L2158:
	.loc 6 6178 11
	movl	$1, %eax
L2155:
	.loc 6 6179 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1943:
	.section .rdata,"dr"
LC133:
	.ascii "bad file\0"
	.text
	.def	__ZL13stbi__readvalP13stbi__contextiPh;	.scl	3;	.type	32;	.endef
__ZL13stbi__readvalP13stbi__contextiPh:
LFB1944:
	.loc 6 6187 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 6 6188 8
	movl	$128, -12(%ebp)
	.loc 6 6190 10
	movl	$0, -16(%ebp)
L2164:
	.loc 6 6190 15 discriminator 1
	cmpl	$3, -16(%ebp)
	jg	L2160
	.loc 6 6191 19
	movl	12(%ebp), %eax
	andl	-12(%ebp), %eax
	.loc 6 6191 7
	testl	%eax, %eax
	je	L2161
	.loc 6 6192 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 6192 29
	testl	%eax, %eax
	setne	%al
	.loc 6 6192 10
	testb	%al, %al
	je	L2162
	.loc 6 6192 38 discriminator 1
	movl	$LC133, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2163
L2162:
	.loc 6 6193 16
	movl	-16(%ebp), %edx
	movl	16(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 6 6193 28
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6193 17
	movb	%al, (%ebx)
L2161:
	.loc 6 6190 4 discriminator 2
	addl	$1, -16(%ebp)
	.loc 6 6190 28 discriminator 2
	sarl	-12(%ebp)
	.loc 6 6190 4 discriminator 2
	jmp	L2164
L2160:
	.loc 6 6197 11
	movl	16(%ebp), %eax
L2163:
	.loc 6 6198 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1944:
	.def	__ZL13stbi__copyvaliPhPKh;	.scl	3;	.type	32;	.endef
__ZL13stbi__copyvaliPhPKh:
LFB1945:
	.loc 6 6201 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 6 6202 8
	movl	$128, -4(%ebp)
	.loc 6 6204 10
	movl	$0, -8(%ebp)
L2168:
	.loc 6 6204 14 discriminator 1
	cmpl	$3, -8(%ebp)
	jg	L2169
	.loc 6 6205 18
	movl	8(%ebp), %eax
	andl	-4(%ebp), %eax
	.loc 6 6205 7
	testl	%eax, %eax
	je	L2167
	.loc 6 6206 23
	movl	-8(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 6 6206 16
	movl	-8(%ebp), %ecx
	movl	12(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 6206 23
	movzbl	(%eax), %eax
	.loc 6 6206 17
	movb	%al, (%edx)
L2167:
	.loc 6 6204 4 discriminator 2
	addl	$1, -8(%ebp)
	.loc 6 6204 27 discriminator 2
	sarl	-4(%ebp)
	.loc 6 6204 4 discriminator 2
	jmp	L2168
L2169:
	.loc 6 6207 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1945:
	.def	__ZL19stbi__pic_load_coreP13stbi__contextiiPiPh;	.scl	3;	.type	32;	.endef
__ZL19stbi__pic_load_coreP13stbi__contextiiPiPh:
LFB1946:
	.loc 6 6210 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$136, %esp
	.loc 6 6211 8
	movl	$0, -12(%ebp)
	.loc 6 6211 19
	movl	$0, -16(%ebp)
L2176:
LBB457:
	.loc 6 6219 7
	cmpl	$10, -16(%ebp)
	jne	L2171
	.loc 6 6220 17
	movl	$LC121, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2213
L2171:
	.loc 6 6222 36
	movl	-16(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -16(%ebp)
	.loc 6 6222 14
	leal	-98(%ebp), %ecx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%ecx, %eax
	movl	%eax, -60(%ebp)
	.loc 6 6224 27
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6224 15
	movzbl	%al, %eax
	movl	%eax, -64(%ebp)
	.loc 6 6225 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 6225 23
	movl	-60(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 6226 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 6226 23
	movl	-60(%ebp), %eax
	movb	%dl, 1(%eax)
	.loc 6 6227 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 6227 23
	movl	-60(%ebp), %eax
	movb	%dl, 2(%eax)
	.loc 6 6229 27
	movl	-60(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	.loc 6 6229 16
	orl	%eax, -12(%ebp)
	.loc 6 6231 23
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 6231 26
	testl	%eax, %eax
	setne	%al
	.loc 6 6231 7
	testb	%al, %al
	je	L2173
	.loc 6 6231 44 discriminator 2
	movl	$LC133, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2213
L2173:
	.loc 6 6232 19
	movl	-60(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 6232 7
	cmpb	$8, %al
	je	L2174
	.loc 6 6232 38 discriminator 1
	movl	$LC121, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2213
L2174:
LBE457:
	.loc 6 6233 13
	cmpl	$0, -64(%ebp)
	je	L2175
	.loc 6 6216 4
	jmp	L2176
L2175:
	.loc 6 6235 22
	movl	-12(%ebp), %eax
	andl	$16, %eax
	.loc 6 6235 29
	testl	%eax, %eax
	je	L2177
	.loc 6 6235 29 is_stmt 0 discriminator 1
	movl	$4, %edx
	jmp	L2178
L2177:
	.loc 6 6235 29 discriminator 2
	movl	$3, %edx
L2178:
	.loc 6 6235 10 is_stmt 1 discriminator 4
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
LBB458:
	.loc 6 6237 9 discriminator 4
	movl	$0, -20(%ebp)
L2212:
	.loc 6 6237 14 discriminator 1
	movl	-20(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L2179
LBB459:
LBB460:
	.loc 6 6240 21
	movl	$0, -24(%ebp)
L2211:
	.loc 6 6240 36 discriminator 1
	movl	-24(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jge	L2180
LBB461:
	.loc 6 6241 28
	leal	-98(%ebp), %ecx
	movl	-24(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%ecx, %eax
	movl	%eax, -68(%ebp)
	.loc 6 6242 34
	movl	-20(%ebp), %eax
	imull	12(%ebp), %eax
	.loc 6 6242 40
	sall	$2, %eax
	movl	%eax, %edx
	.loc 6 6242 19
	movl	24(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -28(%ebp)
LBB462:
	.loc 6 6244 26
	movl	-68(%ebp), %eax
	movzbl	1(%eax), %eax
	movzbl	%al, %eax
	cmpl	$1, %eax
	je	L2181
	cmpl	$2, %eax
	je	L2182
	testl	%eax, %eax
	je	L2183
LBB463:
	.loc 6 6246 23
	movl	$LC121, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2213
L2183:
LBB464:
	.loc 6 6251 21
	movl	$0, -32(%ebp)
L2186:
	.loc 6 6251 25 discriminator 1
	movl	-32(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L2214
	.loc 6 6252 48
	movl	-68(%ebp), %eax
	movzbl	2(%eax), %eax
	.loc 6 6252 37
	movzbl	%al, %eax
	movl	-28(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__readvalP13stbi__contextiPh
	.loc 6 6252 23
	testl	%eax, %eax
	sete	%al
	.loc 6 6252 19
	testb	%al, %al
	je	L2185
	.loc 6 6253 29
	movl	$0, %eax
	jmp	L2213
L2185:
	.loc 6 6251 16 discriminator 2
	addl	$1, -32(%ebp)
	.loc 6 6251 41 discriminator 2
	addl	$4, -28(%ebp)
	.loc 6 6251 16 discriminator 2
	jmp	L2186
L2181:
LBE464:
LBB465:
	.loc 6 6259 23
	movl	12(%ebp), %eax
	movl	%eax, -36(%ebp)
L2195:
	.loc 6 6261 30
	cmpl	$0, -36(%ebp)
	jle	L2215
LBB466:
	.loc 6 6264 38
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movb	%al, -41(%ebp)
	.loc 6 6265 38
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 6265 41
	testl	%eax, %eax
	setne	%al
	.loc 6 6265 22
	testb	%al, %al
	je	L2189
	.loc 6 6265 52 discriminator 2
	movl	$LC133, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2213
L2189:
	.loc 6 6267 32
	movzbl	-41(%ebp), %eax
	.loc 6 6267 22
	cmpl	%eax, -36(%ebp)
	jge	L2191
	.loc 6 6268 31
	movl	-36(%ebp), %eax
	movb	%al, -41(%ebp)
L2191:
	.loc 6 6270 51
	movl	-68(%ebp), %eax
	movzbl	2(%eax), %eax
	.loc 6 6270 40
	movzbl	%al, %eax
	leal	-102(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__readvalP13stbi__contextiPh
	.loc 6 6270 26
	testl	%eax, %eax
	sete	%al
	.loc 6 6270 22
	testb	%al, %al
	je	L2192
	.loc 6 6270 75 discriminator 2
	movl	$0, %eax
	jmp	L2213
L2192:
	.loc 6 6272 27
	movl	$0, -40(%ebp)
L2194:
	.loc 6 6272 32 discriminator 3
	movzbl	-41(%ebp), %eax
	cmpl	%eax, -40(%ebp)
	jge	L2193
	.loc 6 6273 47 discriminator 2
	movl	-68(%ebp), %eax
	movzbl	2(%eax), %eax
	.loc 6 6273 38 discriminator 2
	movzbl	%al, %eax
	leal	-102(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-28(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL13stbi__copyvaliPhPKh
	.loc 6 6272 22 discriminator 2
	addl	$1, -40(%ebp)
	.loc 6 6272 48 discriminator 2
	addl	$4, -28(%ebp)
	.loc 6 6272 22 discriminator 2
	jmp	L2194
L2193:
	.loc 6 6274 27
	movzbl	-41(%ebp), %eax
	subl	%eax, -36(%ebp)
LBE466:
	.loc 6 6261 19
	jmp	L2195
L2182:
LBE465:
LBB467:
	.loc 6 6280 20
	movl	12(%ebp), %eax
	movl	%eax, -48(%ebp)
L2210:
	.loc 6 6281 27
	cmpl	$0, -48(%ebp)
	jle	L2216
LBB468:
	.loc 6 6282 41
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6282 43
	movzbl	%al, %eax
	movl	%eax, -52(%ebp)
	.loc 6 6283 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 6283 38
	testl	%eax, %eax
	setne	%al
	.loc 6 6283 19
	testb	%al, %al
	je	L2197
	.loc 6 6283 48 discriminator 2
	movl	$LC133, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2213
L2197:
LBB469:
	.loc 6 6285 19
	cmpl	$127, -52(%ebp)
	jle	L2198
LBB470:
	.loc 6 6288 22
	cmpl	$128, -52(%ebp)
	jne	L2199
	.loc 6 6289 46
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -52(%ebp)
	jmp	L2200
L2199:
	.loc 6 6291 31
	subl	$127, -52(%ebp)
L2200:
	.loc 6 6292 22
	movl	-52(%ebp), %eax
	cmpl	-48(%ebp), %eax
	jle	L2201
	.loc 6 6293 32
	movl	$LC133, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2213
L2201:
	.loc 6 6295 51
	movl	-68(%ebp), %eax
	movzbl	2(%eax), %eax
	.loc 6 6295 40
	movzbl	%al, %eax
	leal	-106(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__readvalP13stbi__contextiPh
	.loc 6 6295 26
	testl	%eax, %eax
	sete	%al
	.loc 6 6295 22
	testb	%al, %al
	je	L2203
	.loc 6 6296 32
	movl	$0, %eax
	jmp	L2213
L2203:
	.loc 6 6298 27
	movl	$0, -56(%ebp)
L2205:
	.loc 6 6298 31 discriminator 3
	movl	-56(%ebp), %eax
	cmpl	-52(%ebp), %eax
	jge	L2206
	.loc 6 6299 47 discriminator 2
	movl	-68(%ebp), %eax
	movzbl	2(%eax), %eax
	.loc 6 6299 38 discriminator 2
	movzbl	%al, %eax
	leal	-106(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-28(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL13stbi__copyvaliPhPKh
	.loc 6 6298 22 discriminator 2
	addl	$1, -56(%ebp)
	.loc 6 6298 48 discriminator 2
	addl	$4, -28(%ebp)
	.loc 6 6298 22 discriminator 2
	jmp	L2205
L2198:
LBE470:
	.loc 6 6301 22
	addl	$1, -52(%ebp)
	.loc 6 6302 22
	movl	-52(%ebp), %eax
	cmpl	-48(%ebp), %eax
	jle	L2207
	.loc 6 6302 45 discriminator 1
	movl	$LC133, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2213
L2207:
	.loc 6 6304 27
	movl	$0, -56(%ebp)
L2209:
	.loc 6 6304 31 discriminator 1
	movl	-56(%ebp), %eax
	cmpl	-52(%ebp), %eax
	jge	L2206
	.loc 6 6305 54
	movl	-68(%ebp), %eax
	movzbl	2(%eax), %eax
	.loc 6 6305 43
	movzbl	%al, %eax
	movl	-28(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__readvalP13stbi__contextiPh
	.loc 6 6305 29
	testl	%eax, %eax
	sete	%al
	.loc 6 6305 25
	testb	%al, %al
	je	L2208
	.loc 6 6306 35
	movl	$0, %eax
	jmp	L2213
L2208:
	.loc 6 6304 22 discriminator 2
	addl	$1, -56(%ebp)
	.loc 6 6304 47 discriminator 2
	addl	$4, -28(%ebp)
	.loc 6 6304 22 discriminator 2
	jmp	L2209
L2206:
LBE469:
	.loc 6 6308 23
	movl	-52(%ebp), %eax
	subl	%eax, -48(%ebp)
LBE468:
	.loc 6 6281 16
	jmp	L2210
L2214:
LBE467:
LBB471:
	.loc 6 6254 16
	nop
	jmp	L2187
L2215:
LBE471:
	.loc 6 6277 16
	nop
	jmp	L2187
L2216:
LBB472:
	.loc 6 6310 16
	nop
L2187:
LBE472:
LBE463:
LBE462:
LBE461:
	.loc 6 6240 7 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L2211
L2180:
LBE460:
LBE459:
	.loc 6 6237 4 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L2212
L2179:
LBE458:
	.loc 6 6316 11
	movl	24(%ebp), %eax
L2213:
	.loc 6 6317 1 discriminator 3
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1946:
	.def	__ZL14stbi__pic_loadP13stbi__contextPiS1_S1_iP17stbi__result_info;	.scl	3;	.type	32;	.endef
__ZL14stbi__pic_loadP13stbi__contextPiS1_S1_iP17stbi__result_info:
LFB1947:
	.loc 6 6320 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 6 6325 4
	cmpl	$0, 20(%ebp)
	jne	L2218
	.loc 6 6325 20 discriminator 1
	leal	-28(%ebp), %eax
	movl	%eax, 20(%ebp)
L2218:
	.loc 6 6327 10
	movl	$0, -16(%ebp)
L2220:
	.loc 6 6327 15 discriminator 1
	cmpl	$91, -16(%ebp)
	jg	L2219
	.loc 6 6328 17
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6327 4
	addl	$1, -16(%ebp)
	jmp	L2220
L2219:
	.loc 6 6330 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -20(%ebp)
	.loc 6 6331 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -24(%ebp)
	.loc 6 6333 4
	cmpl	$16777216, -24(%ebp)
	jle	L2221
	.loc 6 6333 40 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2228
L2221:
	.loc 6 6334 4
	cmpl	$16777216, -20(%ebp)
	jle	L2223
	.loc 6 6334 40 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2228
L2223:
	.loc 6 6336 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 6336 23
	testl	%eax, %eax
	setne	%al
	.loc 6 6336 4
	testb	%al, %al
	je	L2224
	.loc 6 6336 33 discriminator 2
	movl	$LC133, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2228
L2224:
	.loc 6 6337 30
	movl	$0, 12(%esp)
	movl	$4, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__mad3sizes_validiiii
	.loc 6 6337 8
	testl	%eax, %eax
	sete	%al
	.loc 6 6337 4
	testb	%al, %al
	je	L2225
	.loc 6 6337 51 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2228
L2225:
	.loc 6 6339 17
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 6340 17
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 6341 17
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 6344 42
	movl	$0, 12(%esp)
	movl	$4, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad3iiii
	movl	%eax, -12(%ebp)
	.loc 6 6345 26
	movl	-20(%ebp), %eax
	imull	-24(%ebp), %eax
	.loc 6 6345 28
	sall	$2, %eax
	.loc 6 6345 10
	movl	%eax, 8(%esp)
	movl	$255, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 6 6347 28
	movl	-12(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__pic_load_coreP13stbi__contextiiPiPh
	.loc 6 6347 8
	testl	%eax, %eax
	sete	%al
	.loc 6 6347 4
	testb	%al, %al
	je	L2226
	.loc 6 6348 7
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 6349 13
	movl	$0, -12(%ebp)
L2226:
	.loc 6 6351 8
	movl	12(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%edx, (%eax)
	.loc 6 6352 8
	movl	16(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%edx, (%eax)
	.loc 6 6353 4
	cmpl	$0, 24(%ebp)
	jne	L2227
	.loc 6 6353 32 discriminator 1
	movl	20(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 24(%ebp)
L2227:
	.loc 6 6354 31
	movl	-24(%ebp), %edx
	movl	-20(%ebp), %eax
	movl	%edx, 16(%esp)
	movl	%eax, 12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$4, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__convert_formatPhiijj
	movl	%eax, -12(%ebp)
	.loc 6 6356 11
	movl	-12(%ebp), %eax
L2228:
	.loc 6 6357 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1947:
	.def	__ZL14stbi__pic_testP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL14stbi__pic_testP13stbi__context:
LFB1948:
	.loc 6 6360 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 6361 31
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__pic_test_coreP13stbi__context
	movl	%eax, -12(%ebp)
	.loc 6 6362 16
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 6363 11
	movl	-12(%ebp), %eax
	.loc 6 6364 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1948:
	.def	__ZL18stbi__gif_test_rawP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL18stbi__gif_test_rawP13stbi__context:
LFB1949:
	.loc 6 6399 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 6401 18
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6401 77
	cmpb	$71, %al
	jne	L2232
	.loc 6 6401 42 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6401 29 discriminator 2
	cmpb	$73, %al
	jne	L2232
	.loc 6 6401 66 discriminator 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6401 53 discriminator 4
	cmpb	$70, %al
	jne	L2232
	.loc 6 6401 90 discriminator 6
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6401 77 discriminator 6
	cmpb	$56, %al
	je	L2233
L2232:
	.loc 6 6401 77 is_stmt 0 discriminator 7
	movl	$1, %eax
	jmp	L2234
L2233:
	.loc 6 6401 77 discriminator 8
	movl	$0, %eax
L2234:
	.loc 6 6401 4 is_stmt 1 discriminator 10
	testb	%al, %al
	je	L2235
	.loc 6 6401 109 discriminator 11
	movl	$0, %eax
	jmp	L2236
L2235:
	.loc 6 6402 19
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6402 7
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 6 6403 4
	cmpl	$57, -12(%ebp)
	je	L2237
	.loc 6 6403 18 discriminator 1
	cmpl	$55, -12(%ebp)
	je	L2237
	.loc 6 6403 39 discriminator 2
	movl	$0, %eax
	jmp	L2236
L2237:
	.loc 6 6404 18
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6404 22
	cmpb	$97, %al
	setne	%al
	.loc 6 6404 4
	testb	%al, %al
	je	L2238
	.loc 6 6404 37 discriminator 1
	movl	$0, %eax
	jmp	L2236
L2238:
	.loc 6 6405 11
	movl	$1, %eax
L2236:
	.loc 6 6406 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1949:
	.def	__ZL14stbi__gif_testP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL14stbi__gif_testP13stbi__context:
LFB1950:
	.loc 6 6409 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 6410 30
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__gif_test_rawP13stbi__context
	movl	%eax, -12(%ebp)
	.loc 6 6411 16
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 6412 11
	movl	-12(%ebp), %eax
	.loc 6 6413 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1950:
	.def	__ZL26stbi__gif_parse_colortableP13stbi__contextPA4_hii;	.scl	3;	.type	32;	.endef
__ZL26stbi__gif_parse_colortableP13stbi__contextPA4_hii:
LFB1951:
	.loc 6 6416 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 6 6418 10
	movl	$0, -12(%ebp)
L2245:
	.loc 6 6418 16 discriminator 2
	movl	-12(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L2246
	.loc 6 6419 12
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	12(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 6 6419 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6419 17
	movb	%al, 2(%ebx)
	.loc 6 6420 12
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	12(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 6 6420 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6420 17
	movb	%al, 1(%ebx)
	.loc 6 6421 12
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	12(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 6 6421 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6421 17
	movb	%al, (%ebx)
	.loc 6 6422 17
	movl	20(%ebp), %eax
	cmpl	-12(%ebp), %eax
	jne	L2243
	.loc 6 6422 17 is_stmt 0 discriminator 1
	movl	$0, %ecx
	jmp	L2244
L2243:
	.loc 6 6422 17 discriminator 2
	movl	$-1, %ecx
L2244:
	.loc 6 6422 12 is_stmt 1 discriminator 4
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 6422 17 discriminator 4
	movb	%cl, 3(%eax)
	.loc 6 6418 4 discriminator 4
	addl	$1, -12(%ebp)
	jmp	L2245
L2246:
	.loc 6 6424 1
	nop
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1951:
	.section .rdata,"dr"
LC134:
	.ascii "not GIF\0"
LC135:
	.ascii "\0"
	.text
	.def	__ZL16stbi__gif_headerP13stbi__contextP9stbi__gifPii;	.scl	3;	.type	32;	.endef
__ZL16stbi__gif_headerP13stbi__contextP9stbi__gifPii:
LFB1952:
	.loc 6 6427 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 6429 18
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6429 77
	cmpb	$71, %al
	jne	L2248
	.loc 6 6429 42 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6429 29 discriminator 2
	cmpb	$73, %al
	jne	L2248
	.loc 6 6429 66 discriminator 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6429 53 discriminator 4
	cmpb	$70, %al
	jne	L2248
	.loc 6 6429 90 discriminator 6
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6429 77 discriminator 6
	cmpb	$56, %al
	je	L2249
L2248:
	.loc 6 6429 77 is_stmt 0 discriminator 7
	movl	$1, %eax
	jmp	L2250
L2249:
	.loc 6 6429 77 discriminator 8
	movl	$0, %eax
L2250:
	.loc 6 6429 4 is_stmt 1 discriminator 10
	testb	%al, %al
	je	L2251
	.loc 6 6430 14
	movl	$LC134, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L2252
L2251:
	.loc 6 6432 24
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movb	%al, -9(%ebp)
	.loc 6 6433 4
	cmpb	$55, -9(%ebp)
	je	L2253
	.loc 6 6433 23 discriminator 1
	cmpb	$57, -9(%ebp)
	je	L2253
	.loc 6 6433 52 discriminator 2
	movl	$LC134, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L2252
L2253:
	.loc 6 6434 18
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6434 22
	cmpb	$97, %al
	setne	%al
	.loc 6 6434 4
	testb	%al, %al
	je	L2254
	.loc 6 6434 52 discriminator 1
	movl	$LC134, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L2252
L2254:
	.loc 6 6436 27
	movl	$___emutls_v._ZL22stbi__g_failure_reason, (%esp)
	call	___emutls_get_address
	movl	$LC135, (%eax)
	.loc 6 6437 24
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, %edx
	.loc 6 6437 9
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 6438 24
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, %edx
	.loc 6 6438 9
	movl	12(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 6 6439 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %edx
	.loc 6 6439 13
	movl	12(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 6 6440 27
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %edx
	.loc 6 6440 15
	movl	12(%ebp), %eax
	movl	%edx, 24(%eax)
	.loc 6 6441 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %edx
	.loc 6 6441 13
	movl	12(%ebp), %eax
	movl	%edx, 28(%eax)
	.loc 6 6442 19
	movl	12(%ebp), %eax
	movl	$-1, 32(%eax)
	.loc 6 6444 11
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 6444 4
	cmpl	$16777216, %eax
	jle	L2255
	.loc 6 6444 43 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L2252
L2255:
	.loc 6 6445 11
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 6445 4
	cmpl	$16777216, %eax
	jle	L2256
	.loc 6 6445 43 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L2252
L2256:
	.loc 6 6447 4
	cmpl	$0, 16(%ebp)
	je	L2257
	.loc 6 6447 25 discriminator 1
	movl	16(%ebp), %eax
	movl	$4, (%eax)
L2257:
	.loc 6 6449 4
	cmpl	$0, 20(%ebp)
	je	L2258
	.loc 6 6449 24 discriminator 1
	movl	$1, %eax
	jmp	L2252
L2258:
	.loc 6 6451 11
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	.loc 6 6451 17
	andl	$128, %eax
	.loc 6 6451 4
	testl	%eax, %eax
	je	L2259
	.loc 6 6452 53
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	.loc 6 6452 59
	andl	$7, %eax
	.loc 6 6452 33
	movl	$2, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	.loc 6 6452 39
	movl	12(%ebp), %eax
	addl	$40, %eax
	.loc 6 6452 33
	movl	$-1, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbi__gif_parse_colortableP13stbi__contextPA4_hii
L2259:
	.loc 6 6454 11
	movl	$1, %eax
L2252:
	.loc 6 6455 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1952:
	.def	__ZL18stbi__gif_info_rawP13stbi__contextPiS1_S1_;	.scl	3;	.type	32;	.endef
__ZL18stbi__gif_info_rawP13stbi__contextPiS1_S1_:
LFB1953:
	.loc 6 6458 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 6459 44
	movl	$34904, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, -12(%ebp)
	.loc 6 6460 25
	movl	$1, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__gif_headerP13stbi__contextP9stbi__gifPii
	.loc 6 6460 8
	testl	%eax, %eax
	sete	%al
	.loc 6 6460 4
	testb	%al, %al
	je	L2261
	.loc 6 6461 7
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 6462 19
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 6463 14
	movl	$0, %eax
	jmp	L2262
L2261:
	.loc 6 6465 4
	cmpl	$0, 12(%ebp)
	je	L2263
	.loc 6 6465 19 discriminator 1
	movl	-12(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 6465 14 discriminator 1
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
L2263:
	.loc 6 6466 4
	cmpl	$0, 16(%ebp)
	je	L2264
	.loc 6 6466 19 discriminator 1
	movl	-12(%ebp), %eax
	movl	4(%eax), %edx
	.loc 6 6466 14 discriminator 1
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
L2264:
	.loc 6 6467 4
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 6468 11
	movl	$1, %eax
L2262:
	.loc 6 6469 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1953:
	.def	__ZL18stbi__out_gif_codeP9stbi__gift;	.scl	3;	.type	32;	.endef
__ZL18stbi__out_gif_codeP9stbi__gift:
LFB1954:
	.loc 6 6472 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	movl	12(%ebp), %eax
	movw	%ax, -28(%ebp)
	.loc 6 6478 23
	movzwl	-28(%ebp), %edx
	movl	8(%ebp), %eax
	addl	$520, %edx
	movzwl	8(%eax,%edx,4), %eax
	.loc 6 6478 4
	testw	%ax, %ax
	js	L2266
	.loc 6 6479 44
	movzwl	-28(%ebp), %edx
	movl	8(%ebp), %eax
	addl	$520, %edx
	movzwl	8(%eax,%edx,4), %eax
	.loc 6 6479 25
	movzwl	%ax, %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__out_gif_codeP9stbi__gift
L2266:
	.loc 6 6481 11
	movl	8(%ebp), %eax
	movl	34892(%eax), %edx
	.loc 6 6481 23
	movl	8(%ebp), %eax
	movl	34884(%eax), %eax
	.loc 6 6481 4
	cmpl	%eax, %edx
	jge	L2271
	.loc 6 6483 13
	movl	8(%ebp), %eax
	movl	34888(%eax), %edx
	.loc 6 6483 24
	movl	8(%ebp), %eax
	movl	34892(%eax), %eax
	.loc 6 6483 8
	addl	%edx, %eax
	movl	%eax, -12(%ebp)
	.loc 6 6484 12
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	.loc 6 6484 8
	movl	-12(%ebp), %eax
	.loc 6 6484 6
	addl	%edx, %eax
	movl	%eax, -16(%ebp)
	.loc 6 6485 7
	movl	8(%ebp), %eax
	movl	16(%eax), %edx
	.loc 6 6485 19
	movl	-12(%ebp), %eax
	leal	3(%eax), %ecx
	testl	%eax, %eax
	cmovs	%ecx, %eax
	sarl	$2, %eax
	.loc 6 6485 22
	addl	%edx, %eax
	.loc 6 6485 24
	movb	$1, (%eax)
	.loc 6 6487 12
	movl	8(%ebp), %eax
	movl	34856(%eax), %edx
	.loc 6 6487 39
	movzwl	-28(%ebp), %ecx
	movl	8(%ebp), %eax
	addl	$520, %ecx
	movzbl	11(%eax,%ecx,4), %eax
	movzbl	%al, %eax
	.loc 6 6487 46
	sall	$2, %eax
	.loc 6 6487 6
	addl	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 6 6488 11
	movl	-20(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	.loc 6 6488 4
	cmpb	$-128, %al
	jbe	L2269
	.loc 6 6489 12
	movl	-20(%ebp), %eax
	movzbl	2(%eax), %edx
	movl	-16(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 6490 10
	movl	-16(%ebp), %eax
	leal	1(%eax), %edx
	.loc 6 6490 12
	movl	-20(%ebp), %eax
	movzbl	1(%eax), %eax
	movb	%al, (%edx)
	.loc 6 6491 10
	movl	-16(%ebp), %eax
	leal	2(%eax), %edx
	.loc 6 6491 17
	movl	-20(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 6491 12
	movb	%al, (%edx)
	.loc 6 6492 10
	movl	-16(%ebp), %eax
	leal	3(%eax), %edx
	.loc 6 6492 12
	movl	-20(%ebp), %eax
	movzbl	3(%eax), %eax
	movb	%al, (%edx)
L2269:
	.loc 6 6494 13
	movl	8(%ebp), %eax
	movl	34888(%eax), %eax
	leal	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 34888(%eax)
	.loc 6 6496 11
	movl	8(%ebp), %eax
	movl	34888(%eax), %edx
	.loc 6 6496 23
	movl	8(%ebp), %eax
	movl	34880(%eax), %eax
	.loc 6 6496 4
	cmpl	%eax, %edx
	jl	L2265
	.loc 6 6497 21
	movl	8(%ebp), %eax
	movl	34872(%eax), %edx
	.loc 6 6497 16
	movl	8(%ebp), %eax
	movl	%edx, 34888(%eax)
	.loc 6 6498 16
	movl	8(%ebp), %eax
	movl	34892(%eax), %edx
	.loc 6 6498 22
	movl	8(%ebp), %eax
	movl	34864(%eax), %eax
	.loc 6 6498 16
	addl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 34892(%eax)
L2270:
	.loc 6 6500 17
	movl	8(%ebp), %eax
	movl	34892(%eax), %edx
	.loc 6 6500 29
	movl	8(%ebp), %eax
	movl	34884(%eax), %eax
	.loc 6 6500 35
	cmpl	%eax, %edx
	jl	L2265
	.loc 6 6500 41 discriminator 1
	movl	8(%ebp), %eax
	movl	34860(%eax), %eax
	.loc 6 6500 35 discriminator 1
	testl	%eax, %eax
	jle	L2265
	.loc 6 6501 41
	movl	8(%ebp), %eax
	movl	34896(%eax), %edx
	.loc 6 6501 29
	movl	8(%ebp), %eax
	movl	34860(%eax), %eax
	.loc 6 6501 36
	movl	%eax, %ecx
	sall	%cl, %edx
	.loc 6 6501 18
	movl	8(%ebp), %eax
	movl	%edx, 34864(%eax)
	.loc 6 6502 24
	movl	8(%ebp), %eax
	movl	34876(%eax), %edx
	.loc 6 6502 38
	movl	8(%ebp), %eax
	movl	34864(%eax), %eax
	.loc 6 6502 43
	sarl	%eax
	.loc 6 6502 32
	addl	%eax, %edx
	.loc 6 6502 19
	movl	8(%ebp), %eax
	movl	%edx, 34892(%eax)
	.loc 6 6503 15
	movl	8(%ebp), %eax
	movl	34860(%eax), %eax
	.loc 6 6503 10
	leal	-1(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 34860(%eax)
	.loc 6 6500 7
	jmp	L2270
L2271:
	.loc 6 6481 30
	nop
L2265:
	.loc 6 6506 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1954:
	.section .rdata,"dr"
LC136:
	.ascii "no clear code\0"
LC137:
	.ascii "too many codes\0"
LC138:
	.ascii "illegal code in raster\0"
	.text
	.def	__ZL24stbi__process_gif_rasterP13stbi__contextP9stbi__gif;	.scl	3;	.type	32;	.endef
__ZL24stbi__process_gif_rasterP13stbi__contextP9stbi__gif:
LFB1955:
	.loc 6 6509 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$88, %esp
	.loc 6 6516 23
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movb	%al, -45(%ebp)
	.loc 6 6517 4
	cmpb	$12, -45(%ebp)
	jbe	L2273
	.loc 6 6517 28 discriminator 1
	movl	$0, %eax
	jmp	L2274
L2273:
	.loc 6 6518 14
	movzbl	-45(%ebp), %eax
	.loc 6 6518 10
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	movl	%eax, -52(%ebp)
	.loc 6 6519 10
	movl	$1, -20(%ebp)
	.loc 6 6520 22
	movzbl	-45(%ebp), %eax
	.loc 6 6520 13
	addl	$1, %eax
	movl	%eax, -24(%ebp)
	.loc 6 6521 18
	movl	-24(%ebp), %eax
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 6 6521 13
	subl	$1, %eax
	movl	%eax, -28(%ebp)
	.loc 6 6522 9
	movl	$0, -40(%ebp)
	.loc 6 6523 15
	movl	$0, -44(%ebp)
	.loc 6 6524 19
	movl	$0, -16(%ebp)
L2276:
	.loc 6 6524 34 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-52(%ebp), %eax
	jge	L2275
	.loc 6 6525 34 discriminator 2
	movl	12(%ebp), %eax
	movl	-16(%ebp), %edx
	addl	$520, %edx
	movw	$-1, 8(%eax,%edx,4)
	.loc 6 6526 33 discriminator 2
	movl	-16(%ebp), %eax
	movl	%eax, %ecx
	movl	12(%ebp), %eax
	movl	-16(%ebp), %edx
	addl	$520, %edx
	movb	%cl, 10(%eax,%edx,4)
	.loc 6 6527 34 discriminator 2
	movl	-16(%ebp), %eax
	movl	%eax, %ecx
	movl	12(%ebp), %eax
	movl	-16(%ebp), %edx
	addl	$520, %edx
	movb	%cl, 11(%eax,%edx,4)
	.loc 6 6524 4 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L2276
L2275:
	.loc 6 6531 10
	movl	-52(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -32(%ebp)
	.loc 6 6532 12
	movl	$-1, -36(%ebp)
	.loc 6 6534 8
	movl	$0, -12(%ebp)
L2292:
LBB473:
LBB474:
LBB475:
	.loc 6 6536 7
	movl	-44(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L2277
	.loc 6 6537 10
	cmpl	$0, -12(%ebp)
	jne	L2278
	.loc 6 6538 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6538 17
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 6 6539 13
	cmpl	$0, -12(%ebp)
	jne	L2278
	.loc 6 6540 26
	movl	12(%ebp), %eax
	movl	8(%eax), %eax
	jmp	L2274
L2278:
	.loc 6 6542 10
	subl	$1, -12(%ebp)
	.loc 6 6543 42
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6543 18
	movzbl	%al, %edx
	.loc 6 6543 46
	movl	-44(%ebp), %eax
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 6 6543 15
	orl	%eax, -40(%ebp)
	.loc 6 6544 21
	addl	$8, -44(%ebp)
	jmp	L2292
L2277:
LBB476:
	.loc 6 6546 22
	movl	-40(%ebp), %eax
	andl	-28(%ebp), %eax
	movl	%eax, -56(%ebp)
	.loc 6 6547 15
	movl	-24(%ebp), %eax
	movl	%eax, %ecx
	sarl	%cl, -40(%ebp)
	.loc 6 6548 21
	movl	-24(%ebp), %eax
	subl	%eax, -44(%ebp)
	.loc 6 6550 10
	movl	-56(%ebp), %eax
	cmpl	-52(%ebp), %eax
	jne	L2280
	.loc 6 6551 31
	movzbl	-45(%ebp), %eax
	.loc 6 6551 22
	addl	$1, %eax
	movl	%eax, -24(%ebp)
	.loc 6 6552 27
	movl	-24(%ebp), %eax
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 6 6552 22
	subl	$1, %eax
	movl	%eax, -28(%ebp)
	.loc 6 6553 19
	movl	-52(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -32(%ebp)
	.loc 6 6554 21
	movl	$-1, -36(%ebp)
	.loc 6 6555 19
	movl	$0, -20(%ebp)
	jmp	L2292
L2280:
	.loc 6 6556 35
	movl	-52(%ebp), %eax
	addl	$1, %eax
	.loc 6 6556 17
	cmpl	%eax, -56(%ebp)
	jne	L2281
	.loc 6 6557 23
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
L2283:
	.loc 6 6558 37
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6558 25
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 6 6558 42
	cmpl	$0, -12(%ebp)
	setg	%al
	testb	%al, %al
	je	L2282
	.loc 6 6559 26
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 6558 13
	jmp	L2283
L2282:
	.loc 6 6560 23
	movl	12(%ebp), %eax
	movl	8(%eax), %eax
	jmp	L2274
L2281:
	.loc 6 6561 17
	movl	-56(%ebp), %eax
	cmpl	-32(%ebp), %eax
	jg	L2284
	.loc 6 6562 13
	cmpl	$0, -20(%ebp)
	je	L2285
	.loc 6 6563 23
	movl	$LC136, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2274
L2285:
	.loc 6 6566 13
	cmpl	$0, -36(%ebp)
	js	L2286
	.loc 6 6567 35
	movl	-32(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -32(%ebp)
	.loc 6 6567 18
	addl	$520, %eax
	leal	0(,%eax,4), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	addl	$8, %eax
	movl	%eax, -60(%ebp)
	.loc 6 6568 16
	cmpl	$8192, -32(%ebp)
	jle	L2287
	.loc 6 6569 26
	movl	$LC137, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2274
L2287:
	.loc 6 6572 26
	movl	-36(%ebp), %eax
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movw	%dx, (%eax)
	.loc 6 6573 45
	movl	12(%ebp), %eax
	movl	-36(%ebp), %edx
	addl	$520, %edx
	movzbl	10(%eax,%edx,4), %edx
	.loc 6 6573 25
	movl	-60(%ebp), %eax
	movb	%dl, 2(%eax)
	.loc 6 6574 44
	movl	-56(%ebp), %eax
	cmpl	-32(%ebp), %eax
	jne	L2288
	.loc 6 6574 44 is_stmt 0 discriminator 1
	movl	-60(%ebp), %eax
	movzbl	2(%eax), %eax
	jmp	L2289
L2288:
	.loc 6 6574 44 discriminator 2
	movl	12(%ebp), %eax
	movl	-56(%ebp), %edx
	addl	$520, %edx
	movzbl	10(%eax,%edx,4), %eax
L2289:
	.loc 6 6574 26 is_stmt 1 discriminator 4
	movl	-60(%ebp), %edx
	movb	%al, 3(%edx)
	jmp	L2290
L2286:
	.loc 6 6575 20
	movl	-56(%ebp), %eax
	cmpl	-32(%ebp), %eax
	jne	L2290
	.loc 6 6576 23
	movl	$LC138, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2274
L2290:
	.loc 6 6578 31
	movl	-56(%ebp), %eax
	movzwl	%ax, %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__out_gif_codeP9stbi__gift
	.loc 6 6580 24
	movl	-32(%ebp), %eax
	andl	-28(%ebp), %eax
	.loc 6 6580 13
	testl	%eax, %eax
	jne	L2291
	.loc 6 6580 41 discriminator 1
	cmpl	$4095, -32(%ebp)
	jg	L2291
	.loc 6 6581 24
	addl	$1, -24(%ebp)
	.loc 6 6582 30
	movl	-24(%ebp), %eax
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 6 6582 25
	subl	$1, %eax
	movl	%eax, -28(%ebp)
L2291:
	.loc 6 6585 21
	movl	-56(%ebp), %eax
	movl	%eax, -36(%ebp)
	jmp	L2292
L2284:
	.loc 6 6587 20
	movl	$LC138, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
L2274:
LBE476:
LBE475:
LBE474:
LBE473:
	.loc 6 6591 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1955:
	.section .rdata,"dr"
LC139:
	.ascii "bad Image Descriptor\0"
LC140:
	.ascii "missing color table\0"
LC141:
	.ascii "unknown code\0"
	.text
	.def	__ZL19stbi__gif_load_nextP13stbi__contextP9stbi__gifPiiPh;	.scl	3;	.type	32;	.endef
__ZL19stbi__gif_load_nextP13stbi__contextP9stbi__gifPiiPh:
LFB1956:
	.loc 6 6596 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$68, %esp
	.cfi_offset 3, -12
	.loc 6 6604 16
	movl	$0, -16(%ebp)
	.loc 6 6605 11
	movl	12(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 6605 4
	testl	%eax, %eax
	jne	L2294
	.loc 6 6606 28
	movl	$0, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__gif_headerP13stbi__contextP9stbi__gifPii
	.loc 6 6606 11
	testl	%eax, %eax
	sete	%al
	.loc 6 6606 7
	testb	%al, %al
	je	L2295
	.loc 6 6606 51 discriminator 1
	movl	$0, %eax
	jmp	L2296
L2295:
	.loc 6 6607 33
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	$0, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$4, (%esp)
	call	__ZL21stbi__mad3sizes_validiiii
	.loc 6 6607 11
	testl	%eax, %eax
	sete	%al
	.loc 6 6607 7
	testb	%al, %al
	je	L2297
	.loc 6 6608 17
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2296
L2297:
	.loc 6 6609 19
	movl	12(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 6609 26
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 6609 14
	imull	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 6 6610 43
	movl	-24(%ebp), %eax
	sall	$2, %eax
	.loc 6 6610 40
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, %edx
	.loc 6 6610 14
	movl	12(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 6 6611 50
	movl	-24(%ebp), %eax
	sall	$2, %eax
	.loc 6 6611 47
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, %edx
	.loc 6 6611 21
	movl	12(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 6 6612 44
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, %edx
	.loc 6 6612 18
	movl	12(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 6 6613 15
	movl	12(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 6613 7
	testl	%eax, %eax
	je	L2298
	.loc 6 6613 26 discriminator 1
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 6613 19 discriminator 1
	testl	%eax, %eax
	je	L2298
	.loc 6 6613 44 discriminator 2
	movl	12(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 6613 37 discriminator 2
	testl	%eax, %eax
	jne	L2299
L2298:
	.loc 6 6614 17
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2296
L2299:
	.loc 6 6619 30
	movl	-24(%ebp), %eax
	sall	$2, %eax
	.loc 6 6619 13
	movl	%eax, %edx
	.loc 6 6619 17
	movl	12(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 6619 13
	movl	%edx, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	_memset
	.loc 6 6620 37
	movl	-24(%ebp), %eax
	sall	$2, %eax
	.loc 6 6620 13
	movl	%eax, %edx
	.loc 6 6620 17
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 6620 13
	movl	%edx, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	_memset
	.loc 6 6621 13
	movl	-24(%ebp), %edx
	.loc 6 6621 17
	movl	12(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 6621 13
	movl	%edx, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	_memset
	.loc 6 6622 19
	movl	$1, -16(%ebp)
	jmp	L2300
L2294:
	.loc 6 6625 21
	movl	12(%ebp), %eax
	movl	36(%eax), %eax
	.loc 6 6625 36
	sarl	$2, %eax
	.loc 6 6625 15
	andl	$7, %eax
	movl	%eax, -12(%ebp)
	.loc 6 6626 19
	movl	12(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 6626 26
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 6626 14
	imull	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 6 6628 7
	cmpl	$3, -12(%ebp)
	jne	L2301
	.loc 6 6628 26 discriminator 1
	cmpl	$0, 24(%ebp)
	jne	L2301
	.loc 6 6629 18
	movl	$2, -12(%ebp)
L2301:
	.loc 6 6632 7
	cmpl	$3, -12(%ebp)
	jne	L2302
	.loc 6 6633 18
	movl	$0, -20(%ebp)
L2305:
	.loc 6 6633 26 discriminator 1
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L2303
	.loc 6 6634 20
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	.loc 6 6634 30
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 6 6634 13
	testb	%al, %al
	je	L2304
	.loc 6 6635 54
	movl	-20(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 6 6635 41
	movl	24(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 6 6635 28
	movl	12(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 6635 35
	movl	-20(%ebp), %edx
	sall	$2, %edx
	.loc 6 6635 24
	addl	%eax, %edx
	.loc 6 6635 22
	movl	(%ecx), %eax
	movl	%eax, (%edx)
L2304:
	.loc 6 6633 10 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L2305
L2302:
	.loc 6 6638 14
	cmpl	$2, -12(%ebp)
	jne	L2303
	.loc 6 6640 18
	movl	$0, -20(%ebp)
L2307:
	.loc 6 6640 26 discriminator 1
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L2303
	.loc 6 6641 20
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	.loc 6 6641 30
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 6 6641 13
	testb	%al, %al
	je	L2306
	.loc 6 6642 45
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 6642 59
	movl	-20(%ebp), %edx
	sall	$2, %edx
	.loc 6 6642 41
	leal	(%eax,%edx), %ecx
	.loc 6 6642 28
	movl	12(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 6642 35
	movl	-20(%ebp), %edx
	sall	$2, %edx
	.loc 6 6642 24
	addl	%eax, %edx
	.loc 6 6642 22
	movl	(%ecx), %eax
	movl	%eax, (%edx)
L2306:
	.loc 6 6640 10 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L2307
L2303:
	.loc 6 6653 45
	movl	12(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 6653 52
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 6653 47
	imull	%edx, %eax
	sall	$2, %eax
	.loc 6 6653 13
	movl	%eax, %ecx
	.loc 6 6653 33
	movl	12(%ebp), %eax
	movl	8(%eax), %edx
	.loc 6 6653 18
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	.loc 6 6653 13
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_memcpy
L2300:
	.loc 6 6657 33
	movl	12(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 6657 40
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 6657 35
	imull	%edx, %eax
	.loc 6 6657 10
	movl	%eax, %edx
	.loc 6 6657 15
	movl	12(%ebp), %eax
	movl	16(%eax), %eax
	.loc 6 6657 10
	movl	%edx, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	_memset
L2334:
LBB477:
LBB478:
	.loc 6 6660 27
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6660 29
	movzbl	%al, %eax
	movl	%eax, -28(%ebp)
	cmpl	$44, -28(%ebp)
	je	L2308
	cmpl	$59, -28(%ebp)
	je	L2309
	cmpl	$33, -28(%ebp)
	je	L2310
	jmp	L2335
L2308:
LBB479:
LBB480:
LBB481:
	.loc 6 6667 30
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, -32(%ebp)
	.loc 6 6668 30
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, -36(%ebp)
	.loc 6 6669 30
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, -40(%ebp)
	.loc 6 6670 30
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, -44(%ebp)
	.loc 6 6671 21
	movl	-32(%ebp), %edx
	movl	-40(%ebp), %eax
	addl	%eax, %edx
	.loc 6 6671 32
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 6671 13
	cmpl	%eax, %edx
	jg	L2312
	.loc 6 6671 43 discriminator 1
	movl	-36(%ebp), %edx
	movl	-44(%ebp), %eax
	addl	%eax, %edx
	.loc 6 6671 54 discriminator 1
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 6671 36 discriminator 1
	cmpl	%eax, %edx
	jle	L2313
L2312:
	.loc 6 6672 23
	movl	$LC139, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2296
L2313:
	.loc 6 6674 31
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 6674 33
	leal	0(,%eax,4), %edx
	.loc 6 6674 26
	movl	12(%ebp), %eax
	movl	%edx, 34896(%eax)
	.loc 6 6675 28
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	.loc 6 6675 24
	movl	12(%ebp), %eax
	movl	%edx, 34872(%eax)
	.loc 6 6676 33
	movl	12(%ebp), %eax
	movl	34896(%eax), %eax
	.loc 6 6676 28
	imull	-36(%ebp), %eax
	movl	%eax, %edx
	.loc 6 6676 24
	movl	12(%ebp), %eax
	movl	%edx, 34876(%eax)
	.loc 6 6677 29
	movl	12(%ebp), %eax
	movl	34872(%eax), %eax
	.loc 6 6677 41
	movl	-40(%ebp), %edx
	sall	$2, %edx
	.loc 6 6677 37
	addl	%eax, %edx
	.loc 6 6677 24
	movl	12(%ebp), %eax
	movl	%edx, 34880(%eax)
	.loc 6 6678 29
	movl	12(%ebp), %eax
	movl	34876(%eax), %edx
	.loc 6 6678 46
	movl	12(%ebp), %eax
	movl	34896(%eax), %eax
	.loc 6 6678 41
	imull	-44(%ebp), %eax
	.loc 6 6678 37
	addl	%eax, %edx
	.loc 6 6678 24
	movl	12(%ebp), %eax
	movl	%edx, 34884(%eax)
	.loc 6 6679 29
	movl	12(%ebp), %eax
	movl	34872(%eax), %edx
	.loc 6 6679 24
	movl	12(%ebp), %eax
	movl	%edx, 34888(%eax)
	.loc 6 6680 29
	movl	12(%ebp), %eax
	movl	34876(%eax), %edx
	.loc 6 6680 24
	movl	12(%ebp), %eax
	movl	%edx, 34892(%eax)
	.loc 6 6686 13
	cmpl	$0, -40(%ebp)
	jne	L2314
	.loc 6 6687 30
	movl	12(%ebp), %eax
	movl	34884(%eax), %edx
	.loc 6 6687 25
	movl	12(%ebp), %eax
	movl	%edx, 34892(%eax)
L2314:
	.loc 6 6689 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %edx
	.loc 6 6689 23
	movl	12(%ebp), %eax
	movl	%edx, 34868(%eax)
	.loc 6 6691 20
	movl	12(%ebp), %eax
	movl	34868(%eax), %eax
	.loc 6 6691 27
	andl	$64, %eax
	.loc 6 6691 13
	testl	%eax, %eax
	je	L2315
	.loc 6 6692 33
	movl	12(%ebp), %eax
	movl	34896(%eax), %eax
	.loc 6 6692 28
	leal	0(,%eax,8), %edx
	.loc 6 6692 24
	movl	12(%ebp), %eax
	movl	%edx, 34864(%eax)
	.loc 6 6693 25
	movl	12(%ebp), %eax
	movl	$3, 34860(%eax)
	jmp	L2316
L2315:
	.loc 6 6695 29
	movl	12(%ebp), %eax
	movl	34896(%eax), %edx
	.loc 6 6695 24
	movl	12(%ebp), %eax
	movl	%edx, 34864(%eax)
	.loc 6 6696 25
	movl	12(%ebp), %eax
	movl	$0, 34860(%eax)
L2316:
	.loc 6 6699 20
	movl	12(%ebp), %eax
	movl	34868(%eax), %eax
	.loc 6 6699 27
	andl	$128, %eax
	.loc 6 6699 13
	testl	%eax, %eax
	je	L2317
	.loc 6 6700 79
	movl	12(%ebp), %eax
	movl	36(%eax), %eax
	.loc 6 6700 86
	andl	$1, %eax
	.loc 6 6700 42
	testl	%eax, %eax
	je	L2318
	.loc 6 6700 42 is_stmt 0 discriminator 1
	movl	12(%ebp), %eax
	movl	32(%eax), %eax
	jmp	L2319
L2318:
	.loc 6 6700 42 discriminator 2
	movl	$-1, %eax
L2319:
	.loc 6 6700 63 is_stmt 1 discriminator 4
	movl	12(%ebp), %edx
	movl	34868(%edx), %edx
	.loc 6 6700 70 discriminator 4
	andl	$7, %edx
	.loc 6 6700 42 discriminator 4
	movl	$2, %ebx
	movl	%edx, %ecx
	sall	%cl, %ebx
	movl	%ebx, %ecx
	.loc 6 6700 48 discriminator 4
	movl	12(%ebp), %edx
	addl	$1064, %edx
	.loc 6 6700 42 discriminator 4
	movl	%eax, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbi__gif_parse_colortableP13stbi__contextPA4_hii
	.loc 6 6701 48 discriminator 4
	movl	12(%ebp), %eax
	leal	1064(%eax), %edx
	.loc 6 6701 31 discriminator 4
	movl	12(%ebp), %eax
	movl	%edx, 34856(%eax)
	jmp	L2320
L2317:
	.loc 6 6702 27
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	.loc 6 6702 33
	andl	$128, %eax
	.loc 6 6702 20
	testl	%eax, %eax
	je	L2321
	.loc 6 6703 48
	movl	12(%ebp), %eax
	leal	40(%eax), %edx
	.loc 6 6703 31
	movl	12(%ebp), %eax
	movl	%edx, 34856(%eax)
	jmp	L2320
L2321:
	.loc 6 6705 23
	movl	$LC140, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2296
L2320:
	.loc 6 6707 41
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbi__process_gif_rasterP13stbi__contextP9stbi__gif
	movl	%eax, -48(%ebp)
	.loc 6 6708 13
	cmpl	$0, -48(%ebp)
	jne	L2322
	.loc 6 6708 28 discriminator 1
	movl	$0, %eax
	jmp	L2296
L2322:
	.loc 6 6711 25
	movl	12(%ebp), %eax
	movl	(%eax), %edx
	.loc 6 6711 32
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 6711 20
	imull	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 6 6712 13
	cmpl	$0, -16(%ebp)
	je	L2323
	.loc 6 6712 36 discriminator 1
	movl	12(%ebp), %eax
	movl	24(%eax), %eax
	.loc 6 6712 29 discriminator 1
	testl	%eax, %eax
	jle	L2323
	.loc 6 6714 24
	movl	$0, -20(%ebp)
L2325:
	.loc 6 6714 32 discriminator 1
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L2323
	.loc 6 6715 26
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	.loc 6 6715 36
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 6 6715 19
	testb	%al, %al
	jne	L2324
	.loc 6 6716 32
	movl	12(%ebp), %eax
	movl	24(%eax), %edx
	.loc 6 6716 44
	movl	12(%ebp), %eax
	movb	$-1, 43(%eax,%edx,4)
	.loc 6 6717 58
	movl	12(%ebp), %eax
	movl	24(%eax), %eax
	.loc 6 6717 47
	addl	$8, %eax
	leal	0(,%eax,4), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	leal	8(%eax), %ecx
	.loc 6 6717 34
	movl	12(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 6717 41
	movl	-20(%ebp), %edx
	sall	$2, %edx
	.loc 6 6717 30
	addl	%eax, %edx
	.loc 6 6717 28
	movl	(%ecx), %eax
	movl	%eax, (%edx)
L2324:
	.loc 6 6714 16 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L2325
L2323:
	.loc 6 6722 20
	movl	-48(%ebp), %eax
	jmp	L2296
L2310:
LBE481:
LBB482:
	.loc 6 6728 33
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6728 35
	movzbl	%al, %eax
	movl	%eax, -52(%ebp)
	.loc 6 6729 13
	cmpl	$249, -52(%ebp)
	jne	L2333
	.loc 6 6730 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6730 20
	movzbl	%al, %eax
	movl	%eax, -56(%ebp)
	.loc 6 6731 16
	cmpl	$4, -56(%ebp)
	jne	L2327
	.loc 6 6732 41
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %edx
	.loc 6 6732 29
	movl	12(%ebp), %eax
	movl	%edx, 36(%eax)
	.loc 6 6733 48
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16leP13stbi__context
	movl	%eax, %edx
	.loc 6 6733 33
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 6 6733 28
	movl	12(%ebp), %eax
	movl	%edx, 34900(%eax)
	.loc 6 6736 26
	movl	12(%ebp), %eax
	movl	32(%eax), %eax
	.loc 6 6736 19
	testl	%eax, %eax
	js	L2328
	.loc 6 6737 32
	movl	12(%ebp), %eax
	movl	32(%eax), %edx
	.loc 6 6737 48
	movl	12(%ebp), %eax
	movb	$-1, 43(%eax,%edx,4)
L2328:
	.loc 6 6739 26
	movl	12(%ebp), %eax
	movl	36(%eax), %eax
	.loc 6 6739 33
	andl	$1, %eax
	.loc 6 6739 19
	testl	%eax, %eax
	je	L2329
	.loc 6 6740 49
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %edx
	.loc 6 6740 37
	movl	12(%ebp), %eax
	movl	%edx, 32(%eax)
	.loc 6 6741 29
	movl	12(%ebp), %eax
	movl	32(%eax), %eax
	.loc 6 6741 22
	testl	%eax, %eax
	js	L2333
	.loc 6 6742 35
	movl	12(%ebp), %eax
	movl	32(%eax), %edx
	.loc 6 6742 51
	movl	12(%ebp), %eax
	movb	$0, 43(%eax,%edx,4)
	jmp	L2333
L2329:
	.loc 6 6746 32
	movl	$1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 6747 37
	movl	12(%ebp), %eax
	movl	$-1, 32(%eax)
	jmp	L2333
L2327:
	.loc 6 6750 29
	movl	-56(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 6751 19
	jmp	L2331
L2333:
	.loc 6 6754 37
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6754 25
	movzbl	%al, %eax
	movl	%eax, -56(%ebp)
	.loc 6 6754 42
	cmpl	$0, -56(%ebp)
	setne	%al
	testb	%al, %al
	je	L2336
	.loc 6 6755 26
	movl	-56(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 6754 13
	jmp	L2333
L2309:
LBE482:
	.loc 6 6761 32
	movl	8(%ebp), %eax
	jmp	L2296
L2335:
	.loc 6 6764 20
	movl	$LC141, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2296
L2336:
LBB483:
	.loc 6 6757 13
	nop
L2331:
LBE483:
LBE480:
LBE479:
LBE478:
	.loc 6 6766 4 discriminator 3
	jmp	L2334
L2296:
LBE477:
	.loc 6 6767 1
	addl	$68, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1956:
	.def	__ZL19stbi__load_gif_mainP13stbi__contextPPiS1_S1_S1_S1_i;	.scl	3;	.type	32;	.endef
__ZL19stbi__load_gif_mainP13stbi__contextPPiS1_S1_S1_S1_i:
LFB1957:
	.loc 6 6770 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	movl	$34984, %eax
	call	___chkstk_ms
	subl	%eax, %esp
LBB484:
	.loc 6 6771 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__gif_testP13stbi__context
	.loc 6 6771 25
	testl	%eax, %eax
	setne	%al
	.loc 6 6771 4
	testb	%al, %al
	je	L2338
LBB485:
	.loc 6 6772 11
	movl	$0, -12(%ebp)
	.loc 6 6773 16
	movl	$0, -16(%ebp)
	.loc 6 6774 16
	movl	$0, -20(%ebp)
	.loc 6 6775 16
	movl	$0, -24(%ebp)
	.loc 6 6778 11
	movl	$0, -28(%ebp)
	.loc 6 6779 11
	movl	$0, -32(%ebp)
	.loc 6 6780 13
	movl	$34904, 8(%esp)
	movl	$0, 4(%esp)
	leal	-34944(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 6 6781 7
	cmpl	$0, 12(%ebp)
	je	L2350
	.loc 6 6782 18
	movl	12(%ebp), %eax
	movl	$0, (%eax)
L2350:
LBB486:
	.loc 6 6786 33
	movl	-24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-34944(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__gif_load_nextP13stbi__contextP9stbi__gifPiiPh
	movl	%eax, -16(%ebp)
	.loc 6 6787 10
	movl	-16(%ebp), %eax
	cmpl	8(%ebp), %eax
	jne	L2340
	.loc 6 6787 36 discriminator 1
	movl	$0, -16(%ebp)
L2340:
LBB487:
	.loc 6 6789 10
	cmpl	$0, -16(%ebp)
	je	L2341
LBB488:
	.loc 6 6790 20
	movl	-34944(%ebp), %edx
	.loc 6 6790 16
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 6791 20
	movl	-34940(%ebp), %edx
	.loc 6 6791 16
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 6792 13
	addl	$1, -12(%ebp)
	.loc 6 6793 24
	movl	-34944(%ebp), %edx
	.loc 6 6793 30
	movl	-34940(%ebp), %eax
	.loc 6 6793 26
	imull	%edx, %eax
	.loc 6 6793 20
	sall	$2, %eax
	movl	%eax, -36(%ebp)
LBB489:
	.loc 6 6795 13
	cmpl	$0, -20(%ebp)
	je	L2342
LBB490:
	.loc 6 6796 39
	movl	-12(%ebp), %eax
	imull	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	_realloc
	movl	%eax, -40(%ebp)
	.loc 6 6797 16
	cmpl	$0, -40(%ebp)
	jne	L2343
	.loc 6 6798 19
	movl	-34936(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 6799 19
	movl	-34928(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 6800 19
	movl	-34932(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 6801 26
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2352
L2343:
	.loc 6 6804 24
	movl	-40(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 6 6805 29
	movl	-12(%ebp), %eax
	imull	-36(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 6 6808 16
	cmpl	$0, 12(%ebp)
	je	L2346
	.loc 6 6809 36
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_realloc
	movl	%eax, %edx
	.loc 6 6809 27
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 6810 40
	movl	-12(%ebp), %eax
	sall	$2, %eax
	.loc 6 6810 31
	movl	%eax, -32(%ebp)
	jmp	L2346
L2342:
LBE490:
	.loc 6 6813 53
	movl	-12(%ebp), %eax
	imull	-36(%ebp), %eax
	.loc 6 6813 44
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, -20(%ebp)
	.loc 6 6814 25
	movl	-12(%ebp), %eax
	imull	-36(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 6 6815 16
	cmpl	$0, 12(%ebp)
	je	L2346
	.loc 6 6816 48
	movl	-12(%ebp), %eax
	sall	$2, %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__mallocj
	movl	%eax, %edx
	.loc 6 6816 27
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 6817 40
	movl	-12(%ebp), %eax
	sall	$2, %eax
	.loc 6 6817 31
	movl	%eax, -32(%ebp)
L2346:
LBE489:
	.loc 6 6820 19
	movl	-36(%ebp), %eax
	.loc 6 6820 36
	movl	-12(%ebp), %edx
	subl	$1, %edx
	.loc 6 6820 41
	imull	-36(%ebp), %edx
	movl	%edx, %ecx
	.loc 6 6820 25
	movl	-20(%ebp), %edx
	addl	%ecx, %edx
	.loc 6 6820 19
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	_memcpy
	.loc 6 6821 13
	cmpl	$1, -12(%ebp)
	jle	L2347
	.loc 6 6822 35
	movl	-36(%ebp), %eax
	addl	%eax, %eax
	.loc 6 6822 31
	negl	%eax
	movl	%eax, %edx
	.loc 6 6822 25
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -24(%ebp)
L2347:
	.loc 6 6825 13
	cmpl	$0, 12(%ebp)
	je	L2341
	.loc 6 6826 17
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 6826 37
	movl	-12(%ebp), %edx
	addl	$1073741823, %edx
	sall	$2, %edx
	addl	%eax, %edx
	.loc 6 6826 43
	movl	-44(%ebp), %eax
	.loc 6 6826 39
	movl	%eax, (%edx)
L2341:
LBE488:
LBE487:
LBE486:
	.loc 6 6829 18
	cmpl	$0, -16(%ebp)
	je	L2349
	.loc 6 6785 7
	jmp	L2350
L2349:
	.loc 6 6832 7
	movl	-34936(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 6833 7
	movl	-34928(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 6834 7
	movl	-34932(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 6837 7
	cmpl	$0, 32(%ebp)
	je	L2351
	.loc 6 6837 20 discriminator 1
	cmpl	$4, 32(%ebp)
	je	L2351
	.loc 6 6838 71
	movl	-34940(%ebp), %eax
	.loc 6 6838 36
	movl	%eax, %edx
	.loc 6 6838 66
	movl	-34944(%ebp), %eax
	.loc 6 6838 62
	imull	-12(%ebp), %eax
	.loc 6 6838 36
	movl	%edx, 16(%esp)
	movl	%eax, 12(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$4, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__convert_formatPhiijj
	movl	%eax, -20(%ebp)
L2351:
	.loc 6 6840 10
	movl	24(%ebp), %eax
	movl	-12(%ebp), %edx
	movl	%edx, (%eax)
	.loc 6 6841 14
	movl	-20(%ebp), %eax
	jmp	L2352
L2338:
LBE485:
	.loc 6 6843 14
	movl	$LC134, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
L2352:
LBE484:
	.loc 6 6845 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1957:
	.def	__ZL14stbi__gif_loadP13stbi__contextPiS1_S1_iP17stbi__result_info;	.scl	3;	.type	32;	.endef
__ZL14stbi__gif_loadP13stbi__contextPiS1_S1_iP17stbi__result_info:
LFB1958:
	.loc 6 6848 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	movl	$34952, %eax
	call	___chkstk_ms
	subl	%eax, %esp
	.loc 6 6849 13
	movl	$0, -12(%ebp)
	.loc 6 6851 10
	movl	$34904, 8(%esp)
	movl	$0, 4(%esp)
	leal	-34916(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 6 6854 27
	movl	$0, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-34916(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__gif_load_nextP13stbi__contextP9stbi__gifPiiPh
	movl	%eax, -12(%ebp)
	.loc 6 6855 4
	movl	-12(%ebp), %eax
	cmpl	8(%ebp), %eax
	jne	L2354
	.loc 6 6855 30 discriminator 1
	movl	$0, -12(%ebp)
L2354:
	.loc 6 6856 4
	cmpl	$0, -12(%ebp)
	je	L2355
	.loc 6 6857 14
	movl	-34916(%ebp), %edx
	.loc 6 6857 10
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 6858 14
	movl	-34912(%ebp), %edx
	.loc 6 6858 10
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 6862 7
	cmpl	$0, 24(%ebp)
	je	L2356
	.loc 6 6862 20 discriminator 1
	cmpl	$4, 24(%ebp)
	je	L2356
	.loc 6 6863 58
	movl	-34912(%ebp), %eax
	.loc 6 6863 34
	movl	%eax, %edx
	.loc 6 6863 53
	movl	-34916(%ebp), %eax
	.loc 6 6863 34
	movl	%edx, 16(%esp)
	movl	%eax, 12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$4, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__convert_formatPhiijj
	movl	%eax, -12(%ebp)
	jmp	L2356
L2355:
	.loc 6 6864 17
	movl	-34908(%ebp), %eax
	.loc 6 6864 11
	testl	%eax, %eax
	je	L2356
	.loc 6 6866 7
	movl	-34908(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
L2356:
	.loc 6 6870 4
	movl	-34900(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 6871 4
	movl	-34904(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 6873 11
	movl	-12(%ebp), %eax
	.loc 6 6874 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1958:
	.def	__ZL14stbi__gif_infoP13stbi__contextPiS1_S1_;	.scl	3;	.type	32;	.endef
__ZL14stbi__gif_infoP13stbi__contextPiS1_S1_:
LFB1959:
	.loc 6 6877 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 6878 29
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__gif_info_rawP13stbi__contextPiS1_S1_
	.loc 6 6879 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1959:
	.def	__ZL19stbi__hdr_test_coreP13stbi__contextPKc;	.scl	3;	.type	32;	.endef
__ZL19stbi__hdr_test_coreP13stbi__contextPKc:
LFB1960:
	.loc 6 6887 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 6889 10
	movl	$0, -12(%ebp)
L2364:
	.loc 6 6889 25 discriminator 1
	movl	-12(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	je	L2361
	.loc 6 6890 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movzbl	%al, %edx
	.loc 6 6890 39
	movl	-12(%ebp), %ecx
	movl	12(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	movsbl	%al, %eax
	.loc 6 6890 25
	cmpl	%eax, %edx
	setne	%al
	.loc 6 6890 7
	testb	%al, %al
	je	L2362
	.loc 6 6891 18
	movl	$0, %eax
	jmp	L2363
L2362:
	.loc 6 6889 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L2364
L2361:
	.loc 6 6892 16
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 6893 11
	movl	$1, %eax
L2363:
	.loc 6 6894 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1960:
	.section .rdata,"dr"
LC142:
	.ascii "#?RADIANCE\12\0"
LC143:
	.ascii "#?RGBE\12\0"
	.text
	.def	__ZL14stbi__hdr_testP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL14stbi__hdr_testP13stbi__context:
LFB1961:
	.loc 6 6897 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 6898 31
	movl	$LC142, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__hdr_test_coreP13stbi__contextPKc
	movl	%eax, -12(%ebp)
	.loc 6 6899 16
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 6900 4
	cmpl	$0, -12(%ebp)
	jne	L2366
	.loc 6 6901 31
	movl	$LC143, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbi__hdr_test_coreP13stbi__contextPKc
	movl	%eax, -12(%ebp)
	.loc 6 6902 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
L2366:
	.loc 6 6904 11
	movl	-12(%ebp), %eax
	.loc 6 6905 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1961:
	.def	__ZL18stbi__hdr_gettokenP13stbi__contextPc;	.scl	3;	.type	32;	.endef
__ZL18stbi__hdr_gettokenP13stbi__contextPc:
LFB1962:
	.loc 6 6909 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 6910 8
	movl	$0, -12(%ebp)
	.loc 6 6911 9
	movb	$0, -13(%ebp)
	.loc 6 6913 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6913 6
	movb	%al, -13(%ebp)
L2377:
	.loc 6 6915 24
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 6915 28
	testl	%eax, %eax
	jne	L2369
	.loc 6 6915 28 is_stmt 0 discriminator 1
	cmpb	$10, -13(%ebp)
	je	L2369
	.loc 6 6915 28 discriminator 3
	movl	$1, %eax
	jmp	L2370
L2369:
	.loc 6 6915 28 discriminator 4
	movl	$0, %eax
L2370:
	.loc 6 6915 28 discriminator 6
	testb	%al, %al
	je	L2371
	.loc 6 6916 17 is_stmt 1
	movl	-12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -12(%ebp)
	movl	%eax, %edx
	.loc 6 6916 19
	movl	12(%ebp), %eax
	addl	%eax, %edx
	.loc 6 6916 21
	movzbl	-13(%ebp), %eax
	movb	%al, (%edx)
	.loc 6 6917 7
	cmpl	$1023, -12(%ebp)
	jne	L2372
L2376:
	.loc 6 6919 30
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 6919 34
	testl	%eax, %eax
	jne	L2373
	.loc 6 6919 47 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6919 34 discriminator 1
	cmpb	$10, %al
	je	L2373
	.loc 6 6919 34 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L2374
L2373:
	.loc 6 6919 34 discriminator 4
	movl	$0, %eax
L2374:
	.loc 6 6919 34 discriminator 6
	testb	%al, %al
	je	L2379
	.loc 6 6919 10 is_stmt 1
	jmp	L2376
L2372:
	.loc 6 6923 28
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 6923 9
	movb	%al, -13(%ebp)
	.loc 6 6915 4
	jmp	L2377
L2379:
	.loc 6 6921 10
	nop
L2371:
	.loc 6 6926 14
	movl	-12(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 6 6926 16
	movb	$0, (%eax)
	.loc 6 6927 11
	movl	12(%ebp), %eax
	.loc 6 6928 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1962:
	.def	__ZL17stbi__hdr_convertPfPhi;	.scl	3;	.type	32;	.endef
__ZL17stbi__hdr_convertPfPhi:
LFB1963:
	.loc 6 6931 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
LBB491:
	.loc 6 6932 16
	movl	12(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	.loc 6 6932 4
	testb	%al, %al
	je	L2381
LBB492:
	.loc 6 6935 39
	movl	12(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 6935 25
	subl	$136, %eax
	movl	%eax, 4(%esp)
	fld1
	fstps	(%esp)
	call	__ZSt5ldexpfi
	fstps	-12(%ebp)
	.loc 6 6936 7
	cmpl	$2, 16(%ebp)
	jg	L2382
	.loc 6 6937 30
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 6 6937 41
	movl	12(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 6937 32
	addl	%eax, %edx
	.loc 6 6937 52
	movl	12(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 6937 43
	addl	%edx, %eax
	.loc 6 6937 55
	movl	%eax, -28(%ebp)
	fildl	-28(%ebp)
	fmuls	-12(%ebp)
	.loc 6 6937 60
	flds	LC144
	fdivrp	%st, %st(1)
	.loc 6 6937 20
	movl	8(%ebp), %eax
	fstps	(%eax)
	jmp	L2383
L2382:
	.loc 6 6939 29
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 6939 31
	movl	%eax, -28(%ebp)
	fildl	-28(%ebp)
	fmuls	-12(%ebp)
	.loc 6 6939 20
	movl	8(%ebp), %eax
	fstps	(%eax)
	.loc 6 6940 29
	movl	12(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 6940 31
	movl	%eax, -28(%ebp)
	fildl	-28(%ebp)
	.loc 6 6940 18
	movl	8(%ebp), %eax
	addl	$4, %eax
	.loc 6 6940 31
	fmuls	-12(%ebp)
	.loc 6 6940 20
	fstps	(%eax)
	.loc 6 6941 29
	movl	12(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 6 6941 31
	movl	%eax, -28(%ebp)
	fildl	-28(%ebp)
	.loc 6 6941 18
	movl	8(%ebp), %eax
	addl	$8, %eax
	.loc 6 6941 31
	fmuls	-12(%ebp)
	.loc 6 6941 20
	fstps	(%eax)
L2383:
	.loc 6 6943 7
	cmpl	$2, 16(%ebp)
	jne	L2384
	.loc 6 6943 34 discriminator 1
	movl	8(%ebp), %eax
	addl	$4, %eax
	.loc 6 6943 36 discriminator 1
	fld1
	fstps	(%eax)
L2384:
	.loc 6 6944 7
	cmpl	$4, 16(%ebp)
	jne	L2391
	.loc 6 6944 34 discriminator 1
	movl	8(%ebp), %eax
	addl	$12, %eax
	.loc 6 6944 36 discriminator 1
	fld1
	fstps	(%eax)
LBE492:
LBE491:
	.loc 6 6955 1 discriminator 1
	jmp	L2391
L2381:
	cmpl	$2, 16(%ebp)
	je	L2387
	cmpl	$2, 16(%ebp)
	jg	L2388
	cmpl	$1, 16(%ebp)
	je	L2389
	.loc 6 6955 1 is_stmt 0
	jmp	L2391
L2388:
	cmpl	$3, 16(%ebp)
	je	L2390
	cmpl	$4, 16(%ebp)
	jne	L2391
LBB493:
	.loc 6 6947 26 is_stmt 1
	movl	8(%ebp), %eax
	addl	$12, %eax
	.loc 6 6947 28
	fld1
	fstps	(%eax)
L2390:
	.loc 6 6948 50
	movl	8(%ebp), %eax
	leal	8(%eax), %edx
	.loc 6 6948 52
	fldz
	fstps	(%edx)
	.loc 6 6948 38
	movl	8(%ebp), %eax
	addl	$4, %eax
	.loc 6 6948 50
	flds	(%edx)
	.loc 6 6948 40
	fstps	(%eax)
	.loc 6 6948 38
	flds	(%eax)
	.loc 6 6948 28
	movl	8(%ebp), %eax
	fstps	(%eax)
	.loc 6 6949 18
	jmp	L2386
L2387:
	.loc 6 6950 26
	movl	8(%ebp), %eax
	addl	$4, %eax
	.loc 6 6950 28
	fld1
	fstps	(%eax)
L2389:
	.loc 6 6951 28
	movl	8(%ebp), %eax
	fldz
	fstps	(%eax)
	.loc 6 6952 18
	nop
L2386:
L2391:
LBE493:
	.loc 6 6955 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1963:
	.section .rdata,"dr"
LC145:
	.ascii "#?RADIANCE\0"
LC146:
	.ascii "#?RGBE\0"
LC147:
	.ascii "not HDR\0"
LC148:
	.ascii "FORMAT=32-bit_rle_rgbe\0"
LC149:
	.ascii "unsupported format\0"
LC150:
	.ascii "-Y \0"
LC151:
	.ascii "unsupported data layout\0"
LC152:
	.ascii "+X \0"
	.align 4
LC153:
	.ascii "invalid decoded scanline length\0"
	.text
	.def	__ZL14stbi__hdr_loadP13stbi__contextPiS1_S1_iP17stbi__result_info;	.scl	3;	.type	32;	.endef
__ZL14stbi__hdr_loadP13stbi__contextPiS1_S1_iP17stbi__result_info:
LFB1964:
	.loc 6 6958 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$1140, %esp
	.cfi_offset 3, -12
	.loc 6 6961 8
	movl	$0, -12(%ebp)
	.loc 6 6972 36
	leal	-1090(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__hdr_gettokenP13stbi__contextPc
	movl	%eax, -36(%ebp)
	.loc 6 6973 14
	movl	$LC145, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	_strcmp
	.loc 6 6973 4
	testl	%eax, %eax
	je	L2398
	.loc 6 6973 56 discriminator 1
	movl	$LC146, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	_strcmp
	.loc 6 6973 47 discriminator 1
	testl	%eax, %eax
	je	L2398
	.loc 6 6974 14
	movl	$LC147, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2436
L2398:
	.loc 6 6978 33
	leal	-1090(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__hdr_gettokenP13stbi__contextPc
	.loc 6 6978 13
	movl	%eax, -1096(%ebp)
	.loc 6 6979 18
	movl	-1096(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 6979 7
	testb	%al, %al
	je	L2438
	.loc 6 6980 17
	movl	-1096(%ebp), %eax
	movl	$LC148, 4(%esp)
	movl	%eax, (%esp)
	call	_strcmp
	.loc 6 6980 7
	testl	%eax, %eax
	jne	L2398
	.loc 6 6980 63 discriminator 1
	movl	$1, -12(%ebp)
	.loc 6 6978 13 discriminator 1
	jmp	L2398
L2438:
	.loc 6 6979 26
	nop
	.loc 6 6983 4
	cmpl	$0, -12(%ebp)
	jne	L2399
	.loc 6 6983 26 discriminator 1
	movl	$LC149, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2436
L2399:
	.loc 6 6987 30
	leal	-1090(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__hdr_gettokenP13stbi__contextPc
	.loc 6 6987 10
	movl	%eax, -1096(%ebp)
	.loc 6 6988 15
	movl	-1096(%ebp), %eax
	movl	$3, 8(%esp)
	movl	$LC150, 4(%esp)
	movl	%eax, (%esp)
	call	_strncmp
	.loc 6 6988 4
	testl	%eax, %eax
	je	L2400
	.loc 6 6988 42 discriminator 1
	movl	$LC151, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2436
L2400:
	.loc 6 6989 10
	movl	-1096(%ebp), %eax
	addl	$3, %eax
	movl	%eax, -1096(%ebp)
	.loc 6 6990 25
	movl	-1096(%ebp), %eax
	movl	$10, 8(%esp)
	leal	-1096(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_strtol
	movl	%eax, -40(%ebp)
L2402:
	.loc 6 6991 11 discriminator 2
	movl	-1096(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 6991 18 discriminator 2
	cmpb	$32, %al
	jne	L2401
	.loc 6 6991 26 discriminator 1
	movl	-1096(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -1096(%ebp)
	.loc 6 6991 4 discriminator 1
	jmp	L2402
L2401:
	.loc 6 6992 15
	movl	-1096(%ebp), %eax
	movl	$3, 8(%esp)
	movl	$LC152, 4(%esp)
	movl	%eax, (%esp)
	call	_strncmp
	.loc 6 6992 4
	testl	%eax, %eax
	je	L2403
	.loc 6 6992 42 discriminator 1
	movl	$LC151, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2436
L2403:
	.loc 6 6993 10
	movl	-1096(%ebp), %eax
	addl	$3, %eax
	movl	%eax, -1096(%ebp)
	.loc 6 6994 24
	movl	-1096(%ebp), %eax
	movl	$10, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	_strtol
	movl	%eax, -44(%ebp)
	.loc 6 6996 4
	cmpl	$16777216, -40(%ebp)
	jle	L2404
	.loc 6 6996 45 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2436
L2404:
	.loc 6 6997 4
	cmpl	$16777216, -44(%ebp)
	jle	L2405
	.loc 6 6997 44 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2436
L2405:
	.loc 6 6999 7
	movl	12(%ebp), %eax
	movl	-44(%ebp), %edx
	movl	%edx, (%eax)
	.loc 6 7000 7
	movl	16(%ebp), %eax
	movl	-40(%ebp), %edx
	movl	%edx, (%eax)
	.loc 6 7002 4
	cmpl	$0, 20(%ebp)
	je	L2406
	.loc 6 7002 20 discriminator 1
	movl	20(%ebp), %eax
	movl	$3, (%eax)
L2406:
	.loc 6 7003 4
	cmpl	$0, 24(%ebp)
	jne	L2407
	.loc 6 7003 32 discriminator 1
	movl	$3, 24(%ebp)
L2407:
	.loc 6 7005 30
	movl	$0, 16(%esp)
	movl	$4, 12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__mad4sizes_validiiiii
	.loc 6 7005 8
	testl	%eax, %eax
	sete	%al
	.loc 6 7005 4
	testb	%al, %al
	je	L2408
	.loc 6 7006 14
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2436
L2408:
	.loc 6 7009 42
	movl	$0, 16(%esp)
	movl	$4, 12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad4iiiii
	movl	%eax, -48(%ebp)
	.loc 6 7010 4
	cmpl	$0, -48(%ebp)
	jne	L2409
	.loc 6 7011 14
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2436
L2409:
LBB494:
	.loc 6 7015 4
	cmpl	$7, -44(%ebp)
	jle	L2410
	.loc 6 7015 19 discriminator 1
	cmpl	$32767, -44(%ebp)
	jle	L2411
L2410:
LBB495:
LBB496:
	.loc 6 7017 13
	movl	$0, -24(%ebp)
L2416:
	.loc 6 7017 19 discriminator 1
	movl	-24(%ebp), %eax
	cmpl	-40(%ebp), %eax
	jge	L2439
LBB497:
LBB498:
	.loc 6 7018 16
	movl	$0, -20(%ebp)
L2415:
	.loc 6 7018 22 discriminator 1
	movl	-20(%ebp), %eax
	cmpl	-44(%ebp), %eax
	jge	L2413
LBB499:
	.loc 6 7020 12
	nop
L2414:
	.loc 6 7021 23
	movl	$4, 8(%esp)
	leal	-1100(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__getnP13stbi__contextPhi
	.loc 6 7022 44
	movl	-24(%ebp), %eax
	imull	-44(%ebp), %eax
	.loc 6 7022 52
	imull	24(%ebp), %eax
	.loc 6 7022 63
	movl	%eax, %edx
	.loc 6 7022 67
	movl	-20(%ebp), %eax
	imull	24(%ebp), %eax
	.loc 6 7022 63
	addl	%edx, %eax
	leal	0(,%eax,4), %edx
	.loc 6 7022 30
	movl	-48(%ebp), %eax
	addl	%eax, %edx
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-1100(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL17stbi__hdr_convertPfPhi
LBE499:
	.loc 6 7018 10
	addl	$1, -20(%ebp)
	jmp	L2415
L2413:
LBE498:
LBE497:
	.loc 6 7017 7 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L2416
L2411:
LBE496:
LBE495:
LBB500:
	.loc 6 7027 16
	movl	$0, -16(%ebp)
LBB501:
	.loc 6 7029 14
	movl	$0, -24(%ebp)
L2435:
	.loc 6 7029 21 discriminator 1
	movl	-24(%ebp), %eax
	cmpl	-40(%ebp), %eax
	jge	L2418
LBB502:
	.loc 6 7030 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7030 13
	movzbl	%al, %eax
	movl	%eax, -52(%ebp)
	.loc 6 7031 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7031 13
	movzbl	%al, %eax
	movl	%eax, -56(%ebp)
	.loc 6 7032 26
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7032 14
	movzbl	%al, %eax
	movl	%eax, -60(%ebp)
LBB503:
	.loc 6 7033 10
	cmpl	$2, -52(%ebp)
	jne	L2419
	.loc 6 7033 22 discriminator 1
	cmpl	$2, -56(%ebp)
	jne	L2419
	.loc 6 7033 41 discriminator 2
	movl	-60(%ebp), %eax
	andl	$128, %eax
	.loc 6 7033 33 discriminator 2
	testl	%eax, %eax
	je	L2420
L2419:
LBB504:
	.loc 6 7037 21
	movl	-52(%ebp), %eax
	movb	%al, -1104(%ebp)
	.loc 6 7038 21
	movl	-56(%ebp), %eax
	movb	%al, -1103(%ebp)
	.loc 6 7039 21
	movl	-60(%ebp), %eax
	movb	%al, -1102(%ebp)
	.loc 6 7040 43
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7040 21
	movb	%al, -1101(%ebp)
	.loc 6 7041 30
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-1104(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbi__hdr_convertPfPhi
	.loc 6 7042 15
	movl	$1, -20(%ebp)
	.loc 6 7043 15
	movl	$0, -24(%ebp)
	.loc 6 7044 13
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	jmp	L2414
L2420:
LBE504:
LBE503:
	.loc 6 7047 14
	sall	$8, -60(%ebp)
	.loc 6 7048 27
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7048 14
	movzbl	%al, %eax
	orl	%eax, -60(%ebp)
	.loc 6 7049 10
	movl	-60(%ebp), %eax
	cmpl	-44(%ebp), %eax
	je	L2421
	.loc 6 7049 30 discriminator 1
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 7049 51 discriminator 1
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 7049 79 discriminator 1
	movl	$LC153, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2436
L2421:
	.loc 6 7050 10
	cmpl	$0, -16(%ebp)
	jne	L2422
	.loc 6 7051 53
	movl	$0, 8(%esp)
	movl	$4, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad2iii
	movl	%eax, -16(%ebp)
	.loc 6 7052 13
	cmpl	$0, -16(%ebp)
	jne	L2422
	.loc 6 7053 16
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 7054 23
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2436
L2422:
LBB505:
	.loc 6 7058 17
	movl	$0, -28(%ebp)
L2432:
	.loc 6 7058 24 discriminator 1
	cmpl	$3, -28(%ebp)
	jg	L2423
LBB506:
	.loc 6 7060 15
	movl	$0, -20(%ebp)
L2431:
	.loc 6 7061 27
	movl	-44(%ebp), %eax
	subl	-20(%ebp), %eax
	movl	%eax, -64(%ebp)
	.loc 6 7061 40
	cmpl	$0, -64(%ebp)
	setg	%al
	testb	%al, %al
	je	L2424
	.loc 6 7062 34
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movb	%al, -65(%ebp)
	.loc 6 7063 16
	cmpb	$-128, -65(%ebp)
	jbe	L2425
	.loc 6 7065 37
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movb	%al, -66(%ebp)
	.loc 6 7066 25
	addb	$-128, -65(%ebp)
	.loc 6 7067 29
	movzbl	-65(%ebp), %eax
	.loc 6 7067 19
	cmpl	%eax, -64(%ebp)
	jge	L2426
	.loc 6 7067 40 discriminator 1
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 7067 61 discriminator 1
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 7067 89 discriminator 1
	movl	$LC129, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2436
L2426:
	.loc 6 7068 26
	movl	$0, -32(%ebp)
L2428:
	.loc 6 7068 33 discriminator 3
	movzbl	-65(%ebp), %eax
	cmpl	%eax, -32(%ebp)
	jge	L2431
	.loc 6 7069 32 discriminator 2
	movl	-20(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -20(%ebp)
	.loc 6 7069 35 discriminator 2
	leal	0(,%eax,4), %edx
	.loc 6 7069 39 discriminator 2
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 6 7069 42 discriminator 2
	movl	-16(%ebp), %eax
	addl	%eax, %edx
	.loc 6 7069 44 discriminator 2
	movzbl	-66(%ebp), %eax
	movb	%al, (%edx)
	.loc 6 7068 19 discriminator 2
	addl	$1, -32(%ebp)
	jmp	L2428
L2425:
	.loc 6 7072 29
	movzbl	-65(%ebp), %eax
	.loc 6 7072 19
	cmpl	%eax, -64(%ebp)
	jge	L2429
	.loc 6 7072 40 discriminator 1
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 7072 61 discriminator 1
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 6 7072 89 discriminator 1
	movl	$LC129, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2436
L2429:
	.loc 6 7073 26
	movl	$0, -32(%ebp)
L2430:
	.loc 6 7073 33 discriminator 2
	movzbl	-65(%ebp), %eax
	cmpl	%eax, -32(%ebp)
	jge	L2431
	.loc 6 7074 32
	movl	-20(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -20(%ebp)
	.loc 6 7074 35
	leal	0(,%eax,4), %edx
	.loc 6 7074 39
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 6 7074 42
	movl	-16(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 6 7074 56
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7074 44
	movb	%al, (%ebx)
	.loc 6 7073 19
	addl	$1, -32(%ebp)
	jmp	L2430
L2424:
LBE506:
	.loc 6 7058 10 discriminator 2
	addl	$1, -28(%ebp)
	jmp	L2432
L2423:
LBE505:
	.loc 6 7078 16
	movl	$0, -20(%ebp)
L2434:
	.loc 6 7078 22 discriminator 3
	movl	-20(%ebp), %eax
	cmpl	-44(%ebp), %eax
	jge	L2433
	.loc 6 7079 76 discriminator 2
	movl	-20(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 6 7079 30 discriminator 2
	movl	-16(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 6 7079 42 discriminator 2
	movl	-24(%ebp), %eax
	imull	-44(%ebp), %eax
	movl	%eax, %edx
	.loc 6 7079 49 discriminator 2
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 6 7079 53 discriminator 2
	imull	24(%ebp), %eax
	.loc 6 7079 39 discriminator 2
	leal	0(,%eax,4), %edx
	.loc 6 7079 30 discriminator 2
	movl	-48(%ebp), %eax
	addl	%eax, %edx
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL17stbi__hdr_convertPfPhi
	.loc 6 7078 10 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L2434
L2433:
LBE502:
	.loc 6 7029 7 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L2435
L2418:
LBE501:
	.loc 6 7081 7
	cmpl	$0, -16(%ebp)
	je	L2417
	.loc 6 7082 10
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	jmp	L2417
L2439:
LBE500:
	.loc 6 7024 7
	nop
L2417:
LBE494:
	.loc 6 7085 11
	movl	-48(%ebp), %eax
L2436:
	.loc 6 7086 1 discriminator 2
	addl	$1140, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1964:
	.def	__ZL14stbi__hdr_infoP13stbi__contextPiS1_S1_;	.scl	3;	.type	32;	.endef
__ZL14stbi__hdr_infoP13stbi__contextPiS1_S1_:
LFB1965:
	.loc 6 7089 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$1064, %esp
	.loc 6 7092 8
	movl	$0, -12(%ebp)
	.loc 6 7095 4
	cmpl	$0, 12(%ebp)
	jne	L2441
	.loc 6 7095 14 discriminator 1
	leal	-1044(%ebp), %eax
	movl	%eax, 12(%ebp)
L2441:
	.loc 6 7096 4
	cmpl	$0, 16(%ebp)
	jne	L2442
	.loc 6 7096 14 discriminator 1
	leal	-1044(%ebp), %eax
	movl	%eax, 16(%ebp)
L2442:
	.loc 6 7097 4
	cmpl	$0, 20(%ebp)
	jne	L2443
	.loc 6 7097 20 discriminator 1
	leal	-1044(%ebp), %eax
	movl	%eax, 20(%ebp)
L2443:
	.loc 6 7099 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__hdr_testP13stbi__context
	.loc 6 7099 26
	testl	%eax, %eax
	sete	%al
	.loc 6 7099 4
	testb	%al, %al
	je	L2444
	.loc 6 7100 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7101 15
	movl	$0, %eax
	jmp	L2454
L2444:
	.loc 6 7105 33
	leal	-1036(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__hdr_gettokenP13stbi__contextPc
	.loc 6 7105 13
	movl	%eax, -1040(%ebp)
	.loc 6 7106 18
	movl	-1040(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 7106 7
	testb	%al, %al
	je	L2456
	.loc 6 7107 17
	movl	-1040(%ebp), %eax
	movl	$LC148, 4(%esp)
	movl	%eax, (%esp)
	call	_strcmp
	.loc 6 7107 7
	testl	%eax, %eax
	jne	L2444
	.loc 6 7107 63 discriminator 1
	movl	$1, -12(%ebp)
	.loc 6 7105 13 discriminator 1
	jmp	L2444
L2456:
	.loc 6 7106 26
	nop
	.loc 6 7110 4
	cmpl	$0, -12(%ebp)
	jne	L2449
	.loc 6 7111 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7112 15
	movl	$0, %eax
	jmp	L2454
L2449:
	.loc 6 7114 30
	leal	-1036(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbi__hdr_gettokenP13stbi__contextPc
	.loc 6 7114 10
	movl	%eax, -1040(%ebp)
	.loc 6 7115 15
	movl	-1040(%ebp), %eax
	movl	$3, 8(%esp)
	movl	$LC150, 4(%esp)
	movl	%eax, (%esp)
	call	_strncmp
	.loc 6 7115 4
	testl	%eax, %eax
	je	L2450
	.loc 6 7116 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7117 15
	movl	$0, %eax
	jmp	L2454
L2450:
	.loc 6 7119 10
	movl	-1040(%ebp), %eax
	addl	$3, %eax
	movl	%eax, -1040(%ebp)
	.loc 6 7120 21
	movl	-1040(%ebp), %eax
	movl	$10, 8(%esp)
	leal	-1040(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_strtol
	movl	%eax, %edx
	.loc 6 7120 7
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
L2452:
	.loc 6 7121 11 discriminator 2
	movl	-1040(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 7121 18 discriminator 2
	cmpb	$32, %al
	jne	L2451
	.loc 6 7121 26 discriminator 1
	movl	-1040(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -1040(%ebp)
	.loc 6 7121 4 discriminator 1
	jmp	L2452
L2451:
	.loc 6 7122 15
	movl	-1040(%ebp), %eax
	movl	$3, 8(%esp)
	movl	$LC152, 4(%esp)
	movl	%eax, (%esp)
	call	_strncmp
	.loc 6 7122 4
	testl	%eax, %eax
	je	L2453
	.loc 6 7123 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7124 15
	movl	$0, %eax
	jmp	L2454
L2453:
	.loc 6 7126 10
	movl	-1040(%ebp), %eax
	addl	$3, %eax
	movl	%eax, -1040(%ebp)
	.loc 6 7127 21
	movl	-1040(%ebp), %eax
	movl	$10, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	_strtol
	movl	%eax, %edx
	.loc 6 7127 7
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 7128 10
	movl	20(%ebp), %eax
	movl	$3, (%eax)
	.loc 6 7129 11
	movl	$1, %eax
L2454:
	.loc 6 7130 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1965:
	.def	__ZL14stbi__bmp_infoP13stbi__contextPiS1_S1_;	.scl	3;	.type	32;	.endef
__ZL14stbi__bmp_infoP13stbi__contextPiS1_S1_:
LFB1966:
	.loc 6 7135 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 6 7139 15
	movl	$255, -20(%ebp)
	.loc 6 7140 30
	leal	-48(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbi__bmp_parse_headerP13stbi__contextP14stbi__bmp_data
	movl	%eax, -12(%ebp)
	.loc 6 7141 16
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7142 4
	cmpl	$0, -12(%ebp)
	jne	L2458
	.loc 6 7143 14
	movl	$0, %eax
	jmp	L2467
L2458:
	.loc 6 7144 4
	cmpl	$0, 12(%ebp)
	je	L2460
	.loc 6 7144 19 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	.loc 6 7144 14 discriminator 1
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
L2460:
	.loc 6 7145 4
	cmpl	$0, 16(%ebp)
	je	L2461
	.loc 6 7145 19 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, %edx
	.loc 6 7145 14 discriminator 1
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
L2461:
	.loc 6 7146 4
	cmpl	$0, 20(%ebp)
	je	L2462
	.loc 6 7147 16
	movl	-48(%ebp), %eax
	.loc 6 7147 7
	cmpl	$24, %eax
	jne	L2463
	.loc 6 7147 34 discriminator 1
	movl	-24(%ebp), %eax
	.loc 6 7147 26 discriminator 1
	cmpl	$-16777216, %eax
	jne	L2463
	.loc 6 7148 16
	movl	20(%ebp), %eax
	movl	$3, (%eax)
	jmp	L2462
L2463:
	.loc 6 7150 23
	movl	-24(%ebp), %eax
	.loc 6 7150 26
	testl	%eax, %eax
	je	L2465
	.loc 6 7150 26 is_stmt 0 discriminator 1
	movl	$4, %edx
	jmp	L2466
L2465:
	.loc 6 7150 26 discriminator 2
	movl	$3, %edx
L2466:
	.loc 6 7150 16 is_stmt 1 discriminator 4
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
L2462:
	.loc 6 7152 11
	movl	$1, %eax
L2467:
	.loc 6 7153 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1966:
	.def	__ZL14stbi__psd_infoP13stbi__contextPiS1_S1_;	.scl	3;	.type	32;	.endef
__ZL14stbi__psd_infoP13stbi__contextPiS1_S1_:
LFB1967:
	.loc 6 7158 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 7160 4
	cmpl	$0, 12(%ebp)
	jne	L2469
	.loc 6 7160 14 discriminator 1
	leal	-20(%ebp), %eax
	movl	%eax, 12(%ebp)
L2469:
	.loc 6 7161 4
	cmpl	$0, 16(%ebp)
	jne	L2470
	.loc 6 7161 14 discriminator 1
	leal	-20(%ebp), %eax
	movl	%eax, 16(%ebp)
L2470:
	.loc 6 7162 4
	cmpl	$0, 20(%ebp)
	jne	L2471
	.loc 6 7162 20 discriminator 1
	leal	-20(%ebp), %eax
	movl	%eax, 20(%ebp)
L2471:
	.loc 6 7163 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 7163 25
	cmpl	$943870035, %eax
	setne	%al
	.loc 6 7163 4
	testb	%al, %al
	je	L2472
	.loc 6 7164 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7165 15
	movl	$0, %eax
	jmp	L2479
L2472:
	.loc 6 7167 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 7167 25
	cmpl	$1, %eax
	setne	%al
	.loc 6 7167 4
	testb	%al, %al
	je	L2474
	.loc 6 7168 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7169 15
	movl	$0, %eax
	jmp	L2479
L2474:
	.loc 6 7171 14
	movl	$6, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 7172 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -12(%ebp)
	.loc 6 7173 4
	cmpl	$0, -12(%ebp)
	js	L2475
	.loc 6 7173 25 discriminator 1
	cmpl	$16, -12(%ebp)
	jle	L2476
L2475:
	.loc 6 7174 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7175 15
	movl	$0, %eax
	jmp	L2479
L2476:
	.loc 6 7177 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	movl	%eax, %edx
	.loc 6 7177 7
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 7178 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	movl	%eax, %edx
	.loc 6 7178 7
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 7179 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -16(%ebp)
	.loc 6 7180 4
	cmpl	$8, -16(%ebp)
	je	L2477
	.loc 6 7180 19 discriminator 1
	cmpl	$16, -16(%ebp)
	je	L2477
	.loc 6 7181 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7182 15
	movl	$0, %eax
	jmp	L2479
L2477:
	.loc 6 7184 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 7184 25
	cmpl	$3, %eax
	setne	%al
	.loc 6 7184 4
	testb	%al, %al
	je	L2478
	.loc 6 7185 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7186 15
	movl	$0, %eax
	jmp	L2479
L2478:
	.loc 6 7188 10
	movl	20(%ebp), %eax
	movl	$4, (%eax)
	.loc 6 7189 11
	movl	$1, %eax
L2479:
	.loc 6 7190 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1967:
	.def	__ZL14stbi__psd_is16P13stbi__context;	.scl	3;	.type	32;	.endef
__ZL14stbi__psd_is16P13stbi__context:
LFB1968:
	.loc 6 7193 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 7195 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 7195 25
	cmpl	$943870035, %eax
	setne	%al
	.loc 6 7195 4
	testb	%al, %al
	je	L2481
	.loc 6 7196 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7197 15
	movl	$0, %eax
	jmp	L2482
L2481:
	.loc 6 7199 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	.loc 6 7199 25
	cmpl	$1, %eax
	setne	%al
	.loc 6 7199 4
	testb	%al, %al
	je	L2483
	.loc 6 7200 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7201 15
	movl	$0, %eax
	jmp	L2482
L2483:
	.loc 6 7203 14
	movl	$6, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 7204 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -12(%ebp)
	.loc 6 7205 4
	cmpl	$0, -12(%ebp)
	js	L2484
	.loc 6 7205 25 discriminator 1
	cmpl	$16, -12(%ebp)
	jle	L2485
L2484:
	.loc 6 7206 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7207 15
	movl	$0, %eax
	jmp	L2482
L2485:
	.loc 6 7209 24
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 7210 24
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get32beP13stbi__context
	.loc 6 7211 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, -16(%ebp)
	.loc 6 7212 4
	cmpl	$16, -16(%ebp)
	je	L2486
	.loc 6 7213 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7214 15
	movl	$0, %eax
	jmp	L2482
L2486:
	.loc 6 7216 11
	movl	$1, %eax
L2482:
	.loc 6 7217 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1968:
	.def	__ZL14stbi__pic_infoP13stbi__contextPiS1_S1_;	.scl	3;	.type	32;	.endef
__ZL14stbi__pic_infoP13stbi__contextPiS1_S1_:
LFB1969:
	.loc 6 7222 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$88, %esp
	.loc 6 7223 8
	movl	$0, -12(%ebp)
	.loc 6 7223 19
	movl	$0, -16(%ebp)
	.loc 6 7226 4
	cmpl	$0, 12(%ebp)
	jne	L2488
	.loc 6 7226 14 discriminator 1
	leal	-28(%ebp), %eax
	movl	%eax, 12(%ebp)
L2488:
	.loc 6 7227 4
	cmpl	$0, 16(%ebp)
	jne	L2489
	.loc 6 7227 14 discriminator 1
	leal	-28(%ebp), %eax
	movl	%eax, 16(%ebp)
L2489:
	.loc 6 7228 4
	cmpl	$0, 20(%ebp)
	jne	L2490
	.loc 6 7228 20 discriminator 1
	leal	-28(%ebp), %eax
	movl	%eax, 20(%ebp)
L2490:
	.loc 6 7230 22
	movl	$LC131, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__pic_is4P13stbi__contextPKc
	.loc 6 7230 8
	testl	%eax, %eax
	sete	%al
	.loc 6 7230 4
	testb	%al, %al
	je	L2491
	.loc 6 7231 19
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7232 14
	movl	$0, %eax
	jmp	L2502
L2491:
	.loc 6 7235 14
	movl	$88, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
	.loc 6 7237 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, %edx
	.loc 6 7237 7
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 7238 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbi__get16beP13stbi__context
	movl	%eax, %edx
	.loc 6 7238 7
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 7239 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 7239 23
	testl	%eax, %eax
	setne	%al
	.loc 6 7239 4
	testb	%al, %al
	je	L2493
	.loc 6 7240 19
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7241 14
	movl	$0, %eax
	jmp	L2502
L2493:
	.loc 6 7243 10
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 7243 4
	testl	%eax, %eax
	je	L2494
	.loc 6 7243 35 discriminator 1
	movl	12(%ebp), %eax
	movl	(%eax), %ecx
	.loc 6 7243 32 discriminator 1
	movl	$268435456, %eax
	cltd
	idivl	%ecx
	movl	%eax, %edx
	.loc 6 7243 42 discriminator 1
	movl	16(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 7243 19 discriminator 1
	cmpl	%eax, %edx
	jge	L2494
	.loc 6 7244 19
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7245 14
	movl	$0, %eax
	jmp	L2502
L2494:
	.loc 6 7248 14
	movl	$8, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__skipP13stbi__contexti
L2499:
LBB507:
	.loc 6 7253 7
	cmpl	$10, -16(%ebp)
	jne	L2495
	.loc 6 7254 17
	movl	$0, %eax
	jmp	L2502
L2495:
	.loc 6 7256 36
	movl	-16(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -16(%ebp)
	.loc 6 7256 14
	leal	-58(%ebp), %ecx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%ecx, %eax
	movl	%eax, -20(%ebp)
	.loc 6 7257 27
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7257 15
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	.loc 6 7258 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 7258 23
	movl	-20(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 7259 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 7259 23
	movl	-20(%ebp), %eax
	movb	%dl, 1(%eax)
	.loc 6 7260 35
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	movl	%eax, %edx
	.loc 6 7260 23
	movl	-20(%ebp), %eax
	movb	%dl, 2(%eax)
	.loc 6 7261 27
	movl	-20(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	.loc 6 7261 16
	orl	%eax, -12(%ebp)
	.loc 6 7263 23
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 7263 26
	testl	%eax, %eax
	setne	%al
	.loc 6 7263 7
	testb	%al, %al
	je	L2496
	.loc 6 7264 23
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7265 18
	movl	$0, %eax
	jmp	L2502
L2496:
	.loc 6 7267 19
	movl	-20(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 7267 7
	cmpb	$8, %al
	je	L2497
	.loc 6 7268 23
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7269 18
	movl	$0, %eax
	jmp	L2502
L2497:
LBE507:
	.loc 6 7271 13
	cmpl	$0, -24(%ebp)
	je	L2498
	.loc 6 7250 4
	jmp	L2499
L2498:
	.loc 6 7273 22
	movl	-12(%ebp), %eax
	andl	$16, %eax
	.loc 6 7273 29
	testl	%eax, %eax
	je	L2500
	.loc 6 7273 29 is_stmt 0 discriminator 1
	movl	$4, %edx
	jmp	L2501
L2500:
	.loc 6 7273 29 discriminator 2
	movl	$3, %edx
L2501:
	.loc 6 7273 10 is_stmt 1 discriminator 4
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 7275 11 discriminator 4
	movl	$1, %eax
L2502:
	.loc 6 7276 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1969:
	.def	__ZL14stbi__pnm_testP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL14stbi__pnm_testP13stbi__context:
LFB1970:
	.loc 6 7294 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 7296 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7296 6
	movb	%al, -9(%ebp)
	.loc 6 7297 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7297 6
	movb	%al, -10(%ebp)
	.loc 6 7298 4
	cmpb	$80, -9(%ebp)
	jne	L2504
	.loc 6 7298 17 discriminator 1
	cmpb	$53, -10(%ebp)
	je	L2505
	.loc 6 7298 30 discriminator 2
	cmpb	$54, -10(%ebp)
	je	L2505
L2504:
	.loc 6 7299 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7300 15
	movl	$0, %eax
	jmp	L2506
L2505:
	.loc 6 7302 11
	movl	$1, %eax
L2506:
	.loc 6 7303 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1970:
	.def	__ZL14stbi__pnm_loadP13stbi__contextPiS1_S1_iP17stbi__result_info;	.scl	3;	.type	32;	.endef
__ZL14stbi__pnm_loadP13stbi__contextPiS1_S1_iP17stbi__result_info:
LFB1971:
	.loc 6 7306 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 6 7310 23
	movl	8(%ebp), %eax
	leal	8(%eax), %ecx
	.loc 6 7310 52
	movl	8(%ebp), %eax
	leal	4(%eax), %edx
	.loc 6 7310 34
	movl	8(%ebp), %eax
	.loc 6 7310 23
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__pnm_infoP13stbi__contextPiS1_S1_
	.loc 6 7310 8
	testl	%eax, %eax
	sete	%al
	.loc 6 7310 4
	testb	%al, %al
	je	L2508
	.loc 6 7311 14
	movl	$0, %eax
	jmp	L2509
L2508:
	.loc 6 7313 11
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 7313 4
	cmpl	$16777216, %eax
	jbe	L2510
	.loc 6 7313 47 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2509
L2510:
	.loc 6 7314 11
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 7314 4
	cmpl	$16777216, %eax
	jbe	L2511
	.loc 6 7314 47 discriminator 1
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2509
L2511:
	.loc 6 7316 12
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	.loc 6 7316 7
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 7317 12
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, %edx
	.loc 6 7317 7
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 7318 4
	cmpl	$0, 20(%ebp)
	je	L2512
	.loc 6 7318 25 discriminator 1
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	.loc 6 7318 20 discriminator 1
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
L2512:
	.loc 6 7320 54
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 7320 30
	movl	%eax, %ecx
	.loc 6 7320 44
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 7320 30
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	$0, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL21stbi__mad3sizes_validiiii
	.loc 6 7320 8
	testl	%eax, %eax
	sete	%al
	.loc 6 7320 4
	testb	%al, %al
	je	L2513
	.loc 6 7321 14
	movl	$LC63, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2509
L2513:
	.loc 6 7323 63
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 7323 39
	movl	%eax, %ecx
	.loc 6 7323 53
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 7323 39
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	$0, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbi__malloc_mad3iiii
	movl	%eax, -12(%ebp)
	.loc 6 7324 4
	cmpl	$0, -12(%ebp)
	jne	L2514
	.loc 6 7324 21 discriminator 1
	movl	$LC34, (%esp)
	call	__ZL9stbi__errPKc
	movl	$0, %eax
	jmp	L2509
L2514:
	.loc 6 7325 26
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, %edx
	.loc 6 7325 37
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 6 7325 32
	imull	%eax, %edx
	.loc 6 7325 48
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 6 7325 43
	imull	%edx, %eax
	.loc 6 7325 14
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__getnP13stbi__contextPhi
	.loc 6 7327 4
	cmpl	$0, 24(%ebp)
	je	L2515
	.loc 6 7327 35 discriminator 1
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 6 7327 17 discriminator 1
	cmpl	%eax, 24(%ebp)
	je	L2515
	.loc 6 7328 33
	movl	8(%ebp), %eax
	movl	4(%eax), %ecx
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%ecx, 16(%esp)
	movl	%edx, 12(%esp)
	movl	24(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__convert_formatPhiijj
	movl	%eax, -12(%ebp)
	.loc 6 7329 7
	cmpl	$0, -12(%ebp)
	jne	L2515
	.loc 6 7329 31 discriminator 1
	movl	-12(%ebp), %eax
	jmp	L2509
L2515:
	.loc 6 7331 11
	movl	-12(%ebp), %eax
L2509:
	.loc 6 7332 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1971:
	.def	__ZL17stbi__pnm_isspacec;	.scl	3;	.type	32;	.endef
__ZL17stbi__pnm_isspacec:
LFB1972:
	.loc 6 7335 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$4, %esp
	movl	8(%ebp), %eax
	movb	%al, -4(%ebp)
	.loc 6 7336 72
	cmpb	$32, -4(%ebp)
	je	L2517
	.loc 6 7336 20 discriminator 2
	cmpb	$9, -4(%ebp)
	je	L2517
	.loc 6 7336 33 discriminator 4
	cmpb	$10, -4(%ebp)
	je	L2517
	.loc 6 7336 46 discriminator 6
	cmpb	$11, -4(%ebp)
	je	L2517
	.loc 6 7336 59 discriminator 8
	cmpb	$12, -4(%ebp)
	je	L2517
	.loc 6 7336 72 discriminator 10
	cmpb	$13, -4(%ebp)
	jne	L2518
L2517:
	.loc 6 7336 72 is_stmt 0 discriminator 11
	movl	$1, %eax
	jmp	L2519
L2518:
	.loc 6 7336 72 discriminator 12
	movl	$0, %eax
L2519:
	.loc 6 7336 80 is_stmt 1 discriminator 14
	movzbl	%al, %eax
	.loc 6 7337 1 discriminator 14
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1972:
	.def	__ZL25stbi__pnm_skip_whitespaceP13stbi__contextPc;	.scl	3;	.type	32;	.endef
__ZL25stbi__pnm_skip_whitespaceP13stbi__contextPc:
LFB1973:
	.loc 6 7340 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
L2525:
	.loc 6 7342 27
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 7342 31
	testl	%eax, %eax
	jne	L2522
	.loc 6 7342 52 discriminator 1
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 7342 51 discriminator 1
	movsbl	%al, %eax
	movl	%eax, (%esp)
	call	__ZL17stbi__pnm_isspacec
	.loc 6 7342 31 discriminator 1
	testl	%eax, %eax
	je	L2522
	.loc 6 7342 31 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L2523
L2522:
	.loc 6 7342 31 discriminator 4
	movl	$0, %eax
L2523:
	.loc 6 7342 31 discriminator 6
	testb	%al, %al
	je	L2524
	.loc 6 7343 32 is_stmt 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7343 15
	movl	%eax, %edx
	.loc 6 7343 13
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 7342 7
	jmp	L2525
L2524:
	.loc 6 7345 23
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 7345 27
	testl	%eax, %eax
	jne	L2526
	.loc 6 7345 30 discriminator 2
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 7345 27 discriminator 2
	cmpb	$35, %al
	je	L2527
L2526:
	.loc 6 7345 27 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L2528
L2527:
	.loc 6 7345 27 discriminator 4
	movl	$0, %eax
L2528:
	.loc 6 7345 7 is_stmt 1 discriminator 6
	testb	%al, %al
	jne	L2535
L2529:
	.loc 6 7348 27
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 7348 45
	testl	%eax, %eax
	jne	L2531
	.loc 6 7348 34 discriminator 1
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 7348 31 discriminator 1
	cmpb	$10, %al
	je	L2531
	.loc 6 7348 48 discriminator 3
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 7348 45 discriminator 3
	cmpb	$13, %al
	je	L2531
	.loc 6 7348 45 is_stmt 0 discriminator 5
	movl	$1, %eax
	jmp	L2532
L2531:
	.loc 6 7348 45 discriminator 6
	movl	$0, %eax
L2532:
	.loc 6 7348 45 discriminator 8
	testb	%al, %al
	je	L2525
	.loc 6 7349 32 is_stmt 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7349 15
	movl	%eax, %edx
	.loc 6 7349 13
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 7348 7
	jmp	L2529
L2535:
	.loc 6 7346 10
	nop
	.loc 6 7351 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1973:
	.def	__ZL17stbi__pnm_isdigitc;	.scl	3;	.type	32;	.endef
__ZL17stbi__pnm_isdigitc:
LFB1974:
	.loc 6 7354 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$4, %esp
	movl	8(%ebp), %eax
	movb	%al, -4(%ebp)
	.loc 6 7355 20
	cmpb	$47, -4(%ebp)
	jle	L2537
	.loc 6 7355 20 is_stmt 0 discriminator 1
	cmpb	$57, -4(%ebp)
	jg	L2537
	.loc 6 7355 20 discriminator 3
	movl	$1, %eax
	jmp	L2538
L2537:
	.loc 6 7355 20 discriminator 4
	movl	$0, %eax
L2538:
	.loc 6 7355 28 is_stmt 1 discriminator 6
	movzbl	%al, %eax
	.loc 6 7356 1 discriminator 6
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1974:
	.def	__ZL20stbi__pnm_getintegerP13stbi__contextPc;	.scl	3;	.type	32;	.endef
__ZL20stbi__pnm_getintegerP13stbi__contextPc:
LFB1975:
	.loc 6 7359 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 7360 8
	movl	$0, -12(%ebp)
L2544:
	.loc 6 7362 24
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__at_eofP13stbi__context
	.loc 6 7362 28
	testl	%eax, %eax
	jne	L2541
	.loc 6 7362 49 discriminator 1
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 6 7362 48 discriminator 1
	movsbl	%al, %eax
	movl	%eax, (%esp)
	call	__ZL17stbi__pnm_isdigitc
	.loc 6 7362 28 discriminator 1
	testl	%eax, %eax
	je	L2541
	.loc 6 7362 28 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L2542
L2541:
	.loc 6 7362 28 discriminator 4
	movl	$0, %eax
L2542:
	.loc 6 7362 28 discriminator 6
	testb	%al, %al
	je	L2543
	.loc 6 7363 20 is_stmt 1
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 6 7363 27
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	movsbl	%al, %eax
	.loc 6 7363 30
	subl	$48, %eax
	.loc 6 7363 13
	addl	%edx, %eax
	movl	%eax, -12(%ebp)
	.loc 6 7364 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7364 12
	movl	%eax, %edx
	.loc 6 7364 10
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	.loc 6 7362 4
	jmp	L2544
L2543:
	.loc 6 7367 11
	movl	-12(%ebp), %eax
	.loc 6 7368 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1975:
	.section .rdata,"dr"
LC154:
	.ascii "max value > 255\0"
	.text
	.def	__ZL14stbi__pnm_infoP13stbi__contextPiS1_S1_;	.scl	3;	.type	32;	.endef
__ZL14stbi__pnm_infoP13stbi__contextPiS1_S1_:
LFB1976:
	.loc 6 7371 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 7375 4
	cmpl	$0, 12(%ebp)
	jne	L2547
	.loc 6 7375 14 discriminator 1
	leal	-20(%ebp), %eax
	movl	%eax, 12(%ebp)
L2547:
	.loc 6 7376 4
	cmpl	$0, 16(%ebp)
	jne	L2548
	.loc 6 7376 14 discriminator 1
	leal	-20(%ebp), %eax
	movl	%eax, 16(%ebp)
L2548:
	.loc 6 7377 4
	cmpl	$0, 20(%ebp)
	jne	L2549
	.loc 6 7377 20 discriminator 1
	leal	-20(%ebp), %eax
	movl	%eax, 20(%ebp)
L2549:
	.loc 6 7379 16
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7382 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7382 6
	movb	%al, -9(%ebp)
	.loc 6 7383 25
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7383 6
	movb	%al, -10(%ebp)
	.loc 6 7384 4
	cmpb	$80, -9(%ebp)
	jne	L2550
	.loc 6 7384 17 discriminator 1
	cmpb	$53, -10(%ebp)
	je	L2551
	.loc 6 7384 30 discriminator 2
	cmpb	$54, -10(%ebp)
	je	L2551
L2550:
	.loc 6 7385 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL12stbi__rewindP13stbi__context
	.loc 6 7386 15
	movl	$0, %eax
	jmp	L2556
L2551:
	.loc 6 7389 23
	cmpb	$54, -10(%ebp)
	jne	L2553
	.loc 6 7389 23 is_stmt 0 discriminator 1
	movl	$3, %edx
	jmp	L2554
L2553:
	.loc 6 7389 23 discriminator 2
	movl	$1, %edx
L2554:
	.loc 6 7389 10 is_stmt 1 discriminator 4
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 7391 25 discriminator 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL10stbi__get8P13stbi__context
	.loc 6 7391 6 discriminator 4
	movb	%al, -21(%ebp)
	.loc 6 7392 29 discriminator 4
	leal	-21(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL25stbi__pnm_skip_whitespaceP13stbi__contextPc
	.loc 6 7394 29 discriminator 4
	leal	-21(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__pnm_getintegerP13stbi__contextPc
	movl	%eax, %edx
	.loc 6 7394 7 discriminator 4
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 7395 29 discriminator 4
	leal	-21(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL25stbi__pnm_skip_whitespaceP13stbi__contextPc
	.loc 6 7397 29 discriminator 4
	leal	-21(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__pnm_getintegerP13stbi__contextPc
	movl	%eax, %edx
	.loc 6 7397 7 discriminator 4
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 6 7398 29 discriminator 4
	leal	-21(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL25stbi__pnm_skip_whitespaceP13stbi__contextPc
	.loc 6 7400 31 discriminator 4
	leal	-21(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbi__pnm_getintegerP13stbi__contextPc
	movl	%eax, -16(%ebp)
	.loc 6 7402 4 discriminator 4
	cmpl	$255, -16(%ebp)
	jle	L2555
	.loc 6 7403 14
	movl	$LC154, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L2556
L2555:
	.loc 6 7405 14
	movl	$1, %eax
L2556:
	.loc 6 7406 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1976:
	.def	__ZL15stbi__info_mainP13stbi__contextPiS1_S1_;	.scl	3;	.type	32;	.endef
__ZL15stbi__info_mainP13stbi__contextPiS1_S1_:
LFB1977:
	.loc 6 7410 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 7412 23
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__jpeg_infoP13stbi__contextPiS1_S1_
	.loc 6 7412 38
	testl	%eax, %eax
	setne	%al
	.loc 6 7412 4
	testb	%al, %al
	je	L2558
	.loc 6 7412 47 discriminator 1
	movl	$1, %eax
	jmp	L2559
L2558:
	.loc 6 7416 22
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__png_infoP13stbi__contextPiS1_S1_
	.loc 6 7416 37
	testl	%eax, %eax
	setne	%al
	.loc 6 7416 4
	testb	%al, %al
	je	L2560
	.loc 6 7416 47 discriminator 1
	movl	$1, %eax
	jmp	L2559
L2560:
	.loc 6 7420 22
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__gif_infoP13stbi__contextPiS1_S1_
	.loc 6 7420 37
	testl	%eax, %eax
	setne	%al
	.loc 6 7420 4
	testb	%al, %al
	je	L2561
	.loc 6 7420 47 discriminator 1
	movl	$1, %eax
	jmp	L2559
L2561:
	.loc 6 7424 22
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__bmp_infoP13stbi__contextPiS1_S1_
	.loc 6 7424 37
	testl	%eax, %eax
	setne	%al
	.loc 6 7424 4
	testb	%al, %al
	je	L2562
	.loc 6 7424 47 discriminator 1
	movl	$1, %eax
	jmp	L2559
L2562:
	.loc 6 7428 22
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__psd_infoP13stbi__contextPiS1_S1_
	.loc 6 7428 37
	testl	%eax, %eax
	setne	%al
	.loc 6 7428 4
	testb	%al, %al
	je	L2563
	.loc 6 7428 47 discriminator 1
	movl	$1, %eax
	jmp	L2559
L2563:
	.loc 6 7432 22
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__pic_infoP13stbi__contextPiS1_S1_
	.loc 6 7432 37
	testl	%eax, %eax
	setne	%al
	.loc 6 7432 4
	testb	%al, %al
	je	L2564
	.loc 6 7432 47 discriminator 1
	movl	$1, %eax
	jmp	L2559
L2564:
	.loc 6 7436 22
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__pnm_infoP13stbi__contextPiS1_S1_
	.loc 6 7436 37
	testl	%eax, %eax
	setne	%al
	.loc 6 7436 4
	testb	%al, %al
	je	L2565
	.loc 6 7436 47 discriminator 1
	movl	$1, %eax
	jmp	L2559
L2565:
	.loc 6 7440 22
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__hdr_infoP13stbi__contextPiS1_S1_
	.loc 6 7440 37
	testl	%eax, %eax
	setne	%al
	.loc 6 7440 4
	testb	%al, %al
	je	L2566
	.loc 6 7440 47 discriminator 1
	movl	$1, %eax
	jmp	L2559
L2566:
	.loc 6 7445 22
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__tga_infoP13stbi__contextPiS1_S1_
	.loc 6 7445 37
	testl	%eax, %eax
	setne	%al
	.loc 6 7445 4
	testb	%al, %al
	je	L2567
	.loc 6 7446 15
	movl	$1, %eax
	jmp	L2559
L2567:
	.loc 6 7448 11
	movl	$LC33, (%esp)
	call	__ZL9stbi__errPKc
	nop
L2559:
	.loc 6 7449 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1977:
	.def	__ZL16stbi__is_16_mainP13stbi__context;	.scl	3;	.type	32;	.endef
__ZL16stbi__is_16_mainP13stbi__context:
LFB1978:
	.loc 6 7452 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 6 7454 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__png_is16P13stbi__context
	.loc 6 7454 25
	testl	%eax, %eax
	setne	%al
	.loc 6 7454 4
	testb	%al, %al
	je	L2569
	.loc 6 7454 35 discriminator 1
	movl	$1, %eax
	jmp	L2570
L2569:
	.loc 6 7458 22
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbi__psd_is16P13stbi__context
	.loc 6 7458 25
	testl	%eax, %eax
	setne	%al
	.loc 6 7458 4
	testb	%al, %al
	je	L2571
	.loc 6 7458 35 discriminator 1
	movl	$1, %eax
	jmp	L2570
L2571:
	.loc 6 7461 11
	movl	$0, %eax
L2570:
	.loc 6 7462 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1978:
	.globl	_stbi_info
	.def	_stbi_info;	.scl	2;	.type	32;	.endef
_stbi_info:
LFB1979:
	.loc 6 7466 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 7467 26
	movl	$LC37, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbi__fopenPKcS0_
	movl	%eax, -12(%ebp)
	.loc 6 7469 5
	cmpl	$0, -12(%ebp)
	jne	L2573
	.loc 6 7469 20 discriminator 1
	movl	$LC38, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L2574
L2573:
	.loc 6 7470 33
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_info_from_file
	movl	%eax, -16(%ebp)
	.loc 6 7471 11
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_fclose
	.loc 6 7472 12
	movl	-16(%ebp), %eax
L2574:
	.loc 6 7473 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1979:
	.globl	_stbi_info_from_file
	.def	_stbi_info_from_file;	.scl	2;	.type	32;	.endef
_stbi_info_from_file:
LFB1980:
	.loc 6 7476 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$232, %esp
	.loc 6 7479 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_ftell
	movl	%eax, -12(%ebp)
	.loc 6 7480 20
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__start_fileP13stbi__contextP6_iobuf
	.loc 6 7481 23
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__info_mainP13stbi__contextPiS1_S1_
	movl	%eax, -16(%ebp)
	.loc 6 7482 9
	movl	$0, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_fseek
	.loc 6 7483 11
	movl	-16(%ebp), %eax
	.loc 6 7484 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1980:
	.globl	_stbi_is_16_bit
	.def	_stbi_is_16_bit;	.scl	2;	.type	32;	.endef
_stbi_is_16_bit:
LFB1981:
	.loc 6 7487 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 6 7488 26
	movl	$LC37, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL11stbi__fopenPKcS0_
	movl	%eax, -12(%ebp)
	.loc 6 7490 5
	cmpl	$0, -12(%ebp)
	jne	L2578
	.loc 6 7490 20 discriminator 1
	movl	$LC38, (%esp)
	call	__ZL9stbi__errPKc
	jmp	L2579
L2578:
	.loc 6 7491 38
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_is_16_bit_from_file
	movl	%eax, -16(%ebp)
	.loc 6 7492 11
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_fclose
	.loc 6 7493 12
	movl	-16(%ebp), %eax
L2579:
	.loc 6 7494 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1981:
	.globl	_stbi_is_16_bit_from_file
	.def	_stbi_is_16_bit_from_file;	.scl	2;	.type	32;	.endef
_stbi_is_16_bit_from_file:
LFB1982:
	.loc 6 7497 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$232, %esp
	.loc 6 7500 20
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_ftell
	movl	%eax, -12(%ebp)
	.loc 6 7501 20
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__start_fileP13stbi__contextP6_iobuf
	.loc 6 7502 24
	leal	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__is_16_mainP13stbi__context
	movl	%eax, -16(%ebp)
	.loc 6 7503 9
	movl	$0, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_fseek
	.loc 6 7504 11
	movl	-16(%ebp), %eax
	.loc 6 7505 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1982:
	.globl	_stbi_info_from_memory
	.def	_stbi_info_from_memory;	.scl	2;	.type	32;	.endef
_stbi_info_from_memory:
LFB1983:
	.loc 6 7509 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$216, %esp
	.loc 6 7511 19
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__start_memP13stbi__contextPKhi
	.loc 6 7512 26
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__info_mainP13stbi__contextPiS1_S1_
	.loc 6 7512 38
	nop
	.loc 6 7513 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1983:
	.globl	_stbi_info_from_callbacks
	.def	_stbi_info_from_callbacks;	.scl	2;	.type	32;	.endef
_stbi_info_from_callbacks:
LFB1984:
	.loc 6 7516 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$216, %esp
	.loc 6 7518 25
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__start_callbacksP13stbi__contextP17stbi_io_callbacksPv
	.loc 6 7519 26
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__info_mainP13stbi__contextPiS1_S1_
	.loc 6 7519 38
	nop
	.loc 6 7520 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1984:
	.globl	_stbi_is_16_bit_from_memory
	.def	_stbi_is_16_bit_from_memory;	.scl	2;	.type	32;	.endef
_stbi_is_16_bit_from_memory:
LFB1985:
	.loc 6 7523 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$216, %esp
	.loc 6 7525 19
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbi__start_memP13stbi__contextPKhi
	.loc 6 7526 27
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__is_16_mainP13stbi__context
	.loc 6 7526 30
	nop
	.loc 6 7527 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1985:
	.globl	_stbi_is_16_bit_from_callbacks
	.def	_stbi_is_16_bit_from_callbacks;	.scl	2;	.type	32;	.endef
_stbi_is_16_bit_from_callbacks:
LFB1986:
	.loc 6 7530 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$216, %esp
	.loc 6 7532 25
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbi__start_callbacksP13stbi__contextP17stbi_io_callbacksPv
	.loc 6 7533 27
	leal	-196(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbi__is_16_mainP13stbi__context
	.loc 6 7533 30
	nop
	.loc 6 7534 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1986:
	.def	__ZL15stbtt__buf_get8P10stbtt__buf;	.scl	3;	.type	32;	.endef
__ZL15stbtt__buf_get8P10stbtt__buf:
LFB1987:
	.file 7 "stb_truetype.h"
	.loc 7 1129 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	.cfi_offset 3, -12
	.loc 7 1130 11
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 1130 24
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 1130 4
	cmpl	%eax, %edx
	jl	L2591
	.loc 7 1131 14
	movl	$0, %eax
	jmp	L2592
L2591:
	.loc 7 1132 14
	movl	8(%ebp), %eax
	movl	(%eax), %ebx
	.loc 7 1132 22
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 1132 28
	leal	1(%eax), %ecx
	movl	8(%ebp), %edx
	movl	%ecx, 4(%edx)
	.loc 7 1132 30
	addl	%ebx, %eax
	movzbl	(%eax), %eax
L2592:
	.loc 7 1133 1
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1987:
	.def	__ZL16stbtt__buf_peek8P10stbtt__buf;	.scl	3;	.type	32;	.endef
__ZL16stbtt__buf_peek8P10stbtt__buf:
LFB1988:
	.loc 7 1136 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 7 1137 11
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 1137 24
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 1137 4
	cmpl	%eax, %edx
	jl	L2594
	.loc 7 1138 14
	movl	$0, %eax
	jmp	L2595
L2594:
	.loc 7 1139 14
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 7 1139 22
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 1139 28
	addl	%edx, %eax
	movzbl	(%eax), %eax
L2595:
	.loc 7 1140 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1988:
	.section .rdata,"dr"
LC155:
	.ascii "stb_truetype.h\0"
LC156:
	.ascii "!(o > b->size || o < 0)\0"
	.text
	.def	__ZL15stbtt__buf_seekP10stbtt__bufi;	.scl	3;	.type	32;	.endef
__ZL15stbtt__buf_seekP10stbtt__bufi:
LFB1989:
	.loc 7 1143 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 1144 4
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	cmpl	%eax, 12(%ebp)
	jg	L2597
	.loc 7 1144 4 is_stmt 0 discriminator 1
	cmpl	$0, 12(%ebp)
	jns	L2604
L2597:
	.loc 7 1144 4 discriminator 4
	movl	$1144, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC156, (%esp)
	call	__assert
	jmp	L2600
L2604:
	.loc 7 1144 4
	nop
L2600:
	.loc 7 1145 24 is_stmt 1
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 1145 39
	cmpl	%eax, 12(%ebp)
	jg	L2601
	.loc 7 1145 29 discriminator 2
	cmpl	$0, 12(%ebp)
	jns	L2602
L2601:
	.loc 7 1145 39 discriminator 3
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	jmp	L2603
L2602:
	.loc 7 1145 39 is_stmt 0 discriminator 4
	movl	12(%ebp), %eax
L2603:
	.loc 7 1145 14 is_stmt 1 discriminator 6
	movl	8(%ebp), %edx
	movl	%eax, 4(%edx)
	.loc 7 1146 1 discriminator 6
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1989:
	.def	__ZL15stbtt__buf_skipP10stbtt__bufi;	.scl	3;	.type	32;	.endef
__ZL15stbtt__buf_skipP10stbtt__bufi:
LFB1990:
	.loc 7 1149 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 1150 26
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 1150 19
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_seekP10stbtt__bufi
	.loc 7 1151 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1990:
	.section .rdata,"dr"
LC157:
	.ascii "n >= 1 && n <= 4\0"
	.text
	.def	__ZL14stbtt__buf_getP10stbtt__bufi;	.scl	3;	.type	32;	.endef
__ZL14stbtt__buf_getP10stbtt__bufi:
LFB1991:
	.loc 7 1154 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 7 1155 17
	movl	$0, -12(%ebp)
	.loc 7 1157 4
	cmpl	$0, 12(%ebp)
	jle	L2607
	.loc 7 1157 4 is_stmt 0 discriminator 1
	cmpl	$4, 12(%ebp)
	jle	L2614
L2607:
	.loc 7 1157 4 discriminator 4
	movl	$1157, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC157, (%esp)
	call	__assert
	jmp	L2610
L2614:
	.loc 7 1157 4
	nop
L2610:
	.loc 7 1158 11 is_stmt 1
	movl	$0, -16(%ebp)
L2612:
	.loc 7 1158 18 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L2611
	.loc 7 1159 14 discriminator 2
	movl	-12(%ebp), %eax
	sall	$8, %eax
	movl	%eax, %ebx
	.loc 7 1159 37 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	movzbl	%al, %eax
	.loc 7 1159 9 discriminator 2
	orl	%ebx, %eax
	movl	%eax, -12(%ebp)
	.loc 7 1158 4 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L2612
L2611:
	.loc 7 1160 11
	movl	-12(%ebp), %eax
	.loc 7 1161 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1991:
	.section .rdata,"dr"
LC158:
	.ascii "size < 0x40000000\0"
	.text
	.def	__ZL14stbtt__new_bufPKvj;	.scl	3;	.type	32;	.endef
__ZL14stbtt__new_bufPKvj:
LFB1992:
	.loc 7 1164 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 1166 4
	cmpl	$1073741823, 16(%ebp)
	jbe	L2618
	.loc 7 1166 4 is_stmt 0 discriminator 2
	movl	$1166, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC158, (%esp)
	call	__assert
L2618:
	.loc 7 1167 11 is_stmt 1
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, (%eax)
	.loc 7 1168 13
	movl	16(%ebp), %edx
	.loc 7 1168 11
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 7 1169 13
	movl	8(%ebp), %eax
	movl	$0, 4(%eax)
	.loc 7 1170 11
	nop
	.loc 7 1171 1
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1992:
	.def	__ZL16stbtt__buf_rangePK10stbtt__bufii;	.scl	3;	.type	32;	.endef
__ZL16stbtt__buf_rangePK10stbtt__bufii:
LFB1993:
	.loc 7 1177 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 1178 41
	movl	8(%ebp), %eax
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__new_bufPKvj
	.loc 7 1179 4
	cmpl	$0, 16(%ebp)
	js	L2624
	.loc 7 1179 14 discriminator 1
	cmpl	$0, 20(%ebp)
	js	L2624
	.loc 7 1179 33 discriminator 2
	movl	12(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 1179 23 discriminator 2
	cmpl	%eax, 16(%ebp)
	jg	L2624
	.loc 7 1179 48 discriminator 3
	movl	12(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 1179 53 discriminator 3
	subl	16(%ebp), %eax
	.loc 7 1179 38 discriminator 3
	cmpl	%eax, 20(%ebp)
	jg	L2624
	.loc 7 1180 16
	movl	12(%ebp), %eax
	movl	(%eax), %edx
	.loc 7 1180 21
	movl	16(%ebp), %eax
	addl	%eax, %edx
	.loc 7 1180 11
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 1181 11
	movl	8(%ebp), %eax
	movl	20(%ebp), %edx
	movl	%edx, 8(%eax)
	.loc 7 1182 11
	nop
	jmp	L2620
L2624:
	.loc 7 1179 65
	nop
L2620:
	.loc 7 1183 1
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1993:
	.section .rdata,"dr"
LC159:
	.ascii "offsize >= 1 && offsize <= 4\0"
	.text
	.def	__ZL20stbtt__cff_get_indexP10stbtt__buf;	.scl	3;	.type	32;	.endef
__ZL20stbtt__cff_get_indexP10stbtt__buf:
LFB1994:
	.loc 7 1186 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 1188 15
	movl	12(%ebp), %eax
	.loc 7 1188 10
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 7 1189 12
	movl	12(%ebp), %eax
	movl	$2, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__buf_getP10stbtt__bufi
	.loc 7 1189 10
	movl	%eax, -16(%ebp)
	.loc 7 1190 4
	cmpl	$0, -16(%ebp)
	je	L2626
	.loc 7 1191 32
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	.loc 7 1191 15
	movzbl	%al, %eax
	movl	%eax, -20(%ebp)
	.loc 7 1192 7
	cmpl	$0, -20(%ebp)
	jle	L2627
	.loc 7 1192 7 is_stmt 0 discriminator 1
	cmpl	$4, -20(%ebp)
	jle	L2632
L2627:
	.loc 7 1192 7 discriminator 4
	movl	$1192, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC159, (%esp)
	call	__assert
	jmp	L2630
L2632:
	.loc 7 1192 7
	nop
L2630:
	.loc 7 1193 22 is_stmt 1
	movl	-20(%ebp), %eax
	imull	-16(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_skipP10stbtt__bufi
	.loc 7 1194 40
	movl	12(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__buf_getP10stbtt__bufi
	.loc 7 1194 53
	subl	$1, %eax
	.loc 7 1194 22
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_skipP10stbtt__bufi
L2626:
	.loc 7 1196 41
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 1196 55
	subl	-12(%ebp), %eax
	movl	%eax, %ecx
	movl	12(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%ecx, 12(%esp)
	movl	-12(%ebp), %ecx
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL16stbtt__buf_rangePK10stbtt__bufii
	.loc 7 1197 1
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1994:
	.def	__ZL14stbtt__cff_intP10stbtt__buf;	.scl	3;	.type	32;	.endef
__ZL14stbtt__cff_intP10stbtt__buf:
LFB1995:
	.loc 7 1200 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 7 1201 28
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	.loc 7 1201 30
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 7 1202 4
	cmpl	$31, -12(%ebp)
	jle	L2634
	.loc 7 1202 17 discriminator 1
	cmpl	$246, -12(%ebp)
	jg	L2634
	.loc 7 1202 47 discriminator 2
	movl	-12(%ebp), %eax
	subl	$139, %eax
	.loc 7 1202 49 discriminator 2
	jmp	L2635
L2634:
	.loc 7 1203 9
	cmpl	$246, -12(%ebp)
	jle	L2636
	.loc 7 1203 23 discriminator 1
	cmpl	$250, -12(%ebp)
	jg	L2636
	.loc 7 1203 48 discriminator 2
	movl	-12(%ebp), %eax
	subl	$247, %eax
	.loc 7 1203 54 discriminator 2
	sall	$8, %eax
	movl	%eax, %ebx
	.loc 7 1203 76 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	movzbl	%al, %eax
	.loc 7 1203 59 discriminator 2
	addl	%ebx, %eax
	.loc 7 1203 80 discriminator 2
	addl	$108, %eax
	.loc 7 1203 82 discriminator 2
	jmp	L2635
L2636:
	.loc 7 1204 9
	cmpl	$250, -12(%ebp)
	jle	L2637
	.loc 7 1204 23 discriminator 1
	cmpl	$254, -12(%ebp)
	jg	L2637
	.loc 7 1204 44 discriminator 2
	movl	$251, %eax
	subl	-12(%ebp), %eax
	.loc 7 1204 55 discriminator 2
	sall	$8, %eax
	movl	%eax, %ebx
	.loc 7 1204 77 discriminator 2
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	movzbl	%al, %eax
	.loc 7 1204 60 discriminator 2
	subl	%eax, %ebx
	movl	%ebx, %eax
	.loc 7 1204 81 discriminator 2
	subl	$108, %eax
	.loc 7 1204 83 discriminator 2
	jmp	L2635
L2637:
	.loc 7 1205 9
	cmpl	$28, -12(%ebp)
	jne	L2638
	.loc 7 1205 44 discriminator 1
	movl	8(%ebp), %eax
	movl	$2, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__buf_getP10stbtt__bufi
	jmp	L2635
L2638:
	.loc 7 1206 9
	cmpl	$29, -12(%ebp)
	jne	L2639
	.loc 7 1206 44 discriminator 1
	movl	8(%ebp), %eax
	movl	$4, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__buf_getP10stbtt__bufi
	jmp	L2635
L2639:
	.loc 7 1207 4
	movl	$1207, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC5, (%esp)
	call	__assert
	.loc 7 1208 11
	movl	$0, %eax
L2635:
	.loc 7 1209 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1995:
	.section .rdata,"dr"
LC160:
	.ascii "b0 >= 28\0"
	.text
	.def	__ZL23stbtt__cff_skip_operandP10stbtt__buf;	.scl	3;	.type	32;	.endef
__ZL23stbtt__cff_skip_operandP10stbtt__buf:
LFB1996:
	.loc 7 1211 52
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 1212 32
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbtt__buf_peek8P10stbtt__buf
	.loc 7 1212 34
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 7 1213 4
	cmpl	$27, -12(%ebp)
	jg	L2643
	.loc 7 1213 4 is_stmt 0 discriminator 2
	movl	$1213, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC160, (%esp)
	call	__assert
L2643:
	.loc 7 1214 4 is_stmt 1
	cmpl	$30, -12(%ebp)
	jne	L2644
	.loc 7 1215 22
	movl	$1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_skipP10stbtt__bufi
L2646:
	.loc 7 1216 17
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 1216 29
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 1216 24
	cmpl	%eax, %edx
	jge	L2647
	.loc 7 1217 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	.loc 7 1217 12
	movzbl	%al, %eax
	movl	%eax, -16(%ebp)
	.loc 7 1218 17
	movl	-16(%ebp), %eax
	andl	$15, %eax
	.loc 7 1218 10
	cmpl	$15, %eax
	je	L2647
	.loc 7 1218 37 discriminator 1
	movl	-16(%ebp), %eax
	sarl	$4, %eax
	.loc 7 1218 31 discriminator 1
	cmpl	$15, %eax
	je	L2647
	.loc 7 1216 7
	jmp	L2646
L2644:
	.loc 7 1222 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__cff_intP10stbtt__buf
L2647:
	.loc 7 1224 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1996:
	.def	__ZL15stbtt__dict_getP10stbtt__bufi;	.scl	3;	.type	32;	.endef
__ZL15stbtt__dict_getP10stbtt__bufi:
LFB1997:
	.loc 7 1227 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 1228 19
	movl	$0, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_seekP10stbtt__bufi
L2655:
	.loc 7 1229 14
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 1229 26
	movl	12(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 1229 21
	cmpl	%eax, %edx
	jge	L2649
LBB508:
	.loc 7 1230 11
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
L2651:
	.loc 7 1231 30
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbtt__buf_peek8P10stbtt__buf
	.loc 7 1231 34
	cmpb	$27, %al
	seta	%al
	testb	%al, %al
	je	L2650
	.loc 7 1232 33
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__cff_skip_operandP10stbtt__buf
	.loc 7 1231 7
	jmp	L2651
L2650:
	.loc 7 1233 11
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 7 1234 27
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	.loc 7 1234 10
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 7 1235 7
	cmpl	$12, -12(%ebp)
	jne	L2652
	.loc 7 1235 42 discriminator 1
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	movzbl	%al, %eax
	.loc 7 1235 25 discriminator 1
	orb	$1, %ah
	movl	%eax, -12(%ebp)
L2652:
	.loc 7 1236 7
	movl	-12(%ebp), %eax
	cmpl	16(%ebp), %eax
	jne	L2655
	.loc 7 1236 65 discriminator 1
	movl	-20(%ebp), %eax
	subl	-16(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 12(%esp)
	movl	-16(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL16stbtt__buf_rangePK10stbtt__bufii
	jmp	L2648
L2649:
LBE508:
	.loc 7 1238 35
	movl	8(%ebp), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL16stbtt__buf_rangePK10stbtt__bufii
L2648:
	.loc 7 1239 1
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1997:
	.def	__ZL20stbtt__dict_get_intsP10stbtt__bufiiPj;	.scl	3;	.type	32;	.endef
__ZL20stbtt__dict_get_intsP10stbtt__bufiiPj:
LFB1998:
	.loc 7 1242 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 7 1244 48
	leal	-24(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbtt__dict_getP10stbtt__bufi
	.loc 7 1245 11
	movl	$0, -12(%ebp)
L2658:
	.loc 7 1245 29 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L2659
	.loc 7 1245 41 discriminator 2
	movl	-20(%ebp), %edx
	.loc 7 1245 59 discriminator 2
	movl	-16(%ebp), %eax
	.loc 7 1245 29 discriminator 2
	cmpl	%eax, %edx
	jge	L2659
	.loc 7 1246 12
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	20(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 7 1246 30
	leal	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__cff_intP10stbtt__buf
	.loc 7 1246 14
	movl	%eax, (%ebx)
	.loc 7 1245 4
	addl	$1, -12(%ebp)
	jmp	L2658
L2659:
	.loc 7 1247 1
	nop
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1998:
	.def	__ZL22stbtt__cff_index_countP10stbtt__buf;	.scl	3;	.type	32;	.endef
__ZL22stbtt__cff_index_countP10stbtt__buf:
LFB1999:
	.loc 7 1250 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 1251 19
	movl	8(%ebp), %eax
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_seekP10stbtt__bufi
	.loc 7 1252 11
	movl	8(%ebp), %eax
	movl	$2, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__buf_getP10stbtt__bufi
	.loc 7 1253 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE1999:
	.section .rdata,"dr"
LC161:
	.ascii "i >= 0 && i < count\0"
	.text
	.def	__ZL20stbtt__cff_index_get10stbtt__bufi;	.scl	3;	.type	32;	.endef
__ZL20stbtt__cff_index_get10stbtt__bufi:
LFB2000:
	.loc 7 1256 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 1258 19
	movl	$0, 4(%esp)
	leal	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_seekP10stbtt__bufi
	.loc 7 1259 12
	movl	$2, 4(%esp)
	leal	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__buf_getP10stbtt__bufi
	.loc 7 1259 10
	movl	%eax, -12(%ebp)
	.loc 7 1260 29
	leal	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	.loc 7 1260 12
	movzbl	%al, %eax
	movl	%eax, -16(%ebp)
	.loc 7 1261 4
	cmpl	$0, 24(%ebp)
	js	L2663
	.loc 7 1261 4 is_stmt 0 discriminator 1
	movl	24(%ebp), %eax
	cmpl	-12(%ebp), %eax
	jl	L2672
L2663:
	.loc 7 1261 4 discriminator 4
	movl	$1261, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC161, (%esp)
	call	__assert
	jmp	L2666
L2672:
	.loc 7 1261 4
	nop
L2666:
	.loc 7 1262 4 is_stmt 1
	cmpl	$0, -16(%ebp)
	jle	L2667
	.loc 7 1262 4 is_stmt 0 discriminator 1
	cmpl	$4, -16(%ebp)
	jle	L2673
L2667:
	.loc 7 1262 4 discriminator 4
	movl	$1262, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC159, (%esp)
	call	__assert
	jmp	L2670
L2673:
	.loc 7 1262 4
	nop
L2670:
	.loc 7 1263 19 is_stmt 1
	movl	24(%ebp), %eax
	imull	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_skipP10stbtt__bufi
	.loc 7 1264 26
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__buf_getP10stbtt__bufi
	.loc 7 1264 10
	movl	%eax, -20(%ebp)
	.loc 7 1265 24
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__buf_getP10stbtt__bufi
	.loc 7 1265 8
	movl	%eax, -24(%ebp)
	.loc 7 1266 70
	movl	-24(%ebp), %eax
	subl	-20(%ebp), %eax
	movl	%eax, %edx
	.loc 7 1266 40
	movl	-12(%ebp), %eax
	addl	$1, %eax
	.loc 7 1266 43
	imull	-16(%ebp), %eax
	.loc 7 1266 33
	leal	2(%eax), %ecx
	.loc 7 1266 70
	movl	-20(%ebp), %eax
	addl	%eax, %ecx
	movl	8(%ebp), %eax
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	leal	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL16stbtt__buf_rangePK10stbtt__bufii
	.loc 7 1267 1
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2000:
	.def	__ZL8ttUSHORTPh;	.scl	3;	.type	32;	.endef
__ZL8ttUSHORTPh:
LFB2001:
	.loc 7 1281 46
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 7 1281 58
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 7 1281 64
	movzbl	%al, %eax
	sall	$8, %eax
	movl	%eax, %edx
	.loc 7 1281 69
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	addl	%edx, %eax
	.loc 7 1281 72
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2001:
	.def	__ZL7ttSHORTPh;	.scl	3;	.type	32;	.endef
__ZL7ttSHORTPh:
LFB2002:
	.loc 7 1282 46
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 7 1282 58
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 7 1282 64
	movzbl	%al, %eax
	sall	$8, %eax
	movl	%eax, %edx
	.loc 7 1282 69
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 1282 64
	addl	%edx, %eax
	.loc 7 1282 72
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2002:
	.def	__ZL7ttULONGPh;	.scl	3;	.type	32;	.endef
__ZL7ttULONGPh:
LFB2003:
	.loc 7 1283 46
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 7 1283 59
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 1283 60
	sall	$24, %eax
	movl	%eax, %edx
	.loc 7 1283 72
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 1283 73
	sall	$16, %eax
	.loc 7 1283 66
	addl	%eax, %edx
	.loc 7 1283 85
	movl	8(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 1283 86
	sall	$8, %eax
	.loc 7 1283 79
	addl	%eax, %edx
	.loc 7 1283 96
	movl	8(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 1283 91
	addl	%edx, %eax
	.loc 7 1283 99
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2003:
	.def	__ZL6ttLONGPh;	.scl	3;	.type	32;	.endef
__ZL6ttLONGPh:
LFB2004:
	.loc 7 1284 46
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 7 1284 59
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 1284 60
	sall	$24, %eax
	movl	%eax, %edx
	.loc 7 1284 72
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 1284 73
	sall	$16, %eax
	.loc 7 1284 66
	addl	%eax, %edx
	.loc 7 1284 85
	movl	8(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 1284 86
	sall	$8, %eax
	.loc 7 1284 79
	addl	%eax, %edx
	.loc 7 1284 96
	movl	8(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	addl	%edx, %eax
	.loc 7 1284 99
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2004:
	.def	__ZL13stbtt__isfontPh;	.scl	3;	.type	32;	.endef
__ZL13stbtt__isfontPh:
LFB2005:
	.loc 7 1290 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 7 1292 8
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 7 1292 4
	cmpb	$49, %al
	jne	L2683
	.loc 7 1292 8 discriminator 1
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	jne	L2683
	.loc 7 1292 8 is_stmt 0 discriminator 2
	movl	8(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	jne	L2683
	.loc 7 1292 8 discriminator 3
	movl	8(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	jne	L2683
	.loc 7 1292 45 is_stmt 1 discriminator 4
	movl	$1, %eax
	jmp	L2684
L2683:
	.loc 7 1293 8
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$116, %eax
	movsbl	%al, %eax
	.loc 7 1293 4
	cmpl	%eax, %edx
	jne	L2685
	.loc 7 1293 8 discriminator 1
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$121, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2685
	.loc 7 1293 8 is_stmt 0 discriminator 2
	movl	8(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$112, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2685
	.loc 7 1293 8 discriminator 3
	movl	8(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$49, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2685
	.loc 7 1293 42 is_stmt 1 discriminator 4
	movl	$1, %eax
	jmp	L2684
L2685:
	.loc 7 1294 8
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$79, %eax
	movsbl	%al, %eax
	.loc 7 1294 4
	cmpl	%eax, %edx
	jne	L2686
	.loc 7 1294 8 discriminator 1
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$84, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2686
	.loc 7 1294 8 is_stmt 0 discriminator 2
	movl	8(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$84, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2686
	.loc 7 1294 8 discriminator 3
	movl	8(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$79, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2686
	.loc 7 1294 42 is_stmt 1 discriminator 4
	movl	$1, %eax
	jmp	L2684
L2686:
	.loc 7 1295 8
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 7 1295 4
	testb	%al, %al
	jne	L2687
	.loc 7 1295 8 discriminator 1
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	cmpb	$1, %al
	jne	L2687
	.loc 7 1295 8 is_stmt 0 discriminator 2
	movl	8(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	jne	L2687
	.loc 7 1295 8 discriminator 3
	movl	8(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	jne	L2687
	.loc 7 1295 42 is_stmt 1 discriminator 4
	movl	$1, %eax
	jmp	L2684
L2687:
	.loc 7 1296 8
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$116, %eax
	movsbl	%al, %eax
	.loc 7 1296 4
	cmpl	%eax, %edx
	jne	L2688
	.loc 7 1296 8 discriminator 1
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$114, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2688
	.loc 7 1296 8 is_stmt 0 discriminator 2
	movl	8(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$117, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2688
	.loc 7 1296 8 discriminator 3
	movl	8(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$101, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2688
	.loc 7 1296 42 is_stmt 1 discriminator 4
	movl	$1, %eax
	jmp	L2684
L2688:
	.loc 7 1297 11
	movl	$0, %eax
L2684:
	.loc 7 1298 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2005:
	.def	__ZL17stbtt__find_tablePhjPKc;	.scl	3;	.type	32;	.endef
__ZL17stbtt__find_tablePhjPKc:
LFB2006:
	.loc 7 1302 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 1303 52
	movl	12(%ebp), %eax
	leal	4(%eax), %edx
	.loc 7 1303 37
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 1303 54
	movzwl	%ax, %eax
	movl	%eax, -16(%ebp)
	.loc 7 1304 17
	movl	12(%ebp), %eax
	addl	$12, %eax
	movl	%eax, -20(%ebp)
LBB509:
	.loc 7 1306 10
	movl	$0, -12(%ebp)
L2693:
	.loc 7 1306 16 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jge	L2690
LBB510:
	.loc 7 1307 39
	movl	-12(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	.loc 7 1307 20
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 7 1308 11
	movl	8(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	16(%ebp), %eax
	movzbl	(%eax), %eax
	movsbl	%al, %eax
	.loc 7 1308 7
	cmpl	%eax, %edx
	jne	L2691
	.loc 7 1308 11 discriminator 1
	movl	-24(%ebp), %eax
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	16(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2691
	.loc 7 1308 11 is_stmt 0 discriminator 2
	movl	-24(%ebp), %eax
	leal	2(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	16(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2691
	.loc 7 1308 11 discriminator 3
	movl	-24(%ebp), %eax
	leal	3(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	16(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2691
	.loc 7 1309 33 is_stmt 1
	movl	-24(%ebp), %eax
	leal	8(%eax), %edx
	.loc 7 1309 24
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	.loc 7 1309 35
	jmp	L2692
L2691:
LBE510:
	.loc 7 1306 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L2693
L2690:
LBE509:
	.loc 7 1311 11
	movl	$0, %eax
L2692:
	.loc 7 1312 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2006:
	.def	__ZL36stbtt_GetFontOffsetForIndex_internalPhi;	.scl	3;	.type	32;	.endef
__ZL36stbtt_GetFontOffsetForIndex_internalPhi:
LFB2007:
	.loc 7 1315 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 1317 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbtt__isfontPh
	.loc 7 1317 38
	testl	%eax, %eax
	setne	%al
	.loc 7 1317 4
	testb	%al, %al
	je	L2695
	.loc 7 1318 25
	cmpl	$0, 12(%ebp)
	jne	L2696
	.loc 7 1318 25 is_stmt 0 discriminator 1
	movl	$0, %eax
	.loc 7 1318 32 is_stmt 1 discriminator 1
	jmp	L2698
L2696:
	.loc 7 1318 25 discriminator 2
	movl	$-1, %eax
	.loc 7 1318 32 discriminator 2
	jmp	L2698
L2695:
LBB511:
	.loc 7 1321 8
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$116, %eax
	movsbl	%al, %eax
	.loc 7 1321 4
	cmpl	%eax, %edx
	jne	L2699
	.loc 7 1321 8 discriminator 1
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$116, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2699
	.loc 7 1321 8 is_stmt 0 discriminator 2
	movl	8(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$99, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2699
	.loc 7 1321 8 discriminator 3
	movl	8(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$102, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2699
LBB512:
LBB513:
	.loc 7 1323 18 is_stmt 1
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	.loc 7 1323 52
	cmpl	$65536, %eax
	je	L2700
	.loc 7 1323 62 discriminator 2
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	.loc 7 1323 52 discriminator 2
	cmpl	$131072, %eax
	jne	L2701
L2700:
	.loc 7 1323 52 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L2702
L2701:
	.loc 7 1323 52 discriminator 4
	movl	$0, %eax
L2702:
	.loc 7 1323 7 is_stmt 1 discriminator 6
	testb	%al, %al
	je	L2699
LBB514:
	.loc 7 1324 32
	movl	8(%ebp), %eax
	addl	$8, %eax
	movl	%eax, (%esp)
	call	__ZL6ttLONGPh
	movl	%eax, -12(%ebp)
	.loc 7 1325 10
	movl	12(%ebp), %eax
	cmpl	-12(%ebp), %eax
	jl	L2704
	.loc 7 1326 21
	movl	$-1, %eax
	jmp	L2698
L2704:
	.loc 7 1327 24
	movl	8(%ebp), %eax
	.loc 7 1327 49
	movl	12(%ebp), %edx
	sall	$2, %edx
	.loc 7 1327 43
	addl	$12, %edx
	.loc 7 1327 24
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	.loc 7 1327 51
	jmp	L2698
L2699:
LBE514:
LBE513:
LBE512:
LBE511:
	.loc 7 1330 12
	movl	$-1, %eax
L2698:
	.loc 7 1331 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2007:
	.def	__ZL31stbtt_GetNumberOfFonts_internalPh;	.scl	3;	.type	32;	.endef
__ZL31stbtt_GetNumberOfFonts_internalPh:
LFB2008:
	.loc 7 1334 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 1336 21
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL13stbtt__isfontPh
	.loc 7 1336 38
	testl	%eax, %eax
	setne	%al
	.loc 7 1336 4
	testb	%al, %al
	je	L2706
	.loc 7 1337 14
	movl	$1, %eax
	jmp	L2707
L2706:
	.loc 7 1340 8
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$116, %eax
	movsbl	%al, %eax
	.loc 7 1340 4
	cmpl	%eax, %edx
	jne	L2708
	.loc 7 1340 8 discriminator 1
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$116, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2708
	.loc 7 1340 8 is_stmt 0 discriminator 2
	movl	8(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$99, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2708
	.loc 7 1340 8 discriminator 3
	movl	8(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	$102, %eax
	movsbl	%al, %eax
	cmpl	%eax, %edx
	jne	L2708
	.loc 7 1342 18 is_stmt 1
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	.loc 7 1342 52
	cmpl	$65536, %eax
	je	L2709
	.loc 7 1342 62 discriminator 2
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	.loc 7 1342 52 discriminator 2
	cmpl	$131072, %eax
	jne	L2710
L2709:
	.loc 7 1342 52 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L2711
L2710:
	.loc 7 1342 52 discriminator 4
	movl	$0, %eax
L2711:
	.loc 7 1342 7 is_stmt 1 discriminator 6
	testb	%al, %al
	je	L2708
	.loc 7 1343 23
	movl	8(%ebp), %eax
	addl	$8, %eax
	movl	%eax, (%esp)
	call	__ZL6ttLONGPh
	.loc 7 1343 41
	jmp	L2707
L2708:
	.loc 7 1346 11
	movl	$0, %eax
L2707:
	.loc 7 1347 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2008:
	.def	__ZL16stbtt__get_subrs10stbtt__bufS_;	.scl	3;	.type	32;	.endef
__ZL16stbtt__get_subrs10stbtt__bufS_:
LFB2009:
	.loc 7 1350 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 7 1351 17
	movl	$0, -12(%ebp)
	.loc 7 1351 31
	movl	$0, -20(%ebp)
	movl	$0, -16(%ebp)
	.loc 7 1353 24
	leal	-20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$18, 4(%esp)
	leal	24(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbtt__dict_get_intsP10stbtt__bufiiPj
	.loc 7 1354 22
	movl	-16(%ebp), %eax
	.loc 7 1354 4
	testl	%eax, %eax
	je	L2713
	.loc 7 1354 41 discriminator 2
	movl	-20(%ebp), %eax
	.loc 7 1354 24 discriminator 2
	testl	%eax, %eax
	jne	L2714
L2713:
	.loc 7 1354 73 discriminator 3
	movl	8(%ebp), %eax
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__new_bufPKvj
	jmp	L2712
L2714:
	.loc 7 1355 64
	movl	-20(%ebp), %eax
	.loc 7 1355 65
	movl	%eax, %ecx
	.loc 7 1355 48
	movl	-16(%ebp), %eax
	.loc 7 1355 65
	movl	%eax, %edx
	leal	-56(%ebp), %eax
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	leal	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL16stbtt__buf_rangePK10stbtt__bufii
	movl	-56(%ebp), %eax
	movl	%eax, -32(%ebp)
	movl	-52(%ebp), %eax
	movl	%eax, -28(%ebp)
	movl	-48(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 7 1356 24
	leal	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$19, 4(%esp)
	leal	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbtt__dict_get_intsP10stbtt__bufiiPj
	.loc 7 1357 8
	movl	-12(%ebp), %eax
	.loc 7 1357 4
	testl	%eax, %eax
	jne	L2716
	.loc 7 1357 48 discriminator 1
	movl	8(%ebp), %eax
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__new_bufPKvj
	jmp	L2712
L2716:
	.loc 7 1358 39
	movl	-16(%ebp), %edx
	.loc 7 1358 40
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1358 19
	movl	%eax, 4(%esp)
	leal	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_seekP10stbtt__bufi
	.loc 7 1359 36
	movl	8(%ebp), %eax
	leal	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbtt__cff_get_indexP10stbtt__buf
L2712:
	.loc 7 1360 1
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2009:
	.section .rdata,"dr"
LC162:
	.ascii "SVG \0"
	.text
	.def	__ZL14stbtt__get_svgP14stbtt_fontinfo;	.scl	3;	.type	32;	.endef
__ZL14stbtt__get_svgP14stbtt_fontinfo:
LFB2010:
	.loc 7 1364 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
LBB515:
	.loc 7 1366 14
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	.loc 7 1366 4
	testl	%eax, %eax
	jns	L2719
LBB516:
	.loc 7 1367 47
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 1367 28
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	$LC162, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, -12(%ebp)
LBB517:
	.loc 7 1368 7
	cmpl	$0, -12(%ebp)
	je	L2720
LBB518:
	.loc 7 1369 46
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 1369 55
	movl	-12(%ebp), %edx
	addl	$2, %edx
	.loc 7 1369 39
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	movl	%eax, -16(%ebp)
	.loc 7 1370 24
	movl	-12(%ebp), %edx
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 7 1370 20
	movl	8(%ebp), %eax
	movl	%edx, 44(%eax)
LBE518:
	jmp	L2719
L2720:
	.loc 7 1372 20
	movl	8(%ebp), %eax
	movl	$0, 44(%eax)
L2719:
LBE517:
LBE516:
LBE515:
	.loc 7 1375 17
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	.loc 7 1376 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2010:
	.section .rdata,"dr"
LC163:
	.ascii "cmap\0"
LC164:
	.ascii "loca\0"
LC165:
	.ascii "head\0"
LC166:
	.ascii "glyf\0"
LC167:
	.ascii "hhea\0"
LC168:
	.ascii "hmtx\0"
LC169:
	.ascii "kern\0"
LC170:
	.ascii "GPOS\0"
LC171:
	.ascii "CFF \0"
LC172:
	.ascii "maxp\0"
	.text
	.def	__ZL23stbtt_InitFont_internalP14stbtt_fontinfoPhi;	.scl	3;	.type	32;	.endef
__ZL23stbtt_InitFont_internalP14stbtt_fontinfoPhi:
LFB2011:
	.loc 7 1379 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$164, %esp
	.cfi_offset 3, -12
	.loc 7 1383 15
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 4(%eax)
	.loc 7 1384 20
	movl	8(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 8(%eax)
	.loc 7 1385 38
	movl	8(%ebp), %ebx
	leal	-136(%ebp), %eax
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__new_bufPKvj
	movl	-136(%ebp), %eax
	movl	%eax, 56(%ebx)
	movl	-132(%ebp), %eax
	movl	%eax, 60(%ebx)
	movl	-128(%ebp), %eax
	movl	%eax, 64(%ebx)
	.loc 7 1387 28
	movl	16(%ebp), %eax
	movl	$LC163, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, -16(%ebp)
	.loc 7 1388 34
	movl	16(%ebp), %eax
	movl	$LC164, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, %edx
	.loc 7 1388 15
	movl	8(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 7 1389 34
	movl	16(%ebp), %eax
	movl	$LC165, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, %edx
	.loc 7 1389 15
	movl	8(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 7 1390 34
	movl	16(%ebp), %eax
	movl	$LC166, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, %edx
	.loc 7 1390 15
	movl	8(%ebp), %eax
	movl	%edx, 24(%eax)
	.loc 7 1391 34
	movl	16(%ebp), %eax
	movl	$LC167, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, %edx
	.loc 7 1391 15
	movl	8(%ebp), %eax
	movl	%edx, 28(%eax)
	.loc 7 1392 34
	movl	16(%ebp), %eax
	movl	$LC168, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, %edx
	.loc 7 1392 15
	movl	8(%ebp), %eax
	movl	%edx, 32(%eax)
	.loc 7 1393 34
	movl	16(%ebp), %eax
	movl	$LC169, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, %edx
	.loc 7 1393 15
	movl	8(%ebp), %eax
	movl	%edx, 36(%eax)
	.loc 7 1394 34
	movl	16(%ebp), %eax
	movl	$LC170, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, %edx
	.loc 7 1394 15
	movl	8(%ebp), %eax
	movl	%edx, 40(%eax)
	.loc 7 1396 4
	cmpl	$0, -16(%ebp)
	je	L2724
	.loc 7 1396 24 discriminator 1
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	.loc 7 1396 14 discriminator 1
	testl	%eax, %eax
	je	L2724
	.loc 7 1396 39 discriminator 2
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 1396 29 discriminator 2
	testl	%eax, %eax
	je	L2724
	.loc 7 1396 54 discriminator 3
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 7 1396 44 discriminator 3
	testl	%eax, %eax
	jne	L2725
L2724:
	.loc 7 1397 14
	movl	$0, %eax
	jmp	L2726
L2725:
LBB519:
	.loc 7 1398 14
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	.loc 7 1398 4
	testl	%eax, %eax
	je	L2727
	.loc 7 1400 18
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 7 1400 7
	testl	%eax, %eax
	jne	L2728
	.loc 7 1400 31 discriminator 1
	movl	$0, %eax
	jmp	L2726
L2727:
LBB520:
	.loc 7 1404 20
	movl	$2, -96(%ebp)
	.loc 7 1404 32
	movl	$0, -100(%ebp)
	.loc 7 1404 49
	movl	$0, -104(%ebp)
	.loc 7 1404 65
	movl	$0, -108(%ebp)
	.loc 7 1407 30
	movl	16(%ebp), %eax
	movl	$LC171, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, -20(%ebp)
	.loc 7 1408 7
	cmpl	$0, -20(%ebp)
	jne	L2729
	.loc 7 1408 24 discriminator 1
	movl	$0, %eax
	jmp	L2726
L2729:
	.loc 7 1410 47
	movl	8(%ebp), %ebx
	leal	-136(%ebp), %eax
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__new_bufPKvj
	movl	-136(%ebp), %eax
	movl	%eax, 104(%ebx)
	movl	-132(%ebp), %eax
	movl	%eax, 108(%ebx)
	movl	-128(%ebp), %eax
	movl	%eax, 112(%ebx)
	.loc 7 1411 46
	movl	8(%ebp), %ebx
	leal	-136(%ebp), %eax
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__new_bufPKvj
	movl	-136(%ebp), %eax
	movl	%eax, 116(%ebx)
	movl	-132(%ebp), %eax
	movl	%eax, 120(%ebx)
	movl	-128(%ebp), %eax
	movl	%eax, 124(%ebx)
	.loc 7 1414 38
	movl	12(%ebp), %edx
	movl	-20(%ebp), %eax
	addl	%eax, %edx
	.loc 7 1414 57
	movl	8(%ebp), %ebx
	leal	-136(%ebp), %eax
	movl	$536870912, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__new_bufPKvj
	movl	-136(%ebp), %eax
	movl	%eax, 56(%ebx)
	movl	-132(%ebp), %eax
	movl	%eax, 60(%ebx)
	movl	-128(%ebp), %eax
	movl	%eax, 64(%ebx)
	.loc 7 1415 9
	movl	8(%ebp), %eax
	movl	56(%eax), %edx
	movl	%edx, -68(%ebp)
	movl	60(%eax), %edx
	movl	%edx, -64(%ebp)
	movl	64(%eax), %eax
	movl	%eax, -60(%ebp)
	.loc 7 1418 22
	movl	$2, 4(%esp)
	leal	-68(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_skipP10stbtt__bufi
	.loc 7 1419 42
	leal	-68(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	.loc 7 1419 22
	movzbl	%al, %eax
	movl	%eax, 4(%esp)
	leal	-68(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_seekP10stbtt__bufi
	.loc 7 1423 30
	leal	-56(%ebp), %eax
	leal	-68(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbtt__cff_get_indexP10stbtt__buf
	.loc 7 1424 43
	leal	-136(%ebp), %eax
	leal	-68(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbtt__cff_get_indexP10stbtt__buf
	movl	-136(%ebp), %eax
	movl	%eax, -92(%ebp)
	movl	-132(%ebp), %eax
	movl	%eax, -88(%ebp)
	movl	-128(%ebp), %eax
	movl	%eax, -84(%ebp)
	.loc 7 1425 51
	leal	-136(%ebp), %eax
	movl	$0, 16(%esp)
	movl	-92(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-88(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-84(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbtt__cff_index_get10stbtt__bufi
	movl	-136(%ebp), %eax
	movl	%eax, -80(%ebp)
	movl	-132(%ebp), %eax
	movl	%eax, -76(%ebp)
	movl	-128(%ebp), %eax
	movl	%eax, -72(%ebp)
	.loc 7 1426 30
	leal	-44(%ebp), %eax
	leal	-68(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbtt__cff_get_indexP10stbtt__buf
	.loc 7 1427 45
	movl	8(%ebp), %ebx
	leal	-136(%ebp), %eax
	leal	-68(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbtt__cff_get_indexP10stbtt__buf
	movl	-136(%ebp), %eax
	movl	%eax, 80(%ebx)
	movl	-132(%ebp), %eax
	movl	%eax, 84(%ebx)
	movl	-128(%ebp), %eax
	movl	%eax, 88(%ebx)
	.loc 7 1429 27
	leal	-100(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$17, 4(%esp)
	leal	-80(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbtt__dict_get_intsP10stbtt__bufiiPj
	.loc 7 1430 27
	leal	-96(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$262, 4(%esp)
	leal	-80(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbtt__dict_get_intsP10stbtt__bufiiPj
	.loc 7 1431 27
	leal	-104(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$292, 4(%esp)
	leal	-80(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbtt__dict_get_intsP10stbtt__bufiiPj
	.loc 7 1432 27
	leal	-108(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$293, 4(%esp)
	leal	-80(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbtt__dict_get_intsP10stbtt__bufiiPj
	.loc 7 1433 48
	movl	8(%ebp), %ebx
	leal	-136(%ebp), %eax
	movl	-80(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-76(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	-72(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	-68(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-64(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-60(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, (%esp)
	call	__ZL16stbtt__get_subrs10stbtt__bufS_
	movl	-136(%ebp), %eax
	movl	%eax, 92(%ebx)
	movl	-132(%ebp), %eax
	movl	%eax, 96(%ebx)
	movl	-128(%ebp), %eax
	movl	%eax, 100(%ebx)
	.loc 7 1436 18
	movl	-96(%ebp), %eax
	.loc 7 1436 7
	cmpl	$2, %eax
	je	L2731
	.loc 7 1436 31 discriminator 1
	movl	$0, %eax
	jmp	L2726
L2731:
	.loc 7 1437 23
	movl	-100(%ebp), %eax
	.loc 7 1437 7
	testl	%eax, %eax
	jne	L2732
	.loc 7 1437 36 discriminator 1
	movl	$0, %eax
	jmp	L2726
L2732:
	.loc 7 1439 21
	movl	-104(%ebp), %eax
	.loc 7 1439 7
	testl	%eax, %eax
	je	L2733
	.loc 7 1441 14
	movl	-108(%ebp), %eax
	.loc 7 1441 10
	testl	%eax, %eax
	jne	L2734
	.loc 7 1441 35 discriminator 1
	movl	$0, %eax
	jmp	L2726
L2734:
	.loc 7 1442 25
	movl	-104(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-68(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_seekP10stbtt__bufi
	.loc 7 1443 51
	movl	8(%ebp), %ebx
	leal	-136(%ebp), %eax
	leal	-68(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbtt__cff_get_indexP10stbtt__buf
	movl	-136(%ebp), %eax
	movl	%eax, 104(%ebx)
	movl	-132(%ebp), %eax
	movl	%eax, 108(%ebx)
	movl	-128(%ebp), %eax
	movl	%eax, 112(%ebx)
	.loc 7 1444 63
	movl	-60(%ebp), %eax
	movl	%eax, %edx
	.loc 7 1444 67
	movl	-108(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 1444 79
	movl	%eax, %ecx
	movl	-108(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %ebx
	leal	-136(%ebp), %eax
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	leal	-68(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL16stbtt__buf_rangePK10stbtt__bufii
	movl	-136(%ebp), %eax
	movl	%eax, 116(%ebx)
	movl	-132(%ebp), %eax
	movl	%eax, 120(%ebx)
	movl	-128(%ebp), %eax
	movl	%eax, 124(%ebx)
L2733:
	.loc 7 1447 22
	movl	-100(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-68(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_seekP10stbtt__bufi
	.loc 7 1448 50
	movl	8(%ebp), %ebx
	leal	-136(%ebp), %eax
	leal	-68(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbtt__cff_get_indexP10stbtt__buf
	movl	-136(%ebp), %eax
	movl	%eax, 68(%ebx)
	movl	-132(%ebp), %eax
	movl	%eax, 72(%ebx)
	movl	-128(%ebp), %eax
	movl	%eax, 76(%ebx)
L2728:
LBE520:
LBE519:
	.loc 7 1451 25
	movl	16(%ebp), %eax
	movl	$LC172, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, -24(%ebp)
	.loc 7 1452 4
	cmpl	$0, -24(%ebp)
	je	L2735
	.loc 7 1453 40
	movl	-24(%ebp), %eax
	leal	4(%eax), %edx
	.loc 7 1453 33
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %edx
	.loc 7 1453 23
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	jmp	L2736
L2735:
	.loc 7 1455 23
	movl	8(%ebp), %eax
	movl	$65535, 12(%eax)
L2736:
	.loc 7 1457 14
	movl	8(%ebp), %eax
	movl	$-1, 44(%eax)
	.loc 7 1462 37
	movl	-16(%ebp), %eax
	leal	2(%eax), %edx
	.loc 7 1462 24
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 1462 14
	movzwl	%ax, %eax
	movl	%eax, -28(%ebp)
	.loc 7 1463 20
	movl	8(%ebp), %eax
	movl	$0, 48(%eax)
LBB521:
	.loc 7 1464 10
	movl	$0, -12(%ebp)
L2742:
	.loc 7 1464 16 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jge	L2737
LBB522:
	.loc 7 1465 51
	movl	-12(%ebp), %eax
	sall	$3, %eax
	.loc 7 1465 47
	movl	%eax, %edx
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1465 20
	addl	$4, %eax
	movl	%eax, -32(%ebp)
	.loc 7 1467 22
	movl	12(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	testl	%eax, %eax
	je	L2738
	cmpl	$3, %eax
	jne	L2739
	.loc 7 1469 50
	movl	-32(%ebp), %eax
	leal	2(%eax), %edx
	.loc 7 1469 29
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	cmpl	$1, %eax
	je	L2740
	cmpl	$10, %eax
	jne	L2744
L2740:
	.loc 7 1473 72
	movl	-32(%ebp), %eax
	leal	4(%eax), %edx
	.loc 7 1473 51
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	movl	%eax, %edx
	.loc 7 1473 42
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 7 1473 35
	movl	8(%ebp), %eax
	movl	%edx, 48(%eax)
	.loc 7 1474 19
	nop
	.loc 7 1476 13
	jmp	L2744
L2738:
	.loc 7 1480 66
	movl	-32(%ebp), %eax
	leal	4(%eax), %edx
	.loc 7 1480 45
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	movl	%eax, %edx
	.loc 7 1480 36
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 7 1480 29
	movl	8(%ebp), %eax
	movl	%edx, 48(%eax)
	.loc 7 1481 13
	jmp	L2739
L2744:
	.loc 7 1476 13
	nop
L2739:
LBE522:
	.loc 7 1464 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L2742
L2737:
LBE521:
	.loc 7 1484 14
	movl	8(%ebp), %eax
	movl	48(%eax), %eax
	.loc 7 1484 4
	testl	%eax, %eax
	jne	L2743
	.loc 7 1485 14
	movl	$0, %eax
	jmp	L2726
L2743:
	.loc 7 1487 49
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	.loc 7 1487 54
	leal	50(%eax), %edx
	.loc 7 1487 37
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %edx
	.loc 7 1487 27
	movl	8(%ebp), %eax
	movl	%edx, 52(%eax)
	.loc 7 1488 11
	movl	$1, %eax
L2726:
	.loc 7 1489 1
	addl	$164, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2011:
	.section .rdata,"dr"
	.align 4
LC173:
	.ascii "unicode_codepoint <= ttUSHORT(data + endCount + 2*item)\0"
	.text
	.globl	_stbtt_FindGlyphIndex
	.def	_stbtt_FindGlyphIndex;	.scl	2;	.type	32;	.endef
_stbtt_FindGlyphIndex:
LFB2012:
	.loc 7 1492 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$100, %esp
	.cfi_offset 3, -12
	.loc 7 1493 17
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -28(%ebp)
	.loc 7 1494 35
	movl	8(%ebp), %eax
	movl	48(%eax), %eax
	.loc 7 1494 17
	movl	%eax, -32(%ebp)
	.loc 7 1496 34
	movl	-28(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -34(%ebp)
LBB523:
	.loc 7 1497 4
	cmpw	$0, -34(%ebp)
	jne	L2746
LBB524:
	.loc 7 1498 53
	movl	-32(%ebp), %eax
	leal	2(%eax), %edx
	.loc 7 1498 35
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 1498 56
	movzwl	%ax, %eax
	movl	%eax, -40(%ebp)
	.loc 7 1499 36
	movl	-40(%ebp), %eax
	subl	$6, %eax
	.loc 7 1499 7
	cmpl	%eax, 12(%ebp)
	jge	L2747
	.loc 7 1500 17
	movl	12(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	leal	6(%eax), %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	jmp	L2748
L2747:
	.loc 7 1501 14
	movl	$0, %eax
	jmp	L2748
L2746:
LBE524:
LBB525:
LBB526:
	.loc 7 1502 11
	cmpw	$6, -34(%ebp)
	jne	L2749
LBB527:
	.loc 7 1503 54
	movl	-32(%ebp), %eax
	leal	6(%eax), %edx
	.loc 7 1503 36
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 1503 57
	movzwl	%ax, %eax
	movl	%eax, -44(%ebp)
	.loc 7 1504 54
	movl	-32(%ebp), %eax
	leal	8(%eax), %edx
	.loc 7 1504 36
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 1504 57
	movzwl	%ax, %eax
	movl	%eax, -48(%ebp)
	.loc 7 1505 11
	movl	12(%ebp), %eax
	.loc 7 1505 7
	cmpl	%eax, -44(%ebp)
	ja	L2750
	.loc 7 1505 96 discriminator 1
	movl	-44(%ebp), %edx
	movl	-48(%ebp), %eax
	addl	%eax, %edx
	.loc 7 1505 56 discriminator 1
	movl	12(%ebp), %eax
	.loc 7 1505 53 discriminator 1
	cmpl	%eax, %edx
	jbe	L2750
	.loc 7 1506 69
	movl	12(%ebp), %eax
	subl	-44(%ebp), %eax
	.loc 7 1506 77
	leal	(%eax,%eax), %edx
	.loc 7 1506 48
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	leal	10(%eax), %edx
	.loc 7 1506 25
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 1506 79
	movzwl	%ax, %eax
	jmp	L2748
L2750:
	.loc 7 1507 14
	movl	$0, %eax
	jmp	L2748
L2749:
LBE527:
LBB528:
LBB529:
	.loc 7 1508 11
	cmpw	$2, -34(%ebp)
	jne	L2751
	.loc 7 1509 7
	movl	$1509, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC5, (%esp)
	call	__assert
	.loc 7 1510 14
	movl	$0, %eax
	jmp	L2748
L2751:
LBB530:
LBB531:
	.loc 7 1511 11
	cmpw	$4, -34(%ebp)
	jne	L2752
LBB532:
	.loc 7 1512 54
	movl	-32(%ebp), %eax
	leal	6(%eax), %edx
	.loc 7 1512 39
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 1512 58
	sarl	%eax
	.loc 7 1512 61
	movw	%ax, -50(%ebp)
	.loc 7 1513 57
	movl	-32(%ebp), %eax
	leal	8(%eax), %edx
	.loc 7 1513 42
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 1513 61
	sarl	%eax
	.loc 7 1513 64
	movw	%ax, -10(%ebp)
	.loc 7 1514 59
	movl	-32(%ebp), %eax
	leal	10(%eax), %edx
	.loc 7 1514 44
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -12(%ebp)
	.loc 7 1515 56
	movl	-32(%ebp), %eax
	leal	12(%eax), %edx
	.loc 7 1515 41
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 1515 61
	sarl	%eax
	.loc 7 1515 64
	movw	%ax, -52(%ebp)
	.loc 7 1518 20
	movl	-32(%ebp), %eax
	addl	$14, %eax
	movl	%eax, -56(%ebp)
	.loc 7 1519 20
	movl	-56(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 7 1521 7
	cmpl	$65535, 12(%ebp)
	jle	L2753
	.loc 7 1522 17
	movl	$0, %eax
	jmp	L2748
L2753:
	.loc 7 1526 67
	movzwl	-52(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 7 1526 55
	movl	-16(%ebp), %eax
	addl	%eax, %edx
	.loc 7 1526 40
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 1526 29
	cmpl	%eax, 12(%ebp)
	setge	%al
	.loc 7 1526 7
	testb	%al, %al
	je	L2754
	.loc 7 1527 30
	movzwl	-52(%ebp), %eax
	addl	%eax, %eax
	.loc 7 1527 17
	addl	%eax, -16(%ebp)
L2754:
	.loc 7 1530 14
	subl	$2, -16(%ebp)
L2757:
	.loc 7 1531 14
	cmpw	$0, -12(%ebp)
	je	L2755
LBB533:
	.loc 7 1533 22
	movzwl	-10(%ebp), %eax
	sarl	%eax
	movw	%ax, -10(%ebp)
	.loc 7 1534 52
	movzwl	-10(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 7 1534 39
	movl	-16(%ebp), %eax
	addl	%eax, %edx
	.loc 7 1534 24
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -58(%ebp)
	.loc 7 1535 32
	movzwl	-58(%ebp), %eax
	.loc 7 1535 10
	cmpl	%eax, 12(%ebp)
	jle	L2756
	.loc 7 1536 34
	movzwl	-10(%ebp), %eax
	addl	%eax, %eax
	.loc 7 1536 20
	addl	%eax, -16(%ebp)
L2756:
	.loc 7 1537 10
	subw	$1, -12(%ebp)
LBE533:
	.loc 7 1531 7
	jmp	L2757
L2755:
	.loc 7 1539 14
	addl	$2, -16(%ebp)
LBB534:
	.loc 7 1543 54
	movl	-16(%ebp), %eax
	subl	-56(%ebp), %eax
	.loc 7 1543 66
	shrl	%eax
	.loc 7 1543 23
	movw	%ax, -60(%ebp)
	.loc 7 1545 10
	movzwl	-60(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	movl	-56(%ebp), %eax
	addl	%eax, %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	cmpl	%eax, 12(%ebp)
	jle	L2760
	.loc 7 1545 10 is_stmt 0 discriminator 2
	movl	$1545, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC173, (%esp)
	call	__assert
L2760:
	.loc 7 1546 59 is_stmt 1
	movzwl	-50(%ebp), %eax
	addl	%eax, %eax
	.loc 7 1546 66
	movl	%eax, %edx
	.loc 7 1546 69
	movzwl	-60(%ebp), %eax
	addl	%eax, %eax
	.loc 7 1546 66
	addl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	leal	16(%eax), %edx
	.loc 7 1546 26
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -62(%ebp)
	.loc 7 1547 32
	movzwl	-62(%ebp), %eax
	.loc 7 1547 10
	cmpl	%eax, 12(%ebp)
	jge	L2761
	.loc 7 1548 20
	movl	$0, %eax
	jmp	L2748
L2761:
	.loc 7 1550 60
	movzwl	-50(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	.loc 7 1550 67
	movl	%eax, %edx
	.loc 7 1550 70
	movzwl	-60(%ebp), %eax
	addl	%eax, %eax
	.loc 7 1550 67
	addl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	leal	16(%eax), %edx
	.loc 7 1550 27
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -64(%ebp)
	.loc 7 1551 10
	cmpw	$0, -64(%ebp)
	jne	L2762
	.loc 7 1552 96
	movzwl	-50(%ebp), %eax
	sall	$2, %eax
	.loc 7 1552 103
	movl	%eax, %edx
	.loc 7 1552 106
	movzwl	-60(%ebp), %eax
	addl	%eax, %eax
	.loc 7 1552 103
	addl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	leal	16(%eax), %edx
	.loc 7 1552 63
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movl	%eax, %edx
	.loc 7 1552 54
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1552 112
	movzwl	%ax, %eax
	jmp	L2748
L2762:
	.loc 7 1554 40
	movzwl	-64(%ebp), %eax
	.loc 7 1554 60
	movzwl	-62(%ebp), %edx
	movl	12(%ebp), %ecx
	subl	%edx, %ecx
	movl	%ecx, %edx
	.loc 7 1554 67
	addl	%edx, %edx
	.loc 7 1554 40
	addl	%eax, %edx
	.loc 7 1554 70
	movl	-32(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 7 1554 107
	movzwl	-60(%ebp), %eax
	addl	%eax, %eax
	.loc 7 1554 104
	movl	%eax, %ebx
	.loc 7 1554 97
	movzwl	-50(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	.loc 7 1554 104
	addl	%ebx, %eax
	addl	%ecx, %eax
	leal	16(%eax), %edx
	.loc 7 1554 25
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 1554 112
	movzwl	%ax, %eax
	jmp	L2748
L2752:
LBE534:
LBE532:
LBB535:
LBB536:
	.loc 7 1556 11
	cmpw	$12, -34(%ebp)
	je	L2763
	.loc 7 1556 28 discriminator 1
	cmpw	$13, -34(%ebp)
	jne	L2764
L2763:
LBB537:
	.loc 7 1557 52
	movl	-32(%ebp), %eax
	leal	12(%eax), %edx
	.loc 7 1557 37
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	movl	%eax, -68(%ebp)
	.loc 7 1559 11
	movl	$0, -20(%ebp)
	.loc 7 1559 21
	movl	-68(%ebp), %eax
	movl	%eax, -24(%ebp)
L2770:
	.loc 7 1561 18
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L2765
LBB538:
	.loc 7 1562 40
	movl	-24(%ebp), %eax
	subl	-20(%ebp), %eax
	.loc 7 1562 46
	sarl	%eax
	movl	%eax, %edx
	.loc 7 1562 22
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -72(%ebp)
	.loc 7 1563 65
	movl	-72(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	.loc 7 1563 61
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	leal	16(%eax), %edx
	.loc 7 1563 43
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	movl	%eax, -76(%ebp)
	.loc 7 1564 63
	movl	-72(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	.loc 7 1564 59
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1564 66
	leal	20(%eax), %edx
	.loc 7 1564 41
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	movl	%eax, -80(%ebp)
LBB539:
	.loc 7 1565 14
	movl	12(%ebp), %eax
	.loc 7 1565 10
	cmpl	%eax, -76(%ebp)
	jbe	L2766
	.loc 7 1566 18
	movl	-72(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	L2770
L2766:
LBB540:
LBB541:
	.loc 7 1567 19
	movl	12(%ebp), %eax
	.loc 7 1567 15
	cmpl	%eax, -80(%ebp)
	jnb	L2768
	.loc 7 1568 17
	movl	-72(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -20(%ebp)
	jmp	L2770
L2768:
LBB542:
	.loc 7 1570 69
	movl	-72(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	.loc 7 1570 65
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1570 72
	leal	24(%eax), %edx
	.loc 7 1570 47
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	movl	%eax, -84(%ebp)
	.loc 7 1571 13
	cmpw	$12, -34(%ebp)
	jne	L2769
	.loc 7 1572 35
	movl	12(%ebp), %edx
	movl	-84(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1572 54
	subl	-76(%ebp), %eax
	.loc 7 1572 55
	jmp	L2748
L2769:
	.loc 7 1574 23
	movl	-84(%ebp), %eax
	jmp	L2748
L2765:
LBE542:
LBE541:
LBE540:
LBE539:
LBE538:
	.loc 7 1577 14
	movl	$0, %eax
	jmp	L2748
L2764:
LBE537:
LBE536:
LBE535:
LBE531:
LBE530:
LBE529:
LBE528:
LBE526:
LBE525:
LBE523:
	.loc 7 1580 4
	movl	$1580, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC5, (%esp)
	call	__assert
	.loc 7 1581 11
	movl	$0, %eax
L2748:
	.loc 7 1582 1
	addl	$100, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2012:
	.globl	_stbtt_GetCodepointShape
	.def	_stbtt_GetCodepointShape;	.scl	2;	.type	32;	.endef
_stbtt_GetCodepointShape:
LFB2013:
	.loc 7 1585 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 1586 30
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%eax, %edx
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphShape
	.loc 7 1587 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2013:
	.def	__ZL15stbtt_setvertexP12stbtt_vertexhiiii;	.scl	3;	.type	32;	.endef
__ZL15stbtt_setvertexP12stbtt_vertexhiiii:
LFB2014:
	.loc 7 1590 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$4, %esp
	movl	12(%ebp), %eax
	movb	%al, -4(%ebp)
	.loc 7 1591 12
	movl	8(%ebp), %eax
	movzbl	-4(%ebp), %edx
	movb	%dl, 12(%eax)
	.loc 7 1592 9
	movl	16(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movw	%dx, (%eax)
	.loc 7 1593 9
	movl	20(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movw	%dx, 2(%eax)
	.loc 7 1594 10
	movl	24(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movw	%dx, 4(%eax)
	.loc 7 1595 10
	movl	28(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movw	%dx, 6(%eax)
	.loc 7 1596 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2014:
	.section .rdata,"dr"
LC174:
	.ascii "!info->cff.size\0"
	.text
	.def	__ZL20stbtt__GetGlyfOffsetPK14stbtt_fontinfoi;	.scl	3;	.type	32;	.endef
__ZL20stbtt__GetGlyfOffsetPK14stbtt_fontinfoi:
LFB2015:
	.loc 7 1599 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 7 1602 4
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	testl	%eax, %eax
	je	L2777
	.loc 7 1602 4 is_stmt 0 discriminator 2
	movl	$1602, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC174, (%esp)
	call	__assert
L2777:
	.loc 7 1604 29 is_stmt 1
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	.loc 7 1604 4
	cmpl	%eax, 12(%ebp)
	jl	L2778
	.loc 7 1604 48 discriminator 1
	movl	$-1, %eax
	jmp	L2779
L2778:
	.loc 7 1605 14
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	.loc 7 1605 4
	cmpl	$1, %eax
	jle	L2780
	.loc 7 1605 48 discriminator 1
	movl	$-1, %eax
	jmp	L2779
L2780:
	.loc 7 1607 14
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	.loc 7 1607 4
	testl	%eax, %eax
	jne	L2781
	.loc 7 1608 18
	movl	8(%ebp), %eax
	movl	24(%eax), %ebx
	.loc 7 1608 40
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 1608 53
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, %ecx
	.loc 7 1608 72
	movl	12(%ebp), %eax
	addl	%eax, %eax
	.loc 7 1608 58
	addl	%ecx, %eax
	.loc 7 1608 33
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 1608 77
	addl	%eax, %eax
	.loc 7 1608 10
	addl	%ebx, %eax
	movl	%eax, -12(%ebp)
	.loc 7 1609 18
	movl	8(%ebp), %eax
	movl	24(%eax), %ebx
	.loc 7 1609 40
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 1609 53
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, %ecx
	.loc 7 1609 72
	movl	12(%ebp), %eax
	addl	%eax, %eax
	.loc 7 1609 58
	addl	%ecx, %eax
	.loc 7 1609 76
	addl	$2, %eax
	.loc 7 1609 33
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 1609 81
	addl	%eax, %eax
	.loc 7 1609 10
	addl	%ebx, %eax
	movl	%eax, -16(%ebp)
	jmp	L2782
L2781:
	.loc 7 1611 18
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, %ebx
	.loc 7 1611 40
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 1611 53
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, %ecx
	.loc 7 1611 72
	movl	12(%ebp), %eax
	sall	$2, %eax
	.loc 7 1611 58
	addl	%ecx, %eax
	.loc 7 1611 33
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	.loc 7 1611 23
	addl	%ebx, %eax
	.loc 7 1611 10
	movl	%eax, -12(%ebp)
	.loc 7 1612 18
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, %ebx
	.loc 7 1612 40
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 1612 53
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, %ecx
	.loc 7 1612 72
	movl	12(%ebp), %eax
	sall	$2, %eax
	.loc 7 1612 58
	addl	%ecx, %eax
	.loc 7 1612 76
	addl	$4, %eax
	.loc 7 1612 33
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	.loc 7 1612 23
	addl	%ebx, %eax
	.loc 7 1612 10
	movl	%eax, -16(%ebp)
L2782:
	.loc 7 1615 18
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	je	L2783
	.loc 7 1615 18 is_stmt 0 discriminator 1
	movl	-12(%ebp), %eax
	.loc 7 1615 25 is_stmt 1 discriminator 1
	jmp	L2785
L2783:
	.loc 7 1615 18 discriminator 2
	movl	$-1, %eax
L2785:
	.loc 7 1615 25
	nop
L2779:
	.loc 7 1616 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2015:
	.globl	_stbtt_GetGlyphBox
	.def	_stbtt_GetGlyphBox;	.scl	2;	.type	32;	.endef
_stbtt_GetGlyphBox:
LFB2016:
	.loc 7 1621 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
LBB543:
	.loc 7 1622 18
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	.loc 7 1622 4
	testl	%eax, %eax
	je	L2787
	.loc 7 1623 28
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbtt__GetGlyphInfoT2PK14stbtt_fontinfoiPiS2_S2_S2_
	jmp	L2788
L2787:
LBB544:
	.loc 7 1625 35
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbtt__GetGlyfOffsetPK14stbtt_fontinfoi
	movl	%eax, -12(%ebp)
	.loc 7 1626 7
	cmpl	$0, -12(%ebp)
	jns	L2789
	.loc 7 1626 25 discriminator 1
	movl	$0, %eax
	jmp	L2790
L2789:
	.loc 7 1628 7
	cmpl	$0, 16(%ebp)
	je	L2791
	.loc 7 1628 35 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 1628 44 discriminator 1
	movl	-12(%ebp), %edx
	addl	$2, %edx
	.loc 7 1628 28 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 1628 19 discriminator 1
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
L2791:
	.loc 7 1629 7
	cmpl	$0, 20(%ebp)
	je	L2792
	.loc 7 1629 35 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 1629 44 discriminator 1
	movl	-12(%ebp), %edx
	addl	$4, %edx
	.loc 7 1629 28 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 1629 19 discriminator 1
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
L2792:
	.loc 7 1630 7
	cmpl	$0, 24(%ebp)
	je	L2793
	.loc 7 1630 35 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 1630 44 discriminator 1
	movl	-12(%ebp), %edx
	addl	$6, %edx
	.loc 7 1630 28 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 1630 19 discriminator 1
	movl	24(%ebp), %eax
	movl	%edx, (%eax)
L2793:
	.loc 7 1631 7
	cmpl	$0, 28(%ebp)
	je	L2788
	.loc 7 1631 35 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 1631 44 discriminator 1
	movl	-12(%ebp), %edx
	addl	$8, %edx
	.loc 7 1631 28 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 1631 19 discriminator 1
	movl	28(%ebp), %eax
	movl	%edx, (%eax)
L2788:
LBE544:
LBE543:
	.loc 7 1633 11
	movl	$1, %eax
L2790:
	.loc 7 1634 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2016:
	.globl	_stbtt_GetCodepointBox
	.def	_stbtt_GetCodepointBox;	.scl	2;	.type	32;	.endef
_stbtt_GetCodepointBox:
LFB2017:
	.loc 7 1637 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 1638 28
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%eax, %edx
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphBox
	.loc 7 1639 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2017:
	.globl	_stbtt_IsGlyphEmpty
	.def	_stbtt_IsGlyphEmpty;	.scl	2;	.type	32;	.endef
_stbtt_IsGlyphEmpty:
LFB2018:
	.loc 7 1642 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 1645 18
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	.loc 7 1645 4
	testl	%eax, %eax
	je	L2797
	.loc 7 1646 35
	movl	$0, 20(%esp)
	movl	$0, 16(%esp)
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbtt__GetGlyphInfoT2PK14stbtt_fontinfoiPiS2_S2_S2_
	.loc 7 1646 79
	testl	%eax, %eax
	sete	%al
	.loc 7 1646 82
	movzbl	%al, %eax
	jmp	L2798
L2797:
	.loc 7 1647 28
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbtt__GetGlyfOffsetPK14stbtt_fontinfoi
	movl	%eax, -12(%ebp)
	.loc 7 1648 4
	cmpl	$0, -12(%ebp)
	jns	L2799
	.loc 7 1648 22 discriminator 1
	movl	$1, %eax
	jmp	L2798
L2799:
	.loc 7 1649 37
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 1649 30
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movw	%ax, -14(%ebp)
	.loc 7 1650 28
	cmpw	$0, -14(%ebp)
	sete	%al
	.loc 7 1650 31
	movzbl	%al, %eax
L2798:
	.loc 7 1651 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2018:
	.def	__ZL18stbtt__close_shapeP12stbtt_vertexiiiiiiiii;	.scl	3;	.type	32;	.endef
__ZL18stbtt__close_shapeP12stbtt_vertexiiiiiiiii:
LFB2019:
	.loc 7 1655 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$24, %esp
	.cfi_offset 3, -12
	.loc 7 1656 4
	cmpl	$0, 20(%ebp)
	je	L2801
	.loc 7 1657 7
	cmpl	$0, 16(%ebp)
	je	L2802
	.loc 7 1658 83
	movl	44(%ebp), %edx
	movl	36(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1658 25
	sarl	%eax
	movl	%eax, %ebx
	.loc 7 1658 70
	movl	40(%ebp), %edx
	movl	32(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1658 25
	sarl	%eax
	movl	%eax, %ecx
	.loc 7 1658 48
	movl	12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, 12(%ebp)
	.loc 7 1658 50
	imull	$14, %eax, %edx
	.loc 7 1658 25
	movl	8(%ebp), %eax
	addl	%eax, %edx
	movl	44(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%ebx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	$3, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL15stbtt_setvertexP12stbtt_vertexhiiii
L2802:
	.loc 7 1659 45
	movl	12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, 12(%ebp)
	.loc 7 1659 47
	imull	$14, %eax, %edx
	.loc 7 1659 22
	movl	8(%ebp), %eax
	addl	%eax, %edx
	movl	36(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$3, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL15stbtt_setvertexP12stbtt_vertexhiiii
	jmp	L2803
L2801:
	.loc 7 1661 7
	cmpl	$0, 16(%ebp)
	je	L2804
	.loc 7 1662 48
	movl	12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, 12(%ebp)
	.loc 7 1662 50
	imull	$14, %eax, %edx
	.loc 7 1662 25
	movl	8(%ebp), %eax
	addl	%eax, %edx
	movl	44(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$3, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL15stbtt_setvertexP12stbtt_vertexhiiii
	jmp	L2803
L2804:
	.loc 7 1664 48
	movl	12(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, 12(%ebp)
	.loc 7 1664 50
	imull	$14, %eax, %edx
	.loc 7 1664 25
	movl	8(%ebp), %eax
	addl	%eax, %edx
	movl	$0, 20(%esp)
	movl	$0, 16(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$2, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL15stbtt_setvertexP12stbtt_vertexhiiii
L2803:
	.loc 7 1666 11
	movl	12(%ebp), %eax
	.loc 7 1667 1
	addl	$24, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2019:
	.def	__ZL22stbtt__GetGlyphShapeTTPK14stbtt_fontinfoiPP12stbtt_vertex;	.scl	3;	.type	32;	.endef
__ZL22stbtt__GetGlyphShapeTTPK14stbtt_fontinfoiPP12stbtt_vertex:
LFB2020:
	.loc 7 1670 1
	.cfi_startproc
	.cfi_personality 0,___gxx_personality_v0
	.cfi_lsda 0,LLSDA2020
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$244, %esp
	.cfi_offset 3, -12
	.loc 7 1673 17
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -88(%ebp)
	.loc 7 1674 18
	movl	$0, -12(%ebp)
	.loc 7 1675 8
	movl	$0, -16(%ebp)
	.loc 7 1676 32
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
LEHB0:
	call	__ZL20stbtt__GetGlyfOffsetPK14stbtt_fontinfoi
LEHE0:
	movl	%eax, -92(%ebp)
	.loc 7 1678 15
	movl	16(%ebp), %eax
	movl	$0, (%eax)
	.loc 7 1680 4
	cmpl	$0, -92(%ebp)
	jns	L2807
	.loc 7 1680 22 discriminator 1
	movl	$0, %eax
	jmp	L2861
L2807:
	.loc 7 1682 30
	movl	-92(%ebp), %edx
	movl	-88(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movw	%ax, -94(%ebp)
LBB545:
	.loc 7 1684 4
	cmpw	$0, -94(%ebp)
	jle	L2809
LBB546:
	.loc 7 1685 19
	movb	$0, -17(%ebp)
	.loc 7 1686 26
	movl	$0, -28(%ebp)
	.loc 7 1686 46
	movl	$0, -36(%ebp)
	.loc 7 1686 62
	movl	$0, -40(%ebp)
	.loc 7 1689 36
	movl	-92(%ebp), %eax
	leal	10(%eax), %edx
	.loc 7 1689 24
	movl	-88(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -100(%ebp)
	.loc 7 1690 55
	movswl	-94(%ebp), %eax
	addl	%eax, %eax
	.loc 7 1690 36
	movl	%eax, %edx
	movl	-92(%ebp), %eax
	addl	%edx, %eax
	leal	10(%eax), %edx
	.loc 7 1690 21
	movl	-88(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 1690 11
	movzwl	%ax, %eax
	movl	%eax, -104(%ebp)
	.loc 7 1691 49
	movswl	-94(%ebp), %eax
	addl	%eax, %eax
	.loc 7 1691 30
	movl	%eax, %edx
	movl	-92(%ebp), %eax
	addl	%eax, %edx
	.loc 7 1691 57
	movl	-104(%ebp), %eax
	addl	%edx, %eax
	leal	12(%eax), %edx
	.loc 7 1691 14
	movl	-88(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -76(%ebp)
	.loc 7 1693 57
	movswl	-94(%ebp), %eax
	addl	%eax, %eax
	.loc 7 1693 59
	leal	-2(%eax), %edx
	.loc 7 1693 21
	movl	-100(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 1693 9
	addl	$1, %eax
	movl	%eax, -108(%ebp)
	.loc 7 1695 16
	movswl	-94(%ebp), %eax
	leal	(%eax,%eax), %edx
	.loc 7 1695 9
	movl	-108(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -112(%ebp)
	.loc 7 1696 35
	movl	-112(%ebp), %eax
	imull	$14, %eax, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -12(%ebp)
	.loc 7 1697 7
	cmpl	$0, -12(%ebp)
	jne	L2810
	.loc 7 1698 17
	movl	$0, %eax
	jmp	L2861
L2810:
	.loc 7 1700 17
	movl	$0, -32(%ebp)
	.loc 7 1701 16
	movb	$0, -18(%ebp)
	.loc 7 1707 11
	movl	-112(%ebp), %eax
	subl	-108(%ebp), %eax
	movl	%eax, -116(%ebp)
	.loc 7 1711 13
	movl	$0, -24(%ebp)
L2814:
	.loc 7 1711 19 discriminator 1
	movl	-24(%ebp), %eax
	cmpl	-108(%ebp), %eax
	jge	L2811
	.loc 7 1712 10
	cmpb	$0, -18(%ebp)
	jne	L2812
	.loc 7 1713 28
	movl	-76(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -76(%ebp)
	.loc 7 1713 19
	movzbl	(%eax), %eax
	movb	%al, -17(%ebp)
	.loc 7 1714 23
	movzbl	-17(%ebp), %eax
	andl	$8, %eax
	.loc 7 1714 13
	testl	%eax, %eax
	je	L2813
	.loc 7 1715 35
	movl	-76(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -76(%ebp)
	.loc 7 1715 26
	movzbl	(%eax), %eax
	movb	%al, -18(%ebp)
	jmp	L2813
L2812:
	.loc 7 1717 13
	subb	$1, -18(%ebp)
L2813:
	.loc 7 1718 22 discriminator 2
	movl	-116(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1718 24 discriminator 2
	imull	$14, %eax, %edx
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 7 1718 31 discriminator 2
	movzbl	-17(%ebp), %eax
	movb	%al, 12(%edx)
	.loc 7 1711 7 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L2814
L2811:
	.loc 7 1722 8
	movl	$0, -44(%ebp)
LBB547:
	.loc 7 1723 13
	movl	$0, -24(%ebp)
L2820:
	.loc 7 1723 19 discriminator 1
	movl	-24(%ebp), %eax
	cmpl	-108(%ebp), %eax
	jge	L2815
LBB548:
	.loc 7 1724 30
	movl	-116(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1724 32
	imull	$14, %eax, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1724 16
	movzbl	12(%eax), %eax
	movb	%al, -17(%ebp)
LBB549:
	.loc 7 1725 20
	movzbl	-17(%ebp), %eax
	andl	$2, %eax
	.loc 7 1725 10
	testl	%eax, %eax
	je	L2816
LBB550:
	.loc 7 1726 37
	movl	-76(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -76(%ebp)
	.loc 7 1726 30
	movzbl	(%eax), %eax
	.loc 7 1726 37
	movzbl	%al, %eax
	movw	%ax, -118(%ebp)
	.loc 7 1727 25
	movzbl	-17(%ebp), %eax
	andl	$16, %eax
	.loc 7 1727 31
	testl	%eax, %eax
	je	L2817
	.loc 7 1727 31 is_stmt 0 discriminator 1
	movswl	-118(%ebp), %eax
	jmp	L2818
L2817:
	.loc 7 1727 38 is_stmt 1 discriminator 2
	movswl	-118(%ebp), %eax
	.loc 7 1727 31 discriminator 2
	negl	%eax
L2818:
	.loc 7 1727 15 discriminator 4
	addl	%eax, -44(%ebp)
LBE550:
	jmp	L2819
L2816:
	.loc 7 1729 25
	movzbl	-17(%ebp), %eax
	andl	$16, %eax
	.loc 7 1729 13
	testl	%eax, %eax
	jne	L2819
	.loc 7 1730 47
	movl	-76(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 7 1730 53
	movzbl	%al, %eax
	sall	$8, %eax
	movl	%eax, %edx
	.loc 7 1730 63
	movl	-76(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 1730 53
	addl	%edx, %eax
	.loc 7 1730 24
	cwtl
	.loc 7 1730 18
	addl	%eax, -44(%ebp)
	.loc 7 1731 23
	addl	$2, -76(%ebp)
L2819:
LBE549:
	.loc 7 1734 22 discriminator 2
	movl	-116(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1734 24 discriminator 2
	imull	$14, %eax, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1734 28 discriminator 2
	movl	-44(%ebp), %edx
	movw	%dx, (%eax)
LBE548:
	.loc 7 1723 7 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L2820
L2815:
LBE547:
	.loc 7 1738 8
	movl	$0, -48(%ebp)
LBB551:
	.loc 7 1739 13
	movl	$0, -24(%ebp)
L2826:
	.loc 7 1739 19 discriminator 1
	movl	-24(%ebp), %eax
	cmpl	-108(%ebp), %eax
	jge	L2821
LBB552:
	.loc 7 1740 30
	movl	-116(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1740 32
	imull	$14, %eax, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1740 16
	movzbl	12(%eax), %eax
	movb	%al, -17(%ebp)
LBB553:
	.loc 7 1741 20
	movzbl	-17(%ebp), %eax
	andl	$4, %eax
	.loc 7 1741 10
	testl	%eax, %eax
	je	L2822
LBB554:
	.loc 7 1742 37
	movl	-76(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -76(%ebp)
	.loc 7 1742 30
	movzbl	(%eax), %eax
	.loc 7 1742 37
	movzbl	%al, %eax
	movw	%ax, -120(%ebp)
	.loc 7 1743 25
	movzbl	-17(%ebp), %eax
	andl	$32, %eax
	.loc 7 1743 31
	testl	%eax, %eax
	je	L2823
	.loc 7 1743 31 is_stmt 0 discriminator 1
	movswl	-120(%ebp), %eax
	jmp	L2824
L2823:
	.loc 7 1743 38 is_stmt 1 discriminator 2
	movswl	-120(%ebp), %eax
	.loc 7 1743 31 discriminator 2
	negl	%eax
L2824:
	.loc 7 1743 15 discriminator 4
	addl	%eax, -48(%ebp)
LBE554:
	jmp	L2825
L2822:
	.loc 7 1745 25
	movzbl	-17(%ebp), %eax
	andl	$32, %eax
	.loc 7 1745 13
	testl	%eax, %eax
	jne	L2825
	.loc 7 1746 47
	movl	-76(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 7 1746 53
	movzbl	%al, %eax
	sall	$8, %eax
	movl	%eax, %edx
	.loc 7 1746 63
	movl	-76(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 1746 53
	addl	%edx, %eax
	.loc 7 1746 24
	cwtl
	.loc 7 1746 18
	addl	%eax, -48(%ebp)
	.loc 7 1747 23
	addl	$2, -76(%ebp)
L2825:
LBE553:
	.loc 7 1750 22 discriminator 2
	movl	-116(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1750 24 discriminator 2
	imull	$14, %eax, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1750 28 discriminator 2
	movl	-48(%ebp), %edx
	movw	%dx, 2(%eax)
LBE552:
	.loc 7 1739 7 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L2826
L2821:
LBE551:
	.loc 7 1754 19
	movl	$0, -16(%ebp)
	.loc 7 1755 37
	movl	$0, -72(%ebp)
	.loc 7 1755 31
	movl	-72(%ebp), %eax
	movl	%eax, -68(%ebp)
	.loc 7 1755 25
	movl	-68(%ebp), %eax
	movl	%eax, -56(%ebp)
	.loc 7 1755 20
	movl	-56(%ebp), %eax
	movl	%eax, -52(%ebp)
	.loc 7 1755 15
	movl	-52(%ebp), %eax
	movl	%eax, -64(%ebp)
	.loc 7 1755 10
	movl	-64(%ebp), %eax
	movl	%eax, -60(%ebp)
	.loc 7 1756 13
	movl	$0, -24(%ebp)
L2839:
	.loc 7 1756 19 discriminator 1
	movl	-24(%ebp), %eax
	cmpl	-108(%ebp), %eax
	jge	L2827
	.loc 7 1757 30
	movl	-116(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1757 32
	imull	$14, %eax, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1757 16
	movzbl	12(%eax), %eax
	movb	%al, -17(%ebp)
	.loc 7 1758 44
	movl	-116(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1758 46
	imull	$14, %eax, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1758 48
	movzwl	(%eax), %eax
	.loc 7 1758 16
	cwtl
	movl	%eax, -44(%ebp)
	.loc 7 1759 44
	movl	-116(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1759 46
	imull	$14, %eax, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1759 48
	movzwl	2(%eax), %eax
	.loc 7 1759 16
	cwtl
	movl	%eax, -48(%ebp)
	.loc 7 1761 10
	movl	-32(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jne	L2828
	.loc 7 1762 13
	cmpl	$0, -24(%ebp)
	je	L2829
	.loc 7 1763 49
	movl	-56(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbtt__close_shapeP12stbtt_vertexiiiiiiiii
	movl	%eax, -16(%ebp)
L2829:
	.loc 7 1766 33
	movzbl	-17(%ebp), %eax
	andl	$1, %eax
	.loc 7 1766 25
	testl	%eax, %eax
	sete	%al
	.loc 7 1766 23
	movzbl	%al, %eax
	movl	%eax, -40(%ebp)
	.loc 7 1767 13
	cmpl	$0, -40(%ebp)
	je	L2830
	.loc 7 1770 20
	movl	-44(%ebp), %eax
	movl	%eax, -68(%ebp)
	.loc 7 1771 20
	movl	-48(%ebp), %eax
	movl	%eax, -72(%ebp)
	.loc 7 1772 34
	movl	-116(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1772 38
	addl	$1, %eax
	imull	$14, %eax, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1772 40
	movzbl	12(%eax), %eax
	.loc 7 1772 45
	movzbl	%al, %eax
	andl	$1, %eax
	.loc 7 1772 16
	testl	%eax, %eax
	jne	L2831
	.loc 7 1774 55
	movl	-116(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1774 59
	addl	$1, %eax
	imull	$14, %eax, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1774 61
	movzwl	(%eax), %eax
	.loc 7 1774 29
	movswl	%ax, %edx
	.loc 7 1774 27
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1774 22
	sarl	%eax
	movl	%eax, -60(%ebp)
	.loc 7 1775 55
	movl	-116(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1775 59
	addl	$1, %eax
	imull	$14, %eax, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1775 61
	movzwl	2(%eax), %eax
	.loc 7 1775 29
	movswl	%ax, %edx
	.loc 7 1775 27
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1775 22
	sarl	%eax
	movl	%eax, -64(%ebp)
	jmp	L2833
L2831:
	.loc 7 1778 50
	movl	-116(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1778 54
	addl	$1, %eax
	imull	$14, %eax, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1778 56
	movzwl	(%eax), %eax
	.loc 7 1778 22
	cwtl
	movl	%eax, -60(%ebp)
	.loc 7 1779 50
	movl	-116(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1779 54
	addl	$1, %eax
	imull	$14, %eax, %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1779 56
	movzwl	2(%eax), %eax
	.loc 7 1779 22
	cwtl
	movl	%eax, -64(%ebp)
	.loc 7 1780 19
	addl	$1, -24(%ebp)
	jmp	L2833
L2830:
	.loc 7 1783 19
	movl	-44(%ebp), %eax
	movl	%eax, -60(%ebp)
	.loc 7 1784 19
	movl	-48(%ebp), %eax
	movl	%eax, -64(%ebp)
L2833:
	.loc 7 1786 51
	movl	-16(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -16(%ebp)
	.loc 7 1786 53
	imull	$14, %eax, %edx
	.loc 7 1786 28
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	movl	$0, 20(%esp)
	movl	$0, 16(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$1, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL15stbtt_setvertexP12stbtt_vertexhiiii
	.loc 7 1787 21
	movl	$0, -36(%ebp)
	.loc 7 1788 56
	movl	-28(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 7 1788 37
	movl	-100(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 1788 23
	addl	$1, %eax
	movl	%eax, -32(%ebp)
	.loc 7 1789 13
	addl	$1, -28(%ebp)
	jmp	L2834
L2828:
	.loc 7 1791 25
	movzbl	-17(%ebp), %eax
	andl	$1, %eax
	.loc 7 1791 13
	testl	%eax, %eax
	jne	L2835
	.loc 7 1792 16
	cmpl	$0, -36(%ebp)
	je	L2836
	.loc 7 1793 90
	movl	-56(%ebp), %edx
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1793 34
	sarl	%eax
	movl	%eax, %ebx
	.loc 7 1793 79
	movl	-52(%ebp), %edx
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1793 34
	sarl	%eax
	movl	%eax, %ecx
	.loc 7 1793 57
	movl	-16(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -16(%ebp)
	.loc 7 1793 59
	imull	$14, %eax, %edx
	.loc 7 1793 34
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	movl	-56(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%ebx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	$3, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL15stbtt_setvertexP12stbtt_vertexhiiii
L2836:
	.loc 7 1794 19
	movl	-44(%ebp), %eax
	movl	%eax, -52(%ebp)
	.loc 7 1795 19
	movl	-48(%ebp), %eax
	movl	%eax, -56(%ebp)
	.loc 7 1796 24
	movl	$1, -36(%ebp)
	jmp	L2834
L2835:
	.loc 7 1798 16
	cmpl	$0, -36(%ebp)
	je	L2837
	.loc 7 1799 57
	movl	-16(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -16(%ebp)
	.loc 7 1799 59
	imull	$14, %eax, %edx
	.loc 7 1799 34
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	movl	-56(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$3, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL15stbtt_setvertexP12stbtt_vertexhiiii
	jmp	L2838
L2837:
	.loc 7 1801 57
	movl	-16(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -16(%ebp)
	.loc 7 1801 59
	imull	$14, %eax, %edx
	.loc 7 1801 34
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	movl	$0, 20(%esp)
	movl	$0, 16(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$2, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL15stbtt_setvertexP12stbtt_vertexhiiii
L2838:
	.loc 7 1802 24
	movl	$0, -36(%ebp)
L2834:
	.loc 7 1756 7 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L2839
L2827:
	.loc 7 1806 40
	movl	-56(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbtt__close_shapeP12stbtt_vertexiiiiiiiii
	movl	%eax, -16(%ebp)
LBE546:
	jmp	L2840
L2809:
LBB555:
LBB556:
	.loc 7 1807 11
	cmpw	$0, -94(%ebp)
	jns	L2840
LBB557:
	.loc 7 1809 11
	movl	$1, -80(%ebp)
	.loc 7 1810 36
	movl	-92(%ebp), %eax
	leal	10(%eax), %edx
	movl	-88(%ebp), %eax
	addl	%edx, %eax
	.loc 7 1810 20
	movl	%eax, -152(%ebp)
	.loc 7 1811 20
	movl	$0, -16(%ebp)
	.loc 7 1812 16
	movl	$0, -12(%ebp)
L2857:
	.loc 7 1813 14
	cmpl	$0, -80(%ebp)
	je	L2840
LBB558:
	.loc 7 1815 14
	movl	$0, -124(%ebp)
	.loc 7 1816 24
	movl	$0, -156(%ebp)
	.loc 7 1816 41
	movl	$0, -128(%ebp)
	.loc 7 1817 16
	fld1
	fstps	-180(%ebp)
	fldz
	fstps	-176(%ebp)
	fldz
	fstps	-172(%ebp)
	fld1
	fstps	-168(%ebp)
	fldz
	fstps	-164(%ebp)
	fldz
	fstps	-160(%ebp)
	.loc 7 1819 25
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	.loc 7 1819 16
	movw	%ax, -130(%ebp)
	.loc 7 1819 37
	movl	-152(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -152(%ebp)
	.loc 7 1820 24
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	.loc 7 1820 15
	movw	%ax, -132(%ebp)
	.loc 7 1820 36
	movl	-152(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -152(%ebp)
	.loc 7 1822 20
	movzwl	-130(%ebp), %eax
	andl	$2, %eax
	.loc 7 1822 10
	testl	%eax, %eax
	je	L2842
	.loc 7 1823 23
	movzwl	-130(%ebp), %eax
	andl	$1, %eax
	.loc 7 1823 13
	testl	%eax, %eax
	je	L2843
	.loc 7 1824 32
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movw	%ax, -192(%ebp)
	.loc 7 1824 23
	filds	-192(%ebp)
	fstps	-164(%ebp)
	.loc 7 1824 44
	movl	-152(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -152(%ebp)
	.loc 7 1825 32
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movw	%ax, -192(%ebp)
	.loc 7 1825 23
	filds	-192(%ebp)
	fstps	-160(%ebp)
	.loc 7 1825 44
	movl	-152(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -152(%ebp)
	jmp	L2845
L2843:
	.loc 7 1827 25
	movl	-152(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 7 1827 23
	cbtw
	movw	%ax, -192(%ebp)
	filds	-192(%ebp)
	fstps	-164(%ebp)
	.loc 7 1827 43
	movl	-152(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -152(%ebp)
	.loc 7 1828 25
	movl	-152(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 7 1828 23
	cbtw
	movw	%ax, -192(%ebp)
	filds	-192(%ebp)
	fstps	-160(%ebp)
	.loc 7 1828 43
	movl	-152(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -152(%ebp)
	jmp	L2845
L2842:
	.loc 7 1833 13
	movl	$1833, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC5, (%esp)
LEHB1:
	call	__assert
L2845:
	.loc 7 1835 20
	movzwl	-130(%ebp), %eax
	andl	$8, %eax
	.loc 7 1835 10
	testl	%eax, %eax
	je	L2846
	.loc 7 1836 38
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movw	%ax, -192(%ebp)
	.loc 7 1836 44
	filds	-192(%ebp)
	flds	LC175
	fdivrp	%st, %st(1)
	.loc 7 1836 29
	fstps	-168(%ebp)
	.loc 7 1836 27
	flds	-168(%ebp)
	.loc 7 1836 20
	fstps	-180(%ebp)
	.loc 7 1836 59
	movl	-152(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -152(%ebp)
	.loc 7 1837 29
	fldz
	fstps	-172(%ebp)
	.loc 7 1837 27
	flds	-172(%ebp)
	.loc 7 1837 20
	fstps	-176(%ebp)
	jmp	L2847
L2846:
	.loc 7 1838 27
	movzwl	-130(%ebp), %eax
	andl	$64, %eax
	.loc 7 1838 17
	testl	%eax, %eax
	je	L2848
	.loc 7 1839 29
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movw	%ax, -192(%ebp)
	.loc 7 1839 35
	filds	-192(%ebp)
	flds	LC175
	fdivrp	%st, %st(1)
	.loc 7 1839 20
	fstps	-180(%ebp)
	.loc 7 1839 50
	movl	-152(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -152(%ebp)
	.loc 7 1840 29
	fldz
	fstps	-172(%ebp)
	.loc 7 1840 27
	flds	-172(%ebp)
	.loc 7 1840 20
	fstps	-176(%ebp)
	.loc 7 1841 29
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movw	%ax, -192(%ebp)
	.loc 7 1841 35
	filds	-192(%ebp)
	flds	LC175
	fdivrp	%st, %st(1)
	.loc 7 1841 20
	fstps	-168(%ebp)
	.loc 7 1841 50
	movl	-152(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -152(%ebp)
	jmp	L2847
L2848:
	.loc 7 1842 27
	movzwl	-130(%ebp), %eax
	andl	$128, %eax
	.loc 7 1842 17
	testl	%eax, %eax
	je	L2847
	.loc 7 1843 29
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movw	%ax, -192(%ebp)
	.loc 7 1843 35
	filds	-192(%ebp)
	flds	LC175
	fdivrp	%st, %st(1)
	.loc 7 1843 20
	fstps	-180(%ebp)
	.loc 7 1843 50
	movl	-152(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -152(%ebp)
	.loc 7 1844 29
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movw	%ax, -192(%ebp)
	.loc 7 1844 35
	filds	-192(%ebp)
	flds	LC175
	fdivrp	%st, %st(1)
	.loc 7 1844 20
	fstps	-176(%ebp)
	.loc 7 1844 50
	movl	-152(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -152(%ebp)
	.loc 7 1845 29
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movw	%ax, -192(%ebp)
	.loc 7 1845 35
	filds	-192(%ebp)
	flds	LC175
	fdivrp	%st, %st(1)
	.loc 7 1845 20
	fstps	-172(%ebp)
	.loc 7 1845 50
	movl	-152(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -152(%ebp)
	.loc 7 1846 29
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movw	%ax, -192(%ebp)
	.loc 7 1846 35
	filds	-192(%ebp)
	flds	LC175
	fdivrp	%st, %st(1)
	.loc 7 1846 20
	fstps	-168(%ebp)
	.loc 7 1846 50
	movl	-152(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -152(%ebp)
L2847:
	.loc 7 1850 22
	flds	-180(%ebp)
	flds	-180(%ebp)
	fmulp	%st, %st(1)
	flds	-176(%ebp)
	flds	-176(%ebp)
	fmulp	%st, %st(1)
	faddp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fstps	-136(%ebp)
	.loc 7 1851 22
	flds	-172(%ebp)
	flds	-172(%ebp)
	fmulp	%st, %st(1)
	flds	-168(%ebp)
	flds	-168(%ebp)
	fmulp	%st, %st(1)
	faddp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fstps	-140(%ebp)
	.loc 7 1854 46
	movzwl	-132(%ebp), %eax
	leal	-156(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphShape
LEHE1:
	movl	%eax, -124(%ebp)
LBB559:
	.loc 7 1855 10
	cmpl	$0, -124(%ebp)
	jle	L2849
LBB560:
LBB561:
	.loc 7 1857 20
	movl	$0, -84(%ebp)
L2851:
	.loc 7 1857 27 discriminator 3
	movl	-84(%ebp), %eax
	cmpl	-124(%ebp), %eax
	jge	L2850
LBB562:
	.loc 7 1858 34 discriminator 2
	movl	-156(%ebp), %edx
	.loc 7 1858 47 discriminator 2
	movl	-84(%ebp), %eax
	imull	$14, %eax, %eax
	.loc 7 1858 30 discriminator 2
	addl	%edx, %eax
	movl	%eax, -144(%ebp)
	.loc 7 1860 17 discriminator 2
	movl	-144(%ebp), %eax
	movzwl	(%eax), %eax
	movw	%ax, -146(%ebp)
	.loc 7 1860 25 discriminator 2
	movl	-144(%ebp), %eax
	movzwl	2(%eax), %eax
	movw	%ax, -148(%ebp)
	.loc 7 1861 53 discriminator 2
	flds	-180(%ebp)
	.loc 7 1861 54 discriminator 2
	filds	-146(%ebp)
	fmulp	%st, %st(1)
	.loc 7 1861 64 discriminator 2
	flds	-172(%ebp)
	.loc 7 1861 65 discriminator 2
	filds	-148(%ebp)
	fmulp	%st, %st(1)
	.loc 7 1861 57 discriminator 2
	faddp	%st, %st(1)
	.loc 7 1861 75 discriminator 2
	flds	-164(%ebp)
	.loc 7 1861 68 discriminator 2
	faddp	%st, %st(1)
	.loc 7 1861 45 discriminator 2
	fmuls	-136(%ebp)
	.loc 7 1861 23 discriminator 2
	fnstcw	-186(%ebp)
	movzwl	-186(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -188(%ebp)
	fldcw	-188(%ebp)
	fistps	-190(%ebp)
	fldcw	-186(%ebp)
	movzwl	-190(%ebp), %edx
	.loc 7 1861 21 discriminator 2
	movl	-144(%ebp), %eax
	movw	%dx, (%eax)
	.loc 7 1862 53 discriminator 2
	flds	-176(%ebp)
	.loc 7 1862 54 discriminator 2
	filds	-146(%ebp)
	fmulp	%st, %st(1)
	.loc 7 1862 64 discriminator 2
	flds	-168(%ebp)
	.loc 7 1862 65 discriminator 2
	filds	-148(%ebp)
	fmulp	%st, %st(1)
	.loc 7 1862 57 discriminator 2
	faddp	%st, %st(1)
	.loc 7 1862 75 discriminator 2
	flds	-160(%ebp)
	.loc 7 1862 68 discriminator 2
	faddp	%st, %st(1)
	.loc 7 1862 45 discriminator 2
	fmuls	-140(%ebp)
	.loc 7 1862 23 discriminator 2
	fldcw	-188(%ebp)
	fistps	-190(%ebp)
	fldcw	-186(%ebp)
	movzwl	-190(%ebp), %edx
	.loc 7 1862 21 discriminator 2
	movl	-144(%ebp), %eax
	movw	%dx, 2(%eax)
	.loc 7 1863 17 discriminator 2
	movl	-144(%ebp), %eax
	movzwl	4(%eax), %eax
	movw	%ax, -146(%ebp)
	.loc 7 1863 26 discriminator 2
	movl	-144(%ebp), %eax
	movzwl	6(%eax), %eax
	movw	%ax, -148(%ebp)
	.loc 7 1864 54 discriminator 2
	flds	-180(%ebp)
	.loc 7 1864 55 discriminator 2
	filds	-146(%ebp)
	fmulp	%st, %st(1)
	.loc 7 1864 65 discriminator 2
	flds	-172(%ebp)
	.loc 7 1864 66 discriminator 2
	filds	-148(%ebp)
	fmulp	%st, %st(1)
	.loc 7 1864 58 discriminator 2
	faddp	%st, %st(1)
	.loc 7 1864 76 discriminator 2
	flds	-164(%ebp)
	.loc 7 1864 69 discriminator 2
	faddp	%st, %st(1)
	.loc 7 1864 46 discriminator 2
	fmuls	-136(%ebp)
	.loc 7 1864 24 discriminator 2
	fldcw	-188(%ebp)
	fistps	-190(%ebp)
	fldcw	-186(%ebp)
	movzwl	-190(%ebp), %edx
	.loc 7 1864 22 discriminator 2
	movl	-144(%ebp), %eax
	movw	%dx, 4(%eax)
	.loc 7 1865 54 discriminator 2
	flds	-176(%ebp)
	.loc 7 1865 55 discriminator 2
	filds	-146(%ebp)
	fmulp	%st, %st(1)
	.loc 7 1865 65 discriminator 2
	flds	-168(%ebp)
	.loc 7 1865 66 discriminator 2
	filds	-148(%ebp)
	fmulp	%st, %st(1)
	.loc 7 1865 58 discriminator 2
	faddp	%st, %st(1)
	.loc 7 1865 76 discriminator 2
	flds	-160(%ebp)
	.loc 7 1865 69 discriminator 2
	faddp	%st, %st(1)
	.loc 7 1865 46 discriminator 2
	fmuls	-140(%ebp)
	.loc 7 1865 24 discriminator 2
	fldcw	-188(%ebp)
	fistps	-190(%ebp)
	fldcw	-186(%ebp)
	movzwl	-190(%ebp), %edx
	.loc 7 1865 22 discriminator 2
	movl	-144(%ebp), %eax
	movw	%dx, 6(%eax)
LBE562:
	.loc 7 1857 13 discriminator 2
	addl	$1, -84(%ebp)
	jmp	L2851
L2850:
LBE561:
	.loc 7 1868 34
	movl	-16(%ebp), %edx
	movl	-124(%ebp), %eax
	addl	%edx, %eax
	imull	$14, %eax, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -128(%ebp)
	.loc 7 1869 13
	cmpl	$0, -128(%ebp)
	jne	L2852
	.loc 7 1870 16
	cmpl	$0, -12(%ebp)
	je	L2853
	.loc 7 1870 30 discriminator 1
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
L2853:
	.loc 7 1871 30
	movl	-156(%ebp), %eax
	.loc 7 1871 16
	testl	%eax, %eax
	je	L2854
	.loc 7 1871 32 discriminator 1
	movl	-156(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
L2854:
	.loc 7 1872 23
	movl	$0, %eax
	jmp	L2861
L2852:
	.loc 7 1874 13
	cmpl	$0, -16(%ebp)
	jle	L2855
	.loc 7 1874 47 discriminator 1
	movl	-16(%ebp), %eax
	imull	$14, %eax, %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, (%esp)
	call	_memcpy
L2855:
	.loc 7 1875 25
	movl	-124(%ebp), %eax
	imull	$14, %eax, %edx
	movl	-156(%ebp), %eax
	.loc 7 1875 29
	movl	-16(%ebp), %ecx
	imull	$14, %ecx, %ebx
	movl	-128(%ebp), %ecx
	addl	%ebx, %ecx
	.loc 7 1875 25
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	_memcpy
	.loc 7 1876 13
	cmpl	$0, -12(%ebp)
	je	L2856
	.loc 7 1876 27 discriminator 1
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
L2856:
	.loc 7 1877 22
	movl	-128(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 7 1878 13
	movl	-156(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 1879 26
	movl	-124(%ebp), %eax
	addl	%eax, -16(%ebp)
L2849:
LBE560:
LBE559:
	.loc 7 1882 23
	movzwl	-130(%ebp), %eax
	.loc 7 1882 15
	andl	$32, %eax
	movl	%eax, -80(%ebp)
LBE558:
	.loc 7 1813 7
	jmp	L2857
L2840:
LBE557:
LBE556:
LBE555:
LBE545:
	.loc 7 1888 15
	movl	16(%ebp), %eax
	movl	-12(%ebp), %edx
	movl	%edx, (%eax)
	.loc 7 1889 11
	movl	-16(%ebp), %eax
	jmp	L2861
L2859:
	movl	%eax, (%esp)
LEHB2:
	call	__Unwind_Resume
LEHE2:
L2861:
	.loc 7 1890 1
	addl	$244, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2020:
	.def	___gxx_personality_v0;	.scl	2;	.type	32;	.endef
	.section	.gcc_except_table,"w"
LLSDA2020:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 LLSDACSE2020-LLSDACSB2020
LLSDACSB2020:
	.uleb128 LEHB0-LFB2020
	.uleb128 LEHE0-LEHB0
	.uleb128 0
	.uleb128 0
	.uleb128 LEHB1-LFB2020
	.uleb128 LEHE1-LEHB1
	.uleb128 L2859-LFB2020
	.uleb128 0
	.uleb128 LEHB2-LFB2020
	.uleb128 LEHE2-LEHB2
	.uleb128 0
	.uleb128 0
LLSDACSE2020:
	.text
	.def	__ZL19stbtt__track_vertexP12stbtt__csctxii;	.scl	3;	.type	32;	.endef
__ZL19stbtt__track_vertexP12stbtt__csctxii:
LFB2021:
	.loc 7 1907 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 7 1908 15
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 1908 4
	cmpl	%eax, 12(%ebp)
	jg	L2863
	.loc 7 1908 28 discriminator 2
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 1908 21 discriminator 2
	testl	%eax, %eax
	jne	L2864
L2863:
	.loc 7 1908 46 discriminator 3
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 28(%eax)
L2864:
	.loc 7 1909 15
	movl	8(%ebp), %eax
	movl	36(%eax), %eax
	.loc 7 1909 4
	cmpl	%eax, 16(%ebp)
	jg	L2865
	.loc 7 1909 28 discriminator 2
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 1909 21 discriminator 2
	testl	%eax, %eax
	jne	L2866
L2865:
	.loc 7 1909 46 discriminator 3
	movl	8(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 36(%eax)
L2866:
	.loc 7 1910 15
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	.loc 7 1910 4
	cmpl	%eax, 12(%ebp)
	jl	L2867
	.loc 7 1910 28 discriminator 2
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 1910 21 discriminator 2
	testl	%eax, %eax
	jne	L2868
L2867:
	.loc 7 1910 46 discriminator 3
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 24(%eax)
L2868:
	.loc 7 1911 15
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 7 1911 4
	cmpl	%eax, 16(%ebp)
	jl	L2869
	.loc 7 1911 28 discriminator 2
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 1911 21 discriminator 2
	testl	%eax, %eax
	jne	L2870
L2869:
	.loc 7 1911 46 discriminator 3
	movl	8(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 32(%eax)
L2870:
	.loc 7 1912 15
	movl	8(%ebp), %eax
	movl	$1, 4(%eax)
	.loc 7 1913 1
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2021:
	.def	__ZL14stbtt__csctx_vP12stbtt__csctxhiiiiii;	.scl	3;	.type	32;	.endef
__ZL14stbtt__csctx_vP12stbtt__csctxhiiiiii:
LFB2022:
	.loc 7 1916 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	movl	12(%ebp), %eax
	movb	%al, -12(%ebp)
	.loc 7 1917 11
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 1917 4
	testl	%eax, %eax
	je	L2872
	.loc 7 1918 26
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbtt__track_vertexP12stbtt__csctxii
	.loc 7 1919 7
	cmpb	$4, -12(%ebp)
	jne	L2873
	.loc 7 1920 29
	movl	28(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbtt__track_vertexP12stbtt__csctxii
	.loc 7 1921 29
	movl	36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbtt__track_vertexP12stbtt__csctxii
	jmp	L2873
L2872:
	.loc 7 1924 22
	movzbl	-12(%ebp), %eax
	.loc 7 1924 27
	movl	8(%ebp), %edx
	movl	40(%edx), %ecx
	.loc 7 1924 40
	movl	8(%ebp), %edx
	movl	44(%edx), %edx
	.loc 7 1924 52
	imull	$14, %edx, %edx
	.loc 7 1924 22
	addl	%edx, %ecx
	movl	28(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	24(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	16(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	__ZL15stbtt_setvertexP12stbtt_vertexhiiii
	.loc 7 1925 10
	movl	8(%ebp), %eax
	movl	40(%eax), %edx
	.loc 7 1925 23
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	.loc 7 1925 35
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 1925 41
	movl	32(%ebp), %edx
	movw	%dx, 8(%eax)
	.loc 7 1926 10
	movl	8(%ebp), %eax
	movl	40(%eax), %edx
	.loc 7 1926 23
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	.loc 7 1926 35
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 1926 41
	movl	36(%ebp), %edx
	movw	%dx, 10(%eax)
L2873:
	.loc 7 1928 7
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	.loc 7 1928 19
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 44(%eax)
	.loc 7 1929 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2022:
	.def	__ZL24stbtt__csctx_close_shapeP12stbtt__csctx;	.scl	3;	.type	32;	.endef
__ZL24stbtt__csctx_close_shapeP12stbtt__csctx:
LFB2023:
	.loc 7 1932 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 1933 13
	movl	8(%ebp), %eax
	flds	8(%eax)
	.loc 7 1933 29
	movl	8(%ebp), %eax
	flds	16(%eax)
	.loc 7 1933 4
	fucomi	%st(1), %st
	jp	L2879
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L2875
	.loc 7 1933 39 discriminator 1
	movl	8(%ebp), %eax
	flds	12(%eax)
	.loc 7 1933 55 discriminator 1
	movl	8(%ebp), %eax
	flds	20(%eax)
	.loc 7 1933 31 discriminator 1
	fucomi	%st(1), %st
	jp	L2880
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L2875
	.loc 7 1935 1 discriminator 1
	jmp	L2878
L2879:
	fstp	%st(0)
	fstp	%st(0)
	jmp	L2875
L2880:
	fstp	%st(0)
	fstp	%st(0)
L2875:
	.loc 7 1934 69
	movl	8(%ebp), %eax
	flds	12(%eax)
	.loc 7 1934 21
	fnstcw	-10(%ebp)
	movzwl	-10(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -12(%ebp)
	fldcw	-12(%ebp)
	fistpl	-16(%ebp)
	fldcw	-10(%ebp)
	movl	-16(%ebp), %edx
	.loc 7 1934 50
	movl	8(%ebp), %eax
	flds	8(%eax)
	.loc 7 1934 21
	fldcw	-12(%ebp)
	fistpl	-16(%ebp)
	fldcw	-10(%ebp)
	movl	-16(%ebp), %eax
	movl	$0, 28(%esp)
	movl	$0, 24(%esp)
	movl	$0, 20(%esp)
	movl	$0, 16(%esp)
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$2, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__csctx_vP12stbtt__csctxhiiiiii
L2878:
	.loc 7 1935 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2023:
	.def	__ZL21stbtt__csctx_rmove_toP12stbtt__csctxff;	.scl	3;	.type	32;	.endef
__ZL21stbtt__csctx_rmove_toP12stbtt__csctxff:
LFB2024:
	.loc 7 1938 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 1939 28
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbtt__csctx_close_shapeP12stbtt__csctx
	.loc 7 1940 33
	movl	8(%ebp), %eax
	flds	16(%eax)
	.loc 7 1940 35
	fadds	12(%ebp)
	.loc 7 1940 26
	movl	8(%ebp), %eax
	fstps	16(%eax)
	.loc 7 1940 24
	movl	8(%ebp), %eax
	flds	16(%eax)
	.loc 7 1940 17
	movl	8(%ebp), %eax
	fstps	8(%eax)
	.loc 7 1941 33
	movl	8(%ebp), %eax
	flds	20(%eax)
	.loc 7 1941 35
	fadds	16(%ebp)
	.loc 7 1941 26
	movl	8(%ebp), %eax
	fstps	20(%eax)
	.loc 7 1941 24
	movl	8(%ebp), %eax
	flds	20(%eax)
	.loc 7 1941 17
	movl	8(%ebp), %eax
	fstps	12(%eax)
	.loc 7 1942 60
	movl	8(%ebp), %eax
	flds	20(%eax)
	.loc 7 1942 18
	fnstcw	-10(%ebp)
	movzwl	-10(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -12(%ebp)
	fldcw	-12(%ebp)
	fistpl	-16(%ebp)
	fldcw	-10(%ebp)
	movl	-16(%ebp), %edx
	.loc 7 1942 47
	movl	8(%ebp), %eax
	flds	16(%eax)
	.loc 7 1942 18
	fldcw	-12(%ebp)
	fistpl	-16(%ebp)
	fldcw	-10(%ebp)
	movl	-16(%ebp), %eax
	movl	$0, 28(%esp)
	movl	$0, 24(%esp)
	movl	$0, 20(%esp)
	movl	$0, 16(%esp)
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__csctx_vP12stbtt__csctxhiiiiii
	.loc 7 1943 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2024:
	.def	__ZL21stbtt__csctx_rline_toP12stbtt__csctxff;	.scl	3;	.type	32;	.endef
__ZL21stbtt__csctx_rline_toP12stbtt__csctxff:
LFB2025:
	.loc 7 1946 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 1947 11
	movl	8(%ebp), %eax
	flds	16(%eax)
	fadds	12(%ebp)
	movl	8(%ebp), %eax
	fstps	16(%eax)
	.loc 7 1948 11
	movl	8(%ebp), %eax
	flds	20(%eax)
	fadds	16(%ebp)
	movl	8(%ebp), %eax
	fstps	20(%eax)
	.loc 7 1949 60
	movl	8(%ebp), %eax
	flds	20(%eax)
	.loc 7 1949 18
	fnstcw	-10(%ebp)
	movzwl	-10(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -12(%ebp)
	fldcw	-12(%ebp)
	fistpl	-16(%ebp)
	fldcw	-10(%ebp)
	movl	-16(%ebp), %edx
	.loc 7 1949 47
	movl	8(%ebp), %eax
	flds	16(%eax)
	.loc 7 1949 18
	fldcw	-12(%ebp)
	fistpl	-16(%ebp)
	fldcw	-10(%ebp)
	movl	-16(%ebp), %eax
	movl	$0, 28(%esp)
	movl	$0, 24(%esp)
	movl	$0, 20(%esp)
	movl	$0, 16(%esp)
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$2, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__csctx_vP12stbtt__csctxhiiiiii
	.loc 7 1950 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2025:
	.def	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff;	.scl	3;	.type	32;	.endef
__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff:
LFB2026:
	.loc 7 1953 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$76, %esp
	.cfi_offset 7, -12
	.cfi_offset 6, -16
	.cfi_offset 3, -20
	.loc 7 1954 21
	movl	8(%ebp), %eax
	flds	16(%eax)
	.loc 7 1954 10
	flds	12(%ebp)
	faddp	%st, %st(1)
	fstps	-28(%ebp)
	.loc 7 1955 21
	movl	8(%ebp), %eax
	flds	20(%eax)
	.loc 7 1955 10
	flds	16(%ebp)
	faddp	%st, %st(1)
	fstps	-32(%ebp)
	.loc 7 1956 10
	flds	-28(%ebp)
	fadds	20(%ebp)
	fstps	-36(%ebp)
	.loc 7 1957 10
	flds	-32(%ebp)
	fadds	24(%ebp)
	fstps	-40(%ebp)
	.loc 7 1958 17
	flds	-36(%ebp)
	fadds	28(%ebp)
	.loc 7 1958 11
	movl	8(%ebp), %eax
	fstps	16(%eax)
	.loc 7 1959 17
	flds	-40(%ebp)
	fadds	32(%ebp)
	.loc 7 1959 11
	movl	8(%ebp), %eax
	fstps	20(%eax)
	.loc 7 1960 18
	flds	-40(%ebp)
	fnstcw	-42(%ebp)
	movzwl	-42(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -44(%ebp)
	fldcw	-44(%ebp)
	fistpl	-48(%ebp)
	fldcw	-42(%ebp)
	movl	-48(%ebp), %edi
	flds	-36(%ebp)
	fldcw	-44(%ebp)
	fistpl	-48(%ebp)
	fldcw	-42(%ebp)
	movl	-48(%ebp), %esi
	flds	-32(%ebp)
	fldcw	-44(%ebp)
	fistpl	-48(%ebp)
	fldcw	-42(%ebp)
	movl	-48(%ebp), %ebx
	flds	-28(%ebp)
	fldcw	-44(%ebp)
	fistpl	-48(%ebp)
	fldcw	-42(%ebp)
	movl	-48(%ebp), %ecx
	.loc 7 1960 61
	movl	8(%ebp), %eax
	flds	20(%eax)
	.loc 7 1960 18
	fldcw	-44(%ebp)
	fistpl	-48(%ebp)
	fldcw	-42(%ebp)
	movl	-48(%ebp), %edx
	.loc 7 1960 48
	movl	8(%ebp), %eax
	flds	16(%eax)
	.loc 7 1960 18
	fldcw	-44(%ebp)
	fistpl	-48(%ebp)
	fldcw	-42(%ebp)
	movl	-48(%ebp), %eax
	movl	%edi, 28(%esp)
	movl	%esi, 24(%esp)
	movl	%ebx, 20(%esp)
	movl	%ecx, 16(%esp)
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$4, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__csctx_vP12stbtt__csctxhiiiiii
	.loc 7 1961 1
	nop
	addl	$76, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2026:
	.def	__ZL15stbtt__get_subr10stbtt__bufi;	.scl	3;	.type	32;	.endef
__ZL15stbtt__get_subr10stbtt__bufi:
LFB2027:
	.loc 7 1964 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 1965 38
	leal	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbtt__cff_index_countP10stbtt__buf
	movl	%eax, -16(%ebp)
	.loc 7 1966 8
	movl	$107, -12(%ebp)
	.loc 7 1967 4
	cmpl	$33899, -16(%ebp)
	jle	L2885
	.loc 7 1968 12
	movl	$32768, -12(%ebp)
	jmp	L2886
L2885:
	.loc 7 1969 9
	cmpl	$1239, -16(%ebp)
	jle	L2886
	.loc 7 1970 12
	movl	$1131, -12(%ebp)
L2886:
	.loc 7 1971 6
	movl	-12(%ebp), %eax
	addl	%eax, 24(%ebp)
	.loc 7 1972 4
	cmpl	$0, 24(%ebp)
	js	L2887
	.loc 7 1972 14 discriminator 1
	movl	24(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jl	L2888
L2887:
	.loc 7 1973 36
	movl	8(%ebp), %eax
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__new_bufPKvj
	jmp	L2884
L2888:
	.loc 7 1974 38
	movl	8(%ebp), %eax
	movl	24(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	16(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, (%esp)
	call	__ZL20stbtt__cff_index_get10stbtt__bufi
L2884:
	.loc 7 1975 1
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2027:
	.def	__ZL26stbtt__cid_get_glyph_subrsPK14stbtt_fontinfoi;	.scl	3;	.type	32;	.endef
__ZL26stbtt__cid_get_glyph_subrsPK14stbtt_fontinfoi:
LFB2028:
	.loc 7 1978 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$104, %esp
	.loc 7 1979 15
	movl	12(%ebp), %eax
	movl	116(%eax), %edx
	movl	%edx, -72(%ebp)
	movl	120(%eax), %edx
	movl	%edx, -68(%ebp)
	movl	124(%eax), %eax
	movl	%eax, -64(%ebp)
	.loc 7 1980 37
	movl	$-1, -16(%ebp)
	.loc 7 1982 19
	movl	$0, 4(%esp)
	leal	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_seekP10stbtt__bufi
	.loc 7 1983 25
	leal	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	.loc 7 1983 8
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	.loc 7 1984 4
	cmpl	$0, -24(%ebp)
	jne	L2891
	.loc 7 1986 22
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_skipP10stbtt__bufi
	.loc 7 1987 35
	leal	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	.loc 7 1987 18
	movzbl	%al, %eax
	movl	%eax, -16(%ebp)
	jmp	L2892
L2891:
	.loc 7 1988 11
	cmpl	$3, -24(%ebp)
	jne	L2892
	.loc 7 1989 17
	movl	$2, 4(%esp)
	leal	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__buf_getP10stbtt__bufi
	.loc 7 1989 15
	movl	%eax, -28(%ebp)
	.loc 7 1990 15
	movl	$2, 4(%esp)
	leal	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__buf_getP10stbtt__bufi
	.loc 7 1990 13
	movl	%eax, -12(%ebp)
	.loc 7 1991 14
	movl	$0, -20(%ebp)
L2895:
	.loc 7 1991 21 discriminator 1
	movl	-20(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jge	L2892
	.loc 7 1992 29
	leal	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	.loc 7 1992 12
	movzbl	%al, %eax
	movl	%eax, -32(%ebp)
	.loc 7 1993 16
	movl	$2, 4(%esp)
	leal	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__buf_getP10stbtt__bufi
	.loc 7 1993 14
	movl	%eax, -36(%ebp)
	.loc 7 1994 10
	movl	16(%ebp), %eax
	cmpl	-12(%ebp), %eax
	jl	L2894
	.loc 7 1994 35 discriminator 1
	movl	16(%ebp), %eax
	cmpl	-36(%ebp), %eax
	jge	L2894
	.loc 7 1995 24
	movl	-32(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 7 1996 13
	jmp	L2892
L2894:
	.loc 7 1998 16 discriminator 2
	movl	-36(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 7 1991 7 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L2895
L2892:
	.loc 7 2001 4
	cmpl	$-1, -16(%ebp)
	jne	L2896
	.loc 7 2001 48 discriminator 1
	leal	-60(%ebp), %eax
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL14stbtt__new_bufPKvj
L2896:
	.loc 7 2002 88
	leal	-48(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	12(%ebp), %eax
	movl	104(%eax), %ecx
	movl	%ecx, 4(%esp)
	movl	108(%eax), %ecx
	movl	%ecx, 8(%esp)
	movl	112(%eax), %eax
	movl	%eax, 12(%esp)
	movl	%edx, (%esp)
	call	__ZL20stbtt__cff_index_get10stbtt__bufi
	movl	8(%ebp), %edx
	movl	-48(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	12(%ebp), %eax
	movl	56(%eax), %ecx
	movl	%ecx, 4(%esp)
	movl	60(%eax), %ecx
	movl	%ecx, 8(%esp)
	movl	64(%eax), %eax
	movl	%eax, 12(%esp)
	movl	%edx, (%esp)
	call	__ZL16stbtt__get_subrs10stbtt__bufS_
	.loc 7 2003 1
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2028:
	.def	__ZL21stbtt__run_charstringPK14stbtt_fontinfoiP12stbtt__csctx;	.scl	3;	.type	32;	.endef
__ZL21stbtt__run_charstringPK14stbtt_fontinfoiP12stbtt__csctx:
LFB2029:
	.loc 7 2006 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$520, %esp
	.loc 7 2007 8
	movl	$1, -12(%ebp)
	.loc 7 2007 23
	movl	$0, -16(%ebp)
	.loc 7 2007 37
	movl	$0, -20(%ebp)
	.loc 7 2007 60
	movl	$0, -24(%ebp)
	.loc 7 2008 8
	movl	$0, -32(%ebp)
	.loc 7 2010 31
	movl	8(%ebp), %eax
	movl	92(%eax), %edx
	movl	%edx, -432(%ebp)
	movl	96(%eax), %edx
	movl	%edx, -428(%ebp)
	movl	100(%eax), %eax
	movl	%eax, -424(%ebp)
	.loc 7 2016 59
	leal	-472(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	8(%ebp), %eax
	movl	68(%eax), %ecx
	movl	%ecx, 4(%esp)
	movl	72(%eax), %ecx
	movl	%ecx, 8(%esp)
	movl	76(%eax), %eax
	movl	%eax, 12(%esp)
	movl	%edx, (%esp)
	call	__ZL20stbtt__cff_index_get10stbtt__bufi
	movl	-472(%ebp), %eax
	movl	%eax, -444(%ebp)
	movl	-468(%ebp), %eax
	movl	%eax, -440(%ebp)
	movl	-464(%ebp), %eax
	movl	%eax, -436(%ebp)
L2985:
	.loc 7 2017 13
	movl	-440(%ebp), %edx
	.loc 7 2017 24
	movl	-436(%ebp), %eax
	.loc 7 2017 20
	cmpl	%eax, %edx
	jge	L2899
LBB563:
	.loc 7 2018 9
	movl	$0, -28(%ebp)
	.loc 7 2019 19
	movl	$1, -36(%ebp)
	.loc 7 2020 27
	leal	-444(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	.loc 7 2020 10
	movzbl	%al, %eax
	movl	%eax, -52(%ebp)
LBB564:
	.loc 7 2021 7
	cmpl	$31, -52(%ebp)
	ja	L2900
	movl	-52(%ebp), %eax
	sall	$2, %eax
	addl	$L2902, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section .rdata,"dr"
	.align 4
L2902:
	.long	L2900
	.long	L2908
	.long	L2900
	.long	L2908
	.long	L2920
	.long	L2919
	.long	L2918
	.long	L2917
	.long	L2916
	.long	L2900
	.long	L2915
	.long	L2914
	.long	L2913
	.long	L2900
	.long	L2912
	.long	L2900
	.long	L2900
	.long	L2900
	.long	L2908
	.long	L2911
	.long	L2911
	.long	L2910
	.long	L2909
	.long	L2908
	.long	L2907
	.long	L2906
	.long	L2905
	.long	L2905
	.long	L2900
	.long	L2904
	.long	L2903
	.long	L2901
	.text
L2911:
LBB565:
	.loc 7 2025 10
	cmpl	$0, -12(%ebp)
	je	L2921
	.loc 7 2026 29
	movl	-24(%ebp), %eax
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	.loc 7 2026 22
	addl	%eax, -16(%ebp)
L2921:
	.loc 7 2027 20
	movl	$0, -12(%ebp)
	.loc 7 2028 40
	movl	-16(%ebp), %eax
	addl	$7, %eax
	.loc 7 2028 25
	leal	7(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$3, %eax
	movl	%eax, 4(%esp)
	leal	-444(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_skipP10stbtt__bufi
	.loc 7 2029 10
	jmp	L2922
L2908:
	.loc 7 2035 26
	movl	-24(%ebp), %eax
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	.loc 7 2035 19
	addl	%eax, -16(%ebp)
	.loc 7 2036 10
	jmp	L2922
L2910:
	.loc 7 2039 20
	movl	$0, -12(%ebp)
	.loc 7 2040 10
	cmpl	$1, -24(%ebp)
	jg	L2923
	.loc 7 2040 29 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2923:
	.loc 7 2041 48
	movl	-24(%ebp), %eax
	subl	$1, %eax
	.loc 7 2041 31
	flds	-300(%ebp,%eax,4)
	.loc 7 2041 39
	movl	-24(%ebp), %eax
	subl	$2, %eax
	.loc 7 2041 31
	flds	-300(%ebp,%eax,4)
	fxch	%st(1)
	fstps	8(%esp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbtt__csctx_rmove_toP12stbtt__csctxff
	.loc 7 2042 10
	jmp	L2922
L2920:
	.loc 7 2044 20
	movl	$0, -12(%ebp)
	.loc 7 2045 10
	cmpl	$0, -24(%ebp)
	jg	L2925
	.loc 7 2045 29 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2925:
	.loc 7 2046 42
	movl	-24(%ebp), %eax
	subl	$1, %eax
	.loc 7 2046 31
	flds	-300(%ebp,%eax,4)
	fstps	8(%esp)
	fldz
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbtt__csctx_rmove_toP12stbtt__csctxff
	.loc 7 2047 10
	jmp	L2922
L2909:
	.loc 7 2049 20
	movl	$0, -12(%ebp)
	.loc 7 2050 10
	cmpl	$0, -24(%ebp)
	jg	L2926
	.loc 7 2050 29 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2926:
	.loc 7 2051 39
	movl	-24(%ebp), %eax
	subl	$1, %eax
	.loc 7 2051 31
	flds	-300(%ebp,%eax,4)
	fldz
	fstps	8(%esp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbtt__csctx_rmove_toP12stbtt__csctxff
	.loc 7 2052 10
	jmp	L2922
L2919:
	.loc 7 2055 10
	cmpl	$1, -24(%ebp)
	jg	L2927
	.loc 7 2055 29 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2927:
	.loc 7 2056 19 discriminator 2
	movl	-28(%ebp), %eax
	addl	$1, %eax
	.loc 7 2056 23 discriminator 2
	cmpl	%eax, -24(%ebp)
	jle	L2987
	.loc 7 2057 47 discriminator 1
	movl	-28(%ebp), %eax
	addl	$1, %eax
	.loc 7 2057 34 discriminator 1
	flds	-300(%ebp,%eax,4)
	movl	-28(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	fxch	%st(1)
	fstps	8(%esp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbtt__csctx_rline_toP12stbtt__csctxff
	.loc 7 2056 31 discriminator 1
	addl	$2, -28(%ebp)
	.loc 7 2056 10 discriminator 1
	jmp	L2927
L2917:
	.loc 7 2064 10
	cmpl	$0, -24(%ebp)
	jg	L2988
	.loc 7 2064 29 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2918:
	.loc 7 2067 10
	cmpl	$0, -24(%ebp)
	jg	L2931
	.loc 7 2067 29 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2931:
	.loc 7 2069 13
	movl	-28(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L2989
	.loc 7 2070 34
	movl	-28(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	fldz
	fstps	8(%esp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbtt__csctx_rline_toP12stbtt__csctxff
	.loc 7 2071 14
	addl	$1, -28(%ebp)
	jmp	L2930
L2988:
	.loc 7 2065 15
	nop
L2930:
	.loc 7 2073 13
	movl	-28(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L2990
	.loc 7 2074 34
	movl	-28(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	fstps	8(%esp)
	fldz
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbtt__csctx_rline_toP12stbtt__csctxff
	.loc 7 2075 14
	addl	$1, -28(%ebp)
	.loc 7 2069 13
	jmp	L2931
L2989:
	.loc 7 2069 26
	nop
	jmp	L2922
L2990:
	.loc 7 2073 26
	nop
	.loc 7 2077 10
	jmp	L2922
L2901:
	.loc 7 2080 10
	cmpl	$3, -24(%ebp)
	jg	L2991
	.loc 7 2080 29 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2903:
	.loc 7 2083 10
	cmpl	$3, -24(%ebp)
	jg	L2937
	.loc 7 2083 29 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2937:
	.loc 7 2085 19
	movl	-28(%ebp), %eax
	addl	$3, %eax
	.loc 7 2085 13
	cmpl	%eax, -24(%ebp)
	jle	L2992
	.loc 7 2086 77
	movl	-24(%ebp), %eax
	subl	-28(%ebp), %eax
	.loc 7 2086 36
	cmpl	$5, %eax
	jne	L2940
	.loc 7 2086 93 discriminator 1
	movl	-28(%ebp), %eax
	addl	$4, %eax
	.loc 7 2086 36 discriminator 1
	flds	-300(%ebp,%eax,4)
	jmp	L2941
L2940:
	.loc 7 2086 36 is_stmt 0 discriminator 2
	fldz
L2941:
	.loc 7 2086 68 is_stmt 1 discriminator 4
	movl	-28(%ebp), %eax
	addl	$3, %eax
	.loc 7 2086 36 discriminator 4
	flds	-300(%ebp,%eax,4)
	.loc 7 2086 60 discriminator 4
	movl	-28(%ebp), %eax
	addl	$2, %eax
	.loc 7 2086 36 discriminator 4
	flds	-300(%ebp,%eax,4)
	.loc 7 2086 52 discriminator 4
	movl	-28(%ebp), %eax
	addl	$1, %eax
	.loc 7 2086 36 discriminator 4
	flds	-300(%ebp,%eax,4)
	movl	-28(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	fxch	%st(4)
	fstps	24(%esp)
	fxch	%st(2)
	fstps	20(%esp)
	fstps	16(%esp)
	fstps	12(%esp)
	fstps	8(%esp)
	fldz
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	.loc 7 2087 15 discriminator 4
	addl	$4, -28(%ebp)
	jmp	L2936
L2991:
	.loc 7 2081 15
	nop
L2936:
	.loc 7 2089 19
	movl	-28(%ebp), %eax
	addl	$3, %eax
	.loc 7 2089 13
	cmpl	%eax, -24(%ebp)
	jle	L2993
	.loc 7 2090 99
	movl	-28(%ebp), %eax
	addl	$3, %eax
	.loc 7 2090 36
	flds	-300(%ebp,%eax,4)
	.loc 7 2090 69
	movl	-24(%ebp), %eax
	subl	-28(%ebp), %eax
	.loc 7 2090 36
	cmpl	$5, %eax
	jne	L2943
	.loc 7 2090 84 discriminator 1
	movl	-28(%ebp), %eax
	addl	$4, %eax
	.loc 7 2090 36 discriminator 1
	flds	-300(%ebp,%eax,4)
	jmp	L2944
L2943:
	.loc 7 2090 36 is_stmt 0 discriminator 2
	fldz
L2944:
	.loc 7 2090 60 is_stmt 1 discriminator 4
	movl	-28(%ebp), %eax
	addl	$2, %eax
	.loc 7 2090 36 discriminator 4
	flds	-300(%ebp,%eax,4)
	.loc 7 2090 52 discriminator 4
	movl	-28(%ebp), %eax
	addl	$1, %eax
	.loc 7 2090 36 discriminator 4
	flds	-300(%ebp,%eax,4)
	movl	-28(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	fxch	%st(4)
	fstps	24(%esp)
	fxch	%st(2)
	fstps	20(%esp)
	fstps	16(%esp)
	fstps	12(%esp)
	fldz
	fstps	8(%esp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	.loc 7 2091 15 discriminator 4
	addl	$4, -28(%ebp)
	.loc 7 2085 13 discriminator 4
	jmp	L2937
L2992:
	.loc 7 2085 30
	nop
	jmp	L2922
L2993:
	.loc 7 2089 30
	nop
	.loc 7 2093 10
	jmp	L2922
L2916:
	.loc 7 2096 10
	cmpl	$5, -24(%ebp)
	jg	L2945
	.loc 7 2096 29 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2945:
	.loc 7 2097 19 discriminator 2
	movl	-28(%ebp), %eax
	addl	$5, %eax
	.loc 7 2097 23 discriminator 2
	cmpl	%eax, -24(%ebp)
	jle	L2994
	.loc 7 2098 81 discriminator 1
	movl	-28(%ebp), %eax
	addl	$5, %eax
	.loc 7 2098 36 discriminator 1
	flds	-300(%ebp,%eax,4)
	.loc 7 2098 73 discriminator 1
	movl	-28(%ebp), %eax
	addl	$4, %eax
	.loc 7 2098 36 discriminator 1
	flds	-300(%ebp,%eax,4)
	.loc 7 2098 65 discriminator 1
	movl	-28(%ebp), %eax
	addl	$3, %eax
	.loc 7 2098 36 discriminator 1
	flds	-300(%ebp,%eax,4)
	.loc 7 2098 57 discriminator 1
	movl	-28(%ebp), %eax
	addl	$2, %eax
	.loc 7 2098 36 discriminator 1
	flds	-300(%ebp,%eax,4)
	.loc 7 2098 49 discriminator 1
	movl	-28(%ebp), %eax
	addl	$1, %eax
	.loc 7 2098 36 discriminator 1
	flds	-300(%ebp,%eax,4)
	movl	-28(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	fxch	%st(5)
	fstps	24(%esp)
	fxch	%st(3)
	fstps	20(%esp)
	fxch	%st(1)
	fstps	16(%esp)
	fstps	12(%esp)
	fstps	8(%esp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	.loc 7 2097 31 discriminator 1
	addl	$6, -28(%ebp)
	.loc 7 2097 10 discriminator 1
	jmp	L2945
L2907:
	.loc 7 2102 10
	cmpl	$7, -24(%ebp)
	jg	L2947
	.loc 7 2102 29 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2947:
	.loc 7 2103 19 discriminator 2
	movl	-28(%ebp), %eax
	leal	5(%eax), %edx
	.loc 7 2103 28 discriminator 2
	movl	-24(%ebp), %eax
	subl	$2, %eax
	.loc 7 2103 23 discriminator 2
	cmpl	%eax, %edx
	jge	L2948
	.loc 7 2104 81 discriminator 1
	movl	-28(%ebp), %eax
	addl	$5, %eax
	.loc 7 2104 36 discriminator 1
	flds	-300(%ebp,%eax,4)
	.loc 7 2104 73 discriminator 1
	movl	-28(%ebp), %eax
	addl	$4, %eax
	.loc 7 2104 36 discriminator 1
	flds	-300(%ebp,%eax,4)
	.loc 7 2104 65 discriminator 1
	movl	-28(%ebp), %eax
	addl	$3, %eax
	.loc 7 2104 36 discriminator 1
	flds	-300(%ebp,%eax,4)
	.loc 7 2104 57 discriminator 1
	movl	-28(%ebp), %eax
	addl	$2, %eax
	.loc 7 2104 36 discriminator 1
	flds	-300(%ebp,%eax,4)
	.loc 7 2104 49 discriminator 1
	movl	-28(%ebp), %eax
	addl	$1, %eax
	.loc 7 2104 36 discriminator 1
	flds	-300(%ebp,%eax,4)
	movl	-28(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	fxch	%st(5)
	fstps	24(%esp)
	fxch	%st(3)
	fstps	20(%esp)
	fxch	%st(1)
	fstps	16(%esp)
	fstps	12(%esp)
	fstps	8(%esp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	.loc 7 2103 35 discriminator 1
	addl	$6, -28(%ebp)
	.loc 7 2103 10 discriminator 1
	jmp	L2947
L2948:
	.loc 7 2105 16
	movl	-28(%ebp), %eax
	addl	$1, %eax
	.loc 7 2105 10
	cmpl	%eax, -24(%ebp)
	jg	L2949
	.loc 7 2105 34 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2949:
	.loc 7 2106 44
	movl	-28(%ebp), %eax
	addl	$1, %eax
	.loc 7 2106 31
	flds	-300(%ebp,%eax,4)
	movl	-28(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	fxch	%st(1)
	fstps	8(%esp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbtt__csctx_rline_toP12stbtt__csctxff
	.loc 7 2107 10
	jmp	L2922
L2906:
	.loc 7 2110 10
	cmpl	$7, -24(%ebp)
	jg	L2950
	.loc 7 2110 29 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2950:
	.loc 7 2111 19 discriminator 2
	movl	-28(%ebp), %eax
	leal	1(%eax), %edx
	.loc 7 2111 28 discriminator 2
	movl	-24(%ebp), %eax
	subl	$6, %eax
	.loc 7 2111 23 discriminator 2
	cmpl	%eax, %edx
	jge	L2951
	.loc 7 2112 47 discriminator 1
	movl	-28(%ebp), %eax
	addl	$1, %eax
	.loc 7 2112 34 discriminator 1
	flds	-300(%ebp,%eax,4)
	movl	-28(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	fxch	%st(1)
	fstps	8(%esp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbtt__csctx_rline_toP12stbtt__csctxff
	.loc 7 2111 35 discriminator 1
	addl	$2, -28(%ebp)
	.loc 7 2111 10 discriminator 1
	jmp	L2950
L2951:
	.loc 7 2113 16
	movl	-28(%ebp), %eax
	addl	$5, %eax
	.loc 7 2113 10
	cmpl	%eax, -24(%ebp)
	jg	L2952
	.loc 7 2113 34 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2952:
	.loc 7 2114 78
	movl	-28(%ebp), %eax
	addl	$5, %eax
	.loc 7 2114 33
	flds	-300(%ebp,%eax,4)
	.loc 7 2114 70
	movl	-28(%ebp), %eax
	addl	$4, %eax
	.loc 7 2114 33
	flds	-300(%ebp,%eax,4)
	.loc 7 2114 62
	movl	-28(%ebp), %eax
	addl	$3, %eax
	.loc 7 2114 33
	flds	-300(%ebp,%eax,4)
	.loc 7 2114 54
	movl	-28(%ebp), %eax
	addl	$2, %eax
	.loc 7 2114 33
	flds	-300(%ebp,%eax,4)
	.loc 7 2114 46
	movl	-28(%ebp), %eax
	addl	$1, %eax
	.loc 7 2114 33
	flds	-300(%ebp,%eax,4)
	movl	-28(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	fxch	%st(5)
	fstps	24(%esp)
	fxch	%st(3)
	fstps	20(%esp)
	fxch	%st(1)
	fstps	16(%esp)
	fstps	12(%esp)
	fstps	8(%esp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	.loc 7 2115 10
	jmp	L2922
L2905:
	.loc 7 2119 10
	cmpl	$3, -24(%ebp)
	jg	L2953
	.loc 7 2119 29 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2953:
	.loc 7 2120 12
	fldz
	fstps	-40(%ebp)
	.loc 7 2121 17
	movl	-24(%ebp), %eax
	andl	$1, %eax
	.loc 7 2121 10
	testl	%eax, %eax
	je	L2958
	.loc 7 2121 26 discriminator 1
	movl	-28(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	fstps	-40(%ebp)
	.loc 7 2121 35 discriminator 1
	addl	$1, -28(%ebp)
L2958:
	.loc 7 2122 19 discriminator 1
	movl	-28(%ebp), %eax
	addl	$3, %eax
	.loc 7 2122 23 discriminator 1
	cmpl	%eax, -24(%ebp)
	jle	L2995
	.loc 7 2123 13
	cmpl	$27, -52(%ebp)
	jne	L2956
	.loc 7 2124 71
	movl	-28(%ebp), %eax
	addl	$3, %eax
	.loc 7 2124 39
	flds	-300(%ebp,%eax,4)
	.loc 7 2124 63
	movl	-28(%ebp), %eax
	addl	$2, %eax
	.loc 7 2124 39
	flds	-300(%ebp,%eax,4)
	.loc 7 2124 55
	movl	-28(%ebp), %eax
	addl	$1, %eax
	.loc 7 2124 39
	flds	-300(%ebp,%eax,4)
	movl	-28(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	fldz
	fstps	24(%esp)
	fxch	%st(3)
	fstps	20(%esp)
	fxch	%st(1)
	fstps	16(%esp)
	fstps	12(%esp)
	flds	-40(%ebp)
	fstps	8(%esp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	jmp	L2957
L2956:
	.loc 7 2126 76
	movl	-28(%ebp), %eax
	addl	$3, %eax
	.loc 7 2126 39
	flds	-300(%ebp,%eax,4)
	.loc 7 2126 63
	movl	-28(%ebp), %eax
	addl	$2, %eax
	.loc 7 2126 39
	flds	-300(%ebp,%eax,4)
	.loc 7 2126 55
	movl	-28(%ebp), %eax
	addl	$1, %eax
	.loc 7 2126 39
	flds	-300(%ebp,%eax,4)
	movl	-28(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	fxch	%st(3)
	fstps	24(%esp)
	fldz
	fstps	20(%esp)
	fxch	%st(1)
	fstps	16(%esp)
	fstps	12(%esp)
	fstps	8(%esp)
	flds	-40(%ebp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
L2957:
	.loc 7 2127 15
	fldz
	fstps	-40(%ebp)
	.loc 7 2122 31
	addl	$4, -28(%ebp)
	.loc 7 2122 10
	jmp	L2958
L2915:
	.loc 7 2132 10
	cmpl	$0, -32(%ebp)
	jne	L2904
	.loc 7 2133 32
	movl	8(%ebp), %eax
	movl	124(%eax), %eax
	.loc 7 2133 13
	testl	%eax, %eax
	je	L2959
	.loc 7 2134 68
	leal	-472(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL26stbtt__cid_get_glyph_subrsPK14stbtt_fontinfoi
	movl	-472(%ebp), %eax
	movl	%eax, -432(%ebp)
	movl	-468(%ebp), %eax
	movl	%eax, -428(%ebp)
	movl	-464(%ebp), %eax
	movl	%eax, -424(%ebp)
L2959:
	.loc 7 2135 23
	movl	$1, -32(%ebp)
L2904:
	.loc 7 2139 10
	cmpl	$0, -24(%ebp)
	jg	L2960
	.loc 7 2139 29 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2960:
	.loc 7 2140 12
	subl	$1, -24(%ebp)
	.loc 7 2140 26
	movl	-24(%ebp), %eax
	flds	-300(%ebp,%eax,4)
	.loc 7 2140 12
	fnstcw	-474(%ebp)
	movzwl	-474(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -476(%ebp)
	fldcw	-476(%ebp)
	fistpl	-56(%ebp)
	fldcw	-474(%ebp)
	.loc 7 2141 10
	cmpl	$9, -20(%ebp)
	jle	L2961
	.loc 7 2141 46 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2961:
	.loc 7 2142 38
	movl	-20(%ebp), %edx
	leal	1(%edx), %eax
	movl	%eax, -20(%ebp)
	.loc 7 2142 42
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	leal	-8(%ebp), %ecx
	addl	%ecx, %eax
	subl	$412, %eax
	movl	-444(%ebp), %edx
	movl	%edx, (%eax)
	movl	-440(%ebp), %edx
	movl	%edx, 4(%eax)
	movl	-436(%ebp), %edx
	movl	%edx, 8(%eax)
	.loc 7 2143 41
	cmpl	$10, -52(%ebp)
	jne	L2962
	.loc 7 2143 41 is_stmt 0 discriminator 1
	leal	-432(%ebp), %eax
	jmp	L2963
L2962:
	.loc 7 2143 41 discriminator 2
	movl	8(%ebp), %eax
	addl	$80, %eax
L2963:
	.loc 7 2143 66 is_stmt 1 discriminator 4
	leal	-472(%ebp), %edx
	movl	-56(%ebp), %ecx
	movl	%ecx, 16(%esp)
	movl	(%eax), %ecx
	movl	%ecx, 4(%esp)
	movl	4(%eax), %ecx
	movl	%ecx, 8(%esp)
	movl	8(%eax), %eax
	movl	%eax, 12(%esp)
	movl	%edx, (%esp)
	call	__ZL15stbtt__get_subr10stbtt__bufi
	movl	-472(%ebp), %eax
	movl	%eax, -444(%ebp)
	movl	-468(%ebp), %eax
	movl	%eax, -440(%ebp)
	movl	-464(%ebp), %eax
	movl	%eax, -436(%ebp)
	.loc 7 2144 16 discriminator 4
	movl	-436(%ebp), %eax
	.loc 7 2144 10 discriminator 4
	testl	%eax, %eax
	jne	L2964
	.loc 7 2144 34 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2964:
	.loc 7 2145 19
	movl	$0, -440(%ebp)
	.loc 7 2146 22
	movl	$0, -36(%ebp)
	.loc 7 2147 10
	jmp	L2922
L2914:
	.loc 7 2150 10
	cmpl	$0, -20(%ebp)
	jg	L2965
	.loc 7 2150 45 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2965:
	.loc 7 2151 12
	subl	$1, -20(%ebp)
	movl	-20(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	leal	-8(%ebp), %ecx
	addl	%ecx, %eax
	subl	$412, %eax
	movl	(%eax), %edx
	movl	%edx, -444(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -440(%ebp)
	movl	8(%eax), %eax
	movl	%eax, -436(%ebp)
	.loc 7 2152 22
	movl	$0, -36(%ebp)
	.loc 7 2153 10
	jmp	L2922
L2912:
	.loc 7 2156 34
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL24stbtt__csctx_close_shapeP12stbtt__csctx
	.loc 7 2157 17
	movl	$1, %eax
	jmp	L2986
L2913:
LBB566:
	.loc 7 2162 34
	leal	-444(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_get8P10stbtt__buf
	.loc 7 2162 37
	movzbl	%al, %eax
	movl	%eax, -60(%ebp)
	cmpl	$35, -60(%ebp)
	je	L2966
	cmpl	$35, -60(%ebp)
	jg	L2967
	cmpl	$34, -60(%ebp)
	je	L2968
	jmp	L2969
L2967:
	cmpl	$36, -60(%ebp)
	je	L2970
	cmpl	$37, -60(%ebp)
	je	L2971
	jmp	L2969
L2968:
	.loc 7 2167 13
	cmpl	$6, -24(%ebp)
	jg	L2972
	.loc 7 2167 32 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2972:
	.loc 7 2168 17
	flds	-300(%ebp)
	fstps	-64(%ebp)
	.loc 7 2169 17
	flds	-296(%ebp)
	fstps	-68(%ebp)
	.loc 7 2170 17
	flds	-292(%ebp)
	fstps	-72(%ebp)
	.loc 7 2171 17
	flds	-288(%ebp)
	fstps	-76(%ebp)
	.loc 7 2172 17
	flds	-284(%ebp)
	fstps	-80(%ebp)
	.loc 7 2173 17
	flds	-280(%ebp)
	fstps	-84(%ebp)
	.loc 7 2174 17
	flds	-276(%ebp)
	fstps	-44(%ebp)
	.loc 7 2175 36
	fldz
	fstps	24(%esp)
	flds	-76(%ebp)
	fstps	20(%esp)
	flds	-72(%ebp)
	fstps	16(%esp)
	flds	-68(%ebp)
	fstps	12(%esp)
	fldz
	fstps	8(%esp)
	flds	-64(%ebp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	.loc 7 2176 36
	flds	-72(%ebp)
	fchs
	fldz
	fstps	24(%esp)
	flds	-44(%ebp)
	fstps	20(%esp)
	fstps	16(%esp)
	flds	-84(%ebp)
	fstps	12(%esp)
	fldz
	fstps	8(%esp)
	flds	-80(%ebp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	.loc 7 2177 13
	jmp	L2973
L2966:
	.loc 7 2180 13
	cmpl	$12, -24(%ebp)
	jg	L2974
	.loc 7 2180 33 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2974:
	.loc 7 2181 17
	flds	-300(%ebp)
	fstps	-64(%ebp)
	.loc 7 2182 17
	flds	-296(%ebp)
	fstps	-88(%ebp)
	.loc 7 2183 17
	flds	-292(%ebp)
	fstps	-68(%ebp)
	.loc 7 2184 17
	flds	-288(%ebp)
	fstps	-72(%ebp)
	.loc 7 2185 17
	flds	-284(%ebp)
	fstps	-76(%ebp)
	.loc 7 2186 17
	flds	-280(%ebp)
	fstps	-92(%ebp)
	.loc 7 2187 17
	flds	-276(%ebp)
	fstps	-80(%ebp)
	.loc 7 2188 17
	flds	-272(%ebp)
	fstps	-96(%ebp)
	.loc 7 2189 17
	flds	-268(%ebp)
	fstps	-84(%ebp)
	.loc 7 2190 17
	flds	-264(%ebp)
	fstps	-100(%ebp)
	.loc 7 2191 17
	flds	-260(%ebp)
	fstps	-44(%ebp)
	.loc 7 2192 17
	flds	-256(%ebp)
	fstps	-48(%ebp)
	.loc 7 2194 36
	flds	-92(%ebp)
	fstps	24(%esp)
	flds	-76(%ebp)
	fstps	20(%esp)
	flds	-72(%ebp)
	fstps	16(%esp)
	flds	-68(%ebp)
	fstps	12(%esp)
	flds	-88(%ebp)
	fstps	8(%esp)
	flds	-64(%ebp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	.loc 7 2195 36
	flds	-48(%ebp)
	fstps	24(%esp)
	flds	-44(%ebp)
	fstps	20(%esp)
	flds	-100(%ebp)
	fstps	16(%esp)
	flds	-84(%ebp)
	fstps	12(%esp)
	flds	-96(%ebp)
	fstps	8(%esp)
	flds	-80(%ebp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	.loc 7 2196 13
	jmp	L2973
L2970:
	.loc 7 2199 13
	cmpl	$8, -24(%ebp)
	jg	L2975
	.loc 7 2199 32 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2975:
	.loc 7 2200 17
	flds	-300(%ebp)
	fstps	-64(%ebp)
	.loc 7 2201 17
	flds	-296(%ebp)
	fstps	-88(%ebp)
	.loc 7 2202 17
	flds	-292(%ebp)
	fstps	-68(%ebp)
	.loc 7 2203 17
	flds	-288(%ebp)
	fstps	-72(%ebp)
	.loc 7 2204 17
	flds	-284(%ebp)
	fstps	-76(%ebp)
	.loc 7 2205 17
	flds	-280(%ebp)
	fstps	-80(%ebp)
	.loc 7 2206 17
	flds	-276(%ebp)
	fstps	-84(%ebp)
	.loc 7 2207 17
	flds	-272(%ebp)
	fstps	-100(%ebp)
	.loc 7 2208 17
	flds	-268(%ebp)
	fstps	-44(%ebp)
	.loc 7 2209 36
	fldz
	fstps	24(%esp)
	flds	-76(%ebp)
	fstps	20(%esp)
	flds	-72(%ebp)
	fstps	16(%esp)
	flds	-68(%ebp)
	fstps	12(%esp)
	flds	-88(%ebp)
	fstps	8(%esp)
	flds	-64(%ebp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	.loc 7 2210 68
	flds	-88(%ebp)
	fadds	-72(%ebp)
	.loc 7 2210 72
	fadds	-100(%ebp)
	.loc 7 2210 36
	fchs
	fstps	24(%esp)
	flds	-44(%ebp)
	fstps	20(%esp)
	flds	-100(%ebp)
	fstps	16(%esp)
	flds	-84(%ebp)
	fstps	12(%esp)
	fldz
	fstps	8(%esp)
	flds	-80(%ebp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	.loc 7 2211 13
	jmp	L2973
L2971:
	.loc 7 2214 13
	cmpl	$10, -24(%ebp)
	jg	L2976
	.loc 7 2214 33 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2976:
	.loc 7 2215 17
	flds	-300(%ebp)
	fstps	-64(%ebp)
	.loc 7 2216 17
	flds	-296(%ebp)
	fstps	-88(%ebp)
	.loc 7 2217 17
	flds	-292(%ebp)
	fstps	-68(%ebp)
	.loc 7 2218 17
	flds	-288(%ebp)
	fstps	-72(%ebp)
	.loc 7 2219 17
	flds	-284(%ebp)
	fstps	-76(%ebp)
	.loc 7 2220 17
	flds	-280(%ebp)
	fstps	-92(%ebp)
	.loc 7 2221 17
	flds	-276(%ebp)
	fstps	-80(%ebp)
	.loc 7 2222 17
	flds	-272(%ebp)
	fstps	-96(%ebp)
	.loc 7 2223 17
	flds	-268(%ebp)
	fstps	-84(%ebp)
	.loc 7 2224 17
	flds	-264(%ebp)
	fstps	-100(%ebp)
	.loc 7 2225 23
	flds	-260(%ebp)
	fstps	-48(%ebp)
	.loc 7 2225 17
	flds	-48(%ebp)
	fstps	-44(%ebp)
	.loc 7 2226 21
	flds	-64(%ebp)
	fadds	-68(%ebp)
	.loc 7 2226 25
	fadds	-76(%ebp)
	.loc 7 2226 29
	fadds	-80(%ebp)
	.loc 7 2226 16
	flds	-84(%ebp)
	faddp	%st, %st(1)
	fstps	-104(%ebp)
	.loc 7 2227 21
	flds	-88(%ebp)
	fadds	-72(%ebp)
	.loc 7 2227 25
	fadds	-92(%ebp)
	.loc 7 2227 29
	fadds	-96(%ebp)
	.loc 7 2227 16
	flds	-100(%ebp)
	faddp	%st, %st(1)
	fstps	-108(%ebp)
	.loc 7 2228 17
	flds	-104(%ebp)
	fstps	(%esp)
	call	__ZSt4fabsf
	fstps	-480(%ebp)
	.loc 7 2228 34
	flds	-108(%ebp)
	fstps	(%esp)
	call	__ZSt4fabsf
	.loc 7 2228 32
	flds	-480(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	.loc 7 2228 13
	testb	%al, %al
	je	L2977
	.loc 7 2229 20
	flds	-108(%ebp)
	fchs
	fstps	-48(%ebp)
	jmp	L2978
L2977:
	.loc 7 2231 20
	flds	-104(%ebp)
	fchs
	fstps	-44(%ebp)
L2978:
	.loc 7 2232 36
	flds	-92(%ebp)
	fstps	24(%esp)
	flds	-76(%ebp)
	fstps	20(%esp)
	flds	-72(%ebp)
	fstps	16(%esp)
	flds	-68(%ebp)
	fstps	12(%esp)
	flds	-88(%ebp)
	fstps	8(%esp)
	flds	-64(%ebp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	.loc 7 2233 36
	flds	-48(%ebp)
	fstps	24(%esp)
	flds	-44(%ebp)
	fstps	20(%esp)
	flds	-100(%ebp)
	fstps	16(%esp)
	flds	-84(%ebp)
	fstps	12(%esp)
	flds	-96(%ebp)
	fstps	8(%esp)
	flds	-80(%ebp)
	fstps	4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff
	.loc 7 2234 13
	jmp	L2973
L2969:
	.loc 7 2237 20
	movl	$0, %eax
	jmp	L2986
L2973:
LBE566:
	.loc 7 2239 9
	jmp	L2922
L2900:
	.loc 7 2242 10
	cmpl	$255, -52(%ebp)
	je	L2979
	.loc 7 2242 24 discriminator 1
	cmpl	$28, -52(%ebp)
	je	L2979
	.loc 7 2242 36 discriminator 2
	cmpl	$31, -52(%ebp)
	jle	L2980
	.loc 7 2242 48 discriminator 3
	cmpl	$254, -52(%ebp)
	jle	L2979
L2980:
	.loc 7 2243 20
	movl	$0, %eax
	jmp	L2986
L2979:
	.loc 7 2246 10
	cmpl	$255, -52(%ebp)
	jne	L2981
	.loc 7 2247 37
	movl	$4, 4(%esp)
	leal	-444(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__buf_getP10stbtt__bufi
	.loc 7 2247 24
	movl	%eax, -480(%ebp)
	.loc 7 2247 17
	fildl	-480(%ebp)
	.loc 7 2247 15
	flds	LC176
	fdivrp	%st, %st(1)
	fstps	-40(%ebp)
	jmp	L2982
L2981:
	.loc 7 2249 28
	movl	$-1, 4(%esp)
	leal	-444(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL15stbtt__buf_skipP10stbtt__bufi
	.loc 7 2250 51
	leal	-444(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__cff_intP10stbtt__buf
	.loc 7 2250 17
	movw	%ax, -480(%ebp)
	.loc 7 2250 15
	filds	-480(%ebp)
	fstps	-40(%ebp)
L2982:
	.loc 7 2252 10
	cmpl	$47, -24(%ebp)
	jle	L2983
	.loc 7 2252 31 discriminator 1
	movl	$0, %eax
	jmp	L2986
L2983:
	.loc 7 2253 14
	movl	-24(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -24(%ebp)
	.loc 7 2253 18
	flds	-40(%ebp)
	fstps	-300(%ebp,%eax,4)
	.loc 7 2254 22
	movl	$0, -36(%ebp)
	.loc 7 2255 10
	jmp	L2922
L2987:
	.loc 7 2058 10
	nop
	jmp	L2922
L2994:
	.loc 7 2099 10
	nop
	jmp	L2922
L2995:
	.loc 7 2129 10
	nop
L2922:
LBE565:
LBE564:
	.loc 7 2257 7
	cmpl	$0, -36(%ebp)
	je	L2985
	.loc 7 2257 27 discriminator 1
	movl	$0, -24(%ebp)
LBE563:
	.loc 7 2017 4 discriminator 1
	jmp	L2985
L2899:
	.loc 7 2259 11
	movl	$0, %eax
L2986:
	.loc 7 2262 1 discriminator 5
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2029:
	.section .rdata,"dr"
	.align 4
LC177:
	.ascii "output_ctx.num_vertices == count_ctx.num_vertices\0"
	.text
	.def	__ZL22stbtt__GetGlyphShapeT2PK14stbtt_fontinfoiPP12stbtt_vertex;	.scl	3;	.type	32;	.endef
__ZL22stbtt__GetGlyphShapeT2PK14stbtt_fontinfoiPP12stbtt_vertex:
LFB2030:
	.loc 7 2265 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	subl	$116, %esp
	.cfi_offset 7, -12
	.loc 7 2267 17
	leal	-56(%ebp), %edx
	movl	$0, %eax
	movl	$12, %ecx
	movl	%edx, %edi
	rep stosl
	movl	$1, -56(%ebp)
	.loc 7 2268 17
	leal	-104(%ebp), %edx
	movl	$0, %eax
	movl	$12, %ecx
	movl	%edx, %edi
	rep stosl
	.loc 7 2269 29
	leal	-56(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbtt__run_charstringPK14stbtt_fontinfoiP12stbtt__csctx
	.loc 7 2269 60
	testl	%eax, %eax
	setne	%al
	.loc 7 2269 4
	testb	%al, %al
	je	L2997
	.loc 7 2270 35
	movl	-12(%ebp), %eax
	imull	$14, %eax, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, %edx
	.loc 7 2270 18
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 2271 30
	movl	16(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 2271 28
	movl	%eax, -64(%ebp)
	.loc 7 2272 32
	leal	-104(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbtt__run_charstringPK14stbtt_fontinfoiP12stbtt__csctx
	.loc 7 2272 64
	testl	%eax, %eax
	setne	%al
	.loc 7 2272 7
	testb	%al, %al
	je	L2997
	.loc 7 2273 10
	movl	-60(%ebp), %edx
	movl	-12(%ebp), %eax
	cmpl	%eax, %edx
	je	L3000
	.loc 7 2273 10 is_stmt 0 discriminator 2
	movl	$2273, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC177, (%esp)
	call	__assert
L3000:
	.loc 7 2274 28 is_stmt 1
	movl	-60(%ebp), %eax
	jmp	L3002
L2997:
	.loc 7 2277 15
	movl	16(%ebp), %eax
	movl	$0, (%eax)
	.loc 7 2278 11
	movl	$0, %eax
L3002:
	.loc 7 2279 1 discriminator 1
	addl	$116, %esp
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2030:
	.def	__ZL21stbtt__GetGlyphInfoT2PK14stbtt_fontinfoiPiS2_S2_S2_;	.scl	3;	.type	32;	.endef
__ZL21stbtt__GetGlyphInfoT2PK14stbtt_fontinfoiPiS2_S2_S2_:
LFB2031:
	.loc 7 2282 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	subl	$84, %esp
	.cfi_offset 7, -12
	.loc 7 2283 17
	leal	-60(%ebp), %edx
	movl	$0, %eax
	movl	$12, %ecx
	movl	%edx, %edi
	rep stosl
	movl	$1, -60(%ebp)
	.loc 7 2284 33
	leal	-60(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL21stbtt__run_charstringPK14stbtt_fontinfoiP12stbtt__csctx
	movl	%eax, -12(%ebp)
	.loc 7 2285 4
	cmpl	$0, 16(%ebp)
	je	L3004
	.loc 7 2285 21 discriminator 1
	cmpl	$0, -12(%ebp)
	je	L3005
	.loc 7 2285 21 is_stmt 0 discriminator 2
	movl	-36(%ebp), %eax
	jmp	L3006
L3005:
	.loc 7 2285 21 discriminator 3
	movl	$0, %eax
L3006:
	.loc 7 2285 17 is_stmt 1 discriminator 5
	movl	16(%ebp), %edx
	movl	%eax, (%edx)
L3004:
	.loc 7 2286 4
	cmpl	$0, 20(%ebp)
	je	L3007
	.loc 7 2286 21 discriminator 1
	cmpl	$0, -12(%ebp)
	je	L3008
	.loc 7 2286 21 is_stmt 0 discriminator 2
	movl	-28(%ebp), %eax
	jmp	L3009
L3008:
	.loc 7 2286 21 discriminator 3
	movl	$0, %eax
L3009:
	.loc 7 2286 17 is_stmt 1 discriminator 5
	movl	20(%ebp), %edx
	movl	%eax, (%edx)
L3007:
	.loc 7 2287 4
	cmpl	$0, 24(%ebp)
	je	L3010
	.loc 7 2287 21 discriminator 1
	cmpl	$0, -12(%ebp)
	je	L3011
	.loc 7 2287 21 is_stmt 0 discriminator 2
	movl	-32(%ebp), %eax
	jmp	L3012
L3011:
	.loc 7 2287 21 discriminator 3
	movl	$0, %eax
L3012:
	.loc 7 2287 17 is_stmt 1 discriminator 5
	movl	24(%ebp), %edx
	movl	%eax, (%edx)
L3010:
	.loc 7 2288 4
	cmpl	$0, 28(%ebp)
	je	L3013
	.loc 7 2288 21 discriminator 1
	cmpl	$0, -12(%ebp)
	je	L3014
	.loc 7 2288 21 is_stmt 0 discriminator 2
	movl	-24(%ebp), %eax
	jmp	L3015
L3014:
	.loc 7 2288 21 discriminator 3
	movl	$0, %eax
L3015:
	.loc 7 2288 17 is_stmt 1 discriminator 5
	movl	28(%ebp), %edx
	movl	%eax, (%edx)
L3013:
	.loc 7 2289 13
	cmpl	$0, -12(%ebp)
	je	L3016
	.loc 7 2289 13 is_stmt 0 discriminator 1
	movl	-16(%ebp), %eax
	jmp	L3018
L3016:
	.loc 7 2289 13 discriminator 2
	movl	$0, %eax
L3018:
	.loc 7 2290 1 is_stmt 1
	addl	$84, %esp
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2031:
	.globl	_stbtt_GetGlyphShape
	.def	_stbtt_GetGlyphShape;	.scl	2;	.type	32;	.endef
_stbtt_GetGlyphShape:
LFB2032:
	.loc 7 2293 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 2294 19
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	.loc 7 2294 4
	testl	%eax, %eax
	jne	L3020
	.loc 7 2295 36
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbtt__GetGlyphShapeTTPK14stbtt_fontinfoiPP12stbtt_vertex
	.loc 7 2295 65
	jmp	L3021
L3020:
	.loc 7 2297 36
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbtt__GetGlyphShapeT2PK14stbtt_fontinfoiPP12stbtt_vertex
	.loc 7 2297 65
	nop
L3021:
	.loc 7 2298 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2032:
	.globl	_stbtt_GetGlyphHMetrics
	.def	_stbtt_GetGlyphHMetrics;	.scl	2;	.type	32;	.endef
_stbtt_GetGlyphHMetrics:
LFB2033:
	.loc 7 2301 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 7 2302 54
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2302 65
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 2302 70
	addl	$34, %eax
	.loc 7 2302 47
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -10(%ebp)
	.loc 7 2303 20
	movzwl	-10(%ebp), %eax
	.loc 7 2303 4
	cmpl	%eax, 12(%ebp)
	jge	L3023
	.loc 7 2304 7
	cmpl	$0, 16(%ebp)
	je	L3024
	.loc 7 2304 62 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2304 75 discriminator 1
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	movl	%eax, %ecx
	.loc 7 2304 83 discriminator 1
	movl	12(%ebp), %eax
	sall	$2, %eax
	.loc 7 2304 80 discriminator 1
	addl	%ecx, %eax
	.loc 7 2304 55 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2304 46 discriminator 1
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
L3024:
	.loc 7 2305 7
	cmpl	$0, 20(%ebp)
	je	L3027
	.loc 7 2305 62 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2305 75 discriminator 1
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	movl	%eax, %ecx
	.loc 7 2305 83 discriminator 1
	movl	12(%ebp), %eax
	sall	$2, %eax
	.loc 7 2305 80 discriminator 1
	addl	%ecx, %eax
	.loc 7 2305 96 discriminator 1
	addl	$2, %eax
	.loc 7 2305 55 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2305 46 discriminator 1
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 2310 1 discriminator 1
	jmp	L3027
L3023:
	.loc 7 2307 7
	cmpl	$0, 16(%ebp)
	je	L3026
	.loc 7 2307 62 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2307 75 discriminator 1
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	movl	%eax, %ecx
	.loc 7 2307 104 discriminator 1
	movzwl	-10(%ebp), %eax
	subl	$1, %eax
	.loc 7 2307 83 discriminator 1
	sall	$2, %eax
	.loc 7 2307 80 discriminator 1
	addl	%ecx, %eax
	.loc 7 2307 55 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2307 46 discriminator 1
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
L3026:
	.loc 7 2308 7
	cmpl	$0, 20(%ebp)
	je	L3027
	.loc 7 2308 62 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2308 75 discriminator 1
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 7 2308 104 discriminator 1
	movl	%eax, %ebx
	.loc 7 2308 121 discriminator 1
	movzwl	-10(%ebp), %eax
	movl	12(%ebp), %ecx
	subl	%eax, %ecx
	movl	%ecx, %eax
	.loc 7 2308 107 discriminator 1
	addl	%eax, %eax
	.loc 7 2308 104 discriminator 1
	movl	%eax, %ecx
	.loc 7 2308 83 discriminator 1
	movzwl	-10(%ebp), %eax
	sall	$2, %eax
	.loc 7 2308 104 discriminator 1
	addl	%ecx, %eax
	addl	%ebx, %eax
	.loc 7 2308 55 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2308 46 discriminator 1
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
L3027:
	.loc 7 2310 1
	nop
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2033:
	.globl	_stbtt_GetKerningTableLength
	.def	_stbtt_GetKerningTableLength;	.scl	2;	.type	32;	.endef
_stbtt_GetKerningTableLength:
LFB2034:
	.loc 7 2313 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 2314 30
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2314 43
	movl	8(%ebp), %eax
	movl	36(%eax), %eax
	.loc 7 2314 17
	addl	%edx, %eax
	movl	%eax, -12(%ebp)
	.loc 7 2317 15
	movl	8(%ebp), %eax
	movl	36(%eax), %eax
	.loc 7 2317 4
	testl	%eax, %eax
	jne	L3029
	.loc 7 2318 14
	movl	$0, %eax
	jmp	L3030
L3029:
	.loc 7 2319 16
	movl	-12(%ebp), %eax
	addl	$2, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2319 25
	testw	%ax, %ax
	sete	%al
	.loc 7 2319 4
	testb	%al, %al
	je	L3031
	.loc 7 2320 14
	movl	$0, %eax
	jmp	L3030
L3031:
	.loc 7 2321 16
	movl	-12(%ebp), %eax
	addl	$8, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2321 25
	cmpw	$1, %ax
	setne	%al
	.loc 7 2321 4
	testb	%al, %al
	je	L3032
	.loc 7 2322 14
	movl	$0, %eax
	jmp	L3030
L3032:
	.loc 7 2324 19
	movl	-12(%ebp), %eax
	addl	$10, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2324 27
	movzwl	%ax, %eax
L3030:
	.loc 7 2325 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2034:
	.globl	_stbtt_GetKerningTable
	.def	_stbtt_GetKerningTable;	.scl	2;	.type	32;	.endef
_stbtt_GetKerningTable:
LFB2035:
	.loc 7 2328 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 2329 30
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2329 43
	movl	8(%ebp), %eax
	movl	36(%eax), %eax
	.loc 7 2329 17
	addl	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 7 2333 15
	movl	8(%ebp), %eax
	movl	36(%eax), %eax
	.loc 7 2333 4
	testl	%eax, %eax
	jne	L3034
	.loc 7 2334 14
	movl	$0, %eax
	jmp	L3035
L3034:
	.loc 7 2335 16
	movl	-20(%ebp), %eax
	addl	$2, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2335 25
	testw	%ax, %ax
	sete	%al
	.loc 7 2335 4
	testb	%al, %al
	je	L3036
	.loc 7 2336 14
	movl	$0, %eax
	jmp	L3035
L3036:
	.loc 7 2337 16
	movl	-20(%ebp), %eax
	addl	$8, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2337 25
	cmpw	$1, %ax
	setne	%al
	.loc 7 2337 4
	testb	%al, %al
	je	L3037
	.loc 7 2338 14
	movl	$0, %eax
	jmp	L3035
L3037:
	.loc 7 2340 21
	movl	-20(%ebp), %eax
	addl	$10, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2340 11
	movzwl	%ax, %eax
	movl	%eax, -16(%ebp)
	.loc 7 2341 4
	movl	16(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jge	L3038
	.loc 7 2342 14
	movl	16(%ebp), %eax
	movl	%eax, -16(%ebp)
L3038:
	.loc 7 2344 11
	movl	$0, -12(%ebp)
L3040:
	.loc 7 2344 18 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jge	L3039
	.loc 7 2346 44 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	.loc 7 2346 41 discriminator 2
	leal	18(%eax), %edx
	.loc 7 2346 33 discriminator 2
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movl	%eax, %ecx
	.loc 7 2346 14 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%eax, %edx
	.loc 7 2346 33 discriminator 2
	movzwl	%cx, %eax
	.loc 7 2346 23 discriminator 2
	movl	%eax, (%edx)
	.loc 7 2347 44 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	.loc 7 2347 41 discriminator 2
	leal	20(%eax), %edx
	.loc 7 2347 33 discriminator 2
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movl	%eax, %ecx
	.loc 7 2347 14 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%eax, %edx
	.loc 7 2347 33 discriminator 2
	movzwl	%cx, %eax
	.loc 7 2347 23 discriminator 2
	movl	%eax, 4(%edx)
	.loc 7 2348 44 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	.loc 7 2348 41 discriminator 2
	leal	22(%eax), %edx
	.loc 7 2348 33 discriminator 2
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movl	%eax, %ecx
	.loc 7 2348 14 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%eax, %edx
	.loc 7 2348 33 discriminator 2
	movswl	%cx, %eax
	.loc 7 2348 24 discriminator 2
	movl	%eax, 8(%edx)
	.loc 7 2344 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L3040
L3039:
	.loc 7 2351 11
	movl	-16(%ebp), %eax
L3035:
	.loc 7 2352 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2035:
	.def	__ZL30stbtt__GetGlyphKernInfoAdvancePK14stbtt_fontinfoii;	.scl	3;	.type	32;	.endef
__ZL30stbtt__GetGlyphKernInfoAdvancePK14stbtt_fontinfoii:
LFB2036:
	.loc 7 2355 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 2356 30
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2356 43
	movl	8(%ebp), %eax
	movl	36(%eax), %eax
	.loc 7 2356 17
	addl	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 7 2361 15
	movl	8(%ebp), %eax
	movl	36(%eax), %eax
	.loc 7 2361 4
	testl	%eax, %eax
	jne	L3042
	.loc 7 2362 14
	movl	$0, %eax
	jmp	L3043
L3042:
	.loc 7 2363 16
	movl	-20(%ebp), %eax
	addl	$2, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2363 25
	testw	%ax, %ax
	sete	%al
	.loc 7 2363 4
	testb	%al, %al
	je	L3044
	.loc 7 2364 14
	movl	$0, %eax
	jmp	L3043
L3044:
	.loc 7 2365 16
	movl	-20(%ebp), %eax
	addl	$8, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2365 25
	cmpw	$1, %ax
	setne	%al
	.loc 7 2365 4
	testb	%al, %al
	je	L3045
	.loc 7 2366 14
	movl	$0, %eax
	jmp	L3043
L3045:
	.loc 7 2368 6
	movl	$0, -12(%ebp)
	.loc 7 2369 16
	movl	-20(%ebp), %eax
	addl	$10, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 2369 6
	subl	$1, %eax
	movl	%eax, -16(%ebp)
	.loc 7 2370 20
	movl	12(%ebp), %eax
	sall	$16, %eax
	.loc 7 2370 26
	orl	16(%ebp), %eax
	.loc 7 2370 11
	movl	%eax, -24(%ebp)
L3050:
	.loc 7 2371 13
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jg	L3046
	.loc 7 2372 14
	movl	-12(%ebp), %edx
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 2372 9
	sarl	%eax
	movl	%eax, -28(%ebp)
	.loc 7 2373 33
	movl	-28(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	.loc 7 2373 30
	leal	18(%eax), %edx
	.loc 7 2373 22
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	movl	%eax, -32(%ebp)
	.loc 7 2374 7
	movl	-24(%ebp), %eax
	cmpl	-32(%ebp), %eax
	jnb	L3047
	.loc 7 2375 12
	movl	-28(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -16(%ebp)
	jmp	L3050
L3047:
	.loc 7 2376 12
	movl	-24(%ebp), %eax
	cmpl	-32(%ebp), %eax
	jbe	L3049
	.loc 7 2377 12
	movl	-28(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -12(%ebp)
	jmp	L3050
L3049:
	.loc 7 2379 35
	movl	-28(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	.loc 7 2379 32
	leal	22(%eax), %edx
	.loc 7 2379 24
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	.loc 7 2379 38
	cwtl
	jmp	L3043
L3046:
	.loc 7 2381 11
	movl	$0, %eax
L3043:
	.loc 7 2382 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2036:
	.def	__ZL23stbtt__GetCoverageIndexPhi;	.scl	3;	.type	32;	.endef
__ZL23stbtt__GetCoverageIndexPhi:
LFB2037:
	.loc 7 2385 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$104, %esp
	.loc 7 2386 43
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -26(%ebp)
LBB567:
	.loc 7 2387 5
	movzwl	-26(%ebp), %eax
	cmpl	$1, %eax
	je	L3052
	cmpl	$2, %eax
	je	L3053
	jmp	L3067
L3052:
LBB568:
LBB569:
	.loc 7 2389 47
	movl	8(%ebp), %eax
	addl	$2, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -28(%ebp)
	.loc 7 2392 25
	movl	$0, -12(%ebp)
	.loc 7 2392 42
	movzwl	-28(%ebp), %eax
	.loc 7 2392 30
	subl	$1, %eax
	movl	%eax, -16(%ebp)
	.loc 7 2393 24
	movl	12(%ebp), %eax
	movl	%eax, -32(%ebp)
L3060:
	.loc 7 2394 22
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jg	L3068
LBB570:
	.loc 7 2395 30
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -36(%ebp)
	.loc 7 2397 24
	movl	-12(%ebp), %edx
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 2397 19
	sarl	%eax
	movl	%eax, -40(%ebp)
	.loc 7 2398 51
	movl	-40(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 7 2398 35
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -42(%ebp)
	.loc 7 2399 23
	movzwl	-42(%ebp), %eax
	movl	%eax, -48(%ebp)
	.loc 7 2400 17
	movl	-32(%ebp), %eax
	cmpl	-48(%ebp), %eax
	jge	L3056
	.loc 7 2401 23
	movl	-40(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -16(%ebp)
	jmp	L3060
L3056:
	.loc 7 2402 22
	movl	-32(%ebp), %eax
	cmpl	-48(%ebp), %eax
	jle	L3058
	.loc 7 2403 23
	movl	-40(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -12(%ebp)
	jmp	L3060
L3058:
	.loc 7 2405 29
	movl	-40(%ebp), %eax
	jmp	L3059
L3053:
LBE570:
LBE569:
LBB571:
	.loc 7 2411 47
	movl	8(%ebp), %eax
	addl	$2, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -50(%ebp)
	.loc 7 2412 26
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -56(%ebp)
	.loc 7 2415 25
	movl	$0, -20(%ebp)
	.loc 7 2415 42
	movzwl	-50(%ebp), %eax
	.loc 7 2415 30
	subl	$1, %eax
	movl	%eax, -24(%ebp)
	.loc 7 2416 39
	movl	12(%ebp), %eax
	movl	%eax, -60(%ebp)
L3066:
	.loc 7 2417 22
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jg	L3069
LBB572:
	.loc 7 2419 24
	movl	-20(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 2419 19
	sarl	%eax
	movl	%eax, -64(%ebp)
	.loc 7 2420 46
	movl	-64(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 7 2420 29
	movl	-56(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -68(%ebp)
	.loc 7 2421 38
	movl	-68(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2421 28
	movzwl	%ax, %eax
	movl	%eax, -72(%ebp)
	.loc 7 2422 36
	movl	-68(%ebp), %eax
	addl	$2, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2422 26
	movzwl	%ax, %eax
	movl	%eax, -76(%ebp)
LBB573:
	.loc 7 2423 17
	movl	-60(%ebp), %eax
	cmpl	-72(%ebp), %eax
	jge	L3063
	.loc 7 2424 23
	movl	-64(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -24(%ebp)
	jmp	L3066
L3063:
LBB574:
LBB575:
	.loc 7 2425 22
	movl	-60(%ebp), %eax
	cmpl	-76(%ebp), %eax
	jle	L3065
	.loc 7 2426 23
	movl	-64(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -20(%ebp)
	jmp	L3066
L3065:
LBB576:
	.loc 7 2428 63
	movl	-68(%ebp), %eax
	addl	$4, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -78(%ebp)
	.loc 7 2429 47
	movzwl	-78(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 2429 57
	subl	-72(%ebp), %eax
	jmp	L3059
L3067:
LBE576:
LBE575:
LBE574:
LBE573:
LBE572:
LBE571:
	.loc 7 2436 13
	movl	$2436, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC5, (%esp)
	call	__assert
	.loc 7 2437 11
	jmp	L3061
L3068:
	.loc 7 2408 11
	nop
	jmp	L3061
L3069:
	.loc 7 2432 11
	nop
L3061:
LBE568:
LBE567:
	.loc 7 2440 13
	movl	$-1, %eax
L3059:
	.loc 7 2441 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2037:
	.def	__ZL20stbtt__GetGlyphClassPhi;	.scl	3;	.type	32;	.endef
__ZL20stbtt__GetGlyphClassPhi:
LFB2038:
	.loc 7 2444 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 7 2445 43
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -18(%ebp)
LBB577:
	.loc 7 2446 5
	movzwl	-18(%ebp), %eax
	cmpl	$1, %eax
	je	L3071
	cmpl	$2, %eax
	je	L3072
	jmp	L3082
L3071:
LBB578:
LBB579:
	.loc 7 2449 49
	movl	8(%ebp), %eax
	addl	$2, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -20(%ebp)
	.loc 7 2450 47
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -22(%ebp)
	.loc 7 2451 26
	movl	8(%ebp), %eax
	addl	$6, %eax
	movl	%eax, -28(%ebp)
	.loc 7 2453 23
	movzwl	-20(%ebp), %eax
	.loc 7 2453 13
	cmpl	%eax, 12(%ebp)
	jl	L3074
	.loc 7 2453 63 discriminator 1
	movzwl	-20(%ebp), %edx
	movzwl	-22(%ebp), %eax
	addl	%edx, %eax
	.loc 7 2453 39 discriminator 1
	cmpl	%eax, 12(%ebp)
	jge	L3074
	.loc 7 2454 79
	movzwl	-20(%ebp), %eax
	movl	12(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 2454 70
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 7 2454 45
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2454 94
	movzwl	%ax, %eax
	jmp	L3075
L3074:
	.loc 7 2456 53
	movzwl	-22(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 7 2456 27
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, 8(%ebp)
LBE579:
	.loc 7 2457 11
	jmp	L3076
L3072:
LBB580:
	.loc 7 2460 52
	movl	8(%ebp), %eax
	addl	$2, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -30(%ebp)
	.loc 7 2461 26
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -36(%ebp)
	.loc 7 2464 25
	movl	$0, -12(%ebp)
	.loc 7 2464 47
	movzwl	-30(%ebp), %eax
	.loc 7 2464 30
	subl	$1, %eax
	movl	%eax, -16(%ebp)
	.loc 7 2465 39
	movl	12(%ebp), %eax
	movl	%eax, -40(%ebp)
L3081:
	.loc 7 2466 22
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jg	L3077
LBB581:
	.loc 7 2468 24
	movl	-12(%ebp), %edx
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 2468 19
	sarl	%eax
	movl	%eax, -44(%ebp)
	.loc 7 2469 58
	movl	-44(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 7 2469 34
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -48(%ebp)
	.loc 7 2470 38
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2470 28
	movzwl	%ax, %eax
	movl	%eax, -52(%ebp)
	.loc 7 2471 36
	movl	-48(%ebp), %eax
	addl	$2, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2471 26
	movzwl	%ax, %eax
	movl	%eax, -56(%ebp)
	.loc 7 2472 17
	movl	-40(%ebp), %eax
	cmpl	-52(%ebp), %eax
	jge	L3078
	.loc 7 2473 23
	movl	-44(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -16(%ebp)
	jmp	L3081
L3078:
	.loc 7 2474 22
	movl	-40(%ebp), %eax
	cmpl	-56(%ebp), %eax
	jle	L3080
	.loc 7 2475 23
	movl	-44(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -12(%ebp)
	jmp	L3081
L3080:
	.loc 7 2477 49
	movl	-48(%ebp), %eax
	addl	$4, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2477 70
	movzwl	%ax, %eax
	jmp	L3075
L3077:
LBE581:
	.loc 7 2480 51
	movzwl	-30(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 7 2480 27
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, 8(%ebp)
LBE580:
	.loc 7 2481 11
	jmp	L3076
L3082:
	.loc 7 2485 13
	movl	$2485, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC5, (%esp)
	call	__assert
	.loc 7 2486 11
	nop
L3076:
LBE578:
LBE577:
	.loc 7 2489 13
	movl	$-1, %eax
L3075:
	.loc 7 2490 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2038:
	.section .rdata,"dr"
LC178:
	.ascii "coverageIndex < pairSetCount\0"
LC179:
	.ascii "glyph1class < class1Count\0"
LC180:
	.ascii "glyph2class < class2Count\0"
	.text
	.def	__ZL30stbtt__GetGlyphGPOSInfoAdvancePK14stbtt_fontinfoii;	.scl	3;	.type	32;	.endef
__ZL30stbtt__GetGlyphGPOSInfoAdvancePK14stbtt_fontinfoii:
LFB2039:
	.loc 7 2496 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$168, %esp
	.loc 7 2503 16
	movl	8(%ebp), %eax
	movl	40(%eax), %eax
	.loc 7 2503 5
	testl	%eax, %eax
	jne	L3084
	.loc 7 2503 29 discriminator 1
	movl	$0, %eax
	jmp	L3085
L3084:
	.loc 7 2505 18
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2505 31
	movl	8(%ebp), %eax
	movl	40(%eax), %eax
	.loc 7 2505 10
	addl	%edx, %eax
	movl	%eax, -28(%ebp)
	.loc 7 2507 17
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2507 26
	cmpw	$1, %ax
	setne	%al
	.loc 7 2507 5
	testb	%al, %al
	je	L3086
	.loc 7 2507 39 discriminator 1
	movl	$0, %eax
	jmp	L3085
L3086:
	.loc 7 2508 17
	movl	-28(%ebp), %eax
	addl	$2, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2508 26
	testw	%ax, %ax
	setne	%al
	.loc 7 2508 5
	testb	%al, %al
	je	L3087
	.loc 7 2508 39 discriminator 1
	movl	$0, %eax
	jmp	L3085
L3087:
	.loc 7 2510 32
	movl	-28(%ebp), %eax
	addl	$8, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -30(%ebp)
	.loc 7 2511 23
	movzwl	-30(%ebp), %edx
	.loc 7 2511 16
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -36(%ebp)
	.loc 7 2512 27
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -38(%ebp)
LBB582:
	.loc 7 2514 11
	movl	$0, -12(%ebp)
L3117:
	.loc 7 2514 16 discriminator 1
	movzwl	-38(%ebp), %eax
	cmpl	%eax, -12(%ebp)
	jge	L3088
LBB583:
	.loc 7 2515 65
	movl	-12(%ebp), %eax
	addl	%eax, %eax
	.loc 7 2515 61
	leal	2(%eax), %edx
	.loc 7 2515 45
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -40(%ebp)
	.loc 7 2516 47
	movzwl	-40(%ebp), %edx
	.loc 7 2516 22
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -44(%ebp)
	.loc 7 2518 43
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -46(%ebp)
	.loc 7 2519 46
	movl	-44(%ebp), %eax
	addl	$4, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -48(%ebp)
	.loc 7 2520 22
	movl	-44(%ebp), %eax
	addl	$6, %eax
	movl	%eax, -52(%ebp)
LBB584:
	.loc 7 2521 9
	movzwl	-46(%ebp), %eax
	cmpl	$2, %eax
	jne	L3119
LBB585:
LBB586:
LBB587:
	.loc 7 2524 25
	movl	$0, -16(%ebp)
L3115:
	.loc 7 2524 32 discriminator 1
	movzwl	-48(%ebp), %eax
	cmpl	%eax, -16(%ebp)
	jge	L3120
LBB588:
	.loc 7 2525 80
	movl	-16(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 7 2525 59
	movl	-52(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -54(%ebp)
	.loc 7 2526 54
	movzwl	-54(%ebp), %edx
	.loc 7 2526 34
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -60(%ebp)
	.loc 7 2527 54
	movl	-60(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -62(%ebp)
	.loc 7 2528 59
	movl	-60(%ebp), %eax
	addl	$2, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -64(%ebp)
	.loc 7 2529 72
	movzwl	-64(%ebp), %edx
	movl	-60(%ebp), %eax
	addl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL23stbtt__GetCoverageIndexPhi
	movl	%eax, -68(%ebp)
	.loc 7 2530 21
	cmpl	$-1, -68(%ebp)
	je	L3121
LBB589:
	.loc 7 2532 21
	movzwl	-62(%ebp), %eax
	cmpl	$1, %eax
	je	L3093
	cmpl	$2, %eax
	je	L3094
	jmp	L3118
L3093:
LBB590:
LBB591:
	.loc 7 2536 65
	movl	-60(%ebp), %eax
	addl	$4, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -70(%ebp)
	.loc 7 2537 65
	movl	-60(%ebp), %eax
	addl	$6, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -72(%ebp)
	.loc 7 2538 41
	movl	$2, -76(%ebp)
	.loc 7 2539 65
	movl	-60(%ebp), %eax
	addl	$8, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -78(%ebp)
	.loc 7 2540 82
	movl	-68(%ebp), %eax
	addl	%eax, %eax
	.loc 7 2540 78
	leal	10(%eax), %edx
	.loc 7 2540 66
	movl	-60(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -80(%ebp)
	.loc 7 2541 65
	movzwl	-80(%ebp), %edx
	.loc 7 2541 42
	movl	-60(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -84(%ebp)
	.loc 7 2542 67
	movl	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -86(%ebp)
	.loc 7 2543 42
	movl	-84(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -92(%ebp)
	.loc 7 2546 29
	cmpw	$4, -70(%ebp)
	je	L3096
	.loc 7 2546 59 discriminator 1
	movl	$0, %eax
	jmp	L3085
L3096:
	.loc 7 2548 29
	cmpw	$0, -72(%ebp)
	je	L3097
	.loc 7 2548 59 discriminator 1
	movl	$0, %eax
	jmp	L3085
L3097:
	.loc 7 2550 29
	movzwl	-78(%ebp), %eax
	cmpl	%eax, -68(%ebp)
	jl	L3100
	.loc 7 2550 29 is_stmt 0 discriminator 2
	movl	$2550, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC178, (%esp)
	call	__assert
L3100:
	.loc 7 2553 35 is_stmt 1
	movl	16(%ebp), %eax
	movl	%eax, -96(%ebp)
	.loc 7 2554 45
	movzwl	-86(%ebp), %eax
	.loc 7 2554 30
	subl	$1, %eax
	movl	%eax, -24(%ebp)
	.loc 7 2555 30
	movl	$0, -20(%ebp)
L3105:
	.loc 7 2558 38
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jg	L3122
LBB592:
	.loc 7 2561 40
	movl	-20(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 2561 35
	sarl	%eax
	movl	%eax, -100(%ebp)
	.loc 7 2562 65
	movl	-76(%ebp), %eax
	addl	$2, %eax
	.loc 7 2562 95
	imull	-100(%ebp), %eax
	movl	%eax, %edx
	.loc 7 2562 43
	movl	-92(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -104(%ebp)
	.loc 7 2563 55
	movl	-104(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -106(%ebp)
	.loc 7 2564 39
	movzwl	-106(%ebp), %eax
	movl	%eax, -112(%ebp)
LBB593:
	.loc 7 2565 33
	movl	-96(%ebp), %eax
	cmpl	-112(%ebp), %eax
	jge	L3102
	.loc 7 2566 39
	movl	-100(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -24(%ebp)
	jmp	L3105
L3102:
LBB594:
LBB595:
	.loc 7 2567 38
	movl	-96(%ebp), %eax
	cmpl	-112(%ebp), %eax
	jle	L3104
	.loc 7 2568 39
	movl	-100(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -20(%ebp)
	jmp	L3105
L3104:
LBB596:
	.loc 7 2570 67
	movl	-104(%ebp), %eax
	addl	$2, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movw	%ax, -114(%ebp)
	.loc 7 2571 44
	movswl	-114(%ebp), %eax
	jmp	L3085
L3094:
LBE596:
LBE595:
LBE594:
LBE593:
LBE592:
LBE591:
LBB597:
	.loc 7 2577 65
	movl	-60(%ebp), %eax
	addl	$4, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -116(%ebp)
	.loc 7 2578 65
	movl	-60(%ebp), %eax
	addl	$6, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -118(%ebp)
	.loc 7 2580 68
	movl	-60(%ebp), %eax
	addl	$8, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -120(%ebp)
	.loc 7 2581 68
	movl	-60(%ebp), %eax
	addl	$10, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -122(%ebp)
	.loc 7 2582 67
	movzwl	-120(%ebp), %edx
	movl	-60(%ebp), %eax
	addl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL20stbtt__GetGlyphClassPhi
	movl	%eax, -128(%ebp)
	.loc 7 2583 67
	movzwl	-122(%ebp), %edx
	movl	-60(%ebp), %eax
	addl	%eax, %edx
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL20stbtt__GetGlyphClassPhi
	movl	%eax, -132(%ebp)
	.loc 7 2585 64
	movl	-60(%ebp), %eax
	addl	$12, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -134(%ebp)
	.loc 7 2586 64
	movl	-60(%ebp), %eax
	addl	$14, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movw	%ax, -136(%ebp)
	.loc 7 2587 29
	movzwl	-134(%ebp), %eax
	cmpl	%eax, -128(%ebp)
	jl	L3108
	.loc 7 2587 29 is_stmt 0 discriminator 2
	movl	$2587, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC179, (%esp)
	call	__assert
L3108:
	.loc 7 2588 29 is_stmt 1
	movzwl	-136(%ebp), %eax
	cmpl	%eax, -132(%ebp)
	jl	L3111
	.loc 7 2588 29 is_stmt 0 discriminator 2
	movl	$2588, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC180, (%esp)
	call	__assert
L3111:
	.loc 7 2592 29 is_stmt 1
	cmpw	$4, -116(%ebp)
	je	L3112
	.loc 7 2592 59 discriminator 1
	movl	$0, %eax
	jmp	L3085
L3112:
	.loc 7 2594 29
	cmpw	$0, -118(%ebp)
	je	L3113
	.loc 7 2594 59 discriminator 1
	movl	$0, %eax
	jmp	L3085
L3113:
LBB598:
	.loc 7 2596 29
	cmpl	$0, -128(%ebp)
	js	L3123
	.loc 7 2596 65 discriminator 1
	movzwl	-134(%ebp), %eax
	.loc 7 2596 50 discriminator 1
	cmpl	%eax, -128(%ebp)
	jge	L3123
	.loc 7 2596 79 discriminator 2
	cmpl	$0, -132(%ebp)
	js	L3123
	.loc 7 2596 114 discriminator 3
	movzwl	-136(%ebp), %eax
	.loc 7 2596 99 discriminator 3
	cmpl	%eax, -132(%ebp)
	jge	L3123
LBB599:
	.loc 7 2597 46
	movl	-60(%ebp), %eax
	addl	$16, %eax
	movl	%eax, -140(%ebp)
	.loc 7 2598 95
	movzwl	-136(%ebp), %eax
	imull	-128(%ebp), %eax
	.loc 7 2598 80
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 7 2598 46
	movl	-140(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -144(%ebp)
	.loc 7 2599 82
	movl	-132(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	.loc 7 2599 63
	movl	-144(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movw	%ax, -146(%ebp)
	.loc 7 2600 40
	movswl	-146(%ebp), %eax
	jmp	L3085
L3118:
LBE599:
LBE598:
LBE597:
	.loc 7 2606 29
	movl	$2606, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC5, (%esp)
	call	__assert
	.loc 7 2607 29
	jmp	L3092
L3121:
LBE590:
LBE589:
	.loc 7 2530 46
	nop
	jmp	L3092
L3122:
LBB601:
LBB600:
	.loc 7 2574 27
	nop
	jmp	L3092
L3123:
	.loc 7 2602 27
	nop
L3092:
LBE600:
LBE601:
LBE588:
	.loc 7 2524 17 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3115
L3119:
LBE587:
LBE586:
	.loc 7 2616 17
	nop
	jmp	L3116
L3120:
LBB602:
	.loc 7 2611 17
	nop
L3116:
LBE602:
LBE585:
LBE584:
LBE583:
	.loc 7 2514 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L3117
L3088:
LBE582:
	.loc 7 2620 12
	movl	$0, %eax
L3085:
	.loc 7 2621 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2039:
	.globl	_stbtt_GetGlyphKernAdvance
	.def	_stbtt_GetGlyphKernAdvance;	.scl	2;	.type	32;	.endef
_stbtt_GetGlyphKernAdvance:
LFB2040:
	.loc 7 2624 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 2625 8
	movl	$0, -12(%ebp)
	.loc 7 2627 14
	movl	8(%ebp), %eax
	movl	40(%eax), %eax
	.loc 7 2627 4
	testl	%eax, %eax
	je	L3125
	.loc 7 2628 49
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL30stbtt__GetGlyphGPOSInfoAdvancePK14stbtt_fontinfoii
	.loc 7 2628 16
	addl	%eax, -12(%ebp)
	jmp	L3126
L3125:
	.loc 7 2629 19
	movl	8(%ebp), %eax
	movl	36(%eax), %eax
	.loc 7 2629 9
	testl	%eax, %eax
	je	L3126
	.loc 7 2630 49
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL30stbtt__GetGlyphKernInfoAdvancePK14stbtt_fontinfoii
	.loc 7 2630 16
	addl	%eax, -12(%ebp)
L3126:
	.loc 7 2632 11
	movl	-12(%ebp), %eax
	.loc 7 2633 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2040:
	.globl	_stbtt_GetCodepointKernAdvance
	.def	_stbtt_GetCodepointKernAdvance;	.scl	2;	.type	32;	.endef
_stbtt_GetCodepointKernAdvance:
LFB2041:
	.loc 7 2636 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$20, %esp
	.cfi_offset 3, -12
	.loc 7 2637 15
	movl	8(%ebp), %eax
	movl	36(%eax), %eax
	.loc 7 2637 4
	testl	%eax, %eax
	jne	L3129
	.loc 7 2637 30 discriminator 1
	movl	8(%ebp), %eax
	movl	40(%eax), %eax
	.loc 7 2637 20 discriminator 1
	testl	%eax, %eax
	jne	L3129
	.loc 7 2638 14
	movl	$0, %eax
	jmp	L3130
L3129:
	.loc 7 2639 36
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%eax, %ebx
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%ebx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphKernAdvance
	.loc 7 2639 105
	nop
L3130:
	.loc 7 2640 1
	addl	$20, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2041:
	.globl	_stbtt_GetCodepointHMetrics
	.def	_stbtt_GetCodepointHMetrics;	.scl	2;	.type	32;	.endef
_stbtt_GetCodepointHMetrics:
LFB2042:
	.loc 7 2643 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 2644 26
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%eax, %edx
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphHMetrics
	.loc 7 2645 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2042:
	.globl	_stbtt_GetFontVMetrics
	.def	_stbtt_GetFontVMetrics;	.scl	2;	.type	32;	.endef
_stbtt_GetFontVMetrics:
LFB2043:
	.loc 7 2648 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 2649 4
	cmpl	$0, 12(%ebp)
	je	L3133
	.loc 7 2649 42 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2649 53 discriminator 1
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 2649 58 discriminator 1
	addl	$4, %eax
	.loc 7 2649 35 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2649 26 discriminator 1
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
L3133:
	.loc 7 2650 4
	cmpl	$0, 16(%ebp)
	je	L3134
	.loc 7 2650 42 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2650 53 discriminator 1
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 2650 58 discriminator 1
	addl	$6, %eax
	.loc 7 2650 35 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2650 26 discriminator 1
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
L3134:
	.loc 7 2651 4
	cmpl	$0, 20(%ebp)
	je	L3136
	.loc 7 2651 42 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2651 53 discriminator 1
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 2651 58 discriminator 1
	addl	$8, %eax
	.loc 7 2651 35 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2651 26 discriminator 1
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
L3136:
	.loc 7 2652 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2043:
	.section .rdata,"dr"
LC181:
	.ascii "OS/2\0"
	.text
	.globl	_stbtt_GetFontVMetricsOS2
	.def	_stbtt_GetFontVMetricsOS2;	.scl	2;	.type	32;	.endef
_stbtt_GetFontVMetricsOS2:
LFB2044:
	.loc 7 2655 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 2656 50
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 2656 31
	movl	%eax, %edx
	.loc 7 2656 38
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 2656 31
	movl	$LC181, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	.loc 7 2656 67
	movl	%eax, -12(%ebp)
	.loc 7 2657 4
	cmpl	$0, -12(%ebp)
	jne	L3138
	.loc 7 2658 14
	movl	$0, %eax
	jmp	L3139
L3138:
	.loc 7 2659 4
	cmpl	$0, 12(%ebp)
	je	L3140
	.loc 7 2659 50 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 2659 59 discriminator 1
	movl	-12(%ebp), %edx
	addl	$68, %edx
	.loc 7 2659 43 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2659 34 discriminator 1
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
L3140:
	.loc 7 2660 4
	cmpl	$0, 16(%ebp)
	je	L3141
	.loc 7 2660 50 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 2660 59 discriminator 1
	movl	-12(%ebp), %edx
	addl	$70, %edx
	.loc 7 2660 43 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2660 34 discriminator 1
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
L3141:
	.loc 7 2661 4
	cmpl	$0, 20(%ebp)
	je	L3142
	.loc 7 2661 50 discriminator 1
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 2661 59 discriminator 1
	movl	-12(%ebp), %edx
	addl	$72, %edx
	.loc 7 2661 43 discriminator 1
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2661 34 discriminator 1
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
L3142:
	.loc 7 2662 11
	movl	$1, %eax
L3139:
	.loc 7 2663 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2044:
	.globl	_stbtt_GetFontBoundingBox
	.def	_stbtt_GetFontBoundingBox;	.scl	2;	.type	32;	.endef
_stbtt_GetFontBoundingBox:
LFB2045:
	.loc 7 2666 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 2667 24
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2667 37
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	.loc 7 2667 42
	addl	$36, %eax
	.loc 7 2667 17
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2667 8
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 2668 24
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2668 37
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	.loc 7 2668 42
	addl	$38, %eax
	.loc 7 2668 17
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2668 8
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 2669 24
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2669 37
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	.loc 7 2669 42
	addl	$40, %eax
	.loc 7 2669 17
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2669 8
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 2670 24
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2670 37
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	.loc 7 2670 42
	addl	$42, %eax
	.loc 7 2670 17
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %edx
	.loc 7 2670 8
	movl	24(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 2671 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2045:
	.globl	_stbtt_ScaleForPixelHeight
	.def	_stbtt_ScaleForPixelHeight;	.scl	2;	.type	32;	.endef
_stbtt_ScaleForPixelHeight:
LFB2046:
	.loc 7 2674 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 7 2675 32
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2675 45
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 2675 50
	addl	$4, %eax
	.loc 7 2675 25
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	movswl	%ax, %ebx
	.loc 7 2675 71
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2675 84
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 2675 89
	addl	$6, %eax
	.loc 7 2675 64
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL7ttSHORTPh
	cwtl
	.loc 7 2675 92
	subl	%eax, %ebx
	movl	%ebx, %eax
	movl	%eax, -12(%ebp)
	.loc 7 2676 26
	fildl	-12(%ebp)
	.loc 7 2676 28
	flds	12(%ebp)
	fdivp	%st, %st(1)
	.loc 7 2677 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2046:
	.globl	_stbtt_ScaleForMappingEmToPixels
	.def	_stbtt_ScaleForMappingEmToPixels;	.scl	2;	.type	32;	.endef
_stbtt_ScaleForMappingEmToPixels:
LFB2047:
	.loc 7 2680 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 2681 36
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2681 49
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	.loc 7 2681 54
	addl	$18, %eax
	.loc 7 2681 29
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2681 58
	movzwl	%ax, %eax
	movl	%eax, -12(%ebp)
	.loc 7 2682 18
	fildl	-12(%ebp)
	.loc 7 2682 20
	flds	12(%ebp)
	fdivp	%st, %st(1)
	.loc 7 2683 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2047:
	.globl	_stbtt_FreeShape
	.def	_stbtt_FreeShape;	.scl	2;	.type	32;	.endef
_stbtt_FreeShape:
LFB2048:
	.loc 7 2686 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 2687 4
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 2688 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2048:
	.globl	__Z16stbtt_FindSVGDocPK14stbtt_fontinfoi
	.def	__Z16stbtt_FindSVGDocPK14stbtt_fontinfoi;	.scl	2;	.type	32;	.endef
__Z16stbtt_FindSVGDocPK14stbtt_fontinfoi:
LFB2049:
	.loc 7 2691 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 2693 17
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 7 2694 53
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__get_svgP14stbtt_fontinfo
	movl	%eax, %edx
	.loc 7 2694 77
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 7 2696 29
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 2696 42
	movzwl	%ax, %eax
	movl	%eax, -24(%ebp)
	.loc 7 2697 17
	movl	-20(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -28(%ebp)
LBB603:
	.loc 7 2699 9
	movl	$0, -12(%ebp)
L3155:
	.loc 7 2699 14 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jge	L3150
LBB604:
	.loc 7 2700 45
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 7 2700 20
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -32(%ebp)
	.loc 7 2701 26
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 2701 37
	cmpl	%eax, 12(%ebp)
	jl	L3151
	.loc 7 2701 55 discriminator 1
	movl	-32(%ebp), %eax
	addl	$2, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 2701 37 discriminator 1
	cmpl	%eax, 12(%ebp)
	jg	L3151
	.loc 7 2701 37 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L3152
L3151:
	.loc 7 2701 37 discriminator 4
	movl	$0, %eax
L3152:
	.loc 7 2701 7 is_stmt 1 discriminator 6
	testb	%al, %al
	je	L3153
	.loc 7 2702 17
	movl	-32(%ebp), %eax
	jmp	L3154
L3153:
LBE604:
	.loc 7 2699 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L3155
L3150:
LBE603:
	.loc 7 2704 11
	movl	$0, %eax
L3154:
	.loc 7 2705 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2049:
	.globl	_stbtt_GetGlyphSVG
	.def	_stbtt_GetGlyphSVG;	.scl	2;	.type	32;	.endef
_stbtt_GetGlyphSVG:
LFB2050:
	.loc 7 2708 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 7 2709 17
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 7 2712 14
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	.loc 7 2712 4
	testl	%eax, %eax
	jne	L3157
	.loc 7 2713 14
	movl	$0, %eax
	jmp	L3158
L3157:
	.loc 7 2715 30
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z16stbtt_FindSVGDocPK14stbtt_fontinfoi
	movl	%eax, -16(%ebp)
	.loc 7 2716 4
	cmpl	$0, -16(%ebp)
	je	L3159
	.loc 7 2717 36
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, %ebx
	.loc 7 2717 49
	movl	-16(%ebp), %eax
	addl	$4, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	.loc 7 2717 40
	leal	(%ebx,%eax), %edx
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 7 2717 12
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 2718 21
	movl	-16(%ebp), %eax
	addl	$8, %eax
	movl	%eax, (%esp)
	call	__ZL7ttULONGPh
	.loc 7 2718 33
	jmp	L3158
L3159:
	.loc 7 2720 14
	movl	$0, %eax
L3158:
	.loc 7 2722 1
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2050:
	.globl	_stbtt_GetCodepointSVG
	.def	_stbtt_GetCodepointSVG;	.scl	2;	.type	32;	.endef
_stbtt_GetCodepointSVG:
LFB2051:
	.loc 7 2725 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 2726 28
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%eax, %edx
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphSVG
	.loc 7 2727 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2051:
	.globl	_stbtt_GetGlyphBitmapBoxSubpixel
	.def	_stbtt_GetGlyphBitmapBoxSubpixel;	.scl	2;	.type	32;	.endef
_stbtt_GetGlyphBitmapBoxSubpixel:
LFB2052:
	.loc 7 2735 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 7 2736 8
	movl	$0, -12(%ebp)
	.loc 7 2736 13
	movl	$0, -16(%ebp)
	.loc 7 2737 26
	leal	-24(%ebp), %eax
	movl	%eax, 20(%esp)
	leal	-20(%ebp), %eax
	movl	%eax, 16(%esp)
	leal	-16(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphBox
	.loc 7 2737 8
	testl	%eax, %eax
	sete	%al
	.loc 7 2737 4
	testb	%al, %al
	je	L3163
	.loc 7 2739 7
	cmpl	$0, 32(%ebp)
	je	L3164
	.loc 7 2739 21 discriminator 1
	movl	32(%ebp), %eax
	movl	$0, (%eax)
L3164:
	.loc 7 2740 7
	cmpl	$0, 36(%ebp)
	je	L3165
	.loc 7 2740 21 discriminator 1
	movl	36(%ebp), %eax
	movl	$0, (%eax)
L3165:
	.loc 7 2741 7
	cmpl	$0, 40(%ebp)
	je	L3166
	.loc 7 2741 21 discriminator 1
	movl	40(%ebp), %eax
	movl	$0, (%eax)
L3166:
	.loc 7 2742 7
	cmpl	$0, 44(%ebp)
	je	L3171
	.loc 7 2742 21 discriminator 1
	movl	44(%ebp), %eax
	movl	$0, (%eax)
	.loc 7 2750 1 discriminator 1
	jmp	L3171
L3163:
	.loc 7 2745 7
	cmpl	$0, 32(%ebp)
	je	L3168
	.loc 7 2745 23 discriminator 1
	movl	-12(%ebp), %eax
	movl	%eax, -36(%ebp)
	fildl	-36(%ebp)
	fmuls	16(%ebp)
	fadds	24(%ebp)
	fstps	(%esp)
	call	__ZSt5floorf
	fnstcw	-26(%ebp)
	movzwl	-26(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -28(%ebp)
	fldcw	-28(%ebp)
	fistpl	-32(%ebp)
	fldcw	-26(%ebp)
	movl	-32(%ebp), %edx
	.loc 7 2745 21 discriminator 1
	movl	32(%ebp), %eax
	movl	%edx, (%eax)
L3168:
	.loc 7 2746 7
	cmpl	$0, 36(%ebp)
	je	L3169
	.loc 7 2746 23 discriminator 1
	movl	-24(%ebp), %eax
	negl	%eax
	movl	%eax, -36(%ebp)
	fildl	-36(%ebp)
	fmuls	20(%ebp)
	fadds	28(%ebp)
	fstps	(%esp)
	call	__ZSt5floorf
	fnstcw	-26(%ebp)
	movzwl	-26(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -28(%ebp)
	fldcw	-28(%ebp)
	fistpl	-32(%ebp)
	fldcw	-26(%ebp)
	movl	-32(%ebp), %edx
	.loc 7 2746 21 discriminator 1
	movl	36(%ebp), %eax
	movl	%edx, (%eax)
L3169:
	.loc 7 2747 7
	cmpl	$0, 40(%ebp)
	je	L3170
	.loc 7 2747 23 discriminator 1
	movl	-20(%ebp), %eax
	movl	%eax, -36(%ebp)
	fildl	-36(%ebp)
	fmuls	16(%ebp)
	fadds	24(%ebp)
	fstps	(%esp)
	call	__ZSt4ceilf
	fnstcw	-26(%ebp)
	movzwl	-26(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -28(%ebp)
	fldcw	-28(%ebp)
	fistpl	-32(%ebp)
	fldcw	-26(%ebp)
	movl	-32(%ebp), %edx
	.loc 7 2747 21 discriminator 1
	movl	40(%ebp), %eax
	movl	%edx, (%eax)
L3170:
	.loc 7 2748 7
	cmpl	$0, 44(%ebp)
	je	L3171
	.loc 7 2748 23 discriminator 1
	movl	-16(%ebp), %eax
	negl	%eax
	movl	%eax, -36(%ebp)
	fildl	-36(%ebp)
	fmuls	20(%ebp)
	fadds	28(%ebp)
	fstps	(%esp)
	call	__ZSt4ceilf
	fnstcw	-26(%ebp)
	movzwl	-26(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -28(%ebp)
	fldcw	-28(%ebp)
	fistpl	-32(%ebp)
	fldcw	-26(%ebp)
	movl	-32(%ebp), %edx
	.loc 7 2748 21 discriminator 1
	movl	44(%ebp), %eax
	movl	%edx, (%eax)
L3171:
	.loc 7 2750 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2052:
	.globl	_stbtt_GetGlyphBitmapBox
	.def	_stbtt_GetGlyphBitmapBox;	.scl	2;	.type	32;	.endef
_stbtt_GetGlyphBitmapBox:
LFB2053:
	.loc 7 2753 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 2754 35
	movl	36(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 24(%esp)
	fldz
	fstps	20(%esp)
	fldz
	fstps	16(%esp)
	flds	20(%ebp)
	fstps	12(%esp)
	flds	16(%ebp)
	fstps	8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphBitmapBoxSubpixel
	.loc 7 2755 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2053:
	.globl	_stbtt_GetCodepointBitmapBoxSubpixel
	.def	_stbtt_GetCodepointBitmapBoxSubpixel;	.scl	2;	.type	32;	.endef
_stbtt_GetCodepointBitmapBoxSubpixel:
LFB2054:
	.loc 7 2758 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 2759 35
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%eax, %edx
	movl	44(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 24(%esp)
	flds	28(%ebp)
	fstps	20(%esp)
	flds	24(%ebp)
	fstps	16(%esp)
	flds	20(%ebp)
	fstps	12(%esp)
	flds	16(%ebp)
	fstps	8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphBitmapBoxSubpixel
	.loc 7 2760 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2054:
	.globl	_stbtt_GetCodepointBitmapBox
	.def	_stbtt_GetCodepointBitmapBox;	.scl	2;	.type	32;	.endef
_stbtt_GetCodepointBitmapBox:
LFB2055:
	.loc 7 2763 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 2764 39
	movl	36(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 24(%esp)
	fldz
	fstps	20(%esp)
	fldz
	fstps	16(%esp)
	flds	20(%ebp)
	fstps	12(%esp)
	flds	16(%ebp)
	fstps	8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetCodepointBitmapBoxSubpixel
	.loc 7 2765 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2055:
	.def	__ZL18stbtt__hheap_allocP12stbtt__hheapjPv;	.scl	3;	.type	32;	.endef
__ZL18stbtt__hheap_allocP12stbtt__hheapjPv:
LFB2056:
	.loc 7 2784 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
LBB605:
	.loc 7 2785 12
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 2785 4
	testl	%eax, %eax
	je	L3176
LBB606:
	.loc 7 2786 13
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 7 2787 24
	movl	-12(%ebp), %eax
	movl	(%eax), %edx
	.loc 7 2787 22
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 7 2788 14
	movl	-12(%ebp), %eax
	jmp	L3177
L3176:
LBE606:
LBB607:
LBB608:
	.loc 7 2790 15
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 2790 7
	testl	%eax, %eax
	jne	L3178
LBB609:
	.loc 7 2791 33
	cmpl	$31, 12(%ebp)
	jbe	L3179
	.loc 7 2791 53 discriminator 1
	cmpl	$127, 12(%ebp)
	ja	L3180
	.loc 7 2791 53 is_stmt 0 discriminator 3
	movl	$800, %eax
	jmp	L3182
L3180:
	.loc 7 2791 53 discriminator 4
	movl	$100, %eax
	jmp	L3182
L3179:
	.loc 7 2791 33 is_stmt 1 discriminator 2
	movl	$2000, %eax
L3182:
	.loc 7 2791 14 discriminator 8
	movl	%eax, -16(%ebp)
	.loc 7 2792 57 discriminator 8
	movl	-16(%ebp), %eax
	imull	12(%ebp), %eax
	addl	$4, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -20(%ebp)
	.loc 7 2793 10 discriminator 8
	cmpl	$0, -20(%ebp)
	jne	L3183
	.loc 7 2794 20
	movl	$0, %eax
	jmp	L3177
L3183:
	.loc 7 2795 24
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 7 2795 18
	movl	-20(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 2796 19
	movl	8(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%edx, (%eax)
	.loc 7 2797 42
	movl	8(%ebp), %eax
	movl	-16(%ebp), %edx
	movl	%edx, 8(%eax)
L3178:
LBE609:
LBE608:
	.loc 7 2799 13
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 2799 7
	leal	-1(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 7 2800 28
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 7 2800 76
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 2800 70
	imull	12(%ebp), %eax
	.loc 7 2800 63
	addl	$4, %eax
	.loc 7 2800 76
	addl	%edx, %eax
L3177:
LBE607:
LBE605:
	.loc 7 2802 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2056:
	.def	__ZL17stbtt__hheap_freeP12stbtt__hheapPv;	.scl	3;	.type	32;	.endef
__ZL17stbtt__hheap_freeP12stbtt__hheapPv:
LFB2057:
	.loc 7 2805 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 7 2806 23
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 2806 17
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 2807 19
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 4(%eax)
	.loc 7 2808 1
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2057:
	.def	__ZL20stbtt__hheap_cleanupP12stbtt__hheapPv;	.scl	3;	.type	32;	.endef
__ZL20stbtt__hheap_cleanupP12stbtt__hheapPv:
LFB2058:
	.loc 7 2811 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 2812 24
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
L3187:
	.loc 7 2813 11
	cmpl	$0, -12(%ebp)
	je	L3188
LBB610:
	.loc 7 2814 27
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 7 2815 7
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 2816 9
	movl	-16(%ebp), %eax
	movl	%eax, -12(%ebp)
LBE610:
	.loc 7 2813 4
	jmp	L3187
L3188:
	.loc 7 2818 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2058:
	.section .rdata,"dr"
LC182:
	.ascii "z != __null\0"
	.text
	.def	__ZL17stbtt__new_activeP12stbtt__hheapP11stbtt__edgeifPv;	.scl	3;	.type	32;	.endef
__ZL17stbtt__new_activeP12stbtt__hheapP11stbtt__edgeifPv:
LFB2059:
	.loc 7 2871 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 2872 69
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$28, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbtt__hheap_allocP12stbtt__hheapjPv
	movl	%eax, -12(%ebp)
	.loc 7 2873 21
	movl	12(%ebp), %eax
	flds	8(%eax)
	.loc 7 2873 29
	movl	12(%ebp), %eax
	flds	(%eax)
	.loc 7 2873 24
	fsubrp	%st, %st(1)
	.loc 7 2873 39
	movl	12(%ebp), %eax
	flds	12(%eax)
	.loc 7 2873 47
	movl	12(%ebp), %eax
	flds	4(%eax)
	.loc 7 2873 42
	fsubrp	%st, %st(1)
	.loc 7 2873 10
	fdivrp	%st, %st(1)
	fstps	-16(%ebp)
	.loc 7 2874 4
	cmpl	$0, -12(%ebp)
	jne	L3192
	.loc 7 2874 4 is_stmt 0 discriminator 2
	movl	$2874, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC182, (%esp)
	call	__assert
L3192:
	.loc 7 2876 4 is_stmt 1
	cmpl	$0, -12(%ebp)
	jne	L3193
	.loc 7 2876 19 discriminator 1
	movl	-12(%ebp), %eax
	jmp	L3194
L3193:
	.loc 7 2877 11
	movl	-12(%ebp), %eax
	flds	-16(%ebp)
	fstps	8(%eax)
	.loc 7 2878 26
	flds	-16(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jp	L3200
	flds	-16(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	je	L3201
L3200:
	.loc 7 2878 26 is_stmt 0 discriminator 1
	fld1
	fdivs	-16(%ebp)
	jmp	L3197
L3201:
	.loc 7 2878 26 discriminator 2
	fldz
L3197:
	.loc 7 2878 11 is_stmt 1 discriminator 4
	movl	-12(%ebp), %eax
	fstps	12(%eax)
	.loc 7 2879 15 discriminator 4
	movl	12(%ebp), %eax
	flds	(%eax)
	.loc 7 2879 45 discriminator 4
	movl	12(%ebp), %eax
	flds	4(%eax)
	.loc 7 2879 40 discriminator 4
	flds	20(%ebp)
	fsubp	%st, %st(1)
	.loc 7 2879 25 discriminator 4
	fmuls	-16(%ebp)
	.loc 7 2879 18 discriminator 4
	faddp	%st, %st(1)
	.loc 7 2879 10 discriminator 4
	movl	-12(%ebp), %eax
	fstps	4(%eax)
	.loc 7 2880 10 discriminator 4
	movl	-12(%ebp), %eax
	flds	4(%eax)
	fildl	16(%ebp)
	fsubrp	%st, %st(1)
	movl	-12(%ebp), %eax
	fstps	4(%eax)
	.loc 7 2881 22 discriminator 4
	movl	12(%ebp), %eax
	movl	16(%eax), %eax
	.loc 7 2881 29 discriminator 4
	testl	%eax, %eax
	je	L3198
	.loc 7 2881 29 is_stmt 0 discriminator 1
	fld1
	jmp	L3199
L3198:
	.loc 7 2881 29 discriminator 2
	fld1
	fchs
L3199:
	.loc 7 2881 17 is_stmt 1 discriminator 4
	movl	-12(%ebp), %eax
	fstps	16(%eax)
	.loc 7 2882 15 discriminator 4
	movl	12(%ebp), %eax
	flds	4(%eax)
	.loc 7 2882 10 discriminator 4
	movl	-12(%ebp), %eax
	fstps	20(%eax)
	.loc 7 2883 15 discriminator 4
	movl	12(%ebp), %eax
	flds	12(%eax)
	.loc 7 2883 10 discriminator 4
	movl	-12(%ebp), %eax
	fstps	24(%eax)
	.loc 7 2884 12 discriminator 4
	movl	-12(%ebp), %eax
	movl	$0, (%eax)
	.loc 7 2885 11 discriminator 4
	movl	-12(%ebp), %eax
L3194:
	.loc 7 2886 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2059:
	.section .rdata,"dr"
LC184:
	.ascii "y0 < y1\0"
LC185:
	.ascii "e->sy <= e->ey\0"
LC186:
	.ascii "x1 <= x+1\0"
LC187:
	.ascii "x1 >= x\0"
LC188:
	.ascii "x1 <= x\0"
LC189:
	.ascii "x1 >= x+1\0"
LC190:
	.ascii "x1 >= x && x1 <= x+1\0"
	.align 4
LC191:
	.ascii "x0 >= x && x0 <= x+1 && x1 >= x && x1 <= x+1\0"
	.text
	.def	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff;	.scl	3;	.type	32;	.endef
__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff:
LFB2060:
	.loc 7 3042 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 7 3043 4
	flds	24(%ebp)
	flds	32(%ebp)
	fucomip	%st(1), %st
	fstp	%st(0)
	jp	L3203
	flds	24(%ebp)
	flds	32(%ebp)
	fucomip	%st(1), %st
	fstp	%st(0)
	je	L3273
L3203:
	.loc 7 3044 4
	flds	24(%ebp)
	flds	32(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	ja	L3208
	.loc 7 3044 4 is_stmt 0 discriminator 2
	movl	$3044, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC184, (%esp)
	call	__assert
L3208:
	.loc 7 3045 4 is_stmt 1
	movl	16(%ebp), %eax
	flds	20(%eax)
	movl	16(%ebp), %eax
	flds	24(%eax)
	fcomip	%st(1), %st
	fstp	%st(0)
	jnb	L3211
	.loc 7 3045 4 is_stmt 0 discriminator 2
	movl	$3045, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC185, (%esp)
	call	__assert
L3211:
	.loc 7 3046 16 is_stmt 1
	movl	16(%ebp), %eax
	flds	24(%eax)
	.loc 7 3046 4
	flds	24(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	ja	L3274
	.loc 7 3047 16
	movl	16(%ebp), %eax
	.loc 7 3047 4
	flds	32(%ebp)
	.loc 7 3047 16
	flds	20(%eax)
	.loc 7 3047 4
	fcomip	%st(1), %st
	fstp	%st(0)
	ja	L3275
	.loc 7 3048 16
	movl	16(%ebp), %eax
	.loc 7 3048 4
	flds	24(%ebp)
	.loc 7 3048 16
	flds	20(%eax)
	.loc 7 3048 4
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3216
	.loc 7 3049 16
	flds	28(%ebp)
	fsubs	20(%ebp)
	.loc 7 3049 27
	movl	16(%ebp), %eax
	flds	20(%eax)
	.loc 7 3049 30
	fsubs	24(%ebp)
	.loc 7 3049 21
	fmulp	%st, %st(1)
	.loc 7 3049 41
	flds	32(%ebp)
	fsubs	24(%ebp)
	.loc 7 3049 36
	fdivrp	%st, %st(1)
	.loc 7 3049 10
	flds	20(%ebp)
	faddp	%st, %st(1)
	fstps	20(%ebp)
	.loc 7 3050 10
	movl	16(%ebp), %eax
	flds	20(%eax)
	fstps	24(%ebp)
L3216:
	.loc 7 3052 16
	movl	16(%ebp), %eax
	flds	24(%eax)
	.loc 7 3052 4
	flds	32(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3218
	.loc 7 3053 16
	flds	28(%ebp)
	fsubs	20(%ebp)
	.loc 7 3053 27
	movl	16(%ebp), %eax
	flds	24(%eax)
	.loc 7 3053 30
	fsubs	32(%ebp)
	.loc 7 3053 21
	fmulp	%st, %st(1)
	.loc 7 3053 41
	flds	32(%ebp)
	fsubs	24(%ebp)
	.loc 7 3053 36
	fdivrp	%st, %st(1)
	.loc 7 3053 10
	flds	28(%ebp)
	faddp	%st, %st(1)
	fstps	28(%ebp)
	.loc 7 3054 10
	movl	16(%ebp), %eax
	flds	24(%eax)
	fstps	32(%ebp)
L3218:
	.loc 7 3057 11
	fildl	12(%ebp)
	.loc 7 3057 4
	flds	20(%ebp)
	fucomip	%st(1), %st
	jp	L3278
	flds	20(%ebp)
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L3220
	.loc 7 3058 7
	movl	12(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	flds	28(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jnb	L3225
	.loc 7 3058 7 is_stmt 0 discriminator 2
	movl	$3058, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC186, (%esp)
	call	__assert
	jmp	L3225
L3278:
	fstp	%st(0)
L3220:
	.loc 7 3059 20 is_stmt 1
	movl	12(%ebp), %eax
	addl	$1, %eax
	.loc 7 3059 16
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 7 3059 9
	flds	20(%ebp)
	fucomip	%st(1), %st
	jp	L3279
	flds	20(%ebp)
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L3226
	.loc 7 3060 7
	fildl	12(%ebp)
	flds	28(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jnb	L3225
	.loc 7 3060 7 is_stmt 0 discriminator 2
	movl	$3060, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC187, (%esp)
	call	__assert
	jmp	L3225
L3279:
	fstp	%st(0)
L3226:
	.loc 7 3061 16 is_stmt 1
	fildl	12(%ebp)
	.loc 7 3061 9
	flds	20(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3271
	.loc 7 3062 7
	fildl	12(%ebp)
	flds	28(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jnb	L3225
	.loc 7 3062 7 is_stmt 0 discriminator 2
	movl	$3062, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC188, (%esp)
	call	__assert
	jmp	L3225
L3271:
	.loc 7 3063 20 is_stmt 1
	movl	12(%ebp), %eax
	addl	$1, %eax
	.loc 7 3063 16
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 7 3063 9
	flds	20(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3272
	.loc 7 3064 7
	movl	12(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	flds	28(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jnb	L3225
	.loc 7 3064 7 is_stmt 0 discriminator 2
	movl	$3064, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC189, (%esp)
	call	__assert
	jmp	L3225
L3272:
	.loc 7 3066 7 is_stmt 1
	fildl	12(%ebp)
	flds	28(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3241
	.loc 7 3066 7 is_stmt 0 discriminator 1
	movl	12(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	flds	28(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jnb	L3276
L3241:
	.loc 7 3066 7 discriminator 4
	movl	$3066, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC190, (%esp)
	call	__assert
	jmp	L3225
L3276:
	.loc 7 3066 7
	nop
L3225:
	.loc 7 3068 11 is_stmt 1
	fildl	12(%ebp)
	.loc 7 3068 4
	flds	20(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3245
	.loc 7 3068 22 discriminator 1
	fildl	12(%ebp)
	.loc 7 3068 16 discriminator 1
	flds	28(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3245
	.loc 7 3069 19
	movl	12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 7 3069 25
	movl	16(%ebp), %eax
	flds	16(%eax)
	.loc 7 3069 40
	flds	32(%ebp)
	fsubs	24(%ebp)
	.loc 7 3069 35
	fmulp	%st, %st(1)
	.loc 7 3069 19
	movl	12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	faddp	%st, %st(1)
	fstps	(%eax)
	jmp	L3202
L3245:
	.loc 7 3070 20
	movl	12(%ebp), %eax
	addl	$1, %eax
	.loc 7 3070 16
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 7 3070 9
	flds	20(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3248
	.loc 7 3070 33 discriminator 1
	movl	12(%ebp), %eax
	addl	$1, %eax
	.loc 7 3070 29 discriminator 1
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 7 3070 23 discriminator 1
	flds	28(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jnb	L3202
L3248:
	.loc 7 3073 7
	fildl	12(%ebp)
	flds	20(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3251
	.loc 7 3073 7 is_stmt 0 discriminator 1
	movl	12(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	flds	20(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3251
	.loc 7 3073 7 discriminator 3
	fildl	12(%ebp)
	flds	28(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3251
	.loc 7 3073 7 discriminator 5
	movl	12(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	flds	28(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jnb	L3277
L3251:
	.loc 7 3073 7 discriminator 8
	movl	$3073, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC191, (%esp)
	call	__assert
	jmp	L3257
L3277:
	.loc 7 3073 7
	nop
L3257:
	.loc 7 3074 19 is_stmt 1
	movl	12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 7 3074 25
	movl	16(%ebp), %eax
	flds	16(%eax)
	.loc 7 3074 40
	flds	32(%ebp)
	fsubs	24(%ebp)
	.loc 7 3074 35
	fmulp	%st, %st(1)
	.loc 7 3074 54
	fildl	12(%ebp)
	flds	20(%ebp)
	fsubp	%st, %st(1)
	.loc 7 3074 61
	fildl	12(%ebp)
	flds	28(%ebp)
	fsubp	%st, %st(1)
	.loc 7 3074 57
	faddp	%st, %st(1)
	.loc 7 3074 65
	flds	LC192
	fdivrp	%st, %st(1)
	.loc 7 3074 49
	fld1
	fsubp	%st, %st(1)
	.loc 7 3074 45
	fmulp	%st, %st(1)
	.loc 7 3074 19
	movl	12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	faddp	%st, %st(1)
	fstps	(%eax)
	jmp	L3202
L3273:
	.loc 7 3043 18
	nop
	jmp	L3202
L3274:
	.loc 7 3046 20
	nop
	jmp	L3202
L3275:
	.loc 7 3047 20
	nop
L3202:
	.loc 7 3076 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2060:
	.section .rdata,"dr"
LC193:
	.ascii "e->ey >= y_top\0"
	.align 4
LC194:
	.ascii "e->sy <= y_bottom && e->ey >= y_top\0"
LC195:
	.ascii "x >= 0 && x < len\0"
LC197:
	.ascii "fabs(area) <= 1.01f\0"
	.text
	.def	__ZL28stbtt__fill_active_edges_newPfS_iP18stbtt__active_edgef;	.scl	3;	.type	32;	.endef
__ZL28stbtt__fill_active_edges_newPfS_iP18stbtt__active_edgef:
LFB2061:
	.loc 7 3079 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$168, %esp
	.loc 7 3080 10
	flds	24(%ebp)
	fld1
	faddp	%st, %st(1)
	fstps	-44(%ebp)
L3343:
	.loc 7 3082 11
	cmpl	$0, 20(%ebp)
	je	L3370
LBB611:
	.loc 7 3086 7
	movl	20(%ebp), %eax
	flds	24(%ebp)
	flds	24(%eax)
	fcomip	%st(1), %st
	fstp	%st(0)
	jnb	L3284
	.loc 7 3086 7 is_stmt 0 discriminator 2
	movl	$3086, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC193, (%esp)
	call	__assert
L3284:
LBB612:
	.loc 7 3088 14 is_stmt 1
	movl	20(%ebp), %eax
	flds	8(%eax)
	.loc 7 3088 7
	fldz
	fucomip	%st(1), %st
	jp	L3373
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L3285
LBB613:
	.loc 7 3089 16
	movl	20(%ebp), %eax
	flds	4(%eax)
	fstps	-48(%ebp)
	.loc 7 3090 17
	fildl	16(%ebp)
	.loc 7 3090 10
	flds	-48(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3292
	.loc 7 3091 13
	fldz
	flds	-48(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3367
	.loc 7 3092 42
	flds	-48(%ebp)
	fnstcw	-122(%ebp)
	movzwl	-122(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -124(%ebp)
	fldcw	-124(%ebp)
	fistpl	-128(%ebp)
	fldcw	-122(%ebp)
	movl	-128(%ebp), %edx
	flds	-44(%ebp)
	fstps	24(%esp)
	flds	-48(%ebp)
	fstps	20(%esp)
	flds	24(%ebp)
	fstps	16(%esp)
	flds	-48(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	.loc 7 3093 59
	flds	-48(%ebp)
	fnstcw	-122(%ebp)
	movzwl	-122(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -124(%ebp)
	fldcw	-124(%ebp)
	fistpl	-128(%ebp)
	fldcw	-122(%ebp)
	movl	-128(%ebp), %eax
	.loc 7 3093 42
	leal	1(%eax), %ecx
	movl	12(%ebp), %eax
	leal	-4(%eax), %edx
	flds	-44(%ebp)
	fstps	24(%esp)
	flds	-48(%ebp)
	fstps	20(%esp)
	flds	24(%ebp)
	fstps	16(%esp)
	flds	-48(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	jmp	L3292
L3367:
	.loc 7 3095 42
	movl	12(%ebp), %eax
	leal	-4(%eax), %edx
	flds	-44(%ebp)
	fstps	24(%esp)
	flds	-48(%ebp)
	fstps	20(%esp)
	flds	24(%ebp)
	fstps	16(%esp)
	flds	-48(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	%edx, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	jmp	L3292
L3373:
	fstp	%st(0)
L3285:
LBE613:
LBB614:
	.loc 7 3099 16
	movl	20(%ebp), %eax
	flds	4(%eax)
	fstps	-12(%ebp)
	.loc 7 3100 16
	movl	20(%ebp), %eax
	flds	8(%eax)
	fstps	-52(%ebp)
	.loc 7 3101 16
	flds	-12(%ebp)
	fadds	-52(%ebp)
	fstps	-56(%ebp)
	.loc 7 3104 16
	movl	20(%ebp), %eax
	flds	12(%eax)
	fstps	-32(%ebp)
	.loc 7 3105 10
	movl	20(%ebp), %eax
	flds	20(%eax)
	flds	-44(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3293
	.loc 7 3105 10 is_stmt 0 discriminator 1
	movl	20(%ebp), %eax
	flds	24(%ebp)
	flds	24(%eax)
	fcomip	%st(1), %st
	fstp	%st(0)
	jnb	L3371
L3293:
	.loc 7 3105 10 discriminator 4
	movl	$3105, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC194, (%esp)
	call	__assert
	jmp	L3297
L3371:
	.loc 7 3105 10
	nop
L3297:
	.loc 7 3110 17 is_stmt 1
	movl	20(%ebp), %eax
	.loc 7 3110 10
	flds	24(%ebp)
	.loc 7 3110 17
	flds	20(%eax)
	.loc 7 3110 10
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3368
	.loc 7 3111 35
	movl	20(%ebp), %eax
	flds	20(%eax)
	.loc 7 3111 38
	fsubs	24(%ebp)
	.loc 7 3111 29
	fmuls	-52(%ebp)
	.loc 7 3111 19
	flds	-12(%ebp)
	faddp	%st, %st(1)
	fstps	-16(%ebp)
	.loc 7 3112 17
	movl	20(%ebp), %eax
	flds	20(%eax)
	fstps	-24(%ebp)
	jmp	L3300
L3368:
	.loc 7 3114 19
	flds	-12(%ebp)
	fstps	-16(%ebp)
	.loc 7 3115 17
	flds	24(%ebp)
	fstps	-24(%ebp)
L3300:
	.loc 7 3117 17
	movl	20(%ebp), %eax
	flds	24(%eax)
	.loc 7 3117 10
	flds	-44(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3369
	.loc 7 3118 38
	movl	20(%ebp), %eax
	flds	24(%eax)
	.loc 7 3118 41
	fsubs	24(%ebp)
	.loc 7 3118 32
	fmuls	-52(%ebp)
	.loc 7 3118 22
	flds	-12(%ebp)
	faddp	%st, %st(1)
	fstps	-20(%ebp)
	.loc 7 3119 17
	movl	20(%ebp), %eax
	flds	24(%eax)
	fstps	-28(%ebp)
	jmp	L3303
L3369:
	.loc 7 3121 22
	flds	-56(%ebp)
	fstps	-20(%ebp)
	.loc 7 3122 17
	flds	-44(%ebp)
	fstps	-28(%ebp)
L3303:
LBB615:
	.loc 7 3125 10
	fldz
	flds	-16(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3304
	.loc 7 3125 25 discriminator 1
	fldz
	flds	-20(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3304
	.loc 7 3125 51 discriminator 2
	fildl	16(%ebp)
	.loc 7 3125 42 discriminator 2
	flds	-16(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3304
	.loc 7 3125 69 discriminator 3
	fildl	16(%ebp)
	.loc 7 3125 57 discriminator 3
	flds	-20(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3304
LBB616:
LBB617:
	.loc 7 3128 17
	flds	-16(%ebp)
	fnstcw	-122(%ebp)
	movzwl	-122(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -124(%ebp)
	fldcw	-124(%ebp)
	fistpl	-128(%ebp)
	fldcw	-122(%ebp)
	movl	-128(%ebp), %edx
	.loc 7 3128 32
	flds	-20(%ebp)
	fldcw	-124(%ebp)
	fistpl	-128(%ebp)
	fldcw	-122(%ebp)
	movl	-128(%ebp), %eax
	.loc 7 3128 13
	cmpl	%eax, %edx
	jne	L3309
LBB618:
	.loc 7 3131 20
	flds	-16(%ebp)
	fldcw	-124(%ebp)
	fistpl	-60(%ebp)
	fldcw	-122(%ebp)
	.loc 7 3132 23
	flds	-28(%ebp)
	fsubs	-24(%ebp)
	fstps	-64(%ebp)
	.loc 7 3133 16
	cmpl	$0, -60(%ebp)
	js	L3310
	.loc 7 3133 16 is_stmt 0 discriminator 1
	movl	-60(%ebp), %eax
	cmpl	16(%ebp), %eax
	jl	L3372
L3310:
	.loc 7 3133 16 discriminator 4
	movl	$3133, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC195, (%esp)
	call	__assert
	jmp	L3313
L3372:
	.loc 7 3133 16
	nop
L3313:
	.loc 7 3134 28 is_stmt 1
	movl	-60(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 7 3134 34
	movl	20(%ebp), %eax
	flds	16(%eax)
	.loc 7 3134 57
	fildl	-60(%ebp)
	flds	-16(%ebp)
	fsubp	%st, %st(1)
	.loc 7 3134 73
	fildl	-60(%ebp)
	flds	-20(%ebp)
	fsubp	%st, %st(1)
	.loc 7 3134 62
	faddp	%st, %st(1)
	.loc 7 3134 77
	flds	LC192
	fdivrp	%st, %st(1)
	.loc 7 3134 48
	fld1
	fsubp	%st, %st(1)
	.loc 7 3134 44
	fmulp	%st, %st(1)
	.loc 7 3134 82
	fmuls	-64(%ebp)
	.loc 7 3134 28
	movl	-60(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	faddp	%st, %st(1)
	fstps	(%eax)
	.loc 7 3135 33
	movl	-60(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 7 3135 39
	movl	20(%ebp), %eax
	flds	16(%eax)
	.loc 7 3135 49
	fmuls	-64(%ebp)
	.loc 7 3135 33
	movl	-60(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	faddp	%st, %st(1)
	fstps	(%eax)
LBE618:
LBE617:
LBE616:
	.loc 7 3175 13
	jmp	L3292
L3309:
LBB623:
LBB622:
LBB619:
LBB620:
	.loc 7 3140 16
	flds	-20(%ebp)
	flds	-16(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3315
LBB621:
	.loc 7 3143 41
	flds	-24(%ebp)
	fsubs	24(%ebp)
	.loc 7 3143 23
	flds	-44(%ebp)
	fsubp	%st, %st(1)
	fstps	-24(%ebp)
	.loc 7 3144 41
	flds	-28(%ebp)
	fsubs	24(%ebp)
	.loc 7 3144 23
	flds	-44(%ebp)
	fsubp	%st, %st(1)
	fstps	-28(%ebp)
	.loc 7 3145 21
	flds	-24(%ebp)
	fstps	-68(%ebp)
	.loc 7 3145 32
	flds	-28(%ebp)
	fstps	-24(%ebp)
	.loc 7 3145 43
	flds	-68(%ebp)
	fstps	-28(%ebp)
	.loc 7 3146 21
	flds	-20(%ebp)
	fstps	-68(%ebp)
	.loc 7 3146 42
	flds	-16(%ebp)
	fstps	-20(%ebp)
	.loc 7 3146 57
	flds	-68(%ebp)
	fstps	-16(%ebp)
	.loc 7 3147 22
	flds	-52(%ebp)
	fchs
	fstps	-52(%ebp)
	.loc 7 3148 22
	flds	-32(%ebp)
	fchs
	fstps	-32(%ebp)
	.loc 7 3149 21
	flds	-12(%ebp)
	fstps	-68(%ebp)
	.loc 7 3149 30
	flds	-56(%ebp)
	fstps	-12(%ebp)
	.loc 7 3149 39
	flds	-68(%ebp)
	fstps	-56(%ebp)
L3315:
LBE621:
LBE620:
	.loc 7 3152 19
	flds	-16(%ebp)
	fldcw	-124(%ebp)
	fistpl	-72(%ebp)
	fldcw	-122(%ebp)
	.loc 7 3153 19
	flds	-20(%ebp)
	fldcw	-124(%ebp)
	fistpl	-76(%ebp)
	fldcw	-122(%ebp)
	.loc 7 3155 32
	movl	-72(%ebp), %eax
	addl	$1, %eax
	.loc 7 3155 35
	movl	%eax, -132(%ebp)
	fildl	-132(%ebp)
	fsubs	-12(%ebp)
	.loc 7 3155 41
	fmuls	-32(%ebp)
	.loc 7 3155 27
	flds	24(%ebp)
	faddp	%st, %st(1)
	fstps	-80(%ebp)
	.loc 7 3157 21
	movl	20(%ebp), %eax
	flds	16(%eax)
	fstps	-84(%ebp)
	.loc 7 3159 41
	flds	-80(%ebp)
	fsubs	-24(%ebp)
	.loc 7 3159 21
	flds	-84(%ebp)
	fmulp	%st, %st(1)
	fstps	-40(%ebp)
	.loc 7 3161 29
	movl	-72(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 7 3161 50
	fildl	-72(%ebp)
	flds	-16(%ebp)
	fsubp	%st, %st(1)
	.loc 7 3161 55
	fld1
	faddp	%st, %st(1)
	.loc 7 3161 66
	flds	LC192
	fdivrp	%st, %st(1)
	.loc 7 3161 41
	fld1
	fsubp	%st, %st(1)
	.loc 7 3161 37
	fmuls	-40(%ebp)
	.loc 7 3161 29
	movl	-72(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	faddp	%st, %st(1)
	fstps	(%eax)
	.loc 7 3163 21
	flds	-84(%ebp)
	fmuls	-32(%ebp)
	fstps	-88(%ebp)
	.loc 7 3164 23
	movl	-72(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -36(%ebp)
L3318:
	.loc 7 3164 33 discriminator 3
	movl	-36(%ebp), %eax
	cmpl	-76(%ebp), %eax
	jge	L3317
	.loc 7 3165 31 discriminator 2
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 7 3165 45 discriminator 2
	flds	-88(%ebp)
	flds	LC192
	fdivrp	%st, %st(1)
	.loc 7 3165 39 discriminator 2
	fadds	-40(%ebp)
	.loc 7 3165 31 discriminator 2
	movl	-36(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	faddp	%st, %st(1)
	fstps	(%eax)
	.loc 7 3166 24 discriminator 2
	flds	-40(%ebp)
	fadds	-88(%ebp)
	fstps	-40(%ebp)
	.loc 7 3164 16 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L3318
L3317:
	.loc 7 3168 44
	movl	-72(%ebp), %eax
	leal	1(%eax), %edx
	.loc 7 3168 39
	movl	-76(%ebp), %eax
	subl	%edx, %eax
	.loc 7 3168 33
	movl	%eax, -132(%ebp)
	fildl	-132(%ebp)
	fmuls	-32(%ebp)
	.loc 7 3168 27
	flds	-80(%ebp)
	faddp	%st, %st(1)
	fstps	-80(%ebp)
	.loc 7 3170 16
	flds	-40(%ebp)
	fstps	(%esp)
	call	__ZSt4fabsf
	flds	LC196
	fcomip	%st(1), %st
	fstp	%st(0)
	jnb	L3321
	.loc 7 3170 16 is_stmt 0 discriminator 2
	movl	$3170, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC197, (%esp)
	call	__assert
L3321:
	.loc 7 3172 29 is_stmt 1
	movl	-76(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 7 3172 67
	fildl	-76(%ebp)
	flds	-20(%ebp)
	fsubp	%st, %st(1)
	.loc 7 3172 57
	fldz
	faddp	%st, %st(1)
	.loc 7 3172 72
	flds	LC192
	fdivrp	%st, %st(1)
	.loc 7 3172 48
	fld1
	fsubp	%st, %st(1)
	.loc 7 3172 44
	fmuls	-84(%ebp)
	.loc 7 3172 82
	flds	-28(%ebp)
	fsubs	-80(%ebp)
	.loc 7 3172 76
	fmulp	%st, %st(1)
	.loc 7 3172 37
	fadds	-40(%ebp)
	.loc 7 3172 29
	movl	-76(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	faddp	%st, %st(1)
	fstps	(%eax)
	.loc 7 3174 34
	movl	-76(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 7 3174 48
	flds	-28(%ebp)
	fsubs	-24(%ebp)
	.loc 7 3174 42
	fmuls	-84(%ebp)
	.loc 7 3174 34
	movl	-76(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	faddp	%st, %st(1)
	fstps	(%eax)
LBE619:
LBE622:
LBE623:
	.loc 7 3175 13
	jmp	L3292
L3304:
LBB624:
LBB625:
	.loc 7 3182 19
	movl	$0, -120(%ebp)
L3342:
	.loc 7 3182 25 discriminator 1
	movl	-120(%ebp), %eax
	cmpl	%eax, 16(%ebp)
	jle	L3292
LBB626:
	.loc 7 3197 22
	flds	24(%ebp)
	fstps	-92(%ebp)
	.loc 7 3198 27
	movl	-120(%ebp), %eax
	.loc 7 3198 22
	movl	%eax, -132(%ebp)
	fildl	-132(%ebp)
	fstps	-96(%ebp)
	.loc 7 3199 37
	movl	-120(%ebp), %eax
	addl	$1, %eax
	.loc 7 3199 22
	movl	%eax, -132(%ebp)
	fildl	-132(%ebp)
	fstps	-100(%ebp)
	.loc 7 3200 22
	flds	-56(%ebp)
	fstps	-104(%ebp)
	.loc 7 3201 22
	flds	-44(%ebp)
	fstps	-108(%ebp)
	.loc 7 3206 30
	movl	-120(%ebp), %eax
	movl	%eax, -132(%ebp)
	fildl	-132(%ebp)
	fsubs	-12(%ebp)
	.loc 7 3206 36
	fdivs	-52(%ebp)
	.loc 7 3206 22
	flds	24(%ebp)
	faddp	%st, %st(1)
	fstps	-112(%ebp)
	.loc 7 3207 29
	movl	-120(%ebp), %eax
	addl	$1, %eax
	.loc 7 3207 32
	movl	%eax, -132(%ebp)
	fildl	-132(%ebp)
	fsubs	-12(%ebp)
	.loc 7 3207 38
	fdivs	-52(%ebp)
	.loc 7 3207 22
	flds	24(%ebp)
	faddp	%st, %st(1)
	fstps	-116(%ebp)
	.loc 7 3209 16
	flds	-12(%ebp)
	flds	-96(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3323
	.loc 7 3209 28 discriminator 1
	flds	-100(%ebp)
	flds	-104(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3323
	.loc 7 3210 45
	movl	-120(%ebp), %eax
	flds	-112(%ebp)
	fstps	24(%esp)
	flds	-96(%ebp)
	fstps	20(%esp)
	flds	-92(%ebp)
	fstps	16(%esp)
	flds	-12(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	.loc 7 3211 45
	movl	-120(%ebp), %eax
	flds	-116(%ebp)
	fstps	24(%esp)
	flds	-100(%ebp)
	fstps	20(%esp)
	flds	-112(%ebp)
	fstps	16(%esp)
	flds	-96(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	.loc 7 3212 45
	movl	-120(%ebp), %eax
	flds	-108(%ebp)
	fstps	24(%esp)
	flds	-104(%ebp)
	fstps	20(%esp)
	flds	-116(%ebp)
	fstps	16(%esp)
	flds	-100(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	jmp	L3326
L3323:
	.loc 7 3213 23
	flds	-104(%ebp)
	flds	-96(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3327
	.loc 7 3213 35 discriminator 1
	flds	-100(%ebp)
	flds	-12(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3327
	.loc 7 3214 45
	movl	-120(%ebp), %eax
	flds	-116(%ebp)
	fstps	24(%esp)
	flds	-100(%ebp)
	fstps	20(%esp)
	flds	-92(%ebp)
	fstps	16(%esp)
	flds	-12(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	.loc 7 3215 45
	movl	-120(%ebp), %eax
	flds	-112(%ebp)
	fstps	24(%esp)
	flds	-96(%ebp)
	fstps	20(%esp)
	flds	-116(%ebp)
	fstps	16(%esp)
	flds	-100(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	.loc 7 3216 45
	movl	-120(%ebp), %eax
	flds	-108(%ebp)
	fstps	24(%esp)
	flds	-104(%ebp)
	fstps	20(%esp)
	flds	-112(%ebp)
	fstps	16(%esp)
	flds	-96(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	jmp	L3326
L3327:
	.loc 7 3217 23
	flds	-12(%ebp)
	flds	-96(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3330
	.loc 7 3217 35 discriminator 1
	flds	-96(%ebp)
	flds	-104(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3330
	.loc 7 3218 45
	movl	-120(%ebp), %eax
	flds	-112(%ebp)
	fstps	24(%esp)
	flds	-96(%ebp)
	fstps	20(%esp)
	flds	-92(%ebp)
	fstps	16(%esp)
	flds	-12(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	.loc 7 3219 45
	movl	-120(%ebp), %eax
	flds	-108(%ebp)
	fstps	24(%esp)
	flds	-104(%ebp)
	fstps	20(%esp)
	flds	-112(%ebp)
	fstps	16(%esp)
	flds	-96(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	jmp	L3326
L3330:
	.loc 7 3220 23
	flds	-104(%ebp)
	flds	-96(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3333
	.loc 7 3220 35 discriminator 1
	flds	-96(%ebp)
	flds	-12(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3333
	.loc 7 3221 45
	movl	-120(%ebp), %eax
	flds	-112(%ebp)
	fstps	24(%esp)
	flds	-96(%ebp)
	fstps	20(%esp)
	flds	-92(%ebp)
	fstps	16(%esp)
	flds	-12(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	.loc 7 3222 45
	movl	-120(%ebp), %eax
	flds	-108(%ebp)
	fstps	24(%esp)
	flds	-104(%ebp)
	fstps	20(%esp)
	flds	-112(%ebp)
	fstps	16(%esp)
	flds	-96(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	jmp	L3326
L3333:
	.loc 7 3223 23
	flds	-12(%ebp)
	flds	-100(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3336
	.loc 7 3223 35 discriminator 1
	flds	-100(%ebp)
	flds	-104(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3336
	.loc 7 3224 45
	movl	-120(%ebp), %eax
	flds	-116(%ebp)
	fstps	24(%esp)
	flds	-100(%ebp)
	fstps	20(%esp)
	flds	-92(%ebp)
	fstps	16(%esp)
	flds	-12(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	.loc 7 3225 45
	movl	-120(%ebp), %eax
	flds	-108(%ebp)
	fstps	24(%esp)
	flds	-104(%ebp)
	fstps	20(%esp)
	flds	-116(%ebp)
	fstps	16(%esp)
	flds	-100(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	jmp	L3326
L3336:
	.loc 7 3226 23
	flds	-104(%ebp)
	flds	-100(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3339
	.loc 7 3226 35 discriminator 1
	flds	-100(%ebp)
	flds	-12(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3339
	.loc 7 3227 45
	movl	-120(%ebp), %eax
	flds	-116(%ebp)
	fstps	24(%esp)
	flds	-100(%ebp)
	fstps	20(%esp)
	flds	-92(%ebp)
	fstps	16(%esp)
	flds	-12(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	.loc 7 3228 45
	movl	-120(%ebp), %eax
	flds	-108(%ebp)
	fstps	24(%esp)
	flds	-104(%ebp)
	fstps	20(%esp)
	flds	-116(%ebp)
	fstps	16(%esp)
	flds	-100(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
	jmp	L3326
L3339:
	.loc 7 3230 45
	movl	-120(%ebp), %eax
	flds	-108(%ebp)
	fstps	24(%esp)
	flds	-104(%ebp)
	fstps	20(%esp)
	flds	-92(%ebp)
	fstps	16(%esp)
	flds	-12(%ebp)
	fstps	12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff
L3326:
LBE626:
	.loc 7 3182 13 discriminator 2
	movl	-120(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -120(%ebp)
	jmp	L3342
L3292:
LBE625:
LBE624:
LBE615:
LBE614:
LBE612:
	.loc 7 3235 9
	movl	20(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 20(%ebp)
LBE611:
	.loc 7 3082 4
	jmp	L3343
L3370:
	.loc 7 3237 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2061:
	.section .rdata,"dr"
LC198:
	.ascii "z->direction\0"
LC199:
	.ascii "z->ey >= scan_y_top\0"
	.text
	.def	__ZL29stbtt__rasterize_sorted_edgesP13stbtt__bitmapP11stbtt__edgeiiiiPv;	.scl	3;	.type	32;	.endef
__ZL29stbtt__rasterize_sorted_edgesP13stbtt__bitmapP11stbtt__edgeiiiiPv:
LFB2062:
	.loc 7 3241 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$648, %esp
	.loc 7 3242 17
	movl	$0, -76(%ebp)
	movl	$0, -72(%ebp)
	movl	$0, -68(%ebp)
	.loc 7 3243 24
	movl	$0, -80(%ebp)
	.loc 7 3244 10
	movl	$0, -16(%ebp)
	.loc 7 3249 16
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 3249 4
	cmpl	$64, %eax
	jle	L3375
	.loc 7 3250 28
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	addl	%eax, %eax
	addl	$1, %eax
	sall	$2, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -24(%ebp)
	jmp	L3376
L3375:
	.loc 7 3252 16
	leal	-596(%ebp), %eax
	movl	%eax, -24(%ebp)
L3376:
	.loc 7 3254 35
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 3254 25
	leal	0(,%eax,4), %edx
	.loc 7 3254 14
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -40(%ebp)
	.loc 7 3256 6
	movl	28(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 7 3257 39
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 3257 29
	movl	28(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3257 14
	movl	%eax, -608(%ebp)
	fildl	-608(%ebp)
	.loc 7 3257 7
	movl	16(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3257 42
	fld1
	faddp	%st, %st(1)
	.loc 7 3257 12
	fstps	4(%eax)
L3402:
	.loc 7 3259 23
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 3259 13
	cmpl	%eax, -16(%ebp)
	jge	L3377
LBB627:
	.loc 7 3261 31
	fildl	-12(%ebp)
	.loc 7 3261 13
	fldz
	faddp	%st, %st(1)
	fstps	-44(%ebp)
	.loc 7 3262 31
	fildl	-12(%ebp)
	.loc 7 3262 13
	fld1
	faddp	%st, %st(1)
	fstps	-48(%ebp)
	.loc 7 3263 28
	leal	-80(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 7 3265 42
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 3265 19
	sall	$2, %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 7 3266 43
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 3266 44
	addl	$1, %eax
	.loc 7 3266 19
	sall	$2, %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
L3385:
	.loc 7 3270 14
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 3270 15
	testl	%eax, %eax
	je	L3378
LBB628:
	.loc 7 3271 31
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -52(%ebp)
	.loc 7 3272 17
	movl	-52(%ebp), %eax
	flds	24(%eax)
	.loc 7 3272 10
	flds	-44(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3408
	.loc 7 3273 24
	movl	-52(%ebp), %eax
	movl	(%eax), %edx
	.loc 7 3273 19
	movl	-28(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 3274 13
	movl	-52(%ebp), %eax
	flds	16(%eax)
	fldz
	fucomip	%st(1), %st
	jp	L3411
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L3383
	.loc 7 3274 13 is_stmt 0 discriminator 2
	movl	$3274, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC198, (%esp)
	call	__assert
	jmp	L3383
L3411:
	fstp	%st(0)
L3383:
	.loc 7 3275 26 is_stmt 1
	movl	-52(%ebp), %eax
	fldz
	fstps	16(%eax)
	.loc 7 3276 30
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__hheap_freeP12stbtt__hheapPv
	jmp	L3385
L3408:
	.loc 7 3278 23
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 3278 18
	movl	%eax, -28(%ebp)
LBE628:
	.loc 7 3270 7
	jmp	L3385
L3378:
	.loc 7 3283 17
	movl	12(%ebp), %eax
	flds	4(%eax)
	.loc 7 3283 20
	flds	-48(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3409
LBB629:
LBB630:
	.loc 7 3284 17
	movl	12(%ebp), %eax
	flds	4(%eax)
	.loc 7 3284 26
	movl	12(%ebp), %eax
	flds	12(%eax)
	.loc 7 3284 10
	fucomi	%st(1), %st
	jp	L3412
	fucomip	%st(1), %st
	fstp	%st(0)
	je	L3388
	jmp	L3406
L3412:
	fstp	%st(0)
	fstp	%st(0)
L3406:
LBB631:
	.loc 7 3285 54
	movl	32(%ebp), %eax
	movl	%eax, 16(%esp)
	flds	-44(%ebp)
	fstps	12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__new_activeP12stbtt__hheapP11stbtt__edgeifPv
	movl	%eax, -56(%ebp)
	.loc 7 3286 13
	cmpl	$0, -56(%ebp)
	je	L3388
	.loc 7 3287 16
	cmpl	$0, -16(%ebp)
	jne	L3391
	.loc 7 3287 27 discriminator 1
	cmpl	$0, 28(%ebp)
	je	L3391
	.loc 7 3288 26
	movl	-56(%ebp), %eax
	flds	24(%eax)
	.loc 7 3288 19
	flds	-44(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3391
	.loc 7 3290 28
	movl	-56(%ebp), %eax
	flds	-44(%ebp)
	fstps	24(%eax)
L3391:
	.loc 7 3293 16
	movl	-56(%ebp), %eax
	flds	-44(%ebp)
	flds	24(%eax)
	fcomip	%st(1), %st
	fstp	%st(0)
	jnb	L3395
	.loc 7 3293 16 is_stmt 0 discriminator 2
	movl	$3293, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC199, (%esp)
	call	__assert
L3395:
	.loc 7 3295 24 is_stmt 1
	movl	-80(%ebp), %edx
	movl	-56(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 3296 23
	movl	-56(%ebp), %eax
	movl	%eax, -80(%ebp)
L3388:
LBE631:
LBE630:
	.loc 7 3299 10
	addl	$20, 12(%ebp)
LBE629:
	.loc 7 3283 7
	jmp	L3378
L3409:
	.loc 7 3303 17
	movl	-80(%ebp), %eax
	.loc 7 3303 7
	testl	%eax, %eax
	je	L3396
	.loc 7 3304 38
	movl	-80(%ebp), %edx
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	-40(%ebp), %ecx
	addl	$4, %ecx
	flds	-44(%ebp)
	fstps	16(%esp)
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL28stbtt__fill_active_edges_newPfS_iP18stbtt__active_edgef
L3396:
LBB632:
	.loc 7 3307 16
	fldz
	fstps	-32(%ebp)
LBB633:
	.loc 7 3308 16
	movl	$0, -20(%ebp)
L3399:
	.loc 7 3308 32 discriminator 1
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 3308 22 discriminator 1
	cmpl	%eax, -20(%ebp)
	jge	L3397
LBB634:
	.loc 7 3311 31
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 7 3311 17
	flds	-32(%ebp)
	faddp	%st, %st(1)
	fstps	-32(%ebp)
	.loc 7 3312 27
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 7 3312 15
	flds	-32(%ebp)
	faddp	%st, %st(1)
	fstps	-60(%ebp)
	.loc 7 3313 25
	flds	-60(%ebp)
	fstps	(%esp)
	call	__ZSt4fabsf
	.loc 7 3313 38
	flds	LC41
	fmulp	%st, %st(1)
	.loc 7 3313 15
	flds	LC22
	faddp	%st, %st(1)
	fstps	-60(%ebp)
	.loc 7 3314 15
	flds	-60(%ebp)
	fnstcw	-602(%ebp)
	movzwl	-602(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -604(%ebp)
	fldcw	-604(%ebp)
	fistpl	-36(%ebp)
	fldcw	-602(%ebp)
	.loc 7 3315 13
	cmpl	$255, -36(%ebp)
	jle	L3398
	.loc 7 3315 28 discriminator 1
	movl	$255, -36(%ebp)
L3398:
	.loc 7 3316 21 discriminator 2
	movl	8(%ebp), %eax
	movl	12(%eax), %edx
	.loc 7 3316 38 discriminator 2
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 3316 29 discriminator 2
	imull	-16(%ebp), %eax
	movl	%eax, %ecx
	.loc 7 3316 45 discriminator 2
	movl	-20(%ebp), %eax
	addl	%ecx, %eax
	.loc 7 3316 48 discriminator 2
	addl	%edx, %eax
	.loc 7 3316 50 discriminator 2
	movl	-36(%ebp), %edx
	movb	%dl, (%eax)
LBE634:
	.loc 7 3308 10 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L3399
L3397:
LBE633:
LBE632:
	.loc 7 3320 12
	leal	-80(%ebp), %eax
	movl	%eax, -28(%ebp)
L3401:
	.loc 7 3321 14
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 3321 15
	testl	%eax, %eax
	je	L3400
LBB635:
	.loc 7 3322 30
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -64(%ebp)
	.loc 7 3323 16
	movl	-64(%ebp), %eax
	flds	4(%eax)
	.loc 7 3323 22
	movl	-64(%ebp), %eax
	flds	8(%eax)
	.loc 7 3323 16
	faddp	%st, %st(1)
	movl	-64(%ebp), %eax
	fstps	4(%eax)
	.loc 7 3324 20
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 3324 15
	movl	%eax, -28(%ebp)
LBE635:
	.loc 7 3321 7
	jmp	L3401
L3400:
	.loc 7 3327 7
	addl	$1, -12(%ebp)
	.loc 7 3328 7
	addl	$1, -16(%ebp)
LBE627:
	.loc 7 3259 4
	jmp	L3402
L3377:
	.loc 7 3331 24
	movl	32(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL20stbtt__hheap_cleanupP12stbtt__hheapPv
	.loc 7 3333 4
	leal	-596(%ebp), %eax
	cmpl	%eax, -24(%ebp)
	je	L3410
	.loc 7 3334 7
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
L3410:
	.loc 7 3335 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2062:
	.def	__ZL26stbtt__sort_edges_ins_sortP11stbtt__edgei;	.scl	3;	.type	32;	.endef
__ZL26stbtt__sort_edges_ins_sortP11stbtt__edgei:
LFB2063:
	.loc 7 3343 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$48, %esp
LBB636:
	.loc 7 3345 10
	movl	$1, -4(%ebp)
L3419:
	.loc 7 3345 16 discriminator 1
	movl	-4(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L3420
LBB637:
	.loc 7 3346 26
	movl	-4(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3346 19
	movl	(%eax), %edx
	movl	%edx, -32(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -28(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -24(%ebp)
	movl	12(%eax), %edx
	movl	%edx, -20(%ebp)
	movl	16(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 7 3346 30
	leal	-32(%ebp), %eax
	movl	%eax, -36(%ebp)
	.loc 7 3347 9
	movl	-4(%ebp), %eax
	movl	%eax, -8(%ebp)
L3417:
	.loc 7 3348 16
	cmpl	$0, -8(%ebp)
	jle	L3415
LBB638:
	.loc 7 3349 33
	movl	-8(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	leal	-20(%eax), %edx
	.loc 7 3349 27
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3349 23
	movl	%eax, -40(%ebp)
	.loc 7 3350 18
	movl	-36(%ebp), %eax
	flds	4(%eax)
	movl	-40(%ebp), %eax
	flds	4(%eax)
	fcomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	.loc 7 3350 14
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 7 3351 10
	cmpl	$0, -12(%ebp)
	je	L3421
	.loc 7 3352 22
	movl	-8(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	leal	-20(%eax), %edx
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 7 3352 15
	movl	-8(%ebp), %ecx
	movl	%ecx, %eax
	sall	$2, %eax
	addl	%ecx, %eax
	sall	$2, %eax
	movl	%eax, %ecx
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	movl	(%edx), %ecx
	movl	%ecx, (%eax)
	movl	4(%edx), %ecx
	movl	%ecx, 4(%eax)
	movl	8(%edx), %ecx
	movl	%ecx, 8(%eax)
	movl	12(%edx), %ecx
	movl	%ecx, 12(%eax)
	movl	16(%edx), %edx
	movl	%edx, 16(%eax)
	.loc 7 3353 10
	subl	$1, -8(%ebp)
LBE638:
	.loc 7 3348 7
	jmp	L3417
L3421:
LBB639:
	.loc 7 3351 18
	nop
L3415:
LBE639:
	.loc 7 3355 7
	movl	-4(%ebp), %eax
	cmpl	-8(%ebp), %eax
	je	L3418
	.loc 7 3356 15
	movl	-8(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	-32(%ebp), %edx
	movl	%edx, (%eax)
	movl	-28(%ebp), %edx
	movl	%edx, 4(%eax)
	movl	-24(%ebp), %edx
	movl	%edx, 8(%eax)
	movl	-20(%ebp), %edx
	movl	%edx, 12(%eax)
	movl	-16(%ebp), %edx
	movl	%edx, 16(%eax)
L3418:
LBE637:
	.loc 7 3345 4 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L3419
L3420:
LBE636:
	.loc 7 3358 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2063:
	.def	__ZL27stbtt__sort_edges_quicksortP11stbtt__edgei;	.scl	3;	.type	32;	.endef
__ZL27stbtt__sort_edges_quicksortP11stbtt__edgei:
LFB2064:
	.loc 7 3361 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
L3436:
	.loc 7 3363 13
	cmpl	$12, 12(%ebp)
	jle	L3439
LBB640:
	.loc 7 3368 9
	movl	12(%ebp), %eax
	sarl	%eax
	movl	%eax, -20(%ebp)
	.loc 7 3369 13
	movl	8(%ebp), %eax
	flds	4(%eax)
	movl	-20(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	4(%eax)
	fcomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	.loc 7 3369 11
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	.loc 7 3370 13
	movl	-20(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	4(%eax)
	movl	12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	leal	-20(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	4(%eax)
	fcomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	.loc 7 3370 11
	movzbl	%al, %eax
	movl	%eax, -28(%ebp)
LBB641:
	.loc 7 3372 7
	movl	-24(%ebp), %eax
	cmpl	-28(%ebp), %eax
	je	L3424
LBB642:
	.loc 7 3375 14
	movl	8(%ebp), %eax
	flds	4(%eax)
	movl	12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	leal	-20(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	4(%eax)
	fcomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	.loc 7 3375 12
	movzbl	%al, %eax
	movl	%eax, -32(%ebp)
	.loc 7 3378 25
	movl	-32(%ebp), %eax
	cmpl	-28(%ebp), %eax
	je	L3425
	.loc 7 3378 25 is_stmt 0 discriminator 1
	movl	12(%ebp), %eax
	subl	$1, %eax
	jmp	L3426
L3425:
	.loc 7 3378 25 discriminator 2
	movl	$0, %eax
L3426:
	.loc 7 3378 12 is_stmt 1 discriminator 4
	movl	%eax, -36(%ebp)
	.loc 7 3379 17 discriminator 4
	movl	-36(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3379 12 discriminator 4
	movl	(%eax), %edx
	movl	%edx, -56(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -52(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -48(%ebp)
	movl	12(%eax), %edx
	movl	%edx, -44(%ebp)
	movl	16(%eax), %eax
	movl	%eax, -40(%ebp)
	.loc 7 3380 20 discriminator 4
	movl	-20(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 7 3380 15 discriminator 4
	movl	-36(%ebp), %ecx
	movl	%ecx, %eax
	sall	$2, %eax
	addl	%ecx, %eax
	sall	$2, %eax
	movl	%eax, %ecx
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	movl	(%edx), %ecx
	movl	%ecx, (%eax)
	movl	4(%edx), %ecx
	movl	%ecx, 4(%eax)
	movl	8(%edx), %ecx
	movl	%ecx, 8(%eax)
	movl	12(%edx), %ecx
	movl	%ecx, 12(%eax)
	movl	16(%edx), %edx
	movl	%edx, 16(%eax)
	.loc 7 3381 15 discriminator 4
	movl	-20(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	-56(%ebp), %edx
	movl	%edx, (%eax)
	movl	-52(%ebp), %edx
	movl	%edx, 4(%eax)
	movl	-48(%ebp), %edx
	movl	%edx, 8(%eax)
	movl	-44(%ebp), %edx
	movl	%edx, 12(%eax)
	movl	-40(%ebp), %edx
	movl	%edx, 16(%eax)
L3424:
LBE642:
LBE641:
	.loc 7 3385 9
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	%edx, -56(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -52(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -48(%ebp)
	movl	12(%eax), %edx
	movl	%edx, -44(%ebp)
	movl	16(%eax), %eax
	movl	%eax, -40(%ebp)
	.loc 7 3386 17
	movl	-20(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 7 3386 12
	movl	8(%ebp), %eax
	movl	(%edx), %ecx
	movl	%ecx, (%eax)
	movl	4(%edx), %ecx
	movl	%ecx, 4(%eax)
	movl	8(%edx), %ecx
	movl	%ecx, 8(%eax)
	movl	12(%edx), %ecx
	movl	%ecx, 12(%eax)
	movl	16(%edx), %edx
	movl	%edx, 16(%eax)
	.loc 7 3387 12
	movl	-20(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	-56(%ebp), %edx
	movl	%edx, (%eax)
	movl	-52(%ebp), %edx
	movl	%edx, 4(%eax)
	movl	-48(%ebp), %edx
	movl	%edx, 8(%eax)
	movl	-44(%ebp), %edx
	movl	%edx, 12(%eax)
	movl	-40(%ebp), %edx
	movl	%edx, 16(%eax)
	.loc 7 3390 8
	movl	$1, -12(%ebp)
	.loc 7 3391 8
	movl	12(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -16(%ebp)
L3429:
	.loc 7 3396 18
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	4(%eax)
	movl	8(%ebp), %eax
	flds	4(%eax)
	fcomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	.loc 7 3396 17
	xorl	$1, %eax
	.loc 7 3396 13
	testb	%al, %al
	je	L3427
	.loc 7 3396 48
	jmp	L3428
L3427:
	.loc 7 3395 10
	addl	$1, -12(%ebp)
	.loc 7 3396 13
	jmp	L3429
L3428:
	.loc 7 3399 18
	movl	8(%ebp), %eax
	flds	4(%eax)
	movl	-16(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	flds	4(%eax)
	fcomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	.loc 7 3399 17
	xorl	$1, %eax
	.loc 7 3399 13
	testb	%al, %al
	jne	L3440
	.loc 7 3398 10
	subl	$1, -16(%ebp)
	.loc 7 3399 13
	jmp	L3428
L3440:
	.loc 7 3399 48
	nop
	.loc 7 3402 10
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jge	L3441
	.loc 7 3403 17
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3403 12
	movl	(%eax), %edx
	movl	%edx, -56(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -52(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -48(%ebp)
	movl	12(%eax), %edx
	movl	%edx, -44(%ebp)
	movl	16(%eax), %eax
	movl	%eax, -40(%ebp)
	.loc 7 3404 20
	movl	-16(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 7 3404 15
	movl	-12(%ebp), %ecx
	movl	%ecx, %eax
	sall	$2, %eax
	addl	%ecx, %eax
	sall	$2, %eax
	movl	%eax, %ecx
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	movl	(%edx), %ecx
	movl	%ecx, (%eax)
	movl	4(%edx), %ecx
	movl	%ecx, 4(%eax)
	movl	8(%edx), %ecx
	movl	%ecx, 8(%eax)
	movl	12(%edx), %ecx
	movl	%ecx, 12(%eax)
	movl	16(%edx), %edx
	movl	%edx, 16(%eax)
	.loc 7 3405 15
	movl	-16(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	-56(%ebp), %edx
	movl	%edx, (%eax)
	movl	-52(%ebp), %edx
	movl	%edx, 4(%eax)
	movl	-48(%ebp), %edx
	movl	%edx, 8(%eax)
	movl	-44(%ebp), %edx
	movl	%edx, 12(%eax)
	movl	-40(%ebp), %edx
	movl	%edx, 16(%eax)
	.loc 7 3407 10
	addl	$1, -12(%ebp)
	.loc 7 3408 10
	subl	$1, -16(%ebp)
	.loc 7 3396 13
	jmp	L3429
L3441:
	.loc 7 3402 22
	nop
	.loc 7 3411 17
	movl	12(%ebp), %eax
	subl	-12(%ebp), %eax
	.loc 7 3411 7
	cmpl	%eax, -16(%ebp)
	jge	L3434
	.loc 7 3412 37
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL27stbtt__sort_edges_quicksortP11stbtt__edgei
	.loc 7 3413 15
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	.loc 7 3413 12
	addl	%eax, 8(%ebp)
	.loc 7 3414 12
	movl	-12(%ebp), %eax
	subl	%eax, 12(%ebp)
	jmp	L3436
L3434:
	.loc 7 3416 37
	movl	12(%ebp), %eax
	subl	-12(%ebp), %eax
	movl	%eax, %ecx
	.loc 7 3416 39
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 7 3416 37
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL27stbtt__sort_edges_quicksortP11stbtt__edgei
	.loc 7 3417 12
	movl	-16(%ebp), %eax
	movl	%eax, 12(%ebp)
LBE640:
	.loc 7 3363 4
	jmp	L3436
L3439:
	.loc 7 3420 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2064:
	.def	__ZL17stbtt__sort_edgesP11stbtt__edgei;	.scl	3;	.type	32;	.endef
__ZL17stbtt__sort_edgesP11stbtt__edgei:
LFB2065:
	.loc 7 3423 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 3424 31
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL27stbtt__sort_edges_quicksortP11stbtt__edgei
	.loc 7 3425 30
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL26stbtt__sort_edges_ins_sortP11stbtt__edgei
	.loc 7 3426 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2065:
	.def	__ZL16stbtt__rasterizeP13stbtt__bitmapP12stbtt__pointPiiffffiiiPv;	.scl	3;	.type	32;	.endef
__ZL16stbtt__rasterizeP13stbtt__bitmapP12stbtt__pointPiiffffiiiPv:
LFB2066:
	.loc 7 3434 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$88, %esp
	.loc 7 3435 31
	cmpl	$0, 48(%ebp)
	je	L3444
	.loc 7 3435 31 is_stmt 0 discriminator 1
	flds	28(%ebp)
	fchs
	jmp	L3445
L3444:
	.loc 7 3435 31 discriminator 2
	flds	28(%ebp)
L3445:
	.loc 7 3435 10 is_stmt 1 discriminator 4
	fstps	-40(%ebp)
	.loc 7 3441 8 discriminator 4
	movl	$1, -44(%ebp)
	.loc 7 3448 6 discriminator 4
	movl	$0, -12(%ebp)
	.loc 7 3449 10 discriminator 4
	movl	$0, -16(%ebp)
L3447:
	.loc 7 3449 16 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	20(%ebp), %eax
	jge	L3446
	.loc 7 3450 20 discriminator 2
	movl	-16(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 7 3450 9 discriminator 2
	addl	%eax, -12(%ebp)
	.loc 7 3449 4 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3447
L3446:
	.loc 7 3452 24
	movl	-12(%ebp), %eax
	addl	$1, %eax
	movl	%eax, %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -48(%ebp)
	.loc 7 3453 4
	cmpl	$0, -48(%ebp)
	je	L3460
	.loc 7 3454 6
	movl	$0, -12(%ebp)
	.loc 7 3456 5
	movl	$0, -28(%ebp)
LBB643:
	.loc 7 3457 10
	movl	$0, -16(%ebp)
L3459:
	.loc 7 3457 16 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	20(%ebp), %eax
	jge	L3450
LBB644:
	.loc 7 3458 29
	movl	-28(%ebp), %eax
	leal	0(,%eax,8), %edx
	.loc 7 3458 21
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -52(%ebp)
	.loc 7 3459 20
	movl	-16(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 7 3459 9
	addl	%eax, -28(%ebp)
	.loc 7 3460 19
	movl	-16(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 7 3460 9
	subl	$1, %eax
	movl	%eax, -20(%ebp)
LBB645:
	.loc 7 3461 13
	movl	$0, -24(%ebp)
L3458:
	.loc 7 3461 29 discriminator 1
	movl	-16(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 7 3461 19 discriminator 1
	cmpl	%eax, -24(%ebp)
	jge	L3451
LBB646:
	.loc 7 3462 14
	movl	-24(%ebp), %eax
	movl	%eax, -32(%ebp)
	.loc 7 3462 18
	movl	-20(%ebp), %eax
	movl	%eax, -36(%ebp)
	.loc 7 3464 17
	movl	-20(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-52(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3464 19
	flds	4(%eax)
	.loc 7 3464 27
	movl	-24(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-52(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3464 29
	flds	4(%eax)
	.loc 7 3464 10
	fucomi	%st(1), %st
	jp	L3462
	fucomip	%st(1), %st
	fstp	%st(0)
	je	L3461
	jmp	L3452
L3462:
	fstp	%st(0)
	fstp	%st(0)
L3452:
	.loc 7 3467 13
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3467 22
	movl	$0, 16(%eax)
	.loc 7 3468 21
	cmpl	$0, 48(%ebp)
	je	L3455
	.loc 7 3468 26 discriminator 1
	movl	-20(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-52(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3468 28 discriminator 1
	flds	4(%eax)
	.loc 7 3468 35 discriminator 1
	movl	-24(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-52(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3468 37 discriminator 1
	flds	4(%eax)
	fxch	%st(1)
	.loc 7 3468 21 discriminator 1
	fcomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	jmp	L3456
L3455:
	.loc 7 3468 44 discriminator 2
	movl	-20(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-52(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3468 46 discriminator 2
	flds	4(%eax)
	.loc 7 3468 53 discriminator 2
	movl	-24(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-52(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3468 55 discriminator 2
	flds	4(%eax)
	.loc 7 3468 21 discriminator 2
	fcomip	%st(1), %st
	fstp	%st(0)
	seta	%al
L3456:
	.loc 7 3468 10 discriminator 4
	testb	%al, %al
	je	L3457
	.loc 7 3469 16
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3469 25
	movl	$1, 16(%eax)
	.loc 7 3470 14
	movl	-20(%ebp), %eax
	movl	%eax, -32(%ebp)
	.loc 7 3470 18
	movl	-24(%ebp), %eax
	movl	%eax, -36(%ebp)
L3457:
	.loc 7 3472 23
	movl	-32(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-52(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3472 25
	flds	(%eax)
	.loc 7 3472 27
	fmuls	24(%ebp)
	.loc 7 3472 13
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3472 37
	fadds	32(%ebp)
	.loc 7 3472 18
	fstps	(%eax)
	.loc 7 3473 24
	movl	-32(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-52(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3473 26
	flds	4(%eax)
	.loc 7 3473 28
	fmuls	-40(%ebp)
	.loc 7 3473 42
	fadds	36(%ebp)
	.loc 7 3473 53
	fildl	-44(%ebp)
	.loc 7 3473 13
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3473 53
	fmulp	%st, %st(1)
	.loc 7 3473 18
	fstps	4(%eax)
	.loc 7 3474 23
	movl	-36(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-52(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3474 25
	flds	(%eax)
	.loc 7 3474 27
	fmuls	24(%ebp)
	.loc 7 3474 13
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3474 37
	fadds	32(%ebp)
	.loc 7 3474 18
	fstps	8(%eax)
	.loc 7 3475 24
	movl	-36(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-52(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3475 26
	flds	4(%eax)
	.loc 7 3475 28
	fmuls	-40(%ebp)
	.loc 7 3475 42
	fadds	36(%ebp)
	.loc 7 3475 53
	fildl	-44(%ebp)
	.loc 7 3475 13
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3475 53
	fmulp	%st, %st(1)
	.loc 7 3475 18
	fstps	12(%eax)
	.loc 7 3476 10
	addl	$1, -12(%ebp)
	jmp	L3454
L3461:
	.loc 7 3465 13
	nop
L3454:
LBE646:
	.loc 7 3461 35 discriminator 2
	movl	-24(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -24(%ebp)
	.loc 7 3461 33 discriminator 2
	movl	%eax, -20(%ebp)
	.loc 7 3461 7 discriminator 2
	jmp	L3458
L3451:
LBE645:
LBE644:
	.loc 7 3457 4 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3459
L3450:
LBE643:
	.loc 7 3482 21
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__sort_edgesP11stbtt__edgei
	.loc 7 3485 33
	movl	52(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	44(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL29stbtt__rasterize_sorted_edgesP13stbtt__bitmapP11stbtt__edgeiiiiPv
	.loc 7 3487 4
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	jmp	L3443
L3460:
	.loc 7 3453 16
	nop
L3443:
	.loc 7 3488 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2066:
	.def	__ZL16stbtt__add_pointP12stbtt__pointiff;	.scl	3;	.type	32;	.endef
__ZL16stbtt__add_pointP12stbtt__pointiff:
LFB2067:
	.loc 7 3491 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 7 3492 4
	cmpl	$0, 8(%ebp)
	je	L3466
	.loc 7 3493 12
	movl	12(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3493 16
	flds	16(%ebp)
	fstps	(%eax)
	.loc 7 3494 12
	movl	12(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3494 16
	flds	20(%ebp)
	fstps	4(%eax)
	jmp	L3463
L3466:
	.loc 7 3492 17
	nop
L3463:
	.loc 7 3495 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2067:
	.def	__ZL22stbtt__tesselate_curveP12stbtt__pointPifffffffi;	.scl	3;	.type	32;	.endef
__ZL22stbtt__tesselate_curveP12stbtt__pointPifffffffi:
LFB2068:
	.loc 7 3499 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 7 3501 22
	flds	24(%ebp)
	fadd	%st(0), %st
	.loc 7 3501 19
	fadds	16(%ebp)
	.loc 7 3501 26
	fadds	32(%ebp)
	.loc 7 3501 10
	flds	LC200
	fdivrp	%st, %st(1)
	fstps	-12(%ebp)
	.loc 7 3502 22
	flds	28(%ebp)
	fadd	%st(0), %st
	.loc 7 3502 19
	fadds	20(%ebp)
	.loc 7 3502 26
	fadds	36(%ebp)
	.loc 7 3502 10
	flds	LC200
	fdivrp	%st, %st(1)
	fstps	-16(%ebp)
	.loc 7 3504 18
	flds	16(%ebp)
	fadds	32(%ebp)
	.loc 7 3504 22
	flds	LC192
	fdivrp	%st, %st(1)
	.loc 7 3504 10
	fsubs	-12(%ebp)
	fstps	-20(%ebp)
	.loc 7 3505 18
	flds	20(%ebp)
	fadds	36(%ebp)
	.loc 7 3505 22
	flds	LC192
	fdivrp	%st, %st(1)
	.loc 7 3505 10
	fsubs	-16(%ebp)
	fstps	-24(%ebp)
	.loc 7 3506 4
	cmpl	$16, 44(%ebp)
	jle	L3468
	.loc 7 3507 14
	movl	$1, %eax
	jmp	L3469
L3468:
	.loc 7 3508 10
	flds	-20(%ebp)
	fmuls	-20(%ebp)
	.loc 7 3508 16
	flds	-24(%ebp)
	fmuls	-24(%ebp)
	.loc 7 3508 13
	faddp	%st, %st(1)
	.loc 7 3508 4
	flds	40(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3474
	.loc 7 3509 29
	movl	44(%ebp), %eax
	addl	$1, %eax
	.loc 7 3509 73
	flds	20(%ebp)
	fadds	28(%ebp)
	.loc 7 3509 29
	flds	LC192
	fdivrp	%st, %st(1)
	.loc 7 3509 60
	flds	16(%ebp)
	fadds	24(%ebp)
	.loc 7 3509 29
	flds	LC192
	fdivrp	%st, %st(1)
	movl	%eax, 36(%esp)
	flds	40(%ebp)
	fstps	32(%esp)
	flds	-16(%ebp)
	fstps	28(%esp)
	flds	-12(%ebp)
	fstps	24(%esp)
	fxch	%st(1)
	fstps	20(%esp)
	fstps	16(%esp)
	flds	20(%ebp)
	fstps	12(%esp)
	flds	16(%ebp)
	fstps	8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbtt__tesselate_curveP12stbtt__pointPifffffffi
	.loc 7 3510 29
	movl	44(%ebp), %eax
	addl	$1, %eax
	.loc 7 3510 73
	flds	28(%ebp)
	fadds	36(%ebp)
	.loc 7 3510 29
	flds	LC192
	fdivrp	%st, %st(1)
	.loc 7 3510 60
	flds	24(%ebp)
	fadds	32(%ebp)
	.loc 7 3510 29
	flds	LC192
	fdivrp	%st, %st(1)
	movl	%eax, 36(%esp)
	flds	40(%ebp)
	fstps	32(%esp)
	flds	36(%ebp)
	fstps	28(%esp)
	flds	32(%ebp)
	fstps	24(%esp)
	fxch	%st(1)
	fstps	20(%esp)
	fstps	16(%esp)
	flds	-16(%ebp)
	fstps	12(%esp)
	flds	-12(%ebp)
	fstps	8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbtt__tesselate_curveP12stbtt__pointPifffffffi
	jmp	L3472
L3474:
	.loc 7 3512 23
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	flds	36(%ebp)
	fstps	12(%esp)
	flds	32(%ebp)
	fstps	8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbtt__add_pointP12stbtt__pointiff
	.loc 7 3513 21
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 3513 32
	leal	1(%eax), %edx
	.loc 7 3513 19
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
L3472:
	.loc 7 3515 11
	movl	$1, %eax
L3469:
	.loc 7 3516 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2068:
	.def	__ZL22stbtt__tesselate_cubicP12stbtt__pointPifffffffffi;	.scl	3;	.type	32;	.endef
__ZL22stbtt__tesselate_cubicP12stbtt__pointPifffffffffi:
LFB2069:
	.loc 7 3519 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$168, %esp
	.loc 7 3521 10
	flds	24(%ebp)
	fsubs	16(%ebp)
	fstps	-12(%ebp)
	.loc 7 3522 10
	flds	28(%ebp)
	fsubs	20(%ebp)
	fstps	-16(%ebp)
	.loc 7 3523 10
	flds	32(%ebp)
	fsubs	24(%ebp)
	fstps	-20(%ebp)
	.loc 7 3524 10
	flds	36(%ebp)
	fsubs	28(%ebp)
	fstps	-24(%ebp)
	.loc 7 3525 10
	flds	40(%ebp)
	fsubs	32(%ebp)
	fstps	-28(%ebp)
	.loc 7 3526 10
	flds	44(%ebp)
	fsubs	36(%ebp)
	fstps	-32(%ebp)
	.loc 7 3527 10
	flds	40(%ebp)
	fsubs	16(%ebp)
	fstps	-36(%ebp)
	.loc 7 3528 10
	flds	44(%ebp)
	fsubs	20(%ebp)
	fstps	-40(%ebp)
	.loc 7 3529 29
	flds	-12(%ebp)
	fmuls	-12(%ebp)
	flds	-16(%ebp)
	fmuls	-16(%ebp)
	faddp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fstps	-108(%ebp)
	.loc 7 3529 57
	flds	-20(%ebp)
	fmuls	-20(%ebp)
	flds	-24(%ebp)
	fmuls	-24(%ebp)
	faddp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt4sqrtf
	.loc 7 3529 56
	fadds	-108(%ebp)
	fstps	-108(%ebp)
	.loc 7 3529 85
	flds	-28(%ebp)
	fmuls	-28(%ebp)
	flds	-32(%ebp)
	fmuls	-32(%ebp)
	faddp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt4sqrtf
	.loc 7 3529 112
	fadds	-108(%ebp)
	fstps	-44(%ebp)
	.loc 7 3530 29
	flds	-36(%ebp)
	fmuls	-36(%ebp)
	flds	-40(%ebp)
	fmuls	-40(%ebp)
	faddp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fstps	-48(%ebp)
	.loc 7 3531 36
	flds	-44(%ebp)
	fmuls	-44(%ebp)
	.loc 7 3531 53
	flds	-48(%ebp)
	fmuls	-48(%ebp)
	.loc 7 3531 10
	fsubrp	%st, %st(1)
	fstps	-52(%ebp)
	.loc 7 3533 4
	cmpl	$16, 52(%ebp)
	jg	L3482
LBB647:
	.loc 7 3536 4
	flds	48(%ebp)
	flds	-52(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3481
LBB648:
	.loc 7 3537 22
	flds	16(%ebp)
	fadds	24(%ebp)
	.loc 7 3537 13
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-56(%ebp)
	.loc 7 3538 22
	flds	20(%ebp)
	fadds	28(%ebp)
	.loc 7 3538 13
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-60(%ebp)
	.loc 7 3539 22
	flds	24(%ebp)
	fadds	32(%ebp)
	.loc 7 3539 13
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-64(%ebp)
	.loc 7 3540 22
	flds	28(%ebp)
	fadds	36(%ebp)
	.loc 7 3540 13
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-68(%ebp)
	.loc 7 3541 22
	flds	32(%ebp)
	fadds	40(%ebp)
	.loc 7 3541 13
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-72(%ebp)
	.loc 7 3542 22
	flds	36(%ebp)
	fadds	44(%ebp)
	.loc 7 3542 13
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-76(%ebp)
	.loc 7 3544 22
	flds	-56(%ebp)
	fadds	-64(%ebp)
	.loc 7 3544 13
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-80(%ebp)
	.loc 7 3545 22
	flds	-60(%ebp)
	fadds	-68(%ebp)
	.loc 7 3545 13
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-84(%ebp)
	.loc 7 3546 22
	flds	-64(%ebp)
	fadds	-72(%ebp)
	.loc 7 3546 13
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-88(%ebp)
	.loc 7 3547 22
	flds	-68(%ebp)
	fadds	-76(%ebp)
	.loc 7 3547 13
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-92(%ebp)
	.loc 7 3549 21
	flds	-80(%ebp)
	fadds	-88(%ebp)
	.loc 7 3549 13
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-96(%ebp)
	.loc 7 3550 21
	flds	-84(%ebp)
	fadds	-92(%ebp)
	.loc 7 3550 13
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-100(%ebp)
	.loc 7 3552 29
	movl	52(%ebp), %eax
	addl	$1, %eax
	movl	%eax, 44(%esp)
	flds	48(%ebp)
	fstps	40(%esp)
	flds	-100(%ebp)
	fstps	36(%esp)
	flds	-96(%ebp)
	fstps	32(%esp)
	flds	-84(%ebp)
	fstps	28(%esp)
	flds	-80(%ebp)
	fstps	24(%esp)
	flds	-60(%ebp)
	fstps	20(%esp)
	flds	-56(%ebp)
	fstps	16(%esp)
	flds	20(%ebp)
	fstps	12(%esp)
	flds	16(%ebp)
	fstps	8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbtt__tesselate_cubicP12stbtt__pointPifffffffffi
	.loc 7 3553 29
	movl	52(%ebp), %eax
	addl	$1, %eax
	movl	%eax, 44(%esp)
	flds	48(%ebp)
	fstps	40(%esp)
	flds	44(%ebp)
	fstps	36(%esp)
	flds	40(%ebp)
	fstps	32(%esp)
	flds	-76(%ebp)
	fstps	28(%esp)
	flds	-72(%ebp)
	fstps	24(%esp)
	flds	-92(%ebp)
	fstps	20(%esp)
	flds	-88(%ebp)
	fstps	16(%esp)
	flds	-100(%ebp)
	fstps	12(%esp)
	flds	-96(%ebp)
	fstps	8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbtt__tesselate_cubicP12stbtt__pointPifffffffffi
LBE648:
	jmp	L3475
L3481:
	.loc 7 3555 23
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	flds	44(%ebp)
	fstps	12(%esp)
	flds	40(%ebp)
	fstps	8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbtt__add_pointP12stbtt__pointiff
	.loc 7 3556 21
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 3556 32
	leal	1(%eax), %edx
	.loc 7 3556 19
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	jmp	L3475
L3482:
LBE647:
	.loc 7 3534 7
	nop
L3475:
	.loc 7 3558 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2069:
	.def	__ZL19stbtt_FlattenCurvesP12stbtt_vertexifPPiS1_Pv;	.scl	3;	.type	32;	.endef
__ZL19stbtt_FlattenCurvesP12stbtt_vertexifPPiS1_Pv:
LFB2070:
	.loc 7 3562 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$120, %esp
	.loc 7 3563 18
	movl	$0, -12(%ebp)
	.loc 7 3564 8
	movl	$0, -44(%ebp)
	.loc 7 3566 10
	flds	16(%ebp)
	fmuls	16(%ebp)
	fstps	-40(%ebp)
	.loc 7 3567 10
	movl	$0, -20(%ebp)
	.loc 7 3567 14
	movl	$0, -24(%ebp)
	.loc 7 3570 10
	movl	$0, -16(%ebp)
L3486:
	.loc 7 3570 16 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L3484
	.loc 7 3571 21
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3571 23
	movzbl	12(%eax), %eax
	.loc 7 3571 7
	cmpb	$1, %al
	jne	L3485
	.loc 7 3572 10
	addl	$1, -20(%ebp)
L3485:
	.loc 7 3570 4 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3486
L3484:
	.loc 7 3574 18
	movl	24(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%edx, (%eax)
	.loc 7 3575 4
	cmpl	$0, -20(%ebp)
	jne	L3487
	.loc 7 3575 23 discriminator 1
	movl	$0, %eax
	jmp	L3503
L3487:
	.loc 7 3577 31
	movl	-20(%ebp), %eax
	sall	$2, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, %edx
	.loc 7 3577 21
	movl	20(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 3579 8
	movl	20(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 3579 4
	testl	%eax, %eax
	jne	L3489
	.loc 7 3580 21
	movl	24(%ebp), %eax
	movl	$0, (%eax)
	.loc 7 3581 14
	movl	$0, %eax
	jmp	L3503
L3489:
LBB649:
	.loc 7 3585 13
	movl	$0, -28(%ebp)
L3502:
	.loc 7 3585 22 discriminator 1
	cmpl	$1, -28(%ebp)
	jg	L3490
LBB650:
	.loc 7 3586 13
	fldz
	fstps	-32(%ebp)
	.loc 7 3586 17
	fldz
	fstps	-36(%ebp)
	.loc 7 3587 7
	cmpl	$1, -28(%ebp)
	jne	L3491
	.loc 7 3588 36
	movl	-44(%ebp), %eax
	sall	$3, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -12(%ebp)
	.loc 7 3589 10
	cmpl	$0, -12(%ebp)
	je	L3505
L3491:
	.loc 7 3591 18
	movl	$0, -44(%ebp)
	.loc 7 3592 8
	movl	$-1, -20(%ebp)
	.loc 7 3593 13
	movl	$0, -16(%ebp)
L3501:
	.loc 7 3593 19 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L3493
	.loc 7 3594 28
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3594 30
	movzbl	12(%eax), %eax
	movzbl	%al, %eax
	cmpl	$2, %eax
	je	L3494
	cmpl	$2, %eax
	jg	L3495
	cmpl	$1, %eax
	je	L3496
	jmp	L3497
L3495:
	cmpl	$3, %eax
	je	L3498
	cmpl	$4, %eax
	je	L3499
	jmp	L3497
L3496:
	.loc 7 3597 16
	cmpl	$0, -20(%ebp)
	js	L3500
	.loc 7 3598 54
	movl	-44(%ebp), %eax
	.loc 7 3598 20
	movl	20(%ebp), %edx
	movl	(%edx), %edx
	.loc 7 3598 39
	movl	-20(%ebp), %ecx
	sall	$2, %ecx
	addl	%ecx, %edx
	.loc 7 3598 54
	subl	-24(%ebp), %eax
	.loc 7 3598 41
	movl	%eax, (%edx)
L3500:
	.loc 7 3599 16
	addl	$1, -20(%ebp)
	.loc 7 3600 22
	movl	-44(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 7 3602 30
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3602 32
	movzwl	(%eax), %eax
	.loc 7 3602 18
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	fstps	-32(%ebp)
	.loc 7 3602 49
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3602 51
	movzwl	2(%eax), %eax
	.loc 7 3602 37
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	fstps	-36(%ebp)
	.loc 7 3603 32
	movl	-44(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -44(%ebp)
	flds	-36(%ebp)
	fstps	12(%esp)
	flds	-32(%ebp)
	fstps	8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbtt__add_pointP12stbtt__pointiff
	.loc 7 3604 16
	jmp	L3497
L3494:
	.loc 7 3606 30
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3606 32
	movzwl	(%eax), %eax
	.loc 7 3606 18
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	fstps	-32(%ebp)
	.loc 7 3606 49
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3606 51
	movzwl	2(%eax), %eax
	.loc 7 3606 37
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	fstps	-36(%ebp)
	.loc 7 3607 32
	movl	-44(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -44(%ebp)
	flds	-36(%ebp)
	fstps	12(%esp)
	flds	-32(%ebp)
	fstps	8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbtt__add_pointP12stbtt__pointiff
	.loc 7 3608 16
	jmp	L3497
L3498:
	.loc 7 3612 67
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3612 69
	movzwl	2(%eax), %eax
	.loc 7 3610 38
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	.loc 7 3612 51
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3612 53
	movzwl	(%eax), %eax
	.loc 7 3610 38
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	.loc 7 3611 67
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3611 69
	movzwl	6(%eax), %eax
	.loc 7 3610 38
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	.loc 7 3611 51
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3611 53
	movzwl	4(%eax), %eax
	.loc 7 3610 38
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	movl	$0, 36(%esp)
	flds	-40(%ebp)
	fstps	32(%esp)
	fxch	%st(3)
	fstps	28(%esp)
	fxch	%st(1)
	fstps	24(%esp)
	fstps	20(%esp)
	fstps	16(%esp)
	flds	-36(%ebp)
	fstps	12(%esp)
	flds	-32(%ebp)
	fstps	8(%esp)
	leal	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbtt__tesselate_curveP12stbtt__pointPifffffffi
	.loc 7 3614 30
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3614 32
	movzwl	(%eax), %eax
	.loc 7 3614 18
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	fstps	-32(%ebp)
	.loc 7 3614 49
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3614 51
	movzwl	2(%eax), %eax
	.loc 7 3614 37
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	fstps	-36(%ebp)
	.loc 7 3615 16
	jmp	L3497
L3499:
	.loc 7 3620 67
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3620 69
	movzwl	2(%eax), %eax
	.loc 7 3617 38
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	.loc 7 3620 51
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3620 53
	movzwl	(%eax), %eax
	.loc 7 3617 38
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	.loc 7 3619 68
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3619 70
	movzwl	10(%eax), %eax
	.loc 7 3617 38
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	.loc 7 3619 51
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3619 53
	movzwl	8(%eax), %eax
	.loc 7 3617 38
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	.loc 7 3618 67
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3618 69
	movzwl	6(%eax), %eax
	.loc 7 3617 38
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	.loc 7 3618 51
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3618 53
	movzwl	4(%eax), %eax
	.loc 7 3617 38
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	movl	$0, 44(%esp)
	flds	-40(%ebp)
	fstps	40(%esp)
	fxch	%st(5)
	fstps	36(%esp)
	fxch	%st(3)
	fstps	32(%esp)
	fxch	%st(1)
	fstps	28(%esp)
	fstps	24(%esp)
	fstps	20(%esp)
	fstps	16(%esp)
	flds	-36(%ebp)
	fstps	12(%esp)
	flds	-32(%ebp)
	fstps	8(%esp)
	leal	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL22stbtt__tesselate_cubicP12stbtt__pointPifffffffffi
	.loc 7 3622 30
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3622 32
	movzwl	(%eax), %eax
	.loc 7 3622 18
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	fstps	-32(%ebp)
	.loc 7 3622 49
	movl	-16(%ebp), %eax
	imull	$14, %eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3622 51
	movzwl	2(%eax), %eax
	.loc 7 3622 37
	movw	%ax, -58(%ebp)
	filds	-58(%ebp)
	fstps	-36(%ebp)
	.loc 7 3623 16
	nop
L3497:
	.loc 7 3593 7 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3501
L3493:
	.loc 7 3626 42 discriminator 2
	movl	-44(%ebp), %eax
	.loc 7 3626 8 discriminator 2
	movl	20(%ebp), %edx
	movl	(%edx), %edx
	.loc 7 3626 27 discriminator 2
	movl	-20(%ebp), %ecx
	sall	$2, %ecx
	addl	%ecx, %edx
	.loc 7 3626 42 discriminator 2
	subl	-24(%ebp), %eax
	.loc 7 3626 29 discriminator 2
	movl	%eax, (%edx)
LBE650:
	.loc 7 3585 4 discriminator 2
	addl	$1, -28(%ebp)
	jmp	L3502
L3490:
LBE649:
	.loc 7 3629 11
	movl	-12(%ebp), %eax
	jmp	L3503
L3505:
LBB652:
LBB651:
	.loc 7 3589 35
	nop
L3492:
LBE651:
LBE652:
	.loc 7 3631 4
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 3632 4
	movl	20(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 3633 21
	movl	20(%ebp), %eax
	movl	$0, (%eax)
	.loc 7 3634 18
	movl	24(%ebp), %eax
	movl	$0, (%eax)
	.loc 7 3635 11
	movl	$0, %eax
L3503:
	.loc 7 3636 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2070:
	.globl	_stbtt_Rasterize
	.def	_stbtt_Rasterize;	.scl	2;	.type	32;	.endef
_stbtt_Rasterize:
LFB2071:
	.loc 7 3639 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 7 3640 47
	flds	28(%ebp)
	flds	24(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3512
	.loc 7 3640 47 is_stmt 0 discriminator 1
	flds	28(%ebp)
	jmp	L3509
L3512:
	.loc 7 3640 47 discriminator 2
	flds	24(%ebp)
L3509:
	.loc 7 3640 10 is_stmt 1 discriminator 4
	fstps	-12(%ebp)
	.loc 7 3641 8 discriminator 4
	movl	$0, -20(%ebp)
	.loc 7 3642 9 discriminator 4
	movl	$0, -24(%ebp)
	.loc 7 3643 48 discriminator 4
	movl	52(%ebp), %eax
	flds	12(%ebp)
	fdivs	-12(%ebp)
	movl	%eax, 20(%esp)
	leal	-20(%ebp), %eax
	movl	%eax, 16(%esp)
	leal	-24(%ebp), %eax
	movl	%eax, 12(%esp)
	fstps	8(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL19stbtt_FlattenCurvesP12stbtt_vertexifPPiS1_Pv
	movl	%eax, -16(%ebp)
	.loc 7 3644 4 discriminator 4
	cmpl	$0, -16(%ebp)
	je	L3513
	.loc 7 3645 23
	movl	52(%ebp), %ecx
	movl	-20(%ebp), %edx
	movl	-24(%ebp), %eax
	movl	%ecx, 44(%esp)
	movl	48(%ebp), %ecx
	movl	%ecx, 40(%esp)
	movl	44(%ebp), %ecx
	movl	%ecx, 36(%esp)
	movl	40(%ebp), %ecx
	movl	%ecx, 32(%esp)
	flds	36(%ebp)
	fstps	28(%esp)
	flds	32(%ebp)
	fstps	24(%esp)
	flds	28(%ebp)
	fstps	20(%esp)
	flds	24(%ebp)
	fstps	16(%esp)
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbtt__rasterizeP13stbtt__bitmapP12stbtt__pointPiiffffiiiPv
	.loc 7 3646 7
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 3647 7
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
L3513:
	.loc 7 3649 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2071:
	.globl	_stbtt_FreeBitmap
	.def	_stbtt_FreeBitmap;	.scl	2;	.type	32;	.endef
_stbtt_FreeBitmap:
LFB2072:
	.loc 7 3652 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 3653 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 3654 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2072:
	.globl	_stbtt_GetGlyphBitmapSubpixel
	.def	_stbtt_GetGlyphBitmapSubpixel;	.scl	2;	.type	32;	.endef
_stbtt_GetGlyphBitmapSubpixel:
LFB2073:
	.loc 7 3657 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$100, %esp
	.cfi_offset 3, -12
	.loc 7 3661 39
	leal	-48(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphShape
	movl	%eax, -12(%ebp)
	.loc 7 3663 4
	flds	12(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jp	L3516
	flds	12(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L3516
	.loc 7 3663 30 discriminator 1
	flds	16(%ebp)
	fstps	12(%ebp)
L3516:
	.loc 7 3664 4
	flds	16(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jp	L3518
	flds	16(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L3518
	.loc 7 3665 7
	flds	12(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jp	L3520
	flds	12(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L3520
	.loc 7 3666 10
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 3667 17
	movl	$0, %eax
	jmp	L3528
L3520:
	.loc 7 3669 15
	flds	12(%ebp)
	fstps	16(%ebp)
L3518:
	.loc 7 3672 35
	leal	-28(%ebp), %eax
	movl	%eax, 36(%esp)
	leal	-24(%ebp), %eax
	movl	%eax, 32(%esp)
	leal	-20(%ebp), %eax
	movl	%eax, 28(%esp)
	leal	-16(%ebp), %eax
	movl	%eax, 24(%esp)
	flds	24(%ebp)
	fstps	20(%esp)
	flds	20(%ebp)
	fstps	16(%esp)
	flds	16(%ebp)
	fstps	12(%esp)
	flds	12(%ebp)
	fstps	8(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphBitmapBoxSubpixel
	.loc 7 3675 17
	movl	-24(%ebp), %edx
	movl	-16(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 3675 10
	movl	%eax, -44(%ebp)
	.loc 7 3676 17
	movl	-28(%ebp), %edx
	movl	-20(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 3676 10
	movl	%eax, -40(%ebp)
	.loc 7 3677 15
	movl	$0, -32(%ebp)
	.loc 7 3679 4
	cmpl	$0, 32(%ebp)
	je	L3523
	.loc 7 3679 30 discriminator 1
	movl	-44(%ebp), %edx
	.loc 7 3679 24 discriminator 1
	movl	32(%ebp), %eax
	movl	%edx, (%eax)
L3523:
	.loc 7 3680 4
	cmpl	$0, 36(%ebp)
	je	L3524
	.loc 7 3680 30 discriminator 1
	movl	-40(%ebp), %edx
	.loc 7 3680 24 discriminator 1
	movl	36(%ebp), %eax
	movl	%edx, (%eax)
L3524:
	.loc 7 3681 4
	cmpl	$0, 40(%ebp)
	je	L3525
	.loc 7 3681 24 discriminator 1
	movl	-16(%ebp), %edx
	movl	40(%ebp), %eax
	movl	%edx, (%eax)
L3525:
	.loc 7 3682 4
	cmpl	$0, 44(%ebp)
	je	L3526
	.loc 7 3682 24 discriminator 1
	movl	-20(%ebp), %edx
	movl	44(%ebp), %eax
	movl	%edx, (%eax)
L3526:
	.loc 7 3684 12
	movl	-44(%ebp), %eax
	.loc 7 3684 4
	testl	%eax, %eax
	je	L3527
	.loc 7 3684 21 discriminator 1
	movl	-40(%ebp), %eax
	.loc 7 3684 14 discriminator 1
	testl	%eax, %eax
	je	L3527
	.loc 7 3685 38
	movl	-44(%ebp), %edx
	movl	-40(%ebp), %eax
	imull	%edx, %eax
	movl	%eax, (%esp)
	call	_malloc
	.loc 7 3685 18
	movl	%eax, -32(%ebp)
	.loc 7 3686 15
	movl	-32(%ebp), %eax
	.loc 7 3686 7
	testl	%eax, %eax
	je	L3527
	.loc 7 3687 27
	movl	-44(%ebp), %eax
	.loc 7 3687 21
	movl	%eax, -36(%ebp)
	.loc 7 3689 115
	movl	8(%ebp), %eax
	movl	(%eax), %ebx
	.loc 7 3689 25
	movl	-20(%ebp), %ecx
	movl	-16(%ebp), %edx
	movl	-48(%ebp), %eax
	movl	%ebx, 44(%esp)
	movl	$1, 40(%esp)
	movl	%ecx, 36(%esp)
	movl	%edx, 32(%esp)
	flds	24(%ebp)
	fstps	28(%esp)
	flds	20(%ebp)
	fstps	24(%esp)
	flds	16(%ebp)
	fstps	20(%esp)
	flds	12(%ebp)
	fstps	16(%esp)
	movl	-12(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	flds	LC201
	fstps	4(%esp)
	leal	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_Rasterize
L3527:
	.loc 7 3692 4
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 3693 15
	movl	-32(%ebp), %eax
L3528:
	.loc 7 3694 1 discriminator 1
	addl	$100, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2073:
	.globl	_stbtt_GetGlyphBitmap
	.def	_stbtt_GetGlyphBitmap;	.scl	2;	.type	32;	.endef
_stbtt_GetGlyphBitmap:
LFB2074:
	.loc 7 3697 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 3698 39
	movl	36(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 20(%esp)
	fldz
	fstps	16(%esp)
	fldz
	fstps	12(%esp)
	flds	16(%ebp)
	fstps	8(%esp)
	flds	12(%ebp)
	fstps	4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphBitmapSubpixel
	.loc 7 3699 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2074:
	.globl	_stbtt_MakeGlyphBitmapSubpixel
	.def	_stbtt_MakeGlyphBitmapSubpixel;	.scl	2;	.type	32;	.endef
_stbtt_MakeGlyphBitmapSubpixel:
LFB2075:
	.loc 7 3702 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$84, %esp
	.cfi_offset 3, -12
	.loc 7 3705 39
	leal	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphShape
	movl	%eax, -12(%ebp)
	.loc 7 3708 35
	movl	$0, 36(%esp)
	movl	$0, 32(%esp)
	leal	-20(%ebp), %eax
	movl	%eax, 28(%esp)
	leal	-16(%ebp), %eax
	movl	%eax, 24(%esp)
	flds	40(%ebp)
	fstps	20(%esp)
	flds	36(%ebp)
	fstps	16(%esp)
	flds	32(%ebp)
	fstps	12(%esp)
	flds	28(%ebp)
	fstps	8(%esp)
	movl	44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphBitmapBoxSubpixel
	.loc 7 3709 15
	movl	12(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 7 3710 10
	movl	16(%ebp), %eax
	movl	%eax, -40(%ebp)
	.loc 7 3711 10
	movl	20(%ebp), %eax
	movl	%eax, -36(%ebp)
	.loc 7 3712 15
	movl	24(%ebp), %eax
	movl	%eax, -32(%ebp)
	.loc 7 3714 12
	movl	-40(%ebp), %eax
	.loc 7 3714 4
	testl	%eax, %eax
	je	L3535
	.loc 7 3714 21 discriminator 1
	movl	-36(%ebp), %eax
	.loc 7 3714 14 discriminator 1
	testl	%eax, %eax
	je	L3535
	.loc 7 3715 111
	movl	8(%ebp), %eax
	movl	(%eax), %ebx
	.loc 7 3715 22
	movl	-20(%ebp), %ecx
	movl	-16(%ebp), %edx
	movl	-24(%ebp), %eax
	movl	%ebx, 44(%esp)
	movl	$1, 40(%esp)
	movl	%ecx, 36(%esp)
	movl	%edx, 32(%esp)
	flds	40(%ebp)
	fstps	28(%esp)
	flds	36(%ebp)
	fstps	24(%esp)
	flds	32(%ebp)
	fstps	20(%esp)
	flds	28(%ebp)
	fstps	16(%esp)
	movl	-12(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	flds	LC201
	fstps	4(%esp)
	leal	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_Rasterize
L3535:
	.loc 7 3717 4
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 3718 1
	nop
	addl	$84, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2075:
	.globl	_stbtt_MakeGlyphBitmap
	.def	_stbtt_MakeGlyphBitmap;	.scl	2;	.type	32;	.endef
_stbtt_MakeGlyphBitmap:
LFB2076:
	.loc 7 3721 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 3722 33
	movl	36(%ebp), %eax
	movl	%eax, 36(%esp)
	fldz
	fstps	32(%esp)
	fldz
	fstps	28(%esp)
	flds	32(%ebp)
	fstps	24(%esp)
	flds	28(%ebp)
	fstps	20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_MakeGlyphBitmapSubpixel
	.loc 7 3723 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2076:
	.globl	_stbtt_GetCodepointBitmapSubpixel
	.def	_stbtt_GetCodepointBitmapSubpixel;	.scl	2;	.type	32;	.endef
_stbtt_GetCodepointBitmapSubpixel:
LFB2077:
	.loc 7 3726 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 3727 39
	movl	28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%eax, %edx
	movl	44(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	%edx, 20(%esp)
	flds	24(%ebp)
	fstps	16(%esp)
	flds	20(%ebp)
	fstps	12(%esp)
	flds	16(%ebp)
	fstps	8(%esp)
	flds	12(%ebp)
	fstps	4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphBitmapSubpixel
	.loc 7 3728 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2077:
	.globl	_stbtt_MakeCodepointBitmapSubpixelPrefilter
	.def	_stbtt_MakeCodepointBitmapSubpixelPrefilter;	.scl	2;	.type	32;	.endef
_stbtt_MakeCodepointBitmapSubpixelPrefilter:
LFB2078:
	.loc 7 3731 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 7 3732 42
	movl	60(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%eax, 52(%esp)
	movl	56(%ebp), %eax
	movl	%eax, 48(%esp)
	movl	52(%ebp), %eax
	movl	%eax, 44(%esp)
	movl	48(%ebp), %eax
	movl	%eax, 40(%esp)
	movl	44(%ebp), %eax
	movl	%eax, 36(%esp)
	flds	40(%ebp)
	fstps	32(%esp)
	flds	36(%ebp)
	fstps	28(%esp)
	flds	32(%ebp)
	fstps	24(%esp)
	flds	28(%ebp)
	fstps	20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_MakeGlyphBitmapSubpixelPrefilter
	.loc 7 3733 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2078:
	.globl	_stbtt_MakeCodepointBitmapSubpixel
	.def	_stbtt_MakeCodepointBitmapSubpixel;	.scl	2;	.type	32;	.endef
_stbtt_MakeCodepointBitmapSubpixel:
LFB2079:
	.loc 7 3736 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 3737 33
	movl	44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%eax, 36(%esp)
	flds	40(%ebp)
	fstps	32(%esp)
	flds	36(%ebp)
	fstps	28(%esp)
	flds	32(%ebp)
	fstps	24(%esp)
	flds	28(%ebp)
	fstps	20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_MakeGlyphBitmapSubpixel
	.loc 7 3738 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2079:
	.globl	_stbtt_GetCodepointBitmap
	.def	_stbtt_GetCodepointBitmap;	.scl	2;	.type	32;	.endef
_stbtt_GetCodepointBitmap:
LFB2080:
	.loc 7 3741 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 3742 43
	movl	36(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 20(%esp)
	fldz
	fstps	16(%esp)
	fldz
	fstps	12(%esp)
	flds	16(%ebp)
	fstps	8(%esp)
	flds	12(%ebp)
	fstps	4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetCodepointBitmapSubpixel
	.loc 7 3743 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2080:
	.globl	_stbtt_MakeCodepointBitmap
	.def	_stbtt_MakeCodepointBitmap;	.scl	2;	.type	32;	.endef
_stbtt_MakeCodepointBitmap:
LFB2081:
	.loc 7 3746 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 3747 37
	movl	36(%ebp), %eax
	movl	%eax, 36(%esp)
	fldz
	fstps	32(%esp)
	fldz
	fstps	28(%esp)
	flds	32(%ebp)
	fstps	24(%esp)
	flds	28(%ebp)
	fstps	20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_MakeCodepointBitmapSubpixel
	.loc 7 3748 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2081:
	.section .rdata,"dr"
LC202:
	.ascii "x+gw < pw\0"
LC203:
	.ascii "y+gh < ph\0"
	.text
	.def	__ZL29stbtt_BakeFontBitmap_internalPhifS_iiiiP15stbtt_bakedchar;	.scl	3;	.type	32;	.endef
__ZL29stbtt_BakeFontBitmap_internalPhifS_iiiiP15stbtt_bakedchar:
LFB2082:
	.loc 7 3761 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$244, %esp
	.cfi_offset 3, -12
	.loc 7 3765 15
	movl	$0, -168(%ebp)
	.loc 7 3766 23
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-168(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_InitFont
	.loc 7 3766 8
	testl	%eax, %eax
	sete	%al
	.loc 7 3766 4
	testb	%al, %al
	je	L3545
	.loc 7 3767 15
	movl	$-1, %eax
	jmp	L3558
L3545:
	.loc 7 3768 30
	movl	24(%ebp), %eax
	imull	28(%ebp), %eax
	.loc 7 3768 16
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 7 3769 7
	movl	$1, -16(%ebp)
	.loc 7 3769 5
	movl	-16(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 7 3770 13
	movl	$1, -20(%ebp)
	.loc 7 3772 37
	flds	16(%ebp)
	fstps	4(%esp)
	leal	-168(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_ScaleForPixelHeight
	fstps	-28(%ebp)
LBB653:
	.loc 7 3774 10
	movl	$0, -24(%ebp)
L3557:
	.loc 7 3774 16 discriminator 1
	movl	-24(%ebp), %eax
	cmpl	36(%ebp), %eax
	jge	L3547
LBB654:
	.loc 7 3776 35
	movl	32(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, 4(%esp)
	leal	-168(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%eax, -32(%ebp)
	.loc 7 3777 29
	leal	-176(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-172(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-168(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphHMetrics
	.loc 7 3778 30
	leal	-192(%ebp), %eax
	movl	%eax, 28(%esp)
	leal	-188(%ebp), %eax
	movl	%eax, 24(%esp)
	leal	-184(%ebp), %eax
	movl	%eax, 20(%esp)
	leal	-180(%ebp), %eax
	movl	%eax, 16(%esp)
	flds	-28(%ebp)
	fstps	12(%esp)
	flds	-28(%ebp)
	fstps	8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-168(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphBitmapBox
	.loc 7 3779 14
	movl	-188(%ebp), %edx
	movl	-180(%ebp), %eax
	.loc 7 3779 10
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -36(%ebp)
	.loc 7 3780 14
	movl	-192(%ebp), %edx
	movl	-184(%ebp), %eax
	.loc 7 3780 10
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -40(%ebp)
	.loc 7 3781 13
	movl	-12(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3781 18
	addl	$1, %eax
	.loc 7 3781 7
	cmpl	%eax, 24(%ebp)
	jg	L3548
	.loc 7 3782 12
	movl	-20(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 7 3782 26
	movl	$1, -12(%ebp)
L3548:
	.loc 7 3783 13
	movl	-16(%ebp), %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3783 18
	addl	$1, %eax
	.loc 7 3783 7
	cmpl	%eax, 28(%ebp)
	jg	L3549
	.loc 7 3784 18
	movl	-24(%ebp), %eax
	negl	%eax
	jmp	L3558
L3549:
	.loc 7 3785 7
	movl	-12(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	cmpl	%eax, 24(%ebp)
	jg	L3552
	.loc 7 3785 7 is_stmt 0 discriminator 2
	movl	$3785, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC202, (%esp)
	call	__assert
L3552:
	.loc 7 3786 7 is_stmt 1
	movl	-16(%ebp), %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	cmpl	%eax, 28(%ebp)
	jg	L3555
	.loc 7 3786 7 is_stmt 0 discriminator 2
	movl	$3786, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC203, (%esp)
	call	__assert
L3555:
	.loc 7 3787 43 is_stmt 1
	movl	-16(%ebp), %eax
	imull	24(%ebp), %eax
	movl	%eax, %edx
	.loc 7 3787 41
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	.loc 7 3787 28
	movl	20(%ebp), %eax
	addl	%eax, %edx
	movl	-32(%ebp), %eax
	movl	%eax, 28(%esp)
	flds	-28(%ebp)
	fstps	24(%esp)
	flds	-28(%ebp)
	fstps	20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	leal	-168(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_MakeGlyphBitmap
	.loc 7 3788 17
	movl	-24(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	40(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3788 24
	movl	-12(%ebp), %edx
	.loc 7 3788 22
	movw	%dx, (%eax)
	.loc 7 3789 17
	movl	-24(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	40(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3789 24
	movl	-16(%ebp), %edx
	.loc 7 3789 22
	movw	%dx, 2(%eax)
	.loc 7 3790 24
	movl	-12(%ebp), %eax
	movl	%eax, %ebx
	movl	-36(%ebp), %eax
	movl	%eax, %ecx
	.loc 7 3790 17
	movl	-24(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	40(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3790 41
	leal	(%ebx,%ecx), %edx
	.loc 7 3790 22
	movw	%dx, 4(%eax)
	.loc 7 3791 24
	movl	-16(%ebp), %eax
	movl	%eax, %ebx
	movl	-40(%ebp), %eax
	movl	%eax, %ecx
	.loc 7 3791 17
	movl	-24(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	40(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3791 41
	leal	(%ebx,%ecx), %edx
	.loc 7 3791 22
	movw	%dx, 6(%eax)
	.loc 7 3792 36
	movl	-172(%ebp), %eax
	movl	%eax, -204(%ebp)
	fildl	-204(%ebp)
	.loc 7 3792 17
	movl	-24(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	40(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3792 36
	fmuls	-28(%ebp)
	.loc 7 3792 28
	fstps	16(%eax)
	.loc 7 3793 30
	movl	-180(%ebp), %ecx
	.loc 7 3793 17
	movl	-24(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	40(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3793 30
	movl	%ecx, -204(%ebp)
	fildl	-204(%ebp)
	.loc 7 3793 28
	fstps	8(%eax)
	.loc 7 3794 30
	movl	-184(%ebp), %ecx
	.loc 7 3794 17
	movl	-24(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	40(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3794 30
	movl	%ecx, -204(%ebp)
	fildl	-204(%ebp)
	.loc 7 3794 28
	fstps	12(%eax)
	.loc 7 3795 13
	movl	-12(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3795 9
	addl	$1, %eax
	movl	%eax, -12(%ebp)
	.loc 7 3796 12
	movl	-16(%ebp), %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3796 7
	cmpl	%eax, -20(%ebp)
	jg	L3556
	.loc 7 3797 22
	movl	-16(%ebp), %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3797 19
	addl	$1, %eax
	movl	%eax, -20(%ebp)
L3556:
LBE654:
	.loc 7 3774 4
	addl	$1, -24(%ebp)
	jmp	L3557
L3547:
LBE653:
	.loc 7 3799 11
	movl	-20(%ebp), %eax
L3558:
	.loc 7 3800 1 discriminator 1
	addl	$244, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2082:
	.globl	_stbtt_GetBakedQuad
	.def	_stbtt_GetBakedQuad;	.scl	2;	.type	32;	.endef
_stbtt_GetBakedQuad:
LFB2083:
	.loc 7 3803 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 7 3804 37
	cmpl	$0, 36(%ebp)
	je	L3560
	.loc 7 3804 37 is_stmt 0 discriminator 1
	fldz
	jmp	L3561
L3560:
	.loc 7 3804 37 discriminator 2
	flds	LC204
L3561:
	.loc 7 3804 10 is_stmt 1 discriminator 4
	fstps	-12(%ebp)
	.loc 7 3805 21 discriminator 4
	fildl	12(%ebp)
	.loc 7 3805 10 discriminator 4
	fld1
	fdivp	%st, %st(1)
	fstps	-16(%ebp)
	.loc 7 3805 38 discriminator 4
	fildl	16(%ebp)
	.loc 7 3805 27 discriminator 4
	fld1
	fdivp	%st, %st(1)
	fstps	-20(%ebp)
	.loc 7 3806 40 discriminator 4
	movl	20(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 7 3806 27 discriminator 4
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 7 3807 18 discriminator 4
	movl	24(%ebp), %eax
	flds	(%eax)
	movl	-24(%ebp), %eax
	flds	8(%eax)
	faddp	%st, %st(1)
	flds	LC22
	faddp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt5floorf
	fnstcw	-42(%ebp)
	movzwl	-42(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -44(%ebp)
	fldcw	-44(%ebp)
	fistpl	-28(%ebp)
	fldcw	-42(%ebp)
	.loc 7 3808 18 discriminator 4
	movl	28(%ebp), %eax
	flds	(%eax)
	movl	-24(%ebp), %eax
	flds	12(%eax)
	faddp	%st, %st(1)
	flds	LC22
	faddp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt5floorf
	fnstcw	-42(%ebp)
	movzwl	-42(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -44(%ebp)
	fldcw	-44(%ebp)
	fistpl	-32(%ebp)
	fldcw	-42(%ebp)
	.loc 7 3810 20 discriminator 4
	fildl	-28(%ebp)
	fadds	-12(%ebp)
	.loc 7 3810 10 discriminator 4
	movl	32(%ebp), %eax
	fstps	(%eax)
	.loc 7 3811 20 discriminator 4
	fildl	-32(%ebp)
	fadds	-12(%ebp)
	.loc 7 3811 10 discriminator 4
	movl	32(%ebp), %eax
	fstps	4(%eax)
	.loc 7 3812 25 discriminator 4
	movl	-24(%ebp), %eax
	movzwl	4(%eax), %eax
	movzwl	%ax, %edx
	.loc 7 3812 20 discriminator 4
	movl	-28(%ebp), %eax
	addl	%eax, %edx
	.loc 7 3812 33 discriminator 4
	movl	-24(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	.loc 7 3812 28 discriminator 4
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 3812 36 discriminator 4
	movl	%eax, -48(%ebp)
	fildl	-48(%ebp)
	fadds	-12(%ebp)
	.loc 7 3812 10 discriminator 4
	movl	32(%ebp), %eax
	fstps	16(%eax)
	.loc 7 3813 25 discriminator 4
	movl	-24(%ebp), %eax
	movzwl	6(%eax), %eax
	movzwl	%ax, %edx
	.loc 7 3813 20 discriminator 4
	movl	-32(%ebp), %eax
	addl	%eax, %edx
	.loc 7 3813 33 discriminator 4
	movl	-24(%ebp), %eax
	movzwl	2(%eax), %eax
	movzwl	%ax, %eax
	.loc 7 3813 28 discriminator 4
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 3813 36 discriminator 4
	movl	%eax, -48(%ebp)
	fildl	-48(%ebp)
	fadds	-12(%ebp)
	.loc 7 3813 10 discriminator 4
	movl	32(%ebp), %eax
	fstps	20(%eax)
	.loc 7 3815 15 discriminator 4
	movl	-24(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	.loc 7 3815 18 discriminator 4
	movl	%eax, -48(%ebp)
	fildl	-48(%ebp)
	fmuls	-16(%ebp)
	.loc 7 3815 10 discriminator 4
	movl	32(%ebp), %eax
	fstps	8(%eax)
	.loc 7 3816 15 discriminator 4
	movl	-24(%ebp), %eax
	movzwl	2(%eax), %eax
	movzwl	%ax, %eax
	.loc 7 3816 18 discriminator 4
	movl	%eax, -48(%ebp)
	fildl	-48(%ebp)
	fmuls	-20(%ebp)
	.loc 7 3816 10 discriminator 4
	movl	32(%ebp), %eax
	fstps	12(%eax)
	.loc 7 3817 15 discriminator 4
	movl	-24(%ebp), %eax
	movzwl	4(%eax), %eax
	movzwl	%ax, %eax
	.loc 7 3817 18 discriminator 4
	movl	%eax, -48(%ebp)
	fildl	-48(%ebp)
	fmuls	-16(%ebp)
	.loc 7 3817 10 discriminator 4
	movl	32(%ebp), %eax
	fstps	24(%eax)
	.loc 7 3818 15 discriminator 4
	movl	-24(%ebp), %eax
	movzwl	6(%eax), %eax
	movzwl	%ax, %eax
	.loc 7 3818 18 discriminator 4
	movl	%eax, -48(%ebp)
	fildl	-48(%ebp)
	fmuls	-20(%ebp)
	.loc 7 3818 10 discriminator 4
	movl	32(%ebp), %eax
	fstps	28(%eax)
	.loc 7 3820 10 discriminator 4
	movl	24(%ebp), %eax
	flds	(%eax)
	.loc 7 3820 16 discriminator 4
	movl	-24(%ebp), %eax
	flds	16(%eax)
	.loc 7 3820 10 discriminator 4
	faddp	%st, %st(1)
	movl	24(%ebp), %eax
	fstps	(%eax)
	.loc 7 3821 1 discriminator 4
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2083:
	.def	__ZL17stbrp_init_targetP13stbrp_contextiiP10stbrp_nodei;	.scl	3;	.type	32;	.endef
__ZL17stbrp_init_targetP13stbrp_contextiiP10stbrp_nodei:
LFB2084:
	.loc 7 3861 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 7 3862 16
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, (%eax)
	.loc 7 3863 16
	movl	8(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 4(%eax)
	.loc 7 3864 11
	movl	8(%ebp), %eax
	movl	$0, 8(%eax)
	.loc 7 3865 11
	movl	8(%ebp), %eax
	movl	$0, 12(%eax)
	.loc 7 3866 18
	movl	8(%ebp), %eax
	movl	$0, 16(%eax)
	.loc 7 3869 1
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2084:
	.def	__ZL16stbrp_pack_rectsP13stbrp_contextP10stbrp_recti;	.scl	3;	.type	32;	.endef
__ZL16stbrp_pack_rectsP13stbrp_contextP10stbrp_recti:
LFB2085:
	.loc 7 3872 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 7 3874 10
	movl	$0, -4(%ebp)
L3568:
	.loc 7 3874 16 discriminator 1
	movl	-4(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L3570
	.loc 7 3875 16
	movl	8(%ebp), %eax
	movl	8(%eax), %ecx
	.loc 7 3875 27
	movl	-4(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3875 29
	movl	12(%eax), %eax
	.loc 7 3875 18
	leal	(%ecx,%eax), %edx
	.loc 7 3875 38
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 3875 7
	cmpl	%eax, %edx
	jle	L3565
	.loc 7 3876 17
	movl	8(%ebp), %eax
	movl	$0, 8(%eax)
	.loc 7 3877 24
	movl	8(%ebp), %eax
	movl	16(%eax), %edx
	.loc 7 3877 17
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
L3565:
	.loc 7 3879 16
	movl	8(%ebp), %eax
	movl	12(%eax), %ecx
	.loc 7 3879 27
	movl	-4(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3879 29
	movl	16(%eax), %eax
	.loc 7 3879 18
	leal	(%ecx,%eax), %edx
	.loc 7 3879 38
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 3879 7
	cmpl	%eax, %edx
	jg	L3571
	.loc 7 3881 14
	movl	-4(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%eax, %edx
	.loc 7 3881 25
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 3881 18
	movl	%eax, (%edx)
	.loc 7 3882 14
	movl	-4(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%eax, %edx
	.loc 7 3882 25
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	.loc 7 3882 18
	movl	%eax, 4(%edx)
	.loc 7 3883 14
	movl	-4(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3883 27
	movl	$1, 20(%eax)
	.loc 7 3884 14
	movl	8(%ebp), %eax
	movl	8(%eax), %ecx
	.loc 7 3884 24
	movl	-4(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3884 26
	movl	12(%eax), %eax
	.loc 7 3884 14
	leal	(%ecx,%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 7 3885 16
	movl	8(%ebp), %eax
	movl	12(%eax), %ecx
	.loc 7 3885 27
	movl	-4(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3885 29
	movl	16(%eax), %eax
	.loc 7 3885 18
	leal	(%ecx,%eax), %edx
	.loc 7 3885 38
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 7 3885 7
	cmpl	%eax, %edx
	jle	L3567
	.loc 7 3886 31
	movl	8(%ebp), %eax
	movl	12(%eax), %ecx
	.loc 7 3886 42
	movl	-4(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3886 44
	movl	16(%eax), %eax
	.loc 7 3886 33
	leal	(%ecx,%eax), %edx
	.loc 7 3886 24
	movl	8(%ebp), %eax
	movl	%edx, 16(%eax)
L3567:
	.loc 7 3874 4 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L3568
L3571:
	.loc 7 3880 10
	nop
L3570:
	.loc 7 3888 16 discriminator 2
	movl	-4(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L3572
	.loc 7 3889 14 discriminator 1
	movl	-4(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3889 27 discriminator 1
	movl	$0, 20(%eax)
	.loc 7 3888 4 discriminator 1
	addl	$1, -4(%ebp)
	jmp	L3570
L3572:
	.loc 7 3890 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2085:
	.globl	_stbtt_PackBegin
	.def	_stbtt_PackBegin;	.scl	2;	.type	32;	.endef
_stbtt_PackBegin:
LFB2086:
	.loc 7 3901 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 3902 47
	movl	$20, (%esp)
	call	_malloc
	movl	%eax, -12(%ebp)
	.loc 7 3903 19
	movl	16(%ebp), %eax
	subl	28(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 7 3904 47
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -20(%ebp)
	.loc 7 3906 4
	cmpl	$0, -12(%ebp)
	je	L3574
	.loc 7 3906 24 discriminator 1
	cmpl	$0, -20(%ebp)
	jne	L3575
L3574:
	.loc 7 3907 7
	cmpl	$0, -12(%ebp)
	je	L3576
	.loc 7 3907 28 discriminator 1
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
L3576:
	.loc 7 3908 7
	cmpl	$0, -20(%ebp)
	je	L3577
	.loc 7 3908 28 discriminator 1
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
L3577:
	.loc 7 3909 14
	movl	$0, %eax
	jmp	L3578
L3575:
	.loc 7 3912 32
	movl	32(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 3913 15
	movl	8(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 8(%eax)
	.loc 7 3914 16
	movl	8(%ebp), %eax
	movl	20(%ebp), %edx
	movl	%edx, 12(%eax)
	.loc 7 3915 16
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 36(%eax)
	.loc 7 3916 19
	movl	8(%ebp), %eax
	movl	-12(%ebp), %edx
	movl	%edx, 4(%eax)
	.loc 7 3917 15
	movl	8(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%edx, 40(%eax)
	.loc 7 3918 17
	movl	8(%ebp), %eax
	movl	28(%ebp), %edx
	movl	%edx, 20(%eax)
	.loc 7 3919 48
	cmpl	$0, 24(%ebp)
	je	L3579
	.loc 7 3919 48 is_stmt 0 discriminator 1
	movl	24(%ebp), %eax
	jmp	L3580
L3579:
	.loc 7 3919 48 discriminator 2
	movl	16(%ebp), %eax
L3580:
	.loc 7 3919 25 is_stmt 1 discriminator 4
	movl	8(%ebp), %edx
	movl	%eax, 16(%edx)
	.loc 7 3920 22 discriminator 4
	movl	8(%ebp), %eax
	movl	$1, 28(%eax)
	.loc 7 3921 22 discriminator 4
	movl	8(%ebp), %eax
	movl	$1, 32(%eax)
	.loc 7 3922 22 discriminator 4
	movl	8(%ebp), %eax
	movl	$0, 24(%eax)
	.loc 7 3924 21 discriminator 4
	movl	20(%ebp), %eax
	subl	28(%ebp), %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	subl	28(%ebp), %eax
	movl	-16(%ebp), %ecx
	movl	%ecx, 16(%esp)
	movl	-20(%ebp), %ecx
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbrp_init_targetP13stbrp_contextiiP10stbrp_nodei
	.loc 7 3926 4 discriminator 4
	cmpl	$0, 12(%ebp)
	je	L3581
	.loc 7 3927 33
	movl	16(%ebp), %eax
	imull	20(%ebp), %eax
	.loc 7 3927 19
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
L3581:
	.loc 7 3930 11
	movl	$1, %eax
L3578:
	.loc 7 3931 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2086:
	.globl	_stbtt_PackEnd
	.def	_stbtt_PackEnd;	.scl	2;	.type	32;	.endef
_stbtt_PackEnd:
LFB2087:
	.loc 7 3934 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 3935 4
	movl	8(%ebp), %eax
	movl	40(%eax), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 3936 4
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 3937 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2087:
	.section .rdata,"dr"
LC205:
	.ascii "h_oversample <= 8\0"
LC206:
	.ascii "v_oversample <= 8\0"
	.text
	.globl	_stbtt_PackSetOversampling
	.def	_stbtt_PackSetOversampling;	.scl	2;	.type	32;	.endef
_stbtt_PackSetOversampling:
LFB2088:
	.loc 7 3940 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 3941 4
	cmpl	$8, 12(%ebp)
	jbe	L3586
	.loc 7 3941 4 is_stmt 0 discriminator 2
	movl	$3941, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC205, (%esp)
	call	__assert
L3586:
	.loc 7 3942 4 is_stmt 1
	cmpl	$8, 16(%ebp)
	jbe	L3589
	.loc 7 3942 4 is_stmt 0 discriminator 2
	movl	$3942, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC206, (%esp)
	call	__assert
L3589:
	.loc 7 3943 4 is_stmt 1
	cmpl	$8, 12(%ebp)
	ja	L3590
	.loc 7 3944 25
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 28(%eax)
L3590:
	.loc 7 3945 4
	cmpl	$8, 16(%ebp)
	ja	L3592
	.loc 7 3946 25
	movl	8(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 32(%eax)
L3592:
	.loc 7 3947 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2088:
	.globl	_stbtt_PackSetSkipMissingCodepoints
	.def	_stbtt_PackSetSkipMissingCodepoints;	.scl	2;	.type	32;	.endef
_stbtt_PackSetSkipMissingCodepoints:
LFB2089:
	.loc 7 3950 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 7 3951 22
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 24(%eax)
	.loc 7 3952 1
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2089:
	.section .rdata,"dr"
LC207:
	.ascii "pixels[i] == 0\0"
	.text
	.def	__ZL18stbtt__h_prefilterPhiiij;	.scl	3;	.type	32;	.endef
__ZL18stbtt__h_prefilterPhiiij:
LFB2090:
	.loc 7 3957 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 3959 19
	movl	12(%ebp), %eax
	subl	24(%ebp), %eax
	.loc 7 3959 8
	movl	%eax, -24(%ebp)
	.loc 7 3961 16
	movl	$8, 8(%esp)
	movl	$0, 4(%esp)
	leal	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
LBB655:
	.loc 7 3962 10
	movl	$0, -12(%ebp)
L3618:
	.loc 7 3962 16 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L3619
LBB656:
	.loc 7 3965 19
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	leal	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 7 3967 13
	movl	$0, -20(%ebp)
	cmpl	$3, 24(%ebp)
	je	L3596
	cmpl	$3, 24(%ebp)
	ja	L3597
	cmpl	$2, 24(%ebp)
	je	L3598
	jmp	L3599
L3597:
	cmpl	$4, 24(%ebp)
	je	L3600
	cmpl	$5, 24(%ebp)
	je	L3601
	jmp	L3599
L3598:
	.loc 7 3972 19
	movl	$0, -16(%ebp)
L3603:
	.loc 7 3972 25 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jg	L3620
	.loc 7 3973 33 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 7 3973 46 discriminator 2
	movl	-16(%ebp), %eax
	andl	$7, %eax
	.loc 7 3973 64 discriminator 2
	movzbl	-32(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 7 3973 35 discriminator 2
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 3973 22 discriminator 2
	addl	%eax, -20(%ebp)
	.loc 7 3974 70 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3974 25 discriminator 2
	movl	-16(%ebp), %ecx
	movl	24(%ebp), %edx
	addl	%ecx, %edx
	.loc 7 3974 40 discriminator 2
	andl	$7, %edx
	.loc 7 3974 70 discriminator 2
	movzbl	(%eax), %eax
	.loc 7 3974 60 discriminator 2
	movb	%al, -32(%ebp,%edx)
	.loc 7 3975 51 discriminator 2
	movl	-20(%ebp), %eax
	shrl	%eax
	movl	%eax, %ecx
	.loc 7 3975 24 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3975 26 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 7 3972 13 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3603
L3596:
	.loc 7 3979 19
	movl	$0, -16(%ebp)
L3606:
	.loc 7 3979 25 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jg	L3621
	.loc 7 3980 33 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 7 3980 46 discriminator 2
	movl	-16(%ebp), %eax
	andl	$7, %eax
	.loc 7 3980 64 discriminator 2
	movzbl	-32(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 7 3980 35 discriminator 2
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 3980 22 discriminator 2
	addl	%eax, -20(%ebp)
	.loc 7 3981 70 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3981 25 discriminator 2
	movl	-16(%ebp), %ecx
	movl	24(%ebp), %edx
	addl	%ecx, %edx
	.loc 7 3981 40 discriminator 2
	andl	$7, %edx
	.loc 7 3981 70 discriminator 2
	movzbl	(%eax), %eax
	.loc 7 3981 60 discriminator 2
	movb	%al, -32(%ebp,%edx)
	.loc 7 3982 51 discriminator 2
	movl	-20(%ebp), %eax
	movl	$-1431655765, %edx
	mull	%edx
	movl	%edx, %ecx
	shrl	%ecx
	.loc 7 3982 24 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3982 26 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 7 3979 13 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3606
L3600:
	.loc 7 3986 19
	movl	$0, -16(%ebp)
L3608:
	.loc 7 3986 25 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jg	L3622
	.loc 7 3987 33 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 7 3987 46 discriminator 2
	movl	-16(%ebp), %eax
	andl	$7, %eax
	.loc 7 3987 64 discriminator 2
	movzbl	-32(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 7 3987 35 discriminator 2
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 3987 22 discriminator 2
	addl	%eax, -20(%ebp)
	.loc 7 3988 70 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3988 25 discriminator 2
	movl	-16(%ebp), %ecx
	movl	24(%ebp), %edx
	addl	%ecx, %edx
	.loc 7 3988 40 discriminator 2
	andl	$7, %edx
	.loc 7 3988 70 discriminator 2
	movzbl	(%eax), %eax
	.loc 7 3988 60 discriminator 2
	movb	%al, -32(%ebp,%edx)
	.loc 7 3989 51 discriminator 2
	movl	-20(%ebp), %eax
	shrl	$2, %eax
	movl	%eax, %ecx
	.loc 7 3989 24 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3989 26 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 7 3986 13 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3608
L3601:
	.loc 7 3993 19
	movl	$0, -16(%ebp)
L3610:
	.loc 7 3993 25 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jg	L3623
	.loc 7 3994 33 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 7 3994 46 discriminator 2
	movl	-16(%ebp), %eax
	andl	$7, %eax
	.loc 7 3994 64 discriminator 2
	movzbl	-32(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 7 3994 35 discriminator 2
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 3994 22 discriminator 2
	addl	%eax, -20(%ebp)
	.loc 7 3995 70 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3995 25 discriminator 2
	movl	-16(%ebp), %ecx
	movl	24(%ebp), %edx
	addl	%ecx, %edx
	.loc 7 3995 40 discriminator 2
	andl	$7, %edx
	.loc 7 3995 70 discriminator 2
	movzbl	(%eax), %eax
	.loc 7 3995 60 discriminator 2
	movb	%al, -32(%ebp,%edx)
	.loc 7 3996 51 discriminator 2
	movl	-20(%ebp), %eax
	movl	$-858993459, %edx
	mull	%edx
	movl	%edx, %ecx
	shrl	$2, %ecx
	.loc 7 3996 24 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 3996 26 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 7 3993 13 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3610
L3599:
	.loc 7 4000 19
	movl	$0, -16(%ebp)
L3612:
	.loc 7 4000 25 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jg	L3624
	.loc 7 4001 33 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 7 4001 46 discriminator 2
	movl	-16(%ebp), %eax
	andl	$7, %eax
	.loc 7 4001 64 discriminator 2
	movzbl	-32(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 7 4001 35 discriminator 2
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 4001 22 discriminator 2
	addl	%eax, -20(%ebp)
	.loc 7 4002 70 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4002 25 discriminator 2
	movl	-16(%ebp), %ecx
	movl	24(%ebp), %edx
	addl	%ecx, %edx
	.loc 7 4002 40 discriminator 2
	andl	$7, %edx
	.loc 7 4002 70 discriminator 2
	movzbl	(%eax), %eax
	.loc 7 4002 60 discriminator 2
	movb	%al, -32(%ebp,%edx)
	.loc 7 4003 51 discriminator 2
	movl	-20(%ebp), %eax
	movl	$0, %edx
	divl	24(%ebp)
	movl	%eax, %ecx
	.loc 7 4003 24 discriminator 2
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4003 26 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 7 4000 13 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3612
L3620:
	.loc 7 3977 13
	nop
	jmp	L3617
L3621:
	.loc 7 3984 13
	nop
	jmp	L3617
L3622:
	.loc 7 3991 13
	nop
	jmp	L3617
L3623:
	.loc 7 3998 13
	nop
	jmp	L3617
L3624:
	.loc 7 4005 13
	nop
L3617:
	.loc 7 4008 16 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L3613
	.loc 7 4009 10
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	je	L3616
	.loc 7 4009 10 is_stmt 0 discriminator 2
	movl	$4009, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC207, (%esp)
	call	__assert
L3616:
	.loc 7 4010 28 is_stmt 1
	movl	-16(%ebp), %eax
	andl	$7, %eax
	.loc 7 4010 46
	movzbl	-32(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 7 4010 16
	subl	%eax, -20(%ebp)
	.loc 7 4011 45
	movl	-20(%ebp), %eax
	movl	$0, %edx
	divl	24(%ebp)
	movl	%eax, %ecx
	.loc 7 4011 18
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4011 20
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 7 4008 7
	addl	$1, -16(%ebp)
	jmp	L3617
L3613:
	.loc 7 4014 14 discriminator 2
	movl	20(%ebp), %eax
	addl	%eax, 8(%ebp)
LBE656:
	.loc 7 3962 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L3618
L3619:
LBE655:
	.loc 7 4016 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2090:
	.section .rdata,"dr"
	.align 4
LC208:
	.ascii "pixels[i*stride_in_bytes] == 0\0"
	.text
	.def	__ZL18stbtt__v_prefilterPhiiij;	.scl	3;	.type	32;	.endef
__ZL18stbtt__v_prefilterPhiiij:
LFB2091:
	.loc 7 4019 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 4021 19
	movl	16(%ebp), %eax
	subl	24(%ebp), %eax
	.loc 7 4021 8
	movl	%eax, -24(%ebp)
	.loc 7 4023 16
	movl	$8, 8(%esp)
	movl	$0, 4(%esp)
	leal	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
LBB657:
	.loc 7 4024 10
	movl	$0, -12(%ebp)
L3649:
	.loc 7 4024 16 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L3650
LBB658:
	.loc 7 4027 19
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	leal	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 7 4029 13
	movl	$0, -20(%ebp)
	cmpl	$3, 24(%ebp)
	je	L3627
	cmpl	$3, 24(%ebp)
	ja	L3628
	cmpl	$2, 24(%ebp)
	je	L3629
	jmp	L3630
L3628:
	cmpl	$4, 24(%ebp)
	je	L3631
	cmpl	$5, 24(%ebp)
	je	L3632
	jmp	L3630
L3629:
	.loc 7 4034 19
	movl	$0, -16(%ebp)
L3634:
	.loc 7 4034 25 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jg	L3651
	.loc 7 4035 33 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 7 4035 49 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 7 4035 62 discriminator 2
	movl	-16(%ebp), %eax
	andl	$7, %eax
	.loc 7 4035 80 discriminator 2
	movzbl	-32(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 7 4035 51 discriminator 2
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 4035 22 discriminator 2
	addl	%eax, -20(%ebp)
	.loc 7 4036 70 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 7 4036 86 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4036 25 discriminator 2
	movl	-16(%ebp), %ecx
	movl	24(%ebp), %edx
	addl	%ecx, %edx
	.loc 7 4036 40 discriminator 2
	andl	$7, %edx
	.loc 7 4036 86 discriminator 2
	movzbl	(%eax), %eax
	.loc 7 4036 60 discriminator 2
	movb	%al, -32(%ebp,%edx)
	.loc 7 4037 67 discriminator 2
	movl	-20(%ebp), %eax
	shrl	%eax
	movl	%eax, %edx
	.loc 7 4037 24 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %ecx
	.loc 7 4037 40 discriminator 2
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	.loc 7 4037 42 discriminator 2
	movb	%dl, (%eax)
	.loc 7 4034 13 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3634
L3627:
	.loc 7 4041 19
	movl	$0, -16(%ebp)
L3637:
	.loc 7 4041 25 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jg	L3652
	.loc 7 4042 33 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 7 4042 49 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 7 4042 62 discriminator 2
	movl	-16(%ebp), %eax
	andl	$7, %eax
	.loc 7 4042 80 discriminator 2
	movzbl	-32(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 7 4042 51 discriminator 2
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 4042 22 discriminator 2
	addl	%eax, -20(%ebp)
	.loc 7 4043 70 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 7 4043 86 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4043 25 discriminator 2
	movl	-16(%ebp), %ecx
	movl	24(%ebp), %edx
	addl	%ecx, %edx
	.loc 7 4043 40 discriminator 2
	andl	$7, %edx
	.loc 7 4043 86 discriminator 2
	movzbl	(%eax), %eax
	.loc 7 4043 60 discriminator 2
	movb	%al, -32(%ebp,%edx)
	.loc 7 4044 67 discriminator 2
	movl	-20(%ebp), %eax
	movl	$-1431655765, %edx
	mull	%edx
	shrl	%edx
	.loc 7 4044 24 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %ecx
	.loc 7 4044 40 discriminator 2
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	.loc 7 4044 42 discriminator 2
	movb	%dl, (%eax)
	.loc 7 4041 13 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3637
L3631:
	.loc 7 4048 19
	movl	$0, -16(%ebp)
L3639:
	.loc 7 4048 25 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jg	L3653
	.loc 7 4049 33 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 7 4049 49 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 7 4049 62 discriminator 2
	movl	-16(%ebp), %eax
	andl	$7, %eax
	.loc 7 4049 80 discriminator 2
	movzbl	-32(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 7 4049 51 discriminator 2
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 4049 22 discriminator 2
	addl	%eax, -20(%ebp)
	.loc 7 4050 70 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 7 4050 86 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4050 25 discriminator 2
	movl	-16(%ebp), %ecx
	movl	24(%ebp), %edx
	addl	%ecx, %edx
	.loc 7 4050 40 discriminator 2
	andl	$7, %edx
	.loc 7 4050 86 discriminator 2
	movzbl	(%eax), %eax
	.loc 7 4050 60 discriminator 2
	movb	%al, -32(%ebp,%edx)
	.loc 7 4051 67 discriminator 2
	movl	-20(%ebp), %eax
	shrl	$2, %eax
	movl	%eax, %edx
	.loc 7 4051 24 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %ecx
	.loc 7 4051 40 discriminator 2
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	.loc 7 4051 42 discriminator 2
	movb	%dl, (%eax)
	.loc 7 4048 13 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3639
L3632:
	.loc 7 4055 19
	movl	$0, -16(%ebp)
L3641:
	.loc 7 4055 25 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jg	L3654
	.loc 7 4056 33 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 7 4056 49 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 7 4056 62 discriminator 2
	movl	-16(%ebp), %eax
	andl	$7, %eax
	.loc 7 4056 80 discriminator 2
	movzbl	-32(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 7 4056 51 discriminator 2
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 4056 22 discriminator 2
	addl	%eax, -20(%ebp)
	.loc 7 4057 70 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 7 4057 86 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4057 25 discriminator 2
	movl	-16(%ebp), %ecx
	movl	24(%ebp), %edx
	addl	%ecx, %edx
	.loc 7 4057 40 discriminator 2
	andl	$7, %edx
	.loc 7 4057 86 discriminator 2
	movzbl	(%eax), %eax
	.loc 7 4057 60 discriminator 2
	movb	%al, -32(%ebp,%edx)
	.loc 7 4058 67 discriminator 2
	movl	-20(%ebp), %eax
	movl	$-858993459, %edx
	mull	%edx
	shrl	$2, %edx
	.loc 7 4058 24 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %ecx
	.loc 7 4058 40 discriminator 2
	movl	8(%ebp), %eax
	addl	%ecx, %eax
	.loc 7 4058 42 discriminator 2
	movb	%dl, (%eax)
	.loc 7 4055 13 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3641
L3630:
	.loc 7 4062 19
	movl	$0, -16(%ebp)
L3643:
	.loc 7 4062 25 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jg	L3655
	.loc 7 4063 33 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 7 4063 49 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 7 4063 62 discriminator 2
	movl	-16(%ebp), %eax
	andl	$7, %eax
	.loc 7 4063 80 discriminator 2
	movzbl	-32(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 7 4063 51 discriminator 2
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 4063 22 discriminator 2
	addl	%eax, -20(%ebp)
	.loc 7 4064 70 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 7 4064 86 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4064 25 discriminator 2
	movl	-16(%ebp), %ecx
	movl	24(%ebp), %edx
	addl	%ecx, %edx
	.loc 7 4064 40 discriminator 2
	andl	$7, %edx
	.loc 7 4064 86 discriminator 2
	movzbl	(%eax), %eax
	.loc 7 4064 60 discriminator 2
	movb	%al, -32(%ebp,%edx)
	.loc 7 4065 67 discriminator 2
	movl	-20(%ebp), %eax
	movl	$0, %edx
	divl	24(%ebp)
	movl	%eax, %ecx
	.loc 7 4065 24 discriminator 2
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 7 4065 40 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4065 42 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 7 4062 13 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3643
L3651:
	.loc 7 4039 13
	nop
	jmp	L3648
L3652:
	.loc 7 4046 13
	nop
	jmp	L3648
L3653:
	.loc 7 4053 13
	nop
	jmp	L3648
L3654:
	.loc 7 4060 13
	nop
	jmp	L3648
L3655:
	.loc 7 4067 13
	nop
L3648:
	.loc 7 4070 16 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L3644
	.loc 7 4071 10
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	je	L3647
	.loc 7 4071 10 is_stmt 0 discriminator 2
	movl	$4071, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC208, (%esp)
	call	__assert
L3647:
	.loc 7 4072 28 is_stmt 1
	movl	-16(%ebp), %eax
	andl	$7, %eax
	.loc 7 4072 46
	movzbl	-32(%ebp,%eax), %eax
	movzbl	%al, %eax
	.loc 7 4072 16
	subl	%eax, -20(%ebp)
	.loc 7 4073 61
	movl	-20(%ebp), %eax
	movl	$0, %edx
	divl	24(%ebp)
	movl	%eax, %ecx
	.loc 7 4073 18
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 7 4073 34
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4073 36
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 7 4070 7
	addl	$1, -16(%ebp)
	jmp	L3648
L3644:
	.loc 7 4076 14 discriminator 2
	addl	$1, 8(%ebp)
LBE658:
	.loc 7 4024 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L3649
L3650:
LBE657:
	.loc 7 4078 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2091:
	.def	__ZL23stbtt__oversample_shifti;	.scl	3;	.type	32;	.endef
__ZL23stbtt__oversample_shifti:
LFB2092:
	.loc 7 4081 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$4, %esp
	.loc 7 4082 4
	cmpl	$0, 8(%ebp)
	jne	L3657
	.loc 7 4083 14
	fldz
	jmp	L3658
L3657:
	.loc 7 4089 18
	movl	$1, %eax
	subl	8(%ebp), %eax
	.loc 7 4089 11
	movl	%eax, -4(%ebp)
	fildl	-4(%ebp)
	.loc 7 4089 46
	fildl	8(%ebp)
	.loc 7 4089 44
	fadd	%st(0), %st
	.loc 7 4089 63
	fdivrp	%st, %st(1)
L3658:
	.loc 7 4090 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2092:
	.globl	_stbtt_PackFontRangesGatherRects
	.def	_stbtt_PackFontRangesGatherRects;	.scl	2;	.type	32;	.endef
_stbtt_PackFontRangesGatherRects:
LFB2093:
	.loc 7 4094 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$120, %esp
	.loc 7 4096 8
	movl	$0, -24(%ebp)
	.loc 7 4098 5
	movl	$0, -20(%ebp)
LBB659:
	.loc 7 4099 10
	movl	$0, -12(%ebp)
L3671:
	.loc 7 4099 16 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	20(%ebp), %eax
	jge	L3660
LBB660:
	.loc 7 4100 26
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4100 13
	flds	(%eax)
	fstps	-28(%ebp)
	.loc 7 4101 28
	fldz
	flds	-28(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3674
	.loc 7 4101 55 discriminator 1
	flds	-28(%ebp)
	fstps	4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_ScaleForPixelHeight
	jmp	L3663
L3674:
	.loc 7 4101 99 discriminator 2
	flds	-28(%ebp)
	fchs
	fstps	4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_ScaleForMappingEmToPixels
L3663:
	.loc 7 4101 109 discriminator 4
	fstps	-32(%ebp)
	.loc 7 4102 53 discriminator 4
	movl	8(%ebp), %eax
	movl	28(%eax), %ecx
	.loc 7 4102 15 discriminator 4
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4102 30 discriminator 4
	movl	%ecx, %edx
	movb	%dl, 20(%eax)
	.loc 7 4103 53 discriminator 4
	movl	8(%ebp), %eax
	movl	32(%eax), %ecx
	.loc 7 4103 15 discriminator 4
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4103 30 discriminator 4
	movl	%ecx, %edx
	movb	%dl, 21(%eax)
LBB661:
	.loc 7 4104 13 discriminator 4
	movl	$0, -16(%ebp)
L3670:
	.loc 7 4104 29 discriminator 1
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4104 31 discriminator 1
	movl	12(%eax), %eax
	.loc 7 4104 19 discriminator 1
	cmpl	%eax, -16(%ebp)
	jge	L3664
LBB662:
	.loc 7 4106 34
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4106 36
	movl	8(%eax), %eax
	.loc 7 4106 72
	testl	%eax, %eax
	jne	L3665
	.loc 7 4106 82 discriminator 1
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4106 84 discriminator 1
	movl	4(%eax), %edx
	.loc 7 4106 72 discriminator 1
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	jmp	L3666
L3665:
	.loc 7 4106 131 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4106 133 discriminator 2
	movl	8(%eax), %eax
	.loc 7 4106 162 discriminator 2
	movl	-16(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	.loc 7 4106 72 discriminator 2
	movl	(%eax), %eax
L3666:
	.loc 7 4106 14 discriminator 4
	movl	%eax, -36(%ebp)
	.loc 7 4107 42 discriminator 4
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%eax, -40(%ebp)
	.loc 7 4108 10 discriminator 4
	cmpl	$0, -40(%ebp)
	jne	L3667
	.loc 7 4108 34 discriminator 1
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	.loc 7 4108 25 discriminator 1
	testl	%eax, %eax
	jne	L3668
	.loc 7 4108 47 discriminator 2
	cmpl	$0, -24(%ebp)
	je	L3667
L3668:
	.loc 7 4109 33
	movl	-20(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	24(%ebp), %eax
	addl	%eax, %edx
	.loc 7 4109 37
	movl	$0, 16(%edx)
	.loc 7 4109 20
	movl	-20(%ebp), %ecx
	movl	%ecx, %eax
	addl	%eax, %eax
	addl	%ecx, %eax
	sall	$3, %eax
	movl	%eax, %ecx
	movl	24(%ebp), %eax
	addl	%eax, %ecx
	.loc 7 4109 35
	movl	16(%edx), %eax
	.loc 7 4109 24
	movl	%eax, 12(%ecx)
	jmp	L3669
L3667:
	.loc 7 4113 58
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 7 4111 44
	movl	%eax, -72(%ebp)
	movl	$0, -68(%ebp)
	fildq	-72(%ebp)
	fstps	-60(%ebp)
	flds	-60(%ebp)
	fmuls	-32(%ebp)
	.loc 7 4112 58
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 4111 44
	movl	%eax, -72(%ebp)
	movl	$0, -68(%ebp)
	fildq	-72(%ebp)
	fstps	-60(%ebp)
	flds	-60(%ebp)
	fmuls	-32(%ebp)
	leal	-56(%ebp), %eax
	movl	%eax, 36(%esp)
	leal	-52(%ebp), %eax
	movl	%eax, 32(%esp)
	leal	-48(%ebp), %eax
	movl	%eax, 28(%esp)
	leal	-44(%ebp), %eax
	movl	%eax, 24(%esp)
	fldz
	fstps	20(%esp)
	fldz
	fstps	16(%esp)
	fxch	%st(1)
	fstps	12(%esp)
	fstps	8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphBitmapBoxSubpixel
	.loc 7 4116 43
	movl	-52(%ebp), %edx
	movl	-44(%ebp), %eax
	subl	%eax, %edx
	.loc 7 4116 54
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	.loc 7 4116 47
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 7 4116 69
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 4116 62
	addl	%edx, %eax
	.loc 7 4116 81
	leal	-1(%eax), %ecx
	.loc 7 4116 20
	movl	-20(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4116 26
	movl	%ecx, %edx
	.loc 7 4116 24
	movl	%edx, 12(%eax)
	.loc 7 4117 43
	movl	-56(%ebp), %edx
	movl	-48(%ebp), %eax
	subl	%eax, %edx
	.loc 7 4117 54
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	.loc 7 4117 47
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 7 4117 69
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 7 4117 62
	addl	%edx, %eax
	.loc 7 4117 81
	leal	-1(%eax), %ecx
	.loc 7 4117 20
	movl	-20(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4117 26
	movl	%ecx, %edx
	.loc 7 4117 24
	movl	%edx, 16(%eax)
	.loc 7 4118 13
	cmpl	$0, -40(%ebp)
	jne	L3669
	.loc 7 4119 36
	movl	$1, -24(%ebp)
L3669:
	.loc 7 4121 10 discriminator 2
	addl	$1, -20(%ebp)
LBE662:
	.loc 7 4104 7 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3670
L3664:
LBE661:
LBE660:
	.loc 7 4099 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L3671
L3660:
LBE659:
	.loc 7 4125 11
	movl	-20(%ebp), %eax
	.loc 7 4126 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2093:
	.globl	_stbtt_MakeGlyphBitmapSubpixelPrefilter
	.def	_stbtt_MakeGlyphBitmapSubpixelPrefilter;	.scl	2;	.type	32;	.endef
_stbtt_MakeGlyphBitmapSubpixelPrefilter:
LFB2094:
	.loc 7 4129 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 4133 55
	movl	48(%ebp), %eax
	leal	-1(%eax), %edx
	.loc 7 4130 33
	movl	20(%ebp), %eax
	subl	%edx, %eax
	movl	%eax, %ecx
	.loc 7 4132 55
	movl	44(%ebp), %eax
	leal	-1(%eax), %edx
	.loc 7 4130 33
	movl	16(%ebp), %eax
	subl	%edx, %eax
	movl	%eax, %edx
	movl	60(%ebp), %eax
	movl	%eax, 36(%esp)
	flds	40(%ebp)
	fstps	32(%esp)
	flds	36(%ebp)
	fstps	28(%esp)
	flds	32(%ebp)
	fstps	24(%esp)
	flds	28(%ebp)
	fstps	20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_MakeGlyphBitmapSubpixel
	.loc 7 4141 4
	cmpl	$1, 44(%ebp)
	jle	L3676
	.loc 7 4142 25
	movl	44(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbtt__h_prefilterPhiiij
L3676:
	.loc 7 4144 4
	cmpl	$1, 48(%ebp)
	jle	L3677
	.loc 7 4145 25
	movl	48(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL18stbtt__v_prefilterPhiiij
L3677:
	.loc 7 4147 36
	movl	44(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__oversample_shifti
	.loc 7 4147 11
	movl	52(%ebp), %eax
	fstps	(%eax)
	.loc 7 4148 36
	movl	48(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt__oversample_shifti
	.loc 7 4148 11
	movl	56(%ebp), %eax
	fstps	(%eax)
	.loc 7 4149 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2094:
	.globl	_stbtt_PackFontRangesRenderIntoRects
	.def	_stbtt_PackFontRangesRenderIntoRects;	.scl	2;	.type	32;	.endef
_stbtt_PackFontRangesRenderIntoRects:
LFB2095:
	.loc 7 4153 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$172, %esp
	.cfi_offset 7, -12
	.cfi_offset 6, -16
	.cfi_offset 3, -20
	.loc 7 4154 15
	movl	$-1, -40(%ebp)
	.loc 7 4154 35
	movl	$1, -44(%ebp)
	.loc 7 4157 26
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 4157 8
	movl	%eax, -48(%ebp)
	.loc 7 4158 26
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 7 4158 8
	movl	%eax, -52(%ebp)
	.loc 7 4160 6
	movl	$0, -36(%ebp)
LBB663:
	.loc 7 4161 10
	movl	$0, -28(%ebp)
L3694:
	.loc 7 4161 16 discriminator 1
	movl	-28(%ebp), %eax
	cmpl	20(%ebp), %eax
	jge	L3679
LBB664:
	.loc 7 4162 26
	movl	-28(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4162 13
	flds	(%eax)
	fstps	-56(%ebp)
	.loc 7 4163 28
	fldz
	flds	-56(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3697
	.loc 7 4163 55 discriminator 1
	flds	-56(%ebp)
	fstps	4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_ScaleForPixelHeight
	jmp	L3682
L3697:
	.loc 7 4163 99 discriminator 2
	flds	-56(%ebp)
	fchs
	fstps	4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_ScaleForMappingEmToPixels
L3682:
	.loc 7 4163 109 discriminator 4
	fstps	-60(%ebp)
	.loc 7 4165 35 discriminator 4
	movl	-28(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4165 37 discriminator 4
	movzbl	20(%eax), %eax
	movzbl	%al, %edx
	.loc 7 4165 25 discriminator 4
	movl	8(%ebp), %eax
	movl	%edx, 28(%eax)
	.loc 7 4166 35 discriminator 4
	movl	-28(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4166 37 discriminator 4
	movzbl	21(%eax), %eax
	movzbl	%al, %edx
	.loc 7 4166 25 discriminator 4
	movl	8(%ebp), %eax
	movl	%edx, 32(%eax)
	.loc 7 4167 29 discriminator 4
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 4167 22 discriminator 4
	movl	%eax, -136(%ebp)
	movl	$0, -132(%ebp)
	fildq	-136(%ebp)
	fstps	-124(%ebp)
	flds	-124(%ebp)
	.loc 7 4167 15 discriminator 4
	fld1
	fdivp	%st, %st(1)
	fstps	-64(%ebp)
	.loc 7 4168 29 discriminator 4
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 7 4168 22 discriminator 4
	movl	%eax, -136(%ebp)
	movl	$0, -132(%ebp)
	fildq	-136(%ebp)
	fstps	-124(%ebp)
	flds	-124(%ebp)
	.loc 7 4168 15 discriminator 4
	fld1
	fdivp	%st, %st(1)
	fstps	-68(%ebp)
	.loc 7 4169 44 discriminator 4
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 4169 38 discriminator 4
	movl	%eax, (%esp)
	call	__ZL23stbtt__oversample_shifti
	fstps	-72(%ebp)
	.loc 7 4170 44 discriminator 4
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 7 4170 38 discriminator 4
	movl	%eax, (%esp)
	call	__ZL23stbtt__oversample_shifti
	fstps	-76(%ebp)
LBB665:
	.loc 7 4171 13 discriminator 4
	movl	$0, -32(%ebp)
L3693:
	.loc 7 4171 29 discriminator 1
	movl	-28(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4171 31 discriminator 1
	movl	12(%eax), %eax
	.loc 7 4171 19 discriminator 1
	cmpl	%eax, -32(%ebp)
	jge	L3683
LBB666:
	.loc 7 4172 34
	movl	-36(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	.loc 7 4172 22
	movl	24(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -80(%ebp)
LBB667:
	.loc 7 4173 17
	movl	-80(%ebp), %eax
	movl	20(%eax), %eax
	.loc 7 4173 10
	testl	%eax, %eax
	je	L3684
	.loc 7 4173 34 discriminator 1
	movl	-80(%ebp), %eax
	movl	12(%eax), %eax
	.loc 7 4173 28 discriminator 1
	testl	%eax, %eax
	je	L3684
	.loc 7 4173 47 discriminator 2
	movl	-80(%ebp), %eax
	movl	16(%eax), %eax
	.loc 7 4173 41 discriminator 2
	testl	%eax, %eax
	je	L3684
LBB668:
	.loc 7 4174 45
	movl	-28(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4174 47
	movl	16(%eax), %edx
	.loc 7 4174 67
	movl	-32(%ebp), %eax
	imull	$28, %eax, %eax
	.loc 7 4174 31
	addl	%edx, %eax
	movl	%eax, -84(%ebp)
	.loc 7 4176 37
	movl	-28(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4176 39
	movl	8(%eax), %eax
	.loc 7 4176 75
	testl	%eax, %eax
	jne	L3685
	.loc 7 4176 85 discriminator 1
	movl	-28(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4176 87 discriminator 1
	movl	4(%eax), %edx
	.loc 7 4176 75 discriminator 1
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	jmp	L3686
L3685:
	.loc 7 4176 134 discriminator 2
	movl	-28(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4176 136 discriminator 2
	movl	8(%eax), %eax
	.loc 7 4176 165 discriminator 2
	movl	-32(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	.loc 7 4176 75 discriminator 2
	movl	(%eax), %eax
L3686:
	.loc 7 4176 17 discriminator 4
	movl	%eax, -88(%ebp)
	.loc 7 4177 45 discriminator 4
	movl	-88(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%eax, -92(%ebp)
	.loc 7 4178 25 discriminator 4
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -96(%ebp)
	.loc 7 4181 18 discriminator 4
	movl	-80(%ebp), %eax
	movl	(%eax), %edx
	movl	-96(%ebp), %eax
	addl	%eax, %edx
	movl	-80(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 4182 18 discriminator 4
	movl	-80(%ebp), %eax
	movl	4(%eax), %edx
	movl	-96(%ebp), %eax
	addl	%eax, %edx
	movl	-80(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 7 4183 18 discriminator 4
	movl	-80(%ebp), %eax
	movl	12(%eax), %eax
	subl	-96(%ebp), %eax
	movl	%eax, %edx
	movl	-80(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 7 4184 18 discriminator 4
	movl	-80(%ebp), %eax
	movl	16(%eax), %eax
	subl	-96(%ebp), %eax
	movl	%eax, %edx
	movl	-80(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 7 4185 35 discriminator 4
	leal	-104(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-100(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphHMetrics
	.loc 7 4188 50 discriminator 4
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 7 4186 36 discriminator 4
	movl	%eax, -136(%ebp)
	movl	$0, -132(%ebp)
	fildq	-136(%ebp)
	fstps	-124(%ebp)
	flds	-124(%ebp)
	fmuls	-60(%ebp)
	.loc 7 4187 50 discriminator 4
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 4186 36 discriminator 4
	movl	%eax, -136(%ebp)
	movl	$0, -132(%ebp)
	fildq	-136(%ebp)
	fstps	-124(%ebp)
	flds	-124(%ebp)
	fmuls	-60(%ebp)
	fxch	%st(1)
	leal	-120(%ebp), %eax
	movl	%eax, 28(%esp)
	leal	-116(%ebp), %eax
	movl	%eax, 24(%esp)
	leal	-112(%ebp), %eax
	movl	%eax, 20(%esp)
	leal	-108(%ebp), %eax
	movl	%eax, 16(%esp)
	fstps	12(%esp)
	fstps	8(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphBitmapBox
	.loc 7 4196 56 discriminator 4
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 7 4190 42 discriminator 4
	movl	%eax, -136(%ebp)
	movl	$0, -132(%ebp)
	fildq	-136(%ebp)
	fstps	-124(%ebp)
	flds	-124(%ebp)
	fmuls	-60(%ebp)
	.loc 7 4195 56 discriminator 4
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 4190 42 discriminator 4
	movl	%eax, -136(%ebp)
	movl	$0, -132(%ebp)
	fildq	-136(%ebp)
	fstps	-124(%ebp)
	flds	-124(%ebp)
	fmuls	-60(%ebp)
	movl	8(%ebp), %eax
	movl	16(%eax), %ecx
	.loc 7 4193 46 discriminator 4
	movl	-80(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, %edx
	.loc 7 4193 55 discriminator 4
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 7 4193 48 discriminator 4
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 4193 67 discriminator 4
	addl	$1, %eax
	.loc 7 4190 42 discriminator 4
	movl	%eax, %edi
	.loc 7 4192 46 discriminator 4
	movl	-80(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, %edx
	.loc 7 4192 55 discriminator 4
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 4192 48 discriminator 4
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 4192 67 discriminator 4
	addl	$1, %eax
	.loc 7 4190 42 discriminator 4
	movl	%eax, %esi
	.loc 7 4191 48 discriminator 4
	movl	8(%ebp), %eax
	movl	36(%eax), %edx
	.loc 7 4191 60 discriminator 4
	movl	-80(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -136(%ebp)
	.loc 7 4191 67 discriminator 4
	movl	-80(%ebp), %eax
	movl	4(%eax), %ebx
	.loc 7 4191 74 discriminator 4
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 7 4191 68 discriminator 4
	imull	%ebx, %eax
	.loc 7 4191 62 discriminator 4
	addl	-136(%ebp), %eax
	.loc 7 4190 42 discriminator 4
	addl	%eax, %edx
	movl	-92(%ebp), %eax
	movl	%eax, 36(%esp)
	fldz
	fstps	32(%esp)
	fldz
	fstps	28(%esp)
	fxch	%st(1)
	fstps	24(%esp)
	fstps	20(%esp)
	movl	%ecx, 16(%esp)
	movl	%edi, 12(%esp)
	movl	%esi, 8(%esp)
	movl	%edx, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_MakeGlyphBitmapSubpixel
	.loc 7 4200 22 discriminator 4
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	.loc 7 4200 13 discriminator 4
	cmpl	$1, %eax
	jbe	L3687
	.loc 7 4201 34
	movl	8(%ebp), %eax
	movl	28(%eax), %edi
	movl	8(%ebp), %eax
	movl	16(%eax), %esi
	movl	-80(%ebp), %eax
	movl	16(%eax), %ebx
	movl	-80(%ebp), %eax
	movl	12(%eax), %ecx
	.loc 7 4201 40
	movl	8(%ebp), %eax
	movl	36(%eax), %eax
	movl	%eax, -136(%ebp)
	.loc 7 4201 52
	movl	-80(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -128(%ebp)
	.loc 7 4201 59
	movl	-80(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 4201 66
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 7 4201 60
	imull	%edx, %eax
	.loc 7 4201 54
	addl	-128(%ebp), %eax
	.loc 7 4201 34
	addl	-136(%ebp), %eax
	movl	%edi, 16(%esp)
	movl	%esi, 12(%esp)
	movl	%ebx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbtt__h_prefilterPhiiij
L3687:
	.loc 7 4205 22
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	.loc 7 4205 13
	cmpl	$1, %eax
	jbe	L3688
	.loc 7 4206 34
	movl	8(%ebp), %eax
	movl	32(%eax), %edi
	movl	8(%ebp), %eax
	movl	16(%eax), %esi
	movl	-80(%ebp), %eax
	movl	16(%eax), %ebx
	movl	-80(%ebp), %eax
	movl	12(%eax), %ecx
	.loc 7 4206 40
	movl	8(%ebp), %eax
	movl	36(%eax), %eax
	movl	%eax, -136(%ebp)
	.loc 7 4206 52
	movl	-80(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -128(%ebp)
	.loc 7 4206 59
	movl	-80(%ebp), %eax
	movl	4(%eax), %edx
	.loc 7 4206 66
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	.loc 7 4206 60
	imull	%edx, %eax
	.loc 7 4206 54
	addl	-128(%ebp), %eax
	.loc 7 4206 34
	addl	-136(%ebp), %eax
	movl	%edi, 16(%esp)
	movl	%esi, 12(%esp)
	movl	%ebx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL18stbtt__v_prefilterPhiiij
L3688:
	.loc 7 4210 46
	movl	-80(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 4210 28
	movl	%eax, %edx
	.loc 7 4210 26
	movl	-84(%ebp), %eax
	movw	%dx, (%eax)
	.loc 7 4211 46
	movl	-80(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 4211 28
	movl	%eax, %edx
	.loc 7 4211 26
	movl	-84(%ebp), %eax
	movw	%dx, 2(%eax)
	.loc 7 4212 46
	movl	-80(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 4212 28
	movl	%eax, %edx
	.loc 7 4212 53
	movl	-80(%ebp), %eax
	movl	12(%eax), %eax
	.loc 7 4212 48
	addl	%eax, %edx
	.loc 7 4212 26
	movl	-84(%ebp), %eax
	movw	%dx, 4(%eax)
	.loc 7 4213 46
	movl	-80(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 4213 28
	movl	%eax, %edx
	.loc 7 4213 53
	movl	-80(%ebp), %eax
	movl	16(%eax), %eax
	.loc 7 4213 48
	addl	%eax, %edx
	.loc 7 4213 26
	movl	-84(%ebp), %eax
	movw	%dx, 6(%eax)
	.loc 7 4214 49
	movl	-100(%ebp), %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	fmuls	-60(%ebp)
	.loc 7 4214 26
	movl	-84(%ebp), %eax
	fstps	16(%eax)
	.loc 7 4215 34
	movl	-108(%ebp), %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	.loc 7 4215 46
	fmuls	-64(%ebp)
	.loc 7 4215 56
	fadds	-72(%ebp)
	.loc 7 4215 26
	movl	-84(%ebp), %eax
	fstps	8(%eax)
	.loc 7 4216 34
	movl	-112(%ebp), %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	.loc 7 4216 46
	fmuls	-68(%ebp)
	.loc 7 4216 56
	fadds	-76(%ebp)
	.loc 7 4216 26
	movl	-84(%ebp), %eax
	fstps	12(%eax)
	.loc 7 4217 52
	movl	-80(%ebp), %eax
	movl	12(%eax), %edx
	.loc 7 4217 47
	movl	-108(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4217 55
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	fmuls	-64(%ebp)
	.loc 7 4217 65
	fadds	-72(%ebp)
	.loc 7 4217 26
	movl	-84(%ebp), %eax
	fstps	20(%eax)
	.loc 7 4218 52
	movl	-80(%ebp), %eax
	movl	16(%eax), %edx
	.loc 7 4218 47
	movl	-112(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4218 55
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	fmuls	-68(%ebp)
	.loc 7 4218 65
	fadds	-76(%ebp)
	.loc 7 4218 26
	movl	-84(%ebp), %eax
	fstps	24(%eax)
	.loc 7 4220 13
	cmpl	$0, -92(%ebp)
	jne	L3698
	.loc 7 4221 30
	movl	-32(%ebp), %eax
	movl	%eax, -40(%ebp)
LBE668:
	.loc 7 4221 33
	jmp	L3698
L3684:
	.loc 7 4222 26
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	.loc 7 4222 17
	testl	%eax, %eax
	je	L3691
	.loc 7 4223 26
	movl	$0, -44(%ebp)
	jmp	L3690
L3691:
	.loc 7 4224 24
	movl	-80(%ebp), %eax
	movl	20(%eax), %eax
	.loc 7 4224 17
	testl	%eax, %eax
	je	L3692
	.loc 7 4224 41 discriminator 1
	movl	-80(%ebp), %eax
	movl	12(%eax), %eax
	.loc 7 4224 35 discriminator 1
	testl	%eax, %eax
	jne	L3692
	.loc 7 4224 54 discriminator 2
	movl	-80(%ebp), %eax
	movl	16(%eax), %eax
	.loc 7 4224 48 discriminator 2
	testl	%eax, %eax
	jne	L3692
	.loc 7 4224 61 discriminator 3
	cmpl	$0, -40(%ebp)
	js	L3692
	.loc 7 4225 55
	movl	-28(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4225 57
	movl	16(%eax), %edx
	.loc 7 4225 89
	movl	-40(%ebp), %eax
	imull	$28, %eax, %eax
	addl	%eax, %edx
	.loc 7 4225 21
	movl	-28(%ebp), %ecx
	movl	%ecx, %eax
	addl	%eax, %eax
	addl	%ecx, %eax
	sall	$3, %eax
	movl	%eax, %ecx
	movl	16(%ebp), %eax
	addl	%ecx, %eax
	.loc 7 4225 23
	movl	16(%eax), %ecx
	.loc 7 4225 45
	movl	-32(%ebp), %eax
	imull	$28, %eax, %eax
	addl	%ecx, %eax
	movl	(%edx), %ecx
	movl	%ecx, (%eax)
	movl	4(%edx), %ecx
	movl	%ecx, 4(%eax)
	movl	8(%edx), %ecx
	movl	%ecx, 8(%eax)
	movl	12(%edx), %ecx
	movl	%ecx, 12(%eax)
	movl	16(%edx), %ecx
	movl	%ecx, 16(%eax)
	movl	20(%edx), %ecx
	movl	%ecx, 20(%eax)
	movl	24(%edx), %edx
	movl	%edx, 24(%eax)
	jmp	L3690
L3692:
	.loc 7 4227 26
	movl	$0, -44(%ebp)
	jmp	L3690
L3698:
	.loc 7 4221 33
	nop
L3690:
LBE667:
	.loc 7 4230 10 discriminator 2
	addl	$1, -36(%ebp)
LBE666:
	.loc 7 4171 7 discriminator 2
	addl	$1, -32(%ebp)
	jmp	L3693
L3683:
LBE665:
LBE664:
	.loc 7 4161 4 discriminator 2
	addl	$1, -28(%ebp)
	jmp	L3694
L3679:
LBE663:
	.loc 7 4235 22
	movl	-48(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 28(%eax)
	.loc 7 4236 22
	movl	-52(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 32(%eax)
	.loc 7 4238 11
	movl	-44(%ebp), %eax
	.loc 7 4239 1
	addl	$172, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2095:
	.globl	_stbtt_PackFontRangesPackRects
	.def	_stbtt_PackFontRangesPackRects;	.scl	2;	.type	32;	.endef
_stbtt_PackFontRangesPackRects:
LFB2096:
	.loc 7 4242 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$12, %esp
	.loc 7 4243 44
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 7 4243 20
	movl	16(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZL16stbrp_pack_rectsP13stbrp_contextP10stbrp_recti
	.loc 7 4244 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2096:
	.globl	_stbtt_PackFontRanges
	.def	_stbtt_PackFontRanges;	.scl	2;	.type	32;	.endef
_stbtt_PackFontRanges:
LFB2097:
	.loc 7 4247 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$200, %esp
	.loc 7 4249 15
	movl	$1, -24(%ebp)
	.loc 7 4254 10
	movl	$0, -12(%ebp)
L3704:
	.loc 7 4254 16 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	24(%ebp), %eax
	jge	L3701
	.loc 7 4255 13
	movl	$0, -16(%ebp)
L3703:
	.loc 7 4255 29 discriminator 3
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4255 31 discriminator 3
	movl	12(%eax), %eax
	.loc 7 4255 19 discriminator 3
	cmpl	%eax, -16(%ebp)
	jge	L3702
	.loc 7 4259 18 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4259 20 discriminator 2
	movl	16(%eax), %edx
	.loc 7 4259 40 discriminator 2
	movl	-16(%ebp), %eax
	imull	$28, %eax, %eax
	addl	%eax, %edx
	.loc 7 4259 45 discriminator 2
	movw	$0, 6(%edx)
	.loc 7 4258 18 discriminator 2
	movl	-12(%ebp), %ecx
	movl	%ecx, %eax
	addl	%eax, %eax
	addl	%ecx, %eax
	sall	$3, %eax
	movl	%eax, %ecx
	movl	20(%ebp), %eax
	addl	%ecx, %eax
	.loc 7 4258 20 discriminator 2
	movl	16(%eax), %ecx
	.loc 7 4258 40 discriminator 2
	movl	-16(%ebp), %eax
	imull	$28, %eax, %eax
	addl	%eax, %ecx
	.loc 7 4259 42 discriminator 2
	movzwl	6(%edx), %eax
	.loc 7 4258 45 discriminator 2
	movw	%ax, 4(%ecx)
	.loc 7 4257 18 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4257 20 discriminator 2
	movl	16(%eax), %edx
	.loc 7 4257 40 discriminator 2
	movl	-16(%ebp), %eax
	imull	$28, %eax, %eax
	addl	%eax, %edx
	.loc 7 4258 42 discriminator 2
	movzwl	4(%ecx), %eax
	.loc 7 4257 45 discriminator 2
	movw	%ax, 2(%edx)
	.loc 7 4256 18 discriminator 2
	movl	-12(%ebp), %ecx
	movl	%ecx, %eax
	addl	%eax, %eax
	addl	%ecx, %eax
	sall	$3, %eax
	movl	%eax, %ecx
	movl	20(%ebp), %eax
	addl	%ecx, %eax
	.loc 7 4256 20 discriminator 2
	movl	16(%eax), %ecx
	.loc 7 4256 40 discriminator 2
	movl	-16(%ebp), %eax
	imull	$28, %eax, %eax
	addl	%eax, %ecx
	.loc 7 4257 42 discriminator 2
	movzwl	2(%edx), %eax
	.loc 7 4256 45 discriminator 2
	movw	%ax, (%ecx)
	.loc 7 4255 7 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3703
L3702:
	.loc 7 4254 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L3704
L3701:
	.loc 7 4261 6
	movl	$0, -20(%ebp)
	.loc 7 4262 10
	movl	$0, -12(%ebp)
L3706:
	.loc 7 4262 16 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	24(%ebp), %eax
	jge	L3705
	.loc 7 4263 20 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4263 22 discriminator 2
	movl	12(%eax), %eax
	.loc 7 4263 9 discriminator 2
	addl	%eax, -20(%ebp)
	.loc 7 4262 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L3706
L3705:
	.loc 7 4265 27
	movl	-20(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$3, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -28(%ebp)
	.loc 7 4266 4
	cmpl	$0, -28(%ebp)
	jne	L3707
	.loc 7 4267 14
	movl	$0, %eax
	jmp	L3709
L3707:
	.loc 7 4269 25
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 7 4269 18
	movl	%eax, -156(%ebp)
	.loc 7 4270 18
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetFontOffsetForIndex
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-156(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_InitFont
	.loc 7 4272 39
	movl	-28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-156(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_PackFontRangesGatherRects
	movl	%eax, -20(%ebp)
	.loc 7 4274 33
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_PackFontRangesPackRects
	.loc 7 4276 54
	movl	-28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-156(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_PackFontRangesRenderIntoRects
	movl	%eax, -24(%ebp)
	.loc 7 4278 4
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 4279 11
	movl	-24(%ebp), %eax
L3709:
	.loc 7 4280 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2097:
	.globl	_stbtt_PackFontRange
	.def	_stbtt_PackFontRange;	.scl	2;	.type	32;	.endef
_stbtt_PackFontRange:
LFB2098:
	.loc 7 4284 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 7 4286 43
	movl	24(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 7 4287 38
	movl	$0, -24(%ebp)
	.loc 7 4288 38
	movl	28(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 7 4289 38
	movl	32(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 7 4290 38
	flds	20(%ebp)
	fstps	-32(%ebp)
	.loc 7 4291 31
	movl	$1, 16(%esp)
	leal	-32(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_PackFontRanges
	.loc 7 4291 68
	nop
	.loc 7 4292 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2098:
	.globl	_stbtt_GetScaledFontVMetrics
	.def	_stbtt_GetScaledFontVMetrics;	.scl	2;	.type	32;	.endef
_stbtt_GetScaledFontVMetrics:
LFB2099:
	.loc 7 4295 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$184, %esp
	.loc 7 4299 18
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetFontOffsetForIndex
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_InitFont
	.loc 7 4300 21
	fldz
	flds	16(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3717
	.loc 7 4300 48 discriminator 1
	flds	16(%ebp)
	fstps	4(%esp)
	leal	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_ScaleForPixelHeight
	jmp	L3715
L3717:
	.loc 7 4300 95 discriminator 2
	flds	16(%ebp)
	fchs
	fstps	4(%esp)
	leal	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_ScaleForMappingEmToPixels
L3715:
	.loc 7 4300 10 discriminator 4
	fstps	-12(%ebp)
	.loc 7 4301 25 discriminator 4
	leal	-24(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetFontVMetrics
	.loc 7 4302 15 discriminator 4
	movl	-16(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	.loc 7 4302 33 discriminator 4
	fmuls	-12(%ebp)
	.loc 7 4302 13 discriminator 4
	movl	20(%ebp), %eax
	fstps	(%eax)
	.loc 7 4303 15 discriminator 4
	movl	-20(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	.loc 7 4303 33 discriminator 4
	fmuls	-12(%ebp)
	.loc 7 4303 13 discriminator 4
	movl	24(%ebp), %eax
	fstps	(%eax)
	.loc 7 4304 15 discriminator 4
	movl	-24(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	.loc 7 4304 33 discriminator 4
	fmuls	-12(%ebp)
	.loc 7 4304 13 discriminator 4
	movl	28(%ebp), %eax
	fstps	(%eax)
	.loc 7 4305 1 discriminator 4
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2099:
	.globl	_stbtt_GetPackedQuad
	.def	_stbtt_GetPackedQuad;	.scl	2;	.type	32;	.endef
_stbtt_GetPackedQuad:
LFB2100:
	.loc 7 4308 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 7 4309 21
	fildl	12(%ebp)
	.loc 7 4309 10
	fld1
	fdivp	%st, %st(1)
	fstps	-12(%ebp)
	.loc 7 4309 38
	fildl	16(%ebp)
	.loc 7 4309 27
	fld1
	fdivp	%st, %st(1)
	fstps	-16(%ebp)
	.loc 7 4310 41
	movl	20(%ebp), %eax
	imull	$28, %eax, %edx
	.loc 7 4310 28
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -20(%ebp)
LBB669:
	.loc 7 4312 4
	cmpl	$0, 36(%ebp)
	je	L3719
LBB670:
	.loc 7 4313 25
	movl	24(%ebp), %eax
	flds	(%eax)
	movl	-20(%ebp), %eax
	flds	8(%eax)
	faddp	%st, %st(1)
	flds	LC22
	faddp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt5floorf
	fnstcw	-42(%ebp)
	movzwl	-42(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -44(%ebp)
	fldcw	-44(%ebp)
	fistpl	-52(%ebp)
	fldcw	-42(%ebp)
	fildl	-52(%ebp)
	fstps	-24(%ebp)
	.loc 7 4314 25
	movl	28(%ebp), %eax
	flds	(%eax)
	movl	-20(%ebp), %eax
	flds	12(%eax)
	faddp	%st, %st(1)
	flds	LC22
	faddp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt5floorf
	fnstcw	-42(%ebp)
	movzwl	-42(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -44(%ebp)
	fldcw	-44(%ebp)
	fistpl	-52(%ebp)
	fldcw	-42(%ebp)
	fildl	-52(%ebp)
	fstps	-28(%ebp)
	.loc 7 4315 13
	movl	32(%ebp), %eax
	flds	-24(%ebp)
	fstps	(%eax)
	.loc 7 4316 13
	movl	32(%ebp), %eax
	flds	-28(%ebp)
	fstps	4(%eax)
	.loc 7 4317 22
	movl	-20(%ebp), %eax
	flds	20(%eax)
	.loc 7 4317 17
	fadds	-24(%ebp)
	.loc 7 4317 33
	movl	-20(%ebp), %eax
	flds	8(%eax)
	.loc 7 4317 28
	fsubrp	%st, %st(1)
	.loc 7 4317 13
	movl	32(%ebp), %eax
	fstps	16(%eax)
	.loc 7 4318 22
	movl	-20(%ebp), %eax
	flds	24(%eax)
	.loc 7 4318 17
	fadds	-28(%ebp)
	.loc 7 4318 33
	movl	-20(%ebp), %eax
	flds	12(%eax)
	.loc 7 4318 28
	fsubrp	%st, %st(1)
	.loc 7 4318 13
	movl	32(%ebp), %eax
	fstps	20(%eax)
LBE670:
	jmp	L3720
L3719:
	.loc 7 4320 15
	movl	24(%ebp), %eax
	flds	(%eax)
	.loc 7 4320 26
	movl	-20(%ebp), %eax
	flds	8(%eax)
	.loc 7 4320 21
	faddp	%st, %st(1)
	.loc 7 4320 13
	movl	32(%ebp), %eax
	fstps	(%eax)
	.loc 7 4321 15
	movl	28(%ebp), %eax
	flds	(%eax)
	.loc 7 4321 26
	movl	-20(%ebp), %eax
	flds	12(%eax)
	.loc 7 4321 21
	faddp	%st, %st(1)
	.loc 7 4321 13
	movl	32(%ebp), %eax
	fstps	4(%eax)
	.loc 7 4322 15
	movl	24(%ebp), %eax
	flds	(%eax)
	.loc 7 4322 26
	movl	-20(%ebp), %eax
	flds	20(%eax)
	.loc 7 4322 21
	faddp	%st, %st(1)
	.loc 7 4322 13
	movl	32(%ebp), %eax
	fstps	16(%eax)
	.loc 7 4323 15
	movl	28(%ebp), %eax
	flds	(%eax)
	.loc 7 4323 26
	movl	-20(%ebp), %eax
	flds	24(%eax)
	.loc 7 4323 21
	faddp	%st, %st(1)
	.loc 7 4323 13
	movl	32(%ebp), %eax
	fstps	20(%eax)
L3720:
LBE669:
	.loc 7 4326 15
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	.loc 7 4326 18
	movl	%eax, -52(%ebp)
	fildl	-52(%ebp)
	fmuls	-12(%ebp)
	.loc 7 4326 10
	movl	32(%ebp), %eax
	fstps	8(%eax)
	.loc 7 4327 15
	movl	-20(%ebp), %eax
	movzwl	2(%eax), %eax
	movzwl	%ax, %eax
	.loc 7 4327 18
	movl	%eax, -52(%ebp)
	fildl	-52(%ebp)
	fmuls	-16(%ebp)
	.loc 7 4327 10
	movl	32(%ebp), %eax
	fstps	12(%eax)
	.loc 7 4328 15
	movl	-20(%ebp), %eax
	movzwl	4(%eax), %eax
	movzwl	%ax, %eax
	.loc 7 4328 18
	movl	%eax, -52(%ebp)
	fildl	-52(%ebp)
	fmuls	-12(%ebp)
	.loc 7 4328 10
	movl	32(%ebp), %eax
	fstps	24(%eax)
	.loc 7 4329 15
	movl	-20(%ebp), %eax
	movzwl	6(%eax), %eax
	movzwl	%ax, %eax
	.loc 7 4329 18
	movl	%eax, -52(%ebp)
	fildl	-52(%ebp)
	fmuls	-16(%ebp)
	.loc 7 4329 10
	movl	32(%ebp), %eax
	fstps	28(%eax)
	.loc 7 4331 10
	movl	24(%ebp), %eax
	flds	(%eax)
	.loc 7 4331 16
	movl	-20(%ebp), %eax
	flds	16(%eax)
	.loc 7 4331 10
	faddp	%st, %st(1)
	movl	24(%ebp), %eax
	fstps	(%eax)
	.loc 7 4332 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2100:
	.def	__ZL27stbtt__ray_intersect_bezierPfS_S_S_S_PA2_f;	.scl	3;	.type	32;	.endef
__ZL27stbtt__ray_intersect_bezierPfS_S_S_S_PA2_f:
LFB2101:
	.loc 7 4343 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$120, %esp
	.loc 7 4344 23
	movl	16(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4344 30
	movl	12(%ebp), %eax
	flds	(%eax)
	.loc 7 4344 24
	fmulp	%st, %st(1)
	.loc 7 4344 38
	movl	16(%ebp), %eax
	flds	(%eax)
	.loc 7 4344 45
	movl	12(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4344 39
	fmulp	%st, %st(1)
	.loc 7 4344 10
	fsubrp	%st, %st(1)
	fstps	-24(%ebp)
	.loc 7 4345 23
	movl	20(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4345 30
	movl	12(%ebp), %eax
	flds	(%eax)
	.loc 7 4345 24
	fmulp	%st, %st(1)
	.loc 7 4345 38
	movl	20(%ebp), %eax
	flds	(%eax)
	.loc 7 4345 45
	movl	12(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4345 39
	fmulp	%st, %st(1)
	.loc 7 4345 10
	fsubrp	%st, %st(1)
	fstps	-28(%ebp)
	.loc 7 4346 23
	movl	24(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4346 30
	movl	12(%ebp), %eax
	flds	(%eax)
	.loc 7 4346 24
	fmulp	%st, %st(1)
	.loc 7 4346 38
	movl	24(%ebp), %eax
	flds	(%eax)
	.loc 7 4346 45
	movl	12(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4346 39
	fmulp	%st, %st(1)
	.loc 7 4346 10
	fsubrp	%st, %st(1)
	fstps	-32(%ebp)
	.loc 7 4347 25
	movl	8(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4347 32
	movl	12(%ebp), %eax
	flds	(%eax)
	.loc 7 4347 26
	fmulp	%st, %st(1)
	.loc 7 4347 42
	movl	8(%ebp), %eax
	flds	(%eax)
	.loc 7 4347 49
	movl	12(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4347 43
	fmulp	%st, %st(1)
	.loc 7 4347 10
	fsubrp	%st, %st(1)
	fstps	-36(%ebp)
	.loc 7 4349 24
	flds	-28(%ebp)
	fadd	%st(0), %st
	.loc 7 4349 21
	flds	-24(%ebp)
	fsubp	%st, %st(1)
	.loc 7 4349 10
	flds	-32(%ebp)
	faddp	%st, %st(1)
	fstps	-40(%ebp)
	.loc 7 4350 10
	flds	-28(%ebp)
	fsubs	-24(%ebp)
	fstps	-44(%ebp)
	.loc 7 4351 10
	flds	-24(%ebp)
	fsubs	-36(%ebp)
	fstps	-48(%ebp)
	.loc 7 4353 10
	fldz
	fstps	-12(%ebp)
	.loc 7 4353 19
	fldz
	fstps	-16(%ebp)
	.loc 7 4354 8
	movl	$0, -20(%ebp)
LBB671:
	.loc 7 4356 4
	flds	-40(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jp	L3740
	flds	-40(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	je	L3749
L3740:
LBB672:
	.loc 7 4357 22
	flds	-44(%ebp)
	fmuls	-44(%ebp)
	.loc 7 4357 28
	flds	-40(%ebp)
	fmuls	-48(%ebp)
	.loc 7 4357 13
	fsubrp	%st, %st(1)
	fstps	-52(%ebp)
LBB673:
	.loc 7 4358 7
	fldz
	flds	-52(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3734
LBB674:
	.loc 7 4359 16
	fld1
	fchs
	fdivs	-40(%ebp)
	fstps	-56(%ebp)
	.loc 7 4360 28
	flds	-52(%ebp)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fstps	-60(%ebp)
	.loc 7 4361 17
	flds	-44(%ebp)
	fadds	-60(%ebp)
	.loc 7 4361 13
	flds	-56(%ebp)
	fmulp	%st, %st(1)
	fstps	-12(%ebp)
	.loc 7 4362 17
	flds	-44(%ebp)
	fsubs	-60(%ebp)
	.loc 7 4362 13
	flds	-56(%ebp)
	fmulp	%st, %st(1)
	fstps	-16(%ebp)
	.loc 7 4363 10
	fldz
	flds	-12(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3726
	.loc 7 4363 24 discriminator 1
	flds	-12(%ebp)
	fld1
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3726
	.loc 7 4364 19
	movl	$1, -20(%ebp)
L3726:
	.loc 7 4365 10
	fldz
	flds	-60(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3734
	.loc 7 4365 22 discriminator 1
	fldz
	flds	-16(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3734
	.loc 7 4365 35 discriminator 2
	flds	-16(%ebp)
	fld1
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3734
	.loc 7 4366 13
	cmpl	$0, -20(%ebp)
	jne	L3733
	.loc 7 4366 32 discriminator 1
	flds	-16(%ebp)
	fstps	-12(%ebp)
L3733:
	.loc 7 4367 13
	addl	$1, -20(%ebp)
	jmp	L3734
L3749:
LBE674:
LBE673:
LBE672:
	.loc 7 4373 20
	flds	-44(%ebp)
	flds	LC209
	fmulp	%st, %st(1)
	.loc 7 4373 10
	flds	-48(%ebp)
	fdivp	%st, %st(1)
	fstps	-12(%ebp)
	.loc 7 4374 7
	fldz
	flds	-12(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3734
	.loc 7 4374 21 discriminator 1
	flds	-12(%ebp)
	fld1
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3734
	.loc 7 4375 16
	movl	$1, -20(%ebp)
L3734:
LBE671:
LBB675:
	.loc 7 4378 4
	cmpl	$0, -20(%ebp)
	jne	L3737
	.loc 7 4379 14
	movl	$0, %eax
	jmp	L3738
L3737:
LBB676:
	.loc 7 4381 34
	movl	12(%ebp), %eax
	flds	(%eax)
	.loc 7 4381 41
	movl	12(%ebp), %eax
	flds	(%eax)
	.loc 7 4381 35
	fmulp	%st, %st(1)
	.loc 7 4381 50
	movl	12(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4381 57
	movl	12(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4381 51
	fmulp	%st, %st(1)
	.loc 7 4381 43
	faddp	%st, %st(1)
	.loc 7 4381 13
	fld1
	fdivp	%st, %st(1)
	fstps	-64(%ebp)
	.loc 7 4382 27
	movl	12(%ebp), %eax
	flds	(%eax)
	.loc 7 4382 13
	flds	-64(%ebp)
	fmulp	%st, %st(1)
	fstps	-68(%ebp)
	.loc 7 4382 55
	movl	12(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4382 41
	flds	-64(%ebp)
	fmulp	%st, %st(1)
	fstps	-72(%ebp)
	.loc 7 4384 25
	movl	16(%ebp), %eax
	flds	(%eax)
	.loc 7 4384 26
	fmuls	-68(%ebp)
	.loc 7 4384 42
	movl	16(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4384 43
	fmuls	-72(%ebp)
	.loc 7 4384 13
	faddp	%st, %st(1)
	fstps	-76(%ebp)
	.loc 7 4385 25
	movl	20(%ebp), %eax
	flds	(%eax)
	.loc 7 4385 26
	fmuls	-68(%ebp)
	.loc 7 4385 42
	movl	20(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4385 43
	fmuls	-72(%ebp)
	.loc 7 4385 13
	faddp	%st, %st(1)
	fstps	-80(%ebp)
	.loc 7 4386 25
	movl	24(%ebp), %eax
	flds	(%eax)
	.loc 7 4386 26
	fmuls	-68(%ebp)
	.loc 7 4386 42
	movl	24(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4386 43
	fmuls	-72(%ebp)
	.loc 7 4386 13
	faddp	%st, %st(1)
	fstps	-84(%ebp)
	.loc 7 4387 25
	movl	8(%ebp), %eax
	flds	(%eax)
	.loc 7 4387 26
	fmuls	-68(%ebp)
	.loc 7 4387 42
	movl	8(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4387 43
	fmuls	-72(%ebp)
	.loc 7 4387 13
	faddp	%st, %st(1)
	fstps	-88(%ebp)
	.loc 7 4389 13
	flds	-80(%ebp)
	fsubs	-76(%ebp)
	fstps	-92(%ebp)
	.loc 7 4390 13
	flds	-84(%ebp)
	fsubs	-76(%ebp)
	fstps	-96(%ebp)
	.loc 7 4391 13
	flds	-76(%ebp)
	fsubs	-88(%ebp)
	fstps	-100(%ebp)
	.loc 7 4393 42
	flds	-12(%ebp)
	fadd	%st(0), %st
	.loc 7 4393 36
	flds	LC192
	fsubp	%st, %st(1)
	.loc 7 4393 29
	fmuls	-12(%ebp)
	.loc 7 4393 46
	fmuls	-92(%ebp)
	.loc 7 4393 25
	fadds	-100(%ebp)
	.loc 7 4393 56
	flds	-12(%ebp)
	fmuls	-12(%ebp)
	.loc 7 4393 59
	fmuls	-96(%ebp)
	.loc 7 4393 52
	faddp	%st, %st(1)
	.loc 7 4393 18
	movl	28(%ebp), %eax
	fstps	(%eax)
	.loc 7 4394 21
	flds	-40(%ebp)
	fmuls	-12(%ebp)
	.loc 7 4394 24
	fadds	-44(%ebp)
	.loc 7 4394 18
	movl	28(%ebp), %eax
	fstps	4(%eax)
	.loc 7 4396 7
	cmpl	$1, -20(%ebp)
	jle	L3739
	.loc 7 4397 45
	flds	-16(%ebp)
	fadd	%st(0), %st
	.loc 7 4397 39
	flds	LC192
	fsubp	%st, %st(1)
	.loc 7 4397 32
	fmuls	-16(%ebp)
	.loc 7 4397 49
	fmuls	-92(%ebp)
	.loc 7 4397 28
	fadds	-100(%ebp)
	.loc 7 4397 59
	flds	-16(%ebp)
	fmuls	-16(%ebp)
	.loc 7 4397 62
	fmuls	-96(%ebp)
	.loc 7 4397 16
	movl	28(%ebp), %eax
	addl	$8, %eax
	.loc 7 4397 55
	faddp	%st, %st(1)
	.loc 7 4397 21
	fstps	(%eax)
	.loc 7 4398 24
	flds	-40(%ebp)
	fmuls	-16(%ebp)
	.loc 7 4398 16
	movl	28(%ebp), %eax
	addl	$8, %eax
	.loc 7 4398 27
	fadds	-44(%ebp)
	.loc 7 4398 21
	fstps	4(%eax)
	.loc 7 4399 17
	movl	$2, %eax
	jmp	L3738
L3739:
	.loc 7 4401 17
	movl	$1, %eax
L3738:
LBE676:
LBE675:
	.loc 7 4404 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2101:
	.def	__ZL5equalPfS_;	.scl	3;	.type	32;	.endef
__ZL5equalPfS_:
LFB2102:
	.loc 7 4407 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 7 4408 15
	movl	8(%ebp), %eax
	flds	(%eax)
	.loc 7 4408 23
	movl	12(%ebp), %eax
	flds	(%eax)
	.loc 7 4408 25
	fucomi	%st(1), %st
	jp	L3758
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L3751
	.loc 7 4408 31 discriminator 1
	movl	8(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4408 39 discriminator 1
	movl	12(%ebp), %eax
	addl	$4, %eax
	flds	(%eax)
	.loc 7 4408 25 discriminator 1
	fucomi	%st(1), %st
	jp	L3759
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L3751
	.loc 7 4408 25 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L3754
L3758:
	fstp	%st(0)
	fstp	%st(0)
	jmp	L3751
L3759:
	fstp	%st(0)
	fstp	%st(0)
L3751:
	.loc 7 4408 25 discriminator 4
	movl	$0, %eax
L3754:
	.loc 7 4408 40 is_stmt 1 discriminator 6
	movzbl	%al, %eax
	.loc 7 4409 1 discriminator 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2102:
	.def	__ZL26stbtt__compute_crossings_xffiP12stbtt_vertex;	.scl	3;	.type	32;	.endef
__ZL26stbtt__compute_crossings_xffiP12stbtt_vertex:
LFB2103:
	.loc 7 4412 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$200, %esp
	.loc 7 4414 19
	fld1
	fstps	-60(%ebp)
	fldz
	fstps	-56(%ebp)
	.loc 7 4416 8
	movl	$0, -16(%ebp)
	.loc 7 4418 12
	flds	8(%ebp)
	fstps	-52(%ebp)
	.loc 7 4419 12
	flds	12(%ebp)
	fstps	-48(%ebp)
	.loc 7 4422 21
	fld1
	fstps	4(%esp)
	flds	12(%ebp)
	fstps	(%esp)
	call	__ZSt4fmodff
	fstps	-20(%ebp)
	.loc 7 4423 4
	flds	-20(%ebp)
	flds	LC210
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3851
	.loc 7 4424 9
	flds	12(%ebp)
	flds	LC210
	faddp	%st, %st(1)
	fstps	12(%ebp)
	jmp	L3763
L3851:
	.loc 7 4425 9
	flds	LC211
	flds	-20(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3763
	.loc 7 4426 9
	flds	12(%ebp)
	flds	LC210
	fsubrp	%st, %st(1)
	fstps	12(%ebp)
L3763:
	.loc 7 4427 12
	flds	12(%ebp)
	fstps	-48(%ebp)
LBB677:
	.loc 7 4430 10
	movl	$0, -12(%ebp)
L3832:
	.loc 7 4430 16 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L3765
LBB678:
LBB679:
	.loc 7 4431 18
	movl	-12(%ebp), %eax
	imull	$14, %eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4431 20
	movzbl	12(%eax), %eax
	.loc 7 4431 7
	cmpb	$2, %al
	jne	L3766
LBB680:
	.loc 7 4432 34
	movl	-12(%ebp), %eax
	imull	$14, %eax, %eax
	leal	-14(%eax), %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4432 36
	movzwl	(%eax), %eax
	.loc 7 4432 19
	cwtl
	.loc 7 4432 14
	movl	%eax, -64(%ebp)
	.loc 7 4432 59
	movl	-12(%ebp), %eax
	imull	$14, %eax, %eax
	leal	-14(%eax), %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4432 61
	movzwl	2(%eax), %eax
	.loc 7 4432 44
	cwtl
	.loc 7 4432 39
	movl	%eax, -68(%ebp)
	.loc 7 4433 34
	movl	-12(%ebp), %eax
	imull	$14, %eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4433 36
	movzwl	(%eax), %eax
	.loc 7 4433 19
	cwtl
	.loc 7 4433 14
	movl	%eax, -72(%ebp)
	.loc 7 4433 59
	movl	-12(%ebp), %eax
	imull	$14, %eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4433 61
	movzwl	2(%eax), %eax
	.loc 7 4433 44
	cwtl
	.loc 7 4433 39
	movl	%eax, -76(%ebp)
LBB681:
	.loc 7 4434 18
	movl	-68(%ebp), %edx
	movl	-76(%ebp), %eax
	.loc 7 4434 16
	cmpl	%eax, %edx
	jge	L3767
	.loc 7 4434 16 is_stmt 0 discriminator 1
	movl	-68(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	jmp	L3768
L3767:
	.loc 7 4434 16 discriminator 2
	movl	-76(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
L3768:
	.loc 7 4434 10 is_stmt 1 discriminator 4
	flds	12(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3766
	.loc 7 4434 42 discriminator 5
	movl	-68(%ebp), %edx
	movl	-76(%ebp), %eax
	.loc 7 4434 40 discriminator 5
	cmpl	%eax, %edx
	jge	L3771
	.loc 7 4434 40 is_stmt 0 discriminator 6
	movl	-76(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	jmp	L3772
L3771:
	.loc 7 4434 40 discriminator 7
	movl	-68(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
L3772:
	.loc 7 4434 35 is_stmt 1 discriminator 9
	flds	12(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3766
	.loc 7 4434 66 discriminator 10
	movl	-64(%ebp), %edx
	movl	-72(%ebp), %eax
	.loc 7 4434 64 discriminator 10
	cmpl	%eax, %edx
	jge	L3774
	.loc 7 4434 64 is_stmt 0 discriminator 11
	movl	-64(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	jmp	L3775
L3774:
	.loc 7 4434 64 discriminator 12
	movl	-72(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
L3775:
	.loc 7 4434 59 is_stmt 1 discriminator 14
	flds	8(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3766
LBB682:
	.loc 7 4435 32
	movl	-68(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	flds	12(%ebp)
	fsubp	%st, %st(1)
	.loc 7 4435 44
	movl	-76(%ebp), %edx
	movl	-68(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 4435 38
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	fdivrp	%st, %st(1)
	.loc 7 4435 55
	movl	-72(%ebp), %edx
	movl	-64(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 4435 50
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4435 60
	movl	-64(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	.loc 7 4435 19
	faddp	%st, %st(1)
	fstps	-24(%ebp)
	.loc 7 4436 13
	flds	-24(%ebp)
	flds	8(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3766
	.loc 7 4437 31
	movl	-68(%ebp), %edx
	movl	-76(%ebp), %eax
	.loc 7 4437 37
	cmpl	%eax, %edx
	jge	L3779
	.loc 7 4437 37 is_stmt 0 discriminator 1
	movl	$1, %eax
	jmp	L3780
L3779:
	.loc 7 4437 37 discriminator 2
	movl	$-1, %eax
L3780:
	.loc 7 4437 24 is_stmt 1 discriminator 4
	addl	%eax, -16(%ebp)
L3766:
LBE682:
LBE681:
LBE680:
LBE679:
LBB683:
	.loc 7 4440 18
	movl	-12(%ebp), %eax
	imull	$14, %eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4440 20
	movzbl	12(%eax), %eax
	.loc 7 4440 7
	cmpb	$3, %al
	jne	L3781
LBB684:
	.loc 7 4441 34
	movl	-12(%ebp), %eax
	imull	$14, %eax, %eax
	leal	-14(%eax), %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4441 36
	movzwl	(%eax), %eax
	.loc 7 4441 19
	cwtl
	.loc 7 4441 14
	movl	%eax, -80(%ebp)
	.loc 7 4441 60
	movl	-12(%ebp), %eax
	imull	$14, %eax, %eax
	leal	-14(%eax), %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4441 62
	movzwl	2(%eax), %eax
	.loc 7 4441 45
	cwtl
	.loc 7 4441 40
	movl	%eax, -84(%ebp)
	.loc 7 4442 34
	movl	-12(%ebp), %eax
	imull	$14, %eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4442 36
	movzwl	4(%eax), %eax
	.loc 7 4442 19
	cwtl
	.loc 7 4442 14
	movl	%eax, -88(%ebp)
	.loc 7 4442 60
	movl	-12(%ebp), %eax
	imull	$14, %eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4442 62
	movzwl	6(%eax), %eax
	.loc 7 4442 45
	cwtl
	.loc 7 4442 40
	movl	%eax, -92(%ebp)
	.loc 7 4443 34
	movl	-12(%ebp), %eax
	imull	$14, %eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4443 36
	movzwl	(%eax), %eax
	.loc 7 4443 19
	cwtl
	.loc 7 4443 14
	movl	%eax, -96(%ebp)
	.loc 7 4443 60
	movl	-12(%ebp), %eax
	imull	$14, %eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4443 62
	movzwl	2(%eax), %eax
	.loc 7 4443 45
	cwtl
	.loc 7 4443 40
	movl	%eax, -100(%ebp)
	.loc 7 4444 19
	movl	-88(%ebp), %edx
	movl	-96(%ebp), %eax
	cmpl	%eax, %edx
	jge	L3782
	.loc 7 4444 19 is_stmt 0 discriminator 1
	movl	-88(%ebp), %eax
	jmp	L3783
L3782:
	.loc 7 4444 19 discriminator 2
	movl	-96(%ebp), %eax
L3783:
	.loc 7 4444 19 discriminator 4
	movl	-80(%ebp), %edx
	cmpl	%edx, %eax
	jg	L3784
	.loc 7 4444 19 discriminator 5
	movl	-88(%ebp), %edx
	movl	-96(%ebp), %eax
	cmpl	%eax, %edx
	jge	L3785
	.loc 7 4444 19 discriminator 7
	movl	-88(%ebp), %eax
	jmp	L3787
L3785:
	.loc 7 4444 19 discriminator 8
	movl	-96(%ebp), %eax
	jmp	L3787
L3784:
	.loc 7 4444 19 discriminator 6
	movl	-80(%ebp), %eax
L3787:
	.loc 7 4444 14 is_stmt 1 discriminator 12
	movl	%eax, -28(%ebp)
	.loc 7 4444 56 discriminator 12
	movl	-92(%ebp), %edx
	movl	-100(%ebp), %eax
	cmpl	%eax, %edx
	jge	L3788
	.loc 7 4444 56 is_stmt 0 discriminator 13
	movl	-92(%ebp), %eax
	jmp	L3789
L3788:
	.loc 7 4444 56 discriminator 14
	movl	-100(%ebp), %eax
L3789:
	.loc 7 4444 56 discriminator 16
	movl	-84(%ebp), %edx
	cmpl	%edx, %eax
	jg	L3790
	.loc 7 4444 56 discriminator 17
	movl	-92(%ebp), %edx
	movl	-100(%ebp), %eax
	cmpl	%eax, %edx
	jge	L3791
	.loc 7 4444 56 discriminator 19
	movl	-92(%ebp), %eax
	jmp	L3793
L3791:
	.loc 7 4444 56 discriminator 20
	movl	-100(%ebp), %eax
	jmp	L3793
L3790:
	.loc 7 4444 56 discriminator 18
	movl	-84(%ebp), %eax
L3793:
	.loc 7 4444 51 is_stmt 1 discriminator 24
	movl	%eax, -32(%ebp)
	.loc 7 4445 19 discriminator 24
	movl	-92(%ebp), %edx
	movl	-100(%ebp), %eax
	cmpl	%eax, %edx
	jge	L3794
	.loc 7 4445 19 is_stmt 0 discriminator 1
	movl	-100(%ebp), %eax
	jmp	L3795
L3794:
	.loc 7 4445 19 discriminator 2
	movl	-92(%ebp), %eax
L3795:
	.loc 7 4445 19 discriminator 4
	movl	-84(%ebp), %edx
	cmpl	%edx, %eax
	jle	L3796
	.loc 7 4445 19 discriminator 5
	movl	-92(%ebp), %edx
	movl	-100(%ebp), %eax
	cmpl	%eax, %edx
	jge	L3797
	.loc 7 4445 19 discriminator 7
	movl	-100(%ebp), %eax
	jmp	L3799
L3797:
	.loc 7 4445 19 discriminator 8
	movl	-92(%ebp), %eax
	jmp	L3799
L3796:
	.loc 7 4445 19 discriminator 6
	movl	-84(%ebp), %eax
L3799:
	.loc 7 4445 14 is_stmt 1 discriminator 12
	movl	%eax, -36(%ebp)
LBB685:
	.loc 7 4446 16 discriminator 12
	fildl	-32(%ebp)
	.loc 7 4446 10 discriminator 12
	flds	12(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3781
	.loc 7 4446 26 discriminator 1
	fildl	-36(%ebp)
	.loc 7 4446 21 discriminator 1
	flds	12(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3781
	.loc 7 4446 36 discriminator 2
	fildl	-28(%ebp)
	.loc 7 4446 31 discriminator 2
	flds	8(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3781
LBB686:
	.loc 7 4449 21
	movl	-80(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	.loc 7 4449 19
	fstps	-108(%ebp)
	.loc 7 4450 21
	movl	-84(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	.loc 7 4450 19
	fstps	-104(%ebp)
	.loc 7 4451 21
	movl	-88(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	.loc 7 4451 19
	fstps	-116(%ebp)
	.loc 7 4452 21
	movl	-92(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	.loc 7 4452 19
	fstps	-112(%ebp)
	.loc 7 4453 21
	movl	-96(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	.loc 7 4453 19
	fstps	-124(%ebp)
	.loc 7 4454 21
	movl	-100(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	.loc 7 4454 19
	fstps	-120(%ebp)
LBB687:
	.loc 7 4455 22
	leal	-116(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-108(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL5equalPfS_
	.loc 7 4455 30
	testl	%eax, %eax
	jne	L3804
	.loc 7 4455 38 discriminator 2
	leal	-124(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-116(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL5equalPfS_
	.loc 7 4455 30 discriminator 2
	testl	%eax, %eax
	je	L3805
L3804:
	.loc 7 4455 30 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L3806
L3805:
	.loc 7 4455 30 discriminator 4
	movl	$0, %eax
L3806:
	.loc 7 4455 13 is_stmt 1 discriminator 6
	testb	%al, %al
	je	L3807
LBB688:
	.loc 7 4456 35
	movl	-12(%ebp), %eax
	imull	$14, %eax, %eax
	leal	-14(%eax), %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4456 37
	movzwl	(%eax), %eax
	.loc 7 4456 21
	cwtl
	.loc 7 4456 19
	movl	%eax, -80(%ebp)
	.loc 7 4457 35
	movl	-12(%ebp), %eax
	imull	$14, %eax, %eax
	leal	-14(%eax), %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4457 37
	movzwl	2(%eax), %eax
	.loc 7 4457 21
	cwtl
	.loc 7 4457 19
	movl	%eax, -84(%ebp)
	.loc 7 4458 35
	movl	-12(%ebp), %eax
	imull	$14, %eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4458 37
	movzwl	(%eax), %eax
	.loc 7 4458 21
	cwtl
	.loc 7 4458 19
	movl	%eax, -88(%ebp)
	.loc 7 4459 35
	movl	-12(%ebp), %eax
	imull	$14, %eax, %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4459 37
	movzwl	2(%eax), %eax
	.loc 7 4459 21
	cwtl
	.loc 7 4459 19
	movl	%eax, -92(%ebp)
LBB689:
	.loc 7 4460 24
	movl	-84(%ebp), %edx
	movl	-92(%ebp), %eax
	.loc 7 4460 22
	cmpl	%eax, %edx
	jge	L3808
	.loc 7 4460 22 is_stmt 0 discriminator 1
	movl	-84(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	jmp	L3809
L3808:
	.loc 7 4460 22 discriminator 2
	movl	-92(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
L3809:
	.loc 7 4460 16 is_stmt 1 discriminator 4
	flds	12(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3781
	.loc 7 4460 48 discriminator 5
	movl	-84(%ebp), %edx
	movl	-92(%ebp), %eax
	.loc 7 4460 46 discriminator 5
	cmpl	%eax, %edx
	jge	L3812
	.loc 7 4460 46 is_stmt 0 discriminator 6
	movl	-92(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	jmp	L3813
L3812:
	.loc 7 4460 46 discriminator 7
	movl	-84(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
L3813:
	.loc 7 4460 41 is_stmt 1 discriminator 9
	flds	12(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3781
	.loc 7 4460 72 discriminator 10
	movl	-80(%ebp), %edx
	movl	-88(%ebp), %eax
	.loc 7 4460 70 discriminator 10
	cmpl	%eax, %edx
	jge	L3815
	.loc 7 4460 70 is_stmt 0 discriminator 11
	movl	-80(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	jmp	L3816
L3815:
	.loc 7 4460 70 discriminator 12
	movl	-88(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
L3816:
	.loc 7 4460 65 is_stmt 1 discriminator 14
	flds	8(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3781
LBB690:
	.loc 7 4461 38
	movl	-84(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	flds	12(%ebp)
	fsubp	%st, %st(1)
	.loc 7 4461 50
	movl	-92(%ebp), %edx
	movl	-84(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 4461 44
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	fdivrp	%st, %st(1)
	.loc 7 4461 61
	movl	-88(%ebp), %edx
	movl	-80(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 4461 56
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4461 66
	movl	-80(%ebp), %eax
	movl	%eax, -156(%ebp)
	fildl	-156(%ebp)
	.loc 7 4461 25
	faddp	%st, %st(1)
	fstps	-40(%ebp)
	.loc 7 4462 19
	flds	-40(%ebp)
	flds	8(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3781
	.loc 7 4463 37
	movl	-84(%ebp), %edx
	movl	-92(%ebp), %eax
	.loc 7 4463 43
	cmpl	%eax, %edx
	jge	L3820
	.loc 7 4463 43 is_stmt 0 discriminator 1
	movl	$1, %eax
	jmp	L3821
L3820:
	.loc 7 4463 43 discriminator 2
	movl	$-1, %eax
L3821:
	.loc 7 4463 30 is_stmt 1 discriminator 4
	addl	%eax, -16(%ebp)
	jmp	L3781
L3807:
LBE690:
LBE689:
LBE688:
LBB691:
	.loc 7 4466 58
	leal	-140(%ebp), %eax
	movl	%eax, 20(%esp)
	leal	-124(%ebp), %eax
	movl	%eax, 16(%esp)
	leal	-116(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-108(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-60(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL27stbtt__ray_intersect_bezierPfS_S_S_S_PA2_f
	movl	%eax, -44(%ebp)
	.loc 7 4467 16
	cmpl	$0, -44(%ebp)
	jle	L3823
	.loc 7 4468 32
	flds	-140(%ebp)
	.loc 7 4468 19
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3823
	.loc 7 4469 43
	flds	-136(%ebp)
	.loc 7 4469 49
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3852
	.loc 7 4469 49 is_stmt 0 discriminator 1
	movl	$-1, %eax
	jmp	L3827
L3852:
	.loc 7 4469 49 discriminator 2
	movl	$1, %eax
L3827:
	.loc 7 4469 30 is_stmt 1 discriminator 4
	addl	%eax, -16(%ebp)
L3823:
	.loc 7 4470 16
	cmpl	$1, -44(%ebp)
	jle	L3781
	.loc 7 4471 32
	flds	-132(%ebp)
	.loc 7 4471 19
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3781
	.loc 7 4472 43
	flds	-128(%ebp)
	.loc 7 4472 49
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3853
	.loc 7 4472 49 is_stmt 0 discriminator 1
	movl	$-1, %eax
	jmp	L3831
L3853:
	.loc 7 4472 49 discriminator 2
	movl	$1, %eax
L3831:
	.loc 7 4472 30 is_stmt 1 discriminator 4
	addl	%eax, -16(%ebp)
L3781:
LBE691:
LBE687:
LBE686:
LBE685:
LBE684:
LBE683:
LBE678:
	.loc 7 4430 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L3832
L3765:
LBE677:
	.loc 7 4477 11
	movl	-16(%ebp), %eax
	.loc 7 4478 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2103:
	.def	__ZL15stbtt__cuberootf;	.scl	3;	.type	32;	.endef
__ZL15stbtt__cuberootf:
LFB2104:
	.loc 7 4481 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 4482 4
	flds	8(%ebp)
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3859
	.loc 7 4483 23
	flds	8(%ebp)
	fchs
	flds	LC212
	fstps	4(%esp)
	fstps	(%esp)
	call	__ZSt3powff
	fchs
	jmp	L3857
L3859:
	.loc 7 4485 23
	flds	LC212
	fstps	4(%esp)
	flds	8(%ebp)
	fstps	(%esp)
	call	__ZSt3powff
	nop
L3857:
	.loc 7 4486 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2104:
	.def	__ZL18stbtt__solve_cubicfffPf;	.scl	3;	.type	32;	.endef
__ZL18stbtt__solve_cubicfffPf:
LFB2105:
	.loc 7 4490 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$88, %esp
	.loc 7 4491 12
	flds	8(%ebp)
	fchs
	.loc 7 4491 8
	flds	LC144
	fdivrp	%st, %st(1)
	fstps	-12(%ebp)
	.loc 7 4492 17
	flds	8(%ebp)
	fmuls	8(%ebp)
	.loc 7 4492 20
	flds	LC144
	fdivrp	%st, %st(1)
	.loc 7 4492 8
	flds	12(%ebp)
	fsubp	%st, %st(1)
	fstps	-16(%ebp)
	.loc 7 4493 18
	flds	8(%ebp)
	fadd	%st(0), %st
	.loc 7 4493 20
	fmuls	8(%ebp)
	.loc 7 4493 26
	flds	12(%ebp)
	flds	LC213
	fmulp	%st, %st(1)
	.loc 7 4493 23
	fsubrp	%st, %st(1)
	.loc 7 4493 14
	fmuls	8(%ebp)
	.loc 7 4493 30
	flds	LC214
	fdivrp	%st, %st(1)
	.loc 7 4493 8
	flds	16(%ebp)
	faddp	%st, %st(1)
	fstps	-20(%ebp)
	.loc 7 4494 16
	flds	-16(%ebp)
	fmuls	-16(%ebp)
	.loc 7 4494 10
	flds	-16(%ebp)
	fmulp	%st, %st(1)
	fstps	-24(%ebp)
	.loc 7 4495 13
	flds	-20(%ebp)
	fmuls	-20(%ebp)
	.loc 7 4495 19
	flds	-24(%ebp)
	flds	LC200
	fmulp	%st, %st(1)
	.loc 7 4495 23
	flds	LC214
	fdivrp	%st, %st(1)
	.loc 7 4495 8
	faddp	%st, %st(1)
	fstps	-28(%ebp)
LBB692:
	.loc 7 4496 2
	fldz
	flds	-28(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3865
LBB693:
	.loc 7 4497 21
	flds	-28(%ebp)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fstps	-32(%ebp)
	.loc 7 4498 17
	flds	-32(%ebp)
	fsubs	-20(%ebp)
	.loc 7 4498 9
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-36(%ebp)
	.loc 7 4499 14
	flds	-20(%ebp)
	fchs
	.loc 7 4499 17
	fsubs	-32(%ebp)
	.loc 7 4499 9
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-40(%ebp)
	.loc 7 4500 22
	flds	-36(%ebp)
	fstps	(%esp)
	call	__ZL15stbtt__cuberootf
	fstps	-36(%ebp)
	.loc 7 4501 22
	flds	-40(%ebp)
	fstps	(%esp)
	call	__ZL15stbtt__cuberootf
	fstps	-40(%ebp)
	.loc 7 4502 12
	flds	-12(%ebp)
	fadds	-36(%ebp)
	.loc 7 4502 16
	fadds	-40(%ebp)
	.loc 7 4502 8
	movl	20(%ebp), %eax
	fstps	(%eax)
	.loc 7 4503 10
	movl	$1, %eax
	jmp	L3863
L3865:
LBE693:
LBB694:
	.loc 7 4505 23
	flds	-16(%ebp)
	fchs
	flds	LC144
	fdivrp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fstps	-44(%ebp)
	.loc 7 4506 23
	flds	LC215
	fdivs	-24(%ebp)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fchs
	fmuls	-20(%ebp)
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt4acosf
	.loc 7 4506 65
	flds	LC144
	fdivrp	%st, %st(1)
	fstps	-48(%ebp)
	.loc 7 4507 23
	flds	-48(%ebp)
	fstps	(%esp)
	call	__ZSt3cosf
	fstps	-52(%ebp)
	.loc 7 4508 25
	flds	-48(%ebp)
	fldl	LC216
	fsubrp	%st, %st(1)
	fstpl	(%esp)
	call	_cos
	.loc 7 4508 17
	fstps	-60(%ebp)
	flds	-60(%ebp)
	.loc 7 4508 13
	flds	LC217
	fmulp	%st, %st(1)
	fstps	-56(%ebp)
	.loc 7 4509 18
	flds	-44(%ebp)
	fadd	%st(0), %st
	.loc 7 4509 22
	fmuls	-52(%ebp)
	.loc 7 4509 14
	fadds	-12(%ebp)
	.loc 7 4509 10
	movl	20(%ebp), %eax
	fstps	(%eax)
	.loc 7 4510 23
	flds	-52(%ebp)
	fadds	-56(%ebp)
	.loc 7 4510 18
	fmuls	-44(%ebp)
	.loc 7 4510 8
	movl	20(%ebp), %eax
	addl	$4, %eax
	.loc 7 4510 14
	flds	-12(%ebp)
	fsubp	%st, %st(1)
	.loc 7 4510 10
	fstps	(%eax)
	.loc 7 4511 23
	flds	-52(%ebp)
	fsubs	-56(%ebp)
	.loc 7 4511 18
	fmuls	-44(%ebp)
	.loc 7 4511 8
	movl	20(%ebp), %eax
	addl	$8, %eax
	.loc 7 4511 14
	flds	-12(%ebp)
	fsubp	%st, %st(1)
	.loc 7 4511 10
	fstps	(%eax)
	.loc 7 4516 12
	movl	$3, %eax
L3863:
LBE694:
LBE692:
	.loc 7 4518 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2105:
	.section .rdata,"dr"
LC219:
	.ascii "i != 0\0"
	.text
	.globl	_stbtt_GetGlyphSDF
	.def	_stbtt_GetGlyphSDF;	.scl	2;	.type	32;	.endef
_stbtt_GetGlyphSDF:
LFB2106:
	.loc 7 4521 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$392, %esp
	movl	24(%ebp), %eax
	movb	%al, -332(%ebp)
	.loc 7 4522 10
	flds	12(%ebp)
	fstps	-40(%ebp)
	.loc 7 4522 27
	flds	12(%ebp)
	fstps	-44(%ebp)
	.loc 7 4527 4
	flds	12(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jp	L3867
	flds	12(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L3867
	.loc 7 4527 27 discriminator 1
	movl	$0, %eax
	jmp	L3972
L3867:
	.loc 7 4529 35
	leal	-284(%ebp), %eax
	movl	%eax, 36(%esp)
	leal	-280(%ebp), %eax
	movl	%eax, 32(%esp)
	leal	-276(%ebp), %eax
	movl	%eax, 28(%esp)
	leal	-272(%ebp), %eax
	movl	%eax, 24(%esp)
	fldz
	fstps	20(%esp)
	fldz
	fstps	16(%esp)
	flds	12(%ebp)
	fstps	12(%esp)
	flds	12(%ebp)
	fstps	8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphBitmapBoxSubpixel
	.loc 7 4532 12
	movl	-272(%ebp), %edx
	movl	-280(%ebp), %eax
	.loc 7 4532 4
	cmpl	%eax, %edx
	je	L3870
	.loc 7 4532 26 discriminator 1
	movl	-276(%ebp), %edx
	movl	-284(%ebp), %eax
	.loc 7 4532 19 discriminator 1
	cmpl	%eax, %edx
	jne	L3871
L3870:
	.loc 7 4533 14
	movl	$0, %eax
	jmp	L3972
L3871:
	.loc 7 4535 8
	movl	-272(%ebp), %eax
	subl	20(%ebp), %eax
	movl	%eax, -272(%ebp)
	.loc 7 4536 8
	movl	-276(%ebp), %eax
	subl	20(%ebp), %eax
	movl	%eax, -276(%ebp)
	.loc 7 4537 8
	movl	-280(%ebp), %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -280(%ebp)
	.loc 7 4538 8
	movl	-284(%ebp), %edx
	movl	20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -284(%ebp)
	.loc 7 4540 13
	movl	-280(%ebp), %edx
	movl	-272(%ebp), %eax
	.loc 7 4540 6
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -48(%ebp)
	.loc 7 4541 13
	movl	-284(%ebp), %edx
	movl	-276(%ebp), %eax
	.loc 7 4541 6
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -52(%ebp)
	.loc 7 4543 4
	cmpl	$0, 32(%ebp)
	je	L3872
	.loc 7 4543 24 discriminator 1
	movl	32(%ebp), %eax
	movl	-48(%ebp), %edx
	movl	%edx, (%eax)
L3872:
	.loc 7 4544 4
	cmpl	$0, 36(%ebp)
	je	L3873
	.loc 7 4544 24 discriminator 1
	movl	36(%ebp), %eax
	movl	-52(%ebp), %edx
	movl	%edx, (%eax)
L3873:
	.loc 7 4545 4
	cmpl	$0, 40(%ebp)
	je	L3874
	.loc 7 4545 24 discriminator 1
	movl	-272(%ebp), %edx
	movl	40(%ebp), %eax
	movl	%edx, (%eax)
L3874:
	.loc 7 4546 4
	cmpl	$0, 44(%ebp)
	je	L3875
	.loc 7 4546 24 discriminator 1
	movl	-276(%ebp), %edx
	movl	44(%ebp), %eax
	movl	%edx, (%eax)
L3875:
	.loc 7 4549 12
	flds	-44(%ebp)
	fchs
	fstps	-44(%ebp)
LBB695:
	.loc 7 4555 42
	leal	-288(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphShape
	movl	%eax, -56(%ebp)
	.loc 7 4556 32
	movl	-48(%ebp), %eax
	imull	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -60(%ebp)
	.loc 7 4557 30
	movl	-56(%ebp), %eax
	sall	$2, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -64(%ebp)
LBB696:
	.loc 7 4559 13
	movl	$0, -20(%ebp)
	.loc 7 4559 17
	movl	-56(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -24(%ebp)
L3886:
	.loc 7 4559 33 discriminator 1
	movl	-20(%ebp), %eax
	cmpl	-56(%ebp), %eax
	jge	L3876
LBB697:
LBB698:
	.loc 7 4560 21
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4560 23
	movzbl	12(%eax), %eax
	.loc 7 4560 10
	cmpb	$2, %al
	jne	L3877
LBB699:
	.loc 7 4561 31
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4561 33
	movzwl	(%eax), %eax
	.loc 7 4561 34
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	.loc 7 4561 19
	flds	-40(%ebp)
	fmulp	%st, %st(1)
	fstps	-68(%ebp)
	.loc 7 4561 56
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4561 58
	movzwl	2(%eax), %eax
	.loc 7 4561 59
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	.loc 7 4561 44
	flds	-44(%ebp)
	fmulp	%st, %st(1)
	fstps	-72(%ebp)
	.loc 7 4562 31
	movl	-288(%ebp), %edx
	movl	-24(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4562 33
	movzwl	(%eax), %eax
	.loc 7 4562 34
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	.loc 7 4562 19
	flds	-40(%ebp)
	fmulp	%st, %st(1)
	fstps	-76(%ebp)
	.loc 7 4562 56
	movl	-288(%ebp), %edx
	movl	-24(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4562 58
	movzwl	2(%eax), %eax
	.loc 7 4562 59
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	.loc 7 4562 44
	flds	-44(%ebp)
	fmulp	%st, %st(1)
	fstps	-80(%ebp)
	.loc 7 4563 34
	flds	-76(%ebp)
	fsubs	-68(%ebp)
	flds	-76(%ebp)
	fsubs	-68(%ebp)
	fmulp	%st, %st(1)
	flds	-80(%ebp)
	fsubs	-72(%ebp)
	flds	-80(%ebp)
	fsubs	-72(%ebp)
	fmulp	%st, %st(1)
	faddp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fstps	-84(%ebp)
	.loc 7 4564 41
	flds	-84(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jp	L3974
	flds	-84(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	je	L4011
L3974:
	.loc 7 4564 41 is_stmt 0 discriminator 1
	fld1
	fdivs	-84(%ebp)
	jmp	L3880
L4011:
	.loc 7 4564 41 discriminator 2
	fldz
L3880:
	.loc 7 4564 25 is_stmt 1 discriminator 4
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-64(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4564 27 discriminator 4
	fstps	(%eax)
LBE699:
	jmp	L3881
L3877:
LBB700:
LBB701:
	.loc 7 4565 28
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4565 30
	movzbl	12(%eax), %eax
	.loc 7 4565 17
	cmpb	$3, %al
	jne	L3882
LBB702:
	.loc 7 4566 31
	movl	-288(%ebp), %edx
	movl	-24(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4566 33
	movzwl	(%eax), %eax
	.loc 7 4566 35
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	.loc 7 4566 19
	flds	-40(%ebp)
	fmulp	%st, %st(1)
	fstps	-88(%ebp)
	.loc 7 4566 57
	movl	-288(%ebp), %edx
	movl	-24(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4566 59
	movzwl	2(%eax), %eax
	.loc 7 4566 61
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	.loc 7 4566 45
	flds	-44(%ebp)
	fmulp	%st, %st(1)
	fstps	-92(%ebp)
	.loc 7 4567 31
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4567 33
	movzwl	4(%eax), %eax
	.loc 7 4567 35
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	.loc 7 4567 19
	flds	-40(%ebp)
	fmulp	%st, %st(1)
	fstps	-96(%ebp)
	.loc 7 4567 57
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4567 59
	movzwl	6(%eax), %eax
	.loc 7 4567 61
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	.loc 7 4567 45
	flds	-44(%ebp)
	fmulp	%st, %st(1)
	fstps	-100(%ebp)
	.loc 7 4568 31
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4568 33
	movzwl	(%eax), %eax
	.loc 7 4568 35
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	.loc 7 4568 19
	flds	-40(%ebp)
	fmulp	%st, %st(1)
	fstps	-104(%ebp)
	.loc 7 4568 57
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4568 59
	movzwl	2(%eax), %eax
	.loc 7 4568 61
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	.loc 7 4568 45
	flds	-44(%ebp)
	fmulp	%st, %st(1)
	fstps	-108(%ebp)
	.loc 7 4569 30
	flds	-96(%ebp)
	fadd	%st(0), %st
	.loc 7 4569 27
	flds	-104(%ebp)
	fsubp	%st, %st(1)
	.loc 7 4569 19
	flds	-88(%ebp)
	faddp	%st, %st(1)
	fstps	-112(%ebp)
	.loc 7 4569 51
	flds	-100(%ebp)
	fadd	%st(0), %st
	.loc 7 4569 48
	flds	-108(%ebp)
	fsubp	%st, %st(1)
	.loc 7 4569 40
	flds	-92(%ebp)
	faddp	%st, %st(1)
	fstps	-116(%ebp)
	.loc 7 4570 28
	flds	-112(%ebp)
	fmuls	-112(%ebp)
	.loc 7 4570 36
	flds	-116(%ebp)
	fmuls	-116(%ebp)
	.loc 7 4570 19
	faddp	%st, %st(1)
	fstps	-120(%ebp)
	.loc 7 4571 13
	flds	-120(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jp	L3975
	flds	-120(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	je	L4012
L3975:
	.loc 7 4572 42
	flds	-112(%ebp)
	fmuls	-112(%ebp)
	.loc 7 4572 50
	flds	-116(%ebp)
	fmuls	-116(%ebp)
	.loc 7 4572 46
	faddp	%st, %st(1)
	.loc 7 4572 28
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-64(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4572 37
	fld1
	fdivp	%st, %st(1)
	.loc 7 4572 30
	fstps	(%eax)
	jmp	L3881
L4012:
	.loc 7 4574 28
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-64(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4574 30
	fldz
	fstps	(%eax)
	jmp	L3881
L3882:
LBE702:
	.loc 7 4576 25
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-64(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4576 27
	fldz
	fstps	(%eax)
L3881:
LBE701:
LBE700:
LBE698:
LBE697:
	.loc 7 4559 49 discriminator 2
	movl	-20(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -20(%ebp)
	.loc 7 4559 47 discriminator 2
	movl	%eax, -24(%ebp)
	.loc 7 4559 7 discriminator 2
	jmp	L3886
L3876:
LBE696:
LBB703:
	.loc 7 4579 13
	movl	-276(%ebp), %eax
	movl	%eax, -16(%ebp)
L3971:
	.loc 7 4579 21 discriminator 1
	movl	-284(%ebp), %eax
	cmpl	%eax, -16(%ebp)
	jge	L3887
LBB704:
LBB705:
	.loc 7 4580 16
	movl	-272(%ebp), %eax
	movl	%eax, -12(%ebp)
L3970:
	.loc 7 4580 24 discriminator 1
	movl	-280(%ebp), %eax
	cmpl	%eax, -12(%ebp)
	jge	L3888
LBB706:
	.loc 7 4582 19
	flds	LC218
	fstps	-32(%ebp)
	.loc 7 4583 24
	fildl	-12(%ebp)
	.loc 7 4583 19
	flds	LC22
	faddp	%st, %st(1)
	fstps	-124(%ebp)
	.loc 7 4584 24
	fildl	-16(%ebp)
	.loc 7 4584 19
	flds	LC22
	faddp	%st, %st(1)
	fstps	-128(%ebp)
	.loc 7 4585 19
	flds	-124(%ebp)
	fdivs	-40(%ebp)
	fstps	-132(%ebp)
	.loc 7 4586 19
	flds	-128(%ebp)
	fdivs	-44(%ebp)
	fstps	-136(%ebp)
	.loc 7 4588 53
	movl	-288(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, 8(%esp)
	flds	-136(%ebp)
	fstps	4(%esp)
	flds	-132(%ebp)
	fstps	(%esp)
	call	__ZL26stbtt__compute_crossings_xffiP12stbtt_vertex
	movl	%eax, -140(%ebp)
LBB707:
	.loc 7 4590 19
	movl	$0, -20(%ebp)
L3964:
	.loc 7 4590 25 discriminator 2
	movl	-20(%ebp), %eax
	cmpl	-56(%ebp), %eax
	jge	L3889
LBB708:
	.loc 7 4591 34
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4591 36
	movzwl	(%eax), %eax
	.loc 7 4591 37
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	fmuls	-40(%ebp)
	.loc 7 4591 22
	fstps	-292(%ebp)
	.loc 7 4591 59
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4591 61
	movzwl	2(%eax), %eax
	.loc 7 4591 62
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	fmuls	-44(%ebp)
	.loc 7 4591 47
	fstps	-296(%ebp)
	.loc 7 4594 33
	flds	-292(%ebp)
	fsubs	-124(%ebp)
	.loc 7 4594 41
	flds	-292(%ebp)
	fsubs	-124(%ebp)
	.loc 7 4594 37
	fmulp	%st, %st(1)
	.loc 7 4594 51
	flds	-296(%ebp)
	fsubs	-128(%ebp)
	.loc 7 4594 59
	flds	-296(%ebp)
	fsubs	-128(%ebp)
	.loc 7 4594 55
	fmulp	%st, %st(1)
	.loc 7 4594 22
	faddp	%st, %st(1)
	fstps	-144(%ebp)
	.loc 7 4595 36
	flds	-32(%ebp)
	fmuls	-32(%ebp)
	.loc 7 4595 16
	flds	-144(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3890
	.loc 7 4596 38
	flds	-144(%ebp)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fstps	-32(%ebp)
L3890:
LBB709:
	.loc 7 4598 27
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4598 29
	movzbl	12(%eax), %eax
	.loc 7 4598 16
	cmpb	$2, %al
	jne	L3892
LBB710:
	.loc 7 4599 39
	movl	-288(%ebp), %eax
	movl	-20(%ebp), %edx
	imull	$14, %edx, %edx
	subl	$14, %edx
	addl	%edx, %eax
	.loc 7 4599 41
	movzwl	(%eax), %eax
	.loc 7 4599 42
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	.loc 7 4599 25
	flds	-40(%ebp)
	fmulp	%st, %st(1)
	fstps	-148(%ebp)
	.loc 7 4599 66
	movl	-288(%ebp), %eax
	movl	-20(%ebp), %edx
	imull	$14, %edx, %edx
	subl	$14, %edx
	addl	%edx, %eax
	.loc 7 4599 68
	movzwl	2(%eax), %eax
	.loc 7 4599 69
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	.loc 7 4599 52
	flds	-44(%ebp)
	fmulp	%st, %st(1)
	fstps	-152(%ebp)
	.loc 7 4604 40
	flds	-292(%ebp)
	flds	-148(%ebp)
	fsubp	%st, %st(1)
	flds	-296(%ebp)
	fsubs	-128(%ebp)
	fmulp	%st, %st(1)
	flds	-296(%ebp)
	flds	-152(%ebp)
	fsubp	%st, %st(1)
	flds	-292(%ebp)
	fsubs	-124(%ebp)
	fmulp	%st, %st(1)
	fsubrp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt4fabsf
	.loc 7 4604 100
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-64(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	fmulp	%st, %st(1)
	fstps	-156(%ebp)
	.loc 7 4605 19
	cmpl	$0, -20(%ebp)
	jne	L3895
	.loc 7 4605 19 is_stmt 0 discriminator 2
	movl	$4605, 8(%esp)
	movl	$LC155, 4(%esp)
	movl	$LC219, (%esp)
	call	__assert
L3895:
LBB711:
	.loc 7 4606 19 is_stmt 1
	flds	-156(%ebp)
	flds	-32(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3901
LBB712:
	.loc 7 4610 35
	flds	-292(%ebp)
	.loc 7 4610 28
	flds	-148(%ebp)
	fsubp	%st, %st(1)
	fstps	-160(%ebp)
	.loc 7 4610 47
	flds	-296(%ebp)
	.loc 7 4610 40
	flds	-152(%ebp)
	fsubp	%st, %st(1)
	fstps	-164(%ebp)
	.loc 7 4611 35
	flds	-292(%ebp)
	.loc 7 4611 28
	fsubs	-124(%ebp)
	fstps	-168(%ebp)
	.loc 7 4611 47
	flds	-296(%ebp)
	.loc 7 4611 40
	fsubs	-128(%ebp)
	fstps	-172(%ebp)
	.loc 7 4614 36
	flds	-168(%ebp)
	fmuls	-160(%ebp)
	.loc 7 4614 44
	flds	-172(%ebp)
	fmuls	-164(%ebp)
	.loc 7 4614 40
	faddp	%st, %st(1)
	.loc 7 4614 32
	fchs
	.loc 7 4614 54
	flds	-160(%ebp)
	fmuls	-160(%ebp)
	.loc 7 4614 62
	flds	-164(%ebp)
	fmuls	-164(%ebp)
	.loc 7 4614 58
	faddp	%st, %st(1)
	.loc 7 4614 28
	fdivrp	%st, %st(1)
	fstps	-176(%ebp)
	.loc 7 4615 22
	fldz
	flds	-176(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3901
	.loc 7 4615 36 discriminator 1
	flds	-176(%ebp)
	fld1
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3901
	.loc 7 4616 34
	flds	-156(%ebp)
	fstps	-32(%ebp)
	jmp	L3901
L3892:
LBE712:
LBE711:
LBE710:
LBB713:
LBB714:
	.loc 7 4618 34
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4618 36
	movzbl	12(%eax), %eax
	.loc 7 4618 23
	cmpb	$3, %al
	jne	L3901
LBB715:
	.loc 7 4619 39
	movl	-288(%ebp), %eax
	movl	-20(%ebp), %edx
	imull	$14, %edx, %edx
	subl	$14, %edx
	addl	%edx, %eax
	.loc 7 4619 41
	movzwl	(%eax), %eax
	.loc 7 4619 43
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	fmuls	-40(%ebp)
	.loc 7 4619 25
	fstps	-300(%ebp)
	.loc 7 4619 67
	movl	-288(%ebp), %eax
	movl	-20(%ebp), %edx
	imull	$14, %edx, %edx
	subl	$14, %edx
	addl	%edx, %eax
	.loc 7 4619 69
	movzwl	2(%eax), %eax
	.loc 7 4619 71
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	fmuls	-44(%ebp)
	.loc 7 4619 53
	fstps	-304(%ebp)
	.loc 7 4620 39
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4620 41
	movzwl	4(%eax), %eax
	.loc 7 4620 43
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	fmuls	-40(%ebp)
	.loc 7 4620 25
	fstps	-308(%ebp)
	.loc 7 4620 67
	movl	-288(%ebp), %edx
	movl	-20(%ebp), %eax
	imull	$14, %eax, %eax
	addl	%edx, %eax
	.loc 7 4620 69
	movzwl	6(%eax), %eax
	.loc 7 4620 71
	movw	%ax, -340(%ebp)
	filds	-340(%ebp)
	fmuls	-44(%ebp)
	.loc 7 4620 53
	fstps	-312(%ebp)
	.loc 7 4621 34
	flds	-292(%ebp)
	flds	-308(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4013
	.loc 7 4621 34 is_stmt 0 discriminator 1
	flds	-292(%ebp)
	jmp	L3904
L4013:
	.loc 7 4621 34 discriminator 2
	flds	-308(%ebp)
L3904:
	.loc 7 4621 34 discriminator 4
	flds	-300(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4014
	.loc 7 4621 34 discriminator 5
	flds	-292(%ebp)
	flds	-308(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4015
	.loc 7 4621 34 discriminator 7
	flds	-292(%ebp)
	jmp	L3910
L4015:
	.loc 7 4621 34 discriminator 8
	flds	-308(%ebp)
	jmp	L3910
L4014:
	.loc 7 4621 34 discriminator 6
	flds	-300(%ebp)
L3910:
	.loc 7 4621 25 is_stmt 1 discriminator 12
	fstps	-180(%ebp)
	.loc 7 4622 34 discriminator 12
	flds	-296(%ebp)
	flds	-312(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4016
	.loc 7 4622 34 is_stmt 0 discriminator 1
	flds	-296(%ebp)
	jmp	L3913
L4016:
	.loc 7 4622 34 discriminator 2
	flds	-312(%ebp)
L3913:
	.loc 7 4622 34 discriminator 4
	flds	-304(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4017
	.loc 7 4622 34 discriminator 5
	flds	-296(%ebp)
	flds	-312(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4018
	.loc 7 4622 34 discriminator 7
	flds	-296(%ebp)
	jmp	L3919
L4018:
	.loc 7 4622 34 discriminator 8
	flds	-312(%ebp)
	jmp	L3919
L4017:
	.loc 7 4622 34 discriminator 6
	flds	-304(%ebp)
L3919:
	.loc 7 4622 25 is_stmt 1 discriminator 12
	fstps	-184(%ebp)
	.loc 7 4623 34 discriminator 12
	flds	-292(%ebp)
	flds	-308(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4019
	.loc 7 4623 34 is_stmt 0 discriminator 1
	flds	-308(%ebp)
	jmp	L3922
L4019:
	.loc 7 4623 34 discriminator 2
	flds	-292(%ebp)
L3922:
	.loc 7 4623 34 discriminator 4
	flds	-300(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4020
	.loc 7 4623 34 discriminator 5
	flds	-300(%ebp)
	jmp	L3925
L4020:
	.loc 7 4623 34 discriminator 6
	flds	-292(%ebp)
	flds	-308(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4021
	.loc 7 4623 34 discriminator 8
	flds	-308(%ebp)
	jmp	L3925
L4021:
	.loc 7 4623 34 discriminator 9
	flds	-292(%ebp)
L3925:
	.loc 7 4623 25 is_stmt 1 discriminator 12
	fstps	-188(%ebp)
	.loc 7 4624 34 discriminator 12
	flds	-296(%ebp)
	flds	-312(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4022
	.loc 7 4624 34 is_stmt 0 discriminator 1
	flds	-312(%ebp)
	jmp	L3931
L4022:
	.loc 7 4624 34 discriminator 2
	flds	-296(%ebp)
L3931:
	.loc 7 4624 34 discriminator 4
	flds	-304(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4023
	.loc 7 4624 34 discriminator 5
	flds	-304(%ebp)
	jmp	L3934
L4023:
	.loc 7 4624 34 discriminator 6
	flds	-296(%ebp)
	flds	-312(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4024
	.loc 7 4624 34 discriminator 8
	flds	-312(%ebp)
	jmp	L3934
L4024:
	.loc 7 4624 34 discriminator 9
	flds	-296(%ebp)
L3934:
	.loc 7 4624 25 is_stmt 1 discriminator 12
	fstps	-192(%ebp)
LBB716:
	.loc 7 4626 34 discriminator 12
	flds	-180(%ebp)
	fsubs	-32(%ebp)
	.loc 7 4626 19 discriminator 12
	flds	-124(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3901
	.loc 7 4626 58 discriminator 1
	flds	-188(%ebp)
	fadds	-32(%ebp)
	.loc 7 4626 44 discriminator 1
	flds	-124(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3901
	.loc 7 4626 82 discriminator 2
	flds	-184(%ebp)
	fsubs	-32(%ebp)
	.loc 7 4626 68 discriminator 2
	flds	-128(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3901
	.loc 7 4626 106 discriminator 3
	flds	-192(%ebp)
	fadds	-32(%ebp)
	.loc 7 4626 92 discriminator 3
	flds	-128(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3901
LBB717:
	.loc 7 4627 26
	movl	$0, -36(%ebp)
	.loc 7 4628 35
	flds	-308(%ebp)
	flds	-292(%ebp)
	.loc 7 4628 28
	fsubrp	%st, %st(1)
	fstps	-196(%ebp)
	.loc 7 4628 47
	flds	-312(%ebp)
	flds	-296(%ebp)
	.loc 7 4628 40
	fsubrp	%st, %st(1)
	fstps	-200(%ebp)
	.loc 7 4629 36
	flds	-292(%ebp)
	.loc 7 4629 39
	flds	-308(%ebp)
	fadd	%st(0), %st
	.loc 7 4629 36
	fsubrp	%st, %st(1)
	.loc 7 4629 43
	flds	-300(%ebp)
	.loc 7 4629 28
	faddp	%st, %st(1)
	fstps	-204(%ebp)
	.loc 7 4629 57
	flds	-296(%ebp)
	.loc 7 4629 60
	flds	-312(%ebp)
	fadd	%st(0), %st
	.loc 7 4629 57
	fsubrp	%st, %st(1)
	.loc 7 4629 64
	flds	-304(%ebp)
	.loc 7 4629 49
	faddp	%st, %st(1)
	fstps	-208(%ebp)
	.loc 7 4630 36
	flds	-292(%ebp)
	.loc 7 4630 28
	fsubs	-124(%ebp)
	fstps	-212(%ebp)
	.loc 7 4630 50
	flds	-296(%ebp)
	.loc 7 4630 42
	fsubs	-128(%ebp)
	fstps	-216(%ebp)
	.loc 7 4632 48
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-64(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4632 28
	flds	(%eax)
	fstps	-220(%ebp)
LBB718:
	.loc 7 4633 22
	flds	-220(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jp	L3943
	flds	-220(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L3943
LBB719:
	.loc 7 4634 40
	flds	-196(%ebp)
	fmuls	-204(%ebp)
	.loc 7 4634 48
	flds	-200(%ebp)
	fmuls	-208(%ebp)
	.loc 7 4634 44
	faddp	%st, %st(1)
	.loc 7 4634 31
	flds	LC144
	fmulp	%st, %st(1)
	fstps	-224(%ebp)
	.loc 7 4635 40
	flds	-196(%ebp)
	fmuls	-196(%ebp)
	.loc 7 4635 48
	flds	-200(%ebp)
	fmuls	-200(%ebp)
	.loc 7 4635 44
	faddp	%st, %st(1)
	.loc 7 4635 36
	fld	%st(0)
	faddp	%st, %st(1)
	.loc 7 4635 58
	flds	-212(%ebp)
	fmuls	-204(%ebp)
	.loc 7 4635 64
	flds	-216(%ebp)
	fmuls	-208(%ebp)
	.loc 7 4635 61
	faddp	%st, %st(1)
	.loc 7 4635 31
	faddp	%st, %st(1)
	fstps	-228(%ebp)
	.loc 7 4636 37
	flds	-212(%ebp)
	fmuls	-196(%ebp)
	.loc 7 4636 43
	flds	-216(%ebp)
	fmuls	-200(%ebp)
	.loc 7 4636 31
	faddp	%st, %st(1)
	fstps	-232(%ebp)
LBB720:
	.loc 7 4637 25
	flds	-224(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jp	L3945
	flds	-224(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L3945
	.loc 7 4638 28
	flds	-228(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jp	L3998
	flds	-228(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	je	L3951
L3998:
	.loc 7 4639 44
	flds	-232(%ebp)
	fchs
	.loc 7 4639 38
	movl	-36(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -36(%ebp)
	.loc 7 4639 46
	fdivs	-228(%ebp)
	.loc 7 4639 42
	fstps	-324(%ebp,%eax,4)
	jmp	L3951
L3945:
LBB721:
	.loc 7 4642 50
	flds	-228(%ebp)
	fmuls	-228(%ebp)
	.loc 7 4642 56
	flds	-224(%ebp)
	flds	LC200
	fmulp	%st, %st(1)
	.loc 7 4642 58
	fmuls	-232(%ebp)
	.loc 7 4642 34
	fsubrp	%st, %st(1)
	fstps	-236(%ebp)
LBB722:
	.loc 7 4643 28
	flds	-236(%ebp)
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4025
	.loc 7 4644 35
	movl	$0, -36(%ebp)
	jmp	L3951
L4025:
LBB723:
	.loc 7 4646 52
	flds	-236(%ebp)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fstps	-240(%ebp)
	.loc 7 4647 41
	flds	-228(%ebp)
	fchs
	.loc 7 4647 44
	fsubs	-240(%ebp)
	.loc 7 4647 54
	flds	-224(%ebp)
	fadd	%st(0), %st
	.loc 7 4647 51
	fdivrp	%st, %st(1)
	.loc 7 4647 38
	fstps	-324(%ebp)
	.loc 7 4648 44
	flds	-240(%ebp)
	fsubs	-228(%ebp)
	.loc 7 4648 54
	flds	-224(%ebp)
	fadd	%st(0), %st
	.loc 7 4648 51
	fdivrp	%st, %st(1)
	.loc 7 4648 38
	fstps	-320(%ebp)
	.loc 7 4649 35
	movl	$2, -36(%ebp)
	jmp	L3951
L3943:
LBE723:
LBE722:
LBE721:
LBE720:
LBE719:
LBB724:
	.loc 7 4653 40
	flds	-196(%ebp)
	fmuls	-204(%ebp)
	.loc 7 4653 48
	flds	-200(%ebp)
	fmuls	-208(%ebp)
	.loc 7 4653 44
	faddp	%st, %st(1)
	.loc 7 4653 36
	flds	LC144
	fmulp	%st, %st(1)
	.loc 7 4653 31
	flds	-220(%ebp)
	fmulp	%st, %st(1)
	fstps	-244(%ebp)
	.loc 7 4654 41
	flds	-196(%ebp)
	fmuls	-196(%ebp)
	.loc 7 4654 49
	flds	-200(%ebp)
	fmuls	-200(%ebp)
	.loc 7 4654 45
	faddp	%st, %st(1)
	.loc 7 4654 37
	fld	%st(0)
	faddp	%st, %st(1)
	.loc 7 4654 59
	flds	-212(%ebp)
	fmuls	-204(%ebp)
	.loc 7 4654 65
	flds	-216(%ebp)
	fmuls	-208(%ebp)
	.loc 7 4654 62
	faddp	%st, %st(1)
	.loc 7 4654 54
	faddp	%st, %st(1)
	.loc 7 4654 31
	flds	-220(%ebp)
	fmulp	%st, %st(1)
	fstps	-248(%ebp)
	.loc 7 4655 38
	flds	-212(%ebp)
	fmuls	-196(%ebp)
	.loc 7 4655 44
	flds	-216(%ebp)
	fmuls	-200(%ebp)
	.loc 7 4655 41
	faddp	%st, %st(1)
	.loc 7 4655 31
	flds	-220(%ebp)
	fmulp	%st, %st(1)
	fstps	-252(%ebp)
	.loc 7 4656 49
	leal	-324(%ebp), %eax
	movl	%eax, 12(%esp)
	flds	-252(%ebp)
	fstps	8(%esp)
	flds	-248(%ebp)
	fstps	4(%esp)
	flds	-244(%ebp)
	fstps	(%esp)
	call	__ZL18stbtt__solve_cubicfffPf
	movl	%eax, -36(%ebp)
L3951:
LBE724:
LBE718:
	.loc 7 4658 22
	cmpl	$0, -36(%ebp)
	jle	L3952
	.loc 7 4658 35 discriminator 1
	fldz
	.loc 7 4658 43 discriminator 1
	flds	-324(%ebp)
	.loc 7 4658 35 discriminator 1
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3952
	.loc 7 4658 61 discriminator 2
	flds	-324(%ebp)
	.loc 7 4658 53 discriminator 2
	fld1
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3952
	.loc 7 4659 27
	flds	-324(%ebp)
	fstps	-256(%ebp)
	.loc 7 4659 40
	fld1
	fsubs	-256(%ebp)
	fstps	-260(%ebp)
	.loc 7 4660 32
	flds	-260(%ebp)
	fmuls	-260(%ebp)
	.loc 7 4660 35
	flds	-292(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4660 42
	flds	-256(%ebp)
	fadd	%st(0), %st
	.loc 7 4660 44
	fmuls	-260(%ebp)
	.loc 7 4660 47
	flds	-308(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4660 39
	faddp	%st, %st(1)
	.loc 7 4660 54
	flds	-256(%ebp)
	fmuls	-256(%ebp)
	.loc 7 4660 56
	flds	-300(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4660 28
	faddp	%st, %st(1)
	fstps	-264(%ebp)
	.loc 7 4661 32
	flds	-260(%ebp)
	fmuls	-260(%ebp)
	.loc 7 4661 35
	flds	-296(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4661 42
	flds	-256(%ebp)
	fadd	%st(0), %st
	.loc 7 4661 44
	fmuls	-260(%ebp)
	.loc 7 4661 47
	flds	-312(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4661 39
	faddp	%st, %st(1)
	.loc 7 4661 54
	flds	-256(%ebp)
	fmuls	-256(%ebp)
	.loc 7 4661 56
	flds	-304(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4661 28
	faddp	%st, %st(1)
	fstps	-268(%ebp)
	.loc 7 4662 36
	flds	-264(%ebp)
	fsubs	-124(%ebp)
	.loc 7 4662 44
	flds	-264(%ebp)
	fsubs	-124(%ebp)
	.loc 7 4662 40
	fmulp	%st, %st(1)
	.loc 7 4662 54
	flds	-268(%ebp)
	fsubs	-128(%ebp)
	.loc 7 4662 62
	flds	-268(%ebp)
	fsubs	-128(%ebp)
	.loc 7 4662 58
	fmulp	%st, %st(1)
	.loc 7 4662 31
	faddp	%st, %st(1)
	fstps	-144(%ebp)
	.loc 7 4663 46
	flds	-32(%ebp)
	fmuls	-32(%ebp)
	.loc 7 4663 25
	flds	-144(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3952
	.loc 7 4664 47
	flds	-144(%ebp)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fstps	-32(%ebp)
L3952:
	.loc 7 4666 22
	cmpl	$1, -36(%ebp)
	jle	L3956
	.loc 7 4666 35 discriminator 1
	fldz
	.loc 7 4666 43 discriminator 1
	flds	-320(%ebp)
	.loc 7 4666 35 discriminator 1
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3956
	.loc 7 4666 61 discriminator 2
	flds	-320(%ebp)
	.loc 7 4666 53 discriminator 2
	fld1
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3956
	.loc 7 4667 27
	flds	-320(%ebp)
	fstps	-256(%ebp)
	.loc 7 4667 40
	fld1
	fsubs	-256(%ebp)
	fstps	-260(%ebp)
	.loc 7 4668 32
	flds	-260(%ebp)
	fmuls	-260(%ebp)
	.loc 7 4668 35
	flds	-292(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4668 42
	flds	-256(%ebp)
	fadd	%st(0), %st
	.loc 7 4668 44
	fmuls	-260(%ebp)
	.loc 7 4668 47
	flds	-308(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4668 39
	faddp	%st, %st(1)
	.loc 7 4668 54
	flds	-256(%ebp)
	fmuls	-256(%ebp)
	.loc 7 4668 56
	flds	-300(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4668 28
	faddp	%st, %st(1)
	fstps	-264(%ebp)
	.loc 7 4669 32
	flds	-260(%ebp)
	fmuls	-260(%ebp)
	.loc 7 4669 35
	flds	-296(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4669 42
	flds	-256(%ebp)
	fadd	%st(0), %st
	.loc 7 4669 44
	fmuls	-260(%ebp)
	.loc 7 4669 47
	flds	-312(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4669 39
	faddp	%st, %st(1)
	.loc 7 4669 54
	flds	-256(%ebp)
	fmuls	-256(%ebp)
	.loc 7 4669 56
	flds	-304(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4669 28
	faddp	%st, %st(1)
	fstps	-268(%ebp)
	.loc 7 4670 36
	flds	-264(%ebp)
	fsubs	-124(%ebp)
	.loc 7 4670 44
	flds	-264(%ebp)
	fsubs	-124(%ebp)
	.loc 7 4670 40
	fmulp	%st, %st(1)
	.loc 7 4670 54
	flds	-268(%ebp)
	fsubs	-128(%ebp)
	.loc 7 4670 62
	flds	-268(%ebp)
	fsubs	-128(%ebp)
	.loc 7 4670 58
	fmulp	%st, %st(1)
	.loc 7 4670 31
	faddp	%st, %st(1)
	fstps	-144(%ebp)
	.loc 7 4671 46
	flds	-32(%ebp)
	fmuls	-32(%ebp)
	.loc 7 4671 25
	flds	-144(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3956
	.loc 7 4672 47
	flds	-144(%ebp)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fstps	-32(%ebp)
L3956:
	.loc 7 4674 22
	cmpl	$2, -36(%ebp)
	jle	L3901
	.loc 7 4674 35 discriminator 1
	fldz
	.loc 7 4674 43 discriminator 1
	flds	-316(%ebp)
	.loc 7 4674 35 discriminator 1
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3901
	.loc 7 4674 61 discriminator 2
	flds	-316(%ebp)
	.loc 7 4674 53 discriminator 2
	fld1
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L3901
	.loc 7 4675 27
	flds	-316(%ebp)
	fstps	-256(%ebp)
	.loc 7 4675 40
	fld1
	fsubs	-256(%ebp)
	fstps	-260(%ebp)
	.loc 7 4676 32
	flds	-260(%ebp)
	fmuls	-260(%ebp)
	.loc 7 4676 35
	flds	-292(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4676 42
	flds	-256(%ebp)
	fadd	%st(0), %st
	.loc 7 4676 44
	fmuls	-260(%ebp)
	.loc 7 4676 47
	flds	-308(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4676 39
	faddp	%st, %st(1)
	.loc 7 4676 54
	flds	-256(%ebp)
	fmuls	-256(%ebp)
	.loc 7 4676 56
	flds	-300(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4676 28
	faddp	%st, %st(1)
	fstps	-264(%ebp)
	.loc 7 4677 32
	flds	-260(%ebp)
	fmuls	-260(%ebp)
	.loc 7 4677 35
	flds	-296(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4677 42
	flds	-256(%ebp)
	fadd	%st(0), %st
	.loc 7 4677 44
	fmuls	-260(%ebp)
	.loc 7 4677 47
	flds	-312(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4677 39
	faddp	%st, %st(1)
	.loc 7 4677 54
	flds	-256(%ebp)
	fmuls	-256(%ebp)
	.loc 7 4677 56
	flds	-304(%ebp)
	fmulp	%st, %st(1)
	.loc 7 4677 28
	faddp	%st, %st(1)
	fstps	-268(%ebp)
	.loc 7 4678 36
	flds	-264(%ebp)
	fsubs	-124(%ebp)
	.loc 7 4678 44
	flds	-264(%ebp)
	fsubs	-124(%ebp)
	.loc 7 4678 40
	fmulp	%st, %st(1)
	.loc 7 4678 54
	flds	-268(%ebp)
	fsubs	-128(%ebp)
	.loc 7 4678 62
	flds	-268(%ebp)
	fsubs	-128(%ebp)
	.loc 7 4678 58
	fmulp	%st, %st(1)
	.loc 7 4678 31
	faddp	%st, %st(1)
	fstps	-144(%ebp)
	.loc 7 4679 46
	flds	-32(%ebp)
	fmuls	-32(%ebp)
	.loc 7 4679 25
	flds	-144(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3901
	.loc 7 4680 47
	flds	-144(%ebp)
	fstps	(%esp)
	call	__ZSt4sqrtf
	fstps	-32(%ebp)
L3901:
LBE717:
LBE716:
LBE715:
LBE714:
LBE713:
LBE709:
LBE708:
	.loc 7 4590 13 discriminator 6
	addl	$1, -20(%ebp)
	jmp	L3964
L3889:
LBE707:
	.loc 7 4685 13
	cmpl	$0, -140(%ebp)
	jne	L3965
	.loc 7 4686 25
	flds	-32(%ebp)
	fchs
	fstps	-32(%ebp)
L3965:
	.loc 7 4687 32
	movzbl	-332(%ebp), %eax
	movl	%eax, -340(%ebp)
	fildl	-340(%ebp)
	.loc 7 4687 51
	flds	28(%ebp)
	fmuls	-32(%ebp)
	.loc 7 4687 17
	faddp	%st, %st(1)
	fstps	-28(%ebp)
	.loc 7 4688 13
	flds	-28(%ebp)
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4026
	.loc 7 4689 20
	fldz
	fstps	-28(%ebp)
	jmp	L3968
L4026:
	.loc 7 4690 18
	flds	LC41
	flds	-28(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L3968
	.loc 7 4691 20
	flds	LC41
	fstps	-28(%ebp)
L3968:
	.loc 7 4692 20 discriminator 2
	movl	-276(%ebp), %eax
	movl	-16(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 7 4692 25 discriminator 2
	imull	-48(%ebp), %eax
	.loc 7 4692 30 discriminator 2
	movl	-272(%ebp), %edx
	movl	-12(%ebp), %ecx
	subl	%edx, %ecx
	movl	%ecx, %edx
	.loc 7 4692 27 discriminator 2
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 7 4692 35 discriminator 2
	movl	-60(%ebp), %eax
	addl	%eax, %edx
	.loc 7 4692 39 discriminator 2
	flds	-28(%ebp)
	fnstcw	-330(%ebp)
	movzwl	-330(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -334(%ebp)
	fldcw	-334(%ebp)
	fistps	-336(%ebp)
	fldcw	-330(%ebp)
	movzwl	-336(%ebp), %eax
	.loc 7 4692 37 discriminator 2
	movb	%al, (%edx)
LBE706:
	.loc 7 4580 10 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L3970
L3888:
LBE705:
LBE704:
	.loc 7 4579 7 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L3971
L3887:
LBE703:
	.loc 7 4695 7
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 4696 7
	movl	-288(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
LBE695:
	.loc 7 4698 11
	movl	-60(%ebp), %eax
L3972:
	.loc 7 4699 1 discriminator 7
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2106:
	.globl	_stbtt_GetCodepointSDF
	.def	_stbtt_GetCodepointSDF;	.scl	2;	.type	32;	.endef
_stbtt_GetCodepointSDF:
LFB2107:
	.loc 7 4702 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$68, %esp
	.cfi_offset 3, -12
	movl	24(%ebp), %eax
	movb	%al, -12(%ebp)
	.loc 7 4703 28
	movzbl	-12(%ebp), %ebx
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_FindGlyphIndex
	movl	%eax, %edx
	movl	44(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 24(%esp)
	flds	28(%ebp)
	fstps	20(%esp)
	movl	%ebx, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	flds	12(%ebp)
	fstps	4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetGlyphSDF
	.loc 7 4704 1
	addl	$68, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2107:
	.globl	_stbtt_FreeSDF
	.def	_stbtt_FreeSDF;	.scl	2;	.type	32;	.endef
_stbtt_FreeSDF:
LFB2108:
	.loc 7 4707 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 4708 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 7 4709 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2108:
	.def	__ZL42stbtt__CompareUTF8toUTF16_bigendian_prefixPhiS_i;	.scl	3;	.type	32;	.endef
__ZL42stbtt__CompareUTF8toUTF16_bigendian_prefixPhiS_i:
LFB2109:
	.loc 7 4718 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 7 4719 16
	movl	$0, -4(%ebp)
L4050:
	.loc 7 4722 11
	cmpl	$0, 20(%ebp)
	je	L4031
LBB725:
	.loc 7 4723 29
	movl	16(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 7 4723 35
	movzbl	%al, %eax
	sall	$8, %eax
	movl	%eax, %edx
	.loc 7 4723 41
	movl	16(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 4723 35
	addl	%edx, %eax
	.loc 7 4723 20
	movw	%ax, -8(%ebp)
LBB726:
	.loc 7 4724 14
	movzwl	-8(%ebp), %eax
	.loc 7 4724 7
	cmpw	$127, %ax
	ja	L4032
	.loc 7 4725 10
	movl	-4(%ebp), %eax
	cmpl	12(%ebp), %eax
	jl	L4033
	.loc 7 4725 33 discriminator 1
	movl	$-1, %eax
	jmp	L4051
L4033:
	.loc 7 4726 18
	movl	-4(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -4(%ebp)
	movl	%eax, %edx
	.loc 7 4726 20
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	.loc 7 4726 22
	movzwl	-8(%ebp), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %edx
	setne	%al
	.loc 7 4726 10
	testb	%al, %al
	je	L4035
	.loc 7 4726 37 discriminator 1
	movl	$-1, %eax
	jmp	L4051
L4032:
LBB727:
LBB728:
	.loc 7 4727 21
	movzwl	-8(%ebp), %eax
	.loc 7 4727 14
	cmpw	$2047, %ax
	ja	L4036
	.loc 7 4728 15
	movl	-4(%ebp), %eax
	addl	$1, %eax
	.loc 7 4728 10
	cmpl	%eax, 12(%ebp)
	jg	L4037
	.loc 7 4728 35 discriminator 1
	movl	$-1, %eax
	jmp	L4051
L4037:
	.loc 7 4729 18
	movl	-4(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -4(%ebp)
	movl	%eax, %edx
	.loc 7 4729 20
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 4729 36
	movzwl	-8(%ebp), %edx
	movzwl	%dx, %edx
	sarl	$6, %edx
	.loc 7 4729 30
	addl	$192, %edx
	.loc 7 4729 22
	cmpl	%edx, %eax
	setne	%al
	.loc 7 4729 10
	testb	%al, %al
	je	L4038
	.loc 7 4729 51 discriminator 1
	movl	$-1, %eax
	jmp	L4051
L4038:
	.loc 7 4730 18
	movl	-4(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -4(%ebp)
	movl	%eax, %edx
	.loc 7 4730 20
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 4730 36
	movzwl	-8(%ebp), %edx
	movzwl	%dx, %edx
	andl	$63, %edx
	.loc 7 4730 30
	subl	$-128, %edx
	.loc 7 4730 22
	cmpl	%edx, %eax
	setne	%al
	.loc 7 4730 10
	testb	%al, %al
	je	L4035
	.loc 7 4730 53 discriminator 1
	movl	$-1, %eax
	jmp	L4051
L4036:
LBB729:
LBB730:
	.loc 7 4731 21
	movzwl	-8(%ebp), %eax
	.loc 7 4731 14
	cmpw	$-10241, %ax
	jbe	L4039
	.loc 7 4731 37 discriminator 1
	movzwl	-8(%ebp), %eax
	.loc 7 4731 31 discriminator 1
	cmpw	$-9217, %ax
	ja	L4039
LBB731:
	.loc 7 4733 33
	movl	16(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	.loc 7 4733 39
	movzbl	%al, %eax
	sall	$8, %eax
	movl	%eax, %edx
	.loc 7 4733 45
	movl	16(%ebp), %eax
	addl	$3, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 4733 23
	addl	%edx, %eax
	movw	%ax, -6(%ebp)
	.loc 7 4734 15
	movl	-4(%ebp), %eax
	addl	$3, %eax
	.loc 7 4734 10
	cmpl	%eax, 12(%ebp)
	jg	L4040
	.loc 7 4734 35 discriminator 1
	movl	$-1, %eax
	jmp	L4051
L4040:
	.loc 7 4735 19
	movzwl	-8(%ebp), %eax
	movzwl	%ax, %eax
	subl	$55296, %eax
	.loc 7 4735 29
	sall	$10, %eax
	movl	%eax, %edx
	.loc 7 4735 43
	movzwl	-6(%ebp), %eax
	subl	$56320, %eax
	.loc 7 4735 36
	addl	%edx, %eax
	.loc 7 4735 53
	addl	$65536, %eax
	.loc 7 4735 12
	movl	%eax, -12(%ebp)
	.loc 7 4736 18
	movl	-4(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -4(%ebp)
	movl	%eax, %edx
	.loc 7 4736 20
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 4736 35
	movl	-12(%ebp), %edx
	shrl	$18, %edx
	.loc 7 4736 30
	addl	$240, %edx
	.loc 7 4736 22
	cmpl	%edx, %eax
	setne	%al
	.loc 7 4736 10
	testb	%al, %al
	je	L4042
	.loc 7 4736 51 discriminator 1
	movl	$-1, %eax
	jmp	L4041
L4042:
	.loc 7 4737 18
	movl	-4(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -4(%ebp)
	movl	%eax, %edx
	.loc 7 4737 20
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 4737 36
	movl	-12(%ebp), %edx
	shrl	$12, %edx
	.loc 7 4737 43
	andl	$63, %edx
	.loc 7 4737 30
	subl	$-128, %edx
	.loc 7 4737 22
	cmpl	%edx, %eax
	setne	%al
	.loc 7 4737 10
	testb	%al, %al
	je	L4043
	.loc 7 4737 60 discriminator 1
	movl	$-1, %eax
	jmp	L4041
L4043:
	.loc 7 4738 18
	movl	-4(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -4(%ebp)
	movl	%eax, %edx
	.loc 7 4738 20
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 4738 36
	movl	-12(%ebp), %edx
	shrl	$6, %edx
	.loc 7 4738 43
	andl	$63, %edx
	.loc 7 4738 30
	subl	$-128, %edx
	.loc 7 4738 22
	cmpl	%edx, %eax
	setne	%al
	.loc 7 4738 10
	testb	%al, %al
	je	L4044
	.loc 7 4738 60 discriminator 1
	movl	$-1, %eax
	jmp	L4041
L4044:
	.loc 7 4739 18
	movl	-4(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -4(%ebp)
	movl	%eax, %edx
	.loc 7 4739 20
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 4739 43
	movl	-12(%ebp), %edx
	andl	$63, %edx
	.loc 7 4739 30
	subl	$-128, %edx
	.loc 7 4739 22
	cmpl	%edx, %eax
	setne	%al
	.loc 7 4739 10
	testb	%al, %al
	je	L4045
	.loc 7 4739 60 discriminator 1
	movl	$-1, %eax
	jmp	L4041
L4045:
	.loc 7 4740 13
	addl	$2, 16(%ebp)
	.loc 7 4741 15
	subl	$2, 20(%ebp)
LBE731:
	.loc 7 4741 19
	jmp	L4035
L4041:
LBE730:
LBE729:
LBE728:
LBE727:
LBE726:
	.loc 7 4725 33 discriminator 2
	jmp	L4051
L4039:
LBB736:
LBB735:
LBB734:
LBB733:
LBB732:
	.loc 7 4742 21
	movzwl	-8(%ebp), %eax
	.loc 7 4742 14
	cmpw	$-9217, %ax
	jbe	L4046
	.loc 7 4742 37 discriminator 1
	movzwl	-8(%ebp), %eax
	.loc 7 4742 31 discriminator 1
	cmpw	$-8193, %ax
	ja	L4046
	.loc 7 4743 18
	movl	$-1, %eax
	jmp	L4051
L4046:
	.loc 7 4745 15
	movl	-4(%ebp), %eax
	addl	$2, %eax
	.loc 7 4745 10
	cmpl	%eax, 12(%ebp)
	jg	L4047
	.loc 7 4745 35 discriminator 1
	movl	$-1, %eax
	jmp	L4051
L4047:
	.loc 7 4746 18
	movl	-4(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -4(%ebp)
	movl	%eax, %edx
	.loc 7 4746 20
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 4746 36
	movzwl	-8(%ebp), %edx
	movzwl	%dx, %edx
	sarl	$12, %edx
	.loc 7 4746 30
	addl	$224, %edx
	.loc 7 4746 22
	cmpl	%edx, %eax
	setne	%al
	.loc 7 4746 10
	testb	%al, %al
	je	L4048
	.loc 7 4746 52 discriminator 1
	movl	$-1, %eax
	jmp	L4051
L4048:
	.loc 7 4747 18
	movl	-4(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -4(%ebp)
	movl	%eax, %edx
	.loc 7 4747 20
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 4747 37
	movzwl	-8(%ebp), %edx
	movzwl	%dx, %edx
	sarl	$6, %edx
	.loc 7 4747 43
	andl	$63, %edx
	.loc 7 4747 30
	subl	$-128, %edx
	.loc 7 4747 22
	cmpl	%edx, %eax
	setne	%al
	.loc 7 4747 10
	testb	%al, %al
	je	L4049
	.loc 7 4747 60 discriminator 1
	movl	$-1, %eax
	jmp	L4051
L4049:
	.loc 7 4748 18
	movl	-4(%ebp), %eax
	leal	1(%eax), %edx
	movl	%edx, -4(%ebp)
	movl	%eax, %edx
	.loc 7 4748 20
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 7 4748 43
	movzwl	-8(%ebp), %edx
	movzwl	%dx, %edx
	andl	$63, %edx
	.loc 7 4748 30
	subl	$-128, %edx
	.loc 7 4748 22
	cmpl	%edx, %eax
	setne	%al
	.loc 7 4748 10
	testb	%al, %al
	je	L4035
	.loc 7 4748 60 discriminator 1
	movl	$-1, %eax
	jmp	L4051
L4035:
LBE732:
LBE733:
LBE734:
LBE735:
LBE736:
	.loc 7 4750 10 discriminator 1
	addl	$2, 16(%ebp)
	.loc 7 4751 12 discriminator 1
	subl	$2, 20(%ebp)
LBE725:
	.loc 7 4722 4 discriminator 1
	jmp	L4050
L4031:
	.loc 7 4753 11
	movl	-4(%ebp), %eax
L4051:
	.loc 7 4754 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2109:
	.def	__ZL43stbtt_CompareUTF8toUTF16_bigendian_internalPciS_i;	.scl	3;	.type	32;	.endef
__ZL43stbtt_CompareUTF8toUTF16_bigendian_internalPciS_i:
LFB2110:
	.loc 7 4757 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 7 4758 61
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL42stbtt__CompareUTF8toUTF16_bigendian_prefixPhiS_i
	.loc 7 4758 16
	cmpl	%eax, 12(%ebp)
	sete	%al
	.loc 7 4758 110
	movzbl	%al, %eax
	.loc 7 4759 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2110:
	.section .rdata,"dr"
LC220:
	.ascii "name\0"
	.text
	.globl	_stbtt_GetFontNameString
	.def	_stbtt_GetFontNameString;	.scl	2;	.type	32;	.endef
_stbtt_GetFontNameString:
LFB2111:
	.loc 7 4764 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 4766 17
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 7 4767 32
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 7 4767 17
	movl	%eax, -20(%ebp)
	.loc 7 4768 39
	movl	$LC220, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, -24(%ebp)
	.loc 7 4769 4
	cmpl	$0, -24(%ebp)
	jne	L4055
	.loc 7 4769 20 discriminator 1
	movl	$0, %eax
	jmp	L4056
L4055:
	.loc 7 4771 26
	movl	-24(%ebp), %eax
	leal	2(%eax), %edx
	.loc 7 4771 20
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 4771 10
	movzwl	%ax, %eax
	movl	%eax, -28(%ebp)
	.loc 7 4772 38
	movl	-24(%ebp), %eax
	leal	4(%eax), %edx
	.loc 7 4772 32
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %edx
	.loc 7 4772 22
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4772 17
	movl	%eax, -32(%ebp)
LBB737:
	.loc 7 4773 10
	movl	$0, -12(%ebp)
L4061:
	.loc 7 4773 16 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jge	L4057
LBB738:
	.loc 7 4774 38
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	.loc 7 4774 33
	movl	%eax, %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4774 20
	addl	$6, %eax
	movl	%eax, -36(%ebp)
	.loc 7 4775 33
	movl	-16(%ebp), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 4776 47
	cmpl	%eax, 16(%ebp)
	jne	L4058
	.loc 7 4775 76
	movl	-36(%ebp), %eax
	leal	2(%eax), %edx
	.loc 7 4775 69
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 4775 44
	cmpl	%eax, 20(%ebp)
	jne	L4058
	.loc 7 4776 43 discriminator 3
	movl	-36(%ebp), %eax
	leal	4(%eax), %edx
	.loc 7 4776 36 discriminator 3
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 4776 11 discriminator 3
	cmpl	%eax, 24(%ebp)
	jne	L4058
	.loc 7 4776 75 discriminator 2
	movl	-36(%ebp), %eax
	leal	6(%eax), %edx
	.loc 7 4776 68 discriminator 2
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 4776 47 discriminator 2
	cmpl	%eax, 28(%ebp)
	jne	L4058
	.loc 7 4776 47 is_stmt 0 discriminator 4
	movl	$1, %eax
	jmp	L4059
L4058:
	.loc 7 4776 47 discriminator 5
	movl	$0, %eax
L4059:
	.loc 7 4775 7 is_stmt 1 discriminator 7
	testb	%al, %al
	je	L4060
	.loc 7 4777 35
	movl	-36(%ebp), %eax
	leal	8(%eax), %edx
	.loc 7 4777 28
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %edx
	.loc 7 4777 18
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 7 4778 64
	movl	-36(%ebp), %eax
	leal	10(%eax), %edx
	.loc 7 4778 57
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %edx
	.loc 7 4778 48
	movl	-32(%ebp), %eax
	addl	%eax, %edx
	.loc 7 4778 68
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	jmp	L4056
L4060:
LBE738:
	.loc 7 4773 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4061
L4057:
LBE737:
	.loc 7 4781 11
	movl	$0, %eax
L4056:
	.loc 7 4782 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2111:
	.def	__ZL16stbtt__matchpairPhjS_iii;	.scl	3;	.type	32;	.endef
__ZL16stbtt__matchpairPhjS_iii:
LFB2112:
	.loc 7 4785 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$68, %esp
	.cfi_offset 3, -12
	.loc 7 4787 38
	movl	12(%ebp), %eax
	leal	2(%eax), %edx
	.loc 7 4787 32
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 4787 40
	movzwl	%ax, %eax
	movl	%eax, -16(%ebp)
	.loc 7 4788 50
	movl	12(%ebp), %eax
	leal	4(%eax), %edx
	.loc 7 4788 44
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %edx
	.loc 7 4788 34
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4788 52
	movl	%eax, -20(%ebp)
LBB739:
	.loc 7 4790 10
	movl	$0, -12(%ebp)
L4073:
	.loc 7 4790 16 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jge	L4063
LBB740:
	.loc 7 4791 38
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	sall	$2, %eax
	.loc 7 4791 33
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 7 4791 20
	addl	$6, %eax
	movl	%eax, -24(%ebp)
	.loc 7 4792 39
	movl	-24(%ebp), %eax
	leal	6(%eax), %edx
	.loc 7 4792 32
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 4792 41
	movzwl	%ax, %eax
	movl	%eax, -28(%ebp)
LBB741:
	.loc 7 4793 7
	movl	-28(%ebp), %eax
	cmpl	24(%ebp), %eax
	jne	L4064
LBB742:
	.loc 7 4795 41
	movl	8(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 4795 50
	movzwl	%ax, %eax
	movl	%eax, -32(%ebp)
	.loc 7 4795 79
	movl	-24(%ebp), %eax
	leal	2(%eax), %edx
	.loc 7 4795 72
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 4795 81
	movzwl	%ax, %eax
	movl	%eax, -36(%ebp)
	.loc 7 4795 110
	movl	-24(%ebp), %eax
	leal	4(%eax), %edx
	.loc 7 4795 103
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 4795 112
	movzwl	%ax, %eax
	movl	%eax, -40(%ebp)
LBB743:
	.loc 7 4798 10
	cmpl	$0, -32(%ebp)
	je	L4065
	.loc 7 4798 28 discriminator 1
	cmpl	$3, -32(%ebp)
	jne	L4066
	.loc 7 4798 46 discriminator 2
	cmpl	$1, -36(%ebp)
	je	L4065
L4066:
	.loc 7 4798 64 discriminator 4
	cmpl	$3, -32(%ebp)
	jne	L4064
	.loc 7 4798 82 discriminator 5
	cmpl	$10, -36(%ebp)
	jne	L4064
L4065:
LBB744:
	.loc 7 4799 47
	movl	-24(%ebp), %eax
	leal	8(%eax), %edx
	.loc 7 4799 40
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 4799 49
	movzwl	%ax, %eax
	movl	%eax, -44(%ebp)
	.loc 7 4800 46
	movl	-24(%ebp), %eax
	leal	10(%eax), %edx
	.loc 7 4800 39
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 4800 49
	movzwl	%ax, %eax
	movl	%eax, -48(%ebp)
	.loc 7 4803 106
	movl	-20(%ebp), %edx
	movl	-48(%ebp), %eax
	addl	%eax, %edx
	.loc 7 4803 78
	movl	8(%ebp), %eax
	addl	%eax, %edx
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL42stbtt__CompareUTF8toUTF16_bigendian_prefixPhiS_i
	movl	%eax, -52(%ebp)
	.loc 7 4804 13
	cmpl	$0, -52(%ebp)
	js	L4064
	.loc 7 4806 21
	movl	-12(%ebp), %eax
	addl	$1, %eax
	.loc 7 4806 140
	cmpl	%eax, -16(%ebp)
	jle	L4068
	.loc 7 4806 53 discriminator 1
	movl	-24(%ebp), %eax
	leal	18(%eax), %edx
	.loc 7 4806 43 discriminator 1
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 4806 32 discriminator 1
	cmpl	%eax, 28(%ebp)
	jne	L4068
	.loc 7 4806 86 discriminator 3
	movl	-24(%ebp), %eax
	leal	12(%eax), %edx
	.loc 7 4806 79 discriminator 3
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 4806 68 discriminator 3
	cmpl	%eax, -32(%ebp)
	jne	L4068
	.loc 7 4806 124 discriminator 5
	movl	-24(%ebp), %eax
	leal	14(%eax), %edx
	.loc 7 4806 114 discriminator 5
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 4806 103 discriminator 5
	cmpl	%eax, -36(%ebp)
	jne	L4068
	.loc 7 4806 161 discriminator 7
	movl	-24(%ebp), %eax
	leal	16(%eax), %edx
	.loc 7 4806 151 discriminator 7
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	movzwl	%ax, %eax
	.loc 7 4806 140 discriminator 7
	cmpl	%eax, -40(%ebp)
	jne	L4068
	.loc 7 4806 140 is_stmt 0 discriminator 9
	movl	$1, %eax
	jmp	L4069
L4068:
	.loc 7 4806 140 discriminator 10
	movl	$0, %eax
L4069:
	.loc 7 4806 16 is_stmt 1 discriminator 12
	testb	%al, %al
	je	L4070
	.loc 7 4807 44
	movl	-24(%ebp), %eax
	leal	20(%eax), %edx
	.loc 7 4807 34
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 4807 24
	movzwl	%ax, %eax
	movl	%eax, -44(%ebp)
	.loc 7 4808 43
	movl	-24(%ebp), %eax
	leal	22(%eax), %edx
	.loc 7 4808 33
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 4808 23
	movzwl	%ax, %eax
	movl	%eax, -48(%ebp)
	.loc 7 4809 19
	cmpl	$0, -44(%ebp)
	jne	L4071
	.loc 7 4810 22
	movl	-52(%ebp), %eax
	cmpl	20(%ebp), %eax
	jne	L4064
	.loc 7 4811 32
	movl	$1, %eax
	jmp	L4072
L4071:
	.loc 7 4812 26
	movl	-52(%ebp), %eax
	cmpl	20(%ebp), %eax
	jge	L4064
	.loc 7 4812 62 discriminator 1
	movl	-52(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 7 4812 46 discriminator 1
	cmpb	$32, %al
	jne	L4064
	.loc 7 4813 22
	addl	$1, -52(%ebp)
	.loc 7 4814 133
	movl	-20(%ebp), %edx
	movl	-48(%ebp), %eax
	addl	%eax, %edx
	movl	8(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 7 4814 69
	movl	20(%ebp), %eax
	subl	-52(%ebp), %eax
	movl	-52(%ebp), %ecx
	.loc 7 4814 83
	movl	16(%ebp), %edx
	addl	%edx, %ecx
	.loc 7 4814 69
	movl	-44(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%ebx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	__ZL43stbtt_CompareUTF8toUTF16_bigendian_internalPciS_i
	.loc 7 4814 144
	testl	%eax, %eax
	setne	%al
	.loc 7 4814 22
	testb	%al, %al
	je	L4064
	.loc 7 4815 32
	movl	$1, %eax
	jmp	L4072
L4070:
	.loc 7 4819 19
	movl	-52(%ebp), %eax
	cmpl	20(%ebp), %eax
	jne	L4064
	.loc 7 4820 29
	movl	$1, %eax
	jmp	L4072
L4064:
LBE744:
LBE743:
LBE742:
LBE741:
LBE740:
	.loc 7 4790 4 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4073
L4063:
LBE739:
	.loc 7 4828 11
	movl	$0, %eax
L4072:
	.loc 7 4829 1
	addl	$68, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2112:
	.def	__ZL14stbtt__matchesPhjS_i;	.scl	3;	.type	32;	.endef
__ZL14stbtt__matchesPhjS_i:
LFB2113:
	.loc 7 4832 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 4833 37
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	_strlen
	.loc 7 4833 16
	movl	%eax, -12(%ebp)
	.loc 7 4835 22
	movl	8(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL13stbtt__isfontPh
	.loc 7 4835 8
	testl	%eax, %eax
	sete	%al
	.loc 7 4835 4
	testb	%al, %al
	je	L4075
	.loc 7 4835 42 discriminator 1
	movl	$0, %eax
	jmp	L4076
L4075:
	.loc 7 4838 4
	cmpl	$0, 20(%ebp)
	je	L4077
	.loc 7 4839 29
	movl	$LC165, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, -16(%ebp)
	.loc 7 4840 26
	movl	-16(%ebp), %eax
	leal	44(%eax), %edx
	.loc 7 4840 20
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, (%esp)
	call	__ZL8ttUSHORTPh
	.loc 7 4840 31
	movzwl	%ax, %eax
	.loc 7 4840 36
	xorl	20(%ebp), %eax
	andl	$7, %eax
	testl	%eax, %eax
	setne	%al
	.loc 7 4840 7
	testb	%al, %al
	je	L4077
	.loc 7 4840 59 discriminator 1
	movl	$0, %eax
	jmp	L4076
L4077:
	.loc 7 4843 26
	movl	$LC220, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL17stbtt__find_tablePhjPKc
	movl	%eax, -20(%ebp)
	.loc 7 4844 4
	cmpl	$0, -20(%ebp)
	jne	L4078
	.loc 7 4844 20 discriminator 1
	movl	$0, %eax
	jmp	L4076
L4078:
	.loc 7 4846 4
	cmpl	$0, 20(%ebp)
	je	L4079
	.loc 7 4848 27
	movl	$-1, 20(%esp)
	movl	$16, 16(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbtt__matchpairPhjS_iii
	.loc 7 4848 55
	testl	%eax, %eax
	setne	%al
	.loc 7 4848 7
	testb	%al, %al
	je	L4080
	.loc 7 4848 65 discriminator 1
	movl	$1, %eax
	jmp	L4076
L4080:
	.loc 7 4849 27
	movl	$-1, 20(%esp)
	movl	$1, 16(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbtt__matchpairPhjS_iii
	.loc 7 4849 55
	testl	%eax, %eax
	setne	%al
	.loc 7 4849 7
	testb	%al, %al
	je	L4081
	.loc 7 4849 65 discriminator 1
	movl	$1, %eax
	jmp	L4076
L4081:
	.loc 7 4850 27
	movl	$-1, 20(%esp)
	movl	$3, 16(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbtt__matchpairPhjS_iii
	.loc 7 4850 55
	testl	%eax, %eax
	setne	%al
	.loc 7 4850 7
	testb	%al, %al
	je	L4082
	.loc 7 4850 65 discriminator 1
	movl	$1, %eax
	jmp	L4076
L4079:
	.loc 7 4852 27
	movl	$17, 20(%esp)
	movl	$16, 16(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbtt__matchpairPhjS_iii
	.loc 7 4852 55
	testl	%eax, %eax
	setne	%al
	.loc 7 4852 7
	testb	%al, %al
	je	L4083
	.loc 7 4852 65 discriminator 1
	movl	$1, %eax
	jmp	L4076
L4083:
	.loc 7 4853 27
	movl	$2, 20(%esp)
	movl	$1, 16(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbtt__matchpairPhjS_iii
	.loc 7 4853 55
	testl	%eax, %eax
	setne	%al
	.loc 7 4853 7
	testb	%al, %al
	je	L4084
	.loc 7 4853 65 discriminator 1
	movl	$1, %eax
	jmp	L4076
L4084:
	.loc 7 4854 27
	movl	$-1, 20(%esp)
	movl	$3, 16(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL16stbtt__matchpairPhjS_iii
	.loc 7 4854 55
	testl	%eax, %eax
	setne	%al
	.loc 7 4854 7
	testb	%al, %al
	je	L4082
	.loc 7 4854 65 discriminator 1
	movl	$1, %eax
	jmp	L4076
L4082:
	.loc 7 4857 11
	movl	$0, %eax
L4076:
	.loc 7 4858 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2113:
	.def	__ZL31stbtt_FindMatchingFont_internalPhPci;	.scl	3;	.type	32;	.endef
__ZL31stbtt_FindMatchingFont_internalPhPci:
LFB2114:
	.loc 7 4861 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
LBB745:
	.loc 7 4863 10
	movl	$0, -12(%ebp)
L4089:
LBB746:
	.loc 7 4864 52
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetFontOffsetForIndex
	movl	%eax, -16(%ebp)
	.loc 7 4865 7
	cmpl	$0, -16(%ebp)
	jns	L4086
	.loc 7 4865 27 discriminator 1
	movl	-16(%ebp), %eax
	jmp	L4087
L4086:
	.loc 7 4866 25
	movl	-16(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL14stbtt__matchesPhjS_i
	.loc 7 4866 96
	testl	%eax, %eax
	setne	%al
	.loc 7 4866 7
	testb	%al, %al
	je	L4088
	.loc 7 4867 17
	movl	-16(%ebp), %eax
	jmp	L4087
L4088:
LBE746:
	.loc 7 4863 4
	addl	$1, -12(%ebp)
	.loc 7 4868 4
	jmp	L4089
L4087:
LBE745:
	.loc 7 4869 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2114:
	.globl	_stbtt_BakeFontBitmap
	.def	_stbtt_BakeFontBitmap;	.scl	2;	.type	32;	.endef
_stbtt_BakeFontBitmap:
LFB2115:
	.loc 7 4879 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 7 4880 40
	movl	40(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	flds	16(%ebp)
	fstps	8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL29stbtt_BakeFontBitmap_internalPhifS_iiiiP15stbtt_bakedchar
	.loc 7 4881 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2115:
	.globl	_stbtt_GetFontOffsetForIndex
	.def	_stbtt_GetFontOffsetForIndex;	.scl	2;	.type	32;	.endef
_stbtt_GetFontOffsetForIndex:
LFB2116:
	.loc 7 4884 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 4885 47
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL36stbtt_GetFontOffsetForIndex_internalPhi
	.loc 7 4886 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2116:
	.globl	_stbtt_GetNumberOfFonts
	.def	_stbtt_GetNumberOfFonts;	.scl	2;	.type	32;	.endef
_stbtt_GetNumberOfFonts:
LFB2117:
	.loc 7 4889 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 4890 42
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL31stbtt_GetNumberOfFonts_internalPh
	.loc 7 4891 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2117:
	.globl	_stbtt_InitFont
	.def	_stbtt_InitFont;	.scl	2;	.type	32;	.endef
_stbtt_InitFont:
LFB2118:
	.loc 7 4894 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 4895 34
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL23stbtt_InitFont_internalP14stbtt_fontinfoPhi
	.loc 7 4896 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2118:
	.globl	_stbtt_FindMatchingFont
	.def	_stbtt_FindMatchingFont;	.scl	2;	.type	32;	.endef
_stbtt_FindMatchingFont:
LFB2119:
	.loc 7 4899 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 7 4900 42
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL31stbtt_FindMatchingFont_internalPhPci
	.loc 7 4901 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2119:
	.globl	_stbtt_CompareUTF8toUTF16_bigendian
	.def	_stbtt_CompareUTF8toUTF16_bigendian;	.scl	2;	.type	32;	.endef
_stbtt_CompareUTF8toUTF16_bigendian:
LFB2120:
	.loc 7 4904 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 7 4905 54
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZL43stbtt_CompareUTF8toUTF16_bigendian_internalPciS_i
	.loc 7 4906 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2120:
	.section .rdata,"dr"
	.align 4
__ZL14kGifTransIndex:
	.space 4
	.text
	.globl	__Z7GifIMaxii
	.def	__Z7GifIMaxii;	.scl	2;	.type	32;	.endef
__Z7GifIMaxii:
LFB2121:
	.file 8 "gif.h"
	.loc 8 81 27
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 8 81 39
	movl	8(%ebp), %eax
	cmpl	12(%ebp), %eax
	jle	L4103
	.loc 8 81 39 is_stmt 0 discriminator 1
	movl	8(%ebp), %eax
	.loc 8 81 42 is_stmt 1 discriminator 1
	jmp	L4105
L4103:
	.loc 8 81 39 discriminator 2
	movl	12(%ebp), %eax
L4105:
	.loc 8 81 45 discriminator 5
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2121:
	.globl	__Z7GifIMinii
	.def	__Z7GifIMinii;	.scl	2;	.type	32;	.endef
__Z7GifIMinii:
LFB2122:
	.loc 8 82 27
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 8 82 39
	movl	8(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L4107
	.loc 8 82 39 is_stmt 0 discriminator 1
	movl	8(%ebp), %eax
	.loc 8 82 42 is_stmt 1 discriminator 1
	jmp	L4109
L4107:
	.loc 8 82 39 discriminator 2
	movl	12(%ebp), %eax
L4109:
	.loc 8 82 45 discriminator 5
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2122:
	.globl	__Z7GifIAbsi
	.def	__Z7GifIAbsi;	.scl	2;	.type	32;	.endef
__Z7GifIAbsi:
LFB2123:
	.loc 8 83 20
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 8 83 36
	movl	8(%ebp), %eax
	cltd
	movl	%edx, %eax
	xorl	8(%ebp), %eax
	subl	%edx, %eax
	.loc 8 83 39
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2123:
	.globl	__Z25GifGetClosestPaletteColorP10GifPaletteiiiPiS1_i
	.def	__Z25GifGetClosestPaletteColorP10GifPaletteiiiPiS1_i;	.scl	2;	.type	32;	.endef
__Z25GifGetClosestPaletteColorP10GifPaletteiiiPiS1_i:
LFB2124:
	.loc 8 90 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$84, %esp
	.cfi_offset 3, -12
LBB747:
	.loc 8 92 29
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 8 92 21
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 8 92 5
	cmpl	%eax, 32(%ebp)
	jl	L4113
LBB748:
	.loc 8 94 38
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 8 94 30
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	.loc 8 94 13
	movl	32(%ebp), %eax
	subl	%edx, %eax
	movl	%eax, -12(%ebp)
	.loc 8 95 9
	cmpl	$0, -12(%ebp)
	je	L4120
	.loc 8 98 46
	movl	8(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	addl	$4, %eax
	movzbl	(%eax), %eax
	.loc 8 98 26
	movzbl	%al, %eax
	.loc 8 98 13
	movl	12(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -16(%ebp)
	.loc 8 99 46
	movl	8(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	addl	$260, %eax
	movzbl	(%eax), %eax
	.loc 8 99 26
	movzbl	%al, %eax
	.loc 8 99 13
	movl	16(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 8 100 46
	movl	8(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	addl	$516, %eax
	movzbl	(%eax), %eax
	.loc 8 100 26
	movzbl	%al, %eax
	.loc 8 100 13
	movl	20(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 8 101 27
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z7GifIAbsi
	movl	%eax, %ebx
	.loc 8 101 42
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z7GifIAbsi
	.loc 8 101 34
	addl	%eax, %ebx
	.loc 8 101 57
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z7GifIAbsi
	.loc 8 101 63
	addl	%ebx, %eax
	movl	%eax, -28(%ebp)
	.loc 8 103 19
	movl	28(%ebp), %eax
	movl	(%eax), %eax
	.loc 8 103 9
	cmpl	%eax, -28(%ebp)
	jge	L4121
	.loc 8 105 22
	movl	24(%ebp), %eax
	movl	-12(%ebp), %edx
	movl	%edx, (%eax)
	.loc 8 106 23
	movl	28(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	%edx, (%eax)
	.loc 8 109 9
	jmp	L4121
L4113:
LBE748:
LBE747:
	.loc 8 113 28
	movl	12(%ebp), %eax
	movl	%eax, -48(%ebp)
	.loc 8 113 42
	movl	16(%ebp), %eax
	movl	%eax, -44(%ebp)
	.loc 8 113 56
	movl	20(%ebp), %eax
	movl	%eax, -40(%ebp)
	.loc 8 114 54
	movl	8(%ebp), %edx
	movl	32(%ebp), %eax
	addl	%edx, %eax
	addl	$772, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 8 114 9
	movl	-48(%ebp,%eax,4), %eax
	movl	%eax, -32(%ebp)
	.loc 8 116 44
	movl	8(%ebp), %edx
	movl	32(%ebp), %eax
	addl	%edx, %eax
	addl	$1028, %eax
	movzbl	(%eax), %eax
	.loc 8 116 9
	movzbl	%al, %eax
	movl	%eax, -36(%ebp)
	.loc 8 117 5
	movl	-36(%ebp), %eax
	cmpl	-32(%ebp), %eax
	jle	L4117
	.loc 8 120 34
	movl	32(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, 24(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z25GifGetClosestPaletteColorP10GifPaletteiiiPiS1_i
	.loc 8 121 13
	movl	28(%ebp), %eax
	movl	(%eax), %edx
	.loc 8 121 34
	movl	-36(%ebp), %eax
	subl	-32(%ebp), %eax
	.loc 8 121 9
	cmpl	%eax, %edx
	jle	L4112
	.loc 8 124 81
	movl	32(%ebp), %eax
	addl	%eax, %eax
	.loc 8 124 38
	addl	$1, %eax
	movl	%eax, 24(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z25GifGetClosestPaletteColorP10GifPaletteiiiPiS1_i
	jmp	L4112
L4117:
	.loc 8 129 77
	movl	32(%ebp), %eax
	addl	%eax, %eax
	.loc 8 129 34
	addl	$1, %eax
	movl	%eax, 24(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z25GifGetClosestPaletteColorP10GifPaletteiiiPiS1_i
	.loc 8 130 13
	movl	28(%ebp), %eax
	movl	(%eax), %edx
	.loc 8 130 35
	movl	-32(%ebp), %eax
	subl	-36(%ebp), %eax
	.loc 8 130 9
	cmpl	%eax, %edx
	jle	L4112
	.loc 8 132 38
	movl	32(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, 24(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z25GifGetClosestPaletteColorP10GifPaletteiiiPiS1_i
	jmp	L4112
L4120:
LBB750:
LBB749:
	.loc 8 95 35
	nop
	jmp	L4112
L4121:
	.loc 8 109 9
	nop
L4112:
LBE749:
LBE750:
	.loc 8 135 1
	addl	$84, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2124:
	.globl	__Z13GifSwapPixelsPhii
	.def	__Z13GifSwapPixelsPhii;	.scl	2;	.type	32;	.endef
__Z13GifSwapPixelsPhii:
LFB2125:
	.loc 8 138 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 8 139 28
	movl	12(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 8 139 30
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 8 139 13
	movzbl	(%eax), %eax
	movb	%al, -1(%ebp)
	.loc 8 140 28
	movl	12(%ebp), %eax
	sall	$2, %eax
	.loc 8 140 32
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 8 140 13
	movzbl	(%eax), %eax
	movb	%al, -2(%ebp)
	.loc 8 141 28
	movl	12(%ebp), %eax
	sall	$2, %eax
	.loc 8 141 32
	leal	2(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 8 141 13
	movzbl	(%eax), %eax
	movb	%al, -3(%ebp)
	.loc 8 142 28
	movl	12(%ebp), %eax
	sall	$2, %eax
	.loc 8 142 32
	leal	3(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 8 142 13
	movzbl	(%eax), %eax
	movb	%al, -4(%ebp)
	.loc 8 144 28
	movl	16(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 8 144 30
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 8 144 13
	movzbl	(%eax), %eax
	movb	%al, -5(%ebp)
	.loc 8 145 28
	movl	16(%ebp), %eax
	sall	$2, %eax
	.loc 8 145 32
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 8 145 13
	movzbl	(%eax), %eax
	movb	%al, -6(%ebp)
	.loc 8 146 28
	movl	16(%ebp), %eax
	sall	$2, %eax
	.loc 8 146 32
	leal	2(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 8 146 13
	movzbl	(%eax), %eax
	movb	%al, -7(%ebp)
	.loc 8 147 28
	movl	12(%ebp), %eax
	sall	$2, %eax
	.loc 8 147 32
	leal	3(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 8 147 13
	movzbl	(%eax), %eax
	movb	%al, -8(%ebp)
	.loc 8 149 15
	movl	12(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 8 149 17
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 8 149 19
	movzbl	-5(%ebp), %eax
	movb	%al, (%edx)
	.loc 8 150 15
	movl	12(%ebp), %eax
	sall	$2, %eax
	.loc 8 150 19
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 8 150 21
	movzbl	-6(%ebp), %eax
	movb	%al, (%edx)
	.loc 8 151 15
	movl	12(%ebp), %eax
	sall	$2, %eax
	.loc 8 151 19
	leal	2(%eax), %edx
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 8 151 21
	movzbl	-7(%ebp), %eax
	movb	%al, (%edx)
	.loc 8 152 15
	movl	12(%ebp), %eax
	sall	$2, %eax
	.loc 8 152 19
	leal	3(%eax), %edx
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 8 152 21
	movzbl	-8(%ebp), %eax
	movb	%al, (%edx)
	.loc 8 154 15
	movl	16(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 8 154 17
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 8 154 19
	movzbl	-1(%ebp), %eax
	movb	%al, (%edx)
	.loc 8 155 15
	movl	16(%ebp), %eax
	sall	$2, %eax
	.loc 8 155 19
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 8 155 21
	movzbl	-2(%ebp), %eax
	movb	%al, (%edx)
	.loc 8 156 15
	movl	16(%ebp), %eax
	sall	$2, %eax
	.loc 8 156 19
	leal	2(%eax), %edx
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 8 156 21
	movzbl	-3(%ebp), %eax
	movb	%al, (%edx)
	.loc 8 157 15
	movl	16(%ebp), %eax
	sall	$2, %eax
	.loc 8 157 19
	leal	3(%eax), %edx
	movl	8(%ebp), %eax
	addl	%eax, %edx
	.loc 8 157 21
	movzbl	-4(%ebp), %eax
	movb	%al, (%edx)
	.loc 8 158 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2125:
	.globl	__Z12GifPartitionPhiiii
	.def	__Z12GifPartitionPhiiii;	.scl	2;	.type	32;	.endef
__Z12GifPartitionPhiiii:
LFB2126:
	.loc 8 162 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$44, %esp
	.loc 8 163 46
	movl	24(%ebp), %eax
	leal	0(,%eax,4), %edx
	.loc 8 163 48
	movl	20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 8 163 52
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 8 163 15
	movzbl	%al, %eax
	movl	%eax, -16(%ebp)
	.loc 8 164 18
	movl	16(%ebp), %eax
	leal	-1(%eax), %edx
	movl	24(%ebp), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z13GifSwapPixelsPhii
	.loc 8 165 9
	movl	12(%ebp), %eax
	movl	%eax, -4(%ebp)
	.loc 8 166 10
	movb	$0, -5(%ebp)
LBB751:
	.loc 8 167 13
	movl	12(%ebp), %eax
	movl	%eax, -12(%ebp)
L4128:
	.loc 8 167 30 discriminator 1
	movl	16(%ebp), %eax
	subl	$1, %eax
	.loc 8 167 24 discriminator 1
	cmpl	%eax, -12(%ebp)
	jge	L4124
LBB752:
	.loc 8 169 32
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	.loc 8 169 34
	movl	20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 8 169 38
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 8 169 13
	movzbl	%al, %eax
	movl	%eax, -20(%ebp)
	.loc 8 170 9
	movl	-20(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jge	L4125
	.loc 8 172 26
	movl	-4(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z13GifSwapPixelsPhii
	.loc 8 173 13
	addl	$1, -4(%ebp)
	jmp	L4126
L4125:
	.loc 8 175 14
	movl	-20(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jne	L4126
	.loc 8 177 13
	cmpb	$0, -5(%ebp)
	je	L4127
	.loc 8 179 30
	movl	-4(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z13GifSwapPixelsPhii
	.loc 8 180 17
	addl	$1, -4(%ebp)
L4127:
	.loc 8 182 19
	xorb	$1, -5(%ebp)
L4126:
LBE752:
	.loc 8 167 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4128
L4124:
LBE751:
	.loc 8 185 18
	movl	16(%ebp), %eax
	subl	$1, %eax
	movl	%eax, 8(%esp)
	movl	-4(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z13GifSwapPixelsPhii
	.loc 8 186 12
	movl	-4(%ebp), %eax
	.loc 8 187 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2126:
	.globl	__Z20GifPartitionByMedianPhiiii
	.def	__Z20GifPartitionByMedianPhiiii;	.scl	2;	.type	32;	.endef
__Z20GifPartitionByMedianPhiiii:
LFB2127:
	.loc 8 191 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
LBB753:
	.loc 8 192 20
	movl	16(%ebp), %eax
	subl	$1, %eax
	.loc 8 192 5
	cmpl	%eax, 12(%ebp)
	jge	L4134
LBB754:
	.loc 8 194 39
	movl	16(%ebp), %eax
	subl	12(%ebp), %eax
	.loc 8 194 45
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %edx
	.loc 8 194 13
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -12(%ebp)
	.loc 8 196 34
	movl	-12(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z12GifPartitionPhiiii
	movl	%eax, -12(%ebp)
	.loc 8 199 9
	movl	-12(%ebp), %eax
	cmpl	24(%ebp), %eax
	jle	L4132
	.loc 8 200 33
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z20GifPartitionByMedianPhiiii
L4132:
	.loc 8 202 9
	movl	-12(%ebp), %eax
	cmpl	24(%ebp), %eax
	jge	L4134
	.loc 8 203 33
	movl	-12(%ebp), %eax
	leal	1(%eax), %edx
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z20GifPartitionByMedianPhiiii
L4134:
LBE754:
LBE753:
	.loc 8 205 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2127:
	.def	___udivdi3;	.scl	2;	.type	32;	.endef
	.globl	__Z15GifSplitPalettePhiiiiiibP10GifPalette
	.def	__Z15GifSplitPalettePhiiiiiibP10GifPalette;	.scl	2;	.type	32;	.endef
__Z15GifSplitPalettePhiiiiiibP10GifPalette:
LFB2128:
	.loc 8 209 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$204, %esp
	.cfi_offset 7, -12
	.cfi_offset 6, -16
	.cfi_offset 3, -20
	movl	36(%ebp), %eax
	movb	%al, -156(%ebp)
	.loc 8 210 5
	movl	20(%ebp), %eax
	cmpl	16(%ebp), %eax
	jle	L4159
	.loc 8 210 28 discriminator 1
	cmpl	$0, 12(%ebp)
	je	L4159
LBB755:
	.loc 8 214 27
	movl	16(%ebp), %eax
	addl	$1, %eax
	.loc 8 214 5
	cmpl	%eax, 20(%ebp)
	jne	L4139
LBB756:
LBB757:
	.loc 8 216 9
	cmpb	$0, -156(%ebp)
	je	L4140
LBB758:
LBB759:
	.loc 8 221 13
	cmpl	$1, 16(%ebp)
	jne	L4141
LBB760:
	.loc 8 224 26
	movl	$255, -28(%ebp)
	.loc 8 224 33
	movl	$255, -32(%ebp)
	.loc 8 224 40
	movl	$255, -36(%ebp)
LBB761:
	.loc 8 225 25
	movl	$0, -40(%ebp)
L4143:
	.loc 8 225 33 discriminator 3
	movl	-40(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L4142
	.loc 8 227 64 discriminator 2
	movl	-40(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 8 227 71 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 8 227 42 discriminator 2
	movzbl	%al, %edx
	movl	-28(%ebp), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMinii
	.loc 8 227 23 discriminator 2
	movl	%eax, -28(%ebp)
	.loc 8 228 64 discriminator 2
	movl	-40(%ebp), %eax
	sall	$2, %eax
	.loc 8 228 71 discriminator 2
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 8 228 42 discriminator 2
	movzbl	%al, %edx
	movl	-32(%ebp), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMinii
	.loc 8 228 23 discriminator 2
	movl	%eax, -32(%ebp)
	.loc 8 229 64 discriminator 2
	movl	-40(%ebp), %eax
	sall	$2, %eax
	.loc 8 229 71 discriminator 2
	leal	2(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 8 229 42 discriminator 2
	movzbl	%al, %edx
	movl	-36(%ebp), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMinii
	.loc 8 229 23 discriminator 2
	movl	%eax, -36(%ebp)
	.loc 8 225 17 discriminator 2
	addl	$1, -40(%ebp)
	jmp	L4143
L4142:
LBE761:
	.loc 8 232 34
	movl	-28(%ebp), %eax
	movl	%eax, %ecx
	movl	40(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	addl	$4, %eax
	movb	%cl, (%eax)
	.loc 8 233 34
	movl	-32(%ebp), %eax
	movl	%eax, %ecx
	movl	40(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	addl	$260, %eax
	movb	%cl, (%eax)
	.loc 8 234 34
	movl	-36(%ebp), %eax
	movl	%eax, %ecx
	movl	40(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	addl	$516, %eax
	movb	%cl, (%eax)
	.loc 8 236 17
	jmp	L4135
L4141:
LBE760:
LBE759:
LBB762:
	.loc 8 239 40
	movl	40(%ebp), %eax
	movl	(%eax), %eax
	.loc 8 239 32
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 8 239 49
	subl	$1, %eax
	.loc 8 239 13
	cmpl	%eax, 16(%ebp)
	jne	L4140
LBB763:
	.loc 8 242 26
	movl	$0, -44(%ebp)
	.loc 8 242 31
	movl	$0, -48(%ebp)
	.loc 8 242 36
	movl	$0, -52(%ebp)
LBB764:
	.loc 8 243 25
	movl	$0, -56(%ebp)
L4146:
	.loc 8 243 33 discriminator 3
	movl	-56(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L4145
	.loc 8 245 64 discriminator 2
	movl	-56(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 8 245 71 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 8 245 42 discriminator 2
	movzbl	%al, %edx
	movl	-44(%ebp), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	.loc 8 245 23 discriminator 2
	movl	%eax, -44(%ebp)
	.loc 8 246 64 discriminator 2
	movl	-56(%ebp), %eax
	sall	$2, %eax
	.loc 8 246 71 discriminator 2
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 8 246 42 discriminator 2
	movzbl	%al, %edx
	movl	-48(%ebp), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	.loc 8 246 23 discriminator 2
	movl	%eax, -48(%ebp)
	.loc 8 247 64 discriminator 2
	movl	-56(%ebp), %eax
	sall	$2, %eax
	.loc 8 247 71 discriminator 2
	leal	2(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 8 247 42 discriminator 2
	movzbl	%al, %edx
	movl	-52(%ebp), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	.loc 8 247 23 discriminator 2
	movl	%eax, -52(%ebp)
	.loc 8 243 17 discriminator 2
	addl	$1, -56(%ebp)
	jmp	L4146
L4145:
LBE764:
	.loc 8 250 34
	movl	-44(%ebp), %eax
	movl	%eax, %ecx
	movl	40(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	addl	$4, %eax
	movb	%cl, (%eax)
	.loc 8 251 34
	movl	-48(%ebp), %eax
	movl	%eax, %ecx
	movl	40(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	addl	$260, %eax
	movb	%cl, (%eax)
	.loc 8 252 34
	movl	-52(%ebp), %eax
	movl	%eax, %ecx
	movl	40(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	addl	$516, %eax
	movb	%cl, (%eax)
	.loc 8 254 17
	jmp	L4135
L4140:
LBE763:
LBE762:
LBE758:
LBE757:
	.loc 8 259 18
	movl	$0, -64(%ebp)
	movl	$0, -60(%ebp)
	.loc 8 259 23
	movl	$0, -72(%ebp)
	movl	$0, -68(%ebp)
	.loc 8 259 28
	movl	$0, -80(%ebp)
	movl	$0, -76(%ebp)
LBB765:
	.loc 8 260 17
	movl	$0, -84(%ebp)
L4148:
	.loc 8 260 25 discriminator 3
	movl	-84(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L4147
	.loc 8 262 26 discriminator 2
	movl	-84(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 8 262 30 discriminator 2
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ecx
	movzbl	%cl, %eax
	movl	$0, %edx
	.loc 8 262 15 discriminator 2
	addl	%eax, -64(%ebp)
	adcl	%edx, -60(%ebp)
	.loc 8 263 26 discriminator 2
	movl	-84(%ebp), %eax
	sall	$2, %eax
	.loc 8 263 30 discriminator 2
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ecx
	movzbl	%cl, %eax
	movl	$0, %edx
	.loc 8 263 15 discriminator 2
	addl	%eax, -72(%ebp)
	adcl	%edx, -68(%ebp)
	.loc 8 264 26 discriminator 2
	movl	-84(%ebp), %eax
	sall	$2, %eax
	.loc 8 264 30 discriminator 2
	leal	2(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %ecx
	movzbl	%cl, %eax
	movl	$0, %edx
	.loc 8 264 15 discriminator 2
	addl	%eax, -80(%ebp)
	adcl	%edx, -76(%ebp)
	.loc 8 260 9 discriminator 2
	addl	$1, -84(%ebp)
	jmp	L4148
L4147:
LBE765:
	.loc 8 267 14
	movl	12(%ebp), %eax
	movl	%eax, %ebx
	movl	%eax, %esi
	sarl	$31, %esi
	.loc 8 267 34
	movl	%ebx, %eax
	movl	%esi, %edx
	shrdl	$1, %edx, %eax
	shrl	%edx
	.loc 8 267 11
	addl	%eax, -64(%ebp)
	adcl	%edx, -60(%ebp)
	.loc 8 268 14
	movl	12(%ebp), %eax
	movl	%eax, %ebx
	movl	%eax, %esi
	sarl	$31, %esi
	.loc 8 268 34
	movl	%ebx, %eax
	movl	%esi, %edx
	shrdl	$1, %edx, %eax
	shrl	%edx
	.loc 8 268 11
	addl	%eax, -72(%ebp)
	adcl	%edx, -68(%ebp)
	.loc 8 269 14
	movl	12(%ebp), %eax
	movl	%eax, %ebx
	movl	%eax, %esi
	sarl	$31, %esi
	.loc 8 269 34
	movl	%ebx, %eax
	movl	%esi, %edx
	shrdl	$1, %edx, %eax
	shrl	%edx
	.loc 8 269 11
	addl	%eax, -80(%ebp)
	adcl	%edx, -76(%ebp)
	.loc 8 271 14
	movl	12(%ebp), %eax
	cltd
	.loc 8 271 11
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	movl	-64(%ebp), %eax
	movl	-60(%ebp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	___udivdi3
LVL40:
	movl	%eax, -64(%ebp)
	movl	%edx, -60(%ebp)
	.loc 8 272 14
	movl	12(%ebp), %eax
	cltd
	.loc 8 272 11
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	movl	-72(%ebp), %eax
	movl	-68(%ebp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	___udivdi3
LVL41:
	movl	%eax, -72(%ebp)
	movl	%edx, -68(%ebp)
	.loc 8 273 14
	movl	12(%ebp), %eax
	cltd
	.loc 8 273 11
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	movl	-80(%ebp), %eax
	movl	-76(%ebp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	___udivdi3
LVL42:
	movl	%eax, -80(%ebp)
	movl	%edx, -76(%ebp)
	.loc 8 275 26
	movl	-64(%ebp), %eax
	movl	%eax, %ecx
	movl	40(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	addl	$4, %eax
	movb	%cl, (%eax)
	.loc 8 276 26
	movl	-72(%ebp), %eax
	movl	%eax, %ecx
	movl	40(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	addl	$260, %eax
	movb	%cl, (%eax)
	.loc 8 277 26
	movl	-80(%ebp), %eax
	movl	%eax, %ecx
	movl	40(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	addl	$516, %eax
	movb	%cl, (%eax)
	.loc 8 279 9
	jmp	L4135
L4139:
LBE756:
LBE755:
	.loc 8 283 9
	movl	$255, -88(%ebp)
	.loc 8 283 21
	movl	$0, -92(%ebp)
	.loc 8 284 9
	movl	$255, -96(%ebp)
	.loc 8 284 21
	movl	$0, -100(%ebp)
	.loc 8 285 9
	movl	$255, -104(%ebp)
	.loc 8 285 21
	movl	$0, -108(%ebp)
LBB766:
	.loc 8 286 13
	movl	$0, -112(%ebp)
L4156:
	.loc 8 286 21 discriminator 1
	movl	-112(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L4149
LBB767:
	.loc 8 288 25
	movl	-112(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	.loc 8 288 29
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 8 288 13
	movzbl	%al, %eax
	movl	%eax, -120(%ebp)
	.loc 8 289 25
	movl	-112(%ebp), %eax
	sall	$2, %eax
	.loc 8 289 29
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 8 289 13
	movzbl	%al, %eax
	movl	%eax, -124(%ebp)
	.loc 8 290 25
	movl	-112(%ebp), %eax
	sall	$2, %eax
	.loc 8 290 29
	leal	2(%eax), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 8 290 13
	movzbl	%al, %eax
	movl	%eax, -128(%ebp)
	.loc 8 292 9
	movl	-120(%ebp), %eax
	cmpl	-92(%ebp), %eax
	jle	L4150
	.loc 8 292 27 discriminator 1
	movl	-120(%ebp), %eax
	movl	%eax, -92(%ebp)
L4150:
	.loc 8 293 9
	movl	-120(%ebp), %eax
	cmpl	-88(%ebp), %eax
	jge	L4151
	.loc 8 293 27 discriminator 1
	movl	-120(%ebp), %eax
	movl	%eax, -88(%ebp)
L4151:
	.loc 8 295 9
	movl	-124(%ebp), %eax
	cmpl	-100(%ebp), %eax
	jle	L4152
	.loc 8 295 27 discriminator 1
	movl	-124(%ebp), %eax
	movl	%eax, -100(%ebp)
L4152:
	.loc 8 296 9
	movl	-124(%ebp), %eax
	cmpl	-96(%ebp), %eax
	jge	L4153
	.loc 8 296 27 discriminator 1
	movl	-124(%ebp), %eax
	movl	%eax, -96(%ebp)
L4153:
	.loc 8 298 9
	movl	-128(%ebp), %eax
	cmpl	-108(%ebp), %eax
	jle	L4154
	.loc 8 298 27 discriminator 1
	movl	-128(%ebp), %eax
	movl	%eax, -108(%ebp)
L4154:
	.loc 8 299 9
	movl	-128(%ebp), %eax
	cmpl	-104(%ebp), %eax
	jge	L4155
	.loc 8 299 27 discriminator 1
	movl	-128(%ebp), %eax
	movl	%eax, -104(%ebp)
L4155:
LBE767:
	.loc 8 286 5 discriminator 2
	addl	$1, -112(%ebp)
	jmp	L4156
L4149:
LBE766:
	.loc 8 302 9
	movl	-92(%ebp), %eax
	subl	-88(%ebp), %eax
	movl	%eax, -132(%ebp)
	.loc 8 303 9
	movl	-100(%ebp), %eax
	subl	-96(%ebp), %eax
	movl	%eax, -136(%ebp)
	.loc 8 304 9
	movl	-108(%ebp), %eax
	subl	-104(%ebp), %eax
	movl	%eax, -140(%ebp)
	.loc 8 307 9
	movl	$1, -116(%ebp)
	.loc 8 308 5
	movl	-140(%ebp), %eax
	cmpl	-136(%ebp), %eax
	jle	L4157
	.loc 8 308 34 discriminator 1
	movl	$2, -116(%ebp)
L4157:
	.loc 8 309 5
	movl	-132(%ebp), %eax
	cmpl	-140(%ebp), %eax
	jle	L4158
	.loc 8 309 24 discriminator 1
	movl	-132(%ebp), %eax
	cmpl	-136(%ebp), %eax
	jle	L4158
	.loc 8 309 53 discriminator 2
	movl	$0, -116(%ebp)
L4158:
	.loc 8 311 44
	movl	24(%ebp), %eax
	subl	16(%ebp), %eax
	.loc 8 311 32
	imull	12(%ebp), %eax
	.loc 8 311 67
	movl	20(%ebp), %edx
	movl	%edx, %edi
	subl	16(%ebp), %edi
	.loc 8 311 9
	cltd
	idivl	%edi
	movl	%eax, -144(%ebp)
	.loc 8 312 9
	movl	12(%ebp), %eax
	subl	-144(%ebp), %eax
	movl	%eax, -148(%ebp)
	.loc 8 314 25
	movl	-144(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-116(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z20GifPartitionByMedianPhiiii
	.loc 8 316 33
	movl	-116(%ebp), %eax
	movl	%eax, %ecx
	movl	40(%ebp), %edx
	movl	32(%ebp), %eax
	addl	%edx, %eax
	addl	$772, %eax
	movb	%cl, (%eax)
	.loc 8 317 48
	movl	-144(%ebp), %eax
	leal	0(,%eax,4), %edx
	.loc 8 317 50
	movl	-116(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 8 317 59
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 8 317 30
	movl	40(%ebp), %ecx
	movl	32(%ebp), %edx
	addl	%ecx, %edx
	addl	$1028, %edx
	movb	%al, (%edx)
	.loc 8 319 20
	movzbl	-156(%ebp), %edx
	movl	32(%ebp), %eax
	leal	(%eax,%eax), %ebx
	movl	28(%ebp), %eax
	movl	%eax, %ecx
	shrl	$31, %ecx
	addl	%ecx, %eax
	sarl	%eax
	movl	%eax, %esi
	movl	24(%ebp), %eax
	subl	28(%ebp), %eax
	movl	40(%ebp), %ecx
	movl	%ecx, 32(%esp)
	movl	%edx, 28(%esp)
	movl	%ebx, 24(%esp)
	movl	%esi, 20(%esp)
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z15GifSplitPalettePhiiiiiibP10GifPalette
	.loc 8 320 20
	movzbl	-156(%ebp), %edx
	.loc 8 320 114
	movl	32(%ebp), %eax
	addl	%eax, %eax
	.loc 8 320 20
	leal	1(%eax), %esi
	movl	28(%ebp), %eax
	movl	%eax, %ecx
	shrl	$31, %ecx
	addl	%ecx, %eax
	sarl	%eax
	movl	%eax, %edi
	movl	24(%ebp), %ecx
	movl	28(%ebp), %eax
	leal	(%ecx,%eax), %ebx
	.loc 8 320 37
	movl	-144(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %ecx
	.loc 8 320 20
	movl	8(%ebp), %eax
	addl	%eax, %ecx
	movl	40(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	%edx, 28(%esp)
	movl	%esi, 24(%esp)
	movl	%edi, 20(%esp)
	movl	%ebx, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-148(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	__Z15GifSplitPalettePhiiiiiibP10GifPalette
	jmp	L4135
L4159:
	.loc 8 211 9
	nop
L4135:
	.loc 8 321 1
	addl	$204, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2128:
	.globl	__Z20GifPickChangedPixelsPKhPhi
	.def	__Z20GifPickChangedPixelsPKhPhi;	.scl	2;	.type	32;	.endef
__Z20GifPickChangedPixelsPKhPhi:
LFB2129:
	.loc 8 328 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 8 329 9
	movl	$0, -4(%ebp)
	.loc 8 330 14
	movl	12(%ebp), %eax
	movl	%eax, -8(%ebp)
LBB768:
	.loc 8 332 14
	movl	$0, -12(%ebp)
L4164:
	.loc 8 332 22 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L4161
	.loc 8 334 23
	movl	8(%ebp), %eax
	movzbl	(%eax), %edx
	.loc 8 334 25
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 8 334 9
	cmpb	%al, %dl
	jne	L4162
	.loc 8 335 23 discriminator 1
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %edx
	.loc 8 335 35 discriminator 1
	movl	12(%ebp), %eax
	addl	$1, %eax
	.loc 8 335 25 discriminator 1
	movzbl	(%eax), %eax
	.loc 8 334 37 discriminator 1
	cmpb	%al, %dl
	jne	L4162
	.loc 8 336 23
	movl	8(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %edx
	.loc 8 336 35
	movl	12(%ebp), %eax
	addl	$2, %eax
	.loc 8 336 25
	movzbl	(%eax), %eax
	.loc 8 335 37
	cmpb	%al, %dl
	je	L4163
L4162:
	.loc 8 338 35
	movl	12(%ebp), %eax
	movzbl	(%eax), %edx
	.loc 8 338 26
	movl	-8(%ebp), %eax
	movb	%dl, (%eax)
	.loc 8 339 24
	movl	-8(%ebp), %eax
	leal	1(%eax), %edx
	.loc 8 339 26
	movl	12(%ebp), %eax
	movzbl	1(%eax), %eax
	movb	%al, (%edx)
	.loc 8 340 24
	movl	-8(%ebp), %eax
	leal	2(%eax), %edx
	.loc 8 340 26
	movl	12(%ebp), %eax
	movzbl	2(%eax), %eax
	movb	%al, (%edx)
	.loc 8 341 13
	addl	$1, -4(%ebp)
	.loc 8 342 23
	addl	$4, -8(%ebp)
L4163:
	.loc 8 344 19 discriminator 2
	addl	$4, 8(%ebp)
	.loc 8 345 15 discriminator 2
	addl	$4, 12(%ebp)
	.loc 8 332 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4164
L4161:
LBE768:
	.loc 8 348 12
	movl	-4(%ebp), %eax
	.loc 8 349 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2129:
	.globl	__Z14GifMakePalettePKhS0_jjibP10GifPalette
	.def	__Z14GifMakePalettePKhS0_jjibP10GifPalette;	.scl	2;	.type	32;	.endef
__Z14GifMakePalettePKhS0_jjibP10GifPalette:
LFB2130:
	.loc 8 354 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$104, %esp
	movl	28(%ebp), %eax
	movb	%al, -44(%ebp)
	.loc 8 355 20
	movl	32(%ebp), %eax
	movl	24(%ebp), %edx
	movl	%edx, (%eax)
	.loc 8 359 39
	movl	16(%ebp), %eax
	imull	20(%ebp), %eax
	.loc 8 359 12
	sall	$2, %eax
	movl	%eax, -16(%ebp)
	.loc 8 360 58
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -20(%ebp)
	.loc 8 361 11
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	_memcpy
	.loc 8 363 33
	movl	16(%ebp), %eax
	imull	20(%ebp), %eax
	.loc 8 363 9
	movl	%eax, -12(%ebp)
	.loc 8 364 5
	cmpl	$0, 8(%ebp)
	je	L4167
	.loc 8 365 41
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z20GifPickChangedPixelsPKhPhi
	movl	%eax, -12(%ebp)
L4167:
	.loc 8 367 15
	movl	24(%ebp), %eax
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 8 368 15
	movl	-24(%ebp), %eax
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, -28(%ebp)
	.loc 8 369 15
	movl	-28(%ebp), %eax
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, -32(%ebp)
	.loc 8 371 20
	movzbl	-44(%ebp), %eax
	movl	32(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	%eax, 28(%esp)
	movl	$1, 24(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z15GifSplitPalettePhiiiiiibP10GifPalette
	.loc 8 373 18
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 8 376 35
	movl	24(%ebp), %eax
	subl	$1, %eax
	.loc 8 376 23
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	.loc 8 376 40
	movl	32(%ebp), %eax
	movb	$0, 1028(%eax,%edx)
	.loc 8 377 38
	movl	24(%ebp), %eax
	subl	$1, %eax
	.loc 8 377 26
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	.loc 8 377 43
	movl	32(%ebp), %eax
	movb	$0, 772(%eax,%edx)
	.loc 8 379 42
	movl	32(%ebp), %eax
	movb	$0, 516(%eax)
	.loc 8 379 40
	movl	32(%ebp), %eax
	movzbl	516(%eax), %edx
	.loc 8 379 29
	movl	32(%ebp), %eax
	movb	%dl, 260(%eax)
	.loc 8 379 27
	movl	32(%ebp), %eax
	movzbl	260(%eax), %edx
	.loc 8 379 16
	movl	32(%ebp), %eax
	movb	%dl, 4(%eax)
	.loc 8 380 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2130:
	.globl	__Z14GifDitherImagePKhS0_PhjjP10GifPalette
	.def	__Z14GifDitherImagePKhS0_PhjjP10GifPalette;	.scl	2;	.type	32;	.endef
__Z14GifDitherImagePKhS0_PhjjP10GifPalette:
LFB2131:
	.loc 8 384 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$152, %esp
	.loc 8 385 33
	movl	20(%ebp), %eax
	imull	24(%ebp), %eax
	.loc 8 385 9
	movl	%eax, -28(%ebp)
	.loc 8 390 73
	movl	-28(%ebp), %eax
	.loc 8 390 54
	sall	$4, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -32(%ebp)
LBB769:
	.loc 8 392 14
	movl	$0, -12(%ebp)
L4170:
	.loc 8 392 32 discriminator 3
	movl	-28(%ebp), %eax
	sall	$2, %eax
	.loc 8 392 22 discriminator 3
	cmpl	%eax, -12(%ebp)
	jge	L4169
LBB770:
	.loc 8 394 35 discriminator 2
	movl	-12(%ebp), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 8 394 17 discriminator 2
	movb	%al, -101(%ebp)
	.loc 8 395 25 discriminator 2
	movzbl	-101(%ebp), %eax
	movzbl	%al, %eax
	.loc 8 395 17 discriminator 2
	sall	$8, %eax
	movl	%eax, -36(%ebp)
	.loc 8 396 23 discriminator 2
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%eax, %edx
	.loc 8 396 25 discriminator 2
	movl	-36(%ebp), %eax
	movl	%eax, (%edx)
LBE770:
	.loc 8 392 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4170
L4169:
LBE769:
LBB771:
	.loc 8 399 19
	movl	$0, -16(%ebp)
L4182:
	.loc 8 399 27 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	24(%ebp), %eax
	jnb	L4171
LBB772:
LBB773:
	.loc 8 401 23
	movl	$0, -20(%ebp)
L4181:
	.loc 8 401 31 discriminator 1
	movl	-20(%ebp), %eax
	cmpl	20(%ebp), %eax
	jnb	L4172
LBB774:
	.loc 8 403 51
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 8 403 57
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 8 403 44
	sall	$4, %eax
	movl	%eax, %edx
	.loc 8 403 22
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -40(%ebp)
	.loc 8 404 47
	cmpl	$0, 8(%ebp)
	je	L4173
	.loc 8 404 66 discriminator 1
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 8 404 72 discriminator 1
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 8 404 62 discriminator 1
	leal	0(,%eax,4), %edx
	.loc 8 404 47 discriminator 1
	movl	8(%ebp), %eax
	addl	%edx, %eax
	jmp	L4174
L4173:
	.loc 8 404 47 is_stmt 0 discriminator 2
	movl	$0, %eax
L4174:
	.loc 8 404 28 is_stmt 1 discriminator 4
	movl	%eax, -44(%ebp)
	.loc 8 407 36 discriminator 4
	movl	-40(%ebp), %eax
	movl	(%eax), %eax
	.loc 8 407 38 discriminator 4
	addl	$127, %eax
	.loc 8 407 21 discriminator 4
	leal	255(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$8, %eax
	movl	%eax, -48(%ebp)
	.loc 8 408 36 discriminator 4
	movl	-40(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	.loc 8 408 38 discriminator 4
	addl	$127, %eax
	.loc 8 408 21 discriminator 4
	leal	255(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$8, %eax
	movl	%eax, -52(%ebp)
	.loc 8 409 36 discriminator 4
	movl	-40(%ebp), %eax
	addl	$8, %eax
	movl	(%eax), %eax
	.loc 8 409 38 discriminator 4
	addl	$127, %eax
	.loc 8 409 21 discriminator 4
	leal	255(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$8, %eax
	movl	%eax, -56(%ebp)
	.loc 8 413 13 discriminator 4
	cmpl	$0, 8(%ebp)
	je	L4175
	.loc 8 414 25 discriminator 1
	movl	-44(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 8 413 27 discriminator 1
	cmpl	%eax, -48(%ebp)
	jne	L4175
	.loc 8 415 25
	movl	-44(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 8 414 33
	cmpl	%eax, -52(%ebp)
	jne	L4175
	.loc 8 416 25
	movl	-44(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 8 415 33
	cmpl	%eax, -56(%ebp)
	jne	L4175
	.loc 8 418 28 discriminator 1
	movl	-40(%ebp), %eax
	movl	-48(%ebp), %edx
	movl	%edx, (%eax)
	.loc 8 419 26 discriminator 1
	movl	-40(%ebp), %eax
	leal	4(%eax), %edx
	.loc 8 419 28 discriminator 1
	movl	-52(%ebp), %eax
	movl	%eax, (%edx)
	.loc 8 420 26 discriminator 1
	movl	-40(%ebp), %eax
	leal	8(%eax), %edx
	.loc 8 420 28 discriminator 1
	movl	-56(%ebp), %eax
	movl	%eax, (%edx)
	.loc 8 421 26 discriminator 1
	movl	-40(%ebp), %eax
	addl	$12, %eax
	.loc 8 421 28 discriminator 1
	movl	$0, (%eax)
	jmp	L4176
L4175:
	.loc 8 425 21
	movl	$1000000, -108(%ebp)
	.loc 8 426 21
	movl	$0, -112(%ebp)
	.loc 8 429 38
	movl	$1, 24(%esp)
	leal	-108(%ebp), %eax
	movl	%eax, 20(%esp)
	leal	-112(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	28(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z25GifGetClosestPaletteColorP10GifPaletteiiiPiS1_i
	.loc 8 432 38
	movl	-40(%ebp), %eax
	movl	(%eax), %ecx
	.loc 8 432 67
	movl	-112(%ebp), %eax
	movl	28(%ebp), %edx
	movzbl	4(%edx,%eax), %eax
	.loc 8 432 42
	movzbl	%al, %eax
	.loc 8 432 70
	sall	$8, %eax
	.loc 8 432 21
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -60(%ebp)
	.loc 8 433 38
	movl	-40(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %ecx
	.loc 8 433 67
	movl	-112(%ebp), %eax
	movl	28(%ebp), %edx
	movzbl	260(%edx,%eax), %eax
	.loc 8 433 42
	movzbl	%al, %eax
	.loc 8 433 70
	sall	$8, %eax
	.loc 8 433 21
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -64(%ebp)
	.loc 8 434 38
	movl	-40(%ebp), %eax
	addl	$8, %eax
	movl	(%eax), %ecx
	.loc 8 434 67
	movl	-112(%ebp), %eax
	movl	28(%ebp), %edx
	movzbl	516(%edx,%eax), %eax
	.loc 8 434 42
	movzbl	%al, %eax
	.loc 8 434 70
	sall	$8, %eax
	.loc 8 434 21
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -68(%ebp)
	.loc 8 436 41
	movl	-112(%ebp), %eax
	movl	28(%ebp), %edx
	movzbl	4(%edx,%eax), %eax
	movzbl	%al, %edx
	.loc 8 436 24
	movl	-40(%ebp), %eax
	movl	%edx, (%eax)
	.loc 8 437 41
	movl	-112(%ebp), %eax
	movl	28(%ebp), %edx
	movzbl	260(%edx,%eax), %eax
	.loc 8 437 22
	movl	-40(%ebp), %edx
	addl	$4, %edx
	.loc 8 437 41
	movzbl	%al, %eax
	.loc 8 437 24
	movl	%eax, (%edx)
	.loc 8 438 41
	movl	-112(%ebp), %eax
	movl	28(%ebp), %edx
	movzbl	516(%edx,%eax), %eax
	.loc 8 438 22
	movl	-40(%ebp), %edx
	addl	$8, %edx
	.loc 8 438 41
	movzbl	%al, %eax
	.loc 8 438 24
	movl	%eax, (%edx)
	.loc 8 439 22
	movl	-40(%ebp), %eax
	leal	12(%eax), %edx
	.loc 8 439 24
	movl	-112(%ebp), %eax
	movl	%eax, (%edx)
	.loc 8 443 39
	movl	-16(%ebp), %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 8 443 47
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 8 443 52
	addl	$1, %eax
	.loc 8 443 17
	movl	%eax, -72(%ebp)
	.loc 8 444 47
	movl	-16(%ebp), %eax
	addl	$1, %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 8 444 55
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 8 444 60
	subl	$1, %eax
	.loc 8 444 17
	movl	%eax, -76(%ebp)
	.loc 8 445 47
	movl	-16(%ebp), %eax
	addl	$1, %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 8 445 55
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 8 445 17
	movl	%eax, -80(%ebp)
	.loc 8 446 47
	movl	-16(%ebp), %eax
	addl	$1, %eax
	imull	20(%ebp), %eax
	movl	%eax, %edx
	.loc 8 446 55
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 8 446 60
	addl	$1, %eax
	.loc 8 446 17
	movl	%eax, -84(%ebp)
LBB775:
	.loc 8 448 13
	movl	-72(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jge	L4177
LBB776:
	.loc 8 450 44
	movl	-72(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	.loc 8 450 26
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -88(%ebp)
	.loc 8 451 53
	movl	-60(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	subl	%edx, %eax
	.loc 8 451 35
	leal	15(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$4, %eax
	movl	%eax, %edx
	movl	-88(%ebp), %eax
	movl	(%eax), %eax
	negl	%eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	movl	%eax, %edx
	.loc 8 451 25
	movl	-88(%ebp), %eax
	movl	(%eax), %eax
	addl	%eax, %edx
	movl	-88(%ebp), %eax
	movl	%edx, (%eax)
	.loc 8 452 53
	movl	-64(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	subl	%edx, %eax
	.loc 8 452 35
	leal	15(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$4, %eax
	movl	%eax, %edx
	.loc 8 452 44
	movl	-88(%ebp), %eax
	addl	$4, %eax
	.loc 8 452 35
	movl	(%eax), %eax
	negl	%eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	movl	%eax, %ecx
	.loc 8 452 25
	movl	-88(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %edx
	movl	-88(%ebp), %eax
	addl	$4, %eax
	addl	%ecx, %edx
	movl	%edx, (%eax)
	.loc 8 453 53
	movl	-68(%ebp), %edx
	movl	%edx, %eax
	sall	$3, %eax
	subl	%edx, %eax
	.loc 8 453 35
	leal	15(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$4, %eax
	movl	%eax, %edx
	.loc 8 453 44
	movl	-88(%ebp), %eax
	addl	$8, %eax
	.loc 8 453 35
	movl	(%eax), %eax
	negl	%eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	movl	%eax, %ecx
	.loc 8 453 25
	movl	-88(%ebp), %eax
	addl	$8, %eax
	movl	(%eax), %edx
	movl	-88(%ebp), %eax
	addl	$8, %eax
	addl	%ecx, %edx
	movl	%edx, (%eax)
L4177:
LBE776:
LBE775:
LBB777:
	.loc 8 456 13
	movl	-76(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jge	L4178
LBB778:
	.loc 8 458 44
	movl	-76(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	.loc 8 458 26
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -92(%ebp)
	.loc 8 459 53
	movl	-60(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	.loc 8 459 35
	leal	15(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$4, %eax
	movl	%eax, %edx
	movl	-92(%ebp), %eax
	movl	(%eax), %eax
	negl	%eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	movl	%eax, %edx
	.loc 8 459 25
	movl	-92(%ebp), %eax
	movl	(%eax), %eax
	addl	%eax, %edx
	movl	-92(%ebp), %eax
	movl	%edx, (%eax)
	.loc 8 460 53
	movl	-64(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	.loc 8 460 35
	leal	15(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$4, %eax
	movl	%eax, %edx
	.loc 8 460 44
	movl	-92(%ebp), %eax
	addl	$4, %eax
	.loc 8 460 35
	movl	(%eax), %eax
	negl	%eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	movl	%eax, %ecx
	.loc 8 460 25
	movl	-92(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %edx
	movl	-92(%ebp), %eax
	addl	$4, %eax
	addl	%ecx, %edx
	movl	%edx, (%eax)
	.loc 8 461 53
	movl	-68(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	.loc 8 461 35
	leal	15(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$4, %eax
	movl	%eax, %edx
	.loc 8 461 44
	movl	-92(%ebp), %eax
	addl	$8, %eax
	.loc 8 461 35
	movl	(%eax), %eax
	negl	%eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	movl	%eax, %ecx
	.loc 8 461 25
	movl	-92(%ebp), %eax
	addl	$8, %eax
	movl	(%eax), %edx
	movl	-92(%ebp), %eax
	addl	$8, %eax
	addl	%ecx, %edx
	movl	%edx, (%eax)
L4178:
LBE778:
LBE777:
LBB779:
	.loc 8 464 13
	movl	-80(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jge	L4179
LBB780:
	.loc 8 466 44
	movl	-80(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	.loc 8 466 26
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -96(%ebp)
	.loc 8 467 53
	movl	-60(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	.loc 8 467 35
	leal	15(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$4, %eax
	movl	%eax, %edx
	movl	-96(%ebp), %eax
	movl	(%eax), %eax
	negl	%eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	movl	%eax, %edx
	.loc 8 467 25
	movl	-96(%ebp), %eax
	movl	(%eax), %eax
	addl	%eax, %edx
	movl	-96(%ebp), %eax
	movl	%edx, (%eax)
	.loc 8 468 53
	movl	-64(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	.loc 8 468 35
	leal	15(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$4, %eax
	movl	%eax, %edx
	.loc 8 468 44
	movl	-96(%ebp), %eax
	addl	$4, %eax
	.loc 8 468 35
	movl	(%eax), %eax
	negl	%eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	movl	%eax, %ecx
	.loc 8 468 25
	movl	-96(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %edx
	movl	-96(%ebp), %eax
	addl	$4, %eax
	addl	%ecx, %edx
	movl	%edx, (%eax)
	.loc 8 469 53
	movl	-68(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	.loc 8 469 35
	leal	15(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$4, %eax
	movl	%eax, %edx
	.loc 8 469 44
	movl	-96(%ebp), %eax
	addl	$8, %eax
	.loc 8 469 35
	movl	(%eax), %eax
	negl	%eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	movl	%eax, %ecx
	.loc 8 469 25
	movl	-96(%ebp), %eax
	addl	$8, %eax
	movl	(%eax), %edx
	movl	-96(%ebp), %eax
	addl	$8, %eax
	addl	%ecx, %edx
	movl	%edx, (%eax)
L4179:
LBE780:
LBE779:
LBB781:
	.loc 8 472 13
	movl	-84(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jge	L4176
LBB782:
	.loc 8 474 44
	movl	-84(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	.loc 8 474 26
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -100(%ebp)
	.loc 8 475 35
	movl	-60(%ebp), %eax
	leal	15(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$4, %eax
	movl	%eax, %edx
	movl	-100(%ebp), %eax
	movl	(%eax), %eax
	negl	%eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	movl	%eax, %edx
	.loc 8 475 25
	movl	-100(%ebp), %eax
	movl	(%eax), %eax
	addl	%eax, %edx
	movl	-100(%ebp), %eax
	movl	%edx, (%eax)
	.loc 8 476 35
	movl	-64(%ebp), %eax
	leal	15(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$4, %eax
	movl	%eax, %edx
	.loc 8 476 44
	movl	-100(%ebp), %eax
	addl	$4, %eax
	.loc 8 476 35
	movl	(%eax), %eax
	negl	%eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	movl	%eax, %ecx
	.loc 8 476 25
	movl	-100(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %edx
	movl	-100(%ebp), %eax
	addl	$4, %eax
	addl	%ecx, %edx
	movl	%edx, (%eax)
	.loc 8 477 35
	movl	-68(%ebp), %eax
	leal	15(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$4, %eax
	movl	%eax, %edx
	.loc 8 477 44
	movl	-100(%ebp), %eax
	addl	$8, %eax
	.loc 8 477 35
	movl	(%eax), %eax
	negl	%eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z7GifIMaxii
	movl	%eax, %ecx
	.loc 8 477 25
	movl	-100(%ebp), %eax
	addl	$8, %eax
	movl	(%eax), %edx
	movl	-100(%ebp), %eax
	addl	$8, %eax
	addl	%ecx, %edx
	movl	%edx, (%eax)
L4176:
LBE782:
LBE781:
LBE774:
	.loc 8 401 9 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L4181
L4172:
LBE773:
LBE772:
	.loc 8 399 5 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L4182
L4171:
LBE771:
LBB783:
	.loc 8 483 14
	movl	$0, -24(%ebp)
L4184:
	.loc 8 483 32 discriminator 3
	movl	-28(%ebp), %eax
	sall	$2, %eax
	.loc 8 483 22 discriminator 3
	cmpl	%eax, -24(%ebp)
	jge	L4183
	.loc 8 485 47 discriminator 2
	movl	-24(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %ecx
	.loc 8 485 20 discriminator 2
	movl	-24(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 8 485 22 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 8 483 5 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L4184
L4183:
LBE783:
	.loc 8 488 18
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 8 489 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2131:
	.globl	__Z17GifThresholdImagePKhS0_PhjjP10GifPalette
	.def	__Z17GifThresholdImagePKhS0_PhjjP10GifPalette;	.scl	2;	.type	32;	.endef
__Z17GifThresholdImagePKhS0_PhjjP10GifPalette:
LFB2132:
	.loc 8 493 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$52, %esp
	.cfi_offset 3, -12
	.loc 8 494 14
	movl	20(%ebp), %eax
	imull	24(%ebp), %eax
	movl	%eax, -16(%ebp)
LBB784:
	.loc 8 495 19
	movl	$0, -12(%ebp)
L4190:
	.loc 8 495 27 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jnb	L4191
LBB785:
LBB786:
	.loc 8 499 9
	cmpl	$0, 8(%ebp)
	je	L4187
	.loc 8 500 23 discriminator 1
	movl	8(%ebp), %eax
	movzbl	(%eax), %edx
	.loc 8 500 39 discriminator 1
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 8 499 22 discriminator 1
	cmpb	%al, %dl
	jne	L4187
	.loc 8 501 23
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %edx
	.loc 8 501 39
	movl	12(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	.loc 8 500 41
	cmpb	%al, %dl
	jne	L4187
	.loc 8 502 23
	movl	8(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %edx
	.loc 8 502 39
	movl	12(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	.loc 8 501 41
	cmpb	%al, %dl
	jne	L4187
	.loc 8 504 38
	movl	8(%ebp), %eax
	movzbl	(%eax), %edx
	.loc 8 504 25
	movl	16(%ebp), %eax
	movb	%dl, (%eax)
	.loc 8 505 38
	movl	8(%ebp), %eax
	addl	$1, %eax
	.loc 8 505 23
	movl	16(%ebp), %edx
	addl	$1, %edx
	.loc 8 505 38
	movzbl	(%eax), %eax
	.loc 8 505 25
	movb	%al, (%edx)
	.loc 8 506 38
	movl	8(%ebp), %eax
	addl	$2, %eax
	.loc 8 506 23
	movl	16(%ebp), %edx
	addl	$2, %edx
	.loc 8 506 38
	movzbl	(%eax), %eax
	.loc 8 506 25
	movb	%al, (%edx)
	.loc 8 507 23
	movl	16(%ebp), %eax
	addl	$3, %eax
	.loc 8 507 25
	movb	$0, (%eax)
	jmp	L4188
L4187:
LBB787:
	.loc 8 512 21
	movl	$1000000, -20(%ebp)
	.loc 8 513 21
	movl	$1, -24(%ebp)
	.loc 8 514 84
	movl	12(%ebp), %eax
	addl	$2, %eax
	movzbl	(%eax), %eax
	.loc 8 514 38
	movzbl	%al, %ecx
	.loc 8 514 70
	movl	12(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	.loc 8 514 38
	movzbl	%al, %edx
	.loc 8 514 56
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 8 514 38
	movzbl	%al, %eax
	movl	$1, 24(%esp)
	leal	-20(%ebp), %ebx
	movl	%ebx, 20(%esp)
	leal	-24(%ebp), %ebx
	movl	%ebx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	28(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z25GifGetClosestPaletteColorP10GifPaletteiiiPiS1_i
	.loc 8 517 42
	movl	-24(%ebp), %eax
	movl	28(%ebp), %edx
	movzbl	4(%edx,%eax), %edx
	.loc 8 517 25
	movl	16(%ebp), %eax
	movb	%dl, (%eax)
	.loc 8 518 42
	movl	-24(%ebp), %eax
	.loc 8 518 23
	movl	16(%ebp), %edx
	leal	1(%edx), %ecx
	.loc 8 518 42
	movl	28(%ebp), %edx
	movzbl	260(%edx,%eax), %eax
	.loc 8 518 25
	movb	%al, (%ecx)
	.loc 8 519 42
	movl	-24(%ebp), %eax
	.loc 8 519 23
	movl	16(%ebp), %edx
	leal	2(%edx), %ecx
	.loc 8 519 42
	movl	28(%ebp), %edx
	movzbl	516(%edx,%eax), %eax
	.loc 8 519 25
	movb	%al, (%ecx)
	.loc 8 520 25
	movl	-24(%ebp), %edx
	.loc 8 520 23
	movl	16(%ebp), %eax
	addl	$3, %eax
	.loc 8 520 25
	movb	%dl, (%eax)
L4188:
LBE787:
LBE786:
	.loc 8 523 9
	cmpl	$0, 8(%ebp)
	je	L4189
	.loc 8 523 33 discriminator 1
	addl	$4, 8(%ebp)
L4189:
	.loc 8 524 18 discriminator 2
	addl	$4, 16(%ebp)
	.loc 8 525 19 discriminator 2
	addl	$4, 12(%ebp)
LBE785:
	.loc 8 495 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4190
L4191:
LBE784:
	.loc 8 527 1
	nop
	addl	$52, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2132:
	.globl	__Z11GifWriteBitP12GifBitStatusj
	.def	__Z11GifWriteBitP12GifBitStatusj;	.scl	2;	.type	32;	.endef
__Z11GifWriteBitP12GifBitStatusj:
LFB2133:
	.loc 8 542 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 8 543 9
	andl	$1, 12(%ebp)
	.loc 8 544 24
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 8 544 9
	movl	%eax, %ecx
	sall	%cl, 12(%ebp)
	.loc 8 545 16
	movl	8(%ebp), %eax
	movzbl	1(%eax), %eax
	movl	12(%ebp), %edx
	orl	%eax, %edx
	movl	8(%ebp), %eax
	movb	%dl, 1(%eax)
	.loc 8 547 13
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 8 547 5
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	movb	%dl, (%eax)
	.loc 8 548 15
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 8 548 5
	cmpb	$7, %al
	jbe	L4194
	.loc 8 551 27
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 8 551 37
	leal	1(%eax), %ecx
	movl	8(%ebp), %edx
	movl	%ecx, 4(%edx)
	.loc 8 551 49
	movl	8(%ebp), %edx
	movzbl	1(%edx), %ecx
	.loc 8 551 41
	movl	8(%ebp), %edx
	movb	%cl, 8(%edx,%eax)
	.loc 8 553 24
	movl	8(%ebp), %eax
	movb	$0, (%eax)
	.loc 8 554 20
	movl	8(%ebp), %eax
	movb	$0, 1(%eax)
L4194:
	.loc 8 556 1
	nop
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2133:
	.globl	__Z13GifWriteChunkP6_iobufP12GifBitStatus
	.def	__Z13GifWriteChunkP6_iobufP12GifBitStatus;	.scl	2;	.type	32;	.endef
__Z13GifWriteChunkP6_iobufP12GifBitStatus:
LFB2134:
	.loc 8 560 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 8 561 22
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 8 561 10
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	_fputc
	.loc 8 562 11
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 8 562 18
	movl	12(%ebp), %edx
	leal	8(%edx), %ecx
	.loc 8 562 11
	movl	8(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$1, 4(%esp)
	movl	%ecx, (%esp)
	call	_fwrite
	.loc 8 564 20
	movl	12(%ebp), %eax
	movb	$0, (%eax)
	.loc 8 565 16
	movl	12(%ebp), %eax
	movb	$0, 1(%eax)
	.loc 8 566 22
	movl	12(%ebp), %eax
	movl	$0, 4(%eax)
	.loc 8 567 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2134:
	.globl	__Z12GifWriteCodeP6_iobufP12GifBitStatusjj
	.def	__Z12GifWriteCodeP6_iobufP12GifBitStatusjj;	.scl	2;	.type	32;	.endef
__Z12GifWriteCodeP6_iobufP12GifBitStatusjj:
LFB2135:
	.loc 8 570 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
LBB788:
	.loc 8 571 19
	movl	$0, -12(%ebp)
L4199:
	.loc 8 571 27 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	20(%ebp), %eax
	jnb	L4200
	.loc 8 573 20
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11GifWriteBitP12GifBitStatusj
	.loc 8 574 14
	shrl	16(%ebp)
	.loc 8 576 19
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 8 576 9
	cmpl	$255, %eax
	jne	L4198
	.loc 8 578 26
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z13GifWriteChunkP6_iobufP12GifBitStatus
L4198:
	.loc 8 571 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4199
L4200:
LBE788:
	.loc 8 581 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2135:
	.globl	__Z15GifWritePalettePK10GifPaletteP6_iobuf
	.def	__Z15GifWritePalettePK10GifPaletteP6_iobuf;	.scl	2;	.type	32;	.endef
__Z15GifWritePalettePK10GifPaletteP6_iobuf:
LFB2136:
	.loc 8 592 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 8 593 10
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 594 10
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 595 10
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
LBB789:
	.loc 8 597 13
	movl	$1, -12(%ebp)
L4203:
	.loc 8 597 34 discriminator 3
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 8 597 25 discriminator 3
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 8 597 21 discriminator 3
	cmpl	%eax, -12(%ebp)
	jge	L4204
LBB790:
	.loc 8 599 32 discriminator 2
	movl	8(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	addl	$4, %eax
	movzbl	(%eax), %eax
	.loc 8 599 18 discriminator 2
	movzbl	%al, %eax
	movl	%eax, -16(%ebp)
	.loc 8 600 32 discriminator 2
	movl	8(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	addl	$260, %eax
	movzbl	(%eax), %eax
	.loc 8 600 18 discriminator 2
	movzbl	%al, %eax
	movl	%eax, -20(%ebp)
	.loc 8 601 32 discriminator 2
	movl	8(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	addl	$516, %eax
	movzbl	(%eax), %eax
	.loc 8 601 18 discriminator 2
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	.loc 8 603 14 discriminator 2
	movl	-16(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 604 14 discriminator 2
	movl	-20(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 605 14 discriminator 2
	movl	-24(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
LBE790:
	.loc 8 597 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4203
L4204:
LBE789:
	.loc 8 607 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2136:
	.globl	__Z16GifWriteLzwImageP6_iobufPhjjjjjP10GifPalette
	.def	__Z16GifWriteLzwImageP6_iobufPhjjjjjP10GifPalette;	.scl	2;	.type	32;	.endef
__Z16GifWriteLzwImageP6_iobufPhjjjjjP10GifPalette:
LFB2137:
	.loc 8 611 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$328, %esp
	.loc 8 613 10
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$33, (%esp)
	call	_fputc
	.loc 8 614 10
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$249, (%esp)
	call	_fputc
	.loc 8 615 10
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$4, (%esp)
	call	_fputc
	.loc 8 616 10
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$5, (%esp)
	call	_fputc
	.loc 8 617 17
	movl	32(%ebp), %eax
	.loc 8 617 10
	movzbl	%al, %eax
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 618 18
	movl	32(%ebp), %eax
	shrl	$8, %eax
	.loc 8 618 10
	movzbl	%al, %eax
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 619 10
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 620 10
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 622 10
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$44, (%esp)
	call	_fputc
	.loc 8 624 16
	movl	16(%ebp), %eax
	.loc 8 624 10
	movzbl	%al, %eax
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 625 17
	movl	16(%ebp), %eax
	shrl	$8, %eax
	.loc 8 625 10
	movzbl	%al, %eax
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 626 15
	movl	20(%ebp), %eax
	.loc 8 626 10
	movzbl	%al, %eax
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 627 16
	movl	20(%ebp), %eax
	shrl	$8, %eax
	.loc 8 627 10
	movzbl	%al, %eax
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 629 17
	movl	24(%ebp), %eax
	.loc 8 629 10
	movzbl	%al, %eax
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 630 18
	movl	24(%ebp), %eax
	shrl	$8, %eax
	.loc 8 630 10
	movzbl	%al, %eax
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 631 18
	movl	28(%ebp), %eax
	.loc 8 631 10
	movzbl	%al, %eax
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 632 19
	movl	28(%ebp), %eax
	shrl	$8, %eax
	.loc 8 632 10
	movzbl	%al, %eax
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 637 24
	movl	36(%ebp), %eax
	movl	(%eax), %eax
	.loc 8 637 10
	leal	127(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	_fputc
	.loc 8 638 20
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	36(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z15GifWritePalettePK10GifPaletteP6_iobuf
	.loc 8 640 15
	movl	36(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 8 641 43
	movl	36(%ebp), %eax
	movl	(%eax), %eax
	.loc 8 641 34
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 8 641 20
	movl	%eax, -36(%ebp)
	.loc 8 643 10
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 645 56
	movl	$2097152, (%esp)
	call	_malloc
	movl	%eax, -40(%ebp)
	.loc 8 647 11
	movl	$2097152, 8(%esp)
	movl	$0, 4(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 8 648 13
	movl	$-1, -12(%ebp)
	.loc 8 649 25
	movl	-32(%ebp), %eax
	.loc 8 649 14
	addl	$1, %eax
	movl	%eax, -16(%ebp)
	.loc 8 650 14
	movl	-36(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -20(%ebp)
	.loc 8 653 15
	movb	$0, -307(%ebp)
	.loc 8 654 19
	movb	$0, -308(%ebp)
	.loc 8 655 21
	movl	$0, -304(%ebp)
	.loc 8 657 17
	movl	-16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-308(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z12GifWriteCodeP6_iobufP12GifBitStatusjj
LBB791:
	.loc 8 659 18
	movl	$0, -24(%ebp)
L4214:
	.loc 8 659 26 discriminator 1
	movl	-24(%ebp), %eax
	cmpl	28(%ebp), %eax
	jnb	L4206
LBB792:
LBB793:
	.loc 8 661 22
	movl	$0, -28(%ebp)
L4213:
	.loc 8 661 30 discriminator 1
	movl	-28(%ebp), %eax
	cmpl	24(%ebp), %eax
	jnb	L4207
LBB794:
	.loc 8 668 42
	movl	-24(%ebp), %eax
	imull	24(%ebp), %eax
	movl	%eax, %edx
	.loc 8 668 48
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	.loc 8 668 52
	sall	$2, %eax
	.loc 8 668 56
	leal	3(%eax), %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 8 668 21
	movzbl	(%eax), %eax
	movb	%al, -41(%ebp)
	.loc 8 675 13
	cmpl	$0, -12(%ebp)
	jns	L4208
	.loc 8 678 25
	movzbl	-41(%ebp), %eax
	movl	%eax, -12(%ebp)
	jmp	L4209
L4208:
	.loc 8 680 38
	movl	-12(%ebp), %eax
	sall	$9, %eax
	movl	%eax, %edx
	movl	-40(%ebp), %eax
	addl	%eax, %edx
	.loc 8 680 56
	movzbl	-41(%ebp), %eax
	movzwl	(%edx,%eax,2), %eax
	.loc 8 680 18
	testw	%ax, %ax
	je	L4210
	.loc 8 683 43
	movl	-12(%ebp), %eax
	sall	$9, %eax
	movl	%eax, %edx
	movl	-40(%ebp), %eax
	addl	%eax, %edx
	.loc 8 683 61
	movzbl	-41(%ebp), %eax
	movzwl	(%edx,%eax,2), %eax
	.loc 8 683 25
	movzwl	%ax, %eax
	movl	%eax, -12(%ebp)
	jmp	L4209
L4210:
	.loc 8 688 29
	movl	-12(%ebp), %eax
	movl	-16(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	leal	-308(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z12GifWriteCodeP6_iobufP12GifBitStatusjj
	.loc 8 691 53
	addl	$1, -20(%ebp)
	.loc 8 691 33
	movl	-12(%ebp), %eax
	sall	$9, %eax
	movl	%eax, %edx
	movl	-40(%ebp), %eax
	addl	%eax, %edx
	.loc 8 691 51
	movzbl	-41(%ebp), %eax
	.loc 8 691 53
	movl	-20(%ebp), %ecx
	movw	%cx, (%edx,%eax,2)
	.loc 8 693 37
	movl	-16(%ebp), %eax
	movl	$1, %edx
	movl	%eax, %ecx
	sall	%cl, %edx
	movl	%edx, %eax
	.loc 8 693 17
	cmpl	%eax, -20(%ebp)
	jb	L4211
	.loc 8 697 29
	addl	$1, -16(%ebp)
L4211:
	.loc 8 699 17
	cmpl	$4095, -20(%ebp)
	jne	L4212
	.loc 8 702 33
	movl	-16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-308(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z12GifWriteCodeP6_iobufP12GifBitStatusjj
	.loc 8 704 27
	movl	$2097152, 8(%esp)
	movl	$0, 4(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 8 705 55
	movl	-32(%ebp), %eax
	addl	$1, %eax
	.loc 8 705 30
	movl	%eax, -16(%ebp)
	.loc 8 706 29
	movl	-36(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -20(%ebp)
L4212:
	.loc 8 709 25
	movzbl	-41(%ebp), %eax
	movl	%eax, -12(%ebp)
L4209:
LBE794:
	.loc 8 661 9 discriminator 2
	addl	$1, -28(%ebp)
	jmp	L4213
L4207:
LBE793:
LBE792:
	.loc 8 659 5 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L4214
L4206:
LBE791:
	.loc 8 715 17
	movl	-12(%ebp), %eax
	movl	-16(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	leal	-308(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z12GifWriteCodeP6_iobufP12GifBitStatusjj
	.loc 8 716 17
	movl	-16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-308(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z12GifWriteCodeP6_iobufP12GifBitStatusjj
	.loc 8 717 43
	movl	-32(%ebp), %eax
	.loc 8 717 17
	leal	1(%eax), %edx
	movl	-36(%ebp), %eax
	addl	$1, %eax
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	leal	-308(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z12GifWriteCodeP6_iobufP12GifBitStatusjj
L4216:
	.loc 8 720 17 discriminator 2
	movzbl	-308(%ebp), %eax
	testb	%al, %al
	je	L4215
	.loc 8 720 39 discriminator 1
	movl	$0, 4(%esp)
	leal	-308(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11GifWriteBitP12GifBitStatusj
	.loc 8 720 5 discriminator 1
	jmp	L4216
L4215:
	.loc 8 721 14
	movl	-304(%ebp), %eax
	.loc 8 721 5
	testl	%eax, %eax
	je	L4217
	.loc 8 721 40 discriminator 1
	leal	-308(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z13GifWriteChunkP6_iobufP12GifBitStatus
L4217:
	.loc 8 723 10
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 725 18
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 8 726 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2137:
	.section .rdata,"dr"
LC221:
	.ascii "GIF89a\0"
LC222:
	.ascii "NETSCAPE2.0\0"
	.text
	.globl	__Z8GifBeginP9GifWriterPKcjjjib
	.def	__Z8GifBeginP9GifWriterPKcjjjib;	.scl	2;	.type	32;	.endef
__Z8GifBeginP9GifWriterPKcjjjib:
LFB2138:
	.loc 8 739 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	movl	32(%ebp), %eax
	movb	%al, -12(%ebp)
	.loc 8 745 22
	movl	$LC3, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_fopen
	movl	%eax, %edx
	.loc 8 745 15
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 8 747 17
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 8 747 5
	testl	%eax, %eax
	jne	L4219
	.loc 8 747 27 discriminator 1
	movl	$0, %eax
	jmp	L4220
L4219:
	.loc 8 749 24
	movl	8(%ebp), %eax
	movb	$1, 8(%eax)
	.loc 8 752 50
	movl	16(%ebp), %eax
	imull	20(%ebp), %eax
	.loc 8 752 44
	sall	$2, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, %edx
	.loc 8 752 22
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 8 754 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$6, 8(%esp)
	movl	$1, 4(%esp)
	movl	$LC221, (%esp)
	call	_fwrite
	.loc 8 757 10
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 8 757 17
	movl	16(%ebp), %eax
	.loc 8 757 10
	movzbl	%al, %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 758 10
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 8 758 18
	movl	16(%ebp), %eax
	shrl	$8, %eax
	.loc 8 758 10
	movzbl	%al, %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 759 10
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 8 759 18
	movl	20(%ebp), %eax
	.loc 8 759 10
	movzbl	%al, %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 760 10
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 8 760 19
	movl	20(%ebp), %eax
	shrl	$8, %eax
	.loc 8 760 10
	movzbl	%al, %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_fputc
	.loc 8 762 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$240, (%esp)
	call	_fputc
	.loc 8 763 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 764 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 768 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 769 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 770 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 772 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 773 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 774 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 776 5
	cmpl	$0, 24(%ebp)
	je	L4221
	.loc 8 779 14
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$33, (%esp)
	call	_fputc
	.loc 8 780 14
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$255, (%esp)
	call	_fputc
	.loc 8 781 14
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$11, (%esp)
	call	_fputc
	.loc 8 782 14
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$11, 8(%esp)
	movl	$1, 4(%esp)
	movl	$LC222, (%esp)
	call	_fwrite
	.loc 8 783 14
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$3, (%esp)
	call	_fputc
	.loc 8 785 14
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$1, (%esp)
	call	_fputc
	.loc 8 786 14
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 787 14
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
	.loc 8 789 14
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	_fputc
L4221:
	.loc 8 792 12
	movl	$1, %eax
L4220:
	.loc 8 793 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2138:
	.globl	__Z13GifWriteFrameP9GifWriterPKhjjjib
	.def	__Z13GifWriteFrameP9GifWriterPKhjjjib;	.scl	2;	.type	32;	.endef
__Z13GifWriteFrameP9GifWriterPKhjjjib:
LFB2139:
	.loc 8 800 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$1352, %esp
	movl	32(%ebp), %eax
	movb	%al, -1308(%ebp)
	.loc 8 801 17
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 8 801 5
	testl	%eax, %eax
	jne	L4223
	.loc 8 801 27 discriminator 1
	movl	$0, %eax
	jmp	L4231
L4223:
	.loc 8 803 39
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	.loc 8 803 49
	testb	%al, %al
	je	L4225
	.loc 8 803 49 is_stmt 0 discriminator 1
	movl	$0, %eax
	jmp	L4226
L4225:
	.loc 8 803 49 discriminator 2
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
L4226:
	.loc 8 803 20 is_stmt 1 discriminator 4
	movl	%eax, -12(%ebp)
	.loc 8 804 24 discriminator 4
	movl	8(%ebp), %eax
	movb	$0, 8(%eax)
	.loc 8 807 19 discriminator 4
	movzbl	-1308(%ebp), %edx
	cmpb	$0, -1308(%ebp)
	je	L4227
	.loc 8 807 19 is_stmt 0 discriminator 1
	movl	$0, %eax
	jmp	L4228
L4227:
	.loc 8 807 19 discriminator 2
	movl	-12(%ebp), %eax
L4228:
	.loc 8 807 19 discriminator 4
	leal	-1296(%ebp), %ecx
	movl	%ecx, 24(%esp)
	movl	%edx, 20(%esp)
	movl	28(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	16(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z14GifMakePalettePKhS0_jjibP10GifPalette
	.loc 8 809 5 is_stmt 1 discriminator 4
	cmpb	$0, -1308(%ebp)
	je	L4229
	.loc 8 810 23
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	leal	-1296(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	16(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z14GifDitherImagePKhS0_PhjjP10GifPalette
	jmp	L4230
L4229:
	.loc 8 812 26
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	leal	-1296(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	16(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z17GifThresholdImagePKhS0_PhjjP10GifPalette
L4230:
	.loc 8 814 21
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	leal	-1296(%ebp), %ecx
	movl	%ecx, 28(%esp)
	movl	24(%ebp), %ecx
	movl	%ecx, 24(%esp)
	movl	20(%ebp), %ecx
	movl	%ecx, 20(%esp)
	movl	16(%ebp), %ecx
	movl	%ecx, 16(%esp)
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z16GifWriteLzwImageP6_iobufPhjjjjjP10GifPalette
	.loc 8 816 12
	movl	$1, %eax
L4231:
	.loc 8 817 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2139:
	.globl	__Z6GifEndP9GifWriter
	.def	__Z6GifEndP9GifWriter;	.scl	2;	.type	32;	.endef
__Z6GifEndP9GifWriter:
LFB2140:
	.loc 8 823 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 8 824 17
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 8 824 5
	testl	%eax, %eax
	jne	L4233
	.loc 8 824 27 discriminator 1
	movl	$0, %eax
	jmp	L4234
L4233:
	.loc 8 826 10
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$59, (%esp)
	call	_fputc
	.loc 8 827 11
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	_fclose
	.loc 8 828 22
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 8 828 13
	movl	%eax, (%esp)
	call	_free
	.loc 8 830 15
	movl	8(%ebp), %eax
	movl	$0, (%eax)
	.loc 8 831 22
	movl	8(%ebp), %eax
	movl	$0, 4(%eax)
	.loc 8 833 12
	movl	$1, %eax
L4234:
	.loc 8 834 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2140:
	.section .rdata,"dr"
	.align 4
__ZL14file_name_size:
	.long	400
	.text
	.globl	__Z15rect_from_rectf6RECT_f
	.def	__Z15rect_from_rectf6RECT_f;	.scl	2;	.type	32;	.endef
__Z15rect_from_rectf6RECT_f:
LFB2141:
	.file 9 "main.cpp"
	.loc 9 66 35
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$8, %esp
	.loc 9 68 26
	flds	12(%ebp)
	.loc 9 68 19
	fnstcw	-2(%ebp)
	movzwl	-2(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -4(%ebp)
	fldcw	-4(%ebp)
	fistpl	-8(%ebp)
	fldcw	-2(%ebp)
	movl	-8(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 69 26
	flds	16(%ebp)
	.loc 9 69 19
	fldcw	-4(%ebp)
	fistpl	-8(%ebp)
	fldcw	-2(%ebp)
	movl	-8(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 9 70 26
	flds	20(%ebp)
	.loc 9 70 19
	fldcw	-4(%ebp)
	fistpl	-8(%ebp)
	fldcw	-2(%ebp)
	movl	-8(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 9 71 26
	flds	24(%ebp)
	.loc 9 71 19
	fldcw	-4(%ebp)
	fistpl	-8(%ebp)
	fldcw	-2(%ebp)
	movl	-8(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 9 73 12
	nop
	.loc 9 74 1
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2141:
	.globl	_Main_Buffer
	.bss
	.align 4
_Main_Buffer:
	.space 20
	.globl	_Main_Info
	.align 32
_Main_Info:
	.space 44
	.globl	_Window
	.align 4
_Window:
	.space 4
	.globl	_left_button_down
_left_button_down:
	.space 1
	.globl	_right_button_down
_right_button_down:
	.space 1
	.globl	_mousewheel_counter
	.align 4
_mousewheel_counter:
	.space 4
	.globl	_mouse_position
	.align 4
_mouse_position:
	.space 8
	.globl	_handled_press_left
_handled_press_left:
	.space 1
	.globl	_handled_press_right
_handled_press_right:
	.space 1
	.globl	_changed_size
_changed_size:
	.space 1
	.globl	_caps_data
	.align 32
_caps_data:
	.space 2420
	.globl	_textures
	.align 32
_textures:
	.space 4200
	.globl	_total_textures
	.align 4
_total_textures:
	.space 4
	.globl	_Font
	.align 32
_Font:
	.space 8272
	.section	.text$_Z5max_chhh,"x"
	.linkonce discard
	.globl	__Z5max_chhh
	.def	__Z5max_chhh;	.scl	2;	.type	32;	.endef
__Z5max_chhh:
LFB2148:
	.loc 9 141 41
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$28, %esp
	movl	8(%ebp), %ecx
	movl	12(%ebp), %edx
	movl	16(%ebp), %eax
	movb	%cl, -20(%ebp)
	movb	%dl, -24(%ebp)
	movb	%al, -28(%ebp)
	.loc 9 142 18
	movzbl	-20(%ebp), %edx
	movzbl	-24(%ebp), %eax
	cmpb	%al, %dl
	jbe	L4238
	.loc 9 142 18 is_stmt 0 discriminator 1
	movzbl	-20(%ebp), %eax
	jmp	L4239
L4238:
	.loc 9 142 18 discriminator 2
	movzbl	-24(%ebp), %eax
L4239:
	.loc 9 142 11 is_stmt 1 discriminator 4
	movb	%al, -1(%ebp)
	.loc 9 143 12 discriminator 4
	movzbl	-28(%ebp), %edx
	movzbl	-1(%ebp), %eax
	cmpb	%al, %dl
	cmovnb	%edx, %eax
	movzbl	%al, %eax
	.loc 9 144 1 discriminator 4
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2148:
	.section	.text$_Z5min_chhh,"x"
	.linkonce discard
	.globl	__Z5min_chhh
	.def	__Z5min_chhh;	.scl	2;	.type	32;	.endef
__Z5min_chhh:
LFB2149:
	.loc 9 145 41
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$28, %esp
	movl	8(%ebp), %ecx
	movl	12(%ebp), %edx
	movl	16(%ebp), %eax
	movb	%cl, -20(%ebp)
	movb	%dl, -24(%ebp)
	movb	%al, -28(%ebp)
	.loc 9 146 18
	movzbl	-20(%ebp), %edx
	movzbl	-24(%ebp), %eax
	cmpb	%al, %dl
	jnb	L4242
	.loc 9 146 18 is_stmt 0 discriminator 1
	movzbl	-20(%ebp), %eax
	jmp	L4243
L4242:
	.loc 9 146 18 discriminator 2
	movzbl	-24(%ebp), %eax
L4243:
	.loc 9 146 11 is_stmt 1 discriminator 4
	movb	%al, -1(%ebp)
	.loc 9 147 12 discriminator 4
	movzbl	-28(%ebp), %edx
	movzbl	-1(%ebp), %eax
	cmpb	%al, %dl
	cmovbe	%edx, %eax
	movzbl	%al, %eax
	.loc 9 148 1 discriminator 4
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2149:
	.text
	.globl	__Z10rgb_to_hsv5Color
	.def	__Z10rgb_to_hsv5Color;	.scl	2;	.type	32;	.endef
__Z10rgb_to_hsv5Color:
LFB2150:
	.loc 9 149 31
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 9 150 35
	movl	20(%ebp), %eax
	.loc 9 150 22
	movzbl	%al, %ecx
	.loc 9 150 30
	movl	16(%ebp), %eax
	.loc 9 150 22
	movzbl	%al, %edx
	.loc 9 150 25
	movl	12(%ebp), %eax
	.loc 9 150 22
	movzbl	%al, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z5min_chhh
	.loc 9 150 36
	movb	%al, -9(%ebp)
	.loc 9 151 35
	movl	20(%ebp), %eax
	.loc 9 151 22
	movzbl	%al, %ecx
	.loc 9 151 30
	movl	16(%ebp), %eax
	.loc 9 151 22
	movzbl	%al, %edx
	.loc 9 151 25
	movl	12(%ebp), %eax
	.loc 9 151 22
	movzbl	%al, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z5max_chhh
	.loc 9 151 36
	movb	%al, -10(%ebp)
	.loc 9 152 11
	movzbl	-10(%ebp), %eax
	subb	-9(%ebp), %al
	movb	%al, -11(%ebp)
	.loc 9 155 22
	movl	24(%ebp), %eax
	.loc 9 155 18
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movb	%dl, 12(%eax)
	.loc 9 156 20
	movzbl	-10(%ebp), %eax
	movw	%ax, -28(%ebp)
	filds	-28(%ebp)
	.loc 9 156 18
	flds	LC41
	fdivrp	%st, %st(1)
	movl	8(%ebp), %eax
	fstps	8(%eax)
	.loc 9 158 5
	cmpb	$0, -10(%ebp)
	je	L4246
	.loc 9 158 29 discriminator 1
	movzbl	-11(%ebp), %eax
	movw	%ax, -28(%ebp)
	filds	-28(%ebp)
	.loc 9 158 45 discriminator 1
	movzbl	-10(%ebp), %eax
	movw	%ax, -28(%ebp)
	filds	-28(%ebp)
	.loc 9 158 43 discriminator 1
	fdivrp	%st, %st(1)
	.loc 9 158 27 discriminator 1
	movl	8(%ebp), %eax
	fstps	4(%eax)
	.loc 9 165 16 discriminator 1
	movl	12(%ebp), %edx
	.loc 9 165 18 discriminator 1
	movzbl	-10(%ebp), %eax
	.loc 9 165 5 discriminator 1
	cmpl	%eax, %edx
	jne	L4249
	jmp	L4255
L4246:
	.loc 9 160 18
	movl	8(%ebp), %eax
	fldz
	fstps	4(%eax)
	.loc 9 161 18
	movl	8(%ebp), %eax
	fldz
	fstps	(%eax)
	.loc 9 162 16
	jmp	L4245
L4255:
	.loc 9 165 52 discriminator 1
	movl	16(%ebp), %edx
	.loc 9 165 58 discriminator 1
	movl	20(%ebp), %eax
	.loc 9 165 54 discriminator 1
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 165 41 discriminator 1
	movl	%eax, -28(%ebp)
	fildl	-28(%ebp)
	.loc 9 165 63 discriminator 1
	movzbl	-11(%ebp), %eax
	movw	%ax, -28(%ebp)
	filds	-28(%ebp)
	.loc 9 165 61 discriminator 1
	fdivrp	%st, %st(1)
	.loc 9 165 35 discriminator 1
	movl	8(%ebp), %eax
	fstps	(%eax)
	jmp	L4250
L4249:
	.loc 9 166 16
	movl	16(%ebp), %edx
	.loc 9 166 18
	movzbl	-10(%ebp), %eax
	.loc 9 166 10
	cmpl	%eax, %edx
	jne	L4251
	.loc 9 166 52 discriminator 1
	movl	20(%ebp), %edx
	.loc 9 166 58 discriminator 1
	movl	12(%ebp), %eax
	.loc 9 166 54 discriminator 1
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 166 41 discriminator 1
	movl	%eax, -28(%ebp)
	fildl	-28(%ebp)
	.loc 9 166 63 discriminator 1
	movzbl	-11(%ebp), %eax
	movw	%ax, -28(%ebp)
	filds	-28(%ebp)
	.loc 9 166 61 discriminator 1
	fdivrp	%st, %st(1)
	.loc 9 166 39 discriminator 1
	flds	LC192
	faddp	%st, %st(1)
	.loc 9 166 35 discriminator 1
	movl	8(%ebp), %eax
	fstps	(%eax)
	jmp	L4250
L4251:
	.loc 9 167 52
	movl	12(%ebp), %edx
	.loc 9 167 58
	movl	16(%ebp), %eax
	.loc 9 167 54
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 167 41
	movl	%eax, -28(%ebp)
	fildl	-28(%ebp)
	.loc 9 167 63
	movzbl	-11(%ebp), %eax
	movw	%ax, -28(%ebp)
	filds	-28(%ebp)
	.loc 9 167 61
	fdivrp	%st, %st(1)
	.loc 9 167 39
	flds	LC200
	faddp	%st, %st(1)
	.loc 9 167 35
	movl	8(%ebp), %eax
	fstps	(%eax)
L4250:
	.loc 9 169 14
	movl	8(%ebp), %eax
	flds	(%eax)
	flds	LC223
	fmulp	%st, %st(1)
	movl	8(%ebp), %eax
	fstps	(%eax)
	.loc 9 170 16
	movl	8(%ebp), %eax
	flds	(%eax)
	.loc 9 170 5
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	ja	L4254
	.loc 9 172 12
	jmp	L4245
L4254:
	.loc 9 170 32 discriminator 1
	movl	8(%ebp), %eax
	flds	(%eax)
	flds	LC224
	faddp	%st, %st(1)
	movl	8(%ebp), %eax
	fstps	(%eax)
	.loc 9 172 12 discriminator 1
	nop
L4245:
	.loc 9 173 1
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2150:
	.globl	__Z10hsv_to_rgb9Color_hsv
	.def	__Z10hsv_to_rgb9Color_hsv;	.scl	2;	.type	32;	.endef
__Z10hsv_to_rgb9Color_hsv:
LFB2151:
	.loc 9 175 31
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 9 177 17
	flds	20(%ebp)
	.loc 9 177 19
	flds	LC41
	fmulp	%st, %st(1)
	.loc 9 177 11
	fnstcw	-26(%ebp)
	movzwl	-26(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -28(%ebp)
	fldcw	-28(%ebp)
	fistps	-30(%ebp)
	fldcw	-26(%ebp)
	movzwl	-30(%ebp), %eax
	movb	%al, -9(%ebp)
	.loc 9 178 11
	flds	16(%ebp)
	.loc 9 178 5
	fldz
	fucomip	%st(1), %st
	jp	L4270
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jne	L4257
	.loc 9 178 43 discriminator 1
	movzbl	-9(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	movzbl	-9(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	movzbl	-9(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 9 178 38 discriminator 1
	movzbl	24(%ebp), %eax
	movzbl	%al, %edx
	.loc 9 178 43 discriminator 1
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	jmp	L4269
L4270:
	fstp	%st(0)
L4257:
	.loc 9 180 9
	flds	12(%ebp)
	flds	LC223
	fdivrp	%st, %st(1)
	fstps	12(%ebp)
	.loc 9 181 23
	flds	12(%ebp)
	fstps	(%esp)
	call	__ZSt5floorf
	.loc 9 181 27
	fnstcw	-26(%ebp)
	movzwl	-26(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -28(%ebp)
	fldcw	-28(%ebp)
	fistpl	-16(%ebp)
	fldcw	-26(%ebp)
	.loc 9 182 20
	flds	12(%ebp)
	.loc 9 182 22
	fildl	-16(%ebp)
	.loc 9 182 11
	fsubrp	%st, %st(1)
	fstps	-20(%ebp)
	.loc 9 183 17
	movzbl	-9(%ebp), %eax
	movl	%eax, -36(%ebp)
	fildl	-36(%ebp)
	.loc 9 183 28
	flds	16(%ebp)
	.loc 9 183 24
	fld1
	fsubp	%st, %st(1)
	.loc 9 183 17
	fmulp	%st, %st(1)
	.loc 9 183 11
	fldcw	-28(%ebp)
	fistps	-30(%ebp)
	fldcw	-26(%ebp)
	movzwl	-30(%ebp), %eax
	movb	%al, -21(%ebp)
	.loc 9 184 17
	movzbl	-9(%ebp), %eax
	movl	%eax, -36(%ebp)
	fildl	-36(%ebp)
	.loc 9 184 28
	flds	16(%ebp)
	.loc 9 184 30
	fmuls	-20(%ebp)
	.loc 9 184 24
	fld1
	fsubp	%st, %st(1)
	.loc 9 184 17
	fmulp	%st, %st(1)
	.loc 9 184 11
	fldcw	-28(%ebp)
	fistps	-30(%ebp)
	fldcw	-26(%ebp)
	movzwl	-30(%ebp), %eax
	movb	%al, -22(%ebp)
	.loc 9 185 17
	movzbl	-9(%ebp), %eax
	movl	%eax, -36(%ebp)
	fildl	-36(%ebp)
	.loc 9 185 28
	flds	16(%ebp)
	.loc 9 185 37
	flds	-20(%ebp)
	fld1
	fsubp	%st, %st(1)
	.loc 9 185 30
	fmulp	%st, %st(1)
	.loc 9 185 24
	fld1
	fsubp	%st, %st(1)
	.loc 9 185 17
	fmulp	%st, %st(1)
	.loc 9 185 11
	fldcw	-28(%ebp)
	fistps	-30(%ebp)
	fldcw	-26(%ebp)
	movzwl	-30(%ebp), %eax
	movb	%al, -23(%ebp)
	.loc 9 187 5
	cmpl	$5, -16(%ebp)
	ja	L4260
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	$L4262, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section .rdata,"dr"
	.align 4
L4262:
	.long	L4267
	.long	L4266
	.long	L4265
	.long	L4264
	.long	L4263
	.long	L4261
	.text
L4267:
	.loc 9 188 41
	movzbl	-9(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	movzbl	-23(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	movzbl	-21(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 9 188 36
	movzbl	24(%ebp), %eax
	movzbl	%al, %edx
	.loc 9 188 41
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	jmp	L4269
L4266:
	.loc 9 189 41
	movzbl	-22(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	movzbl	-9(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	movzbl	-21(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 9 189 36
	movzbl	24(%ebp), %eax
	movzbl	%al, %edx
	.loc 9 189 41
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	jmp	L4269
L4265:
	.loc 9 190 41
	movzbl	-21(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	movzbl	-9(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	movzbl	-23(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 9 190 36
	movzbl	24(%ebp), %eax
	movzbl	%al, %edx
	.loc 9 190 41
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	jmp	L4269
L4264:
	.loc 9 191 41
	movzbl	-21(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	movzbl	-22(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	movzbl	-9(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 9 191 36
	movzbl	24(%ebp), %eax
	movzbl	%al, %edx
	.loc 9 191 41
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	jmp	L4269
L4263:
	.loc 9 192 41
	movzbl	-23(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	movzbl	-21(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	movzbl	-9(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 9 192 36
	movzbl	24(%ebp), %eax
	movzbl	%al, %edx
	.loc 9 192 41
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	jmp	L4269
L4261:
	.loc 9 193 41
	movzbl	-9(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	movzbl	-21(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	movzbl	-22(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 9 193 36
	movzbl	24(%ebp), %eax
	movzbl	%al, %edx
	.loc 9 193 41
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	jmp	L4269
L4260:
	.loc 9 195 29
	movl	8(%ebp), %eax
	movl	$0, (%eax)
	movl	8(%ebp), %eax
	movl	$0, 4(%eax)
	movl	8(%ebp), %eax
	movl	$0, 8(%eax)
	.loc 9 195 24
	movzbl	24(%ebp), %eax
	movzbl	%al, %edx
	.loc 9 195 29
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
L4269:
	.loc 9 196 1
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2151:
	.globl	__Z9shift_hue5Colori
	.def	__Z9shift_hue5Colori;	.scl	2;	.type	32;	.endef
__Z9shift_hue5Colori:
LFB2152:
	.loc 9 198 37
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 9 199 33
	leal	-24(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	16(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	24(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	%eax, (%esp)
	call	__Z10rgb_to_hsv5Color
	.loc 9 201 11
	flds	-24(%ebp)
	fildl	28(%ebp)
	faddp	%st, %st(1)
	fstps	-24(%ebp)
L4274:
	.loc 9 202 17 discriminator 2
	flds	LC224
	.loc 9 202 15 discriminator 2
	flds	-24(%ebp)
	.loc 9 202 17 discriminator 2
	fcomip	%st(1), %st
	fstp	%st(0)
	jnb	L4278
	jmp	L4272
L4278:
	.loc 9 202 31 discriminator 1
	flds	-24(%ebp)
	flds	LC224
	fsubrp	%st, %st(1)
	fstps	-24(%ebp)
	.loc 9 202 5 discriminator 1
	jmp	L4274
L4272:
	.loc 9 203 15 discriminator 2
	flds	-24(%ebp)
	.loc 9 203 17 discriminator 2
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4280
	.loc 9 203 31 discriminator 1
	flds	-24(%ebp)
	flds	LC224
	faddp	%st, %st(1)
	fstps	-24(%ebp)
	.loc 9 203 5 discriminator 1
	jmp	L4272
L4280:
	.loc 9 205 26
	movl	8(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-16(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-12(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	%eax, (%esp)
	call	__Z10hsv_to_rgb9Color_hsv
	.loc 9 206 1
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2152:
	.section .rdata,"dr"
	.align 4
__ZL5WHITE:
	.long	255
	.long	255
	.long	255
	.long	255
	.align 4
__ZL10DARK_WHITE:
	.long	180
	.long	180
	.long	180
	.long	255
	.align 4
__ZL10LIGHT_GRAY:
	.long	95
	.long	95
	.long	95
	.long	255
	.align 4
__ZL4GRAY:
	.long	50
	.long	50
	.long	50
	.long	255
	.align 4
__ZL5BLACK:
	.long	0
	.long	0
	.long	0
	.long	255
	.align 4
__ZL5GREEN:
	.long	70
	.long	200
	.long	80
	.long	255
	.align 4
__ZL10DARK_GREEN:
	.long	50
	.long	125
	.long	60
	.long	255
	.align 4
__ZL4BLUE:
	.long	56
	.long	185
	.long	245
	.long	255
	.align 4
__ZL9DARK_BLUE:
	.long	5
	.long	108
	.long	156
	.long	255
	.align 4
__ZL9ERROR_RED:
	.long	201
	.long	36
	.long	24
	.long	255
	.align 4
__ZL7WARNING:
	.long	247
	.long	194
	.long	32
	.long	255
	.globl	_default_palette
	.data
	.align 32
_default_palette:
	.long	180
	.long	180
	.long	180
	.long	255
	.long	255
	.long	255
	.long	255
	.long	255
	.long	56
	.long	185
	.long	245
	.long	255
	.long	56
	.long	185
	.long	245
	.long	255
	.long	5
	.long	108
	.long	156
	.long	255
	.long	56
	.long	185
	.long	245
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.globl	_slider_palette
	.align 32
_slider_palette:
	.long	180
	.long	180
	.long	180
	.long	255
	.long	255
	.long	255
	.long	255
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.long	5
	.long	108
	.long	156
	.long	255
	.long	56
	.long	185
	.long	245
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.globl	_header_palette
	.align 32
_header_palette:
	.long	95
	.long	95
	.long	95
	.long	255
	.long	255
	.long	255
	.long	255
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.long	56
	.long	185
	.long	245
	.long	255
	.long	50
	.long	50
	.long	50
	.long	255
	.globl	_save_palette
	.align 32
_save_palette:
	.long	180
	.long	180
	.long	180
	.long	255
	.long	255
	.long	255
	.long	255
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.long	56
	.long	185
	.long	245
	.long	255
	.globl	_no_save_palette
	.align 32
_no_save_palette:
	.long	180
	.long	180
	.long	180
	.long	255
	.long	255
	.long	255
	.long	255
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.long	5
	.long	108
	.long	156
	.long	255
	.long	56
	.long	185
	.long	245
	.long	255
	.long	0
	.long	0
	.long	0
	.long	255
	.section .rdata,"dr"
	.align 4
__ZL13Packed_Font_W:
	.long	500
	.align 4
__ZL13Packed_Font_H:
	.long	500
	.text
	.globl	__Z8get_rectiiii
	.def	__Z8get_rectiiii;	.scl	2;	.type	32;	.endef
__Z8get_rectiiii:
LFB2153:
	.loc 9 236 52
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 9 237 40
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, (%eax)
	movl	8(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 4(%eax)
	.loc 9 237 21
	movl	12(%ebp), %edx
	movl	20(%ebp), %eax
	addl	%eax, %edx
	.loc 9 237 40
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 9 237 32
	movl	16(%ebp), %edx
	movl	24(%ebp), %eax
	addl	%eax, %edx
	.loc 9 237 40
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 9 238 1
	movl	8(%ebp), %eax
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2153:
	.section .rdata,"dr"
LC226:
	.ascii "Font/consola.ttf\0"
	.text
	.globl	__Z9init_fontPi
	.def	__Z9init_fontPi;	.scl	2;	.type	32;	.endef
__Z9init_fontPi:
LFB2154:
	.loc 9 241 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	movl	$1798648, %eax
	call	___chkstk_ms
	subl	%eax, %esp
	.loc 9 245 10
	movl	$LC37, 4(%esp)
	movl	$LC226, (%esp)
	call	_fopen
	movl	%eax, 12(%esp)
	movl	$1048576, 8(%esp)
	movl	$1, 4(%esp)
	leal	-1048588(%ebp), %eax
	movl	%eax, (%esp)
	call	_fread
	.loc 9 247 19
	movl	$0, 4(%esp)
	leal	-1048588(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbtt_GetFontOffsetForIndex
	movl	%eax, 8(%esp)
	leal	-1048588(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$_Font+32, (%esp)
	call	_stbtt_InitFont
	.loc 9 248 26
	movl	$_Font+28, 12(%esp)
	movl	$_Font+16, 8(%esp)
	movl	$_Font+12, 4(%esp)
	movl	$_Font+32, (%esp)
	call	_stbtt_GetFontVMetrics
	.loc 9 249 31
	leal	-1048592(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$_Font+20, 8(%esp)
	movl	$65, 4(%esp)
	movl	$_Font+32, (%esp)
	call	_stbtt_GetCodepointHMetrics
	.loc 9 250 30
	movl	_Font+12, %edx
	.loc 9 250 44
	movl	_Font+16, %eax
	.loc 9 250 37
	subl	%eax, %edx
	.loc 9 250 59
	movl	_Font+28, %eax
	.loc 9 250 52
	addl	%edx, %eax
	.loc 9 250 22
	movl	%eax, _Font+24
LBB795:
	.loc 9 254 13
	movl	$0, -12(%ebp)
L4285:
	.loc 9 254 22 discriminator 1
	cmpl	$2, -12(%ebp)
	jg	L4286
	.loc 9 255 40
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 255 25
	movl	%eax, -1798604(%ebp)
	fildl	-1798604(%ebp)
	.loc 9 255 58
	movl	_Font+12, %edx
	.loc 9 255 72
	movl	_Font+16, %eax
	.loc 9 255 65
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 255 44
	movl	%eax, -1798604(%ebp)
	fildl	-1798604(%ebp)
	.loc 9 255 42
	fdivrp	%st, %st(1)
	.loc 9 255 23
	movl	-12(%ebp), %eax
	fstps	_Font(,%eax,4)
	.loc 9 256 24
	leal	-1798592(%ebp), %edx
	movl	-12(%ebp), %eax
	imull	$250000, %eax, %eax
	addl	%eax, %edx
	movl	-12(%ebp), %eax
	imull	$44, %eax, %eax
	addl	$160, %eax
	addl	$_Font, %eax
	movl	$0, 24(%esp)
	movl	$1, 20(%esp)
	movl	$0, 16(%esp)
	movl	$500, 12(%esp)
	movl	$500, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_stbtt_PackBegin
	.loc 9 257 135
	movl	-12(%ebp), %eax
	imull	$2660, %eax, %eax
	addl	$288, %eax
	addl	$_Font, %eax
	addl	$4, %eax
	.loc 9 257 81
	movl	-12(%ebp), %edx
	leal	0(,%edx,4), %ecx
	movl	8(%ebp), %edx
	addl	%ecx, %edx
	movl	(%edx), %edx
	.loc 9 257 28
	movl	%edx, -1798604(%ebp)
	fildl	-1798604(%ebp)
	movl	-12(%ebp), %edx
	imull	$44, %edx, %edx
	addl	$160, %edx
	addl	$_Font, %edx
	movl	%eax, 24(%esp)
	movl	$95, 20(%esp)
	movl	$32, 16(%esp)
	fstps	12(%esp)
	movl	$0, 8(%esp)
	leal	-1048588(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	_stbtt_PackFontRange
	.loc 9 258 22
	movl	-12(%ebp), %eax
	imull	$44, %eax, %eax
	addl	$160, %eax
	addl	$_Font, %eax
	movl	%eax, (%esp)
	call	_stbtt_PackEnd
	.loc 9 254 5
	addl	$1, -12(%ebp)
	jmp	L4285
L4286:
LBE795:
	.loc 9 260 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2154:
	.globl	__Z11render_textPcii7tagRECT5Color
	.def	__Z11render_textPcii7tagRECT5Color;	.scl	2;	.type	32;	.endef
__Z11render_textPcii7tagRECT5Color:
LFB2155:
	.loc 9 262 105
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$180, %esp
	.cfi_offset 3, -12
	.loc 9 263 29
	movl	20(%ebp), %edx
	.loc 9 263 46
	movl	28(%ebp), %eax
	.loc 9 263 34
	addl	%edx, %eax
	.loc 9 263 53
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, -144(%ebp)
	.loc 9 263 57
	fildl	-144(%ebp)
	.loc 9 263 74
	movl	_Font+20, %eax
	.loc 9 263 67
	imull	12(%ebp), %eax
	.loc 9 263 82
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	.loc 9 263 104
	movl	16(%ebp), %eax
	flds	_Font(,%eax,4)
	.loc 9 263 82
	fmulp	%st, %st(1)
	.loc 9 263 107
	flds	LC192
	fdivrp	%st, %st(1)
	.loc 9 263 57
	fsubrp	%st, %st(1)
	.loc 9 263 11
	fstps	-64(%ebp)
	.loc 9 264 29
	movl	24(%ebp), %edx
	.loc 9 264 45
	movl	32(%ebp), %eax
	.loc 9 264 33
	addl	%edx, %eax
	.loc 9 264 53
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, -144(%ebp)
	.loc 9 264 57
	fildl	-144(%ebp)
	.loc 9 264 64
	movl	_Font+12, %eax
	.loc 9 264 71
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	.loc 9 264 93
	movl	16(%ebp), %eax
	flds	_Font(,%eax,4)
	.loc 9 264 71
	fmulp	%st, %st(1)
	.loc 9 264 95
	flds	LC192
	fdivrp	%st, %st(1)
	.loc 9 264 57
	faddp	%st, %st(1)
	.loc 9 264 11
	fstps	-68(%ebp)
LBB796:
	.loc 9 269 16
	movb	$0, -17(%ebp)
L4302:
	.loc 9 269 27 discriminator 1
	movzbl	-17(%ebp), %eax
	cmpl	%eax, 12(%ebp)
	jle	L4309
LBB797:
	.loc 9 271 72
	movzbl	-17(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movsbl	%al, %eax
	.loc 9 271 28
	leal	-32(%eax), %ecx
	.loc 9 271 29
	movl	16(%ebp), %eax
	imull	$2660, %eax, %eax
	addl	$288, %eax
	addl	$_Font, %eax
	leal	4(%eax), %edx
	.loc 9 271 28
	movl	$1, 28(%esp)
	leal	-100(%ebp), %eax
	movl	%eax, 24(%esp)
	leal	-68(%ebp), %eax
	movl	%eax, 20(%esp)
	leal	-64(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	$1, 8(%esp)
	movl	$1, 4(%esp)
	movl	%edx, (%esp)
	call	_stbtt_GetPackedQuad
	.loc 9 273 49
	movl	_Main_Buffer, %edx
	.loc 9 273 80
	movl	_Main_Buffer+4, %eax
	.loc 9 273 86
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	.loc 9 273 93
	flds	-96(%ebp)
	.loc 9 273 86
	fmulp	%st, %st(1)
	.loc 9 273 103
	flds	-100(%ebp)
	.loc 9 273 96
	faddp	%st, %st(1)
	.loc 9 273 58
	fnstcw	-110(%ebp)
	movzwl	-110(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -112(%ebp)
	fldcw	-112(%ebp)
	fistpq	-128(%ebp)
	fldcw	-110(%ebp)
	movl	-128(%ebp), %ecx
	movl	-124(%ebp), %ebx
	movl	%ecx, %eax
	.loc 9 273 56
	sall	$2, %eax
	.loc 9 273 17
	addl	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 9 274 46
	movl	16(%ebp), %eax
	imull	$44, %eax, %eax
	addl	$_Font+196, %eax
	movl	(%eax), %eax
	.loc 9 274 86
	flds	-88(%ebp)
	.loc 9 274 79
	flds	LC227
	fmulp	%st, %st(1)
	.loc 9 274 96
	flds	-92(%ebp)
	.loc 9 274 89
	faddp	%st, %st(1)
	.loc 9 274 55
	fldcw	-112(%ebp)
	fistpq	-128(%ebp)
	fldcw	-110(%ebp)
	movl	-128(%ebp), %edx
	movl	-124(%ebp), %ecx
	.loc 9 274 17
	addl	%edx, %eax
	movl	%eax, -28(%ebp)
	.loc 9 276 21
	flds	-84(%ebp)
	flds	-64(%ebp)
	faddp	%st, %st(1)
	flds	-100(%ebp)
	fsubrp	%st, %st(1)
	movl	_Main_Buffer+4, %eax
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	.loc 9 276 13
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4307
	.loc 9 276 21 discriminator 1
	flds	-84(%ebp)
	flds	-64(%ebp)
	faddp	%st, %st(1)
	flds	-100(%ebp)
	fsubrp	%st, %st(1)
	.loc 9 276 13 discriminator 1
	fldcw	-112(%ebp)
	fistpl	-136(%ebp)
	fldcw	-110(%ebp)
	movl	-136(%ebp), %eax
	jmp	L4291
L4307:
	.loc 9 276 21 discriminator 2
	movl	_Main_Buffer+4, %eax
	.loc 9 276 13 discriminator 2
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	fldcw	-112(%ebp)
	fistpl	-136(%ebp)
	fldcw	-110(%ebp)
	movl	-136(%ebp), %eax
L4291:
	.loc 9 276 13 is_stmt 0 discriminator 4
	movl	%eax, -32(%ebp)
	.loc 9 277 21 is_stmt 1 discriminator 4
	flds	-80(%ebp)
	flds	-68(%ebp)
	faddp	%st, %st(1)
	flds	-96(%ebp)
	fsubrp	%st, %st(1)
	movl	_Main_Buffer+8, %eax
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	.loc 9 277 13 discriminator 4
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4308
	.loc 9 277 21 discriminator 1
	flds	-80(%ebp)
	flds	-68(%ebp)
	faddp	%st, %st(1)
	flds	-96(%ebp)
	fsubrp	%st, %st(1)
	.loc 9 277 13 discriminator 1
	fldcw	-112(%ebp)
	fistpl	-136(%ebp)
	fldcw	-110(%ebp)
	movl	-136(%ebp), %eax
	jmp	L4294
L4308:
	.loc 9 277 21 discriminator 2
	movl	_Main_Buffer+8, %eax
	.loc 9 277 13 discriminator 2
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	fldcw	-112(%ebp)
	fistpl	-136(%ebp)
	fldcw	-110(%ebp)
	movl	-136(%ebp), %eax
L4294:
	.loc 9 277 13 is_stmt 0 discriminator 4
	movl	%eax, -36(%ebp)
	.loc 9 279 54 is_stmt 1 discriminator 4
	flds	-84(%ebp)
	.loc 9 279 47 discriminator 4
	flds	-64(%ebp)
	faddp	%st, %st(1)
	.loc 9 279 64 discriminator 4
	flds	-100(%ebp)
	.loc 9 279 57 discriminator 4
	fsubrp	%st, %st(1)
	.loc 9 279 68 discriminator 4
	fildl	-32(%ebp)
	fsubrp	%st, %st(1)
	.loc 9 279 13 discriminator 4
	fldcw	-112(%ebp)
	fistpl	-40(%ebp)
	fldcw	-110(%ebp)
LBB798:
	.loc 9 280 16 discriminator 4
	flds	-68(%ebp)
	fldcw	-112(%ebp)
	fistpl	-16(%ebp)
	fldcw	-110(%ebp)
L4301:
	.loc 9 280 26 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	-36(%ebp), %eax
	jge	L4295
LBB799:
LBB800:
	.loc 9 281 20
	flds	-64(%ebp)
	fldcw	-112(%ebp)
	fistpl	-12(%ebp)
	fldcw	-110(%ebp)
L4300:
	.loc 9 281 30 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	-32(%ebp), %eax
	jge	L4296
LBB801:
LBB802:
	.loc 9 282 17
	fldz
	.loc 9 282 26
	flds	-64(%ebp)
	.loc 9 282 17
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4297
	.loc 9 282 30 discriminator 1
	fldz
	.loc 9 282 38 discriminator 1
	flds	-68(%ebp)
	.loc 9 282 30 discriminator 1
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4297
LBB803:
	.loc 9 283 32
	movl	-28(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 9 283 40
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	fldl	LC228
	fdivrp	%st, %st(1)
	.loc 9 283 27
	fstps	-44(%ebp)
	.loc 9 284 34
	movl	36(%ebp), %eax
	.loc 9 284 36
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	fmuls	-44(%ebp)
	.loc 9 284 27
	fldcw	-112(%ebp)
	fistps	-130(%ebp)
	fldcw	-110(%ebp)
	movzwl	-130(%ebp), %eax
	movb	%al, -45(%ebp)
	.loc 9 285 34
	movl	40(%ebp), %eax
	.loc 9 285 36
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	fmuls	-44(%ebp)
	.loc 9 285 27
	fldcw	-112(%ebp)
	fistps	-130(%ebp)
	fldcw	-110(%ebp)
	movzwl	-130(%ebp), %eax
	movb	%al, -46(%ebp)
	.loc 9 286 34
	movl	44(%ebp), %eax
	.loc 9 286 36
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	fmuls	-44(%ebp)
	.loc 9 286 27
	fldcw	-112(%ebp)
	fistps	-130(%ebp)
	fldcw	-110(%ebp)
	movzwl	-130(%ebp), %eax
	movb	%al, -47(%ebp)
	.loc 9 288 34
	movl	-24(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 288 40
	shrl	$24, %eax
	.loc 9 288 55
	movl	%eax, -144(%ebp)
	movl	$0, -140(%ebp)
	fildq	-144(%ebp)
	fstpl	-120(%ebp)
	fldl	-120(%ebp)
	fldl	LC228
	fdivrp	%st, %st(1)
	.loc 9 288 27
	fstps	-52(%ebp)
	.loc 9 289 34
	movl	-24(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 289 40
	shrl	$16, %eax
	.loc 9 289 27
	movb	%al, -53(%ebp)
	.loc 9 290 34
	movl	-24(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 290 40
	shrl	$8, %eax
	.loc 9 290 27
	movb	%al, -54(%ebp)
	.loc 9 291 34
	movl	-24(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 291 27
	movb	%al, -55(%ebp)
	.loc 9 293 41
	flds	-44(%ebp)
	fadds	-52(%ebp)
	.loc 9 293 50
	flds	-44(%ebp)
	fmuls	-52(%ebp)
	.loc 9 293 46
	fsubrp	%st, %st(1)
	.loc 9 293 35
	flds	LC41
	fmulp	%st, %st(1)
	.loc 9 293 27
	fldcw	-112(%ebp)
	fistps	-130(%ebp)
	fldcw	-110(%ebp)
	movzwl	-130(%ebp), %eax
	movb	%al, -56(%ebp)
	.loc 9 294 34
	movzbl	-53(%ebp), %eax
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	.loc 9 294 39
	fld1
	fsubs	-44(%ebp)
	.loc 9 294 34
	fmulp	%st, %st(1)
	.loc 9 294 45
	movzbl	-45(%ebp), %eax
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	faddp	%st, %st(1)
	.loc 9 294 27
	fldcw	-112(%ebp)
	fistps	-130(%ebp)
	fldcw	-110(%ebp)
	movzwl	-130(%ebp), %eax
	movb	%al, -57(%ebp)
	.loc 9 295 34
	movzbl	-54(%ebp), %eax
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	.loc 9 295 39
	fld1
	fsubs	-44(%ebp)
	.loc 9 295 34
	fmulp	%st, %st(1)
	.loc 9 295 45
	movzbl	-46(%ebp), %eax
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	faddp	%st, %st(1)
	.loc 9 295 27
	fldcw	-112(%ebp)
	fistps	-130(%ebp)
	fldcw	-110(%ebp)
	movzwl	-130(%ebp), %eax
	movb	%al, -58(%ebp)
	.loc 9 296 34
	movzbl	-55(%ebp), %eax
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	.loc 9 296 39
	fld1
	fsubs	-44(%ebp)
	.loc 9 296 34
	fmulp	%st, %st(1)
	.loc 9 296 45
	movzbl	-47(%ebp), %eax
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	faddp	%st, %st(1)
	.loc 9 296 27
	fldcw	-112(%ebp)
	fistps	-130(%ebp)
	fldcw	-110(%ebp)
	movzwl	-130(%ebp), %eax
	movb	%al, -59(%ebp)
	.loc 9 298 32
	movzbl	-56(%ebp), %eax
	sall	$24, %eax
	movl	%eax, %edx
	.loc 9 298 44
	movzbl	-57(%ebp), %eax
	sall	$16, %eax
	.loc 9 298 39
	orl	%eax, %edx
	.loc 9 298 56
	movzbl	-58(%ebp), %eax
	sall	$8, %eax
	.loc 9 298 51
	orl	%eax, %edx
	.loc 9 298 62
	movzbl	-59(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, %edx
	.loc 9 298 27
	movl	-24(%ebp), %eax
	movl	%edx, (%eax)
L4297:
LBE803:
LBE802:
	.loc 9 300 23 discriminator 2
	addl	$1, -28(%ebp)
	.loc 9 301 21 discriminator 2
	addl	$4, -24(%ebp)
LBE801:
	.loc 9 281 13 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4300
L4296:
LBE800:
	.loc 9 303 59 discriminator 2
	flds	-76(%ebp)
	.loc 9 303 69 discriminator 2
	flds	-92(%ebp)
	.loc 9 303 62 discriminator 2
	fsubrp	%st, %st(1)
	.loc 9 303 51 discriminator 2
	flds	LC227
	fsubp	%st, %st(1)
	.loc 9 303 73 discriminator 2
	fildl	-40(%ebp)
	faddp	%st, %st(1)
	.loc 9 303 23 discriminator 2
	fldcw	-112(%ebp)
	fistpq	-128(%ebp)
	fldcw	-110(%ebp)
	movl	-128(%ebp), %eax
	movl	-124(%ebp), %edx
	.loc 9 303 20 discriminator 2
	addl	%eax, -28(%ebp)
	.loc 9 304 45 discriminator 2
	movl	_Main_Buffer+4, %eax
	.loc 9 304 51 discriminator 2
	movl	%eax, -144(%ebp)
	fildl	-144(%ebp)
	.loc 9 304 60 discriminator 2
	fildl	-32(%ebp)
	flds	-64(%ebp)
	fsubrp	%st, %st(1)
	.loc 9 304 51 discriminator 2
	fsubrp	%st, %st(1)
	.loc 9 304 23 discriminator 2
	fldcw	-112(%ebp)
	fistpq	-128(%ebp)
	fldcw	-110(%ebp)
	movl	-128(%ebp), %eax
	movl	-124(%ebp), %edx
	.loc 9 304 20 discriminator 2
	sall	$2, %eax
	addl	%eax, -24(%ebp)
LBE799:
	.loc 9 280 9 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L4301
L4295:
LBE798:
	.loc 9 307 20 discriminator 2
	flds	-64(%ebp)
	fstps	(%esp)
	call	__ZSt4ceilf
	.loc 9 307 14 discriminator 2
	fstps	-64(%ebp)
LBE797:
	.loc 9 269 5 discriminator 2
	movzbl	-17(%ebp), %eax
	addl	$1, %eax
	movb	%al, -17(%ebp)
	jmp	L4302
L4309:
LBE796:
	.loc 9 309 1
	nop
	addl	$180, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2155:
	.globl	__Z11render_textii7tagRECT5Color
	.def	__Z11render_textii7tagRECT5Color;	.scl	2;	.type	32;	.endef
__Z11render_textii7tagRECT5Color:
LFB2156:
	.loc 9 311 93
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$88, %esp
	.loc 9 312 35
	leal	-40(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZNSt7__cxx119to_stringEi
	.loc 9 312 49
	leal	-40(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
	movl	%eax, -16(%ebp)
	.loc 9 312 35
	leal	-40(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	.loc 9 315 17
	movl	$0, -12(%ebp)
L4312:
	.loc 9 315 33 discriminator 3
	movl	-12(%ebp), %edx
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 9 315 35 discriminator 3
	testb	%al, %al
	je	L4311
	.loc 9 315 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4312
L4311:
	.loc 9 317 16
	movl	32(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	44(%ebp), %eax
	movl	%eax, 40(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
	.loc 9 318 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2156:
	.globl	__Z11render_textfii7tagRECT5Color
	.def	__Z11render_textfii7tagRECT5Color;	.scl	2;	.type	32;	.endef
__Z11render_textfii7tagRECT5Color:
LFB2157:
	.loc 9 320 107
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$88, %esp
	.loc 9 321 35
	leal	-40(%ebp), %eax
	flds	8(%ebp)
	fstps	4(%esp)
	movl	%eax, (%esp)
	call	__ZNSt7__cxx119to_stringEf
	.loc 9 321 49
	leal	-40(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
	movl	%eax, -16(%ebp)
	.loc 9 321 35
	leal	-40(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	.loc 9 324 17
	movl	$0, -12(%ebp)
L4315:
	.loc 9 324 33 discriminator 3
	movl	-12(%ebp), %edx
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 9 324 35 discriminator 3
	testb	%al, %al
	je	L4314
	.loc 9 324 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4315
L4314:
	.loc 9 325 21
	movl	12(%ebp), %eax
	addl	$1, %eax
	.loc 9 325 34
	cmpl	%eax, -12(%ebp)
	jle	L4316
	.loc 9 325 34 is_stmt 0 discriminator 1
	movl	12(%ebp), %eax
	addl	$2, %eax
	jmp	L4317
L4316:
	.loc 9 325 34 discriminator 2
	movl	-12(%ebp), %eax
L4317:
	.loc 9 325 12 is_stmt 1 discriminator 4
	movl	%eax, -12(%ebp)
	.loc 9 327 16 discriminator 4
	movl	36(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	44(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	48(%ebp), %eax
	movl	%eax, 40(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
	.loc 9 328 1 discriminator 4
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2157:
	.globl	__Z22initialize_main_bufferv
	.def	__Z22initialize_main_bufferv;	.scl	2;	.type	32;	.endef
__Z22initialize_main_bufferv:
LFB2158:
	.loc 9 331 1
	.cfi_startproc
	.loc 9 332 22
	movl	$_Main_Info, _Main_Buffer+16
	.loc 9 333 17
	movl	_Main_Buffer+16, %eax
	.loc 9 333 47
	movl	$40, (%eax)
	.loc 9 334 17
	movl	_Main_Buffer+16, %eax
	.loc 9 334 47
	movw	$1, 12(%eax)
	.loc 9 335 17
	movl	_Main_Buffer+16, %eax
	.loc 9 335 47
	movw	$32, 14(%eax)
	.loc 9 336 17
	movl	_Main_Buffer+16, %eax
	.loc 9 336 47
	movl	$0, 16(%eax)
	.loc 9 337 24
	movl	$0, _Main_Buffer
	.loc 9 338 1
	nop
	ret
	.cfi_endproc
LFE2158:
	.globl	__Z18resize_main_bufferii
	.def	__Z18resize_main_bufferii;	.scl	2;	.type	32;	.endef
__Z18resize_main_bufferii:
LFB2159:
	.loc 9 340 56
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 9 342 21
	movl	_Main_Buffer, %eax
	.loc 9 342 5
	testl	%eax, %eax
	je	L4320
	.loc 9 342 46 discriminator 1
	movl	_Main_Buffer, %eax
	.loc 9 342 33 discriminator 1
	movl	%eax, (%esp)
	call	_free
L4320:
	.loc 9 344 17
	movl	_Main_Buffer+16, %eax
	.loc 9 344 42
	movl	8(%ebp), %edx
	movl	%edx, 4(%eax)
	.loc 9 345 17
	movl	_Main_Buffer+16, %eax
	.loc 9 345 44
	movl	12(%ebp), %edx
	negl	%edx
	.loc 9 345 42
	movl	%edx, 8(%eax)
	.loc 9 346 54
	movl	8(%ebp), %eax
	imull	12(%ebp), %eax
	.loc 9 346 68
	sall	$2, %eax
	.loc 9 346 42
	movl	%eax, (%esp)
	call	_malloc
	.loc 9 346 24
	movl	%eax, _Main_Buffer
	.loc 9 347 24
	movl	8(%ebp), %eax
	movl	%eax, _Main_Buffer+4
	.loc 9 348 24
	movl	12(%ebp), %eax
	movl	%eax, _Main_Buffer+8
	.loc 9 349 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2159:
	.globl	__Z26blit_main_buffer_to_windowv
	.def	__Z26blit_main_buffer_to_windowv;	.scl	2;	.type	32;	.endef
__Z26blit_main_buffer_to_windowv:
LFB2160:
	.loc 9 351 35
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$92, %esp
	.cfi_offset 7, -12
	.cfi_offset 6, -16
	.cfi_offset 3, -20
	.loc 9 352 30
	movl	_Window, %eax
	movl	%eax, (%esp)
	movl	__imp__GetDC@4, %eax
	call	*%eax
LVL43:
	subl	$4, %esp
	movl	%eax, -28(%ebp)
	.loc 9 357 51
	movl	_Main_Buffer+16, %edi
	.loc 9 357 31
	movl	_Main_Buffer, %esi
	.loc 9 354 18
	movl	_Main_Buffer+8, %ebx
	movl	_Main_Buffer+4, %ecx
	movl	_Main_Buffer+8, %edx
	movl	_Main_Buffer+4, %eax
	movl	$13369376, 48(%esp)
	movl	$0, 44(%esp)
	movl	%edi, 40(%esp)
	movl	%esi, 36(%esp)
	movl	%ebx, 32(%esp)
	movl	%ecx, 28(%esp)
	movl	$0, 24(%esp)
	movl	$0, 20(%esp)
	movl	%edx, 16(%esp)
	movl	%eax, 12(%esp)
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__StretchDIBits@52, %eax
	call	*%eax
LVL44:
	subl	$52, %esp
	.loc 9 358 1
	nop
	leal	-12(%ebp), %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2160:
	.globl	__Z25screen_to_window_position8tagPOINT
	.def	__Z25screen_to_window_position8tagPOINT;	.scl	2;	.type	32;	.endef
__Z25screen_to_window_position8tagPOINT:
LFB2161:
	.loc 9 360 41
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 9 364 18
	movl	_Window, %eax
	leal	-32(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	movl	__imp__GetClientRect@8, %eax
	call	*%eax
LVL45:
	subl	$8, %esp
	.loc 9 365 19
	movl	_Window, %eax
	leal	-32(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	movl	__imp__ClientToScreen@8, %eax
	call	*%eax
LVL46:
	subl	$8, %esp
	.loc 9 366 19
	movl	_Window, %eax
	leal	-32(%ebp), %edx
	addl	$8, %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	movl	__imp__ClientToScreen@8, %eax
	call	*%eax
LVL47:
	subl	$8, %esp
	.loc 9 367 20
	movl	8(%ebp), %edx
	.loc 9 367 29
	movl	-32(%ebp), %eax
	.loc 9 367 22
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 367 14
	movl	%eax, -16(%ebp)
	.loc 9 368 20
	movl	12(%ebp), %edx
	.loc 9 368 29
	movl	-28(%ebp), %eax
	.loc 9 368 22
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 368 14
	movl	%eax, -12(%ebp)
	.loc 9 370 12
	movl	-16(%ebp), %eax
	movl	-12(%ebp), %edx
	.loc 9 371 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2161:
	.globl	__Z20main_window_callbackP6HWND__jjl@16
	.def	__Z20main_window_callbackP6HWND__jjl@16;	.scl	2;	.type	32;	.endef
__Z20main_window_callbackP6HWND__jjl@16:
LFB2162:
	.loc 9 373 96
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 9 374 13
	movl	$0, -12(%ebp)
	cmpl	$513, 12(%ebp)
	je	L4325
	cmpl	$513, 12(%ebp)
	ja	L4326
	cmpl	$5, 12(%ebp)
	je	L4327
	cmpl	$16, 12(%ebp)
	je	L4328
	cmpl	$2, 12(%ebp)
	je	L4329
	jmp	L4330
L4326:
	cmpl	$516, 12(%ebp)
	je	L4331
	cmpl	$516, 12(%ebp)
	ja	L4332
	cmpl	$514, 12(%ebp)
	je	L4333
	jmp	L4330
L4332:
	cmpl	$517, 12(%ebp)
	je	L4334
	cmpl	$522, 12(%ebp)
	je	L4335
	jmp	L4330
L4327:
LBB804:
LBB805:
LBB806:
	.loc 9 378 26
	movb	$1, _changed_size
	.loc 9 381 26
	leal	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__GetClientRect@8, %eax
	call	*%eax
LVL48:
	subl	$8, %esp
	.loc 9 382 37
	movl	-32(%ebp), %edx
	.loc 9 382 57
	movl	-40(%ebp), %eax
	.loc 9 382 17
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -16(%ebp)
	.loc 9 383 37
	movl	-28(%ebp), %edx
	.loc 9 383 57
	movl	-36(%ebp), %eax
	.loc 9 383 17
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 9 385 31
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z18resize_main_bufferii
LBE806:
	.loc 9 386 11
	jmp	L4336
L4329:
	.loc 9 388 28
	movl	$0, (%esp)
	movl	__imp__PostQuitMessage@4, %eax
	call	*%eax
LVL49:
	subl	$4, %esp
	.loc 9 389 11
	jmp	L4336
L4328:
	.loc 9 391 28
	movl	$0, (%esp)
	movl	__imp__PostQuitMessage@4, %eax
	call	*%eax
LVL50:
	subl	$4, %esp
	.loc 9 392 11
	jmp	L4336
L4325:
	.loc 9 394 32
	movb	$1, _left_button_down
	.loc 9 395 32
	movb	$0, _handled_press_left
	.loc 9 396 13
	jmp	L4336
L4333:
	.loc 9 398 32
	movb	$0, _left_button_down
	.loc 9 399 32
	movb	$1, _handled_press_left
	.loc 9 400 13
	jmp	L4336
L4331:
	.loc 9 402 33
	movb	$1, _right_button_down
	.loc 9 403 33
	movb	$0, _handled_press_right
	.loc 9 404 13
	jmp	L4336
L4334:
	.loc 9 406 33
	movb	$0, _right_button_down
	.loc 9 407 33
	movb	$1, _handled_press_right
	.loc 9 408 13
	jmp	L4336
L4335:
LBB807:
	.loc 9 410 18
	movl	16(%ebp), %eax
	movw	%ax, -22(%ebp)
	.loc 9 411 30
	movl	16(%ebp), %eax
	shrl	$16, %eax
	.loc 9 411 18
	movw	%ax, -24(%ebp)
	.loc 9 413 13
	cmpw	$0, -22(%ebp)
	jne	L4339
	.loc 9 414 32
	movswl	-24(%ebp), %edx
	movl	_mousewheel_counter, %eax
	addl	%edx, %eax
	movl	%eax, _mousewheel_counter
LBE807:
	.loc 9 415 11
	jmp	L4336
L4330:
	.loc 9 417 35
	movl	16(%ebp), %eax
	movl	20(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__DefWindowProcA@16, %eax
	call	*%eax
LVL51:
	subl	$16, %esp
	movl	%eax, -12(%ebp)
	.loc 9 418 13
	jmp	L4336
L4339:
LBB808:
	.loc 9 413 28
	nop
L4336:
LBE808:
LBE805:
LBE804:
	.loc 9 421 12
	movl	-12(%ebp), %eax
	.loc 9 422 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$16
	.cfi_endproc
LFE2162:
	.section .rdata,"dr"
LC229:
	.ascii "GeneralWindowClass\0"
LC230:
	.ascii "Caps Pictures\0"
	.text
	.globl	__Z17start_main_windowv
	.def	__Z17start_main_windowv;	.scl	2;	.type	32;	.endef
__Z17start_main_windowv:
LFB2163:
	.loc 9 427 26
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	subl	$100, %esp
	.cfi_offset 7, -12
	.loc 9 428 14
	leal	-48(%ebp), %edx
	movl	$0, %eax
	movl	$10, %ecx
	movl	%edx, %edi
	rep stosl
	.loc 9 429 31
	movl	$35, -48(%ebp)
	.loc 9 430 31
	movl	$__Z20main_window_callbackP6HWND__jjl@16, -44(%ebp)
	.loc 9 431 48
	movl	$0, (%esp)
	movl	__imp__GetModuleHandleA@4, %eax
	call	*%eax
LVL52:
	subl	$4, %esp
	.loc 9 431 31
	movl	%eax, -32(%ebp)
	.loc 9 432 31
	movl	$LC229, -12(%ebp)
	.loc 9 434 18
	leal	-48(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__RegisterClassA@4, %eax
	call	*%eax
LVL53:
	subl	$4, %esp
	.loc 9 435 28
	movl	$0, (%esp)
	movl	__imp__GetModuleHandleA@4, %eax
	call	*%eax
LVL54:
	subl	$4, %esp
	movl	%eax, %edx
	movl	-12(%ebp), %eax
	movl	$0, 44(%esp)
	movl	%edx, 40(%esp)
	movl	$0, 36(%esp)
	movl	$0, 32(%esp)
	movl	$750, 28(%esp)
	movl	$1120, 24(%esp)
	movl	$-2147483648, 20(%esp)
	movl	$-2147483648, 16(%esp)
	movl	$282001408, 12(%esp)
	movl	$LC230, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	movl	__imp__CreateWindowExA@48, %eax
	call	*%eax
LVL55:
	subl	$48, %esp
	.loc 9 435 12
	movl	%eax, _Window
	.loc 9 445 1
	nop
	movl	-4(%ebp), %edi
	leave
	.cfi_restore 5
	.cfi_restore 7
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2163:
	.globl	__Z22handle_window_messagesv
	.def	__Z22handle_window_messagesv;	.scl	2;	.type	32;	.endef
__Z22handle_window_messagesv:
LFB2164:
	.loc 9 447 30
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
L4345:
	.loc 9 449 23
	movl	$1, 16(%esp)
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	leal	-36(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__PeekMessageA@20, %eax
	call	*%eax
LVL56:
	subl	$20, %esp
	.loc 9 449 52
	testl	%eax, %eax
	setne	%al
	testb	%al, %al
	je	L4342
	.loc 9 450 25
	leal	-36(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__TranslateMessage@4, %eax
	call	*%eax
LVL57:
	subl	$4, %esp
	.loc 9 451 24
	leal	-36(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__DispatchMessageA@4, %eax
	call	*%eax
LVL58:
	subl	$4, %esp
	.loc 9 452 21
	movl	-32(%ebp), %eax
	.loc 9 452 9
	cmpl	$18, %eax
	jne	L4345
	.loc 9 452 49 discriminator 1
	movl	$-1, %eax
	jmp	L4346
L4342:
	.loc 9 454 12
	movl	$0, %eax
L4346:
	.loc 9 455 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2164:
	.globl	__Z23render_filled_rectangle7tagRECT5Color
	.def	__Z23render_filled_rectangle7tagRECT5Color;	.scl	2;	.type	32;	.endef
__Z23render_filled_rectangle7tagRECT5Color:
LFB2165:
	.loc 9 458 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$48, %esp
	.loc 9 459 23
	movl	36(%ebp), %eax
	.loc 9 459 25
	sall	$24, %eax
	movl	%eax, %edx
	.loc 9 459 41
	movl	24(%ebp), %eax
	.loc 9 459 43
	sall	$16, %eax
	.loc 9 459 32
	orl	%eax, %edx
	.loc 9 459 59
	movl	28(%ebp), %eax
	.loc 9 459 61
	sall	$8, %eax
	.loc 9 459 50
	orl	%eax, %edx
	.loc 9 459 75
	movl	32(%ebp), %eax
	.loc 9 459 67
	orl	%edx, %eax
	.loc 9 459 12
	movl	%eax, -20(%ebp)
	.loc 9 461 22
	movl	8(%ebp), %eax
	.loc 9 461 9
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 9 462 22
	movl	12(%ebp), %eax
	.loc 9 462 9
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	movl	%eax, -28(%ebp)
	.loc 9 463 22
	movl	16(%ebp), %edx
	movl	_Main_Buffer+4, %eax
	cmpl	%eax, %edx
	jge	L4348
	.loc 9 463 22 is_stmt 0 discriminator 1
	movl	16(%ebp), %eax
	jmp	L4349
L4348:
	.loc 9 463 22 discriminator 2
	movl	_Main_Buffer+4, %eax
L4349:
	.loc 9 463 9 is_stmt 1 discriminator 4
	movl	%eax, -32(%ebp)
	.loc 9 464 22 discriminator 4
	movl	20(%ebp), %edx
	movl	_Main_Buffer+8, %eax
	cmpl	%eax, %edx
	jge	L4350
	.loc 9 464 22 is_stmt 0 discriminator 1
	movl	20(%ebp), %eax
	jmp	L4351
L4350:
	.loc 9 464 22 discriminator 2
	movl	_Main_Buffer+8, %eax
L4351:
	.loc 9 464 9 is_stmt 1 discriminator 4
	movl	%eax, -36(%ebp)
	.loc 9 466 34 discriminator 4
	movl	_Main_Buffer+4, %eax
	.loc 9 466 5 discriminator 4
	cmpl	%eax, -24(%ebp)
	jg	L4360
	.loc 9 467 34
	movl	_Main_Buffer+8, %eax
	.loc 9 467 5
	cmpl	%eax, -28(%ebp)
	jg	L4361
	.loc 9 468 5
	cmpl	$0, -32(%ebp)
	js	L4362
	.loc 9 469 5
	cmpl	$0, -36(%ebp)
	js	L4363
	.loc 9 471 29
	movl	_Main_Buffer+4, %eax
	.loc 9 471 9
	sall	$2, %eax
	movl	%eax, -40(%ebp)
	.loc 9 472 12
	movl	_Main_Buffer, %eax
	movl	%eax, -4(%ebp)
	.loc 9 473 22
	movl	-24(%ebp), %eax
	leal	0(,%eax,4), %edx
	.loc 9 473 51
	movl	-28(%ebp), %eax
	imull	-40(%ebp), %eax
	.loc 9 473 39
	addl	%edx, %eax
	.loc 9 473 9
	addl	%eax, -4(%ebp)
LBB809:
	.loc 9 475 14
	movl	-28(%ebp), %eax
	movl	%eax, -8(%ebp)
L4359:
	.loc 9 475 32 discriminator 1
	movl	-8(%ebp), %eax
	cmpl	-36(%ebp), %eax
	jge	L4347
LBB810:
	.loc 9 476 17
	movl	-4(%ebp), %eax
	movl	%eax, -12(%ebp)
LBB811:
	.loc 9 477 18
	movl	-24(%ebp), %eax
	movl	%eax, -16(%ebp)
L4358:
	.loc 9 477 36 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-32(%ebp), %eax
	jge	L4357
	.loc 9 478 20 discriminator 2
	movl	-12(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%edx, (%eax)
	.loc 9 479 18 discriminator 2
	addl	$4, -12(%ebp)
	.loc 9 477 9 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L4358
L4357:
LBE811:
	.loc 9 481 13 discriminator 2
	movl	-40(%ebp), %eax
	addl	%eax, -4(%ebp)
LBE810:
	.loc 9 475 5 discriminator 2
	addl	$1, -8(%ebp)
	jmp	L4359
L4360:
LBE809:
	.loc 9 466 42
	nop
	jmp	L4347
L4361:
	.loc 9 467 42
	nop
	jmp	L4347
L4362:
	.loc 9 468 23
	nop
	jmp	L4347
L4363:
	.loc 9 469 23
	nop
L4347:
	.loc 9 483 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2165:
	.globl	__Z16render_rectangle7tagRECT5Colorh
	.def	__Z16render_rectangle7tagRECT5Colorh;	.scl	2;	.type	32;	.endef
__Z16render_rectangle7tagRECT5Colorh:
LFB2166:
	.loc 9 486 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$100, %esp
	movl	40(%ebp), %eax
	movb	%al, -68(%ebp)
	.loc 9 487 19
	movzbl	-68(%ebp), %eax
	leal	(%eax,%eax), %ecx
	.loc 9 487 36
	movl	16(%ebp), %edx
	.loc 9 487 54
	movl	8(%ebp), %eax
	.loc 9 487 42
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 487 5
	cmpl	%eax, %ecx
	jge	L4365
	.loc 9 487 72 discriminator 1
	movzbl	-68(%ebp), %eax
	leal	(%eax,%eax), %ecx
	.loc 9 487 89 discriminator 1
	movl	20(%ebp), %edx
	.loc 9 487 108 discriminator 1
	movl	12(%ebp), %eax
	.loc 9 487 96 discriminator 1
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 487 59 discriminator 1
	cmpl	%eax, %ecx
	jl	L4366
L4365:
	.loc 9 488 32
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
	jmp	L4364
L4366:
	.loc 9 492 35
	movl	8(%ebp), %eax
	.loc 9 492 98
	movl	%eax, -16(%ebp)
	.loc 9 492 51
	movl	12(%ebp), %eax
	.loc 9 492 98
	movl	%eax, -12(%ebp)
	.loc 9 492 66
	movl	16(%ebp), %eax
	.loc 9 492 98
	movl	%eax, -8(%ebp)
	.loc 9 492 83
	movl	12(%ebp), %edx
	.loc 9 492 87
	movzbl	-68(%ebp), %eax
	addl	%edx, %eax
	.loc 9 492 98
	movl	%eax, -4(%ebp)
	.loc 9 493 35
	movl	8(%ebp), %eax
	.loc 9 493 104
	movl	%eax, -32(%ebp)
	.loc 9 493 51
	movl	20(%ebp), %edx
	.loc 9 493 58
	movzbl	-68(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 493 104
	movl	%eax, -28(%ebp)
	.loc 9 493 81
	movl	16(%ebp), %eax
	.loc 9 493 104
	movl	%eax, -24(%ebp)
	.loc 9 493 98
	movl	20(%ebp), %eax
	.loc 9 493 104
	movl	%eax, -20(%ebp)
	.loc 9 494 35
	movl	8(%ebp), %eax
	.loc 9 494 124
	movl	%eax, -48(%ebp)
	.loc 9 494 51
	movl	12(%ebp), %edx
	.loc 9 494 55
	movzbl	-68(%ebp), %eax
	addl	%edx, %eax
	.loc 9 494 124
	movl	%eax, -44(%ebp)
	.loc 9 494 78
	movl	8(%ebp), %edx
	.loc 9 494 83
	movzbl	-68(%ebp), %eax
	addl	%edx, %eax
	.loc 9 494 124
	movl	%eax, -40(%ebp)
	.loc 9 494 106
	movl	20(%ebp), %edx
	.loc 9 494 113
	movzbl	-68(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 494 124
	movl	%eax, -36(%ebp)
	.loc 9 495 35
	movl	16(%ebp), %edx
	.loc 9 495 41
	movzbl	-68(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 495 126
	movl	%eax, -64(%ebp)
	.loc 9 495 64
	movl	12(%ebp), %edx
	.loc 9 495 68
	movzbl	-68(%ebp), %eax
	addl	%edx, %eax
	.loc 9 495 126
	movl	%eax, -60(%ebp)
	.loc 9 495 91
	movl	16(%ebp), %eax
	.loc 9 495 126
	movl	%eax, -56(%ebp)
	.loc 9 495 108
	movl	20(%ebp), %edx
	.loc 9 495 115
	movzbl	-68(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 495 126
	movl	%eax, -52(%ebp)
	.loc 9 497 28
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-4(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
	.loc 9 498 28
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
	.loc 9 499 28
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
	.loc 9 500 28
	movl	24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	movl	-60(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
L4364:
	.loc 9 501 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2166:
	.globl	__Z21blit_bitmap_to_bitmapP6bitmapS0_iiii
	.def	__Z21blit_bitmap_to_bitmapP6bitmapS0_iiii;	.scl	2;	.type	32;	.endef
__Z21blit_bitmap_to_bitmapP6bitmapS0_iiii:
LFB2167:
	.loc 9 503 95
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$112, %esp
	.loc 9 505 5
	cmpl	$0, 24(%ebp)
	jns	L4369
	.loc 9 505 28 discriminator 1
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 24(%ebp)
L4369:
	.loc 9 506 5
	cmpl	$0, 28(%ebp)
	jns	L4370
	.loc 9 506 28 discriminator 1
	movl	12(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, 28(%ebp)
L4370:
	.loc 9 508 22
	movl	16(%ebp), %eax
	.loc 9 508 9
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	movl	%eax, -20(%ebp)
	.loc 9 509 22
	movl	20(%ebp), %eax
	.loc 9 509 9
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 9 510 22
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%ebp), %ecx
	movl	24(%ebp), %edx
	addl	%ecx, %edx
	.loc 9 510 9
	cmpl	%edx, %eax
	cmovg	%edx, %eax
	movl	%eax, -28(%ebp)
	.loc 9 511 22
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	20(%ebp), %ecx
	movl	28(%ebp), %edx
	addl	%ecx, %edx
	.loc 9 511 9
	cmpl	%edx, %eax
	cmovg	%edx, %eax
	movl	%eax, -32(%ebp)
	.loc 9 513 28
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 9 513 5
	cmpl	%eax, -20(%ebp)
	jg	L4379
	.loc 9 514 28
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 514 5
	cmpl	%eax, -24(%ebp)
	jg	L4380
	.loc 9 515 5
	cmpl	$0, -28(%ebp)
	js	L4381
	.loc 9 516 5
	cmpl	$0, -32(%ebp)
	js	L4382
	.loc 9 520 28
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 9 520 9
	sall	$2, %eax
	movl	%eax, -36(%ebp)
	.loc 9 521 12
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
	.loc 9 522 13
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -40(%ebp)
	.loc 9 523 23
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	.loc 9 523 54
	movl	-24(%ebp), %eax
	imull	-36(%ebp), %eax
	.loc 9 523 41
	addl	%edx, %eax
	.loc 9 523 9
	addl	%eax, -4(%ebp)
	.loc 9 525 42
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 9 525 26
	movl	%eax, -112(%ebp)
	fildl	-112(%ebp)
	.loc 9 525 51
	fildl	24(%ebp)
	.loc 9 525 11
	fdivrp	%st, %st(1)
	fstps	-44(%ebp)
	.loc 9 526 42
	movl	12(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 526 26
	movl	%eax, -112(%ebp)
	fildl	-112(%ebp)
	.loc 9 526 51
	fildl	28(%ebp)
	.loc 9 526 11
	fdivrp	%st, %st(1)
	fstps	-48(%ebp)
LBB812:
	.loc 9 528 14
	movl	-24(%ebp), %eax
	movl	%eax, -8(%ebp)
L4378:
	.loc 9 528 32 discriminator 1
	movl	-8(%ebp), %eax
	cmpl	-32(%ebp), %eax
	jge	L4383
LBB813:
	.loc 9 529 17
	movl	-4(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 9 530 23
	movl	20(%ebp), %eax
	movl	-8(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 530 28
	movl	%eax, -112(%ebp)
	fildl	-112(%ebp)
	fmuls	-48(%ebp)
	.loc 9 530 18
	fnstcw	-94(%ebp)
	movzwl	-94(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -96(%ebp)
	fldcw	-96(%ebp)
	fistpl	-52(%ebp)
	fldcw	-94(%ebp)
LBB814:
	.loc 9 531 18
	movl	-20(%ebp), %eax
	movl	%eax, -16(%ebp)
L4377:
	.loc 9 531 36 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	-28(%ebp), %eax
	jge	L4376
LBB815:
	.loc 9 532 27 discriminator 2
	movl	16(%ebp), %eax
	movl	-16(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 532 32 discriminator 2
	movl	%eax, -112(%ebp)
	fildl	-112(%ebp)
	fmuls	-44(%ebp)
	.loc 9 532 22 discriminator 2
	fldcw	-96(%ebp)
	fistpl	-56(%ebp)
	fldcw	-94(%ebp)
	.loc 9 533 72 discriminator 2
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	.loc 9 533 62 discriminator 2
	imull	-52(%ebp), %eax
	movl	%eax, %edx
	.loc 9 533 51 discriminator 2
	movl	-56(%ebp), %eax
	addl	%edx, %eax
	.loc 9 533 77 discriminator 2
	leal	0(,%eax,4), %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	.loc 9 533 20 discriminator 2
	movl	(%eax), %eax
	movl	%eax, -60(%ebp)
	.loc 9 535 39 discriminator 2
	movl	-60(%ebp), %eax
	shrl	$24, %eax
	.loc 9 535 54 discriminator 2
	movl	%eax, -112(%ebp)
	movl	$0, -108(%ebp)
	fildq	-112(%ebp)
	fstpl	-88(%ebp)
	fldl	-88(%ebp)
	fldl	LC228
	fdivrp	%st, %st(1)
	.loc 9 535 19 discriminator 2
	fstps	-64(%ebp)
	.loc 9 536 39 discriminator 2
	movl	-60(%ebp), %eax
	shrl	$16, %eax
	.loc 9 536 19 discriminator 2
	movb	%al, -65(%ebp)
	.loc 9 537 39 discriminator 2
	movl	-60(%ebp), %eax
	shrl	$8, %eax
	.loc 9 537 19 discriminator 2
	movb	%al, -66(%ebp)
	.loc 9 538 19 discriminator 2
	movl	-60(%ebp), %eax
	movb	%al, -67(%ebp)
	.loc 9 540 26 discriminator 2
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 540 33 discriminator 2
	shrl	$24, %eax
	.loc 9 540 48 discriminator 2
	movl	%eax, -112(%ebp)
	movl	$0, -108(%ebp)
	fildq	-112(%ebp)
	fstpl	-88(%ebp)
	fldl	-88(%ebp)
	fldl	LC228
	fdivrp	%st, %st(1)
	.loc 9 540 19 discriminator 2
	fstps	-72(%ebp)
	.loc 9 541 26 discriminator 2
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 541 33 discriminator 2
	shrl	$16, %eax
	.loc 9 541 19 discriminator 2
	movb	%al, -73(%ebp)
	.loc 9 542 26 discriminator 2
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 542 33 discriminator 2
	shrl	$8, %eax
	.loc 9 542 19 discriminator 2
	movb	%al, -74(%ebp)
	.loc 9 543 26 discriminator 2
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 543 19 discriminator 2
	movb	%al, -75(%ebp)
	.loc 9 545 33 discriminator 2
	flds	-64(%ebp)
	fadds	-72(%ebp)
	.loc 9 545 42 discriminator 2
	flds	-64(%ebp)
	fmuls	-72(%ebp)
	.loc 9 545 38 discriminator 2
	fsubrp	%st, %st(1)
	.loc 9 545 27 discriminator 2
	flds	LC41
	fmulp	%st, %st(1)
	.loc 9 545 19 discriminator 2
	fldcw	-96(%ebp)
	fistps	-98(%ebp)
	fldcw	-94(%ebp)
	movzwl	-98(%ebp), %eax
	movb	%al, -76(%ebp)
	.loc 9 546 26 discriminator 2
	movzbl	-73(%ebp), %eax
	movl	%eax, -112(%ebp)
	fildl	-112(%ebp)
	.loc 9 546 31 discriminator 2
	fld1
	fsubs	-64(%ebp)
	.loc 9 546 26 discriminator 2
	fmulp	%st, %st(1)
	.loc 9 546 37 discriminator 2
	movzbl	-65(%ebp), %eax
	movl	%eax, -112(%ebp)
	fildl	-112(%ebp)
	faddp	%st, %st(1)
	.loc 9 546 19 discriminator 2
	fldcw	-96(%ebp)
	fistps	-98(%ebp)
	fldcw	-94(%ebp)
	movzwl	-98(%ebp), %eax
	movb	%al, -77(%ebp)
	.loc 9 547 26 discriminator 2
	movzbl	-74(%ebp), %eax
	movl	%eax, -112(%ebp)
	fildl	-112(%ebp)
	.loc 9 547 31 discriminator 2
	fld1
	fsubs	-64(%ebp)
	.loc 9 547 26 discriminator 2
	fmulp	%st, %st(1)
	.loc 9 547 37 discriminator 2
	movzbl	-66(%ebp), %eax
	movl	%eax, -112(%ebp)
	fildl	-112(%ebp)
	faddp	%st, %st(1)
	.loc 9 547 19 discriminator 2
	fldcw	-96(%ebp)
	fistps	-98(%ebp)
	fldcw	-94(%ebp)
	movzwl	-98(%ebp), %eax
	movb	%al, -78(%ebp)
	.loc 9 548 26 discriminator 2
	movzbl	-75(%ebp), %eax
	movl	%eax, -112(%ebp)
	fildl	-112(%ebp)
	.loc 9 548 31 discriminator 2
	fld1
	fsubs	-64(%ebp)
	.loc 9 548 26 discriminator 2
	fmulp	%st, %st(1)
	.loc 9 548 37 discriminator 2
	movzbl	-67(%ebp), %eax
	movl	%eax, -112(%ebp)
	fildl	-112(%ebp)
	faddp	%st, %st(1)
	.loc 9 548 19 discriminator 2
	fldcw	-96(%ebp)
	fistps	-98(%ebp)
	fldcw	-94(%ebp)
	movzwl	-98(%ebp), %eax
	movb	%al, -79(%ebp)
	.loc 9 550 25 discriminator 2
	movzbl	-76(%ebp), %eax
	sall	$24, %eax
	movl	%eax, %edx
	.loc 9 550 37 discriminator 2
	movzbl	-77(%ebp), %eax
	sall	$16, %eax
	.loc 9 550 32 discriminator 2
	orl	%eax, %edx
	.loc 9 550 49 discriminator 2
	movzbl	-78(%ebp), %eax
	sall	$8, %eax
	.loc 9 550 44 discriminator 2
	orl	%eax, %edx
	.loc 9 550 55 discriminator 2
	movzbl	-79(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, %edx
	.loc 9 550 20 discriminator 2
	movl	-12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 551 18 discriminator 2
	addl	$4, -12(%ebp)
LBE815:
	.loc 9 531 9 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L4377
L4376:
LBE814:
	.loc 9 553 13 discriminator 2
	movl	-36(%ebp), %eax
	addl	%eax, -4(%ebp)
LBE813:
	.loc 9 528 5 discriminator 2
	addl	$1, -8(%ebp)
	jmp	L4378
L4379:
LBE812:
	.loc 9 513 36
	nop
	jmp	L4383
L4380:
	.loc 9 514 36
	nop
	jmp	L4383
L4381:
	.loc 9 515 23
	nop
	jmp	L4383
L4382:
	.loc 9 516 23
	nop
L4383:
	.loc 9 555 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2167:
	.globl	_texture_dim
	.data
	.align 4
_texture_dim:
	.long	50
	.text
	.globl	__Z22blit_texture_to_bitmapP6bitmapi2v2i5Colorib
	.def	__Z22blit_texture_to_bitmapP6bitmapi2v2i5Colorib;	.scl	2;	.type	32;	.endef
__Z22blit_texture_to_bitmapP6bitmapi2v2i5Colorib:
LFB2168:
	.loc 9 587 131
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	addl	$-128, %esp
	movl	48(%ebp), %eax
	movb	%al, -100(%ebp)
	.loc 9 589 20
	movl	16(%ebp), %edx
	.loc 9 589 26
	movl	24(%ebp), %eax
	movl	%eax, %ecx
	shrl	$31, %ecx
	addl	%ecx, %eax
	sarl	%eax
	negl	%eax
	.loc 9 589 22
	addl	%edx, %eax
	.loc 9 589 9
	movl	%eax, -84(%ebp)
	.loc 9 590 20
	movl	20(%ebp), %edx
	.loc 9 590 26
	movl	24(%ebp), %eax
	movl	%eax, %ecx
	shrl	$31, %ecx
	addl	%ecx, %eax
	sarl	%eax
	negl	%eax
	.loc 9 590 22
	addl	%edx, %eax
	.loc 9 590 9
	movl	%eax, -88(%ebp)
	.loc 9 592 22
	movl	-84(%ebp), %eax
	.loc 9 592 9
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 9 593 22
	movl	-88(%ebp), %eax
	.loc 9 593 9
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	movl	%eax, -28(%ebp)
	.loc 9 594 22
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	-84(%ebp), %ecx
	movl	24(%ebp), %edx
	addl	%ecx, %edx
	.loc 9 594 9
	cmpl	%edx, %eax
	cmovg	%edx, %eax
	movl	%eax, -32(%ebp)
	.loc 9 595 22
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	-88(%ebp), %ecx
	movl	24(%ebp), %edx
	addl	%ecx, %edx
	.loc 9 595 9
	cmpl	%edx, %eax
	cmovg	%edx, %eax
	movl	%eax, -36(%ebp)
	.loc 9 597 28
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 9 597 5
	cmpl	%eax, -24(%ebp)
	jg	L4396
	.loc 9 598 28
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 598 5
	cmpl	%eax, -28(%ebp)
	jg	L4397
	.loc 9 599 5
	cmpl	$0, -32(%ebp)
	js	L4398
	.loc 9 600 5
	cmpl	$0, -36(%ebp)
	js	L4399
	.loc 9 604 28
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 9 604 9
	sall	$2, %eax
	movl	%eax, -40(%ebp)
	.loc 9 605 12
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
	.loc 9 606 13
	movl	44(%ebp), %eax
	imull	$420, %eax, %eax
	addl	$_textures, %eax
	movl	(%eax), %eax
	movl	%eax, -44(%ebp)
	.loc 9 607 23
	movl	-24(%ebp), %eax
	leal	0(,%eax,4), %edx
	.loc 9 607 54
	movl	-28(%ebp), %eax
	imull	-40(%ebp), %eax
	.loc 9 607 41
	addl	%edx, %eax
	.loc 9 607 9
	addl	%eax, -4(%ebp)
	.loc 9 609 26
	movl	_texture_dim, %eax
	movl	%eax, -128(%ebp)
	fildl	-128(%ebp)
	.loc 9 609 48
	fildl	24(%ebp)
	.loc 9 609 11
	fdivrp	%st, %st(1)
	fstps	-48(%ebp)
	.loc 9 610 26
	movl	_texture_dim, %eax
	movl	%eax, -128(%ebp)
	fildl	-128(%ebp)
	.loc 9 610 48
	fildl	24(%ebp)
	.loc 9 610 11
	fdivrp	%st, %st(1)
	fstps	-52(%ebp)
LBB816:
	.loc 9 612 14
	movl	-28(%ebp), %eax
	movl	%eax, -8(%ebp)
L4394:
	.loc 9 612 32 discriminator 1
	movl	-8(%ebp), %eax
	cmpl	-36(%ebp), %eax
	jge	L4400
LBB817:
	.loc 9 613 17
	movl	-4(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 9 614 23
	movl	-88(%ebp), %eax
	movl	-8(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 614 28
	movl	%eax, -128(%ebp)
	fildl	-128(%ebp)
	fmuls	-52(%ebp)
	.loc 9 614 18
	fnstcw	-98(%ebp)
	movzwl	-98(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -114(%ebp)
	fldcw	-114(%ebp)
	fistpl	-56(%ebp)
	fldcw	-98(%ebp)
LBB818:
	.loc 9 615 18
	movl	-24(%ebp), %eax
	movl	%eax, -16(%ebp)
L4393:
	.loc 9 615 36 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	-32(%ebp), %eax
	jge	L4391
LBB819:
	.loc 9 616 27
	movl	-84(%ebp), %eax
	movl	-16(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 616 32
	movl	%eax, -128(%ebp)
	fildl	-128(%ebp)
	fmuls	-48(%ebp)
	.loc 9 616 22
	fldcw	-114(%ebp)
	fistpl	-60(%ebp)
	fldcw	-98(%ebp)
	.loc 9 617 96
	movl	44(%ebp), %eax
	imull	$420, %eax, %eax
	addl	$_textures+4, %eax
	movl	(%eax), %eax
	.loc 9 617 62
	imull	-56(%ebp), %eax
	movl	%eax, %edx
	.loc 9 617 51
	movl	-60(%ebp), %eax
	addl	%eax, %edx
	.loc 9 617 118
	movl	_texture_dim, %eax
	imull	12(%ebp), %eax
	.loc 9 617 102
	addl	%edx, %eax
	.loc 9 617 131
	leal	0(,%eax,4), %edx
	movl	-44(%ebp), %eax
	addl	%edx, %eax
	.loc 9 617 20
	movl	(%eax), %eax
	movl	%eax, -64(%ebp)
	.loc 9 619 39
	movl	-64(%ebp), %eax
	shrl	$24, %eax
	.loc 9 619 54
	movl	%eax, -128(%ebp)
	movl	$0, -124(%ebp)
	fildq	-128(%ebp)
	fstpl	-112(%ebp)
	fldl	-112(%ebp)
	fldl	LC228
	fdivrp	%st, %st(1)
	.loc 9 619 19
	fstps	-20(%ebp)
	.loc 9 620 13
	cmpb	$0, -100(%ebp)
	je	L4392
	.loc 9 620 34 discriminator 1
	fld1
	fsubs	-20(%ebp)
	fstps	-20(%ebp)
L4392:
	.loc 9 621 30 discriminator 2
	movl	28(%ebp), %eax
	.loc 9 621 32 discriminator 2
	movl	%eax, -128(%ebp)
	fildl	-128(%ebp)
	fmuls	-20(%ebp)
	.loc 9 621 19 discriminator 2
	fldcw	-114(%ebp)
	fistps	-116(%ebp)
	fldcw	-98(%ebp)
	movzwl	-116(%ebp), %eax
	movb	%al, -65(%ebp)
	.loc 9 622 30 discriminator 2
	movl	32(%ebp), %eax
	.loc 9 622 32 discriminator 2
	movl	%eax, -128(%ebp)
	fildl	-128(%ebp)
	fmuls	-20(%ebp)
	.loc 9 622 19 discriminator 2
	fldcw	-114(%ebp)
	fistps	-116(%ebp)
	fldcw	-98(%ebp)
	movzwl	-116(%ebp), %eax
	movb	%al, -66(%ebp)
	.loc 9 623 30 discriminator 2
	movl	36(%ebp), %eax
	.loc 9 623 32 discriminator 2
	movl	%eax, -128(%ebp)
	fildl	-128(%ebp)
	fmuls	-20(%ebp)
	.loc 9 623 19 discriminator 2
	fldcw	-114(%ebp)
	fistps	-116(%ebp)
	fldcw	-98(%ebp)
	movzwl	-116(%ebp), %eax
	movb	%al, -67(%ebp)
	.loc 9 625 26 discriminator 2
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 625 33 discriminator 2
	shrl	$24, %eax
	.loc 9 625 48 discriminator 2
	movl	%eax, -128(%ebp)
	movl	$0, -124(%ebp)
	fildq	-128(%ebp)
	fstpl	-112(%ebp)
	fldl	-112(%ebp)
	fldl	LC228
	fdivrp	%st, %st(1)
	.loc 9 625 19 discriminator 2
	fstps	-72(%ebp)
	.loc 9 626 26 discriminator 2
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 626 33 discriminator 2
	shrl	$16, %eax
	.loc 9 626 19 discriminator 2
	movb	%al, -73(%ebp)
	.loc 9 627 26 discriminator 2
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 627 33 discriminator 2
	shrl	$8, %eax
	.loc 9 627 19 discriminator 2
	movb	%al, -74(%ebp)
	.loc 9 628 26 discriminator 2
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 628 19 discriminator 2
	movb	%al, -75(%ebp)
	.loc 9 630 33 discriminator 2
	flds	-20(%ebp)
	fadds	-72(%ebp)
	.loc 9 630 42 discriminator 2
	flds	-20(%ebp)
	fmuls	-72(%ebp)
	.loc 9 630 38 discriminator 2
	fsubrp	%st, %st(1)
	.loc 9 630 27 discriminator 2
	flds	LC41
	fmulp	%st, %st(1)
	.loc 9 630 19 discriminator 2
	fldcw	-114(%ebp)
	fistps	-116(%ebp)
	fldcw	-98(%ebp)
	movzwl	-116(%ebp), %eax
	movb	%al, -76(%ebp)
	.loc 9 631 26 discriminator 2
	movzbl	-73(%ebp), %eax
	movl	%eax, -128(%ebp)
	fildl	-128(%ebp)
	.loc 9 631 31 discriminator 2
	fld1
	fsubs	-20(%ebp)
	.loc 9 631 26 discriminator 2
	fmulp	%st, %st(1)
	.loc 9 631 37 discriminator 2
	movzbl	-65(%ebp), %eax
	movl	%eax, -128(%ebp)
	fildl	-128(%ebp)
	faddp	%st, %st(1)
	.loc 9 631 19 discriminator 2
	fldcw	-114(%ebp)
	fistps	-116(%ebp)
	fldcw	-98(%ebp)
	movzwl	-116(%ebp), %eax
	movb	%al, -77(%ebp)
	.loc 9 632 26 discriminator 2
	movzbl	-74(%ebp), %eax
	movl	%eax, -128(%ebp)
	fildl	-128(%ebp)
	.loc 9 632 31 discriminator 2
	fld1
	fsubs	-20(%ebp)
	.loc 9 632 26 discriminator 2
	fmulp	%st, %st(1)
	.loc 9 632 37 discriminator 2
	movzbl	-66(%ebp), %eax
	movl	%eax, -128(%ebp)
	fildl	-128(%ebp)
	faddp	%st, %st(1)
	.loc 9 632 19 discriminator 2
	fldcw	-114(%ebp)
	fistps	-116(%ebp)
	fldcw	-98(%ebp)
	movzwl	-116(%ebp), %eax
	movb	%al, -78(%ebp)
	.loc 9 633 26 discriminator 2
	movzbl	-75(%ebp), %eax
	movl	%eax, -128(%ebp)
	fildl	-128(%ebp)
	.loc 9 633 31 discriminator 2
	fld1
	fsubs	-20(%ebp)
	.loc 9 633 26 discriminator 2
	fmulp	%st, %st(1)
	.loc 9 633 37 discriminator 2
	movzbl	-67(%ebp), %eax
	movl	%eax, -128(%ebp)
	fildl	-128(%ebp)
	faddp	%st, %st(1)
	.loc 9 633 19 discriminator 2
	fldcw	-114(%ebp)
	fistps	-116(%ebp)
	fldcw	-98(%ebp)
	movzwl	-116(%ebp), %eax
	movb	%al, -79(%ebp)
	.loc 9 635 25 discriminator 2
	movzbl	-76(%ebp), %eax
	sall	$24, %eax
	movl	%eax, %edx
	.loc 9 635 37 discriminator 2
	movzbl	-77(%ebp), %eax
	sall	$16, %eax
	.loc 9 635 32 discriminator 2
	orl	%eax, %edx
	.loc 9 635 49 discriminator 2
	movzbl	-78(%ebp), %eax
	sall	$8, %eax
	.loc 9 635 44 discriminator 2
	orl	%eax, %edx
	.loc 9 635 55 discriminator 2
	movzbl	-79(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, %edx
	.loc 9 635 20 discriminator 2
	movl	-12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 636 18 discriminator 2
	addl	$4, -12(%ebp)
LBE819:
	.loc 9 615 9 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L4393
L4391:
LBE818:
	.loc 9 638 13 discriminator 2
	movl	-40(%ebp), %eax
	addl	%eax, -4(%ebp)
LBE817:
	.loc 9 612 5 discriminator 2
	addl	$1, -8(%ebp)
	jmp	L4394
L4396:
LBE816:
	.loc 9 597 36
	nop
	jmp	L4400
L4397:
	.loc 9 598 36
	nop
	jmp	L4400
L4398:
	.loc 9 599 23
	nop
	jmp	L4400
L4399:
	.loc 9 600 23
	nop
L4400:
	.loc 9 640 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2168:
	.globl	__Z5get_w7tagRECT
	.def	__Z5get_w7tagRECT;	.scl	2;	.type	32;	.endef
__Z5get_w7tagRECT:
LFB2169:
	.loc 9 642 24
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 9 642 38
	movl	16(%ebp), %edx
	.loc 9 642 52
	movl	8(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 642 58
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2169:
	.globl	__Z5get_h7tagRECT
	.def	__Z5get_h7tagRECT;	.scl	2;	.type	32;	.endef
__Z5get_h7tagRECT:
LFB2170:
	.loc 9 643 24
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 9 643 38
	movl	20(%ebp), %edx
	.loc 9 643 52
	movl	12(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 643 57
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2170:
	.globl	__Z5get_w6RECT_f
	.def	__Z5get_w6RECT_f;	.scl	2;	.type	32;	.endef
__Z5get_w6RECT_f:
LFB2171:
	.loc 9 644 24
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$8, %esp
	.loc 9 644 38
	flds	16(%ebp)
	.loc 9 644 52
	flds	8(%ebp)
	.loc 9 644 45
	fsubrp	%st, %st(1)
	.loc 9 644 52
	fnstcw	-2(%ebp)
	movzwl	-2(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -4(%ebp)
	fldcw	-4(%ebp)
	fistpl	-8(%ebp)
	fldcw	-2(%ebp)
	movl	-8(%ebp), %eax
	.loc 9 644 58
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2171:
	.globl	__Z5get_h6RECT_f
	.def	__Z5get_h6RECT_f;	.scl	2;	.type	32;	.endef
__Z5get_h6RECT_f:
LFB2172:
	.loc 9 645 24
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$8, %esp
	.loc 9 645 38
	flds	20(%ebp)
	.loc 9 645 52
	flds	12(%ebp)
	.loc 9 645 45
	fsubrp	%st, %st(1)
	.loc 9 645 52
	fnstcw	-2(%ebp)
	movzwl	-2(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -4(%ebp)
	fldcw	-4(%ebp)
	fistpl	-8(%ebp)
	fldcw	-2(%ebp)
	movl	-8(%ebp), %eax
	.loc 9 645 57
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2172:
	.globl	__Z23render_bitmap_to_screenP6bitmap7tagRECTS1_
	.def	__Z23render_bitmap_to_screenP6bitmap7tagRECTS1_;	.scl	2;	.type	32;	.endef
__Z23render_bitmap_to_screenP6bitmap7tagRECTS1_:
LFB2173:
	.loc 9 647 80
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$152, %esp
	.loc 9 648 22
	movl	12(%ebp), %eax
	.loc 9 648 9
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	movl	%eax, -28(%ebp)
	.loc 9 649 22
	movl	16(%ebp), %eax
	.loc 9 649 9
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	movl	%eax, -32(%ebp)
	.loc 9 650 22
	movl	20(%ebp), %edx
	movl	_Main_Buffer+4, %eax
	cmpl	%eax, %edx
	jge	L4410
	.loc 9 650 22 is_stmt 0 discriminator 1
	movl	20(%ebp), %eax
	jmp	L4411
L4410:
	.loc 9 650 22 discriminator 2
	movl	_Main_Buffer+4, %eax
L4411:
	.loc 9 650 9 is_stmt 1 discriminator 4
	movl	%eax, -36(%ebp)
	.loc 9 651 22 discriminator 4
	movl	24(%ebp), %edx
	movl	_Main_Buffer+8, %eax
	cmpl	%eax, %edx
	jge	L4412
	.loc 9 651 22 is_stmt 0 discriminator 1
	movl	24(%ebp), %eax
	jmp	L4413
L4412:
	.loc 9 651 22 discriminator 2
	movl	_Main_Buffer+8, %eax
L4413:
	.loc 9 651 9 is_stmt 1 discriminator 4
	movl	%eax, -40(%ebp)
	.loc 9 653 34 discriminator 4
	movl	_Main_Buffer+4, %eax
	.loc 9 653 5 discriminator 4
	cmpl	%eax, -28(%ebp)
	jg	L4428
	.loc 9 654 34
	movl	_Main_Buffer+8, %eax
	.loc 9 654 5
	cmpl	%eax, -32(%ebp)
	jg	L4429
	.loc 9 655 5
	cmpl	$0, -36(%ebp)
	js	L4430
	.loc 9 656 5
	cmpl	$0, -40(%ebp)
	js	L4431
	.loc 9 660 34
	movl	_Main_Buffer+4, %eax
	.loc 9 660 9
	sall	$2, %eax
	movl	%eax, -44(%ebp)
	.loc 9 661 12
	movl	_Main_Buffer, %eax
	movl	%eax, -12(%ebp)
	.loc 9 662 13
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
	.loc 9 663 23
	movl	-28(%ebp), %eax
	leal	0(,%eax,4), %edx
	.loc 9 663 54
	movl	-32(%ebp), %eax
	imull	-44(%ebp), %eax
	.loc 9 663 41
	addl	%edx, %eax
	.loc 9 663 9
	addl	%eax, -12(%ebp)
	.loc 9 665 39
	movl	28(%ebp), %eax
	movl	%eax, (%esp)
	movl	32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	movl	%eax, -136(%ebp)
	.loc 9 665 26
	fildl	-136(%ebp)
	fstps	-136(%ebp)
	.loc 9 665 68
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	movl	%eax, -128(%ebp)
	.loc 9 665 55
	fildl	-128(%ebp)
	.loc 9 665 78
	fdivrs	-136(%ebp)
	fstps	-52(%ebp)
	.loc 9 666 39
	movl	28(%ebp), %eax
	movl	%eax, (%esp)
	movl	32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_h7tagRECT
	movl	%eax, -136(%ebp)
	.loc 9 666 26
	fildl	-136(%ebp)
	fstps	-136(%ebp)
	.loc 9 666 68
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_h7tagRECT
	movl	%eax, -128(%ebp)
	.loc 9 666 55
	fildl	-128(%ebp)
	.loc 9 666 78
	fdivrs	-136(%ebp)
	fstps	-56(%ebp)
LBB820:
	.loc 9 668 14
	movl	-32(%ebp), %eax
	movl	%eax, -16(%ebp)
L4427:
	.loc 9 668 32 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	-40(%ebp), %eax
	jge	L4432
LBB821:
	.loc 9 669 17
	movl	-12(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 9 671 35
	movl	16(%ebp), %eax
	.loc 9 671 23
	movl	-16(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 671 40
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	fmuls	-56(%ebp)
	.loc 9 671 18
	fnstcw	-118(%ebp)
	movzwl	-118(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -120(%ebp)
	fldcw	-120(%ebp)
	fistpl	-60(%ebp)
	fldcw	-118(%ebp)
	.loc 9 672 36
	movl	32(%ebp), %edx
	.loc 9 672 22
	movl	-60(%ebp), %eax
	addl	%eax, %edx
	.loc 9 672 52
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 672 9
	cmpl	%eax, %edx
	jge	L4419
	.loc 9 672 85 discriminator 2
	movl	32(%ebp), %edx
	.loc 9 672 71 discriminator 2
	movl	-60(%ebp), %eax
	addl	%edx, %eax
	.loc 9 672 59 discriminator 2
	testl	%eax, %eax
	jns	L4420
L4419:
	.loc 9 673 17 discriminator 3
	movl	-44(%ebp), %eax
	addl	%eax, -12(%ebp)
	.loc 9 674 13 discriminator 3
	jmp	L4421
L4420:
LBB822:
	.loc 9 677 18
	movl	-28(%ebp), %eax
	movl	%eax, -24(%ebp)
L4426:
	.loc 9 677 36 discriminator 1
	movl	-24(%ebp), %eax
	cmpl	-36(%ebp), %eax
	jge	L4422
LBB823:
	.loc 9 679 39
	movl	12(%ebp), %eax
	.loc 9 679 27
	movl	-24(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 679 45
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	fmuls	-52(%ebp)
	.loc 9 679 22
	fldcw	-120(%ebp)
	fistpl	-64(%ebp)
	fldcw	-118(%ebp)
	.loc 9 680 40
	movl	28(%ebp), %edx
	.loc 9 680 26
	movl	-64(%ebp), %eax
	addl	%edx, %eax
	.loc 9 680 13
	testl	%eax, %eax
	js	L4423
	.loc 9 680 75 discriminator 2
	movl	28(%ebp), %edx
	.loc 9 680 61 discriminator 2
	movl	-64(%ebp), %eax
	addl	%eax, %edx
	.loc 9 680 91 discriminator 2
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 9 680 49 discriminator 2
	cmpl	%eax, %edx
	jl	L4424
L4423:
	.loc 9 681 22 discriminator 3
	addl	$4, -20(%ebp)
	.loc 9 682 17 discriminator 3
	jmp	L4425
L4424:
	.loc 9 685 61
	movl	28(%ebp), %edx
	.loc 9 685 47
	movl	-64(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 9 685 93
	movl	32(%ebp), %edx
	.loc 9 685 79
	movl	-60(%ebp), %eax
	addl	%eax, %edx
	.loc 9 685 108
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	.loc 9 685 98
	imull	%edx, %eax
	.loc 9 685 67
	addl	%ecx, %eax
	.loc 9 685 20
	movl	%eax, -68(%ebp)
	.loc 9 686 56
	movl	-68(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-48(%ebp), %eax
	addl	%edx, %eax
	.loc 9 686 20
	movl	(%eax), %eax
	movl	%eax, -72(%ebp)
	.loc 9 688 39
	movl	-72(%ebp), %eax
	shrl	$24, %eax
	.loc 9 688 54
	movl	%eax, -136(%ebp)
	movl	$0, -132(%ebp)
	fildq	-136(%ebp)
	fstpl	-112(%ebp)
	fldl	-112(%ebp)
	fldl	LC228
	fdivrp	%st, %st(1)
	.loc 9 688 19
	fstps	-76(%ebp)
	.loc 9 689 39
	movl	-72(%ebp), %eax
	shrl	$16, %eax
	.loc 9 689 19
	movb	%al, -77(%ebp)
	.loc 9 690 39
	movl	-72(%ebp), %eax
	shrl	$8, %eax
	.loc 9 690 19
	movb	%al, -78(%ebp)
	.loc 9 691 19
	movl	-72(%ebp), %eax
	movb	%al, -79(%ebp)
	.loc 9 693 26
	movl	-20(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 693 33
	shrl	$24, %eax
	.loc 9 693 48
	movl	%eax, -136(%ebp)
	movl	$0, -132(%ebp)
	fildq	-136(%ebp)
	fstpl	-112(%ebp)
	fldl	-112(%ebp)
	fldl	LC228
	fdivrp	%st, %st(1)
	.loc 9 693 19
	fstps	-84(%ebp)
	.loc 9 694 26
	movl	-20(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 694 33
	shrl	$16, %eax
	.loc 9 694 19
	movb	%al, -85(%ebp)
	.loc 9 695 26
	movl	-20(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 695 33
	shrl	$8, %eax
	.loc 9 695 19
	movb	%al, -86(%ebp)
	.loc 9 696 26
	movl	-20(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 696 19
	movb	%al, -87(%ebp)
	.loc 9 698 33
	flds	-76(%ebp)
	fadds	-84(%ebp)
	.loc 9 698 42
	flds	-76(%ebp)
	fmuls	-84(%ebp)
	.loc 9 698 38
	fsubrp	%st, %st(1)
	.loc 9 698 27
	flds	LC41
	fmulp	%st, %st(1)
	.loc 9 698 19
	fldcw	-120(%ebp)
	fistps	-122(%ebp)
	fldcw	-118(%ebp)
	movzwl	-122(%ebp), %eax
	movb	%al, -88(%ebp)
	.loc 9 699 26
	movzbl	-85(%ebp), %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	.loc 9 699 31
	fld1
	fsubs	-76(%ebp)
	.loc 9 699 26
	fmulp	%st, %st(1)
	.loc 9 699 37
	movzbl	-77(%ebp), %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	faddp	%st, %st(1)
	.loc 9 699 19
	fldcw	-120(%ebp)
	fistps	-122(%ebp)
	fldcw	-118(%ebp)
	movzwl	-122(%ebp), %eax
	movb	%al, -89(%ebp)
	.loc 9 700 26
	movzbl	-86(%ebp), %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	.loc 9 700 31
	fld1
	fsubs	-76(%ebp)
	.loc 9 700 26
	fmulp	%st, %st(1)
	.loc 9 700 37
	movzbl	-78(%ebp), %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	faddp	%st, %st(1)
	.loc 9 700 19
	fldcw	-120(%ebp)
	fistps	-122(%ebp)
	fldcw	-118(%ebp)
	movzwl	-122(%ebp), %eax
	movb	%al, -90(%ebp)
	.loc 9 701 26
	movzbl	-87(%ebp), %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	.loc 9 701 31
	fld1
	fsubs	-76(%ebp)
	.loc 9 701 26
	fmulp	%st, %st(1)
	.loc 9 701 37
	movzbl	-79(%ebp), %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	faddp	%st, %st(1)
	.loc 9 701 19
	fldcw	-120(%ebp)
	fistps	-122(%ebp)
	fldcw	-118(%ebp)
	movzwl	-122(%ebp), %eax
	movb	%al, -91(%ebp)
	.loc 9 703 25
	movzbl	-88(%ebp), %eax
	sall	$24, %eax
	movl	%eax, %edx
	.loc 9 703 37
	movzbl	-89(%ebp), %eax
	sall	$16, %eax
	.loc 9 703 32
	orl	%eax, %edx
	.loc 9 703 49
	movzbl	-90(%ebp), %eax
	sall	$8, %eax
	.loc 9 703 44
	orl	%eax, %edx
	.loc 9 703 55
	movzbl	-91(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, %edx
	.loc 9 703 20
	movl	-20(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 704 18
	addl	$4, -20(%ebp)
L4425:
LBE823:
	.loc 9 677 9 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L4426
L4422:
LBE822:
	.loc 9 706 13
	movl	-44(%ebp), %eax
	addl	%eax, -12(%ebp)
L4421:
LBE821:
	.loc 9 668 5 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L4427
L4428:
LBE820:
	.loc 9 653 42
	nop
	jmp	L4432
L4429:
	.loc 9 654 42
	nop
	jmp	L4432
L4430:
	.loc 9 655 23
	nop
	jmp	L4432
L4431:
	.loc 9 656 23
	nop
L4432:
	.loc 9 709 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2173:
	.globl	__Z19compute_centers_hexP2v2iii
	.def	__Z19compute_centers_hexP2v2iii;	.scl	2;	.type	32;	.endef
__Z19compute_centers_hexP2v2iii:
LFB2174:
	.loc 9 712 75
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 9 713 36
	fildl	20(%ebp)
	fldl	LC231
	fmulp	%st, %st(1)
	.loc 9 713 46
	fldl	LC232
	faddp	%st, %st(1)
	.loc 9 713 9
	fnstcw	-34(%ebp)
	movzwl	-34(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -36(%ebp)
	fldcw	-36(%ebp)
	fistpl	-28(%ebp)
	fldcw	-34(%ebp)
	.loc 9 714 9
	movl	20(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, -32(%ebp)
	.loc 9 716 9
	movl	20(%ebp), %eax
	movl	%eax, -4(%ebp)
	.loc 9 717 10
	movb	$0, -5(%ebp)
	.loc 9 719 9
	movl	$0, -12(%ebp)
LBB824:
	.loc 9 721 14
	movl	$0, -16(%ebp)
L4437:
	.loc 9 721 23 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L4438
LBB825:
	.loc 9 722 28
	movzbl	-5(%ebp), %eax
	leal	1(%eax), %edx
	.loc 9 722 13
	movl	20(%ebp), %eax
	imull	%edx, %eax
	movl	%eax, -20(%ebp)
LBB826:
	.loc 9 724 18
	movl	$0, -24(%ebp)
L4436:
	.loc 9 724 27 discriminator 3
	movl	-24(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L4435
	.loc 9 725 30 discriminator 2
	movl	-12(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	-20(%ebp), %edx
	movl	%edx, (%eax)
	movl	-4(%ebp), %edx
	movl	%edx, 4(%eax)
	.loc 9 726 23 discriminator 2
	movl	-32(%ebp), %eax
	addl	%eax, -20(%ebp)
	.loc 9 727 20 discriminator 2
	addl	$1, -12(%ebp)
	.loc 9 724 9 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L4436
L4435:
LBE826:
	.loc 9 729 19 discriminator 2
	movl	-28(%ebp), %eax
	addl	%eax, -4(%ebp)
	.loc 9 730 16 discriminator 2
	xorb	$1, -5(%ebp)
LBE825:
	.loc 9 721 5 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L4437
L4438:
LBE824:
	.loc 9 732 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2174:
	.globl	__Z24compute_centers_randomlyP2v2iii
	.def	__Z24compute_centers_randomlyP2v2iii;	.scl	2;	.type	32;	.endef
__Z24compute_centers_randomlyP2v2iii:
LFB2175:
	.loc 9 734 95
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$20, %esp
	.cfi_offset 3, -12
LBB827:
	.loc 9 736 14
	movl	$0, -12(%ebp)
L4441:
	.loc 9 736 23 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L4442
	.loc 9 737 28 discriminator 2
	call	_rand
	movl	%eax, %ebx
	.loc 9 737 18 discriminator 2
	movl	-12(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	8(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 9 737 31 discriminator 2
	movl	%ebx, %eax
	cltd
	idivl	16(%ebp)
	movl	%edx, %eax
	.loc 9 737 22 discriminator 2
	movl	%eax, (%ecx)
	.loc 9 738 28 discriminator 2
	call	_rand
	movl	%eax, %ebx
	.loc 9 738 18 discriminator 2
	movl	-12(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	8(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 9 738 31 discriminator 2
	movl	%ebx, %eax
	cltd
	idivl	20(%ebp)
	movl	%edx, %eax
	.loc 9 738 22 discriminator 2
	movl	%eax, 4(%ecx)
	.loc 9 736 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4441
L4442:
LBE827:
	.loc 9 740 1
	nop
	addl	$20, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2175:
	.globl	__Z20compute_centers_gridP2v2iii
	.def	__Z20compute_centers_gridP2v2iii;	.scl	2;	.type	32;	.endef
__Z20compute_centers_gridP2v2iii:
LFB2176:
	.loc 9 742 74
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%esi
	pushl	%ebx
	subl	$16, %esp
	.cfi_offset 6, -12
	.cfi_offset 3, -16
LBB828:
	.loc 9 743 14
	movl	$0, -12(%ebp)
L4447:
	.loc 9 743 23 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L4448
LBB829:
LBB830:
	.loc 9 744 18
	movl	$0, -16(%ebp)
L4446:
	.loc 9 744 27 discriminator 3
	movl	-16(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L4445
	.loc 9 745 37 discriminator 2
	movl	-12(%ebp), %eax
	imull	16(%ebp), %eax
	movl	%eax, %edx
	movl	-16(%ebp), %eax
	addl	%edx, %eax
	leal	0(,%eax,8), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 9 745 45 discriminator 2
	movl	20(%ebp), %edx
	movl	%edx, %ecx
	imull	-12(%ebp), %ecx
	.loc 9 745 55 discriminator 2
	movl	20(%ebp), %edx
	movl	%edx, %ebx
	shrl	$31, %ebx
	addl	%ebx, %edx
	sarl	%edx
	.loc 9 745 49 discriminator 2
	addl	%edx, %ecx
	.loc 9 745 64 discriminator 2
	movl	20(%ebp), %edx
	movl	%edx, %ebx
	imull	-16(%ebp), %ebx
	.loc 9 745 74 discriminator 2
	movl	20(%ebp), %edx
	movl	%edx, %esi
	shrl	$31, %esi
	addl	%esi, %edx
	sarl	%edx
	.loc 9 745 68 discriminator 2
	addl	%ebx, %edx
	.loc 9 745 37 discriminator 2
	movl	%ecx, (%eax)
	movl	%edx, 4(%eax)
	.loc 9 744 9 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L4446
L4445:
LBE830:
LBE829:
	.loc 9 743 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4447
L4448:
LBE828:
	.loc 9 748 1
	nop
	addl	$16, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2176:
	.globl	__Z21compute_color_average6bitmapiii
	.def	__Z21compute_color_average6bitmapiii;	.scl	2;	.type	32;	.endef
__Z21compute_color_average6bitmapiii:
LFB2177:
	.loc 9 750 83
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%esi
	pushl	%ebx
	addl	$-128, %esp
	.cfi_offset 6, -12
	.cfi_offset 3, -16
	.loc 9 751 11
	movl	8(%ebp), %eax
	movl	$0, (%eax)
	movl	8(%ebp), %eax
	movl	$0, 4(%eax)
	movl	8(%ebp), %eax
	movl	$0, 8(%eax)
	movl	8(%ebp), %eax
	movl	$255, 12(%eax)
	.loc 9 753 22
	movl	32(%ebp), %eax
	subl	40(%ebp), %eax
	.loc 9 753 9
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	movl	%eax, -60(%ebp)
	.loc 9 754 22
	movl	36(%ebp), %eax
	subl	40(%ebp), %eax
	.loc 9 754 9
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	movl	%eax, -64(%ebp)
	.loc 9 755 22
	movl	16(%ebp), %ecx
	movl	32(%ebp), %edx
	movl	40(%ebp), %eax
	addl	%edx, %eax
	.loc 9 755 9
	cmpl	%eax, %ecx
	cmovle	%ecx, %eax
	movl	%eax, -68(%ebp)
	.loc 9 756 22
	movl	20(%ebp), %ecx
	movl	36(%ebp), %edx
	movl	40(%ebp), %eax
	addl	%edx, %eax
	.loc 9 756 9
	cmpl	%eax, %ecx
	cmovle	%ecx, %eax
	movl	%eax, -72(%ebp)
	.loc 9 758 28
	movl	16(%ebp), %eax
	.loc 9 758 5
	cmpl	%eax, -60(%ebp)
	jg	L4464
	.loc 9 759 28
	movl	20(%ebp), %eax
	.loc 9 759 5
	cmpl	%eax, -64(%ebp)
	jg	L4465
	.loc 9 760 5
	cmpl	$0, -68(%ebp)
	js	L4466
	.loc 9 761 5
	cmpl	$0, -72(%ebp)
	js	L4467
	.loc 9 763 25
	movl	16(%ebp), %eax
	.loc 9 763 11
	sall	$2, %eax
	movl	%eax, -76(%ebp)
	.loc 9 764 12
	movl	12(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 9 765 23
	movl	-60(%ebp), %eax
	leal	0(,%eax,4), %edx
	.loc 9 765 54
	movl	-64(%ebp), %eax
	imull	-76(%ebp), %eax
	.loc 9 765 41
	addl	%edx, %eax
	.loc 9 765 9
	addl	%eax, -12(%ebp)
	.loc 9 767 12
	movl	$0, -24(%ebp)
	movl	$0, -20(%ebp)
	.loc 9 768 12
	movl	$0, -32(%ebp)
	movl	$0, -28(%ebp)
	.loc 9 769 12
	movl	$0, -40(%ebp)
	movl	$0, -36(%ebp)
	.loc 9 770 11
	fldz
	fstps	-44(%ebp)
LBB831:
	.loc 9 772 14
	movl	-64(%ebp), %eax
	movl	%eax, -48(%ebp)
L4458:
	.loc 9 772 32 discriminator 1
	movl	-48(%ebp), %eax
	cmpl	-72(%ebp), %eax
	jge	L4455
LBB832:
	.loc 9 773 17
	movl	-12(%ebp), %eax
	movl	%eax, -52(%ebp)
LBB833:
	.loc 9 774 18
	movl	-60(%ebp), %eax
	movl	%eax, -56(%ebp)
L4457:
	.loc 9 774 36 discriminator 3
	movl	-56(%ebp), %eax
	cmpl	-68(%ebp), %eax
	jge	L4456
	.loc 9 775 19 discriminator 2
	movl	-52(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 775 26 discriminator 2
	shrl	$16, %eax
	.loc 9 775 33 discriminator 2
	movl	$0, %edx
	movzbl	%al, %ebx
	movl	%edx, %eax
	andl	$0, %eax
	movl	%eax, %esi
	.loc 9 775 15 discriminator 2
	addl	%ebx, -24(%ebp)
	adcl	%esi, -20(%ebp)
	.loc 9 776 19 discriminator 2
	movl	-52(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 776 26 discriminator 2
	shrl	$8, %eax
	.loc 9 776 33 discriminator 2
	movl	$0, %edx
	movzbl	%al, %ecx
	movl	%ecx, -120(%ebp)
	movl	%edx, %eax
	andl	$0, %eax
	movl	%eax, -116(%ebp)
	.loc 9 776 15 discriminator 2
	movl	-120(%ebp), %eax
	movl	-116(%ebp), %edx
	addl	%eax, -32(%ebp)
	adcl	%edx, -28(%ebp)
	.loc 9 777 19 discriminator 2
	movl	-52(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 777 33 discriminator 2
	movl	$0, %edx
	movzbl	%al, %ecx
	movl	%ecx, -128(%ebp)
	movl	%edx, %eax
	andl	$0, %eax
	movl	%eax, -124(%ebp)
	.loc 9 777 15 discriminator 2
	movl	-128(%ebp), %eax
	movl	-124(%ebp), %edx
	addl	%eax, -40(%ebp)
	adcl	%edx, -36(%ebp)
	.loc 9 778 18 discriminator 2
	addl	$4, -52(%ebp)
	.loc 9 780 19 discriminator 2
	flds	-44(%ebp)
	.loc 9 780 24 discriminator 2
	movl	-52(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 780 31 discriminator 2
	shrl	$24, %eax
	.loc 9 780 46 discriminator 2
	movl	%eax, -136(%ebp)
	movl	$0, -132(%ebp)
	fildq	-136(%ebp)
	fstpl	-96(%ebp)
	fldl	-96(%ebp)
	fldl	LC228
	fdivrp	%st, %st(1)
	.loc 9 780 19 discriminator 2
	faddp	%st, %st(1)
	fstps	-44(%ebp)
	.loc 9 774 9 discriminator 2
	addl	$1, -56(%ebp)
	jmp	L4457
L4456:
LBE833:
	.loc 9 782 13 discriminator 2
	movl	-76(%ebp), %eax
	addl	%eax, -12(%ebp)
LBE832:
	.loc 9 772 5 discriminator 2
	addl	$1, -48(%ebp)
	jmp	L4458
L4455:
LBE831:
	.loc 9 785 5
	flds	-44(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	jp	L4459
	flds	-44(%ebp)
	fldz
	fucomip	%st(1), %st
	fstp	%st(0)
	je	L4468
L4459:
	.loc 9 787 18
	fildq	-24(%ebp)
	cmpl	$0, -20(%ebp)
	jns	L4461
	fldt	LC233
	faddp	%st, %st(1)
L4461:
	fstps	-100(%ebp)
	flds	-100(%ebp)
	fdivs	-44(%ebp)
	.loc 9 787 14
	fnstcw	-102(%ebp)
	movzwl	-102(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -104(%ebp)
	fldcw	-104(%ebp)
	fistpl	-108(%ebp)
	fldcw	-102(%ebp)
	movl	-108(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 788 18
	fildq	-32(%ebp)
	cmpl	$0, -28(%ebp)
	jns	L4462
	fldt	LC233
	faddp	%st, %st(1)
L4462:
	fstps	-100(%ebp)
	flds	-100(%ebp)
	fdivs	-44(%ebp)
	.loc 9 788 14
	fldcw	-104(%ebp)
	fistpl	-108(%ebp)
	fldcw	-102(%ebp)
	movl	-108(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 9 789 18
	fildq	-40(%ebp)
	cmpl	$0, -36(%ebp)
	jns	L4463
	fldt	LC233
	faddp	%st, %st(1)
L4463:
	fstps	-100(%ebp)
	flds	-100(%ebp)
	fdivs	-44(%ebp)
	.loc 9 789 14
	fldcw	-104(%ebp)
	fistpl	-108(%ebp)
	fldcw	-102(%ebp)
	movl	-108(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 9 791 12
	nop
	jmp	L4469
L4464:
	.loc 9 758 43
	nop
	jmp	L4469
L4465:
	.loc 9 759 43
	nop
	jmp	L4469
L4466:
	.loc 9 760 43
	nop
	jmp	L4469
L4467:
	.loc 9 761 43
	nop
	jmp	L4469
L4468:
	.loc 9 785 28
	nop
L4469:
	.loc 9 792 1
	movl	8(%ebp), %eax
	subl	$-128, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2177:
	.section	.text$_ZN16General_SettingsC1Ev,"x"
	.linkonce discard
	.align 2
	.globl	__ZN16General_SettingsC1Ev
	.def	__ZN16General_SettingsC1Ev;	.scl	2;	.type	32;	.endef
__ZN16General_SettingsC1Ev:
LFB2180:
	.loc 9 810 8
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$4, %esp
	movl	%ecx, -4(%ebp)
LBB834:
	.loc 9 810 8
	movl	-4(%ebp), %eax
	movl	$50, (%eax)
	movl	-4(%ebp), %eax
	movl	$50, 4(%eax)
	movl	-4(%ebp), %eax
	movl	$50, 8(%eax)
	movl	-4(%ebp), %eax
	movl	$50, 12(%eax)
	movl	-4(%ebp), %eax
	movb	$1, 16(%eax)
	movl	-4(%ebp), %eax
	movb	$0, 17(%eax)
	movl	-4(%ebp), %eax
	movb	$0, 18(%eax)
	movl	-4(%ebp), %eax
	fld1
	fstps	20(%eax)
	movl	-4(%ebp), %eax
	movb	$1, 24(%eax)
	movl	-4(%ebp), %eax
	movl	$0, 28(%eax)
	movl	-4(%ebp), %eax
	movl	$0, 32(%eax)
	movl	-4(%ebp), %eax
	movl	$0, 36(%eax)
	movl	-4(%ebp), %eax
	movl	$0, 40(%eax)
	movl	-4(%ebp), %eax
	movl	$255, 44(%eax)
	movl	-4(%ebp), %eax
	movb	$0, 48(%eax)
	movl	-4(%ebp), %eax
	movl	$1, 52(%eax)
	movl	-4(%ebp), %eax
	movb	$1, 56(%eax)
	movl	-4(%ebp), %eax
	movl	$10, 60(%eax)
	movl	-4(%ebp), %eax
	movl	$10, 64(%eax)
	movl	-4(%ebp), %eax
	movl	$10, 68(%eax)
	movl	-4(%ebp), %eax
	movb	$0, 72(%eax)
	movl	-4(%ebp), %eax
	movl	$10, 76(%eax)
	movl	-4(%ebp), %eax
	movl	$10, 80(%eax)
	movl	-4(%ebp), %eax
	movl	$20, 84(%eax)
	movl	-4(%ebp), %eax
	movl	$2000, 88(%eax)
	movl	-4(%ebp), %eax
	movl	$10, 92(%eax)
	movl	-4(%ebp), %eax
	movl	$0, 96(%eax)
	movl	-4(%ebp), %eax
	movl	$0, 100(%eax)
	movl	-4(%ebp), %eax
	movb	$0, 104(%eax)
	movl	-4(%ebp), %eax
	movb	$0, 105(%eax)
	movl	-4(%ebp), %eax
	movb	$0, 106(%eax)
	movl	-4(%ebp), %eax
	movb	$0, 107(%eax)
	movl	-4(%ebp), %eax
	movl	$50, 108(%eax)
	movl	-4(%ebp), %eax
	movl	$0, 112(%eax)
	movl	-4(%ebp), %eax
	movb	$0, 116(%eax)
	movl	-4(%ebp), %eax
	movl	$50, 120(%eax)
	movl	-4(%ebp), %eax
	movl	$0, 124(%eax)
	movl	-4(%ebp), %eax
	movb	$0, 128(%eax)
	movl	-4(%ebp), %eax
	movb	$0, 129(%eax)
LBE834:
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2180:
	.globl	_settings
	.bss
	.align 32
_settings:
	.space 132
	.text
	.globl	__Z7shuffleP2v2ii
	.def	__Z7shuffleP2v2ii;	.scl	2;	.type	32;	.endef
__Z7shuffleP2v2ii:
LFB2181:
	.loc 9 874 62
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
LBB835:
	.loc 9 875 14
	movl	$0, -12(%ebp)
L4476:
	.loc 9 875 23 discriminator 1
	movl	-12(%ebp), %eax
	cmpl	16(%ebp), %eax
	jge	L4477
LBB836:
LBB837:
	.loc 9 876 18
	movl	$0, -16(%ebp)
L4475:
	.loc 9 876 42 discriminator 1
	movl	12(%ebp), %eax
	subl	$1, %eax
	.loc 9 876 27 discriminator 1
	cmpl	%eax, -16(%ebp)
	jge	L4473
LBB838:
LBB839:
	.loc 9 877 21
	call	_rand
	.loc 9 877 28
	andl	$1, %eax
	testl	%eax, %eax
	sete	%al
	.loc 9 877 13
	testb	%al, %al
	je	L4474
LBB840:
	.loc 9 878 34
	movl	-16(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 9 878 20
	movl	4(%eax), %edx
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	movl	%edx, -20(%ebp)
	.loc 9 879 39
	movl	-16(%ebp), %eax
	addl	$1, %eax
	leal	0(,%eax,8), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 9 879 26
	movl	-16(%ebp), %edx
	leal	0(,%edx,8), %ecx
	movl	8(%ebp), %edx
	addl	%edx, %ecx
	movl	4(%eax), %edx
	movl	(%eax), %eax
	movl	%eax, (%ecx)
	movl	%edx, 4(%ecx)
	.loc 9 880 30
	movl	-16(%ebp), %eax
	addl	$1, %eax
	leal	0(,%eax,8), %edx
	movl	8(%ebp), %eax
	leal	(%edx,%eax), %ecx
	movl	-24(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%eax, (%ecx)
	movl	%edx, 4(%ecx)
L4474:
LBE840:
LBE839:
LBE838:
	.loc 9 876 9 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L4475
L4473:
LBE837:
LBE836:
	.loc 9 875 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4476
L4477:
LBE835:
	.loc 9 884 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2181:
	.globl	__Z18sort_by_birghtnessP2v2P5ColorPfib
	.def	__Z18sort_by_birghtnessP2v2P5ColorPfib;	.scl	2;	.type	32;	.endef
__Z18sort_by_birghtnessP2v2P5ColorPfib:
LFB2182:
	.loc 9 886 98
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$52, %esp
	movl	24(%ebp), %eax
	movb	%al, -52(%ebp)
LBB841:
	.loc 9 888 14
	movl	$0, -4(%ebp)
L4484:
	.loc 9 888 31 discriminator 1
	movl	20(%ebp), %eax
	subl	$1, %eax
	.loc 9 888 23 discriminator 1
	cmpl	%eax, -4(%ebp)
	jge	L4485
LBB842:
LBB843:
	.loc 9 889 18
	movl	$0, -8(%ebp)
L4483:
	.loc 9 889 35 discriminator 1
	movl	20(%ebp), %eax
	subl	$1, %eax
	.loc 9 889 37 discriminator 1
	subl	-4(%ebp), %eax
	.loc 9 889 27 discriminator 1
	cmpl	%eax, -8(%ebp)
	jge	L4480
LBB844:
	.loc 9 890 42
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 9 890 60
	movl	-8(%ebp), %eax
	addl	$1, %eax
	leal	0(,%eax,4), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	fxch	%st(1)
	.loc 9 890 18
	fcomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	movb	%al, -9(%ebp)
	.loc 9 891 13
	cmpb	$0, -52(%ebp)
	je	L4481
	.loc 9 891 50 discriminator 1
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 9 891 68 discriminator 1
	movl	-8(%ebp), %eax
	addl	$1, %eax
	leal	0(,%eax,4), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 9 891 36 discriminator 1
	fcomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	movb	%al, -9(%ebp)
L4481:
LBB845:
	.loc 9 893 13
	cmpb	$0, -9(%ebp)
	je	L4482
LBB846:
	.loc 9 894 38
	movl	-8(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 9 894 20
	movl	4(%eax), %edx
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	movl	%edx, -20(%ebp)
	.loc 9 895 43
	movl	-8(%ebp), %eax
	addl	$1, %eax
	leal	0(,%eax,8), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	.loc 9 895 30
	movl	-8(%ebp), %edx
	leal	0(,%edx,8), %ecx
	movl	8(%ebp), %edx
	addl	%edx, %ecx
	movl	4(%eax), %edx
	movl	(%eax), %eax
	movl	%eax, (%ecx)
	movl	%edx, 4(%ecx)
	.loc 9 896 30
	movl	-8(%ebp), %eax
	addl	$1, %eax
	leal	0(,%eax,8), %edx
	movl	8(%ebp), %eax
	leal	(%edx,%eax), %ecx
	movl	-24(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%eax, (%ecx)
	movl	%edx, 4(%ecx)
	.loc 9 898 44
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 9 898 23
	flds	(%eax)
	fstps	-16(%ebp)
	.loc 9 899 49
	movl	-8(%ebp), %eax
	addl	$1, %eax
	leal	0(,%eax,4), %edx
	movl	16(%ebp), %eax
	addl	%eax, %edx
	.loc 9 899 29
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %ecx
	movl	16(%ebp), %eax
	addl	%ecx, %eax
	.loc 9 899 49
	flds	(%edx)
	.loc 9 899 33
	fstps	(%eax)
	.loc 9 900 31
	movl	-8(%ebp), %eax
	addl	$1, %eax
	leal	0(,%eax,4), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	.loc 9 900 33
	flds	-16(%ebp)
	fstps	(%eax)
	.loc 9 902 40
	movl	-8(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	.loc 9 902 23
	movl	(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -36(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -32(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -28(%ebp)
	.loc 9 903 41
	movl	-8(%ebp), %eax
	addl	$1, %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%eax, %edx
	.loc 9 903 29
	movl	-8(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %ecx
	movl	12(%ebp), %eax
	addl	%ecx, %eax
	movl	(%edx), %ecx
	movl	%ecx, (%eax)
	movl	4(%edx), %ecx
	movl	%ecx, 4(%eax)
	movl	8(%edx), %ecx
	movl	%ecx, 8(%eax)
	movl	12(%edx), %edx
	movl	%edx, 12(%eax)
	.loc 9 904 29
	movl	-8(%ebp), %eax
	addl	$1, %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	addl	%edx, %eax
	movl	-40(%ebp), %edx
	movl	%edx, (%eax)
	movl	-36(%ebp), %edx
	movl	%edx, 4(%eax)
	movl	-32(%ebp), %edx
	movl	%edx, 8(%eax)
	movl	-28(%ebp), %edx
	movl	%edx, 12(%eax)
L4482:
LBE846:
LBE845:
LBE844:
	.loc 9 889 9 discriminator 2
	addl	$1, -8(%ebp)
	jmp	L4483
L4480:
LBE843:
LBE842:
	.loc 9 888 5 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L4484
L4485:
LBE841:
	.loc 9 908 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2182:
	.globl	__Z15compute_indexes6bitmapP2v2ii
	.def	__Z15compute_indexes6bitmapP2v2ii;	.scl	2;	.type	32;	.endef
__Z15compute_indexes6bitmapP2v2ii:
LFB2183:
	.loc 9 910 84
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$116, %esp
	.cfi_offset 3, -12
	.loc 9 912 34
	movl	32(%ebp), %eax
	sall	$2, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -28(%ebp)
	.loc 9 914 9
	movl	$120, -12(%ebp)
	.loc 9 915 9
	movl	$0, -16(%ebp)
LBB847:
	.loc 9 917 14
	movl	$0, -20(%ebp)
L4498:
	.loc 9 917 23 discriminator 1
	movl	-20(%ebp), %eax
	cmpl	32(%ebp), %eax
	jge	L4487
LBB848:
	.loc 9 918 71
	movl	-20(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	28(%ebp), %eax
	addl	%edx, %eax
	.loc 9 918 82
	movl	4(%eax), %ecx
	.loc 9 918 57
	movl	-20(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	28(%ebp), %eax
	addl	%edx, %eax
	.loc 9 918 82
	movl	(%eax), %edx
	leal	-48(%ebp), %eax
	movl	36(%ebp), %ebx
	movl	%ebx, 32(%esp)
	movl	%ecx, 28(%esp)
	movl	%edx, 24(%esp)
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	16(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	24(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z21compute_color_average6bitmapiii
	.loc 9 919 30
	movl	-48(%ebp), %edx
	.loc 9 919 36
	movl	-44(%ebp), %eax
	.loc 9 919 32
	addl	%eax, %edx
	.loc 9 919 42
	movl	-40(%ebp), %eax
	.loc 9 919 38
	addl	%edx, %eax
	.loc 9 919 45
	movl	%eax, -68(%ebp)
	fildl	-68(%ebp)
	fldl	LC234
	fdivrp	%st, %st(1)
	.loc 9 919 14
	fstpl	-56(%ebp)
	.loc 9 920 22
	fldl	LC228
	fldl	-56(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4506
	.loc 9 920 22 is_stmt 0 discriminator 1
	fldl	LC228
	jmp	L4490
L4506:
	.loc 9 920 22 discriminator 2
	fldl	-56(%ebp)
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4507
	.loc 9 920 22 discriminator 4
	fldz
	jmp	L4490
L4507:
	.loc 9 920 22 discriminator 5
	fldl	-56(%ebp)
L4490:
	.loc 9 920 20 is_stmt 1 discriminator 8
	fstpl	-56(%ebp)
	.loc 9 921 34 discriminator 8
	fldl	-56(%ebp)
	fldl	LC228
	fdivrp	%st, %st(1)
	.loc 9 921 43 discriminator 8
	fldl	LC236
	fmulp	%st, %st(1)
	.loc 9 921 18 discriminator 8
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-28(%ebp), %eax
	addl	%eax, %edx
	.loc 9 921 20 discriminator 8
	fnstcw	-58(%ebp)
	movzwl	-58(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -60(%ebp)
	fldcw	-60(%ebp)
	fistpl	-64(%ebp)
	fldcw	-58(%ebp)
	movl	-64(%ebp), %eax
	movl	%eax, (%edx)
	.loc 9 923 22 discriminator 8
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	cmpl	$120, %eax
	jg	L4494
	.loc 9 923 22 is_stmt 0 discriminator 1
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	jmp	L4495
L4494:
	.loc 9 923 22 discriminator 2
	movl	$120, %eax
L4495:
	.loc 9 923 18 is_stmt 1 discriminator 4
	movl	-20(%ebp), %edx
	leal	0(,%edx,4), %ecx
	movl	-28(%ebp), %edx
	addl	%ecx, %edx
	.loc 9 923 20 discriminator 4
	movl	%eax, (%edx)
	.loc 9 925 22 discriminator 4
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 925 9 discriminator 4
	cmpl	%eax, -16(%ebp)
	jge	L4496
	.loc 9 925 58 discriminator 1
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	.loc 9 925 47 discriminator 1
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
L4496:
	.loc 9 926 22
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 926 9
	cmpl	%eax, -12(%ebp)
	jle	L4497
	.loc 9 926 58 discriminator 1
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	.loc 9 926 47 discriminator 1
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
L4497:
LBE848:
	.loc 9 917 5 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L4498
L4487:
LBE847:
	.loc 9 929 65
	movl	-16(%ebp), %eax
	subl	-12(%ebp), %eax
	.loc 9 929 46
	movl	%eax, -68(%ebp)
	fildl	-68(%ebp)
	.loc 9 929 11
	flds	LC237
	fdivp	%st, %st(1)
	fstps	-32(%ebp)
LBB849:
	.loc 9 930 14
	movl	$0, -24(%ebp)
L4502:
	.loc 9 930 23 discriminator 2
	movl	-24(%ebp), %eax
	cmpl	32(%ebp), %eax
	jge	L4499
	.loc 9 931 32
	movl	-24(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 931 34
	subl	-12(%ebp), %eax
	.loc 9 931 47
	movl	%eax, -68(%ebp)
	fildl	-68(%ebp)
	fmuls	-32(%ebp)
	.loc 9 931 18
	movl	-24(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-28(%ebp), %eax
	addl	%eax, %edx
	.loc 9 931 20
	fnstcw	-58(%ebp)
	movzwl	-58(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -60(%ebp)
	fldcw	-60(%ebp)
	fistpl	-64(%ebp)
	fldcw	-58(%ebp)
	movl	-64(%ebp), %eax
	movl	%eax, (%edx)
	.loc 9 932 22
	movl	-24(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	cmpl	$121, %eax
	jg	L4500
	.loc 9 932 22 is_stmt 0 discriminator 1
	movl	-24(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	jmp	L4501
L4500:
	.loc 9 932 22 discriminator 2
	movl	$121, %eax
L4501:
	.loc 9 932 18 is_stmt 1 discriminator 4
	movl	-24(%ebp), %edx
	leal	0(,%edx,4), %ecx
	movl	-28(%ebp), %edx
	addl	%ecx, %edx
	.loc 9 932 20 discriminator 4
	movl	%eax, (%edx)
	.loc 9 930 5 discriminator 4
	addl	$1, -24(%ebp)
	jmp	L4502
L4499:
LBE849:
	.loc 9 935 12
	movl	-28(%ebp), %eax
	.loc 9 936 1
	addl	$116, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2183:
	.section .rdata,"dr"
LC238:
	.ascii "main.cpp\0"
LC239:
	.ascii "indexes\0"
LC242:
	.ascii "min_index >= 0\0"
	.text
	.globl	__Z24compute_indexes_by_color6bitmapP2v2ii
	.def	__Z24compute_indexes_by_color6bitmapP2v2ii;	.scl	2;	.type	32;	.endef
__Z24compute_indexes_by_color6bitmapP2v2ii:
LFB2184:
	.loc 9 938 93
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$2068, %esp
	.cfi_offset 3, -12
	.loc 9 940 34
	movl	32(%ebp), %eax
	sall	$2, %eax
	movl	%eax, (%esp)
	call	_malloc
	.loc 9 940 66
	movl	%eax, -36(%ebp)
	.loc 9 941 5
	movl	-36(%ebp), %eax
	testl	%eax, %eax
	jne	L4511
	.loc 9 941 5 is_stmt 0 discriminator 2
	movl	$941, 8(%esp)
	movl	$LC238, 4(%esp)
	movl	$LC239, (%esp)
	call	__assert
L4511:
LBB850:
	.loc 9 944 14 is_stmt 1
	movl	$0, -12(%ebp)
L4513:
	.loc 9 944 23 discriminator 3
	cmpl	$120, -12(%ebp)
	jg	L4512
	.loc 9 945 86 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	addl	$_caps_data+4, %eax
	movl	(%eax), %eax
	movl	-12(%ebp), %edx
	sall	$4, %edx
	leal	-8(%ebp), %ebx
	addl	%ebx, %edx
	leal	-1964(%edx), %ebx
	leal	-2008(%ebp), %ecx
	movl	%eax, 32(%esp)
	movl	$0, 28(%esp)
	movl	$0, 24(%esp)
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	addl	$_caps_data, %eax
	movl	(%eax), %edx
	movl	%edx, 4(%esp)
	movl	4(%eax), %edx
	movl	%edx, 8(%esp)
	movl	8(%eax), %edx
	movl	%edx, 12(%esp)
	movl	12(%eax), %edx
	movl	%edx, 16(%esp)
	movl	16(%eax), %eax
	movl	%eax, 20(%esp)
	movl	%ecx, (%esp)
	call	__Z21compute_color_average6bitmapiii
	movl	-2008(%ebp), %eax
	movl	%eax, (%ebx)
	movl	-2004(%ebp), %eax
	movl	%eax, 4(%ebx)
	movl	-2000(%ebp), %eax
	movl	%eax, 8(%ebx)
	movl	-1996(%ebp), %eax
	movl	%eax, 12(%ebx)
	.loc 9 944 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4513
L4512:
LBE850:
LBB851:
	.loc 9 948 14
	movl	$0, -16(%ebp)
L4526:
	.loc 9 948 23 discriminator 1
	movl	-16(%ebp), %eax
	cmpl	32(%ebp), %eax
	jge	L4514
LBB852:
	.loc 9 949 71
	movl	-16(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	28(%ebp), %eax
	addl	%edx, %eax
	.loc 9 949 82
	movl	4(%eax), %ecx
	.loc 9 949 57
	movl	-16(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	28(%ebp), %eax
	addl	%edx, %eax
	.loc 9 949 82
	movl	(%eax), %edx
	leal	-1988(%ebp), %eax
	movl	36(%ebp), %ebx
	movl	%ebx, 32(%esp)
	movl	%ecx, 28(%esp)
	movl	%edx, 24(%esp)
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	16(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	24(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z21compute_color_average6bitmapiii
	.loc 9 950 27
	movl	-1988(%ebp), %eax
	.loc 9 950 15
	movb	%al, -29(%ebp)
	.loc 9 951 27
	movl	-1984(%ebp), %eax
	.loc 9 951 15
	movb	%al, -30(%ebp)
	.loc 9 952 27
	movl	-1980(%ebp), %eax
	.loc 9 952 15
	movb	%al, -31(%ebp)
	.loc 9 954 15
	fld1
	fstps	-20(%ebp)
	.loc 9 955 15
	movl	$-1, -24(%ebp)
LBB853:
	.loc 9 956 18
	movl	$0, -28(%ebp)
L4522:
	.loc 9 956 27 discriminator 1
	cmpl	$120, -28(%ebp)
	jg	L4515
LBB854:
	.loc 9 957 46
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %ebx
	addl	%ebx, %eax
	subl	$1964, %eax
	movl	(%eax), %edx
	.loc 9 957 48
	movzbl	-29(%ebp), %eax
	movl	%edx, %ecx
	subl	%eax, %ecx
	.loc 9 957 77
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %ebx
	addl	%ebx, %eax
	subl	$1964, %eax
	movl	(%eax), %edx
	.loc 9 957 79
	movzbl	-29(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 957 59
	imull	%eax, %ecx
	movl	%ecx, %edx
	.loc 9 958 46
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %ebx
	addl	%ebx, %eax
	subl	$1960, %eax
	movl	(%eax), %ecx
	.loc 9 958 48
	movzbl	-30(%ebp), %eax
	movl	%ecx, %ebx
	subl	%eax, %ebx
	.loc 9 958 77
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %ecx
	addl	%ecx, %eax
	subl	$1960, %eax
	movl	(%eax), %ecx
	.loc 9 958 79
	movzbl	-30(%ebp), %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	.loc 9 958 59
	imull	%ebx, %eax
	.loc 9 957 90
	leal	(%edx,%eax), %ecx
	.loc 9 959 46
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %ebx
	addl	%ebx, %eax
	subl	$1956, %eax
	movl	(%eax), %edx
	.loc 9 959 48
	movzbl	-31(%ebp), %eax
	movl	%edx, %ebx
	subl	%eax, %ebx
	.loc 9 959 77
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$1956, %eax
	movl	(%eax), %edx
	.loc 9 959 79
	movzbl	-31(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 959 59
	imull	%ebx, %eax
	.loc 9 958 90
	addl	%ecx, %eax
	.loc 9 957 19
	movl	%eax, -2016(%ebp)
	fildl	-2016(%ebp)
	fstps	-1992(%ebp)
	.loc 9 960 22
	flds	-1992(%ebp)
	fldl	LC240
	fdivrp	%st, %st(1)
	fstps	-2012(%ebp)
	flds	-2012(%ebp)
	fstps	-1992(%ebp)
	.loc 9 962 26
	movzbl	_settings+107, %eax
	.loc 9 962 13
	testb	%al, %al
	je	L4516
	.loc 9 963 28
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %ebx
	addl	%ebx, %eax
	subl	$1960, %eax
	movl	(%eax), %edx
	movzbl	-30(%ebp), %eax
	movl	%edx, %ecx
	subl	%eax, %ecx
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %ebx
	addl	%ebx, %eax
	subl	$1960, %eax
	movl	(%eax), %edx
	movzbl	-30(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	imull	%eax, %ecx
	movl	%ecx, %edx
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %ebx
	addl	%ebx, %eax
	subl	$1964, %eax
	movl	(%eax), %ecx
	movzbl	-29(%ebp), %eax
	movl	%ecx, %ebx
	subl	%eax, %ebx
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %ecx
	addl	%ecx, %eax
	subl	$1964, %eax
	movl	(%eax), %ecx
	movzbl	-29(%ebp), %eax
	subl	%eax, %ecx
	movl	%ecx, %eax
	imull	%ebx, %eax
	cmpl	%eax, %edx
	cmovge	%edx, %eax
	.loc 9 963 26
	movl	%eax, -2016(%ebp)
	fildl	-2016(%ebp)
	fstps	-1992(%ebp)
	.loc 9 964 28
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %ebx
	addl	%ebx, %eax
	subl	$1956, %eax
	movl	(%eax), %edx
	movzbl	-31(%ebp), %eax
	movl	%edx, %ecx
	subl	%eax, %ecx
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %ebx
	addl	%ebx, %eax
	subl	$1956, %eax
	movl	(%eax), %edx
	movzbl	-31(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	imull	%ecx, %eax
	movl	%eax, -2016(%ebp)
	fildl	-2016(%ebp)
	flds	-1992(%ebp)
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4530
	.loc 9 964 28 is_stmt 0 discriminator 1
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %ebx
	addl	%ebx, %eax
	subl	$1956, %eax
	movl	(%eax), %edx
	movzbl	-31(%ebp), %eax
	movl	%edx, %ecx
	subl	%eax, %ecx
	movl	-28(%ebp), %eax
	sall	$4, %eax
	leal	-8(%ebp), %ebx
	addl	%ebx, %eax
	subl	$1956, %eax
	movl	(%eax), %edx
	movzbl	-31(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	imull	%ecx, %eax
	movl	%eax, -2016(%ebp)
	fildl	-2016(%ebp)
	jmp	L4519
L4530:
	.loc 9 964 28 discriminator 2
	flds	-1992(%ebp)
L4519:
	.loc 9 964 26 is_stmt 1 discriminator 4
	fstps	-1992(%ebp)
	.loc 9 965 26 discriminator 4
	flds	-1992(%ebp)
	fldl	LC241
	fdivrp	%st, %st(1)
	fstps	-2012(%ebp)
	flds	-2012(%ebp)
	fstps	-1992(%ebp)
L4516:
	.loc 9 968 26
	flds	-1992(%ebp)
	.loc 9 968 13
	flds	-20(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L4520
	.loc 9 969 30
	flds	-1992(%ebp)
	fstps	-20(%ebp)
	.loc 9 970 30
	movl	-28(%ebp), %eax
	movl	%eax, -24(%ebp)
L4520:
LBE854:
	.loc 9 956 9 discriminator 2
	addl	$1, -28(%ebp)
	jmp	L4522
L4515:
LBE853:
	.loc 9 973 9
	cmpl	$0, -24(%ebp)
	jns	L4525
	.loc 9 973 9 is_stmt 0 discriminator 2
	movl	$973, 8(%esp)
	movl	$LC238, 4(%esp)
	movl	$LC242, (%esp)
	call	__assert
L4525:
	.loc 9 974 18 is_stmt 1 discriminator 2
	movl	-36(%ebp), %eax
	movl	-16(%ebp), %edx
	sall	$2, %edx
	addl	%eax, %edx
	.loc 9 974 20 discriminator 2
	movl	-24(%ebp), %eax
	movl	%eax, (%edx)
LBE852:
	.loc 9 948 5 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L4526
L4514:
LBE851:
	.loc 9 977 12
	movl	-36(%ebp), %eax
	.loc 9 978 1
	addl	$2068, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2184:
	.section .rdata,"dr"
LC243:
	.ascii "colors\0"
	.text
	.globl	__Z22compute_centers_colors6bitmapP2v2ii
	.def	__Z22compute_centers_colors6bitmapP2v2ii;	.scl	2;	.type	32;	.endef
__Z22compute_centers_colors6bitmapP2v2ii:
LFB2185:
	.loc 9 980 93
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%esi
	pushl	%ebx
	subl	$80, %esp
	.cfi_offset 6, -12
	.cfi_offset 3, -16
	.loc 9 982 37
	movl	32(%ebp), %eax
	sall	$4, %eax
	movl	%eax, (%esp)
	call	_malloc
	.loc 9 982 71
	movl	%eax, -16(%ebp)
	.loc 9 983 5
	movl	-16(%ebp), %eax
	testl	%eax, %eax
	jne	L4534
	.loc 9 983 5 is_stmt 0 discriminator 2
	movl	$983, 8(%esp)
	movl	$LC238, 4(%esp)
	movl	$LC243, (%esp)
	call	__assert
L4534:
LBB855:
	.loc 9 985 14 is_stmt 1
	movl	$0, -12(%ebp)
L4536:
	.loc 9 985 23 discriminator 3
	movl	-12(%ebp), %eax
	cmpl	32(%ebp), %eax
	jge	L4535
	.loc 9 986 73 discriminator 2
	movl	-12(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	28(%ebp), %eax
	addl	%edx, %eax
	.loc 9 986 84 discriminator 2
	movl	4(%eax), %ecx
	.loc 9 986 59 discriminator 2
	movl	-12(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	28(%ebp), %eax
	addl	%edx, %eax
	.loc 9 986 84 discriminator 2
	movl	(%eax), %edx
	.loc 9 986 19 discriminator 2
	movl	-16(%ebp), %eax
	movl	-12(%ebp), %ebx
	sall	$4, %ebx
	addl	%eax, %ebx
	.loc 9 986 84 discriminator 2
	leal	-40(%ebp), %eax
	movl	36(%ebp), %esi
	movl	%esi, 32(%esp)
	movl	%ecx, 28(%esp)
	movl	%edx, 24(%esp)
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	16(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	20(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	24(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z21compute_color_average6bitmapiii
	movl	-40(%ebp), %eax
	movl	%eax, (%ebx)
	movl	-36(%ebp), %eax
	movl	%eax, 4(%ebx)
	movl	-32(%ebp), %eax
	movl	%eax, 8(%ebx)
	movl	-28(%ebp), %eax
	movl	%eax, 12(%ebx)
	.loc 9 985 5 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4536
L4535:
LBE855:
	.loc 9 989 12
	movl	-16(%ebp), %eax
	.loc 9 990 1
	addl	$80, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2185:
	.globl	__Z30compute_dimensions_from_radius6bitmap
	.def	__Z30compute_dimensions_from_radius6bitmap;	.scl	2;	.type	32;	.endef
__Z30compute_dimensions_from_radius6bitmap:
LFB2186:
	.loc 9 992 51
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 9 993 18
	movl	_settings+68, %eax
	.loc 9 993 5
	testl	%eax, %eax
	jg	L4539
	.loc 9 993 47 discriminator 1
	movl	$1, _settings+68
L4539:
	.loc 9 994 36
	movl	12(%ebp), %eax
	.loc 9 994 22
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	.loc 9 994 72
	movl	_settings+68, %eax
	.loc 9 994 61
	addl	%eax, %eax
	.loc 9 994 45
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	.loc 9 994 43
	fdivrp	%st, %st(1)
	.loc 9 994 80
	fld1
	faddp	%st, %st(1)
	.loc 9 994 20
	fnstcw	-6(%ebp)
	movzwl	-6(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -8(%ebp)
	fldcw	-8(%ebp)
	fistpl	-12(%ebp)
	fldcw	-6(%ebp)
	movl	-12(%ebp), %eax
	movl	%eax, _settings+60
	.loc 9 995 36
	movl	16(%ebp), %eax
	.loc 9 995 22
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	.loc 9 995 72
	movl	_settings+68, %eax
	.loc 9 995 61
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	fldl	LC231
	fmulp	%st, %st(1)
	.loc 9 995 45
	fstps	-4(%ebp)
	flds	-4(%ebp)
	.loc 9 995 43
	fdivrp	%st, %st(1)
	.loc 9 995 80
	fld1
	faddp	%st, %st(1)
	.loc 9 995 20
	fldcw	-8(%ebp)
	fistpl	-12(%ebp)
	fldcw	-6(%ebp)
	movl	-12(%ebp), %eax
	movl	%eax, _settings+64
	.loc 9 996 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2186:
	.globl	__Z29compute_dimensions_from_x_hex6bitmap
	.def	__Z29compute_dimensions_from_x_hex6bitmap;	.scl	2;	.type	32;	.endef
__Z29compute_dimensions_from_x_hex6bitmap:
LFB2187:
	.loc 9 998 50
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 9 999 18
	movl	_settings+60, %eax
	.loc 9 999 5
	testl	%eax, %eax
	jg	L4541
	.loc 9 999 45 discriminator 1
	movl	$1, _settings+60
L4541:
	.loc 9 1000 37
	movl	12(%ebp), %eax
	.loc 9 1000 23
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	.loc 9 1000 63
	movl	_settings+60, %eax
	.loc 9 1000 69
	addl	%eax, %eax
	.loc 9 1000 45
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	.loc 9 1000 43
	fdivrp	%st, %st(1)
	.loc 9 1000 21
	fnstcw	-6(%ebp)
	movzwl	-6(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -8(%ebp)
	fldcw	-8(%ebp)
	fistpl	-12(%ebp)
	fldcw	-6(%ebp)
	movl	-12(%ebp), %eax
	movl	%eax, _settings+68
	.loc 9 1002 18
	movl	_settings+68, %eax
	.loc 9 1002 5
	testl	%eax, %eax
	jg	L4542
	.loc 9 1002 47 discriminator 1
	movl	$1, _settings+68
L4542:
	.loc 9 1003 36
	movl	16(%ebp), %eax
	.loc 9 1003 22
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	.loc 9 1003 72
	movl	_settings+68, %eax
	.loc 9 1003 61
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	fldl	LC231
	fmulp	%st, %st(1)
	.loc 9 1003 45
	fstps	-4(%ebp)
	flds	-4(%ebp)
	.loc 9 1003 43
	fdivrp	%st, %st(1)
	.loc 9 1003 80
	fld1
	faddp	%st, %st(1)
	.loc 9 1003 20
	fldcw	-8(%ebp)
	fistpl	-12(%ebp)
	fldcw	-6(%ebp)
	movl	-12(%ebp), %eax
	movl	%eax, _settings+64
	.loc 9 1004 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2187:
	.globl	__Z29compute_dimensions_from_y_hex6bitmap
	.def	__Z29compute_dimensions_from_y_hex6bitmap;	.scl	2;	.type	32;	.endef
__Z29compute_dimensions_from_y_hex6bitmap:
LFB2188:
	.loc 9 1006 50
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 9 1007 18
	movl	_settings+64, %eax
	.loc 9 1007 5
	testl	%eax, %eax
	jg	L4544
	.loc 9 1007 45 discriminator 1
	movl	$1, _settings+64
L4544:
	.loc 9 1008 37
	movl	12(%ebp), %eax
	.loc 9 1008 23
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	.loc 9 1008 63
	movl	_settings+64, %eax
	.loc 9 1008 69
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	fldl	LC231
	fmulp	%st, %st(1)
	.loc 9 1008 45
	fstps	-4(%ebp)
	flds	-4(%ebp)
	.loc 9 1008 43
	fdivrp	%st, %st(1)
	.loc 9 1008 21
	fnstcw	-6(%ebp)
	movzwl	-6(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -8(%ebp)
	fldcw	-8(%ebp)
	fistpl	-12(%ebp)
	fldcw	-6(%ebp)
	movl	-12(%ebp), %eax
	movl	%eax, _settings+68
	.loc 9 1010 18
	movl	_settings+68, %eax
	.loc 9 1010 5
	testl	%eax, %eax
	jg	L4545
	.loc 9 1010 47 discriminator 1
	movl	$1, _settings+68
L4545:
	.loc 9 1011 36
	movl	16(%ebp), %eax
	.loc 9 1011 22
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	.loc 9 1011 67
	movl	_settings+68, %eax
	.loc 9 1011 56
	addl	%eax, %eax
	.loc 9 1011 45
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	.loc 9 1011 43
	fdivrp	%st, %st(1)
	.loc 9 1011 75
	fld1
	faddp	%st, %st(1)
	.loc 9 1011 20
	fldcw	-8(%ebp)
	fistpl	-12(%ebp)
	fldcw	-6(%ebp)
	movl	-12(%ebp), %eax
	movl	%eax, _settings+60
	.loc 9 1012 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2188:
	.globl	__Z29compute_dimensions_from_width6bitmap
	.def	__Z29compute_dimensions_from_width6bitmap;	.scl	2;	.type	32;	.endef
__Z29compute_dimensions_from_width6bitmap:
LFB2189:
	.loc 9 1014 50
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$12, %esp
	.loc 9 1015 18
	movl	_settings+84, %eax
	.loc 9 1015 5
	testl	%eax, %eax
	jg	L4547
	.loc 9 1015 45 discriminator 1
	movl	$1, _settings+84
L4547:
	.loc 9 1016 37
	movl	12(%ebp), %eax
	.loc 9 1016 23
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 9 1016 63
	movl	_settings+84, %eax
	.loc 9 1016 46
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 9 1016 44
	fdivrp	%st, %st(1)
	.loc 9 1016 69
	fld1
	faddp	%st, %st(1)
	.loc 9 1016 21
	fnstcw	-2(%ebp)
	movzwl	-2(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -4(%ebp)
	fldcw	-4(%ebp)
	fistpl	-8(%ebp)
	fldcw	-2(%ebp)
	movl	-8(%ebp), %eax
	movl	%eax, _settings+76
	.loc 9 1017 37
	movl	16(%ebp), %eax
	.loc 9 1017 23
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 9 1017 63
	movl	_settings+84, %eax
	.loc 9 1017 46
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 9 1017 44
	fdivrp	%st, %st(1)
	.loc 9 1017 69
	fld1
	faddp	%st, %st(1)
	.loc 9 1017 21
	fldcw	-4(%ebp)
	fistpl	-8(%ebp)
	fldcw	-2(%ebp)
	movl	-8(%ebp), %eax
	movl	%eax, _settings+80
	.loc 9 1018 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2189:
	.globl	__Z30compute_dimensions_from_x_grid6bitmap
	.def	__Z30compute_dimensions_from_x_grid6bitmap;	.scl	2;	.type	32;	.endef
__Z30compute_dimensions_from_x_grid6bitmap:
LFB2190:
	.loc 9 1020 51
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$12, %esp
	.loc 9 1021 18
	movl	_settings+76, %eax
	.loc 9 1021 5
	testl	%eax, %eax
	jg	L4549
	.loc 9 1021 47 discriminator 1
	movl	$1, _settings+76
L4549:
	.loc 9 1022 36
	movl	12(%ebp), %eax
	.loc 9 1022 22
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 9 1022 61
	movl	_settings+76, %eax
	.loc 9 1022 44
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 9 1022 42
	fdivrp	%st, %st(1)
	.loc 9 1022 20
	fnstcw	-2(%ebp)
	movzwl	-2(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -4(%ebp)
	fldcw	-4(%ebp)
	fistpl	-8(%ebp)
	fldcw	-2(%ebp)
	movl	-8(%ebp), %eax
	movl	%eax, _settings+84
	.loc 9 1024 18
	movl	_settings+84, %eax
	.loc 9 1024 5
	testl	%eax, %eax
	jg	L4550
	.loc 9 1024 45 discriminator 1
	movl	$1, _settings+84
L4550:
	.loc 9 1025 37
	movl	16(%ebp), %eax
	.loc 9 1025 23
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 9 1025 63
	movl	_settings+84, %eax
	.loc 9 1025 46
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 9 1025 44
	fdivrp	%st, %st(1)
	.loc 9 1025 69
	fld1
	faddp	%st, %st(1)
	.loc 9 1025 21
	fldcw	-4(%ebp)
	fistpl	-8(%ebp)
	fldcw	-2(%ebp)
	movl	-8(%ebp), %eax
	movl	%eax, _settings+80
	.loc 9 1026 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2190:
	.globl	__Z30compute_dimensions_from_y_grid6bitmap
	.def	__Z30compute_dimensions_from_y_grid6bitmap;	.scl	2;	.type	32;	.endef
__Z30compute_dimensions_from_y_grid6bitmap:
LFB2191:
	.loc 9 1028 51
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$12, %esp
	.loc 9 1029 18
	movl	_settings+80, %eax
	.loc 9 1029 5
	testl	%eax, %eax
	jg	L4552
	.loc 9 1029 47 discriminator 1
	movl	$1, _settings+80
L4552:
	.loc 9 1030 36
	movl	12(%ebp), %eax
	.loc 9 1030 22
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 9 1030 61
	movl	_settings+80, %eax
	.loc 9 1030 44
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 9 1030 42
	fdivrp	%st, %st(1)
	.loc 9 1030 20
	fnstcw	-2(%ebp)
	movzwl	-2(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -4(%ebp)
	fldcw	-4(%ebp)
	fistpl	-8(%ebp)
	fldcw	-2(%ebp)
	movl	-8(%ebp), %eax
	movl	%eax, _settings+84
	.loc 9 1032 18
	movl	_settings+84, %eax
	.loc 9 1032 5
	testl	%eax, %eax
	jg	L4553
	.loc 9 1032 45 discriminator 1
	movl	$1, _settings+84
L4553:
	.loc 9 1033 37
	movl	16(%ebp), %eax
	.loc 9 1033 23
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 9 1033 63
	movl	_settings+84, %eax
	.loc 9 1033 46
	movl	%eax, -12(%ebp)
	fildl	-12(%ebp)
	.loc 9 1033 44
	fdivrp	%st, %st(1)
	.loc 9 1033 69
	fld1
	faddp	%st, %st(1)
	.loc 9 1033 21
	fldcw	-4(%ebp)
	fistpl	-8(%ebp)
	fldcw	-2(%ebp)
	movl	-8(%ebp), %eax
	movl	%eax, _settings+76
	.loc 9 1034 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2191:
	.section .rdata,"dr"
LC244:
	.ascii "false\0"
	.text
	.globl	__Z10adjust_bppP6bitmapi
	.def	__Z10adjust_bppP6bitmapi;	.scl	2;	.type	32;	.endef
__Z10adjust_bppP6bitmapi:
LFB2192:
	.loc 9 1036 41
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 9 1037 5
	cmpl	$4, 12(%ebp)
	je	L4563
LBB856:
	.loc 9 1039 5
	cmpl	$3, 12(%ebp)
	jne	L4557
LBB857:
	.loc 9 1040 55
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1040 70
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1040 61
	imull	%edx, %eax
	.loc 9 1040 77
	sall	$2, %eax
	.loc 9 1040 47
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -20(%ebp)
	.loc 9 1041 17
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
LBB858:
	.loc 9 1042 18
	movl	$0, -12(%ebp)
L4559:
	.loc 9 1042 36 discriminator 3
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1042 51 discriminator 3
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1042 42 discriminator 3
	imull	%edx, %eax
	.loc 9 1042 27 discriminator 3
	cmpl	%eax, -12(%ebp)
	jge	L4558
	.loc 9 1043 51 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	movl	%eax, %edx
	.loc 9 1043 53 discriminator 2
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 9 1043 55 discriminator 2
	sall	$16, %eax
	.loc 9 1043 41 discriminator 2
	orl	$-16777216, %eax
	movl	%eax, %ecx
	.loc 9 1043 72 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	.loc 9 1043 78 discriminator 2
	leal	1(%eax), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 9 1043 80 discriminator 2
	sall	$8, %eax
	.loc 9 1043 62 discriminator 2
	orl	%eax, %ecx
	.loc 9 1043 96 discriminator 2
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	.loc 9 1043 102 discriminator 2
	leal	2(%eax), %edx
	movl	-24(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 9 1043 86 discriminator 2
	orl	%eax, %ecx
	movl	%ecx, %edx
	.loc 9 1043 25 discriminator 2
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %ecx
	movl	-20(%ebp), %eax
	addl	%ecx, %eax
	.loc 9 1043 27 discriminator 2
	movl	%edx, (%eax)
	.loc 9 1042 9 discriminator 2
	addl	$1, -12(%ebp)
	jmp	L4559
L4558:
LBE858:
	.loc 9 1045 21
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 1045 13
	movl	%eax, (%esp)
	call	_free
	.loc 9 1046 23
	movl	8(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%edx, (%eax)
	.loc 9 1047 9
	jmp	L4554
L4557:
LBE857:
LBE856:
LBB859:
	.loc 9 1049 5
	cmpl	$1, 12(%ebp)
	jne	L4560
LBB860:
	.loc 9 1050 55
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1050 70
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1050 61
	imull	%edx, %eax
	.loc 9 1050 77
	sall	$2, %eax
	.loc 9 1050 47
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -28(%ebp)
	.loc 9 1051 17
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
LBB861:
	.loc 9 1052 18
	movl	$0, -16(%ebp)
L4562:
	.loc 9 1052 36 discriminator 3
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1052 51 discriminator 3
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1052 42 discriminator 3
	imull	%edx, %eax
	.loc 9 1052 27 discriminator 3
	cmpl	%eax, -16(%ebp)
	jge	L4561
	.loc 9 1053 52 discriminator 2
	movl	-16(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 9 1053 54 discriminator 2
	sall	$16, %eax
	.loc 9 1053 41 discriminator 2
	orl	$-16777216, %eax
	movl	%eax, %ecx
	.loc 9 1053 72 discriminator 2
	movl	-16(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 9 1053 74 discriminator 2
	sall	$8, %eax
	.loc 9 1053 61 discriminator 2
	orl	%eax, %ecx
	.loc 9 1053 91 discriminator 2
	movl	-16(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	.loc 9 1053 80 discriminator 2
	orl	%eax, %ecx
	movl	%ecx, %edx
	.loc 9 1053 25 discriminator 2
	movl	-16(%ebp), %eax
	leal	0(,%eax,4), %ecx
	movl	-28(%ebp), %eax
	addl	%ecx, %eax
	.loc 9 1053 27 discriminator 2
	movl	%edx, (%eax)
	.loc 9 1052 9 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L4562
L4561:
LBE861:
	.loc 9 1055 21
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 1055 13
	movl	%eax, (%esp)
	call	_free
	.loc 9 1056 23
	movl	8(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	%edx, (%eax)
	.loc 9 1057 9
	jmp	L4554
L4560:
LBE860:
LBE859:
	.loc 9 1059 5
	movl	$1059, 8(%esp)
	movl	$LC238, 4(%esp)
	movl	$LC244, (%esp)
	call	__assert
	jmp	L4554
L4563:
	.loc 9 1037 19
	nop
L4554:
	.loc 9 1060 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2192:
	.globl	__Z26swap_red_and_blue_channelsP6bitmap
	.def	__Z26swap_red_and_blue_channelsP6bitmap;	.scl	2;	.type	32;	.endef
__Z26swap_red_and_blue_channelsP6bitmap:
LFB2193:
	.loc 9 1062 48
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$32, %esp
	.loc 9 1063 13
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
LBB862:
	.loc 9 1064 14
	movl	$0, -4(%ebp)
L4566:
	.loc 9 1064 32 discriminator 3
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1064 47 discriminator 3
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1064 38 discriminator 3
	imull	%edx, %eax
	.loc 9 1064 23 discriminator 3
	cmpl	%eax, -4(%ebp)
	jge	L4565
LBB863:
	.loc 9 1065 28 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1065 30 discriminator 2
	shrl	$24, %eax
	.loc 9 1065 15 discriminator 2
	movb	%al, -13(%ebp)
	.loc 9 1066 28 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1066 30 discriminator 2
	shrl	$16, %eax
	.loc 9 1066 15 discriminator 2
	movb	%al, -14(%ebp)
	.loc 9 1067 28 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1067 30 discriminator 2
	shrl	$8, %eax
	.loc 9 1067 15 discriminator 2
	movb	%al, -15(%ebp)
	.loc 9 1068 28 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1068 15 discriminator 2
	movb	%al, -16(%ebp)
	.loc 9 1070 24 discriminator 2
	movzbl	-13(%ebp), %eax
	sall	$24, %eax
	movl	%eax, %edx
	.loc 9 1070 36 discriminator 2
	movzbl	-16(%ebp), %eax
	sall	$16, %eax
	.loc 9 1070 31 discriminator 2
	orl	%eax, %edx
	.loc 9 1070 48 discriminator 2
	movzbl	-15(%ebp), %eax
	sall	$8, %eax
	.loc 9 1070 43 discriminator 2
	orl	%eax, %edx
	.loc 9 1070 54 discriminator 2
	movzbl	-14(%ebp), %eax
	orl	%eax, %edx
	.loc 9 1070 17 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %ecx
	movl	-12(%ebp), %eax
	addl	%ecx, %eax
	.loc 9 1070 19 discriminator 2
	movl	%edx, (%eax)
LBE863:
	.loc 9 1064 5 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L4566
L4565:
LBE862:
LBB864:
	.loc 9 1073 16
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	.loc 9 1073 5
	testl	%eax, %eax
	je	L4570
LBB865:
	.loc 9 1074 17
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -20(%ebp)
LBB866:
	.loc 9 1075 18
	movl	$0, -8(%ebp)
L4569:
	.loc 9 1075 36 discriminator 3
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1075 51 discriminator 3
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1075 42 discriminator 3
	imull	%edx, %eax
	.loc 9 1075 27 discriminator 3
	cmpl	%eax, -8(%ebp)
	jge	L4570
LBB867:
	.loc 9 1076 32 discriminator 2
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1076 34 discriminator 2
	shrl	$24, %eax
	.loc 9 1076 19 discriminator 2
	movb	%al, -21(%ebp)
	.loc 9 1077 32 discriminator 2
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1077 34 discriminator 2
	shrl	$16, %eax
	.loc 9 1077 19 discriminator 2
	movb	%al, -22(%ebp)
	.loc 9 1078 32 discriminator 2
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1078 34 discriminator 2
	shrl	$8, %eax
	.loc 9 1078 19 discriminator 2
	movb	%al, -23(%ebp)
	.loc 9 1079 32 discriminator 2
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1079 19 discriminator 2
	movb	%al, -24(%ebp)
	.loc 9 1081 28 discriminator 2
	movzbl	-21(%ebp), %eax
	sall	$24, %eax
	movl	%eax, %edx
	.loc 9 1081 40 discriminator 2
	movzbl	-24(%ebp), %eax
	sall	$16, %eax
	.loc 9 1081 35 discriminator 2
	orl	%eax, %edx
	.loc 9 1081 52 discriminator 2
	movzbl	-23(%ebp), %eax
	sall	$8, %eax
	.loc 9 1081 47 discriminator 2
	orl	%eax, %edx
	.loc 9 1081 58 discriminator 2
	movzbl	-22(%ebp), %eax
	orl	%eax, %edx
	.loc 9 1081 21 discriminator 2
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %ecx
	movl	-20(%ebp), %eax
	addl	%ecx, %eax
	.loc 9 1081 23 discriminator 2
	movl	%edx, (%eax)
LBE867:
	.loc 9 1075 9 discriminator 2
	addl	$1, -8(%ebp)
	jmp	L4569
L4570:
LBE866:
LBE865:
LBE864:
	.loc 9 1084 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2193:
	.globl	__Z17premultiply_alphaP6bitmap
	.def	__Z17premultiply_alphaP6bitmap;	.scl	2;	.type	32;	.endef
__Z17premultiply_alphaP6bitmap:
LFB2194:
	.loc 9 1086 39
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 9 1087 13
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
LBB868:
	.loc 9 1088 14
	movl	$0, -4(%ebp)
L4573:
	.loc 9 1088 32 discriminator 3
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1088 47 discriminator 3
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1088 38 discriminator 3
	imull	%edx, %eax
	.loc 9 1088 23 discriminator 3
	cmpl	%eax, -4(%ebp)
	jge	L4574
LBB869:
	.loc 9 1089 29 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1089 31 discriminator 2
	shrl	$24, %eax
	.loc 9 1089 15 discriminator 2
	movb	%al, -9(%ebp)
	.loc 9 1090 26 discriminator 2
	movzbl	-9(%ebp), %eax
	movw	%ax, -56(%ebp)
	filds	-56(%ebp)
	.loc 9 1090 15 discriminator 2
	flds	LC41
	fdivrp	%st, %st(1)
	fstps	-16(%ebp)
	.loc 9 1091 29 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1091 31 discriminator 2
	shrl	$16, %eax
	.loc 9 1091 38 discriminator 2
	movzbl	%al, %eax
	.loc 9 1091 46 discriminator 2
	movl	%eax, -56(%ebp)
	movl	$0, -52(%ebp)
	fildq	-56(%ebp)
	fstps	-36(%ebp)
	flds	-36(%ebp)
	fmuls	-16(%ebp)
	.loc 9 1091 15 discriminator 2
	fnstcw	-38(%ebp)
	movzwl	-38(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -40(%ebp)
	fldcw	-40(%ebp)
	fistps	-42(%ebp)
	fldcw	-38(%ebp)
	movzwl	-42(%ebp), %eax
	movb	%al, -17(%ebp)
	.loc 9 1092 29 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1092 31 discriminator 2
	shrl	$8, %eax
	.loc 9 1092 38 discriminator 2
	movzbl	%al, %eax
	.loc 9 1092 46 discriminator 2
	movl	%eax, -56(%ebp)
	movl	$0, -52(%ebp)
	fildq	-56(%ebp)
	fstps	-36(%ebp)
	flds	-36(%ebp)
	fmuls	-16(%ebp)
	.loc 9 1092 15 discriminator 2
	fldcw	-40(%ebp)
	fistps	-42(%ebp)
	fldcw	-38(%ebp)
	movzwl	-42(%ebp), %eax
	movb	%al, -18(%ebp)
	.loc 9 1093 29 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	.loc 9 1093 31 discriminator 2
	movl	(%eax), %eax
	.loc 9 1093 38 discriminator 2
	movzbl	%al, %eax
	.loc 9 1093 46 discriminator 2
	movl	%eax, -56(%ebp)
	movl	$0, -52(%ebp)
	fildq	-56(%ebp)
	fstps	-36(%ebp)
	flds	-36(%ebp)
	fmuls	-16(%ebp)
	.loc 9 1093 15 discriminator 2
	fldcw	-40(%ebp)
	fistps	-42(%ebp)
	fldcw	-38(%ebp)
	movzwl	-42(%ebp), %eax
	movb	%al, -19(%ebp)
	.loc 9 1095 24 discriminator 2
	movzbl	-9(%ebp), %eax
	sall	$24, %eax
	movl	%eax, %edx
	.loc 9 1095 36 discriminator 2
	movzbl	-17(%ebp), %eax
	sall	$16, %eax
	.loc 9 1095 31 discriminator 2
	orl	%eax, %edx
	.loc 9 1095 48 discriminator 2
	movzbl	-18(%ebp), %eax
	sall	$8, %eax
	.loc 9 1095 43 discriminator 2
	orl	%eax, %edx
	.loc 9 1095 54 discriminator 2
	movzbl	-19(%ebp), %eax
	orl	%eax, %edx
	.loc 9 1095 17 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %ecx
	movl	-8(%ebp), %eax
	addl	%ecx, %eax
	.loc 9 1095 19 discriminator 2
	movl	%edx, (%eax)
LBE869:
	.loc 9 1088 5 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L4573
L4574:
LBE868:
	.loc 9 1097 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2194:
	.globl	__Z12invert_alphaP6bitmap
	.def	__Z12invert_alphaP6bitmap;	.scl	2;	.type	32;	.endef
__Z12invert_alphaP6bitmap:
LFB2195:
	.loc 9 1099 34
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	.loc 9 1100 13
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
LBB870:
	.loc 9 1101 14
	movl	$0, -4(%ebp)
L4577:
	.loc 9 1101 32 discriminator 3
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1101 47 discriminator 3
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1101 38 discriminator 3
	imull	%edx, %eax
	.loc 9 1101 23 discriminator 3
	cmpl	%eax, -4(%ebp)
	jge	L4578
LBB871:
	.loc 9 1102 35 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1102 37 discriminator 2
	shrl	$24, %eax
	.loc 9 1102 15 discriminator 2
	notl	%eax
	movb	%al, -9(%ebp)
	.loc 9 1103 29 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1103 31 discriminator 2
	shrl	$16, %eax
	.loc 9 1103 15 discriminator 2
	movb	%al, -10(%ebp)
	.loc 9 1104 29 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1104 31 discriminator 2
	shrl	$8, %eax
	.loc 9 1104 15 discriminator 2
	movb	%al, -11(%ebp)
	.loc 9 1105 29 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1105 15 discriminator 2
	movb	%al, -12(%ebp)
	.loc 9 1107 24 discriminator 2
	movzbl	-9(%ebp), %eax
	sall	$24, %eax
	movl	%eax, %edx
	.loc 9 1107 36 discriminator 2
	movzbl	-10(%ebp), %eax
	sall	$16, %eax
	.loc 9 1107 31 discriminator 2
	orl	%eax, %edx
	.loc 9 1107 48 discriminator 2
	movzbl	-11(%ebp), %eax
	sall	$8, %eax
	.loc 9 1107 43 discriminator 2
	orl	%eax, %edx
	.loc 9 1107 54 discriminator 2
	movzbl	-12(%ebp), %eax
	orl	%eax, %edx
	.loc 9 1107 17 discriminator 2
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %ecx
	movl	-8(%ebp), %eax
	addl	%ecx, %eax
	.loc 9 1107 19 discriminator 2
	movl	%edx, (%eax)
LBE871:
	.loc 9 1101 5 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L4577
L4578:
LBE870:
	.loc 9 1109 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2195:
	.globl	__Z16apply_brightness6bitmapib
	.def	__Z16apply_brightness6bitmapib;	.scl	2;	.type	32;	.endef
__Z16apply_brightness6bitmapib:
LFB2196:
	.loc 9 1111 90
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$44, %esp
	movl	32(%ebp), %eax
	movb	%al, -36(%ebp)
	.loc 9 1112 5
	cmpl	$50, 28(%ebp)
	jne	L4580
	.loc 9 1112 29 discriminator 1
	movzbl	-36(%ebp), %eax
	xorl	$1, %eax
	.loc 9 1112 26 discriminator 1
	testb	%al, %al
	jne	L4593
L4580:
	.loc 9 1114 11
	flds	LC245
	fstps	-16(%ebp)
	.loc 9 1115 25
	movl	28(%ebp), %eax
	subl	$50, %eax
	.loc 9 1115 31
	movl	%eax, -44(%ebp)
	fildl	-44(%ebp)
	fmuls	-16(%ebp)
	.loc 9 1115 9
	fnstcw	-34(%ebp)
	movzwl	-34(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -38(%ebp)
	fldcw	-38(%ebp)
	fistpl	-20(%ebp)
	fldcw	-34(%ebp)
	.loc 9 1117 13
	movl	8(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 9 1118 13
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	.loc 9 1119 5
	cmpb	$0, -36(%ebp)
	je	L4582
	.loc 9 1119 40 discriminator 1
	movl	20(%ebp), %eax
	movl	%eax, -4(%ebp)
L4582:
LBB872:
	.loc 9 1121 14
	movl	$0, -8(%ebp)
L4592:
	.loc 9 1121 31 discriminator 1
	movl	12(%ebp), %edx
	.loc 9 1121 45 discriminator 1
	movl	16(%ebp), %eax
	.loc 9 1121 37 discriminator 1
	imull	%edx, %eax
	.loc 9 1121 23 discriminator 1
	cmpl	%eax, -8(%ebp)
	jge	L4594
LBB873:
	.loc 9 1122 28
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1122 30
	shrl	$24, %eax
	.loc 9 1122 15
	movb	%al, -25(%ebp)
	.loc 9 1123 28
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1123 30
	shrl	$16, %eax
	.loc 9 1123 15
	movb	%al, -9(%ebp)
	.loc 9 1124 28
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1124 30
	shrl	$8, %eax
	.loc 9 1124 15
	movb	%al, -10(%ebp)
	.loc 9 1125 28
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1125 15
	movb	%al, -11(%ebp)
	.loc 9 1127 9
	cmpb	$0, -9(%ebp)
	je	L4583
	.loc 9 1127 24 discriminator 1
	movzbl	-9(%ebp), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 9 1127 22 discriminator 1
	cmpl	$255, %eax
	jg	L4584
	.loc 9 1127 24 discriminator 2
	movzbl	-9(%ebp), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	jmp	L4585
L4584:
	.loc 9 1127 22 discriminator 3
	movl	$-1, %eax
L4585:
	.loc 9 1127 22 is_stmt 0 discriminator 5
	movb	%al, -9(%ebp)
L4583:
	.loc 9 1128 9 is_stmt 1
	cmpb	$0, -10(%ebp)
	je	L4586
	.loc 9 1128 24 discriminator 1
	movzbl	-10(%ebp), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 9 1128 22 discriminator 1
	cmpl	$255, %eax
	jg	L4587
	.loc 9 1128 24 discriminator 2
	movzbl	-10(%ebp), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	jmp	L4588
L4587:
	.loc 9 1128 22 discriminator 3
	movl	$-1, %eax
L4588:
	.loc 9 1128 22 is_stmt 0 discriminator 5
	movb	%al, -10(%ebp)
L4586:
	.loc 9 1129 9 is_stmt 1
	cmpb	$0, -11(%ebp)
	je	L4589
	.loc 9 1129 24 discriminator 1
	movzbl	-11(%ebp), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	.loc 9 1129 22 discriminator 1
	cmpl	$255, %eax
	jg	L4590
	.loc 9 1129 24 discriminator 2
	movzbl	-11(%ebp), %edx
	movl	-20(%ebp), %eax
	addl	%edx, %eax
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	jmp	L4591
L4590:
	.loc 9 1129 22 discriminator 3
	movl	$-1, %eax
L4591:
	.loc 9 1129 22 is_stmt 0 discriminator 5
	movb	%al, -11(%ebp)
L4589:
	.loc 9 1131 22 is_stmt 1 discriminator 2
	movzbl	-25(%ebp), %eax
	sall	$24, %eax
	movl	%eax, %edx
	.loc 9 1131 34 discriminator 2
	movzbl	-9(%ebp), %eax
	sall	$16, %eax
	.loc 9 1131 29 discriminator 2
	orl	%eax, %edx
	.loc 9 1131 46 discriminator 2
	movzbl	-10(%ebp), %eax
	sall	$8, %eax
	.loc 9 1131 41 discriminator 2
	orl	%eax, %edx
	.loc 9 1131 52 discriminator 2
	movzbl	-11(%ebp), %eax
	orl	%eax, %edx
	.loc 9 1131 15 discriminator 2
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %ecx
	movl	-24(%ebp), %eax
	addl	%ecx, %eax
	.loc 9 1131 17 discriminator 2
	movl	%edx, (%eax)
LBE873:
	.loc 9 1121 5 discriminator 2
	addl	$1, -8(%ebp)
	jmp	L4592
L4593:
LBE872:
	.loc 9 1112 54
	nop
L4594:
	.loc 9 1133 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2196:
	.globl	__Z14apply_contrast6bitmapib
	.def	__Z14apply_contrast6bitmapib;	.scl	2;	.type	32;	.endef
__Z14apply_contrast6bitmapib:
LFB2197:
	.loc 9 1135 86
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$64, %esp
	movl	32(%ebp), %eax
	movb	%al, -52(%ebp)
	.loc 9 1136 5
	cmpl	$50, 28(%ebp)
	jne	L4596
	.loc 9 1136 27 discriminator 1
	movzbl	-52(%ebp), %eax
	xorl	$1, %eax
	.loc 9 1136 24 discriminator 1
	testb	%al, %al
	jne	L4630
L4596:
	.loc 9 1138 11
	flds	LC245
	fstps	-12(%ebp)
	.loc 9 1139 25
	movl	28(%ebp), %eax
	subl	$50, %eax
	.loc 9 1139 31
	movl	%eax, -64(%ebp)
	fildl	-64(%ebp)
	fmuls	-12(%ebp)
	.loc 9 1139 11
	fnstcw	-50(%ebp)
	movzwl	-50(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -58(%ebp)
	fldcw	-58(%ebp)
	fistpl	-16(%ebp)
	fldcw	-50(%ebp)
	.loc 9 1140 38
	fildl	-16(%ebp)
	fldl	LC228
	faddp	%st, %st(1)
	.loc 9 1140 29
	fldl	LC246
	fmulp	%st, %st(1)
	.loc 9 1140 52
	fildl	-16(%ebp)
	fldl	LC247
	fsubp	%st, %st(1)
	.loc 9 1140 43
	fdivrp	%st, %st(1)
	.loc 9 1140 11
	fstps	-20(%ebp)
	.loc 9 1142 13
	movl	8(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 9 1143 13
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	.loc 9 1144 5
	cmpb	$0, -52(%ebp)
	je	L4598
	.loc 9 1144 40 discriminator 1
	movl	20(%ebp), %eax
	movl	%eax, -4(%ebp)
L4598:
LBB874:
	.loc 9 1146 14
	movl	$0, -8(%ebp)
L4617:
	.loc 9 1146 31 discriminator 2
	movl	12(%ebp), %edx
	.loc 9 1146 45 discriminator 2
	movl	16(%ebp), %eax
	.loc 9 1146 37 discriminator 2
	imull	%edx, %eax
	.loc 9 1146 23 discriminator 2
	cmpl	%eax, -8(%ebp)
	jge	L4631
LBB875:
	.loc 9 1147 30
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1147 32
	shrl	$16, %eax
	.loc 9 1147 13
	andl	$255, %eax
	movl	%eax, -28(%ebp)
	.loc 9 1148 30
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1148 32
	shrl	$8, %eax
	.loc 9 1148 13
	andl	$255, %eax
	movl	%eax, -32(%ebp)
	.loc 9 1149 30
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1149 13
	andl	$255, %eax
	movl	%eax, -36(%ebp)
	.loc 9 1151 29
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	.loc 9 1151 31
	shrl	$24, %eax
	.loc 9 1151 15
	movb	%al, -37(%ebp)
	.loc 9 1152 19
	movl	-28(%ebp), %eax
	addl	$-128, %eax
	movl	%eax, -64(%ebp)
	fildl	-64(%ebp)
	fmuls	-20(%ebp)
	flds	LC27
	faddp	%st, %st(1)
	.loc 9 1152 15
	flds	LC41
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4624
	.loc 9 1152 15 is_stmt 0 discriminator 1
	movl	$-1, %eax
	jmp	L4601
L4624:
	.loc 9 1152 19 is_stmt 1 discriminator 2
	movl	-28(%ebp), %eax
	addl	$-128, %eax
	movl	%eax, -64(%ebp)
	fildl	-64(%ebp)
	fmuls	-20(%ebp)
	flds	LC27
	faddp	%st, %st(1)
	.loc 9 1152 15 discriminator 2
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4625
	.loc 9 1152 15 is_stmt 0 discriminator 4
	movl	$0, %eax
	jmp	L4601
L4625:
	.loc 9 1152 19 is_stmt 1 discriminator 5
	movl	-28(%ebp), %eax
	addl	$-128, %eax
	movl	%eax, -64(%ebp)
	fildl	-64(%ebp)
	fmuls	-20(%ebp)
	flds	LC27
	faddp	%st, %st(1)
	.loc 9 1152 15 discriminator 5
	fldcw	-58(%ebp)
	fistps	-60(%ebp)
	fldcw	-50(%ebp)
	movzwl	-60(%ebp), %eax
L4601:
	.loc 9 1152 15 is_stmt 0 discriminator 8
	movb	%al, -38(%ebp)
	.loc 9 1153 19 is_stmt 1 discriminator 8
	movl	-32(%ebp), %eax
	addl	$-128, %eax
	movl	%eax, -64(%ebp)
	fildl	-64(%ebp)
	fmuls	-20(%ebp)
	flds	LC27
	faddp	%st, %st(1)
	.loc 9 1153 15 discriminator 8
	flds	LC41
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4626
	.loc 9 1153 15 is_stmt 0 discriminator 1
	movl	$-1, %eax
	jmp	L4607
L4626:
	.loc 9 1153 19 is_stmt 1 discriminator 2
	movl	-32(%ebp), %eax
	addl	$-128, %eax
	movl	%eax, -64(%ebp)
	fildl	-64(%ebp)
	fmuls	-20(%ebp)
	flds	LC27
	faddp	%st, %st(1)
	.loc 9 1153 15 discriminator 2
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4627
	.loc 9 1153 15 is_stmt 0 discriminator 4
	movl	$0, %eax
	jmp	L4607
L4627:
	.loc 9 1153 19 is_stmt 1 discriminator 5
	movl	-32(%ebp), %eax
	addl	$-128, %eax
	movl	%eax, -64(%ebp)
	fildl	-64(%ebp)
	fmuls	-20(%ebp)
	flds	LC27
	faddp	%st, %st(1)
	.loc 9 1153 15 discriminator 5
	fldcw	-58(%ebp)
	fistps	-60(%ebp)
	fldcw	-50(%ebp)
	movzwl	-60(%ebp), %eax
L4607:
	.loc 9 1153 15 is_stmt 0 discriminator 8
	movb	%al, -39(%ebp)
	.loc 9 1154 19 is_stmt 1 discriminator 8
	movl	-36(%ebp), %eax
	addl	$-128, %eax
	movl	%eax, -64(%ebp)
	fildl	-64(%ebp)
	fmuls	-20(%ebp)
	flds	LC27
	faddp	%st, %st(1)
	.loc 9 1154 15 discriminator 8
	flds	LC41
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4628
	.loc 9 1154 15 is_stmt 0 discriminator 1
	movl	$-1, %eax
	jmp	L4613
L4628:
	.loc 9 1154 19 is_stmt 1 discriminator 2
	movl	-36(%ebp), %eax
	addl	$-128, %eax
	movl	%eax, -64(%ebp)
	fildl	-64(%ebp)
	fmuls	-20(%ebp)
	flds	LC27
	faddp	%st, %st(1)
	.loc 9 1154 15 discriminator 2
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4629
	.loc 9 1154 15 is_stmt 0 discriminator 4
	movl	$0, %eax
	jmp	L4613
L4629:
	.loc 9 1154 19 is_stmt 1 discriminator 5
	movl	-36(%ebp), %eax
	addl	$-128, %eax
	movl	%eax, -64(%ebp)
	fildl	-64(%ebp)
	fmuls	-20(%ebp)
	flds	LC27
	faddp	%st, %st(1)
	.loc 9 1154 15 discriminator 5
	fldcw	-58(%ebp)
	fistps	-60(%ebp)
	fldcw	-50(%ebp)
	movzwl	-60(%ebp), %eax
L4613:
	.loc 9 1154 15 is_stmt 0 discriminator 8
	movb	%al, -40(%ebp)
	.loc 9 1156 22 is_stmt 1 discriminator 8
	movzbl	-37(%ebp), %eax
	sall	$24, %eax
	movl	%eax, %edx
	.loc 9 1156 34 discriminator 8
	movzbl	-38(%ebp), %eax
	sall	$16, %eax
	.loc 9 1156 29 discriminator 8
	orl	%eax, %edx
	.loc 9 1156 46 discriminator 8
	movzbl	-39(%ebp), %eax
	sall	$8, %eax
	.loc 9 1156 41 discriminator 8
	orl	%eax, %edx
	.loc 9 1156 52 discriminator 8
	movzbl	-40(%ebp), %eax
	orl	%eax, %edx
	.loc 9 1156 15 discriminator 8
	movl	-8(%ebp), %eax
	leal	0(,%eax,4), %ecx
	movl	-24(%ebp), %eax
	addl	%ecx, %eax
	.loc 9 1156 17 discriminator 8
	movl	%edx, (%eax)
LBE875:
	.loc 9 1146 5 discriminator 8
	addl	$1, -8(%ebp)
	jmp	L4617
L4630:
LBE874:
	.loc 9 1136 52
	nop
L4631:
	.loc 9 1159 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2197:
	.section .rdata,"dr"
	.align 4
LC249:
	.ascii "settings.centers_style == Hexagonal\0"
	.text
	.globl	__Z11get_centers6bitmapPiS0_
	.def	__Z11get_centers6bitmapPiS0_;	.scl	2;	.type	32;	.endef
__Z11get_centers6bitmapPiS0_:
LFB2198:
	.loc 9 1161 68
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.loc 9 1163 18
	movl	_settings+100, %eax
	.loc 9 1163 5
	cmpl	$2, %eax
	jne	L4633
	.loc 9 1164 41
	movl	_settings+88, %edx
	.loc 9 1164 30
	movl	28(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 1165 41
	movl	_settings+92, %edx
	.loc 9 1165 30
	movl	32(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 1167 47
	movl	28(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 1167 32
	sall	$3, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -12(%ebp)
	.loc 9 1168 33
	movl	16(%ebp), %ecx
	movl	12(%ebp), %edx
	movl	28(%ebp), %eax
	movl	(%eax), %eax
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z24compute_centers_randomlyP2v2iii
	jmp	L4634
L4633:
	.loc 9 1169 25
	movl	_settings+100, %eax
	.loc 9 1169 12
	testl	%eax, %eax
	jne	L4635
	.loc 9 1170 41
	movl	_settings+76, %edx
	.loc 9 1170 59
	movl	_settings+80, %eax
	.loc 9 1170 48
	imull	%eax, %edx
	.loc 9 1170 30
	movl	28(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 1171 41
	movl	_settings+84, %eax
	.loc 9 1171 47
	movl	%eax, -36(%ebp)
	fildl	-36(%ebp)
	fldl	LC248
	fdivrp	%st, %st(1)
	.loc 9 1171 30
	fnstcw	-26(%ebp)
	movzwl	-26(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -28(%ebp)
	fldcw	-28(%ebp)
	fistpl	-32(%ebp)
	fldcw	-26(%ebp)
	movl	-32(%ebp), %edx
	movl	32(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 1173 47
	movl	28(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 1173 32
	sall	$3, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -12(%ebp)
	.loc 9 1174 29
	movl	_settings+84, %ecx
	movl	_settings+80, %edx
	movl	_settings+76, %eax
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z20compute_centers_gridP2v2iii
	jmp	L4634
L4635:
	.loc 9 1176 9
	movl	_settings+100, %eax
	cmpl	$1, %eax
	je	L4638
	.loc 9 1176 9 is_stmt 0 discriminator 2
	movl	$1176, 8(%esp)
	movl	$LC238, 4(%esp)
	movl	$LC249, (%esp)
	call	__assert
L4638:
	.loc 9 1177 41 is_stmt 1
	movl	_settings+60, %edx
	.loc 9 1177 58
	movl	_settings+64, %eax
	.loc 9 1177 47
	imull	%eax, %edx
	.loc 9 1177 30
	movl	28(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 1178 41
	movl	_settings+68, %edx
	.loc 9 1178 30
	movl	32(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 1180 47
	movl	28(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 1180 32
	sall	$3, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -12(%ebp)
	.loc 9 1181 28
	movl	_settings+68, %ecx
	movl	_settings+64, %edx
	movl	_settings+60, %eax
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z19compute_centers_hexP2v2iii
	.loc 9 1182 22
	movzbl	_settings+72, %eax
	.loc 9 1182 9
	testb	%al, %al
	je	L4634
	.loc 9 1182 46 discriminator 1
	movl	28(%ebp), %eax
	movl	(%eax), %eax
	movl	$100, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z7shuffleP2v2ii
L4634:
	.loc 9 1184 12
	movl	-12(%ebp), %eax
	.loc 9 1185 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2198:
	.globl	__Z17create_image_caps6bitmap
	.def	__Z17create_image_caps6bitmap;	.scl	2;	.type	32;	.endef
__Z17create_image_caps6bitmap:
LFB2199:
	.loc 9 1187 40
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$100, %esp
	.cfi_offset 3, -12
	.loc 9 1190 30
	leal	-44(%ebp), %eax
	movl	%eax, 24(%esp)
	leal	-40(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z11get_centers6bitmapPiS0_
	movl	%eax, -32(%ebp)
	.loc 9 1193 18
	movzbl	_settings+106, %eax
	.loc 9 1193 5
	testb	%al, %al
	je	L4641
	.loc 9 1193 62 discriminator 1
	movl	-44(%ebp), %edx
	movl	-40(%ebp), %eax
	movl	%edx, 28(%esp)
	movl	%eax, 24(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z24compute_indexes_by_color6bitmapP2v2ii
	movl	%eax, -12(%ebp)
	jmp	L4642
L4641:
	.loc 9 1194 53
	movl	-44(%ebp), %edx
	movl	-40(%ebp), %eax
	movl	%edx, 28(%esp)
	movl	%eax, 24(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z15compute_indexes6bitmapP2v2ii
	movl	%eax, -12(%ebp)
L4642:
LBB876:
	.loc 9 1196 18
	movzbl	_settings+105, %eax
	.loc 9 1196 5
	testb	%al, %al
	je	L4643
LBB877:
LBB878:
	.loc 9 1197 18
	movl	$0, -16(%ebp)
L4645:
	.loc 9 1197 27 discriminator 3
	movl	-40(%ebp), %eax
	cmpl	%eax, -16(%ebp)
	jge	L4643
	.loc 9 1197 88 discriminator 2
	movl	-16(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %edx
	.loc 9 1197 62 discriminator 2
	movl	-16(%ebp), %eax
	leal	0(,%eax,4), %ecx
	movl	-12(%ebp), %eax
	addl	%ecx, %eax
	.loc 9 1197 90 discriminator 2
	movl	$120, %ecx
	subl	%edx, %ecx
	movl	%ecx, %edx
	.loc 9 1197 64 discriminator 2
	movl	%edx, (%eax)
	.loc 9 1197 9 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L4645
L4643:
LBE878:
LBE877:
LBE876:
LBB879:
	.loc 9 1200 14
	movl	$0, -20(%ebp)
	fnstcw	-58(%ebp)
	movzwl	-58(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -60(%ebp)
L4647:
	.loc 9 1200 23 discriminator 3
	movl	-40(%ebp), %eax
	cmpl	%eax, -20(%ebp)
	jge	L4646
	.loc 9 1201 22 discriminator 2
	movl	-20(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	%eax, -68(%ebp)
	fildl	-68(%ebp)
	.loc 9 1201 34 discriminator 2
	flds	_settings+20
	.loc 9 1201 22 discriminator 2
	fmulp	%st, %st(1)
	movl	-20(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	fldcw	-60(%ebp)
	fistpl	-64(%ebp)
	fldcw	-58(%ebp)
	movl	-64(%ebp), %edx
	movl	%edx, (%eax)
	.loc 9 1202 22 discriminator 2
	movl	-20(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	4(%eax), %eax
	movl	%eax, -68(%ebp)
	fildl	-68(%ebp)
	.loc 9 1202 34 discriminator 2
	flds	_settings+20
	.loc 9 1202 22 discriminator 2
	fmulp	%st, %st(1)
	movl	-20(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	fldcw	-60(%ebp)
	fistpl	-64(%ebp)
	fldcw	-58(%ebp)
	movl	-64(%ebp), %edx
	movl	%edx, 4(%eax)
	.loc 9 1200 5 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L4647
L4646:
LBE879:
	.loc 9 1205 12
	movl	8(%ebp), %eax
	movl	$0, (%eax)
	movl	8(%ebp), %eax
	movl	$0, 4(%eax)
	movl	8(%ebp), %eax
	movl	$0, 8(%eax)
	movl	8(%ebp), %eax
	movl	$0, 12(%eax)
	movl	8(%ebp), %eax
	movl	$0, 16(%eax)
	.loc 9 1206 34
	movl	16(%ebp), %eax
	.loc 9 1206 41
	movl	%eax, -68(%ebp)
	fildl	-68(%ebp)
	.loc 9 1206 52
	flds	_settings+20
	.loc 9 1206 41
	fmulp	%st, %st(1)
	.loc 9 1206 26
	fldcw	-60(%ebp)
	fistpl	-64(%ebp)
	fldcw	-58(%ebp)
	movl	-64(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 9 1207 34
	movl	20(%ebp), %eax
	.loc 9 1207 41
	movl	%eax, -68(%ebp)
	fildl	-68(%ebp)
	.loc 9 1207 52
	flds	_settings+20
	.loc 9 1207 41
	fmulp	%st, %st(1)
	.loc 9 1207 26
	fldcw	-60(%ebp)
	fistpl	-64(%ebp)
	fldcw	-58(%ebp)
	movl	-64(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 9 1208 61
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1208 83
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1208 67
	imull	%edx, %eax
	.loc 9 1208 90
	sall	$2, %eax
	.loc 9 1208 46
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, %edx
	.loc 9 1208 28
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 1209 61
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1209 83
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1209 67
	imull	%edx, %eax
	.loc 9 1209 90
	sall	$2, %eax
	.loc 9 1209 46
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, %edx
	.loc 9 1209 28
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
LBB880:
	.loc 9 1211 14
	movl	$0, -24(%ebp)
L4649:
	.loc 9 1211 39 discriminator 3
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1211 61 discriminator 3
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1211 45 discriminator 3
	imull	%edx, %eax
	.loc 9 1211 23 discriminator 3
	cmpl	%eax, -24(%ebp)
	jge	L4648
	.loc 9 1212 59 discriminator 2
	movl	_settings+40, %ecx
	.loc 9 1212 23 discriminator 2
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 1212 31 discriminator 2
	movl	-24(%ebp), %edx
	sall	$2, %edx
	.loc 9 1212 37 discriminator 2
	addl	%edx, %eax
	.loc 9 1212 39 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 9 1213 59 discriminator 2
	movl	_settings+36, %ecx
	.loc 9 1213 23 discriminator 2
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 1213 31 discriminator 2
	movl	-24(%ebp), %edx
	sall	$2, %edx
	.loc 9 1213 37 discriminator 2
	addl	$1, %edx
	addl	%edx, %eax
	.loc 9 1213 39 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 9 1214 59 discriminator 2
	movl	_settings+32, %ecx
	.loc 9 1214 23 discriminator 2
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 1214 31 discriminator 2
	movl	-24(%ebp), %edx
	sall	$2, %edx
	.loc 9 1214 37 discriminator 2
	addl	$2, %edx
	addl	%edx, %eax
	.loc 9 1214 39 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 9 1215 59 discriminator 2
	movl	_settings+44, %ecx
	.loc 9 1215 23 discriminator 2
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 1215 31 discriminator 2
	movl	-24(%ebp), %edx
	sall	$2, %edx
	.loc 9 1215 37 discriminator 2
	addl	$3, %edx
	addl	%edx, %eax
	.loc 9 1215 39 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 9 1211 5 discriminator 2
	addl	$1, -24(%ebp)
	jmp	L4649
L4648:
LBE880:
	.loc 9 1219 17
	movl	-44(%ebp), %eax
	addl	%eax, %eax
	.loc 9 1219 26
	movl	%eax, -68(%ebp)
	fildl	-68(%ebp)
	.loc 9 1219 37
	flds	_settings+20
	.loc 9 1219 26
	fmulp	%st, %st(1)
	.loc 9 1219 9
	fnstcw	-58(%ebp)
	movzwl	-58(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -60(%ebp)
	fldcw	-60(%ebp)
	fistpl	-36(%ebp)
	fldcw	-58(%ebp)
LBB881:
	.loc 9 1220 14
	movl	$0, -28(%ebp)
L4651:
	.loc 9 1220 23 discriminator 3
	movl	-40(%ebp), %eax
	cmpl	%eax, -28(%ebp)
	jge	L4650
	.loc 9 1221 104 discriminator 2
	movl	-28(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 9 1221 106 discriminator 2
	movl	4(%eax), %edx
	.loc 9 1221 114 discriminator 2
	movl	-36(%ebp), %eax
	movl	%eax, %ecx
	shrl	$31, %ecx
	addl	%ecx, %eax
	sarl	%eax
	negl	%eax
	.loc 9 1221 30 discriminator 2
	leal	(%edx,%eax), %ebx
	.loc 9 1221 80 discriminator 2
	movl	-28(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 9 1221 82 discriminator 2
	movl	(%eax), %edx
	.loc 9 1221 90 discriminator 2
	movl	-36(%ebp), %eax
	movl	%eax, %ecx
	shrl	$31, %ecx
	addl	%ecx, %eax
	sarl	%eax
	negl	%eax
	.loc 9 1221 30 discriminator 2
	leal	(%edx,%eax), %ecx
	.loc 9 1221 67 discriminator 2
	movl	-28(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %edx
	.loc 9 1221 30 discriminator 2
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	leal	_caps_data(%eax), %edx
	movl	-36(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%ebx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z21blit_bitmap_to_bitmapP6bitmapS0_iiii
	.loc 9 1220 5 discriminator 2
	addl	$1, -28(%ebp)
	jmp	L4651
L4650:
LBE881:
	.loc 9 1224 72
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1224 94
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1224 78
	imull	%edx, %eax
	.loc 9 1224 101
	sall	$2, %eax
	.loc 9 1224 11
	movl	%eax, %ecx
	.loc 9 1224 50
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 9 1224 26
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	.loc 9 1224 11
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_memcpy
	.loc 9 1225 21
	movl	_settings, %eax
	movl	$0, 24(%esp)
	movl	%eax, 20(%esp)
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	%edx, (%esp)
	movl	4(%eax), %edx
	movl	%edx, 4(%esp)
	movl	8(%eax), %edx
	movl	%edx, 8(%esp)
	movl	12(%eax), %edx
	movl	%edx, 12(%esp)
	movl	16(%eax), %eax
	movl	%eax, 16(%esp)
	call	__Z16apply_brightness6bitmapib
	.loc 9 1226 19
	movl	_settings+4, %eax
	movl	$0, 24(%esp)
	movl	%eax, 20(%esp)
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	%edx, (%esp)
	movl	4(%eax), %edx
	movl	%edx, 4(%esp)
	movl	8(%eax), %edx
	movl	%edx, 8(%esp)
	movl	12(%eax), %edx
	movl	%edx, 12(%esp)
	movl	16(%eax), %eax
	movl	%eax, 16(%esp)
	call	__Z14apply_contrast6bitmapib
	.loc 9 1228 9
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 9 1229 9
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 9 1230 12
	nop
	.loc 9 1231 1
	movl	8(%ebp), %eax
	addl	$100, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2199:
	.section .rdata,"dr"
LC251:
	.ascii "settings.allow_oversizing\0"
	.text
	.globl	__Z20create_image_texture6bitmap
	.def	__Z20create_image_texture6bitmap;	.scl	2;	.type	32;	.endef
__Z20create_image_texture6bitmap:
LFB2200:
	.loc 9 1233 43
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%esi
	pushl	%ebx
	subl	$160, %esp
	.cfi_offset 6, -12
	.cfi_offset 3, -16
	.loc 9 1236 30
	leal	-56(%ebp), %eax
	movl	%eax, 24(%esp)
	leal	-52(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z11get_centers6bitmapPiS0_
	movl	%eax, -28(%ebp)
	.loc 9 1237 18
	movzbl	_settings+72, %eax
	.loc 9 1237 5
	testb	%al, %al
	je	L4654
	.loc 9 1237 42 discriminator 1
	movl	-52(%ebp), %eax
	movl	$100, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z7shuffleP2v2ii
L4654:
	.loc 9 1239 43
	movl	-56(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	%edx, 28(%esp)
	movl	%eax, 24(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z22compute_centers_colors6bitmapP2v2ii
	movl	%eax, -32(%ebp)
	.loc 9 1241 43
	movl	-52(%ebp), %eax
	sall	$2, %eax
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, -36(%ebp)
	.loc 9 1242 11
	flds	LC41
	fstps	-60(%ebp)
	.loc 9 1243 11
	fldz
	fstps	-64(%ebp)
LBB882:
	.loc 9 1244 14
	movl	$0, -12(%ebp)
L4669:
	.loc 9 1244 23 discriminator 2
	movl	-52(%ebp), %eax
	cmpl	%eax, -12(%ebp)
	jge	L4655
LBB883:
	.loc 9 1245 22
	movl	-12(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	%eax, -116(%ebp)
	fildl	-116(%ebp)
	.loc 9 1245 34
	flds	_settings+20
	.loc 9 1245 22
	fmulp	%st, %st(1)
	movl	-12(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-28(%ebp), %eax
	addl	%eax, %edx
	fnstcw	-106(%ebp)
	movzwl	-106(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -108(%ebp)
	fldcw	-108(%ebp)
	fistpl	-112(%ebp)
	fldcw	-106(%ebp)
	movl	-112(%ebp), %eax
	movl	%eax, (%edx)
	.loc 9 1246 22
	movl	-12(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	movl	4(%eax), %eax
	movl	%eax, -116(%ebp)
	fildl	-116(%ebp)
	.loc 9 1246 34
	flds	_settings+20
	.loc 9 1246 22
	fmulp	%st, %st(1)
	movl	-12(%ebp), %eax
	leal	0(,%eax,8), %edx
	movl	-28(%ebp), %eax
	addl	%edx, %eax
	fldcw	-108(%ebp)
	fistpl	-112(%ebp)
	fldcw	-106(%ebp)
	movl	-112(%ebp), %edx
	movl	%edx, 4(%eax)
	.loc 9 1248 36
	movl	-12(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 9 1248 38
	movl	(%eax), %edx
	.loc 9 1248 50
	movl	-12(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	.loc 9 1248 52
	movl	4(%eax), %eax
	.loc 9 1248 40
	addl	%eax, %edx
	.loc 9 1248 64
	movl	-12(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	.loc 9 1248 66
	movl	8(%eax), %eax
	.loc 9 1248 54
	addl	%edx, %eax
	.loc 9 1248 69
	movl	%eax, -116(%ebp)
	fildl	-116(%ebp)
	fldl	LC234
	fdivrp	%st, %st(1)
	.loc 9 1248 23
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	.loc 9 1248 69
	fstps	-76(%ebp)
	flds	-76(%ebp)
	.loc 9 1248 25
	fstps	(%eax)
	.loc 9 1250 27
	movl	_settings+108, %eax
	.loc 9 1250 47
	subl	$50, %eax
	.loc 9 1250 53
	movl	%eax, -116(%ebp)
	fildl	-116(%ebp)
	fldl	LC228
	fmulp	%st, %st(1)
	.loc 9 1250 61
	fldl	LC250
	fdivrp	%st, %st(1)
	.loc 9 1250 13
	fldcw	-108(%ebp)
	fistpl	-40(%ebp)
	fldcw	-106(%ebp)
	.loc 9 1251 23
	movl	-12(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	cmpl	$255, %eax
	jg	L4656
	.loc 9 1251 23 is_stmt 0 discriminator 1
	movl	-12(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	(%eax), %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	jmp	L4657
L4656:
	.loc 9 1251 23 discriminator 2
	movl	$255, %eax
L4657:
	.loc 9 1251 17 is_stmt 1 discriminator 4
	movl	-12(%ebp), %edx
	movl	%edx, %ecx
	sall	$4, %ecx
	movl	-32(%ebp), %edx
	addl	%ecx, %edx
	.loc 9 1251 21 discriminator 4
	movl	%eax, (%edx)
	.loc 9 1252 23 discriminator 4
	movl	-12(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	4(%eax), %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	cmpl	$255, %eax
	jg	L4658
	.loc 9 1252 23 is_stmt 0 discriminator 1
	movl	-12(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	4(%eax), %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	jmp	L4659
L4658:
	.loc 9 1252 23 discriminator 2
	movl	$255, %eax
L4659:
	.loc 9 1252 17 is_stmt 1 discriminator 4
	movl	-12(%ebp), %edx
	movl	%edx, %ecx
	sall	$4, %ecx
	movl	-32(%ebp), %edx
	addl	%ecx, %edx
	.loc 9 1252 21 discriminator 4
	movl	%eax, 4(%edx)
	.loc 9 1253 23 discriminator 4
	movl	-12(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	8(%eax), %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	cmpl	$255, %eax
	jg	L4660
	.loc 9 1253 23 is_stmt 0 discriminator 1
	movl	-12(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	movl	8(%eax), %edx
	movl	-40(%ebp), %eax
	addl	%edx, %eax
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	jmp	L4661
L4660:
	.loc 9 1253 23 discriminator 2
	movl	$255, %eax
L4661:
	.loc 9 1253 17 is_stmt 1 discriminator 4
	movl	-12(%ebp), %edx
	movl	%edx, %ecx
	sall	$4, %ecx
	movl	-32(%ebp), %edx
	addl	%ecx, %edx
	.loc 9 1253 21 discriminator 4
	movl	%eax, 8(%edx)
	.loc 9 1255 22 discriminator 4
	movl	_settings+112, %eax
	.loc 9 1255 9 discriminator 4
	testl	%eax, %eax
	je	L4662
	.loc 9 1255 90 discriminator 1
	movl	_settings+112, %ecx
	.loc 9 1255 66 discriminator 1
	movl	-12(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	addl	%edx, %eax
	.loc 9 1255 46 discriminator 1
	movl	-12(%ebp), %edx
	movl	%edx, %ebx
	sall	$4, %ebx
	movl	-32(%ebp), %edx
	addl	%edx, %ebx
	.loc 9 1255 90 discriminator 1
	leal	-104(%ebp), %edx
	movl	%ecx, 20(%esp)
	movl	(%eax), %ecx
	movl	%ecx, 4(%esp)
	movl	4(%eax), %ecx
	movl	%ecx, 8(%esp)
	movl	8(%eax), %ecx
	movl	%ecx, 12(%esp)
	movl	12(%eax), %eax
	movl	%eax, 16(%esp)
	movl	%edx, (%esp)
	call	__Z9shift_hue5Colori
	movl	-104(%ebp), %eax
	movl	%eax, (%ebx)
	movl	-100(%ebp), %eax
	movl	%eax, 4(%ebx)
	movl	-96(%ebp), %eax
	movl	%eax, 8(%ebx)
	movl	-92(%ebp), %eax
	movl	%eax, 12(%ebx)
L4662:
	.loc 9 1257 26
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	flds	-64(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4689
	.loc 9 1257 26 is_stmt 0 discriminator 1
	flds	-64(%ebp)
	jmp	L4665
L4689:
	.loc 9 1257 26 discriminator 2
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
L4665:
	.loc 9 1257 24 is_stmt 1 discriminator 4
	fstps	-64(%ebp)
	.loc 9 1258 26 discriminator 4
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	flds	-60(%ebp)
	flds	(%eax)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4690
	.loc 9 1258 26 is_stmt 0 discriminator 1
	flds	-60(%ebp)
	jmp	L4668
L4690:
	.loc 9 1258 26 discriminator 2
	movl	-12(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
L4668:
	.loc 9 1258 24 is_stmt 1 discriminator 4
	fstps	-60(%ebp)
LBE883:
	.loc 9 1244 5 discriminator 4
	addl	$1, -12(%ebp)
	jmp	L4669
L4655:
LBE882:
	.loc 9 1261 18
	movl	_settings+96, %eax
	.loc 9 1261 5
	testl	%eax, %eax
	je	L4670
	.loc 9 1262 87
	movl	_settings+96, %eax
	.loc 9 1262 27
	cmpl	$1, %eax
	setne	%al
	movzbl	%al, %edx
	movl	-52(%ebp), %eax
	movl	%edx, 16(%esp)
	movl	%eax, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z18sort_by_birghtnessP2v2P5ColorPfib
L4670:
	.loc 9 1265 12
	movl	8(%ebp), %eax
	movl	$0, (%eax)
	movl	8(%ebp), %eax
	movl	$0, 4(%eax)
	movl	8(%ebp), %eax
	movl	$0, 8(%eax)
	movl	8(%ebp), %eax
	movl	$0, 12(%eax)
	movl	8(%ebp), %eax
	movl	$0, 16(%eax)
	.loc 9 1266 34
	movl	16(%ebp), %eax
	.loc 9 1266 41
	movl	%eax, -116(%ebp)
	fildl	-116(%ebp)
	.loc 9 1266 52
	flds	_settings+20
	.loc 9 1266 41
	fmulp	%st, %st(1)
	.loc 9 1266 26
	fnstcw	-106(%ebp)
	movzwl	-106(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -108(%ebp)
	fldcw	-108(%ebp)
	fistpl	-112(%ebp)
	fldcw	-106(%ebp)
	movl	-112(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 9 1267 34
	movl	20(%ebp), %eax
	.loc 9 1267 41
	movl	%eax, -116(%ebp)
	fildl	-116(%ebp)
	.loc 9 1267 52
	flds	_settings+20
	.loc 9 1267 41
	fmulp	%st, %st(1)
	.loc 9 1267 26
	fldcw	-108(%ebp)
	fistpl	-112(%ebp)
	fldcw	-106(%ebp)
	movl	-112(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 9 1268 61
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1268 83
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1268 67
	imull	%edx, %eax
	.loc 9 1268 90
	sall	$2, %eax
	.loc 9 1268 46
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, %edx
	.loc 9 1268 28
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 1269 61
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1269 83
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1269 67
	imull	%edx, %eax
	.loc 9 1269 90
	sall	$2, %eax
	.loc 9 1269 46
	movl	%eax, (%esp)
	call	_malloc
	movl	%eax, %edx
	.loc 9 1269 28
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
LBB884:
	.loc 9 1271 19
	movzbl	_settings+48, %eax
	.loc 9 1271 9
	xorl	$1, %eax
	.loc 9 1271 5
	testb	%al, %al
	je	L4671
LBB885:
LBB886:
	.loc 9 1272 21
	movl	$0, -16(%ebp)
L4673:
	.loc 9 1272 46 discriminator 3
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1272 68 discriminator 3
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1272 52 discriminator 3
	imull	%edx, %eax
	.loc 9 1272 30 discriminator 3
	cmpl	%eax, -16(%ebp)
	jnb	L4674
	.loc 9 1273 63 discriminator 2
	movl	_settings+40, %ecx
	.loc 9 1273 27 discriminator 2
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 1273 35 discriminator 2
	movl	-16(%ebp), %edx
	sall	$2, %edx
	.loc 9 1273 41 discriminator 2
	addl	%edx, %eax
	.loc 9 1273 43 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 9 1274 63 discriminator 2
	movl	_settings+36, %ecx
	.loc 9 1274 27 discriminator 2
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 1274 35 discriminator 2
	movl	-16(%ebp), %edx
	sall	$2, %edx
	.loc 9 1274 41 discriminator 2
	addl	$1, %edx
	addl	%edx, %eax
	.loc 9 1274 43 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 9 1275 63 discriminator 2
	movl	_settings+32, %ecx
	.loc 9 1275 27 discriminator 2
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 1275 35 discriminator 2
	movl	-16(%ebp), %edx
	sall	$2, %edx
	.loc 9 1275 41 discriminator 2
	addl	$2, %edx
	addl	%edx, %eax
	.loc 9 1275 43 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 9 1276 63 discriminator 2
	movl	_settings+44, %ecx
	.loc 9 1276 27 discriminator 2
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 1276 35 discriminator 2
	movl	-16(%ebp), %edx
	sall	$2, %edx
	.loc 9 1276 41 discriminator 2
	addl	$3, %edx
	addl	%edx, %eax
	.loc 9 1276 43 discriminator 2
	movl	%ecx, %edx
	movb	%dl, (%eax)
	.loc 9 1272 9 discriminator 2
	addl	$1, -16(%ebp)
	jmp	L4673
L4671:
LBE886:
LBE885:
	.loc 9 1279 30
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 20(%esp)
	movl	%eax, 16(%esp)
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	leal	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z21blit_bitmap_to_bitmapP6bitmapS0_iiii
L4674:
LBE884:
	.loc 9 1282 17
	movl	-56(%ebp), %eax
	addl	%eax, %eax
	.loc 9 1282 26
	movl	%eax, -116(%ebp)
	fildl	-116(%ebp)
	.loc 9 1282 37
	flds	_settings+20
	.loc 9 1282 26
	fmulp	%st, %st(1)
	.loc 9 1282 9
	fnstcw	-106(%ebp)
	movzwl	-106(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -108(%ebp)
	fldcw	-108(%ebp)
	fistpl	-44(%ebp)
	fldcw	-106(%ebp)
LBB887:
	.loc 9 1283 14
	movl	$0, -20(%ebp)
L4685:
	.loc 9 1283 23 discriminator 1
	movl	-52(%ebp), %eax
	cmpl	%eax, -20(%ebp)
	jge	L4675
LBB888:
	.loc 9 1284 34
	movl	-20(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	-36(%ebp), %eax
	addl	%edx, %eax
	flds	(%eax)
	.loc 9 1284 36
	flds	-60(%ebp)
	fsubrp	%st, %st(1)
	.loc 9 1284 72
	flds	-64(%ebp)
	flds	-60(%ebp)
	fsubrp	%st, %st(1)
	.loc 9 1284 54
	fdivrp	%st, %st(1)
	.loc 9 1284 15
	flds	LC41
	fmulp	%st, %st(1)
	fstps	-48(%ebp)
	.loc 9 1287 23
	flds	-48(%ebp)
	fldl	LC228
	fdivrp	%st, %st(1)
	.loc 9 1287 43
	movl	_settings+120, %eax
	.loc 9 1287 54
	leal	-1(%eax), %edx
	.loc 9 1287 69
	movl	_settings+124, %eax
	.loc 9 1287 58
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 1287 31
	movl	%eax, -116(%ebp)
	fildl	-116(%ebp)
	fmulp	%st, %st(1)
	.loc 9 1287 91
	movl	_settings+124, %eax
	.loc 9 1287 80
	movl	%eax, -116(%ebp)
	fildl	-116(%ebp)
	faddp	%st, %st(1)
	.loc 9 1287 13
	fnstcw	-106(%ebp)
	movzwl	-106(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -108(%ebp)
	fldcw	-108(%ebp)
	fistpl	-112(%ebp)
	fldcw	-106(%ebp)
	movl	-112(%ebp), %eax
	movl	%eax, -68(%ebp)
	.loc 9 1288 22
	movzbl	_settings+128, %eax
	.loc 9 1288 9
	testb	%al, %al
	je	L4676
	.loc 9 1288 52 discriminator 1
	movl	_settings+120, %eax
	.loc 9 1288 63 discriminator 1
	leal	-1(%eax), %edx
	.loc 9 1288 78 discriminator 1
	movl	_settings+124, %eax
	.loc 9 1288 67 discriminator 1
	addl	%eax, %edx
	.loc 9 1288 88 discriminator 1
	movl	-68(%ebp), %eax
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 1288 41 discriminator 1
	movl	%eax, -68(%ebp)
L4676:
	.loc 9 1289 17
	movl	_settings+120, %edx
	movl	-68(%ebp), %eax
	cmpl	%eax, %edx
	jg	L4677
	.loc 9 1289 17 is_stmt 0 discriminator 1
	movl	_settings+120, %eax
	subl	$1, %eax
	jmp	L4678
L4677:
	.loc 9 1289 17 discriminator 2
	movl	_settings+124, %edx
	movl	-68(%ebp), %eax
	cmpl	%eax, %edx
	jle	L4679
	.loc 9 1289 17 discriminator 4
	movl	_settings+124, %eax
	jmp	L4678
L4679:
	.loc 9 1289 17 discriminator 5
	movl	-68(%ebp), %eax
L4678:
	.loc 9 1289 15 is_stmt 1 discriminator 8
	movl	%eax, -68(%ebp)
	.loc 9 1291 13 discriminator 8
	movl	-44(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 9 1292 19 discriminator 8
	movl	-68(%ebp), %eax
	.loc 9 1292 9 discriminator 8
	cmpl	$49, %eax
	jle	L4681
	.loc 9 1293 13
	movzbl	_settings+116, %eax
	testb	%al, %al
	jne	L4684
	.loc 9 1293 13 is_stmt 0 discriminator 2
	movl	$1293, 8(%esp)
	movl	$LC238, 4(%esp)
	movl	$LC251, (%esp)
	call	__assert
L4684:
	.loc 9 1294 21 is_stmt 1
	movl	-68(%ebp), %eax
	imull	-44(%ebp), %eax
	movl	%eax, %ecx
	.loc 9 1294 15
	movl	$1374389535, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$4, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -24(%ebp)
	.loc 9 1295 19
	movl	$49, -68(%ebp)
L4681:
	.loc 9 1298 117 discriminator 2
	movzbl	_settings+129, %eax
	.loc 9 1298 31 discriminator 2
	movzbl	%al, %ebx
	movl	_settings+28, %edx
	.loc 9 1298 78 discriminator 2
	movl	-20(%ebp), %eax
	sall	$4, %eax
	movl	%eax, %ecx
	movl	-32(%ebp), %eax
	addl	%ecx, %eax
	.loc 9 1298 64 discriminator 2
	movl	-20(%ebp), %ecx
	leal	0(,%ecx,8), %esi
	movl	-28(%ebp), %ecx
	addl	%ecx, %esi
	.loc 9 1298 31 discriminator 2
	movl	-68(%ebp), %ecx
	movl	%ebx, 40(%esp)
	movl	%edx, 36(%esp)
	movl	(%eax), %edx
	movl	%edx, 20(%esp)
	movl	4(%eax), %edx
	movl	%edx, 24(%esp)
	movl	8(%eax), %edx
	movl	%edx, 28(%esp)
	movl	12(%eax), %eax
	movl	%eax, 32(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	(%esi), %eax
	movl	4(%esi), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	movl	%ecx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z22blit_texture_to_bitmapP6bitmapi2v2i5Colorib
LBE888:
	.loc 9 1283 5 discriminator 2
	addl	$1, -20(%ebp)
	jmp	L4685
L4675:
LBE887:
	.loc 9 1301 72
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1301 94
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 1301 78
	imull	%edx, %eax
	.loc 9 1301 101
	sall	$2, %eax
	.loc 9 1301 11
	movl	%eax, %ecx
	.loc 9 1301 50
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 9 1301 26
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	.loc 9 1301 11
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_memcpy
	.loc 9 1302 21
	movl	_settings, %eax
	movl	$0, 24(%esp)
	movl	%eax, 20(%esp)
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	%edx, (%esp)
	movl	4(%eax), %edx
	movl	%edx, 4(%esp)
	movl	8(%eax), %edx
	movl	%edx, 8(%esp)
	movl	12(%eax), %edx
	movl	%edx, 12(%esp)
	movl	16(%eax), %eax
	movl	%eax, 16(%esp)
	call	__Z16apply_brightness6bitmapib
	.loc 9 1303 19
	movl	_settings+4, %eax
	movl	$0, 24(%esp)
	movl	%eax, 20(%esp)
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	%edx, (%esp)
	movl	4(%eax), %edx
	movl	%edx, 4(%esp)
	movl	8(%eax), %edx
	movl	%edx, 8(%esp)
	movl	12(%eax), %edx
	movl	%edx, 12(%esp)
	movl	16(%eax), %eax
	movl	%eax, 16(%esp)
	call	__Z14apply_contrast6bitmapib
	.loc 9 1305 9
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 9 1306 9
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	_free
	.loc 9 1308 12
	nop
	.loc 9 1309 1
	movl	8(%ebp), %eax
	addl	$160, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2200:
	.globl	__Z26compute_rendering_position7tagRECTiii
	.def	__Z26compute_rendering_position7tagRECTiii;	.scl	2;	.type	32;	.endef
__Z26compute_rendering_position7tagRECTiii:
LFB2201:
	.loc 9 1311 101
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$32, %esp
	.loc 9 1314 29
	movl	12(%ebp), %edx
	.loc 9 1314 34
	movl	28(%ebp), %eax
	addl	%eax, %edx
	.loc 9 1314 17
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 1315 29
	movl	16(%ebp), %edx
	.loc 9 1315 34
	movl	28(%ebp), %eax
	addl	%eax, %edx
	.loc 9 1315 17
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 9 1316 33
	movl	20(%ebp), %edx
	.loc 9 1316 52
	movl	12(%ebp), %eax
	.loc 9 1316 40
	subl	%eax, %edx
	.loc 9 1316 69
	movl	28(%ebp), %eax
	addl	%eax, %eax
	.loc 9 1316 9
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -4(%ebp)
	.loc 9 1317 33
	movl	24(%ebp), %edx
	.loc 9 1317 52
	movl	16(%ebp), %eax
	.loc 9 1317 40
	subl	%eax, %edx
	.loc 9 1317 69
	movl	28(%ebp), %eax
	addl	%eax, %eax
	.loc 9 1317 9
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -8(%ebp)
	.loc 9 1319 28
	fildl	-4(%ebp)
	.loc 9 1319 49
	fildl	32(%ebp)
	.loc 9 1319 47
	fdivrp	%st, %st(1)
	.loc 9 1319 72
	fildl	-8(%ebp)
	.loc 9 1319 94
	fildl	36(%ebp)
	.loc 9 1319 92
	fdivrp	%st, %st(1)
	fxch	%st(1)
	.loc 9 1319 10
	fcomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	movb	%al, -9(%ebp)
	.loc 9 1320 43
	cmpb	$0, -9(%ebp)
	je	L4692
	.loc 9 1320 57 discriminator 1
	movl	-8(%ebp), %eax
	imull	32(%ebp), %eax
	.loc 9 1320 43 discriminator 1
	cltd
	idivl	36(%ebp)
	jmp	L4693
L4692:
	.loc 9 1320 43 is_stmt 0 discriminator 2
	movl	-4(%ebp), %eax
L4693:
	.loc 9 1320 9 is_stmt 1 discriminator 4
	movl	%eax, -16(%ebp)
	.loc 9 1321 43 discriminator 4
	cmpb	$0, -9(%ebp)
	je	L4694
	.loc 9 1321 43 is_stmt 0 discriminator 1
	movl	-8(%ebp), %eax
	jmp	L4695
L4694:
	.loc 9 1321 70 is_stmt 1 discriminator 2
	movl	-4(%ebp), %eax
	imull	36(%ebp), %eax
	.loc 9 1321 43 discriminator 2
	cltd
	idivl	32(%ebp)
L4695:
	.loc 9 1321 9 discriminator 4
	movl	%eax, -20(%ebp)
	.loc 9 1323 28 discriminator 4
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	.loc 9 1323 33 discriminator 4
	movl	-16(%ebp), %eax
	addl	%eax, %edx
	.loc 9 1323 19 discriminator 4
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 9 1324 28 discriminator 4
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	.loc 9 1324 33 discriminator 4
	movl	-20(%ebp), %eax
	addl	%eax, %edx
	.loc 9 1324 19 discriminator 4
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 9 1326 12 discriminator 4
	nop
	.loc 9 1327 1 discriminator 4
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2201:
	.section	.text$_Z14v2_inside_rect2v27tagRECT,"x"
	.linkonce discard
	.globl	__Z14v2_inside_rect2v27tagRECT
	.def	__Z14v2_inside_rect2v27tagRECT;	.scl	2;	.type	32;	.endef
__Z14v2_inside_rect2v27tagRECT:
LFB2202:
	.loc 9 1329 45
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 9 1330 11
	movl	8(%ebp), %edx
	.loc 9 1330 20
	movl	16(%ebp), %eax
	.loc 9 1330 5
	cmpl	%eax, %edx
	jge	L4698
	.loc 9 1330 35 discriminator 1
	movl	$0, %eax
	jmp	L4699
L4698:
	.loc 9 1331 11
	movl	8(%ebp), %edx
	.loc 9 1331 20
	movl	24(%ebp), %eax
	.loc 9 1331 5
	cmpl	%eax, %edx
	jle	L4700
	.loc 9 1331 35 discriminator 1
	movl	$0, %eax
	jmp	L4699
L4700:
	.loc 9 1332 11
	movl	12(%ebp), %edx
	.loc 9 1332 20
	movl	20(%ebp), %eax
	.loc 9 1332 5
	cmpl	%eax, %edx
	jge	L4701
	.loc 9 1332 35 discriminator 1
	movl	$0, %eax
	jmp	L4699
L4701:
	.loc 9 1333 11
	movl	12(%ebp), %edx
	.loc 9 1333 20
	movl	28(%ebp), %eax
	.loc 9 1333 5
	cmpl	%eax, %edx
	jle	L4702
	.loc 9 1333 35 discriminator 1
	movl	$0, %eax
	jmp	L4699
L4702:
	.loc 9 1334 12
	movl	$1, %eax
L4699:
	.loc 9 1335 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2202:
	.section .rdata,"dr"
LC252:
	.ascii "All\0*.*\0\0"
	.text
	.globl	__Z20open_file_externallyPci
	.def	__Z20open_file_externallyPci;	.scl	2;	.type	32;	.endef
__Z20open_file_externallyPci:
LFB2203:
	.loc 9 1338 64
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$120, %esp
	.loc 9 1341 11
	movl	$88, 8(%esp)
	movl	$0, 4(%esp)
	leal	-96(%ebp), %eax
	movl	%eax, (%esp)
	call	_memset
	.loc 9 1342 34
	movl	$88, -96(%ebp)
	.loc 9 1343 32
	movl	_Window, %eax
	movl	%eax, -92(%ebp)
	.loc 9 1344 32
	movl	8(%ebp), %eax
	movl	%eax, -68(%ebp)
	.loc 9 1347 22
	movl	-68(%ebp), %eax
	.loc 9 1347 35
	movb	$0, (%eax)
	.loc 9 1348 31
	movl	12(%ebp), %eax
	movl	%eax, -64(%ebp)
	.loc 9 1349 34
	movl	$LC252, -84(%ebp)
	.loc 9 1350 35
	movl	$1, -72(%ebp)
	.loc 9 1351 37
	movl	$0, -60(%ebp)
	.loc 9 1352 36
	movl	$0, -56(%ebp)
	.loc 9 1353 38
	movl	$0, -52(%ebp)
	.loc 9 1354 28
	movl	$6144, -44(%ebp)
	.loc 9 1356 27
	leal	-96(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__GetOpenFileNameA@4, %eax
	call	*%eax
LVL59:
	subl	$4, %esp
	.loc 9 1356 45
	testl	%eax, %eax
	setne	%al
	.loc 9 1357 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2203:
	.globl	__Z13get_dot_indexPci
	.def	__Z13get_dot_indexPci;	.scl	2;	.type	32;	.endef
__Z13get_dot_indexPci:
LFB2204:
	.loc 9 1359 56
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
LBB889:
	.loc 9 1360 14
	movl	$0, -4(%ebp)
L4711:
	.loc 9 1360 23 discriminator 1
	movl	-4(%ebp), %eax
	cmpl	12(%ebp), %eax
	jge	L4706
	.loc 9 1361 24
	movl	-4(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 9 1361 9
	testb	%al, %al
	jne	L4707
L4710:
	.loc 9 1362 22
	cmpl	$0, -4(%ebp)
	js	L4707
	.loc 9 1363 32
	movl	-4(%ebp), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %eax
	.loc 9 1363 17
	cmpb	$46, %al
	jne	L4708
	.loc 9 1363 49 discriminator 1
	movl	-4(%ebp), %eax
	jmp	L4709
L4708:
	.loc 9 1364 18
	subl	$1, -4(%ebp)
	.loc 9 1362 13
	jmp	L4710
L4707:
	.loc 9 1360 5 discriminator 2
	addl	$1, -4(%ebp)
	jmp	L4711
L4706:
LBE889:
	.loc 9 1368 13
	movl	$-1, %eax
L4709:
	.loc 9 1369 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2204:
	.globl	_sliders
	.data
	.align 4
_sliders:
	.byte	0
	.space 3
	.long	-1
	.byte	0
	.space 3
	.text
	.globl	__Z10make_paneliiiii
	.def	__Z10make_paneliiiii;	.scl	2;	.type	32;	.endef
__Z10make_paneliiiii:
LFB2208:
	.loc 9 1415 70
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	.cfi_offset 3, -12
	.loc 9 1416 11
	movl	8(%ebp), %edx
	movl	$0, %ebx
	movl	$32, %eax
	andl	$-4, %eax
	movl	%eax, %ecx
	movl	$0, %eax
L4713:
	movl	%ebx, (%edx,%eax)
	addl	$4, %eax
	cmpl	%ecx, %eax
	jb	L4713
	.loc 9 1418 19
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, (%eax)
	.loc 9 1419 19
	movl	8(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 20(%eax)
	.loc 9 1420 19
	movl	8(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, 24(%eax)
	.loc 9 1422 24
	movl	8(%ebp), %eax
	movl	24(%ebp), %edx
	movl	%edx, 4(%eax)
	.loc 9 1423 24
	movl	8(%ebp), %eax
	movl	20(%ebp), %edx
	movl	%edx, 8(%eax)
	.loc 9 1425 25
	movl	8(%ebp), %eax
	movl	20(%ebp), %edx
	movl	%edx, 12(%eax)
	.loc 9 1426 25
	movl	8(%ebp), %eax
	movl	24(%ebp), %edx
	movl	%edx, 16(%eax)
	.loc 9 1428 22
	movl	8(%ebp), %eax
	movl	28(%ebp), %edx
	movl	%edx, 28(%eax)
	.loc 9 1429 12
	nop
	.loc 9 1430 1
	movl	8(%ebp), %eax
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2208:
	.globl	__Z20reset_zoom_rectangle6bitmap7tagRECT
	.def	__Z20reset_zoom_rectangle6bitmap7tagRECT;	.scl	2;	.type	32;	.endef
__Z20reset_zoom_rectangle6bitmap7tagRECT:
LFB2212:
	.loc 9 1432 61
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 9 1434 35
	movl	16(%ebp), %eax
	.loc 9 1434 21
	movl	%eax, -44(%ebp)
	fildl	-44(%ebp)
	fstps	-44(%ebp)
	.loc 9 1434 57
	movl	32(%ebp), %eax
	movl	%eax, (%esp)
	movl	36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	44(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	movl	%eax, -48(%ebp)
	.loc 9 1434 44
	fildl	-48(%ebp)
	.loc 9 1434 69
	fdivrs	-44(%ebp)
	fstps	-12(%ebp)
	.loc 9 1435 35
	movl	20(%ebp), %eax
	.loc 9 1435 21
	movl	%eax, -44(%ebp)
	fildl	-44(%ebp)
	fstps	-44(%ebp)
	.loc 9 1435 57
	movl	32(%ebp), %eax
	movl	%eax, (%esp)
	movl	36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	44(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_h7tagRECT
	movl	%eax, -48(%ebp)
	.loc 9 1435 44
	fildl	-48(%ebp)
	.loc 9 1435 69
	fdivrs	-44(%ebp)
	fstps	-16(%ebp)
	.loc 9 1437 33
	flds	-16(%ebp)
	flds	-12(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4726
	.loc 9 1437 41 discriminator 1
	movl	16(%ebp), %eax
	.loc 9 1437 33 discriminator 1
	movl	%eax, -44(%ebp)
	fildl	-44(%ebp)
	jmp	L4719
L4726:
	.loc 9 1437 55 discriminator 2
	movl	32(%ebp), %eax
	movl	%eax, (%esp)
	movl	36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	44(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	movl	%eax, -44(%ebp)
	.loc 9 1437 69 discriminator 2
	fildl	-44(%ebp)
	.loc 9 1437 33 discriminator 2
	fmuls	-16(%ebp)
L4719:
	.loc 9 1437 71 discriminator 4
	fstps	-20(%ebp)
	.loc 9 1438 33 discriminator 4
	flds	-12(%ebp)
	flds	-16(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4727
	.loc 9 1438 41 discriminator 1
	movl	20(%ebp), %eax
	.loc 9 1438 33 discriminator 1
	movl	%eax, -44(%ebp)
	fildl	-44(%ebp)
	jmp	L4722
L4727:
	.loc 9 1438 55 discriminator 2
	movl	32(%ebp), %eax
	movl	%eax, (%esp)
	movl	36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	40(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	44(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_h7tagRECT
	movl	%eax, -44(%ebp)
	.loc 9 1438 69 discriminator 2
	fildl	-44(%ebp)
	.loc 9 1438 33 discriminator 2
	fmuls	-12(%ebp)
L4722:
	.loc 9 1438 71 discriminator 4
	fstps	-24(%ebp)
	.loc 9 1440 28 discriminator 4
	movl	16(%ebp), %eax
	.loc 9 1440 35 discriminator 4
	movl	%eax, -44(%ebp)
	fildl	-44(%ebp)
	fsubs	-20(%ebp)
	.loc 9 1440 11 discriminator 4
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-28(%ebp)
	.loc 9 1441 28 discriminator 4
	movl	20(%ebp), %eax
	.loc 9 1441 35 discriminator 4
	movl	%eax, -44(%ebp)
	fildl	-44(%ebp)
	fsubs	-24(%ebp)
	.loc 9 1441 11 discriminator 4
	flds	LC192
	fdivrp	%st, %st(1)
	fstps	-32(%ebp)
	.loc 9 1443 64 discriminator 4
	movl	8(%ebp), %eax
	flds	-28(%ebp)
	fstps	(%eax)
	movl	8(%ebp), %eax
	flds	-32(%ebp)
	fstps	4(%eax)
	.loc 9 1443 42 discriminator 4
	flds	-20(%ebp)
	fadds	-28(%ebp)
	.loc 9 1443 64 discriminator 4
	movl	8(%ebp), %eax
	fstps	8(%eax)
	.loc 9 1443 55 discriminator 4
	flds	-24(%ebp)
	fadds	-32(%ebp)
	.loc 9 1443 64 discriminator 4
	movl	8(%ebp), %eax
	fstps	12(%eax)
	.loc 9 1445 12 discriminator 4
	nop
	.loc 9 1446 1 discriminator 4
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2212:
	.globl	__Z11update_zoomP6RECT_f7tagRECTf2v2
	.def	__Z11update_zoomP6RECT_f7tagRECTf2v2;	.scl	2;	.type	32;	.endef
__Z11update_zoomP6RECT_f7tagRECTf2v2:
LFB2213:
	.loc 9 1448 84
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.loc 9 1449 20
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	%edx, (%esp)
	movl	4(%eax), %edx
	movl	%edx, 4(%esp)
	movl	8(%eax), %edx
	movl	%edx, 8(%esp)
	movl	12(%eax), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w6RECT_f
	movl	%eax, -44(%ebp)
	.loc 9 1449 31
	fildl	-44(%ebp)
	fstps	-12(%ebp)
	.loc 9 1450 20
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	%edx, (%esp)
	movl	4(%eax), %edx
	movl	%edx, 4(%esp)
	movl	8(%eax), %edx
	movl	%edx, 8(%esp)
	movl	12(%eax), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_h6RECT_f
	movl	%eax, -44(%ebp)
	.loc 9 1450 31
	fildl	-44(%ebp)
	fstps	-16(%ebp)
	.loc 9 1452 33
	movl	32(%ebp), %edx
	.loc 9 1452 49
	movl	12(%ebp), %eax
	.loc 9 1452 35
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 1452 11
	movl	%eax, -44(%ebp)
	fildl	-44(%ebp)
	fstps	-20(%ebp)
	.loc 9 1453 33
	movl	36(%ebp), %edx
	.loc 9 1453 49
	movl	16(%ebp), %eax
	.loc 9 1453 35
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 1453 11
	movl	%eax, -44(%ebp)
	fildl	-44(%ebp)
	fstps	-24(%ebp)
LBB890:
	.loc 9 1456 53
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	movl	%eax, -44(%ebp)
	.loc 9 1456 40
	fildl	-44(%ebp)
	.loc 9 1456 65
	flds	-20(%ebp)
	fdivp	%st, %st(1)
	fstps	-28(%ebp)
	.loc 9 1457 53
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_h7tagRECT
	movl	%eax, -44(%ebp)
	.loc 9 1457 40
	fildl	-44(%ebp)
	.loc 9 1457 65
	flds	-24(%ebp)
	fdivp	%st, %st(1)
	fstps	-32(%ebp)
	.loc 9 1459 44
	flds	-28(%ebp)
	fmuls	-12(%ebp)
	.loc 9 1459 61
	movl	8(%ebp), %eax
	flds	(%eax)
	.loc 9 1459 15
	faddp	%st, %st(1)
	fstps	-36(%ebp)
	.loc 9 1460 44
	flds	-32(%ebp)
	fmuls	-16(%ebp)
	.loc 9 1460 61
	movl	8(%ebp), %eax
	flds	4(%eax)
	.loc 9 1460 15
	faddp	%st, %st(1)
	fstps	-40(%ebp)
	.loc 9 1462 17
	flds	28(%ebp)
	fld1
	faddp	%st, %st(1)
	.loc 9 1462 11
	flds	-12(%ebp)
	fmulp	%st, %st(1)
	fstps	-12(%ebp)
	.loc 9 1463 30
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_h7tagRECT
	movl	%eax, -44(%ebp)
	.loc 9 1463 17
	fildl	-44(%ebp)
	.loc 9 1463 15
	fmuls	-12(%ebp)
	fstps	-44(%ebp)
	.loc 9 1463 59
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	movl	%eax, -48(%ebp)
	.loc 9 1463 46
	fildl	-48(%ebp)
	.loc 9 1463 11
	fdivrs	-44(%ebp)
	fstps	-16(%ebp)
	.loc 9 1465 47
	flds	-12(%ebp)
	fmuls	-28(%ebp)
	.loc 9 1465 43
	flds	-36(%ebp)
	fsubp	%st, %st(1)
	.loc 9 1465 27
	movl	8(%ebp), %eax
	fstps	(%eax)
	.loc 9 1466 40
	movl	8(%ebp), %eax
	flds	(%eax)
	.loc 9 1466 45
	fadds	-12(%ebp)
	.loc 9 1466 27
	movl	8(%ebp), %eax
	fstps	8(%eax)
	.loc 9 1467 47
	flds	-16(%ebp)
	fmuls	-32(%ebp)
	.loc 9 1467 43
	flds	-40(%ebp)
	fsubp	%st, %st(1)
	.loc 9 1467 27
	movl	8(%ebp), %eax
	fstps	4(%eax)
	.loc 9 1468 40
	movl	8(%ebp), %eax
	flds	4(%eax)
	.loc 9 1468 44
	fadds	-16(%ebp)
	.loc 9 1468 27
	movl	8(%ebp), %eax
	fstps	12(%eax)
LBE890:
	.loc 9 1470 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2213:
	.def	___divdi3;	.scl	2;	.type	32;	.endef
	.globl	__Z7get_CPMv
	.def	__Z7get_CPMv;	.scl	2;	.type	32;	.endef
__Z7get_CPMv:
LFB2214:
	.loc 9 1472 15
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.loc 9 1474 30
	leal	-16(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__QueryPerformanceFrequency@4, %eax
	call	*%eax
LVL60:
	subl	$4, %esp
	.loc 9 1475 31
	movl	-16(%ebp), %eax
	movl	-12(%ebp), %edx
	.loc 9 1475 40
	movl	$1000, 8(%esp)
	movl	$0, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	___divdi3
LVL61:
	.loc 9 1476 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2214:
	.section .rdata,"dr"
LC253:
	.ascii "buffer->Memory\0"
LC254:
	.ascii "Bpp == Bytes_Per_Pixel\0"
	.text
	.globl	__Z10load_imageP6bitmapPKcbb
	.def	__Z10load_imageP6bitmapPKcbb;	.scl	2;	.type	32;	.endef
__Z10load_imageP6bitmapPKcbb:
LFB2215:
	.loc 9 1478 111
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	movl	16(%ebp), %edx
	movl	20(%ebp), %eax
	movb	%dl, -28(%ebp)
	movb	%al, -32(%ebp)
	.loc 9 1480 31
	movl	8(%ebp), %eax
	leal	8(%eax), %ecx
	movl	8(%ebp), %eax
	leal	4(%eax), %edx
	movl	$4, 16(%esp)
	leal	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_load
	movl	%eax, %edx
	.loc 9 1480 20
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 9 1481 5
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	L4734
	.loc 9 1481 5 is_stmt 0 discriminator 2
	movl	$1481, 8(%esp)
	movl	$LC238, 4(%esp)
	movl	$LC253, (%esp)
	call	__assert
L4734:
	.loc 9 1482 5 is_stmt 1
	movl	-12(%ebp), %eax
	cmpl	$4, %eax
	je	L4737
	.loc 9 1482 5 is_stmt 0 discriminator 2
	movl	$1482, 8(%esp)
	movl	$LC238, 4(%esp)
	movl	$LC254, (%esp)
	call	__assert
L4737:
	.loc 9 1484 5 is_stmt 1
	cmpb	$0, -28(%ebp)
	je	L4738
	.loc 9 1484 50 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z26swap_red_and_blue_channelsP6bitmap
L4738:
	.loc 9 1485 5
	cmpb	$0, -32(%ebp)
	je	L4740
	.loc 9 1485 41 discriminator 1
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z17premultiply_alphaP6bitmap
L4740:
	.loc 9 1486 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2215:
	.def	___main;	.scl	2;	.type	32;	.endef
	.section .rdata,"dr"
LC255:
	.ascii "Caps/Cap \0"
LC256:
	.ascii ".png\0"
LC257:
	.ascii "Textures/*.png\0"
LC258:
	.ascii "texture_\0"
LC263:
	.ascii "Load image\0"
LC264:
	.ascii "Brightness\0"
LC265:
	.ascii "Contrast\0"
LC266:
	.ascii "Swap R & B\0"
LC267:
	.ascii "Process image\0"
	.align 4
LC268:
	.ascii "settings.caps_or_texture == Texture_Style\0"
LC271:
	.ascii "Settings\0"
LC272:
	.ascii "Grid\0"
LC273:
	.ascii "Hex\0"
LC274:
	.ascii "Rnd\0"
LC275:
	.ascii "Radius\0"
LC276:
	.ascii "Horizontal\0"
LC277:
	.ascii "Vertical\0"
LC278:
	.ascii "Shuffle Centers\0"
LC279:
	.ascii "Width\0"
LC280:
	.ascii "Caps\0"
LC281:
	.ascii "Elements\0"
LC282:
	.ascii "Randomly\0"
LC283:
	.ascii "By Brightness\0"
LC284:
	.ascii "By Darkness\0"
LC285:
	.ascii "Scale\0"
LC289:
	.ascii "Texture\0"
LC290:
	.ascii "Invert\0"
LC291:
	.ascii "By Color\0"
LC293:
	.ascii "Hard Max\0"
LC294:
	.ascii "Hue Shift\0"
LC295:
	.ascii "Allow Oversizing\0"
LC296:
	.ascii "Range\0"
LC297:
	.ascii "Invert:\0"
LC298:
	.ascii "Size\0"
LC299:
	.ascii "Alpha\0"
LC300:
	.ascii "Make GIF\0"
LC301:
	.ascii "dot_index >= 0\0"
LC302:
	.ascii "Save\0"
LC303:
	.ascii "png\0"
LC304:
	.ascii "bmp\0"
LC305:
	.ascii "jpg\0"
LC306:
	.ascii "Lock Zoom\0"
LC307:
	.ascii "Background\0"
LC308:
	.ascii "Original\0"
LC310:
	.ascii "R\0"
LC311:
	.ascii "G\0"
LC312:
	.ascii "B\0"
LC313:
	.ascii "A\0"
LC314:
	.ascii "Reset\0"
LC315:
	.ascii "Done\0"
	.text
	.globl	_main
	.def	_main;	.scl	2;	.type	32;	.endef
_main:
LFB2216:
	.loc 9 1488 16
	.cfi_startproc
	.cfi_personality 0,___gxx_personality_v0
	.cfi_lsda 0,LLSDA2216
	leal	4(%esp), %ecx
	.cfi_def_cfa 1, 0
	andl	$-16, %esp
	pushl	-4(%ecx)
	pushl	%ebp
	.cfi_escape 0x10,0x5,0x2,0x75,0
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	.cfi_escape 0xf,0x3,0x75,0x70,0x6
	.cfi_escape 0x10,0x7,0x2,0x75,0x7c
	.cfi_escape 0x10,0x6,0x2,0x75,0x78
	.cfi_escape 0x10,0x3,0x2,0x75,0x74
	subl	$2200, %esp
	.loc 9 1488 16
	call	___main
LVL62:
	.loc 9 1489 27
	call	__Z22initialize_main_bufferv
LEHB3:
	.loc 9 1490 22
	call	__Z17start_main_windowv
	.loc 9 1492 22
	call	__Z7get_CPMv
	.loc 9 1492 23
	movl	%eax, -368(%ebp)
	.loc 9 1494 5
	leal	-376(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__QueryPerformanceCounter@4, %eax
	call	*%eax
LVL63:
	subl	$4, %esp
	.loc 9 1496 47
	movl	_Main_Buffer+4, %edx
	.loc 9 1496 67
	movl	_Main_Buffer+8, %eax
	.loc 9 1496 53
	imull	%edx, %eax
	.loc 9 1496 74
	sall	$2, %eax
	.loc 9 1496 11
	movl	%eax, %edx
	.loc 9 1496 24
	movl	_Main_Buffer, %eax
	.loc 9 1496 11
	movl	%edx, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	_memset
	.loc 9 1497 31
	call	__Z26blit_main_buffer_to_windowv
	.loc 9 1499 9
	movl	$20, -396(%ebp)
	movl	$35, -392(%ebp)
	movl	$55, -388(%ebp)
	.loc 9 1500 14
	leal	-396(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z9init_fontPi
LBB891:
	.loc 9 1502 14
	movl	$0, -28(%ebp)
L4743:
	.loc 9 1502 23 discriminator 1
	cmpl	$120, -28(%ebp)
	jg	L4742
LBB892:
	.loc 9 1503 50
	movl	-28(%ebp), %eax
	leal	1(%eax), %edx
	leal	-340(%ebp), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZNSt7__cxx119to_stringEi
LEHE3:
	.loc 9 1503 39
	leal	-364(%ebp), %eax
	leal	-340(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	$LC255, 4(%esp)
	movl	%eax, (%esp)
LEHB4:
	call	__ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
LEHE4:
	.loc 9 1503 60 discriminator 2
	leal	-1228(%ebp), %eax
	movl	$LC256, 8(%esp)
	leal	-364(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
LEHB5:
	call	__ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
LEHE5:
	leal	-364(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	leal	-340(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	.loc 9 1504 19
	leal	-1228(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
	movl	%eax, %ecx
	movl	-28(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	addl	$_caps_data, %eax
	movl	$1, 12(%esp)
	movl	$1, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
LEHB6:
	call	__Z10load_imageP6bitmapPKcbb
LEHE6:
	.loc 9 1503 60 discriminator 2
	leal	-1228(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
LBE892:
	.loc 9 1502 5 discriminator 2
	addl	$1, -28(%ebp)
	jmp	L4743
L4742:
LBE891:
	.loc 9 1507 11
	movl	$LC257, -80(%ebp)
	.loc 9 1509 39
	leal	-716(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__FindFirstFileA@8, %eax
LEHB7:
	call	*%eax
LVL64:
	subl	$8, %esp
	movl	%eax, -84(%ebp)
L4750:
LBB894:
LBB895:
	.loc 9 1513 19
	movl	-716(%ebp), %eax
	.loc 9 1513 36
	andl	$16, %eax
	.loc 9 1513 9
	testl	%eax, %eax
	jne	L4744
LBB896:
	.loc 9 1514 37
	movl	-684(%ebp), %eax
	.loc 9 1514 31
	movl	%eax, -728(%ebp)
	.loc 9 1515 37
	movl	-688(%ebp), %eax
	.loc 9 1515 31
	movl	%eax, -724(%ebp)
	.loc 9 1517 19
	leal	-716(%ebp), %eax
	addl	$44, %eax
	movl	%eax, -88(%ebp)
	.loc 9 1519 19
	movl	$LC258, -92(%ebp)
	.loc 9 1520 18
	movb	$1, -29(%ebp)
LBB897:
	.loc 9 1521 22
	movl	$0, -36(%ebp)
L4747:
	.loc 9 1521 39 discriminator 1
	movl	-92(%ebp), %eax
	movl	%eax, (%esp)
	call	_strlen
	movl	%eax, %edx
	.loc 9 1521 31 discriminator 1
	movl	-36(%ebp), %eax
	cmpl	%eax, %edx
	jbe	L4745
	.loc 9 1522 37
	movl	-36(%ebp), %edx
	movl	-92(%ebp), %eax
	addl	%edx, %eax
	movzbl	(%eax), %edx
	.loc 9 1522 53
	movl	-36(%ebp), %ecx
	movl	-88(%ebp), %eax
	addl	%ecx, %eax
	movzbl	(%eax), %eax
	.loc 9 1522 17
	cmpb	%al, %dl
	je	L4746
	.loc 9 1522 75 discriminator 1
	movb	$0, -29(%ebp)
L4746:
	.loc 9 1521 13 discriminator 2
	addl	$1, -36(%ebp)
	jmp	L4747
L4745:
LBE897:
	.loc 9 1524 17
	movzbl	-29(%ebp), %eax
	xorl	$1, %eax
	.loc 9 1524 13
	testb	%al, %al
	jne	L4880
	.loc 9 1526 18
	movl	$1954047316, -1808(%ebp)
	movl	$1936028277, -1804(%ebp)
	movl	$47, -1800(%ebp)
	leal	-1796(%ebp), %edx
	movl	$0, %eax
	movl	$97, %ecx
	movl	%edx, %edi
	rep stosl
	.loc 9 1527 19
	movl	-88(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, (%esp)
	call	_strcat
	.loc 9 1529 50
	movl	_total_textures, %eax
	.loc 9 1529 23
	imull	$420, %eax, %eax
	leal	_textures(%eax), %edx
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	__Z10load_imageP6bitmapPKcbb
	.loc 9 1531 43
	movl	-92(%ebp), %eax
	movl	%eax, (%esp)
	call	_strlen
	.loc 9 1531 23
	addl	%eax, -88(%ebp)
	.loc 9 1532 42
	movl	$400, 4(%esp)
	movl	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z13get_dot_indexPci
	movl	%eax, -96(%ebp)
	.loc 9 1533 32
	movl	-96(%ebp), %edx
	movl	-88(%ebp), %eax
	addl	%edx, %eax
	.loc 9 1533 34
	movb	$0, (%eax)
	.loc 9 1535 20
	movl	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	_strlen
	movl	%eax, %ecx
	.loc 9 1535 46
	movl	_total_textures, %eax
	imull	$420, %eax, %eax
	addl	$16, %eax
	addl	$_textures, %eax
	leal	4(%eax), %edx
	.loc 9 1535 20
	movl	%ecx, 8(%esp)
	movl	-88(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	_strncpy
	.loc 9 1537 27
	movl	_total_textures, %eax
	addl	$1, %eax
	movl	%eax, _total_textures
LBE896:
	jmp	L4744
L4880:
LBB898:
	.loc 9 1524 38
	nop
L4744:
LBE898:
LBE895:
LBE894:
	.loc 9 1539 26
	leal	-716(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-84(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__FindNextFileA@8, %eax
	call	*%eax
LVL65:
	subl	$8, %esp
	.loc 9 1539 46
	testl	%eax, %eax
	setne	%al
	testb	%al, %al
	je	L4749
	.loc 9 1512 5
	jmp	L4750
L4749:
	.loc 9 1541 14
	movl	-84(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__FindClose@4, %eax
	call	*%eax
LVL66:
	subl	$4, %esp
	.loc 9 1543 10
	movl	$0, -1128(%ebp)
	leal	-1124(%ebp), %edx
	movl	$0, %eax
	movl	$99, %ecx
	movl	%edx, %edi
	rep stosl
	.loc 9 1544 9
	movl	$1, -40(%ebp)
	.loc 9 1545 10
	movb	$1, -41(%ebp)
	.loc 9 1547 12
	movl	$0, -1148(%ebp)
	movl	$0, -1144(%ebp)
	movl	$0, -1140(%ebp)
	movl	$0, -1136(%ebp)
	movl	$0, -1132(%ebp)
	.loc 9 1548 12
	movl	$0, -1168(%ebp)
	movl	$0, -1164(%ebp)
	movl	$0, -1160(%ebp)
	movl	$0, -1156(%ebp)
	movl	$0, -1152(%ebp)
	.loc 9 1551 10
	movb	$0, -1201(%ebp)
L4862:
LBB899:
	.loc 9 1556 13
	movl	$40, -100(%ebp)
	.loc 9 1557 13
	movl	$20, -104(%ebp)
	.loc 9 1559 43
	movl	_Main_Buffer+4, %eax
	.loc 9 1559 63
	movl	-100(%ebp), %edx
	addl	%edx, %edx
	.loc 9 1559 49
	subl	%edx, %eax
	movl	%eax, %edx
	.loc 9 1559 82
	movl	-104(%ebp), %eax
	addl	%eax, %eax
	.loc 9 1559 67
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 1559 13
	movl	%eax, -1232(%ebp)
	.loc 9 1560 27
	movl	_Main_Buffer+4, %edx
	movl	-1232(%ebp), %eax
	cmpl	%eax, %edx
	jge	L4751
	.loc 9 1560 27 is_stmt 0 discriminator 1
	movl	_Main_Buffer+4, %eax
	jmp	L4752
L4751:
	.loc 9 1560 27 discriminator 2
	movl	-1232(%ebp), %eax
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
L4752:
	.loc 9 1560 25 is_stmt 1 discriminator 4
	movl	%eax, -1232(%ebp)
	.loc 9 1561 30 discriminator 4
	movl	-1232(%ebp), %eax
	movl	%eax, -2068(%ebp)
	fildl	-2068(%ebp)
	fldl	LC259
	fmulp	%st, %st(1)
	.loc 9 1561 13 discriminator 4
	fldl	LC260
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4874
	.loc 9 1561 13 is_stmt 0 discriminator 1
	movl	$300, %eax
	jmp	L4755
L4874:
	.loc 9 1561 30 is_stmt 1 discriminator 2
	movl	-1232(%ebp), %eax
	movl	%eax, -2068(%ebp)
	fildl	-2068(%ebp)
	fldl	LC259
	fmulp	%st, %st(1)
	.loc 9 1561 13 discriminator 2
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4875
	.loc 9 1561 13 is_stmt 0 discriminator 4
	movl	$0, %eax
	jmp	L4755
L4875:
	.loc 9 1561 30 is_stmt 1 discriminator 5
	movl	-1232(%ebp), %eax
	movl	%eax, -2068(%ebp)
	fildl	-2068(%ebp)
	fldl	LC259
	fmulp	%st, %st(1)
	.loc 9 1561 13 discriminator 5
	fnstcw	-2058(%ebp)
	movzwl	-2058(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -2060(%ebp)
	fldcw	-2060(%ebp)
	fistpl	-2064(%ebp)
	fldcw	-2058(%ebp)
	movl	-2064(%ebp), %eax
L4755:
	.loc 9 1561 13 is_stmt 0 discriminator 8
	movl	%eax, -108(%ebp)
	.loc 9 1562 47 is_stmt 1 discriminator 8
	movl	-1232(%ebp), %eax
	subl	-108(%ebp), %eax
	.loc 9 1562 13 discriminator 8
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, -112(%ebp)
	.loc 9 1564 44 discriminator 8
	movl	_Main_Buffer+8, %eax
	.loc 9 1564 65 discriminator 8
	movl	-100(%ebp), %edx
	addl	%edx, %edx
	.loc 9 1564 13 discriminator 8
	subl	%edx, %eax
	movl	%eax, -116(%ebp)
	.loc 9 1565 30 discriminator 8
	fildl	-116(%ebp)
	.loc 9 1565 55 discriminator 8
	fldl	LC261
	fdivrp	%st, %st(1)
	.loc 9 1565 62 discriminator 8
	fldl	LC262
	fsubrp	%st, %st(1)
	.loc 9 1565 15 discriminator 8
	fstps	-120(%ebp)
	.loc 9 1567 13 discriminator 8
	movl	-100(%ebp), %eax
	movl	%eax, -124(%ebp)
	.loc 9 1568 44 discriminator 8
	movl	-124(%ebp), %edx
	movl	-112(%ebp), %eax
	addl	%eax, %edx
	.loc 9 1568 13 discriminator 8
	movl	-104(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -128(%ebp)
	.loc 9 1569 44 discriminator 8
	movl	-128(%ebp), %edx
	movl	-108(%ebp), %eax
	addl	%eax, %edx
	.loc 9 1569 13 discriminator 8
	movl	-104(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -132(%ebp)
	.loc 9 1571 9 discriminator 8
	movl	$0, -48(%ebp)
	.loc 9 1574 45 discriminator 8
	call	__Z22handle_window_messagesv
	movl	%eax, -136(%ebp)
	.loc 9 1575 9 discriminator 8
	cmpl	$-1, -136(%ebp)
	jne	L4759
	.loc 9 1575 34 discriminator 1
	movl	$0, %eax
	jmp	L4883
L4759:
	.loc 9 1579 21
	leal	-1240(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__GetCursorPos@4, %eax
	call	*%eax
LVL67:
	subl	$4, %esp
	.loc 9 1580 53
	movl	-1240(%ebp), %eax
	movl	-1236(%ebp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z25screen_to_window_position8tagPOINT
	movl	%eax, _mouse_position
	movl	%edx, _mouse_position+4
	.loc 9 1583 51
	movl	_Main_Buffer+4, %edx
	.loc 9 1583 71
	movl	_Main_Buffer+8, %eax
	.loc 9 1583 57
	imull	%edx, %eax
	.loc 9 1583 78
	sall	$2, %eax
	.loc 9 1583 15
	movl	%eax, %edx
	.loc 9 1583 28
	movl	_Main_Buffer, %eax
	.loc 9 1583 15
	movl	%edx, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	_memset
	.loc 9 1585 13
	movl	$5, -140(%ebp)
	.loc 9 1587 97
	leal	-2016(%ebp), %eax
	movl	$1, 20(%esp)
	movl	-112(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	$40, 12(%esp)
	movl	-100(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-124(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z10make_paneliiiii
	.loc 9 1588 33
	leal	-2016(%ebp), %eax
	flds	-120(%ebp)
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel11current_rowEif
	subl	$8, %esp
	.loc 9 1590 53
	leal	-1256(%ebp), %eax
	leal	-2016(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel16get_current_rectEv
	subl	$4, %esp
	.loc 9 1591 43
	movl	-1256(%ebp), %eax
	.loc 9 1591 56
	movl	-140(%ebp), %edx
	addl	%edx, %edx
	.loc 9 1591 48
	addl	%edx, %eax
	.loc 9 1591 132
	movl	%eax, -1272(%ebp)
	.loc 9 1591 67
	movl	-1252(%ebp), %eax
	.loc 9 1591 79
	movl	-140(%ebp), %edx
	addl	%edx, %edx
	.loc 9 1591 71
	addl	%edx, %eax
	.loc 9 1591 132
	movl	%eax, -1268(%ebp)
	.loc 9 1591 90
	movl	-1248(%ebp), %eax
	.loc 9 1591 104
	movl	-140(%ebp), %edx
	addl	%edx, %edx
	.loc 9 1591 96
	subl	%edx, %eax
	.loc 9 1591 132
	movl	%eax, -1264(%ebp)
	.loc 9 1591 115
	movl	-1244(%ebp), %eax
	.loc 9 1591 130
	movl	-140(%ebp), %edx
	addl	%edx, %edx
	.loc 9 1591 122
	subl	%edx, %eax
	.loc 9 1591 132
	movl	%eax, -1260(%ebp)
	.loc 9 1594 19
	movl	-1148(%ebp), %eax
	.loc 9 1594 9
	testl	%eax, %eax
	je	L4761
	.loc 9 1595 60
	leal	-2016(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-140(%ebp), %eax
	movl	%eax, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC135, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_buttonEPc13Color_Palettei
	subl	$120, %esp
	movl	%eax, -52(%ebp)
	jmp	L4762
L4761:
	.loc 9 1597 60
	leal	-2016(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-140(%ebp), %eax
	movl	%eax, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC263, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_buttonEPc13Color_Palettei
	subl	$120, %esp
	movl	%eax, -52(%ebp)
L4762:
	.loc 9 1599 32
	movl	$0, -1988(%ebp)
	.loc 9 1601 25
	leal	-2016(%ebp), %eax
	flds	LC22
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1602 25
	leal	-2016(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1603 128
	addl	$1, -48(%ebp)
	.loc 9 1603 49
	leal	-2016(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-48(%ebp), %eax
	movl	%eax, 128(%esp)
	movl	$99, 124(%esp)
	movl	$1, 120(%esp)
	movl	$_settings+8, 116(%esp)
	leal	4(%esp), %eax
	movl	$_slider_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC264, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_sliderEPc13Color_PalettePiiii
	subl	$132, %esp
	movb	%al, -141(%ebp)
	.loc 9 1604 25
	leal	-2016(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1605 45
	addl	$1, -48(%ebp)
	leal	-2016(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-48(%ebp), %eax
	movl	%eax, 128(%esp)
	movl	$99, 124(%esp)
	movl	$1, 120(%esp)
	movl	$_settings+12, 116(%esp)
	leal	4(%esp), %eax
	movl	$_slider_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC265, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_sliderEPc13Color_PalettePiiii
	subl	$132, %esp
	.loc 9 1605 18
	orb	%al, -141(%ebp)
	.loc 9 1606 9
	cmpb	$0, -141(%ebp)
	je	L4763
	.loc 9 1607 29
	movl	_settings+8, %eax
	movl	$1, 24(%esp)
	movl	%eax, 20(%esp)
	movl	-1148(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1140(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1136(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1132(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z16apply_brightness6bitmapib
	.loc 9 1608 27
	movl	_settings+12, %eax
	movl	$0, 24(%esp)
	movl	%eax, 20(%esp)
	movl	-1148(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1140(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1136(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1132(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z14apply_contrast6bitmapib
L4763:
	.loc 9 1611 25
	leal	-2016(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$2, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1612 37
	leal	-2016(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$2, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC266, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_buttonEPc13Color_Palettei
	subl	$120, %esp
	.loc 9 1612 72
	cmpl	$2, %eax
	sete	%al
	.loc 9 1612 9
	testb	%al, %al
	je	L4764
	.loc 9 1613 23
	movl	-1148(%ebp), %eax
	.loc 9 1613 13
	testl	%eax, %eax
	je	L4764
	.loc 9 1613 57 discriminator 1
	leal	-1148(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z26swap_red_and_blue_channelsP6bitmap
L4764:
	.loc 9 1617 100
	leal	-1984(%ebp), %eax
	movl	$1, 20(%esp)
	movl	-112(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	$40, 12(%esp)
	movl	-100(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-132(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z10make_paneliiiii
	.loc 9 1618 33
	leal	-1984(%ebp), %eax
	flds	-120(%ebp)
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel11current_rowEif
	subl	$8, %esp
	.loc 9 1620 53
	leal	-1288(%ebp), %eax
	leal	-1984(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel16get_current_rectEv
	subl	$4, %esp
	.loc 9 1621 46
	movl	-1288(%ebp), %eax
	.loc 9 1621 59
	movl	-140(%ebp), %edx
	addl	%edx, %edx
	.loc 9 1621 51
	addl	%edx, %eax
	.loc 9 1621 135
	movl	%eax, -1304(%ebp)
	.loc 9 1621 70
	movl	-1284(%ebp), %eax
	.loc 9 1621 82
	movl	-140(%ebp), %edx
	addl	%edx, %edx
	.loc 9 1621 74
	addl	%edx, %eax
	.loc 9 1621 135
	movl	%eax, -1300(%ebp)
	.loc 9 1621 93
	movl	-1280(%ebp), %eax
	.loc 9 1621 107
	movl	-140(%ebp), %edx
	addl	%edx, %edx
	.loc 9 1621 99
	subl	%edx, %eax
	.loc 9 1621 135
	movl	%eax, -1296(%ebp)
	.loc 9 1621 118
	movl	-1276(%ebp), %eax
	.loc 9 1621 133
	movl	-140(%ebp), %edx
	addl	%edx, %edx
	.loc 9 1621 125
	subl	%edx, %eax
	.loc 9 1621 135
	movl	%eax, -1292(%ebp)
	.loc 9 1624 27
	movl	-1168(%ebp), %eax
	.loc 9 1624 9
	testl	%eax, %eax
	je	L4765
	.loc 9 1625 64
	leal	-1984(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-140(%ebp), %eax
	movl	%eax, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC135, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_buttonEPc13Color_Palettei
	subl	$120, %esp
	movl	%eax, -56(%ebp)
	jmp	L4766
L4765:
	.loc 9 1627 63
	leal	-1984(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-140(%ebp), %eax
	movl	%eax, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC267, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_buttonEPc13Color_Palettei
	subl	$120, %esp
	movl	%eax, -56(%ebp)
L4766:
	.loc 9 1629 32
	movl	$0, -1956(%ebp)
	.loc 9 1631 25
	leal	-1984(%ebp), %eax
	flds	LC22
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1632 25
	leal	-1984(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1633 128
	addl	$1, -48(%ebp)
	.loc 9 1633 49
	leal	-1984(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-48(%ebp), %eax
	movl	%eax, 128(%esp)
	movl	$99, 124(%esp)
	movl	$1, 120(%esp)
	movl	$_settings, 116(%esp)
	leal	4(%esp), %eax
	movl	$_slider_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC264, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_sliderEPc13Color_PalettePiiii
	subl	$132, %esp
	movb	%al, -142(%ebp)
	.loc 9 1634 25
	leal	-1984(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1635 45
	addl	$1, -48(%ebp)
	leal	-1984(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-48(%ebp), %eax
	movl	%eax, 128(%esp)
	movl	$99, 124(%esp)
	movl	$1, 120(%esp)
	movl	$_settings+4, 116(%esp)
	leal	4(%esp), %eax
	movl	$_slider_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC265, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_sliderEPc13Color_PalettePiiii
	subl	$132, %esp
	.loc 9 1635 18
	orb	%al, -142(%ebp)
	.loc 9 1636 9
	cmpb	$0, -142(%ebp)
	je	L4767
	.loc 9 1637 29
	movl	_settings, %eax
	movl	$1, 24(%esp)
	movl	%eax, 20(%esp)
	movl	-1168(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1164(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1160(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1156(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1152(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z16apply_brightness6bitmapib
	.loc 9 1638 27
	movl	_settings+4, %eax
	movl	$0, 24(%esp)
	movl	%eax, 20(%esp)
	movl	-1168(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1164(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1160(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1156(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1152(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z14apply_contrast6bitmapib
	.loc 9 1639 31
	movl	-1168(%ebp), %eax
	.loc 9 1639 13
	testl	%eax, %eax
	je	L4767
	.loc 9 1639 53 discriminator 1
	movb	$0, -41(%ebp)
L4767:
	.loc 9 1642 25
	leal	-1984(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$2, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1643 37
	leal	-1984(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$2, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC266, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_buttonEPc13Color_Palettei
	subl	$120, %esp
	.loc 9 1643 72
	cmpl	$2, %eax
	sete	%al
	.loc 9 1643 9
	testb	%al, %al
	je	L4768
	.loc 9 1644 31
	movl	-1168(%ebp), %eax
	.loc 9 1644 13
	testl	%eax, %eax
	je	L4768
	.loc 9 1644 65 discriminator 1
	leal	-1168(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z26swap_red_and_blue_channelsP6bitmap
L4768:
LBB900:
	.loc 9 1648 9
	cmpl	$2, -52(%ebp)
	jne	L4769
LBB901:
	.loc 9 1650 48
	movl	$400, 4(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z20open_file_externallyPci
	movb	%al, -143(%ebp)
	.loc 9 1653 13
	cmpb	$0, -143(%ebp)
	je	L4770
	.loc 9 1654 27
	movl	-1148(%ebp), %eax
	.loc 9 1654 17
	testl	%eax, %eax
	je	L4771
	.loc 9 1654 46 discriminator 1
	movl	-1148(%ebp), %eax
	.loc 9 1654 39 discriminator 1
	movl	%eax, (%esp)
	call	_free
L4771:
	.loc 9 1655 41
	movl	$0, 16(%esp)
	leal	-1308(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-1148(%ebp), %eax
	addl	$8, %eax
	movl	%eax, 8(%esp)
	leal	-1148(%ebp), %eax
	addl	$4, %eax
	movl	%eax, 4(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_load
	.loc 9 1655 30
	movl	%eax, -1148(%ebp)
L4770:
	.loc 9 1658 23
	movl	-1148(%ebp), %eax
	.loc 9 1658 13
	testl	%eax, %eax
	je	L4774
	.loc 9 1658 30 discriminator 1
	cmpb	$0, -143(%ebp)
	je	L4774
	.loc 9 1659 27
	movl	-1308(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-1148(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z10adjust_bppP6bitmapi
	.loc 9 1660 34
	leal	-1148(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z17premultiply_alphaP6bitmap
	.loc 9 1662 27
	movl	-1136(%ebp), %eax
	.loc 9 1662 17
	testl	%eax, %eax
	je	L4773
	.loc 9 1662 48 discriminator 1
	movl	-1136(%ebp), %eax
	.loc 9 1662 41 discriminator 1
	movl	%eax, (%esp)
	call	_free
L4773:
	.loc 9 1663 57
	movl	-1144(%ebp), %edx
	.loc 9 1663 71
	movl	-1140(%ebp), %eax
	.loc 9 1663 63
	imull	%edx, %eax
	.loc 9 1663 78
	sall	$2, %eax
	.loc 9 1663 50
	movl	%eax, (%esp)
	call	_malloc
	.loc 9 1663 32
	movl	%eax, -1136(%ebp)
	.loc 9 1664 60
	movl	-1144(%ebp), %edx
	.loc 9 1664 74
	movl	-1140(%ebp), %eax
	.loc 9 1664 66
	imull	%edx, %eax
	.loc 9 1664 81
	sall	$2, %eax
	.loc 9 1664 23
	movl	%eax, %ecx
	.loc 9 1664 46
	movl	-1148(%ebp), %edx
	.loc 9 1664 30
	movl	-1136(%ebp), %eax
	.loc 9 1664 23
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	_memcpy
	.loc 9 1666 23
	leal	-1128(%ebp), %eax
	leal	-1808(%ebp), %edx
	movl	$100, %ecx
	movl	%eax, %edi
	movl	%edx, %esi
	rep movsl
	.loc 9 1668 87
	leal	-2056(%ebp), %eax
	movl	-1272(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	-1268(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-1264(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-1260(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-1148(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1144(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1140(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1136(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1132(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z20reset_zoom_rectangle6bitmap7tagRECT
	movl	-2056(%ebp), %eax
	movl	%eax, -1184(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1180(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1176(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1172(%ebp)
	.loc 9 1669 47
	movl	-1148(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1140(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1136(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1132(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z30compute_dimensions_from_radius6bitmap
	.loc 9 1670 46
	movl	-1148(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1140(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1136(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1132(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z29compute_dimensions_from_width6bitmap
	.loc 9 1672 33
	movl	_settings+8, %eax
	movl	$0, 24(%esp)
	movl	%eax, 20(%esp)
	movl	-1148(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1140(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1136(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1132(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z16apply_brightness6bitmapib
	.loc 9 1673 31
	movl	_settings+12, %eax
	movl	$0, 24(%esp)
	movl	%eax, 20(%esp)
	movl	-1148(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1140(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1136(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1132(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z14apply_contrast6bitmapib
	.loc 9 1675 30
	movl	$1, -40(%ebp)
	jmp	L4774
L4769:
LBE901:
	.loc 9 1677 16
	cmpl	$3, -52(%ebp)
	jne	L4774
	.loc 9 1678 83
	leal	-2056(%ebp), %eax
	movl	-1272(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	-1268(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-1264(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-1260(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-1148(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1144(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1140(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1136(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1132(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z20reset_zoom_rectangle6bitmap7tagRECT
	movl	-2056(%ebp), %eax
	movl	%eax, -1184(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1180(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1176(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1172(%ebp)
	.loc 9 1679 26
	movzbl	_settings+24, %eax
	.loc 9 1679 13
	testb	%al, %al
	je	L4774
	.loc 9 1679 121 discriminator 1
	leal	-2056(%ebp), %eax
	movl	-1304(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	-1300(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-1296(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-1292(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-1168(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1164(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1160(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1156(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1152(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z20reset_zoom_rectangle6bitmap7tagRECT
	movl	-2056(%ebp), %eax
	movl	%eax, -1200(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1196(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1192(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1188(%ebp)
L4774:
LBE900:
	.loc 9 1682 9
	cmpl	$2, -56(%ebp)
	jne	L4775
	.loc 9 1683 23
	movl	-1148(%ebp), %eax
	.loc 9 1683 13
	testl	%eax, %eax
	je	L4776
	.loc 9 1684 36
	movl	-1168(%ebp), %eax
	.loc 9 1684 21
	movl	%eax, (%esp)
	call	_free
	.loc 9 1685 36
	movl	-1156(%ebp), %eax
	.loc 9 1685 21
	movl	%eax, (%esp)
	call	_free
	.loc 9 1687 30
	movl	_settings+52, %eax
	.loc 9 1687 17
	testl	%eax, %eax
	jne	L4777
	.loc 9 1688 60
	leal	-2056(%ebp), %eax
	movl	-1148(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1144(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1140(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1136(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1132(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z17create_image_caps6bitmap
	movl	-2056(%ebp), %eax
	movl	%eax, -1168(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1164(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1160(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1156(%ebp)
	movl	-2040(%ebp), %eax
	movl	%eax, -1152(%ebp)
	jmp	L4778
L4777:
	.loc 9 1690 21
	movl	_settings+52, %eax
	cmpl	$1, %eax
	je	L4781
	.loc 9 1690 21 is_stmt 0 discriminator 2
	movl	$1690, 8(%esp)
	movl	$LC238, 4(%esp)
	movl	$LC268, (%esp)
	call	__assert
L4781:
	.loc 9 1691 63 is_stmt 1
	leal	-2056(%ebp), %eax
	movl	-1148(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1144(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1140(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1136(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1132(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z20create_image_texture6bitmap
	movl	-2056(%ebp), %eax
	movl	%eax, -1168(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1164(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1160(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1156(%ebp)
	movl	-2040(%ebp), %eax
	movl	%eax, -1152(%ebp)
L4778:
	.loc 9 1694 101
	leal	-2056(%ebp), %eax
	movl	-1304(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	-1300(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-1296(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-1292(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-1168(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1164(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1160(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1156(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1152(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z20reset_zoom_rectangle6bitmap7tagRECT
	movl	-2056(%ebp), %eax
	movl	%eax, -1200(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1196(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1192(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1188(%ebp)
	.loc 9 1695 90
	leal	-2056(%ebp), %eax
	movl	-1272(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	-1268(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-1264(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-1260(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-1148(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1144(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1140(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1136(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1132(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z20reset_zoom_rectangle6bitmap7tagRECT
	movl	-2056(%ebp), %eax
	movl	%eax, -1184(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1180(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1176(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1172(%ebp)
	.loc 9 1697 31
	movb	$0, -41(%ebp)
	jmp	L4776
L4775:
	.loc 9 1699 16
	cmpl	$3, -56(%ebp)
	jne	L4776
	.loc 9 1700 97
	leal	-2056(%ebp), %eax
	movl	-1304(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	-1300(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-1296(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-1292(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-1168(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1164(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1160(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1156(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1152(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z20reset_zoom_rectangle6bitmap7tagRECT
	movl	-2056(%ebp), %eax
	movl	%eax, -1200(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1196(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1192(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1188(%ebp)
	.loc 9 1701 26
	movzbl	_settings+24, %eax
	.loc 9 1701 13
	testb	%al, %al
	je	L4776
	.loc 9 1701 107 discriminator 1
	leal	-2056(%ebp), %eax
	movl	-1272(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	-1268(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-1264(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-1260(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-1148(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1144(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1140(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1136(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1132(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z20reset_zoom_rectangle6bitmap7tagRECT
	movl	-2056(%ebp), %eax
	movl	%eax, -1184(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1180(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1176(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1172(%ebp)
L4776:
LBB902:
	.loc 9 1704 32
	movl	_mousewheel_counter, %eax
	.loc 9 1704 9
	testl	%eax, %eax
	je	L4782
LBB903:
	.loc 9 1705 19
	flds	LC269
	fstps	-148(%ebp)
	.loc 9 1706 35
	movl	_mousewheel_counter, %eax
	movl	%eax, -2068(%ebp)
	fildl	-2068(%ebp)
	.loc 9 1706 19
	flds	-148(%ebp)
	fmulp	%st, %st(1)
	fstps	-152(%ebp)
LBB904:
	.loc 9 1708 13
	cmpl	$1, -52(%ebp)
	jne	L4783
LBB905:
	.loc 9 1709 28
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, 24(%esp)
	movl	%edx, 28(%esp)
	flds	-152(%ebp)
	fstps	20(%esp)
	movl	-1272(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1268(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1264(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1260(%ebp), %eax
	movl	%eax, 16(%esp)
	leal	-1184(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11update_zoomP6RECT_f7tagRECTf2v2
LBB906:
	.loc 9 1710 30
	movzbl	_settings+24, %eax
	.loc 9 1710 17
	testb	%al, %al
	je	L4783
LBB907:
	.loc 9 1711 24
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, -1316(%ebp)
	movl	%edx, -1312(%ebp)
	.loc 9 1712 35
	movl	-1316(%ebp), %eax
	.loc 9 1712 61
	movl	-1304(%ebp), %ecx
	.loc 9 1712 87
	movl	-1272(%ebp), %edx
	.loc 9 1712 66
	subl	%edx, %ecx
	movl	%ecx, %edx
	.loc 9 1712 35
	addl	%edx, %eax
	movl	%eax, -1316(%ebp)
	.loc 9 1713 32
	movl	-1316(%ebp), %eax
	movl	-1312(%ebp), %edx
	movl	%eax, 24(%esp)
	movl	%edx, 28(%esp)
	flds	-152(%ebp)
	fstps	20(%esp)
	movl	-1304(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1300(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1296(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1292(%ebp), %eax
	movl	%eax, 16(%esp)
	leal	-1200(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11update_zoomP6RECT_f7tagRECTf2v2
L4783:
LBE907:
LBE906:
LBE905:
LBE904:
LBB908:
	.loc 9 1716 13
	cmpl	$1, -56(%ebp)
	jne	L4785
LBB909:
	.loc 9 1717 28
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, 24(%esp)
	movl	%edx, 28(%esp)
	flds	-152(%ebp)
	fstps	20(%esp)
	movl	-1304(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1300(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1296(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1292(%ebp), %eax
	movl	%eax, 16(%esp)
	leal	-1200(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11update_zoomP6RECT_f7tagRECTf2v2
LBB910:
	.loc 9 1718 30
	movzbl	_settings+24, %eax
	.loc 9 1718 17
	testb	%al, %al
	je	L4785
LBB911:
	.loc 9 1719 24
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, -1324(%ebp)
	movl	%edx, -1320(%ebp)
	.loc 9 1720 35
	movl	-1324(%ebp), %eax
	.loc 9 1720 58
	movl	-1272(%ebp), %ecx
	.loc 9 1720 87
	movl	-1304(%ebp), %edx
	.loc 9 1720 63
	subl	%edx, %ecx
	movl	%ecx, %edx
	.loc 9 1720 35
	addl	%edx, %eax
	movl	%eax, -1324(%ebp)
	.loc 9 1721 32
	movl	-1324(%ebp), %eax
	movl	-1320(%ebp), %edx
	movl	%eax, 24(%esp)
	movl	%edx, 28(%esp)
	flds	-152(%ebp)
	fstps	20(%esp)
	movl	-1272(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1268(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1264(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1260(%ebp), %eax
	movl	%eax, 16(%esp)
	leal	-1184(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11update_zoomP6RECT_f7tagRECTf2v2
L4785:
LBE911:
LBE910:
LBE909:
LBE908:
	.loc 9 1724 32
	movl	$0, _mousewheel_counter
L4782:
LBE903:
LBE902:
LBB912:
	.loc 9 1727 19
	movl	-1148(%ebp), %eax
	.loc 9 1727 9
	testl	%eax, %eax
	je	L4787
LBB913:
	.loc 9 1728 62
	leal	-1340(%ebp), %eax
	movl	-1184(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1180(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1176(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1172(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	%eax, (%esp)
	call	__Z15rect_from_rectf6RECT_f
	.loc 9 1729 36
	movl	-1340(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-1336(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-1332(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-1328(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	-1272(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1268(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1264(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1260(%ebp), %eax
	movl	%eax, 16(%esp)
	leal	-1148(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z23render_bitmap_to_screenP6bitmap7tagRECTS1_
L4787:
LBE913:
LBE912:
LBB914:
	.loc 9 1732 27
	movl	-1168(%ebp), %eax
	.loc 9 1732 9
	testl	%eax, %eax
	je	L4788
LBB915:
	.loc 9 1733 65
	leal	-1356(%ebp), %eax
	movl	-1200(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1196(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1192(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1188(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	%eax, (%esp)
	call	__Z15rect_from_rectf6RECT_f
	.loc 9 1734 36
	movl	-1356(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-1352(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-1348(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-1344(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	-1304(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1300(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1296(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1292(%ebp), %eax
	movl	%eax, 16(%esp)
	leal	-1168(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z23render_bitmap_to_screenP6bitmap7tagRECTS1_
L4788:
LBE915:
LBE914:
	.loc 9 1738 101
	leal	-1952(%ebp), %eax
	movl	$0, 20(%esp)
	movl	-108(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	$30, 12(%esp)
	movl	-100(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-128(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z10make_paneliiiii
	.loc 9 1739 35
	leal	-1952(%ebp), %eax
	flds	LC270
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel11current_rowEif
	subl	$8, %esp
	.loc 9 1740 32
	leal	-1952(%ebp), %eax
	movl	$1, 20(%esp)
	movl	__ZL4BLUE, %edx
	movl	%edx, 4(%esp)
	movl	__ZL4BLUE+4, %edx
	movl	%edx, 8(%esp)
	movl	__ZL4BLUE+8, %edx
	movl	%edx, 12(%esp)
	movl	__ZL4BLUE+12, %edx
	movl	%edx, 16(%esp)
	movl	$LC271, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel8add_textEPc5Colori
	subl	$24, %esp
	.loc 9 1742 27
	leal	-1952(%ebp), %eax
	flds	LC32
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1743 27
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$3, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1744 14
	movb	$0, -153(%ebp)
	.loc 9 1745 60
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$_settings+100, 120(%esp)
	movl	$0, 116(%esp)
	leal	4(%esp), %eax
	movl	$_header_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC272, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_headerEPc13Color_PaletteiPi
	subl	$124, %esp
	.loc 9 1745 31
	orb	%al, -153(%ebp)
	.loc 9 1746 60
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$_settings+100, 120(%esp)
	movl	$1, 116(%esp)
	leal	4(%esp), %eax
	movl	$_header_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC273, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_headerEPc13Color_PaletteiPi
	subl	$124, %esp
	.loc 9 1746 31
	orb	%al, -153(%ebp)
	.loc 9 1747 60
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$_settings+100, 120(%esp)
	movl	$2, 116(%esp)
	leal	4(%esp), %eax
	movl	$_header_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC274, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_headerEPc13Color_PaletteiPi
	subl	$124, %esp
	.loc 9 1747 31
	orb	%al, -153(%ebp)
	.loc 9 1748 9
	cmpb	$0, -153(%ebp)
	je	L4789
	.loc 9 1748 82 discriminator 1
	movzbl	_settings+104, %eax
	.loc 9 1748 72 discriminator 1
	xorl	$1, %eax
	.loc 9 1748 70 discriminator 1
	movb	%al, _settings+104
L4789:
LBB916:
	.loc 9 1750 22
	movl	_settings+100, %eax
	.loc 9 1750 9
	cmpl	$1, %eax
	jne	L4790
	.loc 9 1750 61 discriminator 1
	movzbl	_settings+104, %eax
	.loc 9 1750 49 discriminator 1
	testb	%al, %al
	je	L4790
LBB917:
	.loc 9 1751 31
	leal	-1952(%ebp), %eax
	flds	LC32
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1752 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1753 66
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+68, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC275, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel19push_updown_counterEPc13Color_PalettePvb
	subl	$124, %esp
	movl	%eax, -160(%ebp)
	.loc 9 1754 31
	movl	_settings+68, %edx
	movl	-160(%ebp), %eax
	addl	%edx, %eax
	movl	$1, %edx
	testl	%eax, %eax
	cmovle	%edx, %eax
	.loc 9 1754 29
	movl	%eax, _settings+68
	.loc 9 1755 13
	cmpl	$0, -160(%ebp)
	je	L4791
	.loc 9 1755 66 discriminator 1
	movl	-1148(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1140(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1136(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1132(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z30compute_dimensions_from_radius6bitmap
L4791:
	.loc 9 1757 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1758 65
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+60, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC276, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel19push_updown_counterEPc13Color_PalettePvb
	subl	$124, %esp
	movl	%eax, -164(%ebp)
	.loc 9 1759 30
	movl	_settings+60, %edx
	movl	-164(%ebp), %eax
	addl	%edx, %eax
	movl	$1, %edx
	testl	%eax, %eax
	cmovle	%edx, %eax
	.loc 9 1759 28
	movl	%eax, _settings+60
	.loc 9 1760 13
	cmpl	$0, -164(%ebp)
	je	L4792
	.loc 9 1760 64 discriminator 1
	movl	-1148(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1140(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1136(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1132(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z29compute_dimensions_from_x_hex6bitmap
L4792:
	.loc 9 1762 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1763 65
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+64, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC277, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel19push_updown_counterEPc13Color_PalettePvb
	subl	$124, %esp
	movl	%eax, -168(%ebp)
	.loc 9 1764 30
	movl	_settings+64, %edx
	movl	-168(%ebp), %eax
	addl	%edx, %eax
	movl	$1, %edx
	testl	%eax, %eax
	cmovle	%edx, %eax
	.loc 9 1764 28
	movl	%eax, _settings+64
	.loc 9 1765 13
	cmpl	$0, -168(%ebp)
	je	L4793
	.loc 9 1765 64 discriminator 1
	movl	-1148(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1140(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1136(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1132(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z29compute_dimensions_from_y_hex6bitmap
L4793:
	.loc 9 1767 27
	movzbl	_settings+116, %eax
	.loc 9 1767 17
	xorl	$1, %eax
	.loc 9 1767 13
	testb	%al, %al
	je	L4881
	.loc 9 1767 56 discriminator 1
	movl	_settings+100, %eax
	.loc 9 1767 44 discriminator 1
	cmpl	$1, %eax
	jne	L4881
	.loc 9 1768 35
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1769 44
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+72, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC278, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	subl	$124, %esp
LBE917:
	.loc 9 1770 13
	jmp	L4881
L4790:
LBB918:
LBB919:
	.loc 9 1772 29
	movl	_settings+100, %eax
	.loc 9 1772 16
	testl	%eax, %eax
	jne	L4796
	.loc 9 1772 63 discriminator 1
	movzbl	_settings+104, %eax
	.loc 9 1772 51 discriminator 1
	testb	%al, %al
	je	L4796
LBB920:
	.loc 9 1773 31
	leal	-1952(%ebp), %eax
	flds	LC32
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1774 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1775 65
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+84, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC279, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel19push_updown_counterEPc13Color_PalettePvb
	subl	$124, %esp
	movl	%eax, -172(%ebp)
	.loc 9 1776 30
	movl	_settings+84, %edx
	movl	-172(%ebp), %eax
	addl	%edx, %eax
	movl	$1, %edx
	testl	%eax, %eax
	cmovle	%edx, %eax
	.loc 9 1776 28
	movl	%eax, _settings+84
	.loc 9 1777 13
	cmpl	$0, -172(%ebp)
	je	L4797
	.loc 9 1777 64 discriminator 1
	movl	-1148(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1140(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1136(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1132(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z29compute_dimensions_from_width6bitmap
L4797:
	.loc 9 1779 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1780 66
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+76, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC276, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel19push_updown_counterEPc13Color_PalettePvb
	subl	$124, %esp
	movl	%eax, -176(%ebp)
	.loc 9 1781 31
	movl	_settings+76, %edx
	movl	-176(%ebp), %eax
	addl	%edx, %eax
	movl	$1, %edx
	testl	%eax, %eax
	cmovle	%edx, %eax
	.loc 9 1781 29
	movl	%eax, _settings+76
	.loc 9 1782 13
	cmpl	$0, -176(%ebp)
	je	L4798
	.loc 9 1782 66 discriminator 1
	movl	-1148(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1140(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1136(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1132(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z30compute_dimensions_from_x_grid6bitmap
L4798:
	.loc 9 1784 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1785 66
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+80, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC277, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel19push_updown_counterEPc13Color_PalettePvb
	subl	$124, %esp
	movl	%eax, -180(%ebp)
	.loc 9 1786 31
	movl	_settings+80, %edx
	movl	-180(%ebp), %eax
	addl	%edx, %eax
	movl	$1, %edx
	testl	%eax, %eax
	cmovle	%edx, %eax
	.loc 9 1786 29
	movl	%eax, _settings+80
	.loc 9 1787 13
	cmpl	$0, -180(%ebp)
	je	L4882
	.loc 9 1787 66 discriminator 1
	movl	-1148(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1140(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1136(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-1132(%ebp), %eax
	movl	%eax, 16(%esp)
	call	__Z30compute_dimensions_from_y_grid6bitmap
LBE920:
	.loc 9 1787 73 discriminator 1
	jmp	L4882
L4796:
LBB921:
LBB922:
	.loc 9 1788 29
	movl	_settings+100, %eax
	.loc 9 1788 16
	cmpl	$2, %eax
	jne	L4795
	.loc 9 1788 65 discriminator 1
	movzbl	_settings+104, %eax
	.loc 9 1788 53 discriminator 1
	testb	%al, %al
	je	L4795
LBB923:
	.loc 9 1789 31
	leal	-1952(%ebp), %eax
	flds	LC32
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1790 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1791 73
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+92, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC275, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel19push_updown_counterEPc13Color_PalettePvb
	subl	$124, %esp
	movl	%eax, -184(%ebp)
	.loc 9 1792 38
	movl	_settings+92, %edx
	movl	-184(%ebp), %eax
	addl	%edx, %eax
	movl	$1, %edx
	testl	%eax, %eax
	cmovle	%edx, %eax
	.loc 9 1792 36
	movl	%eax, _settings+92
	.loc 9 1794 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1796 26
	movl	_settings+52, %eax
	.loc 9 1796 13
	testl	%eax, %eax
	jne	L4800
	.loc 9 1797 73
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+88, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC280, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel19push_updown_counterEPc13Color_PalettePvb
	subl	$124, %esp
	movl	%eax, -60(%ebp)
	jmp	L4801
L4800:
	.loc 9 1799 73
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+88, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC281, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel19push_updown_counterEPc13Color_PalettePvb
	subl	$124, %esp
	movl	%eax, -60(%ebp)
L4801:
	.loc 9 1801 38
	movl	_settings+88, %ecx
	movl	-60(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	addl	%ecx, %eax
	movl	$1, %edx
	testl	%eax, %eax
	cmovle	%edx, %eax
	.loc 9 1801 36
	movl	%eax, _settings+88
	.loc 9 1803 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1805 30
	movl	_settings+96, %eax
	cmpl	$1, %eax
	je	L4802
	cmpl	$2, %eax
	je	L4803
	testl	%eax, %eax
	jne	L4804
	.loc 9 1806 73
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC282, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel13push_selectorEPc13Color_Palette
	subl	$116, %esp
	movl	%eax, -64(%ebp)
	.loc 9 1806 109
	jmp	L4804
L4802:
	.loc 9 1807 73
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC283, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel13push_selectorEPc13Color_Palette
	subl	$116, %esp
	movl	%eax, -64(%ebp)
	.loc 9 1807 109
	jmp	L4804
L4803:
	.loc 9 1808 73
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC284, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel13push_selectorEPc13Color_Palette
	subl	$116, %esp
	movl	%eax, -64(%ebp)
	.loc 9 1808 109
	nop
L4804:
	.loc 9 1810 40
	movl	_settings+96, %edx
	movl	-64(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, _settings+96
	.loc 9 1811 26
	movl	_settings+96, %eax
	.loc 9 1811 13
	cmpl	$-1, %eax
	jne	L4805
	.loc 9 1811 99 discriminator 1
	movl	$2, _settings+96
L4805:
	.loc 9 1812 26
	movl	_settings+96, %eax
	.loc 9 1812 13
	cmpl	$3, %eax
	jne	L4795
	.loc 9 1812 99 discriminator 1
	movl	$0, _settings+96
	jmp	L4795
L4881:
LBE923:
LBE922:
LBE921:
LBE919:
LBE918:
	.loc 9 1770 13
	nop
	jmp	L4795
L4882:
LBB925:
LBB924:
	.loc 9 1787 73
	nop
L4795:
LBE924:
LBE925:
LBE916:
LBB926:
	.loc 9 1816 22
	movzbl	_settings+104, %eax
	.loc 9 1816 9
	testb	%al, %al
	je	L4807
LBB927:
	.loc 9 1817 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1818 67
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$1, 120(%esp)
	movl	$_settings+20, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC285, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel19push_updown_counterEPc13Color_PalettePvb
	subl	$124, %esp
	movl	%eax, -2068(%ebp)
	.loc 9 1818 123
	fildl	-2068(%ebp)
	fstps	-68(%ebp)
	.loc 9 1819 13
	flds	LC192
	.loc 9 1819 26
	flds	_settings+20
	.loc 9 1819 13
	fcomip	%st(1), %st
	fstp	%st(0)
	jb	L4877
	.loc 9 1819 50 discriminator 1
	flds	-68(%ebp)
	flds	LC22
	fmulp	%st, %st(1)
	fstps	-68(%ebp)
	jmp	L4810
L4877:
	.loc 9 1820 50
	flds	-68(%ebp)
	fldl	LC286
	fmulp	%st, %st(1)
	fstps	-68(%ebp)
L4810:
	.loc 9 1821 30
	flds	_settings+20
	fadds	-68(%ebp)
	flds	LC287
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4878
	.loc 9 1821 30 is_stmt 0 discriminator 1
	flds	LC287
	jmp	L4813
L4878:
	.loc 9 1821 30 discriminator 2
	flds	_settings+20
	fadds	-68(%ebp)
	fldl	LC286
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4879
	.loc 9 1821 30 discriminator 4
	flds	LC288
	jmp	L4813
L4879:
	.loc 9 1821 30 discriminator 5
	flds	_settings+20
	fadds	-68(%ebp)
L4813:
	.loc 9 1821 28 is_stmt 1 discriminator 8
	fstps	_settings+20
L4807:
LBE927:
LBE926:
	.loc 9 1824 27
	leal	-1952(%ebp), %eax
	flds	LC22
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1825 27
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$2, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1826 14
	movb	$0, -185(%ebp)
	.loc 9 1827 58
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$_settings+52, 120(%esp)
	movl	$0, 116(%esp)
	leal	4(%esp), %eax
	movl	$_header_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC280, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_headerEPc13Color_PaletteiPi
	subl	$124, %esp
	.loc 9 1827 29
	orb	%al, -185(%ebp)
	.loc 9 1828 58
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$_settings+52, 120(%esp)
	movl	$1, 116(%esp)
	leal	4(%esp), %eax
	movl	$_header_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC289, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_headerEPc13Color_PaletteiPi
	subl	$124, %esp
	.loc 9 1828 29
	orb	%al, -185(%ebp)
	.loc 9 1829 9
	cmpb	$0, -185(%ebp)
	je	L4817
	.loc 9 1829 78 discriminator 1
	movzbl	_settings+56, %eax
	.loc 9 1829 68 discriminator 1
	xorl	$1, %eax
	.loc 9 1829 66 discriminator 1
	movb	%al, _settings+56
L4817:
LBB928:
	.loc 9 1831 22
	movl	_settings+52, %eax
	.loc 9 1831 9
	testl	%eax, %eax
	jne	L4818
	.loc 9 1831 64 discriminator 1
	movzbl	_settings+56, %eax
	.loc 9 1831 52 discriminator 1
	testb	%al, %al
	je	L4818
	.loc 9 1832 31
	leal	-1952(%ebp), %eax
	flds	LC32
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1833 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1834 40
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+105, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC290, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	subl	$124, %esp
	.loc 9 1836 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1837 40
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+106, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC291, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	subl	$124, %esp
	.loc 9 1838 26
	movzbl	_settings+106, %eax
	.loc 9 1838 13
	testb	%al, %al
	je	L4820
	.loc 9 1839 35
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1840 38
	leal	-1952(%ebp), %eax
	flds	LC292
	fstps	(%esp)
	movl	%eax, %ecx
	call	__ZN5Panel6indentEf
	subl	$4, %esp
	.loc 9 1841 44
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+107, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC293, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	subl	$124, %esp
	.loc 9 1838 13
	jmp	L4820
L4818:
LBB929:
LBB930:
	.loc 9 1844 29
	movl	_settings+52, %eax
	.loc 9 1844 16
	cmpl	$1, %eax
	jne	L4820
	.loc 9 1844 74 discriminator 1
	movzbl	_settings+56, %eax
	.loc 9 1844 62 discriminator 1
	testb	%al, %al
	je	L4820
LBB931:
	.loc 9 1845 31
	leal	-1952(%ebp), %eax
	flds	LC32
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1847 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1848 80
	movl	_settings+28, %eax
	.loc 9 1848 98
	imull	$420, %eax, %eax
	addl	$16, %eax
	addl	$_textures, %eax
	addl	$4, %eax
	movl	%eax, -2068(%ebp)
	.loc 9 1848 61
	leal	-1952(%ebp), %esi
	movl	%esi, -2072(%ebp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	-2068(%ebp), %eax
	movl	%eax, (%esp)
	movl	-2072(%ebp), %ecx
	call	__ZN5Panel13push_selectorEPc13Color_Palette
	subl	$116, %esp
	movl	%eax, -192(%ebp)
	.loc 9 1849 39
	movl	_settings+28, %edx
	movl	-192(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, _settings+28
	.loc 9 1850 26
	movl	_settings+28, %eax
	.loc 9 1850 13
	cmpl	$-1, %eax
	jne	L4821
	.loc 9 1850 105 discriminator 1
	movl	_total_textures, %eax
	subl	$1, %eax
	.loc 9 1850 88 discriminator 1
	movl	%eax, _settings+28
L4821:
	.loc 9 1851 26
	movl	_settings+28, %edx
	.loc 9 1851 43
	movl	_total_textures, %eax
	.loc 9 1851 13
	cmpl	%eax, %edx
	jne	L4822
	.loc 9 1851 88 discriminator 1
	movl	$0, _settings+28
L4822:
	.loc 9 1853 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1854 39
	addl	$1, -48(%ebp)
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-48(%ebp), %eax
	movl	%eax, 128(%esp)
	movl	$99, 124(%esp)
	movl	$1, 120(%esp)
	movl	$_settings+108, 116(%esp)
	leal	4(%esp), %eax
	movl	$_slider_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC264, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_sliderEPc13Color_PalettePiiii
	subl	$132, %esp
	.loc 9 1856 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1857 39
	addl	$1, -48(%ebp)
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-48(%ebp), %eax
	movl	%eax, 128(%esp)
	movl	$180, 124(%esp)
	movl	$-180, 120(%esp)
	movl	$_settings+112, 116(%esp)
	leal	4(%esp), %eax
	movl	$_slider_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC294, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_sliderEPc13Color_PalettePiiii
	subl	$132, %esp
	.loc 9 1859 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1860 40
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+116, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC295, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	subl	$124, %esp
	.loc 9 1862 26
	movzbl	_settings+116, %eax
	.loc 9 1862 13
	testb	%al, %al
	je	L4823
	.loc 9 1862 69 discriminator 1
	movb	$1, _settings+72
L4823:
	.loc 9 1864 38
	movzbl	_settings+116, %eax
	.loc 9 1864 17
	testb	%al, %al
	je	L4824
	.loc 9 1864 17 is_stmt 0 discriminator 1
	movl	$75, %eax
	jmp	L4825
L4824:
	.loc 9 1864 17 discriminator 2
	movl	$50, %eax
L4825:
	.loc 9 1864 17 discriminator 4
	movl	%eax, -1360(%ebp)
	.loc 9 1865 35 is_stmt 1 discriminator 4
	movl	_settings+124, %edx
	movl	-1360(%ebp), %eax
	cmpl	%eax, %edx
	jg	L4826
	.loc 9 1865 35 is_stmt 0 discriminator 1
	movl	_settings+124, %eax
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	jmp	L4827
L4826:
	.loc 9 1865 35 discriminator 2
	movl	-1360(%ebp), %eax
L4827:
	.loc 9 1865 33 is_stmt 1 discriminator 4
	movl	%eax, _settings+124
	.loc 9 1866 35 discriminator 4
	movl	_settings+120, %edx
	movl	-1360(%ebp), %eax
	cmpl	%eax, %edx
	jg	L4828
	.loc 9 1866 35 is_stmt 0 discriminator 1
	movl	_settings+120, %eax
	movl	$0, %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	jmp	L4829
L4828:
	.loc 9 1866 35 discriminator 2
	movl	-1360(%ebp), %eax
L4829:
	.loc 9 1866 33 is_stmt 1 discriminator 4
	movl	%eax, _settings+120
	.loc 9 1868 31 discriminator 4
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1869 46 discriminator 4
	addl	$1, -48(%ebp)
	movl	-1360(%ebp), %eax
	leal	-1952(%ebp), %esi
	movl	%esi, -2068(%ebp)
	movl	-48(%ebp), %edx
	movl	%edx, 132(%esp)
	movl	%eax, 128(%esp)
	movl	$0, 124(%esp)
	movl	$_settings+120, 120(%esp)
	movl	$_settings+124, 116(%esp)
	leal	4(%esp), %eax
	movl	$_slider_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC296, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel18push_double_sliderEPc13Color_PalettePiS2_iii
	subl	$136, %esp
	.loc 9 1871 31 discriminator 4
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$3, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1872 36 discriminator 4
	leal	-1952(%ebp), %eax
	movl	$-1, 20(%esp)
	movl	__ZL4BLUE, %edx
	movl	%edx, 4(%esp)
	movl	__ZL4BLUE+4, %edx
	movl	%edx, 8(%esp)
	movl	__ZL4BLUE+8, %edx
	movl	%edx, 12(%esp)
	movl	__ZL4BLUE+12, %edx
	movl	%edx, 16(%esp)
	movl	$LC297, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel8add_textEPc5Colori
	subl	$24, %esp
	.loc 9 1873 40 discriminator 4
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+128, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC298, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	subl	$124, %esp
	.loc 9 1874 40 discriminator 4
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+129, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC299, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	subl	$124, %esp
L4820:
LBE931:
LBE930:
LBE929:
LBE928:
	.loc 9 1877 27
	leal	-1952(%ebp), %eax
	flds	LC22
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1878 27
	leal	-1952(%ebp), %eax
	flds	LC270
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1879 51
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$3, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC300, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_buttonEPc13Color_Palettei
	subl	$120, %esp
	movl	%eax, -196(%ebp)
LBB932:
	.loc 9 1880 9
	cmpl	$2, -196(%ebp)
	jne	L4830
LBB933:
	.loc 9 1882 42
	movl	$400, 4(%esp)
	leal	-1128(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z13get_dot_indexPci
	movl	%eax, -200(%ebp)
	.loc 9 1883 13
	cmpl	$0, -200(%ebp)
	jns	L4833
	.loc 9 1883 13 is_stmt 0 discriminator 2
	movl	$1883, 8(%esp)
	movl	$LC238, 4(%esp)
	movl	$LC301, (%esp)
	call	__assert
L4833:
	.loc 9 1886 20 is_stmt 1
	movl	-200(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-1128(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, (%esp)
	call	_strncpy
	.loc 9 1888 39
	leal	-1808(%ebp), %edx
	movl	-200(%ebp), %eax
	addl	%edx, %eax
	movb	$0, (%eax)
	.loc 9 1889 45
	leal	-316(%ebp), %eax
	movl	-40(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZNSt7__cxx119to_stringEi
	.loc 9 1889 19
	leal	-316(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
	movl	%eax, 4(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, (%esp)
	call	_strcat
	.loc 9 1889 45
	leal	-316(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	.loc 9 1890 19
	leal	-1808(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, %edx
	movl	$0, %eax
	movl	%edx, %edi
	repnz scasb
	movl	%ecx, %eax
	notl	%eax
	leal	-1(%eax), %edx
	leal	-1808(%ebp), %eax
	addl	%edx, %eax
	movl	$1718183726, (%eax)
	movb	$0, 4(%eax)
	.loc 9 1892 32
	movl	-1168(%ebp), %eax
	.loc 9 1892 17
	movl	%eax, (%esp)
	call	_free
	.loc 9 1893 32
	movl	-1156(%ebp), %eax
	.loc 9 1893 17
	movl	%eax, (%esp)
	call	_free
	.loc 9 1895 26
	movl	_settings+52, %eax
	.loc 9 1895 13
	testl	%eax, %eax
	jne	L4834
	.loc 9 1896 56
	leal	-2056(%ebp), %eax
	movl	-1148(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1144(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1140(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1136(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1132(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z17create_image_caps6bitmap
	movl	-2056(%ebp), %eax
	movl	%eax, -1168(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1164(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1160(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1156(%ebp)
	movl	-2040(%ebp), %eax
	movl	%eax, -1152(%ebp)
	jmp	L4835
L4834:
	.loc 9 1898 17
	movl	_settings+52, %eax
	cmpl	$1, %eax
	je	L4838
	.loc 9 1898 17 is_stmt 0 discriminator 2
	movl	$1898, 8(%esp)
	movl	$LC238, 4(%esp)
	movl	$LC268, (%esp)
	call	__assert
L4838:
	.loc 9 1899 59 is_stmt 1
	leal	-2056(%ebp), %eax
	movl	-1148(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1144(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1140(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1136(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1132(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z20create_image_texture6bitmap
	movl	-2056(%ebp), %eax
	movl	%eax, -1168(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1164(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1160(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1156(%ebp)
	movl	-2040(%ebp), %eax
	movl	%eax, -1152(%ebp)
L4835:
	.loc 9 1902 23
	movl	$0, -1372(%ebp)
	movl	$0, -1368(%ebp)
	movl	$0, -1364(%ebp)
	.loc 9 1903 82
	movl	-1160(%ebp), %eax
	.loc 9 1903 21
	movl	%eax, %edx
	.loc 9 1903 61
	movl	-1164(%ebp), %eax
	.loc 9 1903 21
	movl	$1, 24(%esp)
	movl	$8, 20(%esp)
	movl	$20, 16(%esp)
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-1372(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z8GifBeginP9GifWriterPKcjjjib
LBB934:
	.loc 9 1905 22
	movl	$0, -72(%ebp)
L4845:
	.loc 9 1905 31 discriminator 1
	cmpl	$15, -72(%ebp)
	jg	L4839
	.loc 9 1906 36
	movl	-1168(%ebp), %eax
	.loc 9 1906 21
	movl	%eax, (%esp)
	call	_free
	.loc 9 1907 36
	movl	-1156(%ebp), %eax
	.loc 9 1907 21
	movl	%eax, (%esp)
	call	_free
	.loc 9 1909 30
	movl	_settings+52, %eax
	.loc 9 1909 17
	testl	%eax, %eax
	jne	L4840
	.loc 9 1910 60
	leal	-2056(%ebp), %eax
	movl	-1148(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1144(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1140(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1136(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1132(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z17create_image_caps6bitmap
	movl	-2056(%ebp), %eax
	movl	%eax, -1168(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1164(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1160(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1156(%ebp)
	movl	-2040(%ebp), %eax
	movl	%eax, -1152(%ebp)
	jmp	L4841
L4840:
	.loc 9 1912 21
	movl	_settings+52, %eax
	cmpl	$1, %eax
	je	L4844
	.loc 9 1912 21 is_stmt 0 discriminator 2
	movl	$1912, 8(%esp)
	movl	$LC238, 4(%esp)
	movl	$LC268, (%esp)
	call	__assert
L4844:
	.loc 9 1913 63 is_stmt 1
	leal	-2056(%ebp), %eax
	movl	-1148(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1144(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1140(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1136(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1132(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z20create_image_texture6bitmap
	movl	-2056(%ebp), %eax
	movl	%eax, -1168(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1164(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1160(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1156(%ebp)
	movl	-2040(%ebp), %eax
	movl	%eax, -1152(%ebp)
L4841:
	.loc 9 1915 43
	leal	-1168(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z26swap_red_and_blue_channelsP6bitmap
	.loc 9 1916 97
	movl	-1160(%ebp), %eax
	.loc 9 1916 30
	movl	%eax, %ecx
	.loc 9 1916 76
	movl	-1164(%ebp), %eax
	.loc 9 1916 30
	movl	%eax, %edx
	.loc 9 1916 54
	movl	-1168(%ebp), %eax
	.loc 9 1916 30
	movl	$1, 24(%esp)
	movl	$8, 20(%esp)
	movl	$20, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	leal	-1372(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z13GifWriteFrameP9GifWriterPKhjjjib
	.loc 9 1905 13
	addl	$1, -72(%ebp)
	jmp	L4845
L4839:
LBE934:
	.loc 9 1918 39
	leal	-1168(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z26swap_red_and_blue_channelsP6bitmap
	.loc 9 1920 19
	leal	-1372(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z6GifEndP9GifWriter
L4830:
LBE933:
LBE932:
	.loc 9 1923 27
	leal	-1952(%ebp), %eax
	flds	LC22
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1924 27
	leal	-1952(%ebp), %eax
	flds	LC192
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1925 47
	cmpb	$0, -41(%ebp)
	je	L4846
	.loc 9 1925 47 is_stmt 0 discriminator 1
	movl	$_no_save_palette, %edx
	jmp	L4847
L4846:
	.loc 9 1925 47 discriminator 2
	movl	$_save_palette, %edx
L4847:
	.loc 9 1925 23 is_stmt 1 discriminator 4
	leal	-1920(%ebp), %eax
	movl	%edx, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	.loc 9 1926 59 discriminator 4
	leal	-1952(%ebp), %ebx
	movl	$3, 116(%esp)
	leal	4(%esp), %eax
	leal	-1920(%ebp), %edx
	movl	$28, %ecx
	movl	%eax, %edi
	movl	%edx, %esi
	rep movsl
	movl	$LC302, (%esp)
	movl	%ebx, %ecx
	call	__ZN5Panel11push_buttonEPc13Color_Palettei
	subl	$120, %esp
	movl	%eax, -204(%ebp)
LBB935:
	.loc 9 1927 9 discriminator 4
	cmpl	$2, -204(%ebp)
	jne	L4848
	.loc 9 1927 71 discriminator 1
	movl	-1168(%ebp), %eax
	.loc 9 1927 54 discriminator 1
	testl	%eax, %eax
	je	L4848
LBB936:
	.loc 9 1928 42
	movl	$400, 4(%esp)
	leal	-1128(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z13get_dot_indexPci
	movl	%eax, -208(%ebp)
	.loc 9 1929 13
	cmpl	$0, -208(%ebp)
	jns	L4851
	.loc 9 1929 13 is_stmt 0 discriminator 2
	movl	$1929, 8(%esp)
	movl	$LC238, 4(%esp)
	movl	$LC301, (%esp)
	call	__assert
L4851:
	.loc 9 1932 20 is_stmt 1
	movl	-208(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-1128(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, (%esp)
	call	_strncpy
	.loc 9 1934 18
	movb	$0, -73(%ebp)
	.loc 9 1936 39
	leal	-1168(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z26swap_red_and_blue_channelsP6bitmap
LBB937:
	.loc 9 1937 26
	movzbl	_settings+16, %eax
	.loc 9 1937 13
	testb	%al, %al
	je	L4852
LBB938:
	.loc 9 1938 43
	leal	-1808(%ebp), %edx
	movl	-208(%ebp), %eax
	addl	%edx, %eax
	movb	$0, (%eax)
	.loc 9 1939 49
	leal	-292(%ebp), %eax
	movl	-40(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZNSt7__cxx119to_stringEi
	.loc 9 1939 23
	leal	-292(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
	movl	%eax, 4(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, (%esp)
	call	_strcat
	.loc 9 1939 49
	leal	-292(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	.loc 9 1940 23
	leal	-1808(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, %edx
	movl	$0, %eax
	movl	%edx, %edi
	repnz scasb
	movl	%ecx, %eax
	notl	%eax
	leal	-1(%eax), %edx
	leal	-1808(%ebp), %eax
	addl	%edx, %eax
	movl	$1735290926, (%eax)
	movb	$0, 4(%eax)
	.loc 9 1941 61
	movl	-1164(%ebp), %eax
	.loc 9 1941 21
	sall	$2, %eax
	movl	%eax, -212(%ebp)
	.loc 9 1942 133
	movl	-1168(%ebp), %ecx
	.loc 9 1942 42
	movl	-1160(%ebp), %edx
	movl	-1164(%ebp), %eax
	movl	-212(%ebp), %ebx
	movl	%ebx, 20(%esp)
	movl	%ecx, 16(%esp)
	movl	$4, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_write_png
	movl	%eax, %edx
	.loc 9 1942 25
	movzbl	-73(%ebp), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	setne	%al
	movb	%al, -73(%ebp)
L4852:
LBE938:
LBE937:
	.loc 9 1945 26
	movzbl	_settings+17, %eax
	.loc 9 1945 13
	testb	%al, %al
	je	L4853
	.loc 9 1946 43
	leal	-1808(%ebp), %edx
	movl	-208(%ebp), %eax
	addl	%edx, %eax
	movb	$0, (%eax)
	.loc 9 1947 49
	leal	-268(%ebp), %eax
	movl	-40(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZNSt7__cxx119to_stringEi
	.loc 9 1947 23
	leal	-268(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
	movl	%eax, 4(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, (%esp)
	call	_strcat
	.loc 9 1947 49
	leal	-268(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	.loc 9 1948 23
	leal	-1808(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, %edx
	movl	$0, %eax
	movl	%edx, %edi
	repnz scasb
	movl	%ecx, %eax
	notl	%eax
	leal	-1(%eax), %edx
	leal	-1808(%ebp), %eax
	addl	%edx, %eax
	movl	$1886216750, (%eax)
	movb	$0, 4(%eax)
	.loc 9 1949 133
	movl	-1168(%ebp), %ecx
	.loc 9 1949 42
	movl	-1160(%ebp), %edx
	movl	-1164(%ebp), %eax
	movl	%ecx, 16(%esp)
	movl	$4, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_write_bmp
	movl	%eax, %edx
	.loc 9 1949 25
	movzbl	-73(%ebp), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	setne	%al
	movb	%al, -73(%ebp)
L4853:
	.loc 9 1952 26
	movzbl	_settings+18, %eax
	.loc 9 1952 13
	testb	%al, %al
	je	L4854
	.loc 9 1953 43
	leal	-1808(%ebp), %edx
	movl	-208(%ebp), %eax
	addl	%edx, %eax
	movb	$0, (%eax)
	.loc 9 1954 49
	leal	-244(%ebp), %eax
	movl	-40(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZNSt7__cxx119to_stringEi
	.loc 9 1954 23
	leal	-244(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
	movl	%eax, 4(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, (%esp)
	call	_strcat
	.loc 9 1954 49
	leal	-244(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	.loc 9 1955 23
	leal	-1808(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, %edx
	movl	$0, %eax
	movl	%edx, %edi
	repnz scasb
	movl	%ecx, %eax
	notl	%eax
	leal	-1(%eax), %edx
	leal	-1808(%ebp), %eax
	addl	%edx, %eax
	movl	$1735420462, (%eax)
	movb	$0, 4(%eax)
	.loc 9 1956 133
	movl	-1168(%ebp), %ecx
	.loc 9 1956 42
	movl	-1160(%ebp), %edx
	movl	-1164(%ebp), %eax
	movl	$100, 20(%esp)
	movl	%ecx, 16(%esp)
	movl	$4, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	leal	-1808(%ebp), %eax
	movl	%eax, (%esp)
	call	_stbi_write_jpg
	movl	%eax, %edx
	.loc 9 1956 25
	movzbl	-73(%ebp), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	setne	%al
	movb	%al, -73(%ebp)
L4854:
	.loc 9 1958 39
	leal	-1168(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z26swap_red_and_blue_channelsP6bitmap
	.loc 9 1960 13
	cmpb	$0, -73(%ebp)
	je	L4848
	.loc 9 1961 29
	addl	$1, -40(%ebp)
	.loc 9 1962 31
	movb	$1, -41(%ebp)
L4848:
LBE936:
LBE935:
	.loc 9 1966 27
	leal	-1952(%ebp), %eax
	flds	LC32
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1967 27
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$3, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1968 36
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+16, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC303, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	subl	$124, %esp
	.loc 9 1969 36
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+17, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC304, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	subl	$124, %esp
	.loc 9 1970 36
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+18, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC305, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	subl	$124, %esp
	.loc 9 1972 27
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1973 56
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+24, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC306, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	subl	$124, %esp
	movb	%al, -213(%ebp)
	.loc 9 1974 9
	cmpb	$0, -213(%ebp)
	je	L4856
	.loc 9 1974 38 discriminator 1
	movzbl	_settings+24, %eax
	.loc 9 1974 26 discriminator 1
	testb	%al, %al
	je	L4856
	.loc 9 1975 31
	movl	-1168(%ebp), %eax
	.loc 9 1975 13
	testl	%eax, %eax
	je	L4857
	.loc 9 1975 123 discriminator 1
	leal	-2056(%ebp), %eax
	movl	-1304(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	-1300(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-1296(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-1292(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-1168(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1164(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1160(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1156(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1152(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z20reset_zoom_rectangle6bitmap7tagRECT
	movl	-2056(%ebp), %eax
	movl	%eax, -1200(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1196(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1192(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1188(%ebp)
L4857:
	.loc 9 1976 23
	movl	-1148(%ebp), %eax
	.loc 9 1976 13
	testl	%eax, %eax
	je	L4856
	.loc 9 1976 120 discriminator 1
	leal	-2056(%ebp), %eax
	movl	-1272(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	-1268(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-1264(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-1260(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-1148(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-1144(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-1140(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-1136(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-1132(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	%eax, (%esp)
	call	__Z20reset_zoom_rectangle6bitmap7tagRECT
	movl	-2056(%ebp), %eax
	movl	%eax, -1184(%ebp)
	movl	-2052(%ebp), %eax
	movl	%eax, -1180(%ebp)
	movl	-2048(%ebp), %eax
	movl	%eax, -1176(%ebp)
	movl	-2044(%ebp), %eax
	movl	%eax, -1172(%ebp)
L4856:
	.loc 9 1979 27
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$2, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1980 36
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$_settings+32, 120(%esp)
	leal	-1201(%ebp), %eax
	movl	%eax, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC307, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	subl	$124, %esp
	.loc 9 1981 36
	leal	-1952(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$0, 120(%esp)
	movl	$_settings+48, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC308, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	subl	$124, %esp
LBB939:
	.loc 9 1983 9
	movzbl	-1201(%ebp), %eax
	testb	%al, %al
	je	L4858
LBB940:
	.loc 9 1984 31
	leal	-1952(%ebp), %eax
	flds	LC288
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1985 31
	leal	-1952(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1986 60
	leal	-1388(%ebp), %eax
	leal	-1952(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel16get_current_rectEv
	subl	$4, %esp
	.loc 9 1987 47
	movl	-1388(%ebp), %eax
	.loc 9 1987 98
	movl	%eax, -1404(%ebp)
	.loc 9 1987 61
	movl	-1384(%ebp), %eax
	.loc 9 1987 98
	movl	%eax, -1400(%ebp)
	.loc 9 1987 74
	movl	-1380(%ebp), %eax
	.loc 9 1987 98
	movl	%eax, -1396(%ebp)
	.loc 9 1987 89
	movl	-1384(%ebp), %eax
	.loc 9 1987 93
	addl	$170, %eax
	.loc 9 1987 98
	movl	%eax, -1392(%ebp)
	.loc 9 1988 36
	movl	__ZL5BLACK, %eax
	movl	%eax, 16(%esp)
	movl	__ZL5BLACK+4, %eax
	movl	%eax, 20(%esp)
	movl	__ZL5BLACK+8, %eax
	movl	%eax, 24(%esp)
	movl	__ZL5BLACK+12, %eax
	movl	%eax, 28(%esp)
	movl	-1404(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1400(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1396(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1392(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
	.loc 9 1989 29
	movl	$5, 32(%esp)
	movl	__ZL5WHITE, %eax
	movl	%eax, 16(%esp)
	movl	__ZL5WHITE+4, %eax
	movl	%eax, 20(%esp)
	movl	__ZL5WHITE+8, %eax
	movl	%eax, 24(%esp)
	movl	__ZL5WHITE+12, %eax
	movl	%eax, 28(%esp)
	movl	-1404(%ebp), %eax
	movl	%eax, (%esp)
	movl	-1400(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-1396(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-1392(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z16render_rectangle7tagRECT5Colorh
	.loc 9 1991 132
	movl	-108(%ebp), %eax
	leal	-20(%eax), %ebx
	.loc 9 1991 92
	movl	-1400(%ebp), %edx
	.loc 9 1991 63
	movl	-1404(%ebp), %eax
	.loc 9 1991 68
	leal	10(%eax), %ecx
	.loc 9 1991 132
	leal	-1808(%ebp), %eax
	movl	$0, 20(%esp)
	movl	%ebx, 16(%esp)
	movl	$30, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z10make_paneliiiii
	.loc 9 1992 37
	leal	-1808(%ebp), %eax
	flds	LC309
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel11current_rowEif
	subl	$8, %esp
	.loc 9 1994 29
	leal	-1808(%ebp), %eax
	flds	LC288
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1995 29
	leal	-1808(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1996 37
	addl	$1, -48(%ebp)
	leal	-1808(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-48(%ebp), %eax
	movl	%eax, 128(%esp)
	movl	$255, 124(%esp)
	movl	$0, 120(%esp)
	movl	$_settings+32, 116(%esp)
	leal	4(%esp), %eax
	movl	$_slider_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC310, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_sliderEPc13Color_PalettePiiii
	subl	$132, %esp
	.loc 9 1997 29
	leal	-1808(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 1998 37
	addl	$1, -48(%ebp)
	leal	-1808(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-48(%ebp), %eax
	movl	%eax, 128(%esp)
	movl	$255, 124(%esp)
	movl	$0, 120(%esp)
	movl	$_settings+36, 116(%esp)
	leal	4(%esp), %eax
	movl	$_slider_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC311, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_sliderEPc13Color_PalettePiiii
	subl	$132, %esp
	.loc 9 1999 29
	leal	-1808(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 2000 37
	addl	$1, -48(%ebp)
	leal	-1808(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-48(%ebp), %eax
	movl	%eax, 128(%esp)
	movl	$255, 124(%esp)
	movl	$0, 120(%esp)
	movl	$_settings+40, 116(%esp)
	leal	4(%esp), %eax
	movl	$_slider_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC312, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_sliderEPc13Color_PalettePiiii
	subl	$132, %esp
	.loc 9 2001 29
	leal	-1808(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$1, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 2002 37
	addl	$1, -48(%ebp)
	leal	-1808(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	-48(%ebp), %eax
	movl	%eax, 128(%esp)
	movl	$255, 124(%esp)
	movl	$0, 120(%esp)
	movl	$_settings+44, 116(%esp)
	leal	4(%esp), %eax
	movl	$_slider_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC313, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_sliderEPc13Color_PalettePiiii
	subl	$132, %esp
	.loc 9 2004 29
	leal	-1808(%ebp), %eax
	fld1
	fstps	4(%esp)
	movl	$2, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel3rowEif
	subl	$8, %esp
	.loc 9 2005 41
	leal	-1808(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$2, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC314, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_buttonEPc13Color_Palettei
	subl	$120, %esp
	.loc 9 2005 68
	cmpl	$2, %eax
	sete	%al
	.loc 9 2005 13
	testb	%al, %al
	je	L4859
	.loc 9 2005 112 discriminator 1
	movl	$0, _settings+32
	movl	$0, _settings+36
	movl	$0, _settings+40
	movl	$255, _settings+44
L4859:
	.loc 9 2006 41
	leal	-1808(%ebp), %eax
	movl	%eax, -2068(%ebp)
	movl	$2, 116(%esp)
	leal	4(%esp), %eax
	movl	$_default_palette, %ebx
	movl	$28, %edx
	movl	%eax, %edi
	movl	%ebx, %esi
	movl	%edx, %ecx
	rep movsl
	movl	$LC315, (%esp)
	movl	-2068(%ebp), %ecx
	call	__ZN5Panel11push_buttonEPc13Color_Palettei
	subl	$120, %esp
	.loc 9 2006 68
	cmpl	$2, %eax
	sete	%al
	.loc 9 2006 13
	testb	%al, %al
	je	L4858
	.loc 9 2006 112 discriminator 1
	movb	$0, -1201(%ebp)
L4858:
LBE940:
LBE939:
	.loc 9 2009 29
	movb	$1, _handled_press_left
	.loc 9 2010 29
	movb	$1, _handled_press_right
	.loc 9 2011 35
	call	__Z26blit_main_buffer_to_windowv
	.loc 9 2013 9
	leal	-384(%ebp), %eax
	movl	%eax, (%esp)
	movl	__imp__QueryPerformanceCounter@4, %eax
	call	*%eax
LVL68:
	subl	$4, %esp
	.loc 9 2014 26
	movl	-384(%ebp), %ecx
	movl	-380(%ebp), %ebx
	movl	-376(%ebp), %eax
	movl	-372(%ebp), %edx
	subl	%eax, %ecx
	sbbl	%edx, %ebx
	movl	-368(%ebp), %eax
	cltd
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	movl	%ecx, (%esp)
	movl	%ebx, 4(%esp)
	call	___divdi3
LVL69:
	.loc 9 2014 13
	movl	%eax, -220(%ebp)
	.loc 9 2015 9
	cmpl	$32, -220(%ebp)
	jg	L4861
	.loc 9 2015 39 discriminator 1
	movl	$33, %eax
	subl	-220(%ebp), %eax
	.loc 9 2015 35 discriminator 1
	movl	%eax, (%esp)
	movl	__imp__Sleep@4, %eax
	call	*%eax
LVL70:
	subl	$4, %esp
L4861:
	.loc 9 2016 12
	movl	-384(%ebp), %eax
	movl	-380(%ebp), %edx
	movl	%eax, -376(%ebp)
	movl	%edx, -372(%ebp)
LBE899:
	.loc 9 2017 5
	jmp	L4862
L4867:
	movl	%eax, %ebx
LBB941:
LBB893:
	leal	-364(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	jmp	L4864
L4866:
	movl	%eax, %ebx
L4864:
	leal	-340(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	movl	%ebx, %eax
	movl	%eax, (%esp)
	call	__Unwind_Resume
L4868:
	movl	%eax, %ebx
	.loc 9 1503 60
	leal	-1228(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
	movl	%ebx, %eax
	movl	%eax, (%esp)
	call	__Unwind_Resume
LEHE7:
L4883:
LBE893:
LBE941:
	.loc 9 2018 1
	leal	-16(%ebp), %esp
	popl	%ecx
	.cfi_restore 1
	.cfi_def_cfa 1, 0
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	leal	-4(%ecx), %esp
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2216:
	.section	.gcc_except_table,"w"
LLSDA2216:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 LLSDACSE2216-LLSDACSB2216
LLSDACSB2216:
	.uleb128 LEHB3-LFB2216
	.uleb128 LEHE3-LEHB3
	.uleb128 0
	.uleb128 0
	.uleb128 LEHB4-LFB2216
	.uleb128 LEHE4-LEHB4
	.uleb128 L4866-LFB2216
	.uleb128 0
	.uleb128 LEHB5-LFB2216
	.uleb128 LEHE5-LEHB5
	.uleb128 L4867-LFB2216
	.uleb128 0
	.uleb128 LEHB6-LFB2216
	.uleb128 LEHE6-LEHB6
	.uleb128 L4868-LFB2216
	.uleb128 0
	.uleb128 LEHB7-LFB2216
	.uleb128 LEHE7-LEHB7
	.uleb128 0
	.uleb128 0
LLSDACSE2216:
	.text
	.align 2
	.globl	__ZN5Panel3rowEif
	.def	__ZN5Panel3rowEif;	.scl	2;	.type	32;	.endef
__ZN5Panel3rowEif:
LFB2217:
	.loc 9 2020 51
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	movl	%ecx, -4(%ebp)
	.loc 9 2021 10
	movl	-4(%ebp), %eax
	movl	24(%eax), %edx
	.loc 9 2021 13
	movl	-4(%ebp), %eax
	movl	12(%eax), %eax
	.loc 9 2021 10
	addl	%eax, %edx
	movl	-4(%ebp), %eax
	movl	%edx, 24(%eax)
	.loc 9 2022 13
	movl	-4(%ebp), %eax
	movl	(%eax), %edx
	.loc 9 2022 11
	movl	-4(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 9 2025 20
	movl	-4(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 2025 32
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	fmuls	12(%ebp)
	.loc 9 2025 18
	fnstcw	-6(%ebp)
	movzwl	-6(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -8(%ebp)
	fldcw	-8(%ebp)
	fistpl	-12(%ebp)
	fldcw	-6(%ebp)
	movl	-12(%ebp), %edx
	movl	-4(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 9 2026 20
	movl	-4(%ebp), %eax
	movl	4(%eax), %eax
	.loc 9 2026 31
	cltd
	idivl	8(%ebp)
	movl	%eax, %edx
	.loc 9 2026 18
	movl	-4(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 9 2027 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$8
	.cfi_endproc
LFE2217:
	.align 2
	.globl	__ZN5Panel11current_rowEif
	.def	__ZN5Panel11current_rowEif;	.scl	2;	.type	32;	.endef
__ZN5Panel11current_rowEif:
LFB2218:
	.loc 9 2029 59
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	movl	%ecx, -4(%ebp)
	.loc 9 2030 20
	movl	-4(%ebp), %eax
	movl	8(%eax), %eax
	.loc 9 2030 32
	movl	%eax, -16(%ebp)
	fildl	-16(%ebp)
	fmuls	12(%ebp)
	.loc 9 2030 18
	fnstcw	-6(%ebp)
	movzwl	-6(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -8(%ebp)
	fldcw	-8(%ebp)
	fistpl	-12(%ebp)
	fldcw	-6(%ebp)
	movl	-12(%ebp), %edx
	movl	-4(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 9 2031 20
	movl	-4(%ebp), %eax
	movl	4(%eax), %eax
	.loc 9 2031 31
	cltd
	idivl	8(%ebp)
	movl	%eax, %edx
	.loc 9 2031 18
	movl	-4(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 9 2032 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$8
	.cfi_endproc
LFE2218:
	.align 2
	.globl	__ZN5Panel6indentEf
	.def	__ZN5Panel6indentEf;	.scl	2;	.type	32;	.endef
__ZN5Panel6indentEf:
LFB2219:
	.loc 9 2034 45
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$28, %esp
	movl	%ecx, -20(%ebp)
	.loc 9 2035 41
	movl	-20(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2035 39
	movl	%eax, -28(%ebp)
	fildl	-28(%ebp)
	fmuls	8(%ebp)
	.loc 9 2035 9
	fnstcw	-22(%ebp)
	movzwl	-22(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -24(%ebp)
	fldcw	-24(%ebp)
	fistpl	-4(%ebp)
	fldcw	-22(%ebp)
	.loc 9 2036 10
	movl	-20(%ebp), %eax
	movl	20(%eax), %edx
	movl	-4(%ebp), %eax
	addl	%eax, %edx
	movl	-20(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 9 2037 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$4
	.cfi_endproc
LFE2219:
	.align 2
	.globl	__ZN5Panel16get_current_rectEv
	.def	__ZN5Panel16get_current_rectEv;	.scl	2;	.type	32;	.endef
__ZN5Panel16get_current_rectEv:
LFB2220:
	.loc 9 2039 32
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%esi
	pushl	%ebx
	subl	$48, %esp
	.cfi_offset 6, -12
	.cfi_offset 3, -16
	movl	%ecx, -12(%ebp)
	.loc 9 2040 57
	movl	8(%ebp), %eax
	movl	12(%eax), %esi
	movl	8(%ebp), %eax
	movl	16(%eax), %ebx
	movl	8(%ebp), %eax
	movl	24(%eax), %ecx
	movl	8(%ebp), %eax
	movl	20(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%esi, 16(%esp)
	movl	%ebx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2041 1
	movl	-12(%ebp), %eax
	addl	$48, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$4
	.cfi_endproc
LFE2220:
	.align 2
	.globl	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color
	.def	__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color;	.scl	2;	.type	32;	.endef
__ZN5Panel12push_togglerEPc13Color_PalettePbP5Color:
LFB2221:
	.loc 9 2043 99
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$180, %esp
	.cfi_offset 3, -12
	movl	%ecx, -124(%ebp)
	.loc 9 2044 9
	movl	$2, -12(%ebp)
	.loc 9 2045 23
	movl	-124(%ebp), %eax
	movl	12(%eax), %eax
	.loc 9 2045 38
	movl	-12(%ebp), %edx
	addl	%edx, %edx
	.loc 9 2045 9
	subl	%edx, %eax
	movl	%eax, -16(%ebp)
	.loc 9 2046 23
	movl	-124(%ebp), %eax
	movl	12(%eax), %ecx
	.loc 9 2046 38
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %edx
	subl	%edx, %eax
	addl	%eax, %eax
	.loc 9 2046 9
	addl	%ecx, %eax
	movl	%eax, -20(%ebp)
	.loc 9 2048 55
	movl	-124(%ebp), %eax
	movl	24(%eax), %edx
	.loc 9 2048 97
	movl	-12(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 9 2048 33
	movl	-124(%ebp), %eax
	movl	20(%eax), %edx
	.loc 9 2048 97
	movl	-12(%ebp), %eax
	leal	(%edx,%eax), %ecx
	leal	-48(%ebp), %eax
	movl	-16(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-16(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%ebx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2049 55
	movl	-124(%ebp), %eax
	movl	24(%eax), %ecx
	.loc 9 2049 72
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	.loc 9 2049 101
	leal	(%ecx,%eax), %ebx
	.loc 9 2049 33
	movl	-124(%ebp), %eax
	movl	20(%eax), %ecx
	.loc 9 2049 50
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	.loc 9 2049 101
	addl	%eax, %ecx
	leal	-64(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-20(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%ebx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2051 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_strlen
	.loc 9 2051 9
	movl	%eax, -24(%ebp)
	.loc 9 2052 23
	movl	-24(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	movl	_Font+20, %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	movl	-124(%ebp), %eax
	movl	28(%eax), %eax
	flds	_Font(,%eax,4)
	fmulp	%st, %st(1)
	fmulp	%st, %st(1)
	movl	-124(%ebp), %eax
	movl	16(%eax), %eax
	subl	-16(%ebp), %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	.loc 9 2052 9
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L4908
	.loc 9 2052 23 discriminator 1
	movl	-24(%ebp), %eax
	addl	$2, %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	movl	_Font+20, %eax
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	movl	-124(%ebp), %eax
	movl	28(%eax), %eax
	flds	_Font(,%eax,4)
	fmulp	%st, %st(1)
	fmulp	%st, %st(1)
	.loc 9 2052 9 discriminator 1
	fnstcw	-126(%ebp)
	movzwl	-126(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -128(%ebp)
	fldcw	-128(%ebp)
	fistpl	-132(%ebp)
	fldcw	-126(%ebp)
	movl	-132(%ebp), %eax
	jmp	L4892
L4908:
	.loc 9 2052 23 discriminator 2
	movl	-124(%ebp), %eax
	movl	16(%eax), %eax
	subl	-16(%ebp), %eax
	.loc 9 2052 9 discriminator 2
	movl	%eax, -136(%ebp)
	fildl	-136(%ebp)
	fnstcw	-126(%ebp)
	movzwl	-126(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -128(%ebp)
	fldcw	-128(%ebp)
	fistpl	-132(%ebp)
	fldcw	-126(%ebp)
	movl	-132(%ebp), %eax
L4892:
	.loc 9 2052 9 is_stmt 0 discriminator 4
	movl	%eax, -28(%ebp)
	.loc 9 2053 78 is_stmt 1 discriminator 4
	movl	-124(%ebp), %eax
	movl	12(%eax), %ecx
	movl	-124(%ebp), %eax
	movl	24(%eax), %edx
	.loc 9 2053 32 discriminator 4
	movl	-124(%ebp), %eax
	movl	20(%eax), %ebx
	.loc 9 2053 78 discriminator 4
	movl	-16(%ebp), %eax
	addl	%eax, %ebx
	leal	-80(%ebp), %eax
	movl	%ecx, 16(%esp)
	movl	-28(%ebp), %ecx
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%ebx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2055 35 discriminator 4
	movl	-48(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2055 65 discriminator 4
	testb	%al, %al
	jne	L4893
	.loc 9 2055 82 discriminator 2
	movl	-80(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2055 65 discriminator 2
	testb	%al, %al
	je	L4894
L4893:
	.loc 9 2055 65 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L4895
L4894:
	.loc 9 2055 65 discriminator 4
	movl	$0, %eax
L4895:
	.loc 9 2055 108 is_stmt 1 discriminator 6
	movb	%al, -29(%ebp)
	.loc 9 2056 33 discriminator 6
	cmpb	$0, -29(%ebp)
	je	L4896
	.loc 9 2056 45 discriminator 1
	movzbl	_sliders, %eax
	.loc 9 2056 36 discriminator 1
	xorl	$1, %eax
	.loc 9 2056 33 discriminator 1
	testb	%al, %al
	je	L4896
	.loc 9 2056 33 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L4897
L4896:
	.loc 9 2056 33 discriminator 4
	movl	$0, %eax
L4897:
	.loc 9 2056 10 is_stmt 1 discriminator 6
	movb	%al, -30(%ebp)
	.loc 9 2058 38 discriminator 6
	cmpb	$0, -30(%ebp)
	je	L4898
	.loc 9 2058 38 is_stmt 0 discriminator 1
	leal	12(%ebp), %eax
	addl	$16, %eax
	jmp	L4899
L4898:
	.loc 9 2058 38 discriminator 2
	leal	12(%ebp), %eax
L4899:
	.loc 9 2058 11 is_stmt 1 discriminator 4
	movl	(%eax), %edx
	movl	%edx, -96(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -92(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -88(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -84(%ebp)
	.loc 9 2059 38 discriminator 4
	cmpb	$0, -30(%ebp)
	je	L4900
	.loc 9 2059 38 is_stmt 0 discriminator 1
	leal	12(%ebp), %eax
	addl	$80, %eax
	jmp	L4901
L4900:
	.loc 9 2059 38 discriminator 2
	leal	12(%ebp), %eax
	addl	$64, %eax
L4901:
	.loc 9 2059 11 is_stmt 1 discriminator 4
	movl	(%eax), %edx
	movl	%edx, -112(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -108(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -104(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -100(%ebp)
	.loc 9 2061 21 discriminator 4
	movl	-12(%ebp), %eax
	movzbl	%al, %eax
	movl	%eax, 32(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-88(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-84(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z16render_rectangle7tagRECT5Colorh
	.loc 9 2062 5 discriminator 4
	cmpl	$0, 128(%ebp)
	je	L4902
	.loc 9 2062 48 discriminator 1
	movl	128(%ebp), %eax
	movl	(%eax), %edx
	movl	%edx, 16(%esp)
	movl	4(%eax), %edx
	movl	%edx, 20(%esp)
	movl	8(%eax), %edx
	movl	%edx, 24(%esp)
	movl	12(%eax), %eax
	movl	%eax, 28(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	movl	-60(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
	jmp	L4903
L4902:
	.loc 9 2063 14
	movl	124(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 9 2063 10
	testb	%al, %al
	je	L4903
	.loc 9 2063 48 discriminator 1
	movl	-96(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-88(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-84(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	movl	-60(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
L4903:
	.loc 9 2064 16
	movl	-124(%ebp), %eax
	movl	28(%eax), %eax
	movl	-112(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-108(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-104(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-100(%ebp), %edx
	movl	%edx, 40(%esp)
	movl	-80(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-76(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-72(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	-68(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	%eax, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
	.loc 9 2066 10
	movl	-124(%ebp), %eax
	movl	20(%eax), %edx
	.loc 9 2066 13
	movl	-124(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2066 10
	addl	%eax, %edx
	movl	-124(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 9 2068 5
	cmpb	$0, -30(%ebp)
	je	L4904
	.loc 9 2068 21 discriminator 1
	movzbl	_left_button_down, %eax
	testb	%al, %al
	je	L4904
	.loc 9 2068 44 discriminator 2
	movzbl	_handled_press_left, %eax
	xorl	$1, %eax
	.loc 9 2068 41 discriminator 2
	testb	%al, %al
	je	L4904
	.loc 9 2069 22
	movl	124(%ebp), %eax
	movzbl	(%eax), %eax
	.loc 9 2069 20
	xorl	$1, %eax
	movl	%eax, %edx
	.loc 9 2069 18
	movl	124(%ebp), %eax
	movb	%dl, (%eax)
	.loc 9 2070 16
	movl	$1, %eax
	jmp	L4906
L4904:
	.loc 9 2072 12
	movl	$0, %eax
L4906:
	.loc 9 2073 1 discriminator 1
	addl	$180, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$124
	.cfi_endproc
LFE2221:
	.align 2
	.globl	__ZN5Panel19push_updown_counterEPc13Color_PalettePvb
	.def	__ZN5Panel19push_updown_counterEPc13Color_PalettePvb;	.scl	2;	.type	32;	.endef
__ZN5Panel19push_updown_counterEPc13Color_PalettePvb:
LFB2222:
	.loc 9 2075 95
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%esi
	pushl	%ebx
	subl	$240, %esp
	.cfi_offset 6, -12
	.cfi_offset 3, -16
	movl	%ecx, -172(%ebp)
	movl	128(%ebp), %eax
	movb	%al, -176(%ebp)
	.loc 9 2076 9
	movl	$2, -12(%ebp)
	.loc 9 2077 21
	movl	-172(%ebp), %eax
	movl	12(%eax), %eax
	.loc 9 2077 36
	movl	-12(%ebp), %edx
	addl	%edx, %edx
	.loc 9 2077 9
	subl	%edx, %eax
	movl	%eax, -16(%ebp)
	.loc 9 2079 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_strlen
	.loc 9 2079 9
	movl	%eax, -20(%ebp)
	.loc 9 2081 50
	movl	-172(%ebp), %eax
	movl	24(%eax), %edx
	.loc 9 2081 92
	movl	-12(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 9 2081 32
	movl	-172(%ebp), %eax
	movl	20(%eax), %edx
	.loc 9 2081 92
	movl	-12(%ebp), %eax
	leal	(%edx,%eax), %ecx
	leal	-56(%ebp), %eax
	movl	-16(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-16(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%ebx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2082 92
	movl	-16(%ebp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	leal	(%eax,%edx), %esi
	movl	-172(%ebp), %eax
	movl	24(%eax), %ecx
	.loc 9 2082 43
	movl	-48(%ebp), %edx
	.loc 9 2082 92
	leal	-72(%ebp), %eax
	movl	-16(%ebp), %ebx
	movl	%ebx, 16(%esp)
	movl	%esi, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2083 50
	movl	-172(%ebp), %eax
	movl	24(%eax), %edx
	.loc 9 2083 92
	movl	-12(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 9 2083 43
	movl	-64(%ebp), %edx
	.loc 9 2083 92
	leal	-88(%ebp), %eax
	movl	-16(%ebp), %ecx
	movl	%ecx, 16(%esp)
	movl	-16(%ebp), %ecx
	movl	%ecx, 12(%esp)
	movl	%ebx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2084 62
	movl	_Font+20, %eax
	.loc 9 2084 70
	movl	%eax, -188(%ebp)
	fildl	-188(%ebp)
	.loc 9 2084 83
	movl	-172(%ebp), %eax
	movl	28(%eax), %eax
	.loc 9 2084 92
	flds	_Font(,%eax,4)
	.loc 9 2084 70
	fmulp	%st, %st(1)
	.loc 9 2084 110
	movl	-20(%ebp), %eax
	addl	$2, %eax
	.loc 9 2084 95
	movl	%eax, -188(%ebp)
	fildl	-188(%ebp)
	fmulp	%st, %st(1)
	.loc 9 2084 125
	fnstcw	-174(%ebp)
	movzwl	-174(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -178(%ebp)
	fldcw	-178(%ebp)
	fistpl	-184(%ebp)
	fldcw	-174(%ebp)
	movl	-184(%ebp), %esi
	movl	-172(%ebp), %eax
	movl	24(%eax), %ecx
	.loc 9 2084 42
	movl	-80(%ebp), %edx
	.loc 9 2084 125
	leal	-104(%ebp), %eax
	movl	-16(%ebp), %ebx
	movl	%ebx, 16(%esp)
	movl	%esi, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2086 38
	leal	-40(%ebp), %eax
	movl	-172(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel16get_current_rectEv
	subl	$4, %esp
	movl	-40(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2086 75
	testb	%al, %al
	je	L4910
	.loc 9 2086 87 discriminator 1
	movzbl	_sliders, %eax
	.loc 9 2086 78 discriminator 1
	xorl	$1, %eax
	.loc 9 2086 75 discriminator 1
	testb	%al, %al
	je	L4910
	.loc 9 2086 75 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L4911
L4910:
	.loc 9 2086 75 discriminator 4
	movl	$0, %eax
L4911:
	.loc 9 2086 87 is_stmt 1 discriminator 6
	movb	%al, -21(%ebp)
	.loc 9 2088 38 discriminator 6
	cmpb	$0, -21(%ebp)
	je	L4912
	.loc 9 2088 38 is_stmt 0 discriminator 1
	leal	12(%ebp), %eax
	addl	$16, %eax
	jmp	L4913
L4912:
	.loc 9 2088 38 discriminator 2
	leal	12(%ebp), %eax
L4913:
	.loc 9 2088 11 is_stmt 1 discriminator 4
	movl	(%eax), %edx
	movl	%edx, -120(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -116(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -112(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -108(%ebp)
	.loc 9 2089 38 discriminator 4
	cmpb	$0, -21(%ebp)
	je	L4914
	.loc 9 2089 38 is_stmt 0 discriminator 1
	leal	12(%ebp), %eax
	addl	$48, %eax
	jmp	L4915
L4914:
	.loc 9 2089 38 discriminator 2
	leal	12(%ebp), %eax
	addl	$32, %eax
L4915:
	.loc 9 2089 11 is_stmt 1 discriminator 4
	movl	(%eax), %edx
	movl	%edx, -136(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -132(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -128(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -124(%ebp)
	.loc 9 2090 38 discriminator 4
	cmpb	$0, -21(%ebp)
	je	L4916
	.loc 9 2090 38 is_stmt 0 discriminator 1
	leal	12(%ebp), %eax
	addl	$80, %eax
	jmp	L4917
L4916:
	.loc 9 2090 38 discriminator 2
	leal	12(%ebp), %eax
	addl	$64, %eax
L4917:
	.loc 9 2090 11 is_stmt 1 discriminator 4
	movl	(%eax), %edx
	movl	%edx, -152(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -148(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -144(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -140(%ebp)
	.loc 9 2092 10 discriminator 4
	movw	$43, -154(%ebp)
	.loc 9 2093 16 discriminator 4
	movl	-172(%ebp), %eax
	movl	28(%eax), %eax
	movl	-120(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-116(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-112(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-108(%ebp), %edx
	movl	%edx, 40(%esp)
	movl	-88(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-84(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-80(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	-76(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	%eax, 8(%esp)
	movl	$1, 4(%esp)
	leal	-154(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
	.loc 9 2094 13 discriminator 4
	movb	$45, -154(%ebp)
	.loc 9 2095 16 discriminator 4
	movl	-172(%ebp), %eax
	movl	28(%eax), %eax
	movl	-120(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-116(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-112(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-108(%ebp), %edx
	movl	%edx, 40(%esp)
	movl	-56(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-52(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-48(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	-44(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	%eax, 8(%esp)
	movl	$1, 4(%esp)
	leal	-154(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
	.loc 9 2097 21 discriminator 4
	movl	-12(%ebp), %eax
	movzbl	%al, %eax
	movl	%eax, 32(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-116(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-112(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-108(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, (%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z16render_rectangle7tagRECT5Colorh
	.loc 9 2098 21 discriminator 4
	movl	-12(%ebp), %eax
	movzbl	%al, %eax
	movl	%eax, 32(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-116(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-112(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-108(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-88(%ebp), %eax
	movl	%eax, (%esp)
	movl	-84(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z16render_rectangle7tagRECT5Colorh
	.loc 9 2099 16 discriminator 4
	movl	-172(%ebp), %eax
	movl	28(%eax), %eax
	movl	-152(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-148(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-144(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-140(%ebp), %edx
	movl	%edx, 40(%esp)
	movl	-104(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-100(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-96(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	-92(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
	.loc 9 2101 5 discriminator 4
	cmpb	$0, -176(%ebp)
	je	L4918
	.loc 9 2101 30 discriminator 1
	movl	-172(%ebp), %eax
	movl	28(%eax), %eax
	movl	124(%ebp), %edx
	flds	(%edx)
	movl	-136(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-132(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-128(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-124(%ebp), %edx
	movl	%edx, 40(%esp)
	movl	-72(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-68(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-64(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	-60(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	%eax, 8(%esp)
	movl	$2, 4(%esp)
	fstps	(%esp)
	call	__Z11render_textfii7tagRECT5Color
	jmp	L4919
L4918:
	.loc 9 2102 30
	movl	-172(%ebp), %eax
	movl	28(%eax), %edx
	movl	124(%ebp), %eax
	movl	(%eax), %eax
	movl	-136(%ebp), %ecx
	movl	%ecx, 24(%esp)
	movl	-132(%ebp), %ecx
	movl	%ecx, 28(%esp)
	movl	-128(%ebp), %ecx
	movl	%ecx, 32(%esp)
	movl	-124(%ebp), %ecx
	movl	%ecx, 36(%esp)
	movl	-72(%ebp), %ecx
	movl	%ecx, 8(%esp)
	movl	-68(%ebp), %ecx
	movl	%ecx, 12(%esp)
	movl	-64(%ebp), %ecx
	movl	%ecx, 16(%esp)
	movl	-60(%ebp), %ecx
	movl	%ecx, 20(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z11render_textii7tagRECT5Color
L4919:
	.loc 9 2104 10
	movl	-172(%ebp), %eax
	movl	20(%eax), %edx
	.loc 9 2104 13
	movl	-172(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2104 10
	addl	%eax, %edx
	movl	-172(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 9 2106 5
	movzbl	_left_button_down, %eax
	testb	%al, %al
	je	L4920
	.loc 9 2106 29 discriminator 1
	movzbl	_handled_press_left, %eax
	xorl	$1, %eax
	.loc 9 2106 26 discriminator 1
	testb	%al, %al
	je	L4920
	.loc 9 2107 27
	movl	-56(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2107 9
	testb	%al, %al
	je	L4921
	.loc 9 2107 65 discriminator 1
	movl	$-1, %eax
	jmp	L4925
L4921:
	.loc 9 2108 27
	movl	-88(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-84(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2108 9
	testb	%al, %al
	je	L4920
	.loc 9 2108 65 discriminator 1
	movl	$1, %eax
	jmp	L4925
L4920:
	.loc 9 2111 5
	movzbl	_right_button_down, %eax
	testb	%al, %al
	je	L4923
	.loc 9 2111 30 discriminator 1
	movzbl	_handled_press_right, %eax
	xorl	$1, %eax
	.loc 9 2111 27 discriminator 1
	testb	%al, %al
	je	L4923
	.loc 9 2112 27
	movl	-56(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2112 9
	testb	%al, %al
	je	L4924
	.loc 9 2112 65 discriminator 1
	movl	$-10, %eax
	jmp	L4925
L4924:
	.loc 9 2113 27
	movl	-88(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-84(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2113 9
	testb	%al, %al
	je	L4923
	.loc 9 2113 65 discriminator 1
	movl	$10, %eax
	jmp	L4925
L4923:
	.loc 9 2116 12
	movl	$0, %eax
L4925:
	.loc 9 2117 1 discriminator 1
	leal	-8(%ebp), %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$124
	.cfi_endproc
LFE2222:
	.align 2
	.globl	__ZN5Panel8add_textEPc5Colori
	.def	__ZN5Panel8add_textEPc5Colori;	.scl	2;	.type	32;	.endef
__ZN5Panel8add_textEPc5Colori:
LFB2223:
	.loc 9 2119 67
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$104, %esp
	movl	%ecx, -44(%ebp)
	.loc 9 2120 51
	cmpl	$-1, 28(%ebp)
	jne	L4927
	.loc 9 2120 51 is_stmt 0 discriminator 1
	movl	-44(%ebp), %eax
	movl	28(%eax), %eax
	jmp	L4928
L4927:
	.loc 9 2120 51 discriminator 2
	movl	28(%ebp), %eax
L4928:
	.loc 9 2120 9 is_stmt 1 discriminator 4
	movl	%eax, -12(%ebp)
	.loc 9 2121 16 discriminator 4
	leal	-28(%ebp), %eax
	movl	-44(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel16get_current_rectEv
	subl	$4, %esp
	.loc 9 2121 29 discriminator 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_strlen
	.loc 9 2121 16 discriminator 4
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 40(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
	.loc 9 2123 10 discriminator 4
	movl	-44(%ebp), %eax
	movl	20(%eax), %edx
	.loc 9 2123 13 discriminator 4
	movl	-44(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2123 10 discriminator 4
	addl	%eax, %edx
	movl	-44(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 9 2124 1 discriminator 4
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$24
	.cfi_endproc
LFE2223:
	.align 2
	.globl	__ZN5Panel11push_headerEPc13Color_PaletteiPi
	.def	__ZN5Panel11push_headerEPc13Color_PaletteiPi;	.scl	2;	.type	32;	.endef
__ZN5Panel11push_headerEPc13Color_PaletteiPi:
LFB2224:
	.loc 9 2126 93
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$132, %esp
	.cfi_offset 3, -12
	movl	%ecx, -76(%ebp)
	.loc 9 2127 39
	leal	-28(%ebp), %eax
	movl	-76(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel16get_current_rectEv
	subl	$4, %esp
	.loc 9 2128 38
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2128 66
	testb	%al, %al
	je	L4930
	.loc 9 2128 78 discriminator 1
	movzbl	_sliders, %eax
	.loc 9 2128 69 discriminator 1
	xorl	$1, %eax
	.loc 9 2128 66 discriminator 1
	testb	%al, %al
	je	L4930
	.loc 9 2128 66 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L4931
L4930:
	.loc 9 2128 66 discriminator 4
	movl	$0, %eax
L4931:
	.loc 9 2128 78 is_stmt 1 discriminator 6
	movb	%al, -9(%ebp)
	.loc 9 2130 11 discriminator 6
	movl	76(%ebp), %eax
	movl	%eax, -44(%ebp)
	movl	80(%ebp), %eax
	movl	%eax, -40(%ebp)
	movl	84(%ebp), %eax
	movl	%eax, -36(%ebp)
	movl	88(%ebp), %eax
	movl	%eax, -32(%ebp)
	.loc 9 2131 11 discriminator 6
	movl	108(%ebp), %eax
	movl	%eax, -60(%ebp)
	movl	112(%ebp), %eax
	movl	%eax, -56(%ebp)
	movl	116(%ebp), %eax
	movl	%eax, -52(%ebp)
	movl	120(%ebp), %eax
	movl	%eax, -48(%ebp)
	.loc 9 2132 20 discriminator 6
	movl	128(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 2132 5 discriminator 6
	cmpl	%eax, 124(%ebp)
	jne	L4932
	.loc 9 2132 55 discriminator 1
	movl	28(%ebp), %eax
	movl	%eax, -60(%ebp)
	movl	32(%ebp), %eax
	movl	%eax, -56(%ebp)
	movl	36(%ebp), %eax
	movl	%eax, -52(%ebp)
	movl	40(%ebp), %eax
	movl	%eax, -48(%ebp)
	jmp	L4933
L4932:
	.loc 9 2133 10
	cmpb	$0, -9(%ebp)
	je	L4933
	.loc 9 2133 55 discriminator 1
	movl	12(%ebp), %eax
	movl	%eax, -60(%ebp)
	movl	16(%ebp), %eax
	movl	%eax, -56(%ebp)
	movl	20(%ebp), %eax
	movl	%eax, -52(%ebp)
	movl	24(%ebp), %eax
	movl	%eax, -48(%ebp)
L4933:
	.loc 9 2135 28
	movl	-60(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
	.loc 9 2136 16
	movl	-76(%ebp), %eax
	movl	28(%eax), %ebx
	.loc 9 2136 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_strlen
	.loc 9 2136 16
	movl	%eax, %edx
	movl	-44(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 40(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	%ebx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
	.loc 9 2138 10
	movl	-76(%ebp), %eax
	movl	20(%eax), %edx
	.loc 9 2138 13
	movl	-76(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2138 10
	addl	%eax, %edx
	movl	-76(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 9 2140 5
	cmpb	$0, -9(%ebp)
	je	L4934
	.loc 9 2140 21 discriminator 1
	movzbl	_left_button_down, %eax
	testb	%al, %al
	je	L4934
	.loc 9 2140 44 discriminator 2
	movzbl	_handled_press_left, %eax
	xorl	$1, %eax
	.loc 9 2140 41 discriminator 2
	testb	%al, %al
	je	L4934
	.loc 9 2141 13
	movl	128(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 2141 9
	cmpl	%eax, 124(%ebp)
	jne	L4935
	.loc 9 2141 47 discriminator 1
	movl	$1, %eax
	jmp	L4937
L4935:
	.loc 9 2142 24
	movl	128(%ebp), %eax
	movl	124(%ebp), %edx
	movl	%edx, (%eax)
L4934:
	.loc 9 2144 12
	movl	$0, %eax
L4937:
	.loc 9 2145 1 discriminator 1
	movl	-4(%ebp), %ebx
	leave
	.cfi_restore 5
	.cfi_restore 3
	.cfi_def_cfa 4, 4
	ret	$124
	.cfi_endproc
LFE2224:
	.align 2
	.globl	__ZN5Panel13push_selectorEPc13Color_Palette
	.def	__ZN5Panel13push_selectorEPc13Color_Palette;	.scl	2;	.type	32;	.endef
__ZN5Panel13push_selectorEPc13Color_Palette:
LFB2225:
	.loc 9 2147 61
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%esi
	pushl	%ebx
	subl	$176, %esp
	.cfi_offset 6, -12
	.cfi_offset 3, -16
	movl	%ecx, -124(%ebp)
	.loc 9 2148 9
	movl	$2, -12(%ebp)
	.loc 9 2149 21
	movl	-124(%ebp), %eax
	movl	12(%eax), %eax
	.loc 9 2149 36
	movl	-12(%ebp), %edx
	addl	%edx, %edx
	.loc 9 2149 9
	subl	%edx, %eax
	movl	%eax, -16(%ebp)
	.loc 9 2151 32
	leal	-36(%ebp), %eax
	movl	-124(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel16get_current_rectEv
	subl	$4, %esp
	.loc 9 2152 50
	movl	-124(%ebp), %eax
	movl	24(%eax), %edx
	.loc 9 2152 88
	movl	-12(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 9 2152 32
	movl	-124(%ebp), %eax
	movl	20(%eax), %edx
	.loc 9 2152 88
	movl	-12(%ebp), %eax
	leal	(%edx,%eax), %ecx
	leal	-52(%ebp), %eax
	movl	-16(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-16(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%ebx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2153 66
	movl	-124(%ebp), %eax
	movl	24(%eax), %edx
	.loc 9 2153 104
	movl	-12(%ebp), %eax
	leal	(%edx,%eax), %ebx
	.loc 9 2153 35
	movl	-28(%ebp), %eax
	.loc 9 2153 41
	subl	-16(%ebp), %eax
	.loc 9 2153 53
	subl	-12(%ebp), %eax
	movl	%eax, %edx
	.loc 9 2153 104
	leal	-68(%ebp), %eax
	movl	-16(%ebp), %ecx
	movl	%ecx, 16(%esp)
	movl	-16(%ebp), %ecx
	movl	%ecx, 12(%esp)
	movl	%ebx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2154 101
	movl	-124(%ebp), %eax
	movl	12(%eax), %ebx
	.loc 9 2154 66
	movl	-68(%ebp), %edx
	.loc 9 2154 84
	movl	-44(%ebp), %eax
	.loc 9 2154 71
	movl	%edx, %esi
	subl	%eax, %esi
	.loc 9 2154 101
	movl	-124(%ebp), %eax
	movl	24(%eax), %ecx
	.loc 9 2154 43
	movl	-44(%ebp), %edx
	.loc 9 2154 101
	leal	-84(%ebp), %eax
	movl	%ebx, 16(%esp)
	movl	%esi, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2156 38
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2156 59
	testb	%al, %al
	je	L4939
	.loc 9 2156 71 discriminator 1
	movzbl	_sliders, %eax
	.loc 9 2156 62 discriminator 1
	xorl	$1, %eax
	.loc 9 2156 59 discriminator 1
	testb	%al, %al
	je	L4939
	.loc 9 2156 59 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L4940
L4939:
	.loc 9 2156 59 discriminator 4
	movl	$0, %eax
L4940:
	.loc 9 2156 71 is_stmt 1 discriminator 6
	movb	%al, -17(%ebp)
	.loc 9 2158 38 discriminator 6
	cmpb	$0, -17(%ebp)
	je	L4941
	.loc 9 2158 38 is_stmt 0 discriminator 1
	leal	12(%ebp), %eax
	addl	$16, %eax
	jmp	L4942
L4941:
	.loc 9 2158 38 discriminator 2
	leal	12(%ebp), %eax
L4942:
	.loc 9 2158 11 is_stmt 1 discriminator 4
	movl	(%eax), %edx
	movl	%edx, -100(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -96(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -92(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -88(%ebp)
	.loc 9 2159 38 discriminator 4
	cmpb	$0, -17(%ebp)
	je	L4943
	.loc 9 2159 38 is_stmt 0 discriminator 1
	leal	12(%ebp), %eax
	addl	$80, %eax
	jmp	L4944
L4943:
	.loc 9 2159 38 discriminator 2
	leal	12(%ebp), %eax
	addl	$64, %eax
L4944:
	.loc 9 2159 11 is_stmt 1 discriminator 4
	movl	(%eax), %edx
	movl	%edx, -116(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -112(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -108(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -104(%ebp)
	.loc 9 2161 10 discriminator 4
	movw	$60, -118(%ebp)
	.loc 9 2162 16 discriminator 4
	movl	-124(%ebp), %eax
	movl	28(%eax), %eax
	movl	-100(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-96(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-92(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-88(%ebp), %edx
	movl	%edx, 40(%esp)
	movl	-52(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-48(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-44(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	-40(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	%eax, 8(%esp)
	movl	$1, 4(%esp)
	leal	-118(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
	.loc 9 2163 13 discriminator 4
	movb	$62, -118(%ebp)
	.loc 9 2164 16 discriminator 4
	movl	-124(%ebp), %eax
	movl	28(%eax), %eax
	movl	-100(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-96(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-92(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-88(%ebp), %edx
	movl	%edx, 40(%esp)
	movl	-68(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-64(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-60(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	-56(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	%eax, 8(%esp)
	movl	$1, 4(%esp)
	leal	-118(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
	.loc 9 2166 21 discriminator 4
	movl	-12(%ebp), %eax
	movzbl	%al, %eax
	movl	%eax, 32(%esp)
	movl	-100(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-88(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z16render_rectangle7tagRECT5Colorh
	.loc 9 2167 21 discriminator 4
	movl	-12(%ebp), %eax
	movzbl	%al, %eax
	movl	%eax, 32(%esp)
	movl	-100(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-88(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, (%esp)
	movl	-64(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z16render_rectangle7tagRECT5Colorh
	.loc 9 2168 16 discriminator 4
	movl	-124(%ebp), %eax
	movl	28(%eax), %ebx
	.loc 9 2168 29 discriminator 4
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_strlen
	.loc 9 2168 16 discriminator 4
	movl	%eax, %edx
	movl	-116(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-112(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	-108(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	-104(%ebp), %eax
	movl	%eax, 40(%esp)
	movl	-84(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	%ebx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
	.loc 9 2170 5 discriminator 4
	movzbl	_left_button_down, %eax
	testb	%al, %al
	je	L4945
	.loc 9 2170 29 discriminator 1
	movzbl	_handled_press_left, %eax
	xorl	$1, %eax
	.loc 9 2170 26 discriminator 1
	testb	%al, %al
	je	L4945
	.loc 9 2171 27
	movl	-52(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2171 9
	testb	%al, %al
	je	L4946
	.loc 9 2171 65 discriminator 1
	movl	$-1, %eax
	jmp	L4948
L4946:
	.loc 9 2172 27
	movl	-68(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2172 9
	testb	%al, %al
	je	L4945
	.loc 9 2172 65 discriminator 1
	movl	$1, %eax
	jmp	L4948
L4945:
	.loc 9 2175 12
	movl	$0, %eax
L4948:
	.loc 9 2176 1 discriminator 1
	leal	-8(%ebp), %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$116
	.cfi_endproc
LFE2225:
	.align 2
	.globl	__ZN5Panel11push_buttonEPc13Color_Palettei
	.def	__ZN5Panel11push_buttonEPc13Color_Palettei;	.scl	2;	.type	32;	.endef
__ZN5Panel11push_buttonEPc13Color_Palettei:
LFB2226:
	.loc 9 2178 74
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$136, %esp
	movl	%ecx, -76(%ebp)
	.loc 9 2179 30
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_strlen
	.loc 9 2179 9
	movl	%eax, -12(%ebp)
	.loc 9 2181 41
	leal	-32(%ebp), %eax
	movl	-76(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel16get_current_rectEv
	subl	$4, %esp
	.loc 9 2182 24
	movl	-32(%ebp), %edx
	movl	124(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -32(%ebp)
	.loc 9 2183 24
	movl	-24(%ebp), %eax
	subl	124(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 9 2184 24
	movl	-28(%ebp), %edx
	movl	124(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -28(%ebp)
	.loc 9 2185 24
	movl	-20(%ebp), %eax
	subl	124(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 9 2187 38
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2187 68
	testb	%al, %al
	je	L4950
	.loc 9 2187 80 discriminator 1
	movzbl	_sliders, %eax
	.loc 9 2187 71 discriminator 1
	xorl	$1, %eax
	.loc 9 2187 68 discriminator 1
	testb	%al, %al
	je	L4950
	.loc 9 2187 68 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L4951
L4950:
	.loc 9 2187 68 discriminator 4
	movl	$0, %eax
L4951:
	.loc 9 2187 80 is_stmt 1 discriminator 6
	movb	%al, -13(%ebp)
	.loc 9 2189 38 discriminator 6
	cmpb	$0, -13(%ebp)
	je	L4952
	.loc 9 2189 38 is_stmt 0 discriminator 1
	leal	12(%ebp), %eax
	addl	$16, %eax
	jmp	L4953
L4952:
	.loc 9 2189 38 discriminator 2
	leal	12(%ebp), %eax
L4953:
	.loc 9 2189 11 is_stmt 1 discriminator 4
	movl	(%eax), %edx
	movl	%edx, -48(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -44(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -40(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -36(%ebp)
	.loc 9 2190 38 discriminator 4
	cmpb	$0, -13(%ebp)
	je	L4954
	.loc 9 2190 38 is_stmt 0 discriminator 1
	leal	12(%ebp), %eax
	addl	$80, %eax
	jmp	L4955
L4954:
	.loc 9 2190 38 discriminator 2
	leal	12(%ebp), %eax
	addl	$64, %eax
L4955:
	.loc 9 2190 11 is_stmt 1 discriminator 4
	movl	(%eax), %edx
	movl	%edx, -64(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -60(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -56(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -52(%ebp)
	.loc 9 2192 28 discriminator 4
	movl	108(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	112(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	116(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	120(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
	.loc 9 2193 21 discriminator 4
	movl	124(%ebp), %eax
	movzbl	%al, %eax
	movl	%eax, 32(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z16render_rectangle7tagRECT5Colorh
	.loc 9 2194 16 discriminator 4
	movl	-76(%ebp), %eax
	movl	28(%eax), %eax
	movl	-64(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-60(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-56(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-52(%ebp), %edx
	movl	%edx, 40(%esp)
	movl	-32(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-28(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-24(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	-20(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
	.loc 9 2196 10 discriminator 4
	movl	-76(%ebp), %eax
	movl	20(%eax), %edx
	.loc 9 2196 13 discriminator 4
	movl	-76(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2196 10 discriminator 4
	addl	%eax, %edx
	movl	-76(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 9 2198 5 discriminator 4
	movzbl	_left_button_down, %eax
	testb	%al, %al
	je	L4956
	.loc 9 2198 30 discriminator 1
	movzbl	_handled_press_left, %eax
	xorl	$1, %eax
	.loc 9 2198 27 discriminator 1
	testb	%al, %al
	je	L4956
	.loc 9 2198 51 discriminator 2
	cmpb	$0, -13(%ebp)
	je	L4956
	.loc 9 2198 74 discriminator 3
	movl	$2, %eax
	jmp	L4960
L4956:
	.loc 9 2199 5
	movzbl	_right_button_down, %eax
	testb	%al, %al
	je	L4958
	.loc 9 2199 30 discriminator 1
	movzbl	_handled_press_right, %eax
	xorl	$1, %eax
	.loc 9 2199 27 discriminator 1
	testb	%al, %al
	je	L4958
	.loc 9 2199 51 discriminator 2
	cmpb	$0, -13(%ebp)
	je	L4958
	.loc 9 2199 74 discriminator 3
	movl	$3, %eax
	jmp	L4960
L4958:
	.loc 9 2200 5
	cmpb	$0, -13(%ebp)
	je	L4959
	.loc 9 2200 74 discriminator 1
	movl	$1, %eax
	jmp	L4960
L4959:
	.loc 9 2202 12
	movl	$0, %eax
L4960:
	.loc 9 2203 1 discriminator 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$120
	.cfi_endproc
LFE2226:
	.globl	__Z17slider_is_pressedi
	.def	__Z17slider_is_pressedi;	.scl	2;	.type	32;	.endef
__Z17slider_is_pressedi:
LFB2227:
	.loc 9 2205 35
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 9 2206 18
	movzbl	_sliders, %eax
	.loc 9 2206 9
	xorl	$1, %eax
	.loc 9 2206 5
	testb	%al, %al
	je	L4962
	.loc 9 2206 58 discriminator 1
	movl	$0, %eax
	jmp	L4963
L4962:
	.loc 9 2207 17
	movl	_sliders+4, %eax
	.loc 9 2207 5
	cmpl	%eax, 8(%ebp)
	je	L4964
	.loc 9 2207 58 discriminator 1
	movl	$0, %eax
	jmp	L4963
L4964:
	.loc 9 2208 12
	movl	$1, %eax
L4963:
	.loc 9 2209 1
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2227:
	.globl	__Z17slider_is_pressedib
	.def	__Z17slider_is_pressedib;	.scl	2;	.type	32;	.endef
__Z17slider_is_pressedib:
LFB2228:
	.loc 9 2210 46
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$4, %esp
	movl	12(%ebp), %eax
	movb	%al, -4(%ebp)
	.loc 9 2211 18
	movzbl	_sliders, %eax
	.loc 9 2211 9
	xorl	$1, %eax
	.loc 9 2211 5
	testb	%al, %al
	je	L4966
	.loc 9 2211 58 discriminator 1
	movl	$0, %eax
	jmp	L4967
L4966:
	.loc 9 2212 17
	movl	_sliders+4, %eax
	.loc 9 2212 5
	cmpl	%eax, 8(%ebp)
	je	L4968
	.loc 9 2212 58 discriminator 1
	movl	$0, %eax
	jmp	L4967
L4968:
	.loc 9 2213 17
	movzbl	_sliders+8, %eax
	.loc 9 2213 5
	cmpb	%al, -4(%ebp)
	je	L4969
	.loc 9 2213 58 discriminator 1
	movl	$0, %eax
	jmp	L4967
L4969:
	.loc 9 2215 12
	movl	$1, %eax
L4967:
	.loc 9 2216 1
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2228:
	.align 2
	.globl	__ZN5Panel11push_sliderEPc13Color_PalettePiiii
	.def	__ZN5Panel11push_sliderEPc13Color_PalettePiiii;	.scl	2;	.type	32;	.endef
__ZN5Panel11push_sliderEPc13Color_PalettePiiii:
LFB2229:
	.loc 9 2218 112
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$268, %esp
	.cfi_offset 7, -12
	.cfi_offset 6, -16
	.cfi_offset 3, -20
	movl	%ecx, -204(%ebp)
	.loc 9 2219 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_strlen
	.loc 9 2219 9
	movl	%eax, -32(%ebp)
	.loc 9 2220 9
	movl	124(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -36(%ebp)
	.loc 9 2222 92
	movl	-204(%ebp), %eax
	movl	12(%eax), %ebx
	.loc 9 2222 64
	movl	-204(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2222 92
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %esi
	movl	-204(%ebp), %eax
	movl	24(%eax), %ecx
	movl	-204(%ebp), %eax
	movl	20(%eax), %edx
	leal	-84(%ebp), %eax
	movl	%ebx, 16(%esp)
	movl	%esi, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2223 92
	movl	-204(%ebp), %eax
	movl	12(%eax), %ecx
	.loc 9 2223 64
	movl	-204(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2223 92
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %edi
	movl	-204(%ebp), %eax
	movl	24(%eax), %edx
	.loc 9 2223 33
	movl	-204(%ebp), %eax
	movl	20(%eax), %ebx
	.loc 9 2223 40
	movl	-204(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2223 53
	movl	%eax, %esi
	shrl	$31, %esi
	addl	%esi, %eax
	sarl	%eax
	.loc 9 2223 92
	addl	%eax, %ebx
	leal	-100(%ebp), %eax
	movl	%ecx, 16(%esp)
	movl	%edi, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%ebx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2225 10
	movl	$2, -40(%ebp)
	.loc 9 2226 29
	movl	-84(%ebp), %eax
	movl	%eax, (%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_h7tagRECT
	movl	%eax, %edx
	.loc 9 2226 55
	movl	-40(%ebp), %eax
	addl	%eax, %eax
	.loc 9 2226 57
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -44(%ebp)
	.loc 9 2227 134
	movl	-84(%ebp), %eax
	movl	%eax, (%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	movl	%eax, %ebx
	.loc 9 2227 62
	movl	-80(%ebp), %edx
	.loc 9 2227 80
	movl	-72(%ebp), %eax
	.loc 9 2227 66
	addl	%edx, %eax
	.loc 9 2227 87
	subl	-40(%ebp), %eax
	.loc 9 2227 100
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %esi
	.loc 9 2227 43
	movl	-84(%ebp), %edx
	.loc 9 2227 134
	leal	-116(%ebp), %eax
	movl	-40(%ebp), %ecx
	movl	%ecx, 16(%esp)
	movl	%ebx, 12(%esp)
	movl	%esi, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2229 26
	movl	124(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 2229 33
	subl	128(%ebp), %eax
	.loc 9 2229 17
	movl	%eax, -216(%ebp)
	fildl	-216(%ebp)
	.loc 9 2229 59
	movl	132(%ebp), %eax
	subl	128(%ebp), %eax
	.loc 9 2229 44
	movl	%eax, -216(%ebp)
	fildl	-216(%ebp)
	.loc 9 2229 11
	fdivrp	%st, %st(1)
	fstps	-48(%ebp)
	.loc 9 2230 39
	movl	-84(%ebp), %eax
	.loc 9 2230 44
	movl	%eax, -216(%ebp)
	fildl	-216(%ebp)
	fstps	-216(%ebp)
	.loc 9 2230 52
	movl	-84(%ebp), %eax
	movl	%eax, (%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	.loc 9 2230 66
	subl	-44(%ebp), %eax
	.loc 9 2230 81
	movl	%eax, -220(%ebp)
	fildl	-220(%ebp)
	fmuls	-48(%ebp)
	.loc 9 2230 44
	fadds	-216(%ebp)
	.loc 9 2230 83
	fnstcw	-206(%ebp)
	movzwl	-206(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -208(%ebp)
	fldcw	-208(%ebp)
	fistpl	-52(%ebp)
	fldcw	-206(%ebp)
	.loc 9 2231 59
	movl	-80(%ebp), %edx
	.loc 9 2231 63
	movl	-40(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 9 2231 100
	leal	-132(%ebp), %eax
	movl	-44(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-44(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	-52(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2233 39
	leal	-68(%ebp), %eax
	movl	-204(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel16get_current_rectEv
	subl	$4, %esp
	movl	-68(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2233 112
	testb	%al, %al
	jne	L4971
	.loc 9 2233 96 discriminator 2
	movl	136(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z17slider_is_pressedi
	.loc 9 2233 76 discriminator 2
	testb	%al, %al
	je	L4972
L4971:
	.loc 9 2233 155 discriminator 3
	movzbl	_left_button_down, %eax
	xorl	$1, %eax
	.loc 9 2233 112 discriminator 3
	testb	%al, %al
	jne	L4973
	.loc 9 2233 155 discriminator 6
	movzbl	_handled_press_left, %eax
	xorl	$1, %eax
	.loc 9 2233 115 discriminator 6
	testb	%al, %al
	je	L4972
L4973:
	.loc 9 2233 112 discriminator 7
	movl	$1, %eax
	jmp	L4974
L4972:
	.loc 9 2233 112 is_stmt 0 discriminator 8
	movl	$0, %eax
L4974:
	.loc 9 2233 155 is_stmt 1 discriminator 10
	movb	%al, -25(%ebp)
	.loc 9 2234 17 discriminator 10
	movzbl	_sliders, %eax
	.loc 9 2234 35 discriminator 10
	testb	%al, %al
	je	L4975
	.loc 9 2234 56 discriminator 1
	movl	136(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z17slider_is_pressedi
	.loc 9 2234 38 discriminator 1
	xorl	$1, %eax
	.loc 9 2234 35 discriminator 1
	testb	%al, %al
	je	L4975
	.loc 9 2234 35 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L4976
L4975:
	.loc 9 2234 35 discriminator 4
	movl	$0, %eax
L4976:
	.loc 9 2234 5 is_stmt 1 discriminator 6
	testb	%al, %al
	je	L4977
	.loc 9 2234 84 discriminator 7
	movb	$0, -25(%ebp)
L4977:
	.loc 9 2236 38
	cmpb	$0, -25(%ebp)
	je	L4978
	.loc 9 2236 38 is_stmt 0 discriminator 1
	leal	12(%ebp), %eax
	addl	$16, %eax
	jmp	L4979
L4978:
	.loc 9 2236 38 discriminator 2
	leal	12(%ebp), %eax
L4979:
	.loc 9 2236 11 is_stmt 1 discriminator 4
	movl	(%eax), %edx
	movl	%edx, -148(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -144(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -140(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -136(%ebp)
	.loc 9 2237 38 discriminator 4
	cmpb	$0, -25(%ebp)
	je	L4980
	.loc 9 2237 38 is_stmt 0 discriminator 1
	leal	12(%ebp), %eax
	addl	$48, %eax
	jmp	L4981
L4980:
	.loc 9 2237 38 discriminator 2
	leal	12(%ebp), %eax
	addl	$32, %eax
L4981:
	.loc 9 2237 11 is_stmt 1 discriminator 4
	movl	(%eax), %edx
	movl	%edx, -164(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -160(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -156(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -152(%ebp)
	.loc 9 2238 38 discriminator 4
	cmpb	$0, -25(%ebp)
	je	L4982
	.loc 9 2238 38 is_stmt 0 discriminator 1
	leal	12(%ebp), %eax
	addl	$80, %eax
	jmp	L4983
L4982:
	.loc 9 2238 38 discriminator 2
	leal	12(%ebp), %eax
	addl	$64, %eax
L4983:
	.loc 9 2238 11 is_stmt 1 discriminator 4
	movl	(%eax), %edx
	movl	%edx, -180(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -176(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -172(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -168(%ebp)
	.loc 9 2240 28 discriminator 4
	movl	12(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-116(%ebp), %eax
	movl	%eax, (%esp)
	movl	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-108(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-104(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
	.loc 9 2241 28 discriminator 4
	movl	-148(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-144(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-140(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-136(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-132(%ebp), %eax
	movl	%eax, (%esp)
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-124(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
	.loc 9 2242 16 discriminator 4
	movl	-204(%ebp), %eax
	movl	28(%eax), %eax
	movl	-180(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-176(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-172(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-168(%ebp), %edx
	movl	%edx, 40(%esp)
	movl	-100(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-96(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-92(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	-88(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	%eax, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
LBB942:
	.loc 9 2244 9 discriminator 4
	movzbl	_left_button_down, %eax
	xorl	$1, %eax
	.loc 9 2244 5 discriminator 4
	testb	%al, %al
	je	L4984
	.loc 9 2244 54 discriminator 1
	movb	$0, _sliders
	jmp	L4985
L4984:
LBB943:
LBB944:
	.loc 9 2245 22
	movzbl	_sliders, %eax
	.loc 9 2245 10
	testb	%al, %al
	je	L4986
LBB945:
LBB946:
	.loc 9 2246 30
	movl	136(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z17slider_is_pressedi
	.loc 9 2246 9
	testb	%al, %al
	je	L4985
LBB947:
	.loc 9 2247 53
	movl	_mouse_position, %edx
	.loc 9 2247 69
	movl	-84(%ebp), %eax
	.loc 9 2247 55
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 2247 29
	movl	%eax, -216(%ebp)
	fildl	-216(%ebp)
	fstps	-216(%ebp)
	.loc 9 2247 82
	movl	-84(%ebp), %eax
	movl	%eax, (%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	movl	%eax, -220(%ebp)
	.loc 9 2247 75
	fildl	-220(%ebp)
	fdivrs	-216(%ebp)
	.loc 9 2247 94
	fstps	-184(%ebp)
	.loc 9 2248 23
	fld1
	flds	-184(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L5007
	.loc 9 2248 23 is_stmt 0 discriminator 1
	fld1
	jmp	L4990
L5007:
	.loc 9 2248 23 discriminator 2
	flds	-184(%ebp)
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L5008
	.loc 9 2248 23 discriminator 4
	fldz
	jmp	L4990
L5008:
	.loc 9 2248 23 discriminator 5
	flds	-184(%ebp)
L4990:
	.loc 9 2248 21 is_stmt 1 discriminator 8
	fstps	-184(%ebp)
	.loc 9 2249 28 discriminator 8
	fildl	128(%ebp)
	.loc 9 2249 47 discriminator 8
	movl	132(%ebp), %eax
	subl	128(%ebp), %eax
	.loc 9 2249 38 discriminator 8
	movl	%eax, -216(%ebp)
	fildl	-216(%ebp)
	flds	-184(%ebp)
	fmulp	%st, %st(1)
	.loc 9 2249 28 discriminator 8
	faddp	%st, %st(1)
	.loc 9 2249 20 discriminator 8
	fnstcw	-206(%ebp)
	movzwl	-206(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -208(%ebp)
	fldcw	-208(%ebp)
	fistpl	-212(%ebp)
	fldcw	-206(%ebp)
	movl	-212(%ebp), %edx
	movl	124(%ebp), %eax
	movl	%edx, (%eax)
LBE947:
	jmp	L4985
L4986:
LBE946:
LBE945:
LBB948:
LBB949:
	.loc 9 2251 16
	movzbl	_handled_press_left, %eax
	xorl	$1, %eax
	.loc 9 2251 12
	testb	%al, %al
	je	L4985
LBB950:
LBB951:
	.loc 9 2252 27
	movl	-84(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2252 9
	testb	%al, %al
	je	L4994
LBB952:
	.loc 9 2253 39
	movb	$1, _sliders
	.loc 9 2254 45
	movl	136(%ebp), %eax
	movl	%eax, _sliders+4
	.loc 9 2255 53
	movl	_mouse_position, %edx
	.loc 9 2255 69
	movl	-84(%ebp), %eax
	.loc 9 2255 55
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 2255 29
	movl	%eax, -216(%ebp)
	fildl	-216(%ebp)
	fstps	-216(%ebp)
	.loc 9 2255 82
	movl	-84(%ebp), %eax
	movl	%eax, (%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	movl	%eax, -220(%ebp)
	.loc 9 2255 75
	fildl	-220(%ebp)
	fdivrs	-216(%ebp)
	.loc 9 2255 94
	fstps	-188(%ebp)
	.loc 9 2256 23
	fld1
	flds	-188(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L5009
	.loc 9 2256 23 is_stmt 0 discriminator 1
	fld1
	jmp	L4997
L5009:
	.loc 9 2256 23 discriminator 2
	flds	-188(%ebp)
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L5010
	.loc 9 2256 23 discriminator 4
	fldz
	jmp	L4997
L5010:
	.loc 9 2256 23 discriminator 5
	flds	-188(%ebp)
L4997:
	.loc 9 2256 21 is_stmt 1 discriminator 8
	fstps	-188(%ebp)
	.loc 9 2257 28 discriminator 8
	fildl	128(%ebp)
	.loc 9 2257 47 discriminator 8
	movl	132(%ebp), %eax
	subl	128(%ebp), %eax
	.loc 9 2257 38 discriminator 8
	movl	%eax, -216(%ebp)
	fildl	-216(%ebp)
	flds	-188(%ebp)
	fmulp	%st, %st(1)
	.loc 9 2257 28 discriminator 8
	faddp	%st, %st(1)
	.loc 9 2257 20 discriminator 8
	fnstcw	-206(%ebp)
	movzwl	-206(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -208(%ebp)
	fldcw	-208(%ebp)
	fistpl	-212(%ebp)
	fldcw	-206(%ebp)
	movl	-212(%ebp), %edx
	movl	124(%ebp), %eax
	movl	%edx, (%eax)
LBE952:
	jmp	L4985
L4994:
	.loc 9 2258 34
	movl	-100(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-88(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2258 16
	testb	%al, %al
	je	L4985
	.loc 9 2259 29
	movl	132(%ebp), %edx
	movl	128(%ebp), %eax
	addl	%edx, %eax
	.loc 9 2259 38
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %edx
	.loc 9 2259 20
	movl	124(%ebp), %eax
	movl	%edx, (%eax)
L4985:
LBE951:
LBE950:
LBE949:
LBE948:
LBE944:
LBE943:
LBE942:
	.loc 9 2263 16
	movl	124(%ebp), %eax
	movl	(%eax), %eax
	movl	-164(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	-160(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-156(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-152(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-132(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-128(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-124(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-120(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	__Z11render_textii7tagRECT5Color
	.loc 9 2265 10
	movl	-204(%ebp), %eax
	movl	20(%eax), %edx
	.loc 9 2265 13
	movl	-204(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2265 10
	addl	%eax, %edx
	movl	-204(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 9 2267 29
	movl	124(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 2267 30
	cmpl	%eax, -36(%ebp)
	setne	%al
	.loc 9 2268 1
	leal	-12(%ebp), %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$132
	.cfi_endproc
LFE2229:
	.align 2
	.globl	__ZN5Panel18push_double_sliderEPc13Color_PalettePiS2_iii
	.def	__ZN5Panel18push_double_sliderEPc13Color_PalettePiS2_iii;	.scl	2;	.type	32;	.endef
__ZN5Panel18push_double_sliderEPc13Color_PalettePiS2_iii:
LFB2230:
	.loc 9 2270 140
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$284, %esp
	.cfi_offset 7, -12
	.cfi_offset 6, -16
	.cfi_offset 3, -20
	movl	%ecx, -236(%ebp)
	.loc 9 2271 29
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	_strlen
	.loc 9 2271 9
	movl	%eax, -32(%ebp)
	.loc 9 2272 9
	movl	128(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -36(%ebp)
	.loc 9 2273 9
	movl	124(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -40(%ebp)
	.loc 9 2275 92
	movl	-236(%ebp), %eax
	movl	12(%eax), %ebx
	.loc 9 2275 64
	movl	-236(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2275 92
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %esi
	movl	-236(%ebp), %eax
	movl	24(%eax), %ecx
	movl	-236(%ebp), %eax
	movl	20(%eax), %edx
	leal	-104(%ebp), %eax
	movl	%ebx, 16(%esp)
	movl	%esi, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2276 92
	movl	-236(%ebp), %eax
	movl	12(%eax), %ecx
	.loc 9 2276 64
	movl	-236(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2276 92
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %edi
	movl	-236(%ebp), %eax
	movl	24(%eax), %edx
	.loc 9 2276 33
	movl	-236(%ebp), %eax
	movl	20(%eax), %ebx
	.loc 9 2276 40
	movl	-236(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2276 53
	movl	%eax, %esi
	shrl	$31, %esi
	addl	%esi, %eax
	sarl	%eax
	.loc 9 2276 92
	addl	%eax, %ebx
	leal	-120(%ebp), %eax
	movl	%ecx, 16(%esp)
	movl	%edi, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%ebx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2278 10
	movl	$2, -44(%ebp)
	.loc 9 2279 31
	movl	-104(%ebp), %eax
	movl	%eax, (%esp)
	movl	-100(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_h7tagRECT
	movl	%eax, %edx
	.loc 9 2279 57
	movl	-44(%ebp), %eax
	addl	%eax, %eax
	.loc 9 2279 59
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -48(%ebp)
	.loc 9 2280 40
	fildl	-48(%ebp)
	fldl	LC259
	fmulp	%st, %st(1)
	.loc 9 2280 10
	fnstcw	-238(%ebp)
	movzwl	-238(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -240(%ebp)
	fldcw	-240(%ebp)
	fistpl	-52(%ebp)
	fldcw	-238(%ebp)
	.loc 9 2281 134
	movl	-104(%ebp), %eax
	movl	%eax, (%esp)
	movl	-100(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	movl	%eax, %ebx
	.loc 9 2281 62
	movl	-100(%ebp), %edx
	.loc 9 2281 80
	movl	-92(%ebp), %eax
	.loc 9 2281 66
	addl	%edx, %eax
	.loc 9 2281 87
	subl	-44(%ebp), %eax
	.loc 9 2281 100
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, %esi
	.loc 9 2281 43
	movl	-104(%ebp), %edx
	.loc 9 2281 134
	leal	-136(%ebp), %eax
	movl	-44(%ebp), %ecx
	movl	%ecx, 16(%esp)
	movl	%ebx, 12(%esp)
	movl	%esi, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2283 31
	movl	128(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 2283 43
	subl	132(%ebp), %eax
	.loc 9 2283 22
	movl	%eax, -244(%ebp)
	fildl	-244(%ebp)
	.loc 9 2283 69
	movl	136(%ebp), %eax
	subl	132(%ebp), %eax
	.loc 9 2283 54
	movl	%eax, -244(%ebp)
	fildl	-244(%ebp)
	.loc 9 2283 11
	fdivrp	%st, %st(1)
	fstps	-56(%ebp)
	.loc 9 2284 31
	movl	124(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 2284 43
	subl	132(%ebp), %eax
	.loc 9 2284 22
	movl	%eax, -244(%ebp)
	fildl	-244(%ebp)
	.loc 9 2284 69
	movl	136(%ebp), %eax
	subl	132(%ebp), %eax
	.loc 9 2284 54
	movl	%eax, -244(%ebp)
	fildl	-244(%ebp)
	.loc 9 2284 11
	fdivrp	%st, %st(1)
	fstps	-60(%ebp)
	.loc 9 2285 44
	movl	-104(%ebp), %eax
	.loc 9 2285 49
	movl	%eax, -244(%ebp)
	fildl	-244(%ebp)
	fstps	-244(%ebp)
	.loc 9 2285 57
	movl	-104(%ebp), %eax
	movl	%eax, (%esp)
	movl	-100(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	.loc 9 2285 71
	subl	-52(%ebp), %eax
	.loc 9 2285 87
	movl	%eax, -248(%ebp)
	fildl	-248(%ebp)
	fmuls	-56(%ebp)
	.loc 9 2285 49
	fadds	-244(%ebp)
	.loc 9 2285 89
	fnstcw	-238(%ebp)
	movzwl	-238(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -240(%ebp)
	fldcw	-240(%ebp)
	fistpl	-64(%ebp)
	fldcw	-238(%ebp)
	.loc 9 2286 44
	movl	-104(%ebp), %eax
	.loc 9 2286 49
	movl	%eax, -244(%ebp)
	fildl	-244(%ebp)
	fstps	-244(%ebp)
	.loc 9 2286 57
	movl	-104(%ebp), %eax
	movl	%eax, (%esp)
	movl	-100(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	.loc 9 2286 71
	subl	-52(%ebp), %eax
	.loc 9 2286 87
	movl	%eax, -248(%ebp)
	fildl	-248(%ebp)
	fmuls	-60(%ebp)
	.loc 9 2286 49
	fadds	-244(%ebp)
	.loc 9 2286 89
	fnstcw	-238(%ebp)
	movzwl	-238(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -240(%ebp)
	fldcw	-240(%ebp)
	fistpl	-68(%ebp)
	fldcw	-238(%ebp)
	.loc 9 2288 69
	movl	-100(%ebp), %edx
	.loc 9 2288 73
	movl	-44(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 9 2288 113
	leal	-152(%ebp), %eax
	movl	-48(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-52(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	-64(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2289 69
	movl	-100(%ebp), %edx
	.loc 9 2289 73
	movl	-44(%ebp), %eax
	leal	(%edx,%eax), %ecx
	.loc 9 2289 113
	leal	-168(%ebp), %eax
	movl	-48(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-52(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	-68(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__Z8get_rectiiii
	.loc 9 2291 38
	leal	-88(%ebp), %eax
	movl	-236(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZN5Panel16get_current_rectEv
	subl	$4, %esp
	movl	-88(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-84(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2291 75
	testb	%al, %al
	je	L5012
	.loc 9 2291 118 discriminator 1
	movzbl	_left_button_down, %eax
	xorl	$1, %eax
	.loc 9 2291 75 discriminator 1
	testb	%al, %al
	jne	L5013
	.loc 9 2291 118 discriminator 4
	movzbl	_handled_press_left, %eax
	xorl	$1, %eax
	.loc 9 2291 78 discriminator 4
	testb	%al, %al
	je	L5012
L5013:
	.loc 9 2291 75 discriminator 5
	movl	$1, %eax
	jmp	L5014
L5012:
	.loc 9 2291 75 is_stmt 0 discriminator 6
	movl	$0, %eax
L5014:
	.loc 9 2291 118 is_stmt 1 discriminator 8
	movb	%al, -69(%ebp)
	.loc 9 2293 49 discriminator 8
	movl	_mouse_position, %edx
	.loc 9 2293 65 discriminator 8
	movl	-104(%ebp), %eax
	.loc 9 2293 51 discriminator 8
	subl	%eax, %edx
	movl	%edx, %eax
	.loc 9 2293 25 discriminator 8
	movl	%eax, -244(%ebp)
	fildl	-244(%ebp)
	fstps	-244(%ebp)
	.loc 9 2293 78 discriminator 8
	movl	-104(%ebp), %eax
	movl	%eax, (%esp)
	movl	-100(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z5get_w7tagRECT
	movl	%eax, -248(%ebp)
	.loc 9 2293 71 discriminator 8
	fildl	-248(%ebp)
	fdivrs	-244(%ebp)
	.loc 9 2293 90 discriminator 8
	fstps	-172(%ebp)
	.loc 9 2294 19 discriminator 8
	fld1
	flds	-172(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L5054
	.loc 9 2294 19 is_stmt 0 discriminator 1
	fld1
	jmp	L5017
L5054:
	.loc 9 2294 19 discriminator 2
	flds	-172(%ebp)
	fldz
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L5055
	.loc 9 2294 19 discriminator 4
	fldz
	jmp	L5017
L5055:
	.loc 9 2294 19 discriminator 5
	flds	-172(%ebp)
L5017:
	.loc 9 2294 17 is_stmt 1 discriminator 8
	fstps	-172(%ebp)
	.loc 9 2295 25 discriminator 8
	fildl	132(%ebp)
	.loc 9 2295 48 discriminator 8
	movl	136(%ebp), %eax
	subl	132(%ebp), %eax
	.loc 9 2295 39 discriminator 8
	movl	%eax, -244(%ebp)
	fildl	-244(%ebp)
	flds	-172(%ebp)
	fmulp	%st, %st(1)
	.loc 9 2295 25 discriminator 8
	faddp	%st, %st(1)
	.loc 9 2295 17 discriminator 8
	fstps	-172(%ebp)
	.loc 9 2296 9 discriminator 8
	flds	-172(%ebp)
	fnstcw	-238(%ebp)
	movzwl	-238(%ebp), %eax
	orb	$12, %ah
	movw	%ax, -240(%ebp)
	fldcw	-240(%ebp)
	fistpl	-28(%ebp)
	fldcw	-238(%ebp)
	.loc 9 2297 21 discriminator 8
	flds	-172(%ebp)
	fildl	-28(%ebp)
	fsubrp	%st, %st(1)
	.loc 9 2297 5 discriminator 8
	flds	LC22
	fxch	%st(1)
	fcomip	%st(1), %st
	fstp	%st(0)
	jbe	L5021
	.loc 9 2297 42 discriminator 1
	addl	$1, -28(%ebp)
L5021:
	.loc 9 2298 30
	flds	-172(%ebp)
	.loc 9 2298 45
	movl	124(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 2298 30
	movl	%eax, -244(%ebp)
	fildl	-244(%ebp)
	fsubrp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt3absf
	fstps	-244(%ebp)
	.loc 9 2298 62
	flds	-172(%ebp)
	.loc 9 2298 77
	movl	128(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 2298 62
	movl	%eax, -248(%ebp)
	fildl	-248(%ebp)
	fsubrp	%st, %st(1)
	fstps	(%esp)
	call	__ZSt3absf
	.loc 9 2298 88
	flds	-244(%ebp)
	fcomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	movb	%al, -70(%ebp)
	.loc 9 2300 11
	movl	12(%ebp), %eax
	movl	%eax, -188(%ebp)
	movl	16(%ebp), %eax
	movl	%eax, -184(%ebp)
	movl	20(%ebp), %eax
	movl	%eax, -180(%ebp)
	movl	24(%ebp), %eax
	movl	%eax, -176(%ebp)
	.loc 9 2301 11
	movl	12(%ebp), %eax
	movl	%eax, -204(%ebp)
	movl	16(%ebp), %eax
	movl	%eax, -200(%ebp)
	movl	20(%ebp), %eax
	movl	%eax, -196(%ebp)
	movl	24(%ebp), %eax
	movl	%eax, -192(%ebp)
	.loc 9 2302 18
	movzbl	_sliders, %eax
	.loc 9 2302 9
	xorl	$1, %eax
	.loc 9 2302 36
	testb	%al, %al
	jne	L5023
	.loc 9 2302 56 discriminator 2
	movl	140(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z17slider_is_pressedi
	.loc 9 2302 36 discriminator 2
	testb	%al, %al
	je	L5024
L5023:
	.loc 9 2302 36 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L5025
L5024:
	.loc 9 2302 36 discriminator 4
	movl	$0, %eax
L5025:
	.loc 9 2302 5 is_stmt 1 discriminator 6
	testb	%al, %al
	je	L5026
	.loc 9 2303 30
	movl	$1, 4(%esp)
	movl	140(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z17slider_is_pressedib
	.loc 9 2303 9
	testb	%al, %al
	je	L5027
	.loc 9 2304 31
	movl	28(%ebp), %eax
	movl	%eax, -188(%ebp)
	movl	32(%ebp), %eax
	movl	%eax, -184(%ebp)
	movl	36(%ebp), %eax
	movl	%eax, -180(%ebp)
	movl	40(%ebp), %eax
	movl	%eax, -176(%ebp)
	jmp	L5026
L5027:
	.loc 9 2305 37
	movl	$0, 4(%esp)
	movl	140(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z17slider_is_pressedib
	.loc 9 2305 16
	testb	%al, %al
	je	L5028
	.loc 9 2306 30
	movl	28(%ebp), %eax
	movl	%eax, -204(%ebp)
	movl	32(%ebp), %eax
	movl	%eax, -200(%ebp)
	movl	36(%ebp), %eax
	movl	%eax, -196(%ebp)
	movl	40(%ebp), %eax
	movl	%eax, -192(%ebp)
	jmp	L5026
L5028:
	.loc 9 2307 16
	cmpb	$0, -69(%ebp)
	je	L5026
	.loc 9 2308 13
	cmpb	$0, -70(%ebp)
	je	L5029
	.loc 9 2308 51 discriminator 1
	movl	28(%ebp), %eax
	movl	%eax, -188(%ebp)
	movl	32(%ebp), %eax
	movl	%eax, -184(%ebp)
	movl	36(%ebp), %eax
	movl	%eax, -180(%ebp)
	movl	40(%ebp), %eax
	movl	%eax, -176(%ebp)
	jmp	L5026
L5029:
	.loc 9 2309 51
	movl	28(%ebp), %eax
	movl	%eax, -204(%ebp)
	movl	32(%ebp), %eax
	movl	%eax, -200(%ebp)
	movl	36(%ebp), %eax
	movl	%eax, -196(%ebp)
	movl	40(%ebp), %eax
	movl	%eax, -192(%ebp)
L5026:
	.loc 9 2313 71
	cmpb	$0, -69(%ebp)
	jne	L5031
	.loc 9 2313 56 discriminator 2
	movl	140(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z17slider_is_pressedi
	.loc 9 2313 36 discriminator 2
	testb	%al, %al
	je	L5032
L5031:
	.loc 9 2313 71 discriminator 3
	leal	12(%ebp), %eax
	addl	$80, %eax
	jmp	L5033
L5032:
	.loc 9 2313 71 is_stmt 0 discriminator 4
	leal	12(%ebp), %eax
	addl	$64, %eax
L5033:
	.loc 9 2313 112 is_stmt 1 discriminator 6
	movl	(%eax), %edx
	movl	%edx, -220(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -216(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -212(%ebp)
	movl	12(%eax), %eax
	movl	%eax, -208(%ebp)
	.loc 9 2315 28 discriminator 6
	movl	12(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-136(%ebp), %eax
	movl	%eax, (%esp)
	movl	-132(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-124(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
	.loc 9 2316 28 discriminator 6
	movl	-188(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-184(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-180(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-176(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	movl	-148(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-144(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-140(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
	.loc 9 2317 28 discriminator 6
	movl	-204(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-200(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-196(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-192(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-168(%ebp), %eax
	movl	%eax, (%esp)
	movl	-164(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-160(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-156(%ebp), %eax
	movl	%eax, 12(%esp)
	call	__Z23render_filled_rectangle7tagRECT5Color
	.loc 9 2318 16 discriminator 6
	movl	-236(%ebp), %eax
	movl	28(%eax), %eax
	movl	-220(%ebp), %edx
	movl	%edx, 28(%esp)
	movl	-216(%ebp), %edx
	movl	%edx, 32(%esp)
	movl	-212(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-208(%ebp), %edx
	movl	%edx, 40(%esp)
	movl	-120(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-116(%ebp), %edx
	movl	%edx, 16(%esp)
	movl	-112(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	-108(%ebp), %edx
	movl	%edx, 24(%esp)
	movl	%eax, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__Z11render_textPcii7tagRECT5Color
LBB953:
	.loc 9 2320 9 discriminator 6
	movzbl	_left_button_down, %eax
	xorl	$1, %eax
	.loc 9 2320 5 discriminator 6
	testb	%al, %al
	je	L5034
	.loc 9 2320 54 discriminator 1
	movb	$0, _sliders
	jmp	L5035
L5034:
LBB954:
LBB955:
	.loc 9 2321 22
	movzbl	_sliders, %eax
	.loc 9 2321 10
	testb	%al, %al
	je	L5036
LBB956:
LBB957:
	.loc 9 2322 21
	movl	_sliders+4, %eax
	.loc 9 2322 9
	cmpl	%eax, 140(%ebp)
	jne	L5035
LBB958:
LBB959:
	.loc 9 2323 25
	movzbl	_sliders+8, %eax
	.loc 9 2323 13
	testb	%al, %al
	je	L5038
LBB960:
	.loc 9 2324 29
	movl	128(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	%edx, (%eax)
	.loc 9 2325 31
	movl	124(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 2325 42
	addl	$1, %eax
	.loc 9 2325 21
	movl	%eax, -224(%ebp)
	.loc 9 2326 31
	movl	128(%ebp), %eax
	movl	(%eax), %edx
	movl	-224(%ebp), %eax
	cmpl	%eax, %edx
	jle	L5039
	.loc 9 2326 31 is_stmt 0 discriminator 1
	movl	128(%ebp), %eax
	movl	(%eax), %eax
	jmp	L5040
L5039:
	.loc 9 2326 31 discriminator 2
	movl	-224(%ebp), %eax
L5040:
	.loc 9 2326 29 is_stmt 1 discriminator 4
	movl	128(%ebp), %edx
	movl	%eax, (%edx)
LBE960:
	jmp	L5035
L5038:
LBB961:
	.loc 9 2328 28
	movl	124(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	%edx, (%eax)
	.loc 9 2329 32
	movl	128(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 2329 44
	subl	$1, %eax
	.loc 9 2329 21
	movl	%eax, -228(%ebp)
	.loc 9 2330 30
	movl	124(%ebp), %eax
	movl	(%eax), %edx
	movl	-228(%ebp), %eax
	cmpl	%eax, %edx
	jge	L5042
	.loc 9 2330 30 is_stmt 0 discriminator 1
	movl	124(%ebp), %eax
	movl	(%eax), %eax
	jmp	L5043
L5042:
	.loc 9 2330 30 discriminator 2
	movl	-228(%ebp), %eax
L5043:
	.loc 9 2330 28 is_stmt 1 discriminator 4
	movl	124(%ebp), %edx
	movl	%eax, (%edx)
	jmp	L5035
L5036:
LBE961:
LBE959:
LBE958:
LBE957:
LBE956:
	.loc 9 2333 16
	movzbl	_handled_press_left, %eax
	xorl	$1, %eax
	.loc 9 2333 12
	testb	%al, %al
	je	L5035
	.loc 9 2334 27
	movl	-104(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-100(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2334 9
	testb	%al, %al
	je	L5044
	.loc 9 2335 39
	movb	$1, _sliders
	.loc 9 2336 45
	movl	140(%ebp), %eax
	movl	%eax, _sliders+4
	.loc 9 2337 13
	cmpb	$0, -70(%ebp)
	je	L5045
	.loc 9 2338 45
	movb	$1, _sliders+8
	.loc 9 2339 29
	movl	128(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	%edx, (%eax)
	jmp	L5035
L5045:
	.loc 9 2341 45
	movb	$0, _sliders+8
	.loc 9 2342 28
	movl	124(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	%edx, (%eax)
	jmp	L5035
L5044:
	.loc 9 2344 34
	movl	-120(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-116(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-112(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-108(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	_mouse_position, %eax
	movl	_mouse_position+4, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__Z14v2_inside_rect2v27tagRECT
	.loc 9 2344 16
	testb	%al, %al
	je	L5035
	.loc 9 2345 25
	movl	128(%ebp), %eax
	movl	136(%ebp), %edx
	movl	%edx, (%eax)
	.loc 9 2346 25
	movl	124(%ebp), %eax
	movl	132(%ebp), %edx
	movl	%edx, (%eax)
L5035:
LBE955:
LBE954:
LBE953:
	.loc 9 2350 10
	movl	-236(%ebp), %eax
	movl	20(%eax), %edx
	.loc 9 2350 13
	movl	-236(%ebp), %eax
	movl	16(%eax), %eax
	.loc 9 2350 10
	addl	%eax, %edx
	movl	-236(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 9 2353 35
	movl	128(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 2353 47
	cmpl	%eax, -36(%ebp)
	jne	L5047
	.loc 9 2353 71 discriminator 2
	movl	124(%ebp), %eax
	movl	(%eax), %eax
	.loc 9 2353 47 discriminator 2
	cmpl	%eax, -40(%ebp)
	je	L5048
L5047:
	.loc 9 2353 47 is_stmt 0 discriminator 3
	movl	$1, %eax
	jmp	L5050
L5048:
	.loc 9 2353 47 discriminator 4
	movl	$0, %eax
L5050:
	.loc 9 2354 1 is_stmt 1
	leal	-12(%ebp), %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%edi
	.cfi_restore 7
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$136
	.cfi_endproc
LFE2230:
	.section	.text$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_PcEjSB_z,"x"
	.linkonce discard
	.globl	__ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_PcEjSB_z
	.def	__ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_PcEjSB_z;	.scl	2;	.type	32;	.endef
__ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_PcEjSB_z:
LFB2304:
	.file 10 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/ext/string_conversions.h"
	.loc 10 99 5
	.cfi_startproc
	.cfi_personality 0,___gxx_personality_v0
	.cfi_lsda 0,LLSDA2304
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 10 105 58
	movl	16(%ebp), %eax
	leal	12(%eax), %edx
	movl	$16, %eax
	subl	$1, %eax
	addl	%edx, %eax
	movl	$16, %ebx
	movl	$0, %edx
	divl	%ebx
	imull	$16, %eax, %eax
	call	___chkstk_ms
	subl	%eax, %esp
	leal	16(%esp), %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	movl	%eax, -12(%ebp)
	.loc 10 109 25
	leal	24(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 10 111 32
	movl	-24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	movl	12(%ebp), %eax
LEHB8:
	call	*%eax
LVL71:
LEHE8:
	movl	%eax, -16(%ebp)
	.loc 10 115 38
	leal	-17(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSaIcEC1Ev
	movl	-16(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%eax, %edx
	leal	-17(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	movl	8(%ebp), %ecx
LEHB9:
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_
LEHE9:
	subl	$12, %esp
	leal	-17(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSaIcED1Ev
	jmp	L5060
L5059:
	movl	%eax, %ebx
	leal	-17(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSaIcED1Ev
	movl	%ebx, %eax
	movl	%eax, (%esp)
LEHB10:
	call	__Unwind_Resume
LEHE10:
L5060:
	.loc 10 116 5
	movl	8(%ebp), %eax
	movl	-4(%ebp), %ebx
	leave
	.cfi_restore 5
	.cfi_restore 3
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2304:
	.section	.gcc_except_table,"w"
LLSDA2304:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 LLSDACSE2304-LLSDACSB2304
LLSDACSB2304:
	.uleb128 LEHB8-LFB2304
	.uleb128 LEHE8-LEHB8
	.uleb128 0
	.uleb128 0
	.uleb128 LEHB9-LFB2304
	.uleb128 LEHE9-LEHB9
	.uleb128 L5059-LFB2304
	.uleb128 0
	.uleb128 LEHB10-LFB2304
	.uleb128 LEHE10-LEHB10
	.uleb128 0
	.uleb128 0
LLSDACSE2304:
	.section	.text$_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_PcEjSB_z,"x"
	.linkonce discard
	.section	.text$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev,"x"
	.linkonce discard
	.align 2
	.globl	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev;	.scl	2;	.type	32;	.endef
__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev:
LFB2308:
	.loc 3 139 14
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	movl	%ecx, -12(%ebp)
LBB962:
	.loc 3 139 14
	movl	-12(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSaIcED2Ev
LBE962:
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2308:
	.section	.text$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,"x"
	.linkonce discard
	.globl	__ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.def	__ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_;	.scl	2;	.type	32;	.endef
__ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_:
LFB2461:
	.loc 3 5977 5
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 3 5979 23
	movl	16(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	$0, (%esp)
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc
	subl	$8, %esp
	movl	%eax, (%esp)
	call	__ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	.loc 3 5979 46
	movl	%eax, (%esp)
	movl	8(%ebp), %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_
	subl	$4, %esp
	.loc 3 5979 49
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2461:
	.section	.text$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,"x"
	.linkonce discard
	.globl	__ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.def	__ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_;	.scl	2;	.type	32;	.endef
__ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_:
LFB2462:
	.loc 3 5989 5
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 3 5991 23
	movl	12(%ebp), %eax
	movl	16(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc
	subl	$4, %esp
	movl	%eax, (%esp)
	call	__ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	.loc 3 5991 43
	movl	%eax, (%esp)
	movl	8(%ebp), %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_
	subl	$4, %esp
	.loc 3 5991 46
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2462:
	.section	.text$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_,"x"
	.linkonce discard
	.align 2
	.globl	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_;	.scl	2;	.type	32;	.endef
__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_:
LFB2466:
	.loc 3 604 9
	.cfi_startproc
	.cfi_personality 0,___gxx_personality_v0
	.cfi_lsda 0,LLSDA2466
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	movl	%ecx, -12(%ebp)
LBB963:
	.loc 3 606 36
	movl	-12(%ebp), %ebx
	movl	-12(%ebp), %eax
	movl	%eax, %ecx
LEHB11:
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv
	movl	%eax, %edx
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	movl	%ebx, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_
LEHE11:
	subl	$8, %esp
	.loc 3 607 4
	movl	-12(%ebp), %eax
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	8(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
LEHB12:
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_
LEHE12:
	subl	$8, %esp
LBE963:
	.loc 3 607 32
	jmp	L5069
L5068:
	movl	%eax, %ebx
LBB964:
	.loc 3 606 36
	movl	-12(%ebp), %eax
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev
	movl	%ebx, %eax
	movl	%eax, (%esp)
LEHB13:
	call	__Unwind_Resume
LEHE13:
L5069:
LBE964:
	.loc 3 607 32
	movl	-4(%ebp), %ebx
	leave
	.cfi_restore 5
	.cfi_restore 3
	.cfi_def_cfa 4, 4
	ret	$12
	.cfi_endproc
LFE2466:
	.section	.gcc_except_table,"w"
LLSDA2466:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 LLSDACSE2466-LLSDACSB2466
LLSDACSB2466:
	.uleb128 LEHB11-LFB2466
	.uleb128 LEHE11-LEHB11
	.uleb128 0
	.uleb128 0
	.uleb128 LEHB12-LFB2466
	.uleb128 LEHE12-LEHB12
	.uleb128 L5068-LFB2466
	.uleb128 0
	.uleb128 LEHB13-LFB2466
	.uleb128 LEHE13-LEHB13
	.uleb128 0
	.uleb128 0
LLSDACSE2466:
	.section	.text$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_,"x"
	.linkonce discard
	.section	.text$_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_,"x"
	.linkonce discard
	.globl	__ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	.def	__ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_;	.scl	2;	.type	32;	.endef
__ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_:
LFB2562:
	.file 11 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/move.h"
	.loc 11 99 5
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 11 100 74
	movl	8(%ebp), %eax
	.loc 11 100 77
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2562:
	.section	.text$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_,"x"
	.linkonce discard
	.align 2
	.globl	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_;	.scl	2;	.type	32;	.endef
__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_:
LFB2564:
	.loc 3 252 9
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	movl	%ecx, -28(%ebp)
	.loc 3 255 4
	movl	-28(%ebp), %eax
	movb	%dl, 8(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	8(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type
	subl	$12, %esp
	.loc 3 256 9
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$8
	.cfi_endproc
LFE2564:
	.section	.text$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type,"x"
	.linkonce discard
	.align 2
	.globl	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type;	.scl	2;	.type	32;	.endef
__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type:
LFB2596:
	.loc 3 232 9
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	movl	%ecx, -28(%ebp)
	.loc 3 236 11
	movl	-28(%ebp), %eax
	movb	%dl, 8(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	8(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
	subl	$12, %esp
	.loc 3 237 2
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret	$12
	.cfi_endproc
LFE2596:
	.section .rdata,"dr"
	.align 4
LC316:
	.ascii "basic_string::_M_construct null not valid\0"
	.section	.text$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag,"x"
	.linkonce discard
	.align 2
	.globl	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag;	.scl	2;	.type	32;	.endef
__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:
LFB2630:
	.file 12 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/basic_string.tcc"
	.loc 12 206 7
	.cfi_startproc
	.cfi_personality 0,___gxx_personality_v0
	.cfi_lsda 0,LLSDA2630
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$52, %esp
	.cfi_offset 3, -12
	movl	%ecx, -28(%ebp)
	.loc 12 211 34
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZN9__gnu_cxx17__is_null_pointerIcEEbPT_
	.loc 12 211 42
	testb	%al, %al
	je	L5075
	.loc 12 211 42 is_stmt 0 discriminator 1
	movl	8(%ebp), %eax
	cmpl	12(%ebp), %eax
	je	L5075
	.loc 12 211 42 discriminator 3
	movl	$1, %eax
	jmp	L5076
L5075:
	.loc 12 211 42 discriminator 4
	movl	$0, %eax
L5076:
	.loc 12 211 2 is_stmt 1 discriminator 6
	testb	%al, %al
	je	L5077
	.loc 12 212 28
	movl	$LC316, (%esp)
LEHB14:
	call	__ZSt19__throw_logic_errorPKc
L5077:
	.loc 12 215 57
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_
	.loc 12 215 12
	movl	%eax, -12(%ebp)
	.loc 12 217 13
	movl	-12(%ebp), %eax
	.loc 12 217 2
	cmpl	$15, %eax
	jbe	L5078
	.loc 12 219 6
	movl	-28(%ebp), %eax
	movl	$0, 4(%esp)
	leal	-12(%ebp), %edx
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
	subl	$8, %esp
	movl	%eax, %edx
	movl	-28(%ebp), %eax
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc
	subl	$4, %esp
	.loc 12 220 6
	movl	-12(%ebp), %edx
	movl	-28(%ebp), %eax
	movl	%edx, (%esp)
	movl	%eax, %ecx
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj
LEHE14:
	subl	$4, %esp
L5078:
	.loc 12 225 6
	movl	-28(%ebp), %eax
	movl	%eax, %ecx
LEHB15:
	call	__ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
LEHE15:
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_
	.loc 12 232 2
	movl	-12(%ebp), %edx
	movl	-28(%ebp), %eax
	movl	%edx, (%esp)
	movl	%eax, %ecx
LEHB16:
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj
LEHE16:
	subl	$4, %esp
	.loc 12 233 7
	jmp	L5083
L5081:
	.loc 12 226 2
	movl	%eax, (%esp)
	call	___cxa_begin_catch
	.loc 12 228 6
	movl	-28(%ebp), %eax
	movl	%eax, %ecx
LEHB17:
	call	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
	.loc 12 229 6
	call	___cxa_rethrow
LEHE17:
L5082:
	movl	%eax, %ebx
	.loc 12 226 2
	call	___cxa_end_catch
	movl	%ebx, %eax
	movl	%eax, (%esp)
LEHB18:
	call	__Unwind_Resume
LEHE18:
L5083:
	.loc 12 233 7
	movl	-4(%ebp), %ebx
	leave
	.cfi_restore 5
	.cfi_restore 3
	.cfi_def_cfa 4, 4
	ret	$12
	.cfi_endproc
LFE2630:
	.section	.gcc_except_table,"w"
	.align 4
LLSDA2630:
	.byte	0xff
	.byte	0
	.uleb128 LLSDATT2630-LLSDATTD2630
LLSDATTD2630:
	.byte	0x1
	.uleb128 LLSDACSE2630-LLSDACSB2630
LLSDACSB2630:
	.uleb128 LEHB14-LFB2630
	.uleb128 LEHE14-LEHB14
	.uleb128 0
	.uleb128 0
	.uleb128 LEHB15-LFB2630
	.uleb128 LEHE15-LEHB15
	.uleb128 L5081-LFB2630
	.uleb128 0x1
	.uleb128 LEHB16-LFB2630
	.uleb128 LEHE16-LEHB16
	.uleb128 0
	.uleb128 0
	.uleb128 LEHB17-LFB2630
	.uleb128 LEHE17-LEHB17
	.uleb128 L5082-LFB2630
	.uleb128 0
	.uleb128 LEHB18-LFB2630
	.uleb128 LEHE18-LEHB18
	.uleb128 0
	.uleb128 0
LLSDACSE2630:
	.byte	0x1
	.byte	0
	.align 4
	.long	0
LLSDATT2630:
	.section	.text$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag,"x"
	.linkonce discard
	.section	.text$_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_,"x"
	.linkonce discard
	.globl	__ZN9__gnu_cxx17__is_null_pointerIcEEbPT_
	.def	__ZN9__gnu_cxx17__is_null_pointerIcEEbPT_;	.scl	2;	.type	32;	.endef
__ZN9__gnu_cxx17__is_null_pointerIcEEbPT_:
LFB2660:
	.file 13 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/ext/type_traits.h"
	.loc 13 152 5
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 13 153 23
	cmpl	$0, 8(%ebp)
	sete	%al
	.loc 13 153 26
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2660:
	.section	.text$_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_,"x"
	.linkonce discard
	.globl	__ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_
	.def	__ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_;	.scl	2;	.type	32;	.endef
__ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_:
LFB2661:
	.file 14 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/stl_iterator_base_funcs.h"
	.loc 14 138 5
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$36, %esp
	.cfi_offset 3, -12
	.loc 14 142 33
	leal	8(%ebp), %eax
	movl	%eax, (%esp)
	call	__ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_
	.loc 14 141 29
	movl	8(%ebp), %eax
	movb	%bl, 8(%esp)
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	__ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag
	.loc 14 142 42
	nop
	.loc 14 143 5
	addl	$36, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2661:
	.section	.text$_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_,"x"
	.linkonce discard
	.globl	__ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_
	.def	__ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_;	.scl	2;	.type	32;	.endef
__ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_:
LFB2687:
	.file 15 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/stl_iterator_base_types.h"
	.loc 15 205 5
	.cfi_startproc
	.loc 15 206 68
	ret
	.cfi_endproc
LFE2687:
	.section	.text$_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag,"x"
	.linkonce discard
	.globl	__ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag
	.def	__ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag;	.scl	2;	.type	32;	.endef
__ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag:
LFB2688:
	.loc 14 98 5
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.loc 14 104 23
	movl	12(%ebp), %eax
	subl	8(%ebp), %eax
	.loc 14 105 5
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2688:
	.text
	.def	__Z41__static_initialization_and_destruction_0ii;	.scl	3;	.type	32;	.endef
__Z41__static_initialization_and_destruction_0ii:
LFB2699:
	.loc 9 2354 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$8, %esp
	.loc 9 2354 1
	cmpl	$1, 8(%ebp)
	jne	L5094
	.loc 9 2354 1 is_stmt 0 discriminator 1
	cmpl	$65535, 12(%ebp)
	jne	L5094
	.loc 9 872 18 is_stmt 1
	movl	$_settings, %ecx
	call	__ZN16General_SettingsC1Ev
L5094:
	.loc 9 2354 1
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2699:
	.def	__GLOBAL__sub_I_stbi_write_png_compression_level;	.scl	3;	.type	32;	.endef
__GLOBAL__sub_I_stbi_write_png_compression_level:
LFB2700:
	.loc 9 2354 1
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.loc 9 2354 1
	movl	$65535, 4(%esp)
	movl	$1, (%esp)
	call	__Z41__static_initialization_and_destruction_0ii
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE2700:
	.section	.ctors,"w"
	.align 4
	.long	__GLOBAL__sub_I_stbi_write_png_compression_level
	.data
	.align 4
___emutls_v._ZL33stbi__vertically_flip_on_load_set:
	.long	4
	.long	4
	.long	0
	.long	0
	.align 4
___emutls_v._ZL35stbi__vertically_flip_on_load_local:
	.long	4
	.long	4
	.long	0
	.long	0
	.align 4
___emutls_v._ZL22stbi__g_failure_reason:
	.long	4
	.long	4
	.long	0
	.long	0
	.section .rdata,"dr"
	.align 4
LC8:
	.long	172994847
	.align 4
LC9:
	.long	1132462080
	.align 4
LC17:
	.long	1060439283
	.align 4
LC18:
	.long	1053028117
	.align 4
LC19:
	.long	1057655764
	.align 4
LC20:
	.long	1067924853
	.align 4
LC22:
	.long	1056964608
	.align 4
LC24:
	.long	1050220167
	.align 4
LC25:
	.long	1058424226
	.align 4
LC26:
	.long	1038710997
	.align 4
LC27:
	.long	1124073472
	.align 4
LC28:
	.long	-1104360914
	.align 4
LC29:
	.long	1051302633
	.align 4
LC30:
	.long	1054236297
	.align 4
LC31:
	.long	1034323419
	.align 4
LC32:
	.long	1048576000
	.align 4
LC41:
	.long	1132396544
	.align 4
LC130:
	.long	1199570688
	.align 4
LC144:
	.long	1077936128
	.align 4
LC175:
	.long	1182793728
	.align 4
LC176:
	.long	1199570944
	.align 4
LC192:
	.long	1073741824
	.align 4
LC196:
	.long	1065437102
	.align 4
LC200:
	.long	1082130432
	.align 4
LC201:
	.long	1051931443
	.align 4
LC204:
	.long	-1090519040
	.align 4
LC209:
	.long	-1073741824
	.align 4
LC210:
	.long	1008981770
	.align 4
LC211:
	.long	1065185444
	.align 4
LC212:
	.long	1051372203
	.align 4
LC213:
	.long	1091567616
	.align 4
LC214:
	.long	1104674816
	.align 4
LC215:
	.long	-1042808832
	.align 8
LC216:
	.long	-57999238
	.long	1073291770
	.align 4
LC217:
	.long	1071494103
	.align 4
LC218:
	.long	1232348144
	.align 4
LC223:
	.long	1114636288
	.align 4
LC224:
	.long	1135869952
	.align 4
LC227:
	.long	1140457472
	.align 8
LC228:
	.long	0
	.long	1081073664
	.align 8
LC231:
	.long	769658139
	.long	1073127568
	.align 8
LC232:
	.long	0
	.long	1071644672
	.align 16
LC233:
	.long	0
	.long	-2147483648
	.long	16447
	.align 8
LC234:
	.long	0
	.long	1074266112
	.align 8
LC236:
	.long	0
	.long	1079902208
	.align 4
LC237:
	.long	1123024896
	.align 8
LC240:
	.long	0
	.long	1091031064
	.align 8
LC241:
	.long	0
	.long	1089454112
	.align 4
LC245:
	.long	1084655574
	.align 8
LC246:
	.long	1077952576
	.long	1072709696
	.align 8
LC247:
	.long	0
	.long	1081094144
	.align 8
LC248:
	.long	0
	.long	1073741824
	.align 8
LC250:
	.long	0
	.long	1078493184
	.align 8
LC259:
	.long	858993459
	.long	1070805811
	.align 8
LC260:
	.long	0
	.long	1081262080
	.align 8
LC261:
	.long	0
	.long	1078198272
	.align 8
LC262:
	.long	0
	.long	1074528256
	.align 4
LC269:
	.long	-1165815185
	.align 4
LC270:
	.long	1069547520
	.align 8
LC286:
	.long	-1717986918
	.long	1069128089
	.align 4
LC287:
	.long	1092616192
	.align 4
LC288:
	.long	1036831949
	.align 4
LC292:
	.long	1028443341
	.align 4
LC309:
	.long	1045220557
	.text
Letext0:
	.file 16 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/vadefs.h"
	.file 17 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/crtdefs.h"
	.file 18 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/locale.h"
	.file 19 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/excpt.h"
	.file 20 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/minwindef.h"
	.file 21 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/ctype.h"
	.file 22 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/basetsd.h"
	.file 23 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/winnt.h"
	.file 24 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/guiddef.h"
	.file 25 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/windef.h"
	.file 26 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/minwinbase.h"
	.file 27 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/wingdi.h"
	.file 28 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/winuser.h"
	.file 29 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/rpcdce.h"
	.file 30 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/stringfwd.h"
	.file 31 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/cstdlib"
	.file 32 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/cpp_type_traits.h"
	.file 33 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/type_traits"
	.file 34 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/stl_pair.h"
	.file 35 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/debug/debug.h"
	.file 36 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/cwchar"
	.file 37 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/char_traits.h"
	.file 38 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/i686-w64-mingw32/bits/c++config.h"
	.file 39 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/cstdint"
	.file 40 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/exception_ptr.h"
	.file 41 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/new"
	.file 42 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/allocator.h"
	.file 43 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/clocale"
	.file 44 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/cstdio"
	.file 45 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/alloc_traits.h"
	.file 46 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/initializer_list"
	.file 47 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/predefined_ops.h"
	.file 48 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/ext/new_allocator.h"
	.file 49 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/ext/numeric_traits.h"
	.file 50 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/ext/alloc_traits.h"
	.file 51 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/bits/stl_iterator.h"
	.file 52 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/stdlib.h"
	.file 53 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/malloc.h"
	.file 54 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/stdlib.h"
	.file 55 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/wtypesbase.h"
	.file 56 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/unknwnbase.h"
	.file 57 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/objidlbase.h"
	.file 58 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/cguid.h"
	.file 59 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/wtypes.h"
	.file 60 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/objidl.h"
	.file 61 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/oleidl.h"
	.file 62 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/servprov.h"
	.file 63 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/oaidl.h"
	.file 64 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/msxml.h"
	.file 65 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/urlmon.h"
	.file 66 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/propidl.h"
	.file 67 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/oleauto.h"
	.file 68 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/winioctl.h"
	.file 69 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/winsmcrd.h"
	.file 70 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/winscard.h"
	.file 71 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/commdlg.h"
	.file 72 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/wchar.h"
	.file 73 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/swprintf.inl"
	.file 74 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/string.h"
	.file 75 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/stdint.h"
	.file 76 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/process.h"
	.file 77 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/pthread.h"
	.file 78 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/math.h"
	.file 79 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/lib/gcc/i686-w64-mingw32/8.1.0/include/c++/math.h"
	.file 80 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/profileapi.h"
	.file 81 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/synchapi.h"
	.file 82 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/fileapi.h"
	.file 83 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/libloaderapi.h"
	.file 84 "<built-in>"
	.file 85 "C:/Program Files (x86)/mingw-w64/i686-8.1.0-posix-dwarf-rt_v6-rev0/mingw32/i686-w64-mingw32/include/sec_api/stdio_s.h"
	.section	.debug_info,"dr"
Ldebug_info0:
	.long	0x33140
	.word	0x4
	.secrel32	Ldebug_abbrev0
	.byte	0x4
	.uleb128 0xa5
	.ascii "GNU C++14 8.1.0 -mtune=generic -march=i686 -g\0"
	.byte	0x4
	.ascii "main.cpp\0"
	.ascii "C:\\Users\\andre\\OneDrive\\Desktop\\Learnings\\CapsPictures\0"
	.secrel32	Ldebug_ranges0+0x180
	.long	0
	.secrel32	Ldebug_line0
	.uleb128 0x15
	.ascii "__gnuc_va_list\0"
	.byte	0x10
	.byte	0x18
	.byte	0x1d
	.long	0x9f
	.uleb128 0xa6
	.byte	0x4
	.ascii "__builtin_va_list\0"
	.long	0xb8
	.uleb128 0x33
	.byte	0x1
	.byte	0x6
	.ascii "char\0"
	.uleb128 0x14
	.long	0xb8
	.uleb128 0x15
	.ascii "va_list\0"
	.byte	0x10
	.byte	0x1f
	.byte	0x1a
	.long	0x88
	.uleb128 0x15
	.ascii "size_t\0"
	.byte	0x11
	.byte	0x25
	.byte	0x16
	.long	0xe4
	.uleb128 0x33
	.byte	0x4
	.byte	0x7
	.ascii "unsigned int\0"
	.uleb128 0x33
	.byte	0x4
	.byte	0x5
	.ascii "int\0"
	.uleb128 0x14
	.long	0xf4
	.uleb128 0x15
	.ascii "intptr_t\0"
	.byte	0x11
	.byte	0x40
	.byte	0xd
	.long	0xf4
	.uleb128 0x15
	.ascii "uintptr_t\0"
	.byte	0x11
	.byte	0x4d
	.byte	0x16
	.long	0xe4
	.uleb128 0x15
	.ascii "wint_t\0"
	.byte	0x11
	.byte	0x6a
	.byte	0x18
	.long	0x132
	.uleb128 0x33
	.byte	0x2
	.byte	0x7
	.ascii "short unsigned int\0"
	.uleb128 0x14
	.long	0x132
	.uleb128 0x33
	.byte	0x4
	.byte	0x5
	.ascii "long int\0"
	.uleb128 0x33
	.byte	0x8
	.byte	0x5
	.ascii "long long int\0"
	.uleb128 0x1a
	.ascii "pthreadlocinfo\0"
	.byte	0x11
	.word	0x1a8
	.byte	0x28
	.long	0x182
	.uleb128 0xc
	.byte	0x4
	.long	0x188
	.uleb128 0x39
	.ascii "threadlocaleinfostruct\0"
	.byte	0xd8
	.byte	0x11
	.word	0x1bc
	.byte	0x10
	.long	0x375
	.uleb128 0x6b
	.byte	0x10
	.byte	0x11
	.word	0x1c2
	.byte	0xa
	.long	0x1f9
	.uleb128 0xa
	.ascii "locale\0"
	.byte	0x11
	.word	0x1c3
	.byte	0xb
	.long	0x461
	.byte	0
	.uleb128 0xa
	.ascii "wlocale\0"
	.byte	0x11
	.word	0x1c4
	.byte	0xe
	.long	0x46c
	.byte	0x4
	.uleb128 0x19
	.secrel32	LASF0
	.byte	0x11
	.word	0x1c5
	.byte	0xa
	.long	0x482
	.byte	0x8
	.uleb128 0xa
	.ascii "wrefcount\0"
	.byte	0x11
	.word	0x1c6
	.byte	0xa
	.long	0x482
	.byte	0xc
	.byte	0
	.uleb128 0x19
	.secrel32	LASF0
	.byte	0x11
	.word	0x1bd
	.byte	0x7
	.long	0xf4
	.byte	0
	.uleb128 0xa
	.ascii "lc_codepage\0"
	.byte	0x11
	.word	0x1be
	.byte	0x10
	.long	0xe4
	.byte	0x4
	.uleb128 0xa
	.ascii "lc_collate_cp\0"
	.byte	0x11
	.word	0x1bf
	.byte	0x10
	.long	0xe4
	.byte	0x8
	.uleb128 0xa
	.ascii "lc_handle\0"
	.byte	0x11
	.word	0x1c0
	.byte	0x1c
	.long	0x488
	.byte	0xc
	.uleb128 0xa
	.ascii "lc_id\0"
	.byte	0x11
	.word	0x1c1
	.byte	0x10
	.long	0x4ad
	.byte	0x24
	.uleb128 0xa
	.ascii "lc_category\0"
	.byte	0x11
	.word	0x1c7
	.byte	0x12
	.long	0x4bd
	.byte	0x48
	.uleb128 0xa
	.ascii "lc_clike\0"
	.byte	0x11
	.word	0x1c8
	.byte	0x7
	.long	0xf4
	.byte	0xa8
	.uleb128 0xa
	.ascii "mb_cur_max\0"
	.byte	0x11
	.word	0x1c9
	.byte	0x7
	.long	0xf4
	.byte	0xac
	.uleb128 0xa
	.ascii "lconv_intl_refcount\0"
	.byte	0x11
	.word	0x1ca
	.byte	0x8
	.long	0x482
	.byte	0xb0
	.uleb128 0xa
	.ascii "lconv_num_refcount\0"
	.byte	0x11
	.word	0x1cb
	.byte	0x8
	.long	0x482
	.byte	0xb4
	.uleb128 0xa
	.ascii "lconv_mon_refcount\0"
	.byte	0x11
	.word	0x1cc
	.byte	0x8
	.long	0x482
	.byte	0xb8
	.uleb128 0xa
	.ascii "lconv\0"
	.byte	0x11
	.word	0x1cd
	.byte	0x11
	.long	0x67f
	.byte	0xbc
	.uleb128 0xa
	.ascii "ctype1_refcount\0"
	.byte	0x11
	.word	0x1ce
	.byte	0x8
	.long	0x482
	.byte	0xc0
	.uleb128 0xa
	.ascii "ctype1\0"
	.byte	0x11
	.word	0x1cf
	.byte	0x13
	.long	0x685
	.byte	0xc4
	.uleb128 0xa
	.ascii "pctype\0"
	.byte	0x11
	.word	0x1d0
	.byte	0x19
	.long	0x68b
	.byte	0xc8
	.uleb128 0xa
	.ascii "pclmap\0"
	.byte	0x11
	.word	0x1d1
	.byte	0x18
	.long	0x691
	.byte	0xcc
	.uleb128 0xa
	.ascii "pcumap\0"
	.byte	0x11
	.word	0x1d2
	.byte	0x18
	.long	0x691
	.byte	0xd0
	.uleb128 0xa
	.ascii "lc_time_curr\0"
	.byte	0x11
	.word	0x1d3
	.byte	0x1a
	.long	0x6be
	.byte	0xd4
	.byte	0
	.uleb128 0x1a
	.ascii "pthreadmbcinfo\0"
	.byte	0x11
	.word	0x1a9
	.byte	0x25
	.long	0x38d
	.uleb128 0xc
	.byte	0x4
	.long	0x393
	.uleb128 0x85
	.ascii "threadmbcinfostruct\0"
	.uleb128 0x39
	.ascii "localeinfo_struct\0"
	.byte	0x8
	.byte	0x11
	.word	0x1ac
	.byte	0x10
	.long	0x3ea
	.uleb128 0xa
	.ascii "locinfo\0"
	.byte	0x11
	.word	0x1ad
	.byte	0x12
	.long	0x16a
	.byte	0
	.uleb128 0xa
	.ascii "mbcinfo\0"
	.byte	0x11
	.word	0x1ae
	.byte	0x12
	.long	0x375
	.byte	0x4
	.byte	0
	.uleb128 0x1a
	.ascii "_locale_tstruct\0"
	.byte	0x11
	.word	0x1af
	.byte	0x3
	.long	0x3a9
	.uleb128 0x39
	.ascii "tagLC_ID\0"
	.byte	0x6
	.byte	0x11
	.word	0x1b3
	.byte	0x10
	.long	0x452
	.uleb128 0xa
	.ascii "wLanguage\0"
	.byte	0x11
	.word	0x1b4
	.byte	0x12
	.long	0x132
	.byte	0
	.uleb128 0xa
	.ascii "wCountry\0"
	.byte	0x11
	.word	0x1b5
	.byte	0x12
	.long	0x132
	.byte	0x2
	.uleb128 0xa
	.ascii "wCodePage\0"
	.byte	0x11
	.word	0x1b6
	.byte	0x12
	.long	0x132
	.byte	0x4
	.byte	0
	.uleb128 0x1a
	.ascii "LC_ID\0"
	.byte	0x11
	.word	0x1b7
	.byte	0x3
	.long	0x403
	.uleb128 0xc
	.byte	0x4
	.long	0xb8
	.uleb128 0x14
	.long	0x461
	.uleb128 0xc
	.byte	0x4
	.long	0x472
	.uleb128 0x33
	.byte	0x2
	.byte	0x7
	.ascii "wchar_t\0"
	.uleb128 0x14
	.long	0x472
	.uleb128 0xc
	.byte	0x4
	.long	0xf4
	.uleb128 0x10
	.long	0x498
	.long	0x498
	.uleb128 0x12
	.long	0xe4
	.byte	0x5
	.byte	0
	.uleb128 0x33
	.byte	0x4
	.byte	0x7
	.ascii "long unsigned int\0"
	.uleb128 0x10
	.long	0x452
	.long	0x4bd
	.uleb128 0x12
	.long	0xe4
	.byte	0x5
	.byte	0
	.uleb128 0x10
	.long	0x1a9
	.long	0x4cd
	.uleb128 0x12
	.long	0xe4
	.byte	0x5
	.byte	0
	.uleb128 0x23
	.ascii "lconv\0"
	.byte	0x30
	.byte	0x12
	.byte	0x2d
	.byte	0xa
	.long	0x67f
	.uleb128 0x11
	.ascii "decimal_point\0"
	.byte	0x12
	.byte	0x2e
	.byte	0xb
	.long	0x461
	.byte	0
	.uleb128 0x11
	.ascii "thousands_sep\0"
	.byte	0x12
	.byte	0x2f
	.byte	0xb
	.long	0x461
	.byte	0x4
	.uleb128 0x11
	.ascii "grouping\0"
	.byte	0x12
	.byte	0x30
	.byte	0xb
	.long	0x461
	.byte	0x8
	.uleb128 0x11
	.ascii "int_curr_symbol\0"
	.byte	0x12
	.byte	0x31
	.byte	0xb
	.long	0x461
	.byte	0xc
	.uleb128 0x11
	.ascii "currency_symbol\0"
	.byte	0x12
	.byte	0x32
	.byte	0xb
	.long	0x461
	.byte	0x10
	.uleb128 0x11
	.ascii "mon_decimal_point\0"
	.byte	0x12
	.byte	0x33
	.byte	0xb
	.long	0x461
	.byte	0x14
	.uleb128 0x11
	.ascii "mon_thousands_sep\0"
	.byte	0x12
	.byte	0x34
	.byte	0xb
	.long	0x461
	.byte	0x18
	.uleb128 0x11
	.ascii "mon_grouping\0"
	.byte	0x12
	.byte	0x35
	.byte	0xb
	.long	0x461
	.byte	0x1c
	.uleb128 0x11
	.ascii "positive_sign\0"
	.byte	0x12
	.byte	0x36
	.byte	0xb
	.long	0x461
	.byte	0x20
	.uleb128 0x11
	.ascii "negative_sign\0"
	.byte	0x12
	.byte	0x37
	.byte	0xb
	.long	0x461
	.byte	0x24
	.uleb128 0x11
	.ascii "int_frac_digits\0"
	.byte	0x12
	.byte	0x38
	.byte	0xa
	.long	0xb8
	.byte	0x28
	.uleb128 0x11
	.ascii "frac_digits\0"
	.byte	0x12
	.byte	0x39
	.byte	0xa
	.long	0xb8
	.byte	0x29
	.uleb128 0x11
	.ascii "p_cs_precedes\0"
	.byte	0x12
	.byte	0x3a
	.byte	0xa
	.long	0xb8
	.byte	0x2a
	.uleb128 0x11
	.ascii "p_sep_by_space\0"
	.byte	0x12
	.byte	0x3b
	.byte	0xa
	.long	0xb8
	.byte	0x2b
	.uleb128 0x11
	.ascii "n_cs_precedes\0"
	.byte	0x12
	.byte	0x3c
	.byte	0xa
	.long	0xb8
	.byte	0x2c
	.uleb128 0x11
	.ascii "n_sep_by_space\0"
	.byte	0x12
	.byte	0x3d
	.byte	0xa
	.long	0xb8
	.byte	0x2d
	.uleb128 0x11
	.ascii "p_sign_posn\0"
	.byte	0x12
	.byte	0x3e
	.byte	0xa
	.long	0xb8
	.byte	0x2e
	.uleb128 0x11
	.ascii "n_sign_posn\0"
	.byte	0x12
	.byte	0x3f
	.byte	0xa
	.long	0xb8
	.byte	0x2f
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x4cd
	.uleb128 0xc
	.byte	0x4
	.long	0x132
	.uleb128 0xc
	.byte	0x4
	.long	0x148
	.uleb128 0xc
	.byte	0x4
	.long	0x6a8
	.uleb128 0x33
	.byte	0x1
	.byte	0x8
	.ascii "unsigned char\0"
	.uleb128 0x14
	.long	0x697
	.uleb128 0x85
	.ascii "__lc_time_data\0"
	.uleb128 0xc
	.byte	0x4
	.long	0x6ad
	.uleb128 0x15
	.ascii "_PHNDLR\0"
	.byte	0x13
	.byte	0x3f
	.byte	0x1b
	.long	0x6d4
	.uleb128 0xc
	.byte	0x4
	.long	0x6da
	.uleb128 0x60
	.long	0x6e5
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x23
	.ascii "_XCPT_ACTION\0"
	.byte	0xc
	.byte	0x13
	.byte	0x41
	.byte	0xa
	.long	0x731
	.uleb128 0x11
	.ascii "XcptNum\0"
	.byte	0x13
	.byte	0x42
	.byte	0x13
	.long	0x498
	.byte	0
	.uleb128 0x11
	.ascii "SigNum\0"
	.byte	0x13
	.byte	0x43
	.byte	0x9
	.long	0xf4
	.byte	0x4
	.uleb128 0x11
	.ascii "XcptAction\0"
	.byte	0x13
	.byte	0x44
	.byte	0xd
	.long	0x6c4
	.byte	0x8
	.byte	0
	.uleb128 0x10
	.long	0x6e5
	.long	0x73c
	.uleb128 0x78
	.byte	0
	.uleb128 0xe
	.ascii "_XcptActTab\0"
	.byte	0x13
	.byte	0x47
	.byte	0x1e
	.long	0x731
	.uleb128 0xe
	.ascii "_XcptActTabCount\0"
	.byte	0x13
	.byte	0x48
	.byte	0xe
	.long	0xf4
	.uleb128 0xe
	.ascii "_XcptActTabSize\0"
	.byte	0x13
	.byte	0x49
	.byte	0xe
	.long	0xf4
	.uleb128 0xe
	.ascii "_First_FPE_Indx\0"
	.byte	0x13
	.byte	0x4a
	.byte	0xe
	.long	0xf4
	.uleb128 0xe
	.ascii "_Num_FPE\0"
	.byte	0x13
	.byte	0x4b
	.byte	0xe
	.long	0xf4
	.uleb128 0xa7
	.byte	0x4
	.uleb128 0x15
	.ascii "BYTE\0"
	.byte	0x14
	.byte	0x8b
	.byte	0x19
	.long	0x697
	.uleb128 0x15
	.ascii "WORD\0"
	.byte	0x14
	.byte	0x8c
	.byte	0x1a
	.long	0x132
	.uleb128 0x15
	.ascii "DWORD\0"
	.byte	0x14
	.byte	0x8d
	.byte	0x1d
	.long	0x498
	.uleb128 0x33
	.byte	0x4
	.byte	0x4
	.ascii "float\0"
	.uleb128 0x14
	.long	0x7d5
	.uleb128 0xc
	.byte	0x4
	.long	0x7e9
	.uleb128 0xa8
	.uleb128 0x15
	.ascii "UINT\0"
	.byte	0x14
	.byte	0x9f
	.byte	0x18
	.long	0xe4
	.uleb128 0xc
	.byte	0x4
	.long	0xe4
	.uleb128 0xe
	.ascii "_imp___pctype\0"
	.byte	0x15
	.byte	0x2b
	.byte	0x1c
	.long	0x814
	.uleb128 0xc
	.byte	0x4
	.long	0x685
	.uleb128 0xe
	.ascii "_imp___wctype\0"
	.byte	0x15
	.byte	0x3b
	.byte	0x1c
	.long	0x814
	.uleb128 0xe
	.ascii "_imp___pwctype\0"
	.byte	0x15
	.byte	0x47
	.byte	0x1c
	.long	0x814
	.uleb128 0x10
	.long	0x6a8
	.long	0x852
	.uleb128 0x78
	.byte	0
	.uleb128 0xe
	.ascii "__newclmap\0"
	.byte	0x15
	.byte	0x50
	.byte	0x1e
	.long	0x847
	.uleb128 0xe
	.ascii "__newcumap\0"
	.byte	0x15
	.byte	0x51
	.byte	0x1e
	.long	0x847
	.uleb128 0xe
	.ascii "__ptlocinfo\0"
	.byte	0x15
	.byte	0x52
	.byte	0x19
	.long	0x16a
	.uleb128 0xe
	.ascii "__ptmbcinfo\0"
	.byte	0x15
	.byte	0x53
	.byte	0x19
	.long	0x375
	.uleb128 0xe
	.ascii "__globallocalestatus\0"
	.byte	0x15
	.byte	0x54
	.byte	0xe
	.long	0xf4
	.uleb128 0xe
	.ascii "__locale_changed\0"
	.byte	0x15
	.byte	0x55
	.byte	0xe
	.long	0xf4
	.uleb128 0xe
	.ascii "__initiallocinfo\0"
	.byte	0x15
	.byte	0x56
	.byte	0x28
	.long	0x188
	.uleb128 0xe
	.ascii "__initiallocalestructinfo\0"
	.byte	0x15
	.byte	0x57
	.byte	0x1a
	.long	0x3ea
	.uleb128 0xe
	.ascii "_imp____mb_cur_max\0"
	.byte	0x15
	.byte	0xcb
	.byte	0x10
	.long	0x482
	.uleb128 0x33
	.byte	0x1
	.byte	0x6
	.ascii "signed char\0"
	.uleb128 0xc
	.byte	0x4
	.long	0x92c
	.uleb128 0x33
	.byte	0x2
	.byte	0x5
	.ascii "short int\0"
	.uleb128 0xc
	.byte	0x4
	.long	0x941
	.uleb128 0xc
	.byte	0x4
	.long	0x697
	.uleb128 0x33
	.byte	0x8
	.byte	0x7
	.ascii "long long unsigned int\0"
	.uleb128 0x15
	.ascii "UINT_PTR\0"
	.byte	0x16
	.byte	0x35
	.byte	0x18
	.long	0xe4
	.uleb128 0x15
	.ascii "LONG_PTR\0"
	.byte	0x16
	.byte	0x36
	.byte	0x10
	.long	0x14d
	.uleb128 0x15
	.ascii "ULONG_PTR\0"
	.byte	0x16
	.byte	0x37
	.byte	0x19
	.long	0x498
	.uleb128 0x15
	.ascii "DWORD_PTR\0"
	.byte	0x16
	.byte	0xbf
	.byte	0x27
	.long	0x996
	.uleb128 0x1a
	.ascii "CHAR\0"
	.byte	0x17
	.word	0x11d
	.byte	0x10
	.long	0xb8
	.uleb128 0x14
	.long	0x9ba
	.uleb128 0x1a
	.ascii "LONG\0"
	.byte	0x17
	.word	0x11f
	.byte	0x14
	.long	0x14d
	.uleb128 0xc
	.byte	0x4
	.long	0x9ba
	.uleb128 0xc
	.byte	0x4
	.long	0x9c8
	.uleb128 0x1a
	.ascii "LPSTR\0"
	.byte	0x17
	.word	0x150
	.byte	0x18
	.long	0x9db
	.uleb128 0x1a
	.ascii "LPCSTR\0"
	.byte	0x17
	.word	0x153
	.byte	0x17
	.long	0x9e1
	.uleb128 0x1a
	.ascii "HANDLE\0"
	.byte	0x17
	.word	0x195
	.byte	0x11
	.long	0x7aa
	.uleb128 0x1a
	.ascii "LONGLONG\0"
	.byte	0x17
	.word	0x1ea
	.byte	0x25
	.long	0x159
	.uleb128 0xa9
	.ascii "_LARGE_INTEGER\0"
	.byte	0x8
	.byte	0x17
	.word	0x1f9
	.byte	0x11
	.long	0xabe
	.uleb128 0x6b
	.byte	0x8
	.byte	0x17
	.word	0x1fa
	.byte	0x1b
	.long	0xa6d
	.uleb128 0xa
	.ascii "LowPart\0"
	.byte	0x17
	.word	0x1fb
	.byte	0xd
	.long	0x7c7
	.byte	0
	.uleb128 0x19
	.secrel32	LASF1
	.byte	0x17
	.word	0x1fc
	.byte	0xc
	.long	0x9cd
	.byte	0x4
	.byte	0
	.uleb128 0x6b
	.byte	0x8
	.byte	0x17
	.word	0x1fe
	.byte	0xc
	.long	0xa98
	.uleb128 0xa
	.ascii "LowPart\0"
	.byte	0x17
	.word	0x1ff
	.byte	0xd
	.long	0x7c7
	.byte	0
	.uleb128 0x19
	.secrel32	LASF1
	.byte	0x17
	.word	0x200
	.byte	0xc
	.long	0x9cd
	.byte	0x4
	.byte	0
	.uleb128 0xaa
	.long	0xa42
	.uleb128 0x86
	.ascii "u\0"
	.byte	0x17
	.word	0x201
	.byte	0x7
	.long	0xa6d
	.uleb128 0x86
	.ascii "QuadPart\0"
	.byte	0x17
	.word	0x203
	.byte	0xe
	.long	0xa16
	.byte	0
	.uleb128 0x1a
	.ascii "LARGE_INTEGER\0"
	.byte	0x17
	.word	0x204
	.byte	0x5
	.long	0xa28
	.uleb128 0x23
	.ascii "_GUID\0"
	.byte	0x10
	.byte	0x18
	.byte	0x13
	.byte	0x10
	.long	0xb21
	.uleb128 0x11
	.ascii "Data1\0"
	.byte	0x18
	.byte	0x14
	.byte	0x15
	.long	0x498
	.byte	0
	.uleb128 0x11
	.ascii "Data2\0"
	.byte	0x18
	.byte	0x15
	.byte	0x12
	.long	0x132
	.byte	0x4
	.uleb128 0x11
	.ascii "Data3\0"
	.byte	0x18
	.byte	0x16
	.byte	0x12
	.long	0x132
	.byte	0x6
	.uleb128 0x11
	.ascii "Data4\0"
	.byte	0x18
	.byte	0x17
	.byte	0x18
	.long	0xb21
	.byte	0x8
	.byte	0
	.uleb128 0x10
	.long	0x697
	.long	0xb31
	.uleb128 0x12
	.long	0xe4
	.byte	0x7
	.byte	0
	.uleb128 0x15
	.ascii "GUID\0"
	.byte	0x18
	.byte	0x18
	.byte	0x3
	.long	0xad5
	.uleb128 0x14
	.long	0xb31
	.uleb128 0x15
	.ascii "IID\0"
	.byte	0x18
	.byte	0x53
	.byte	0xe
	.long	0xb31
	.uleb128 0x14
	.long	0xb43
	.uleb128 0x15
	.ascii "CLSID\0"
	.byte	0x18
	.byte	0x5b
	.byte	0xe
	.long	0xb31
	.uleb128 0x14
	.long	0xb54
	.uleb128 0x15
	.ascii "FMTID\0"
	.byte	0x18
	.byte	0x62
	.byte	0xe
	.long	0xb31
	.uleb128 0x14
	.long	0xb67
	.uleb128 0x8
	.ascii "GUID_MAX_POWER_SAVINGS\0"
	.byte	0x17
	.word	0x13a9
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_MIN_POWER_SAVINGS\0"
	.byte	0x17
	.word	0x13aa
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_TYPICAL_POWER_SAVINGS\0"
	.byte	0x17
	.word	0x13ab
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "NO_SUBGROUP_GUID\0"
	.byte	0x17
	.word	0x13ac
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "ALL_POWERSCHEMES_GUID\0"
	.byte	0x17
	.word	0x13ad
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_POWERSCHEME_PERSONALITY\0"
	.byte	0x17
	.word	0x13ae
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_ACTIVE_POWERSCHEME\0"
	.byte	0x17
	.word	0x13af
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_IDLE_RESILIENCY_SUBGROUP\0"
	.byte	0x17
	.word	0x13b0
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_IDLE_RESILIENCY_PERIOD\0"
	.byte	0x17
	.word	0x13b1
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_DISK_COALESCING_POWERDOWN_TIMEOUT\0"
	.byte	0x17
	.word	0x13b2
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT\0"
	.byte	0x17
	.word	0x13b3
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_VIDEO_SUBGROUP\0"
	.byte	0x17
	.word	0x13b4
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_VIDEO_POWERDOWN_TIMEOUT\0"
	.byte	0x17
	.word	0x13b5
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_VIDEO_ANNOYANCE_TIMEOUT\0"
	.byte	0x17
	.word	0x13b6
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE\0"
	.byte	0x17
	.word	0x13b7
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_VIDEO_DIM_TIMEOUT\0"
	.byte	0x17
	.word	0x13b8
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_VIDEO_ADAPTIVE_POWERDOWN\0"
	.byte	0x17
	.word	0x13b9
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_MONITOR_POWER_ON\0"
	.byte	0x17
	.word	0x13ba
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS\0"
	.byte	0x17
	.word	0x13bb
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS\0"
	.byte	0x17
	.word	0x13bc
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS\0"
	.byte	0x17
	.word	0x13bd
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS\0"
	.byte	0x17
	.word	0x13be
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_CONSOLE_DISPLAY_STATE\0"
	.byte	0x17
	.word	0x13bf
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_ALLOW_DISPLAY_REQUIRED\0"
	.byte	0x17
	.word	0x13c0
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_VIDEO_CONSOLE_LOCK_TIMEOUT\0"
	.byte	0x17
	.word	0x13c1
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP\0"
	.byte	0x17
	.word	0x13c2
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_NON_ADAPTIVE_INPUT_TIMEOUT\0"
	.byte	0x17
	.word	0x13c3
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_DISK_SUBGROUP\0"
	.byte	0x17
	.word	0x13c4
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_DISK_POWERDOWN_TIMEOUT\0"
	.byte	0x17
	.word	0x13c5
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_DISK_IDLE_TIMEOUT\0"
	.byte	0x17
	.word	0x13c6
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_DISK_BURST_IGNORE_THRESHOLD\0"
	.byte	0x17
	.word	0x13c7
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_DISK_ADAPTIVE_POWERDOWN\0"
	.byte	0x17
	.word	0x13c8
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_SLEEP_SUBGROUP\0"
	.byte	0x17
	.word	0x13c9
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_SLEEP_IDLE_THRESHOLD\0"
	.byte	0x17
	.word	0x13ca
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_STANDBY_TIMEOUT\0"
	.byte	0x17
	.word	0x13cb
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_UNATTEND_SLEEP_TIMEOUT\0"
	.byte	0x17
	.word	0x13cc
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_HIBERNATE_TIMEOUT\0"
	.byte	0x17
	.word	0x13cd
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_HIBERNATE_FASTS4_POLICY\0"
	.byte	0x17
	.word	0x13ce
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_CRITICAL_POWER_TRANSITION\0"
	.byte	0x17
	.word	0x13cf
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_SYSTEM_AWAYMODE\0"
	.byte	0x17
	.word	0x13d0
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_ALLOW_AWAYMODE\0"
	.byte	0x17
	.word	0x13d1
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_ALLOW_STANDBY_STATES\0"
	.byte	0x17
	.word	0x13d2
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_ALLOW_RTC_WAKE\0"
	.byte	0x17
	.word	0x13d3
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_ALLOW_SYSTEM_REQUIRED\0"
	.byte	0x17
	.word	0x13d4
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_SYSTEM_BUTTON_SUBGROUP\0"
	.byte	0x17
	.word	0x13d5
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_POWERBUTTON_ACTION\0"
	.byte	0x17
	.word	0x13d6
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_SLEEPBUTTON_ACTION\0"
	.byte	0x17
	.word	0x13d7
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_USERINTERFACEBUTTON_ACTION\0"
	.byte	0x17
	.word	0x13d8
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_LIDCLOSE_ACTION\0"
	.byte	0x17
	.word	0x13d9
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_LIDOPEN_POWERSTATE\0"
	.byte	0x17
	.word	0x13da
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_SUBGROUP\0"
	.byte	0x17
	.word	0x13db
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_DISCHARGE_ACTION_0\0"
	.byte	0x17
	.word	0x13dc
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_DISCHARGE_LEVEL_0\0"
	.byte	0x17
	.word	0x13dd
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_DISCHARGE_FLAGS_0\0"
	.byte	0x17
	.word	0x13de
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_DISCHARGE_ACTION_1\0"
	.byte	0x17
	.word	0x13df
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_DISCHARGE_LEVEL_1\0"
	.byte	0x17
	.word	0x13e0
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_DISCHARGE_FLAGS_1\0"
	.byte	0x17
	.word	0x13e1
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_DISCHARGE_ACTION_2\0"
	.byte	0x17
	.word	0x13e2
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_DISCHARGE_LEVEL_2\0"
	.byte	0x17
	.word	0x13e3
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_DISCHARGE_FLAGS_2\0"
	.byte	0x17
	.word	0x13e4
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_DISCHARGE_ACTION_3\0"
	.byte	0x17
	.word	0x13e5
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_DISCHARGE_LEVEL_3\0"
	.byte	0x17
	.word	0x13e6
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_DISCHARGE_FLAGS_3\0"
	.byte	0x17
	.word	0x13e7
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_SETTINGS_SUBGROUP\0"
	.byte	0x17
	.word	0x13e8
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_THROTTLE_POLICY\0"
	.byte	0x17
	.word	0x13e9
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_THROTTLE_MAXIMUM\0"
	.byte	0x17
	.word	0x13ea
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_THROTTLE_MINIMUM\0"
	.byte	0x17
	.word	0x13eb
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_ALLOW_THROTTLING\0"
	.byte	0x17
	.word	0x13ec
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_IDLESTATE_POLICY\0"
	.byte	0x17
	.word	0x13ed
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PERFSTATE_POLICY\0"
	.byte	0x17
	.word	0x13ee
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PERF_INCREASE_THRESHOLD\0"
	.byte	0x17
	.word	0x13ef
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PERF_DECREASE_THRESHOLD\0"
	.byte	0x17
	.word	0x13f0
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PERF_INCREASE_POLICY\0"
	.byte	0x17
	.word	0x13f1
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PERF_DECREASE_POLICY\0"
	.byte	0x17
	.word	0x13f2
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PERF_INCREASE_TIME\0"
	.byte	0x17
	.word	0x13f3
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PERF_DECREASE_TIME\0"
	.byte	0x17
	.word	0x13f4
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PERF_TIME_CHECK\0"
	.byte	0x17
	.word	0x13f5
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PERF_BOOST_POLICY\0"
	.byte	0x17
	.word	0x13f6
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PERF_BOOST_MODE\0"
	.byte	0x17
	.word	0x13f7
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_IDLE_ALLOW_SCALING\0"
	.byte	0x17
	.word	0x13f8
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_IDLE_DISABLE\0"
	.byte	0x17
	.word	0x13f9
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_IDLE_STATE_MAXIMUM\0"
	.byte	0x17
	.word	0x13fa
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_IDLE_TIME_CHECK\0"
	.byte	0x17
	.word	0x13fb
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD\0"
	.byte	0x17
	.word	0x13fc
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD\0"
	.byte	0x17
	.word	0x13fd
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD\0"
	.byte	0x17
	.word	0x13fe
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD\0"
	.byte	0x17
	.word	0x13ff
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY\0"
	.byte	0x17
	.word	0x1400
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY\0"
	.byte	0x17
	.word	0x1401
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_MAX_CORES\0"
	.byte	0x17
	.word	0x1402
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_MIN_CORES\0"
	.byte	0x17
	.word	0x1403
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME\0"
	.byte	0x17
	.word	0x1404
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME\0"
	.byte	0x17
	.word	0x1405
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR\0"
	.byte	0x17
	.word	0x1406
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD\0"
	.byte	0x17
	.word	0x1407
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING\0"
	.byte	0x17
	.word	0x1408
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR\0"
	.byte	0x17
	.word	0x1409
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD\0"
	.byte	0x17
	.word	0x140a
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING\0"
	.byte	0x17
	.word	0x140b
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD\0"
	.byte	0x17
	.word	0x140c
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PARKING_CORE_OVERRIDE\0"
	.byte	0x17
	.word	0x140d
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PARKING_PERF_STATE\0"
	.byte	0x17
	.word	0x140e
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD\0"
	.byte	0x17
	.word	0x140f
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD\0"
	.byte	0x17
	.word	0x1410
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PERF_HISTORY\0"
	.byte	0x17
	.word	0x1411
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_PERF_LATENCY_HINT\0"
	.byte	0x17
	.word	0x1412
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PROCESSOR_DISTRIBUTE_UTILITY\0"
	.byte	0x17
	.word	0x1413
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_SYSTEM_COOLING_POLICY\0"
	.byte	0x17
	.word	0x1414
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_LOCK_CONSOLE_ON_WAKE\0"
	.byte	0x17
	.word	0x1415
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_DEVICE_IDLE_POLICY\0"
	.byte	0x17
	.word	0x1416
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_ACDC_POWER_SOURCE\0"
	.byte	0x17
	.word	0x1417
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_LIDSWITCH_STATE_CHANGE\0"
	.byte	0x17
	.word	0x1418
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BATTERY_PERCENTAGE_REMAINING\0"
	.byte	0x17
	.word	0x1419
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_GLOBAL_USER_PRESENCE\0"
	.byte	0x17
	.word	0x141a
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_SESSION_DISPLAY_STATUS\0"
	.byte	0x17
	.word	0x141b
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_SESSION_USER_PRESENCE\0"
	.byte	0x17
	.word	0x141c
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_IDLE_BACKGROUND_TASK\0"
	.byte	0x17
	.word	0x141d
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_BACKGROUND_TASK_NOTIFICATION\0"
	.byte	0x17
	.word	0x141e
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_APPLAUNCH_BUTTON\0"
	.byte	0x17
	.word	0x141f
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PCIEXPRESS_SETTINGS_SUBGROUP\0"
	.byte	0x17
	.word	0x1420
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_PCIEXPRESS_ASPM_POLICY\0"
	.byte	0x17
	.word	0x1421
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_ENABLE_SWITCH_FORCED_SHUTDOWN\0"
	.byte	0x17
	.word	0x1422
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "PPM_PERFSTATE_CHANGE_GUID\0"
	.byte	0x17
	.word	0x1620
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "PPM_PERFSTATE_DOMAIN_CHANGE_GUID\0"
	.byte	0x17
	.word	0x1621
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "PPM_IDLESTATE_CHANGE_GUID\0"
	.byte	0x17
	.word	0x1622
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "PPM_PERFSTATES_DATA_GUID\0"
	.byte	0x17
	.word	0x1623
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "PPM_IDLESTATES_DATA_GUID\0"
	.byte	0x17
	.word	0x1624
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "PPM_IDLE_ACCOUNTING_GUID\0"
	.byte	0x17
	.word	0x1625
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "PPM_IDLE_ACCOUNTING_EX_GUID\0"
	.byte	0x17
	.word	0x1626
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "PPM_THERMALCONSTRAINT_GUID\0"
	.byte	0x17
	.word	0x1627
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "PPM_PERFMON_PERFSTATE_GUID\0"
	.byte	0x17
	.word	0x1628
	.byte	0x5
	.long	0xb3e
	.uleb128 0x8
	.ascii "PPM_THERMAL_POLICY_CHANGE_GUID\0"
	.byte	0x17
	.word	0x1629
	.byte	0x5
	.long	0xb3e
	.uleb128 0x15
	.ascii "WPARAM\0"
	.byte	0x14
	.byte	0xa6
	.byte	0x14
	.long	0x974
	.uleb128 0x15
	.ascii "LPARAM\0"
	.byte	0x14
	.byte	0xa7
	.byte	0x14
	.long	0x985
	.uleb128 0x15
	.ascii "LRESULT\0"
	.byte	0x14
	.byte	0xa8
	.byte	0x14
	.long	0x985
	.uleb128 0x23
	.ascii "HINSTANCE__\0"
	.byte	0x4
	.byte	0x14
	.byte	0xd0
	.byte	0x3
	.long	0x20ee
	.uleb128 0x2b
	.secrel32	LASF2
	.byte	0x14
	.byte	0xd0
	.byte	0x3
	.long	0xf4
	.byte	0
	.byte	0
	.uleb128 0x15
	.ascii "HINSTANCE\0"
	.byte	0x14
	.byte	0xd0
	.byte	0x3
	.long	0x2100
	.uleb128 0xc
	.byte	0x4
	.long	0x20cb
	.uleb128 0x23
	.ascii "_FILETIME\0"
	.byte	0x8
	.byte	0x14
	.byte	0xde
	.byte	0x12
	.long	0x2149
	.uleb128 0x11
	.ascii "dwLowDateTime\0"
	.byte	0x14
	.byte	0xdf
	.byte	0xb
	.long	0x7c7
	.byte	0
	.uleb128 0x11
	.ascii "dwHighDateTime\0"
	.byte	0x14
	.byte	0xe0
	.byte	0xb
	.long	0x7c7
	.byte	0x4
	.byte	0
	.uleb128 0x15
	.ascii "FILETIME\0"
	.byte	0x14
	.byte	0xe1
	.byte	0x5
	.long	0x2106
	.uleb128 0x23
	.ascii "HWND__\0"
	.byte	0x4
	.byte	0x19
	.byte	0x19
	.byte	0x1
	.long	0x2178
	.uleb128 0x2b
	.secrel32	LASF2
	.byte	0x19
	.byte	0x19
	.byte	0x1
	.long	0xf4
	.byte	0
	.byte	0
	.uleb128 0x15
	.ascii "HWND\0"
	.byte	0x19
	.byte	0x19
	.byte	0x1
	.long	0x2185
	.uleb128 0xc
	.byte	0x4
	.long	0x215a
	.uleb128 0x23
	.ascii "HBRUSH__\0"
	.byte	0x4
	.byte	0x19
	.byte	0x2c
	.byte	0x1
	.long	0x21ab
	.uleb128 0x2b
	.secrel32	LASF2
	.byte	0x19
	.byte	0x2c
	.byte	0x1
	.long	0xf4
	.byte	0
	.byte	0
	.uleb128 0x15
	.ascii "HBRUSH\0"
	.byte	0x19
	.byte	0x2c
	.byte	0x1
	.long	0x21ba
	.uleb128 0xc
	.byte	0x4
	.long	0x218b
	.uleb128 0x23
	.ascii "HDC__\0"
	.byte	0x4
	.byte	0x19
	.byte	0x2e
	.byte	0x1
	.long	0x21dd
	.uleb128 0x2b
	.secrel32	LASF2
	.byte	0x19
	.byte	0x2e
	.byte	0x1
	.long	0xf4
	.byte	0
	.byte	0
	.uleb128 0x15
	.ascii "HDC\0"
	.byte	0x19
	.byte	0x2e
	.byte	0x1
	.long	0x21e9
	.uleb128 0xc
	.byte	0x4
	.long	0x21c0
	.uleb128 0x23
	.ascii "HICON__\0"
	.byte	0x4
	.byte	0x19
	.byte	0x33
	.byte	0x1
	.long	0x220e
	.uleb128 0x2b
	.secrel32	LASF2
	.byte	0x19
	.byte	0x33
	.byte	0x1
	.long	0xf4
	.byte	0
	.byte	0
	.uleb128 0x15
	.ascii "HICON\0"
	.byte	0x19
	.byte	0x33
	.byte	0x1
	.long	0x221c
	.uleb128 0xc
	.byte	0x4
	.long	0x21ef
	.uleb128 0x15
	.ascii "HCURSOR\0"
	.byte	0x19
	.byte	0x3b
	.byte	0xf
	.long	0x220e
	.uleb128 0x23
	.ascii "tagRECT\0"
	.byte	0x10
	.byte	0x19
	.byte	0x48
	.byte	0x10
	.long	0x227b
	.uleb128 0x2b
	.secrel32	LASF3
	.byte	0x19
	.byte	0x49
	.byte	0x8
	.long	0x9cd
	.byte	0
	.uleb128 0x11
	.ascii "top\0"
	.byte	0x19
	.byte	0x4a
	.byte	0x8
	.long	0x9cd
	.byte	0x4
	.uleb128 0x2b
	.secrel32	LASF4
	.byte	0x19
	.byte	0x4b
	.byte	0x8
	.long	0x9cd
	.byte	0x8
	.uleb128 0x11
	.ascii "bottom\0"
	.byte	0x19
	.byte	0x4c
	.byte	0x8
	.long	0x9cd
	.byte	0xc
	.byte	0
	.uleb128 0x15
	.ascii "RECT\0"
	.byte	0x19
	.byte	0x4d
	.byte	0x3
	.long	0x2232
	.uleb128 0xc
	.byte	0x4
	.long	0x2232
	.uleb128 0x15
	.ascii "LPRECT\0"
	.byte	0x19
	.byte	0x4d
	.byte	0x18
	.long	0x2288
	.uleb128 0x23
	.ascii "tagPOINT\0"
	.byte	0x8
	.byte	0x19
	.byte	0x5a
	.byte	0x10
	.long	0x22c6
	.uleb128 0x11
	.ascii "x\0"
	.byte	0x19
	.byte	0x5b
	.byte	0x8
	.long	0x9cd
	.byte	0
	.uleb128 0x11
	.ascii "y\0"
	.byte	0x19
	.byte	0x5c
	.byte	0x8
	.long	0x9cd
	.byte	0x4
	.byte	0
	.uleb128 0x15
	.ascii "POINT\0"
	.byte	0x19
	.byte	0x5d
	.byte	0x3
	.long	0x229d
	.uleb128 0xc
	.byte	0x4
	.long	0x229d
	.uleb128 0x15
	.ascii "LPPOINT\0"
	.byte	0x19
	.byte	0x5d
	.byte	0x1b
	.long	0x22d4
	.uleb128 0x79
	.ascii "_WIN32_FIND_DATAA\0"
	.word	0x140
	.byte	0x1a
	.byte	0x3d
	.byte	0x12
	.long	0x23f3
	.uleb128 0x11
	.ascii "dwFileAttributes\0"
	.byte	0x1a
	.byte	0x3e
	.byte	0xb
	.long	0x7c7
	.byte	0
	.uleb128 0x11
	.ascii "ftCreationTime\0"
	.byte	0x1a
	.byte	0x3f
	.byte	0xe
	.long	0x2149
	.byte	0x4
	.uleb128 0x11
	.ascii "ftLastAccessTime\0"
	.byte	0x1a
	.byte	0x40
	.byte	0xe
	.long	0x2149
	.byte	0xc
	.uleb128 0x11
	.ascii "ftLastWriteTime\0"
	.byte	0x1a
	.byte	0x41
	.byte	0xe
	.long	0x2149
	.byte	0x14
	.uleb128 0x11
	.ascii "nFileSizeHigh\0"
	.byte	0x1a
	.byte	0x42
	.byte	0xb
	.long	0x7c7
	.byte	0x1c
	.uleb128 0x11
	.ascii "nFileSizeLow\0"
	.byte	0x1a
	.byte	0x43
	.byte	0xb
	.long	0x7c7
	.byte	0x20
	.uleb128 0x11
	.ascii "dwReserved0\0"
	.byte	0x1a
	.byte	0x44
	.byte	0xb
	.long	0x7c7
	.byte	0x24
	.uleb128 0x11
	.ascii "dwReserved1\0"
	.byte	0x1a
	.byte	0x45
	.byte	0xb
	.long	0x7c7
	.byte	0x28
	.uleb128 0x11
	.ascii "cFileName\0"
	.byte	0x1a
	.byte	0x46
	.byte	0x1c
	.long	0x23f3
	.byte	0x2c
	.uleb128 0x64
	.ascii "cAlternateFileName\0"
	.byte	0x1a
	.byte	0x47
	.byte	0x1f
	.long	0x2404
	.word	0x130
	.byte	0
	.uleb128 0x10
	.long	0x9ba
	.long	0x2404
	.uleb128 0x3a
	.long	0xe4
	.word	0x103
	.byte	0
	.uleb128 0x10
	.long	0x9ba
	.long	0x2414
	.uleb128 0x12
	.long	0xe4
	.byte	0xd
	.byte	0
	.uleb128 0x15
	.ascii "WIN32_FIND_DATAA\0"
	.byte	0x1a
	.byte	0x48
	.byte	0x5
	.long	0x22ea
	.uleb128 0x15
	.ascii "WIN32_FIND_DATA\0"
	.byte	0x1a
	.byte	0x57
	.byte	0x3
	.long	0x2414
	.uleb128 0x39
	.ascii "tagRGBQUAD\0"
	.byte	0x4
	.byte	0x1b
	.word	0x1dd
	.byte	0x12
	.long	0x24a7
	.uleb128 0xa
	.ascii "rgbBlue\0"
	.byte	0x1b
	.word	0x1de
	.byte	0xa
	.long	0x7ad
	.byte	0
	.uleb128 0xa
	.ascii "rgbGreen\0"
	.byte	0x1b
	.word	0x1df
	.byte	0xa
	.long	0x7ad
	.byte	0x1
	.uleb128 0xa
	.ascii "rgbRed\0"
	.byte	0x1b
	.word	0x1e0
	.byte	0xa
	.long	0x7ad
	.byte	0x2
	.uleb128 0xa
	.ascii "rgbReserved\0"
	.byte	0x1b
	.word	0x1e1
	.byte	0xa
	.long	0x7ad
	.byte	0x3
	.byte	0
	.uleb128 0x1a
	.ascii "RGBQUAD\0"
	.byte	0x1b
	.word	0x1e2
	.byte	0x5
	.long	0x2445
	.uleb128 0x39
	.ascii "tagBITMAPINFOHEADER\0"
	.byte	0x28
	.byte	0x1b
	.word	0x24f
	.byte	0x12
	.long	0x25c4
	.uleb128 0xa
	.ascii "biSize\0"
	.byte	0x1b
	.word	0x250
	.byte	0xb
	.long	0x7c7
	.byte	0
	.uleb128 0xa
	.ascii "biWidth\0"
	.byte	0x1b
	.word	0x251
	.byte	0xa
	.long	0x9cd
	.byte	0x4
	.uleb128 0xa
	.ascii "biHeight\0"
	.byte	0x1b
	.word	0x252
	.byte	0xa
	.long	0x9cd
	.byte	0x8
	.uleb128 0xa
	.ascii "biPlanes\0"
	.byte	0x1b
	.word	0x253
	.byte	0xa
	.long	0x7ba
	.byte	0xc
	.uleb128 0xa
	.ascii "biBitCount\0"
	.byte	0x1b
	.word	0x254
	.byte	0xa
	.long	0x7ba
	.byte	0xe
	.uleb128 0xa
	.ascii "biCompression\0"
	.byte	0x1b
	.word	0x255
	.byte	0xb
	.long	0x7c7
	.byte	0x10
	.uleb128 0xa
	.ascii "biSizeImage\0"
	.byte	0x1b
	.word	0x256
	.byte	0xb
	.long	0x7c7
	.byte	0x14
	.uleb128 0xa
	.ascii "biXPelsPerMeter\0"
	.byte	0x1b
	.word	0x257
	.byte	0xa
	.long	0x9cd
	.byte	0x18
	.uleb128 0xa
	.ascii "biYPelsPerMeter\0"
	.byte	0x1b
	.word	0x258
	.byte	0xa
	.long	0x9cd
	.byte	0x1c
	.uleb128 0xa
	.ascii "biClrUsed\0"
	.byte	0x1b
	.word	0x259
	.byte	0xb
	.long	0x7c7
	.byte	0x20
	.uleb128 0xa
	.ascii "biClrImportant\0"
	.byte	0x1b
	.word	0x25a
	.byte	0xb
	.long	0x7c7
	.byte	0x24
	.byte	0
	.uleb128 0x1a
	.ascii "BITMAPINFOHEADER\0"
	.byte	0x1b
	.word	0x25b
	.byte	0x5
	.long	0x24b8
	.uleb128 0x39
	.ascii "tagBITMAPINFO\0"
	.byte	0x2c
	.byte	0x1b
	.word	0x29d
	.byte	0x12
	.long	0x261f
	.uleb128 0xa
	.ascii "bmiHeader\0"
	.byte	0x1b
	.word	0x29e
	.byte	0x16
	.long	0x25c4
	.byte	0
	.uleb128 0xa
	.ascii "bmiColors\0"
	.byte	0x1b
	.word	0x29f
	.byte	0x18
	.long	0x261f
	.byte	0x28
	.byte	0
	.uleb128 0x10
	.long	0x24a7
	.long	0x262f
	.uleb128 0x12
	.long	0xe4
	.byte	0
	.byte	0
	.uleb128 0x1a
	.ascii "BITMAPINFO\0"
	.byte	0x1b
	.word	0x2a0
	.byte	0x5
	.long	0x25de
	.uleb128 0x15
	.ascii "WNDPROC\0"
	.byte	0x1c
	.byte	0x29
	.byte	0x1e
	.long	0x2653
	.uleb128 0xc
	.byte	0x4
	.long	0x2659
	.uleb128 0x59
	.long	0x20bb
	.long	0x2677
	.uleb128 0x2
	.long	0x2178
	.uleb128 0x2
	.long	0x7eb
	.uleb128 0x2
	.long	0x209d
	.uleb128 0x2
	.long	0x20ac
	.byte	0
	.uleb128 0x39
	.ascii "tagWNDCLASSA\0"
	.byte	0x28
	.byte	0x1c
	.word	0x36d
	.byte	0x12
	.long	0x2756
	.uleb128 0xa
	.ascii "style\0"
	.byte	0x1c
	.word	0x36e
	.byte	0xa
	.long	0x7eb
	.byte	0
	.uleb128 0xa
	.ascii "lpfnWndProc\0"
	.byte	0x1c
	.word	0x36f
	.byte	0xd
	.long	0x2643
	.byte	0x4
	.uleb128 0xa
	.ascii "cbClsExtra\0"
	.byte	0x1c
	.word	0x370
	.byte	0x9
	.long	0xf4
	.byte	0x8
	.uleb128 0xa
	.ascii "cbWndExtra\0"
	.byte	0x1c
	.word	0x371
	.byte	0x9
	.long	0xf4
	.byte	0xc
	.uleb128 0x19
	.secrel32	LASF5
	.byte	0x1c
	.word	0x372
	.byte	0xf
	.long	0x20ee
	.byte	0x10
	.uleb128 0xa
	.ascii "hIcon\0"
	.byte	0x1c
	.word	0x373
	.byte	0xb
	.long	0x220e
	.byte	0x14
	.uleb128 0xa
	.ascii "hCursor\0"
	.byte	0x1c
	.word	0x374
	.byte	0xd
	.long	0x2222
	.byte	0x18
	.uleb128 0xa
	.ascii "hbrBackground\0"
	.byte	0x1c
	.word	0x375
	.byte	0xc
	.long	0x21ab
	.byte	0x1c
	.uleb128 0xa
	.ascii "lpszMenuName\0"
	.byte	0x1c
	.word	0x376
	.byte	0xc
	.long	0x9f6
	.byte	0x20
	.uleb128 0xa
	.ascii "lpszClassName\0"
	.byte	0x1c
	.word	0x377
	.byte	0xc
	.long	0x9f6
	.byte	0x24
	.byte	0
	.uleb128 0x1a
	.ascii "WNDCLASSA\0"
	.byte	0x1c
	.word	0x378
	.byte	0x5
	.long	0x2677
	.uleb128 0x1a
	.ascii "WNDCLASS\0"
	.byte	0x1c
	.word	0x387
	.byte	0x3
	.long	0x2756
	.uleb128 0x39
	.ascii "tagMSG\0"
	.byte	0x1c
	.byte	0x1c
	.word	0x392
	.byte	0x12
	.long	0x27ec
	.uleb128 0xa
	.ascii "hwnd\0"
	.byte	0x1c
	.word	0x393
	.byte	0xa
	.long	0x2178
	.byte	0
	.uleb128 0xa
	.ascii "message\0"
	.byte	0x1c
	.word	0x394
	.byte	0xa
	.long	0x7eb
	.byte	0x4
	.uleb128 0xa
	.ascii "wParam\0"
	.byte	0x1c
	.word	0x395
	.byte	0xc
	.long	0x209d
	.byte	0x8
	.uleb128 0xa
	.ascii "lParam\0"
	.byte	0x1c
	.word	0x396
	.byte	0xc
	.long	0x20ac
	.byte	0xc
	.uleb128 0xa
	.ascii "time\0"
	.byte	0x1c
	.word	0x397
	.byte	0xb
	.long	0x7c7
	.byte	0x10
	.uleb128 0xa
	.ascii "pt\0"
	.byte	0x1c
	.word	0x398
	.byte	0xb
	.long	0x22c6
	.byte	0x14
	.byte	0
	.uleb128 0x1a
	.ascii "MSG\0"
	.byte	0x1c
	.word	0x399
	.byte	0x5
	.long	0x277b
	.uleb128 0x15
	.ascii "RPC_IF_HANDLE\0"
	.byte	0x1d
	.byte	0x42
	.byte	0x11
	.long	0x7aa
	.uleb128 0xc
	.byte	0x4
	.long	0x7aa
	.uleb128 0xc
	.byte	0x4
	.long	0x461
	.uleb128 0xab
	.ascii "std\0"
	.byte	0x54
	.byte	0
	.long	0xf9b5
	.uleb128 0x87
	.ascii "__cxx11\0"
	.byte	0x26
	.word	0x104
	.byte	0x41
	.long	0xba3a
	.uleb128 0x53
	.ascii "basic_string<char, std::char_traits<char>, std::allocator<char> >\0"
	.byte	0x18
	.byte	0x3
	.byte	0x4d
	.byte	0xb
	.long	0x7124
	.uleb128 0x65
	.secrel32	LASF6
	.byte	0x4
	.byte	0x3
	.byte	0x8b
	.byte	0xe
	.long	0x29e8
	.uleb128 0x5a
	.long	0xd043
	.byte	0
	.uleb128 0x31
	.secrel32	LASF6
	.byte	0x3
	.byte	0x91
	.byte	0x2
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC4EPcRKS3_\0"
	.long	0x28f5
	.long	0x2905
	.uleb128 0x5
	.long	0x16ddc
	.uleb128 0x2
	.long	0x29e8
	.uleb128 0x2
	.long	0x16831
	.byte	0
	.uleb128 0x31
	.secrel32	LASF6
	.byte	0x3
	.byte	0x94
	.byte	0x2
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC4EPcOS3_\0"
	.long	0x2962
	.long	0x2972
	.uleb128 0x5
	.long	0x16ddc
	.uleb128 0x2
	.long	0x29e8
	.uleb128 0x2
	.long	0x16de7
	.byte	0
	.uleb128 0x11
	.ascii "_M_p\0"
	.byte	0x3
	.byte	0x98
	.byte	0xa
	.long	0x29e8
	.byte	0
	.uleb128 0xac
	.ascii "~_Alloc_hider\0"
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD4Ev\0"
	.long	0x29dc
	.uleb128 0x5
	.long	0x16ddc
	.uleb128 0x5
	.long	0xf4
	.byte	0
	.byte	0
	.uleb128 0x25
	.secrel32	LASF9
	.byte	0x3
	.byte	0x5c
	.byte	0x30
	.long	0x10048
	.byte	0x1
	.uleb128 0x6c
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x3
	.byte	0x9e
	.byte	0xc
	.long	0x2a0b
	.uleb128 0x88
	.secrel32	LASF85
	.byte	0xf
	.byte	0
	.uleb128 0x89
	.byte	0x10
	.byte	0x3
	.byte	0xa1
	.byte	0x7
	.long	0x2a2e
	.uleb128 0x6d
	.secrel32	LASF7
	.byte	0x3
	.byte	0xa2
	.byte	0x35
	.long	0x16ded
	.uleb128 0x6d
	.secrel32	LASF8
	.byte	0x3
	.byte	0xa3
	.byte	0x13
	.long	0x2a2e
	.byte	0
	.uleb128 0x25
	.secrel32	LASF10
	.byte	0x3
	.byte	0x58
	.byte	0x32
	.long	0x10060
	.byte	0x1
	.uleb128 0x14
	.long	0x2a2e
	.uleb128 0x8a
	.ascii "npos\0"
	.byte	0x3
	.byte	0x65
	.byte	0x1e
	.long	0x2a3b
	.byte	0x1
	.uleb128 0x2b
	.secrel32	LASF11
	.byte	0x3
	.byte	0x9b
	.byte	0x14
	.long	0x2884
	.byte	0
	.uleb128 0x2b
	.secrel32	LASF12
	.byte	0x3
	.byte	0x9c
	.byte	0x12
	.long	0x2a2e
	.byte	0x4
	.uleb128 0x8b
	.long	0x2a0b
	.byte	0x8
	.uleb128 0x31
	.secrel32	LASF13
	.byte	0x3
	.byte	0xa7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc\0"
	.long	0x2ac1
	.long	0x2acc
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x29e8
	.byte	0
	.uleb128 0x31
	.secrel32	LASF14
	.byte	0x3
	.byte	0xab
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEj\0"
	.long	0x2b1e
	.long	0x2b29
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x47
	.secrel32	LASF13
	.byte	0x3
	.byte	0xaf
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv\0"
	.long	0x29e8
	.long	0x2b7e
	.long	0x2b84
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x47
	.secrel32	LASF15
	.byte	0x3
	.byte	0xb3
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv\0"
	.long	0x29e8
	.long	0x2bdf
	.long	0x2be5
	.uleb128 0x5
	.long	0x16dfd
	.byte	0
	.uleb128 0x25
	.secrel32	LASF16
	.byte	0x3
	.byte	0x5d
	.byte	0x35
	.long	0x10054
	.byte	0x1
	.uleb128 0x47
	.secrel32	LASF15
	.byte	0x3
	.byte	0xbd
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv\0"
	.long	0x2be5
	.long	0x2c4e
	.long	0x2c54
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x31
	.secrel32	LASF17
	.byte	0x3
	.byte	0xc7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj\0"
	.long	0x2ca9
	.long	0x2cb4
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x31
	.secrel32	LASF18
	.byte	0x3
	.byte	0xcb
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj\0"
	.long	0x2d0b
	.long	0x2d16
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x47
	.secrel32	LASF19
	.byte	0x3
	.byte	0xd2
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv\0"
	.long	0x15b97
	.long	0x2d70
	.long	0x2d76
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x47
	.secrel32	LASF20
	.byte	0x3
	.byte	0xd7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj\0"
	.long	0x29e8
	.long	0x2dce
	.long	0x2dde
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e0e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x31
	.secrel32	LASF21
	.byte	0x3
	.byte	0xda
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv\0"
	.long	0x2e32
	.long	0x2e38
	.uleb128 0x5
	.long	0x16dfd
	.byte	0
	.uleb128 0x31
	.secrel32	LASF22
	.byte	0x3
	.byte	0xe1
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEj\0"
	.long	0x2e8c
	.long	0x2e97
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x31
	.secrel32	LASF23
	.byte	0x3
	.byte	0xf7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE18_M_construct_aux_2Ejc\0"
	.long	0x2ef4
	.long	0x2f04
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0x4c
	.secrel32	LASF24
	.byte	0x3
	.word	0x110
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc\0"
	.long	0x2f5c
	.long	0x2f6c
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0x25
	.secrel32	LASF25
	.byte	0x3
	.byte	0x57
	.byte	0x23
	.long	0x2f7e
	.byte	0x1
	.uleb128 0x14
	.long	0x2f6c
	.uleb128 0x29
	.secrel32	LASF26
	.byte	0x3
	.byte	0x50
	.byte	0x18
	.long	0x1009a
	.uleb128 0x3b
	.secrel32	LASF27
	.byte	0x3
	.word	0x113
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv\0"
	.long	0x16e14
	.long	0x2fe9
	.long	0x2fef
	.uleb128 0x5
	.long	0x16dfd
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF27
	.byte	0x3
	.word	0x117
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv\0"
	.long	0x16e1a
	.long	0x304f
	.long	0x3055
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF28
	.byte	0x3
	.word	0x12b
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc\0"
	.long	0x2a2e
	.long	0x30af
	.long	0x30bf
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x4c
	.secrel32	LASF29
	.byte	0x3
	.word	0x135
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc\0"
	.long	0x311e
	.long	0x3133
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF30
	.byte	0x3
	.word	0x13e
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEjj\0"
	.long	0x2a2e
	.long	0x318b
	.long	0x319b
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF31
	.byte	0x3
	.word	0x146
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc\0"
	.long	0x15b97
	.long	0x31f8
	.long	0x3203
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x6e
	.ascii "_S_copy\0"
	.byte	0x3
	.word	0x14f
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj\0"
	.long	0x3269
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x6e
	.ascii "_S_move\0"
	.byte	0x3
	.word	0x158
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj\0"
	.long	0x32cf
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x3f
	.secrel32	LASF32
	.byte	0x3
	.word	0x161
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcjc\0"
	.long	0x3331
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0x3f
	.secrel32	LASF33
	.byte	0x3
	.word	0x174
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_\0"
	.long	0x33c0
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x33c0
	.uleb128 0x2
	.long	0x33c0
	.byte	0
	.uleb128 0x25
	.secrel32	LASF34
	.byte	0x3
	.byte	0x5e
	.byte	0x44
	.long	0x100bc
	.byte	0x1
	.uleb128 0x3f
	.secrel32	LASF33
	.byte	0x3
	.word	0x178
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcS4_EESA_\0"
	.long	0x345c
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x345c
	.uleb128 0x2
	.long	0x345c
	.byte	0
	.uleb128 0x25
	.secrel32	LASF35
	.byte	0x3
	.byte	0x60
	.byte	0x8
	.long	0x1084e
	.byte	0x1
	.uleb128 0x3f
	.secrel32	LASF33
	.byte	0x3
	.word	0x17d
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_\0"
	.long	0x34d4
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x461
	.byte	0
	.uleb128 0x3f
	.secrel32	LASF33
	.byte	0x3
	.word	0x181
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_\0"
	.long	0x353f
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x17
	.secrel32	LASF36
	.byte	0x3
	.word	0x186
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEjj\0"
	.long	0xf4
	.long	0x35a0
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x4c
	.secrel32	LASF37
	.byte	0x3
	.word	0x193
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_\0"
	.long	0x35f7
	.long	0x3602
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e20
	.byte	0
	.uleb128 0x4c
	.secrel32	LASF38
	.byte	0x3
	.word	0x196
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj\0"
	.long	0x365a
	.long	0x3674
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x4c
	.secrel32	LASF39
	.byte	0x3
	.word	0x19a
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj\0"
	.long	0x36c7
	.long	0x36d7
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1a4
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4Ev\0"
	.byte	0x1
	.long	0x3723
	.long	0x3729
	.uleb128 0x5
	.long	0x16dfd
	.byte	0
	.uleb128 0x61
	.secrel32	LASF40
	.byte	0x3
	.word	0x1ad
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS3_\0"
	.byte	0x1
	.long	0x3779
	.long	0x3784
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16831
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1b5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_\0"
	.byte	0x1
	.long	0x37d4
	.long	0x37df
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e20
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1c2
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_jRKS3_\0"
	.byte	0x1
	.long	0x3835
	.long	0x384a
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x16831
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1d1
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_jj\0"
	.byte	0x1
	.long	0x389c
	.long	0x38b1
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1e1
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_jjRKS3_\0"
	.byte	0x1
	.long	0x3908
	.long	0x3922
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x16831
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1f3
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EPKcjRKS3_\0"
	.byte	0x1
	.long	0x3976
	.long	0x398b
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x16831
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1fd
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EPKcRKS3_\0"
	.byte	0x1
	.long	0x39de
	.long	0x39ee
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x16831
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x207
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EjcRKS3_\0"
	.byte	0x1
	.long	0x3a40
	.long	0x3a55
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0xb8
	.uleb128 0x2
	.long	0x16831
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x213
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EOS4_\0"
	.byte	0x1
	.long	0x3aa4
	.long	0x3aaf
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e26
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x22e
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ESt16initializer_listIcERKS3_\0"
	.byte	0x1
	.long	0x3b16
	.long	0x3b26
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0xd470
	.uleb128 0x2
	.long	0x16831
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x232
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_RKS3_\0"
	.byte	0x1
	.long	0x3b7b
	.long	0x3b8b
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x16831
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x236
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EOS4_RKS3_\0"
	.byte	0x1
	.long	0x3bdf
	.long	0x3bef
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e26
	.uleb128 0x2
	.long	0x16831
	.byte	0
	.uleb128 0x22
	.secrel32	LASF41
	.byte	0x3
	.word	0x286
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED4Ev\0"
	.byte	0x1
	.long	0x3c3b
	.long	0x3c46
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x5
	.long	0xf4
	.byte	0
	.uleb128 0xb
	.secrel32	LASF42
	.byte	0x3
	.word	0x28e
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x3c9a
	.long	0x3ca5
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e20
	.byte	0
	.uleb128 0xb
	.secrel32	LASF42
	.byte	0x3
	.word	0x2b5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x3cf7
	.long	0x3d02
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF42
	.byte	0x3
	.word	0x2c0
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEc\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x3d52
	.long	0x3d5d
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0xb
	.secrel32	LASF42
	.byte	0x3
	.word	0x2d2
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x3db0
	.long	0x3dbb
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e26
	.byte	0
	.uleb128 0xb
	.secrel32	LASF42
	.byte	0x3
	.word	0x308
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSESt16initializer_listIcE\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x3e21
	.long	0x3e2c
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0xd470
	.byte	0
	.uleb128 0xb
	.secrel32	LASF43
	.byte	0x3
	.word	0x327
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv\0"
	.long	0x33c0
	.byte	0x1
	.long	0x3e80
	.long	0x3e86
	.uleb128 0x5
	.long	0x16dfd
	.byte	0
	.uleb128 0xb
	.secrel32	LASF43
	.byte	0x3
	.word	0x32f
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv\0"
	.long	0x345c
	.byte	0x1
	.long	0x3edb
	.long	0x3ee1
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x26
	.ascii "end\0"
	.byte	0x3
	.word	0x337
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv\0"
	.long	0x33c0
	.byte	0x1
	.long	0x3f33
	.long	0x3f39
	.uleb128 0x5
	.long	0x16dfd
	.byte	0
	.uleb128 0x26
	.ascii "end\0"
	.byte	0x3
	.word	0x33f
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv\0"
	.long	0x345c
	.byte	0x1
	.long	0x3f8c
	.long	0x3f92
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x25
	.secrel32	LASF44
	.byte	0x3
	.byte	0x62
	.byte	0x30
	.long	0xd615
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF45
	.byte	0x3
	.word	0x348
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv\0"
	.long	0x3f92
	.byte	0x1
	.long	0x3ff4
	.long	0x3ffa
	.uleb128 0x5
	.long	0x16dfd
	.byte	0
	.uleb128 0x25
	.secrel32	LASF46
	.byte	0x3
	.byte	0x61
	.byte	0x35
	.long	0xd69f
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF45
	.byte	0x3
	.word	0x351
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv\0"
	.long	0x3ffa
	.byte	0x1
	.long	0x405d
	.long	0x4063
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x26
	.ascii "rend\0"
	.byte	0x3
	.word	0x35a
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv\0"
	.long	0x3f92
	.byte	0x1
	.long	0x40b7
	.long	0x40bd
	.uleb128 0x5
	.long	0x16dfd
	.byte	0
	.uleb128 0x26
	.ascii "rend\0"
	.byte	0x3
	.word	0x363
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv\0"
	.long	0x3ffa
	.byte	0x1
	.long	0x4112
	.long	0x4118
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x26
	.ascii "cbegin\0"
	.byte	0x3
	.word	0x36c
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6cbeginEv\0"
	.long	0x345c
	.byte	0x1
	.long	0x4171
	.long	0x4177
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x26
	.ascii "cend\0"
	.byte	0x3
	.word	0x374
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4cendEv\0"
	.long	0x345c
	.byte	0x1
	.long	0x41cc
	.long	0x41d2
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x26
	.ascii "crbegin\0"
	.byte	0x3
	.word	0x37d
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7crbeginEv\0"
	.long	0x3ffa
	.byte	0x1
	.long	0x422d
	.long	0x4233
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x26
	.ascii "crend\0"
	.byte	0x3
	.word	0x386
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5crendEv\0"
	.long	0x3ffa
	.byte	0x1
	.long	0x428a
	.long	0x4290
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0xb
	.secrel32	LASF47
	.byte	0x3
	.word	0x38f
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x42e4
	.long	0x42ea
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0xb
	.secrel32	LASF48
	.byte	0x3
	.word	0x395
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x4340
	.long	0x4346
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0xb
	.secrel32	LASF49
	.byte	0x3
	.word	0x39a
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x439e
	.long	0x43a4
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x22
	.secrel32	LASF50
	.byte	0x3
	.word	0x3a8
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEjc\0"
	.byte	0x1
	.long	0x43f6
	.long	0x4406
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0x22
	.secrel32	LASF50
	.byte	0x3
	.word	0x3b5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEj\0"
	.byte	0x1
	.long	0x4457
	.long	0x4462
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x22
	.secrel32	LASF51
	.byte	0x3
	.word	0x3bb
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv\0"
	.byte	0x1
	.long	0x44bb
	.long	0x44c1
	.uleb128 0x5
	.long	0x16dfd
	.byte	0
	.uleb128 0xb
	.secrel32	LASF52
	.byte	0x3
	.word	0x3ce
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x4519
	.long	0x451f
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x5b
	.ascii "reserve\0"
	.byte	0x3
	.word	0x3e6
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj\0"
	.byte	0x1
	.long	0x4575
	.long	0x4580
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x5b
	.ascii "clear\0"
	.byte	0x3
	.word	0x3ec
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv\0"
	.byte	0x1
	.long	0x45d2
	.long	0x45d8
	.uleb128 0x5
	.long	0x16dfd
	.byte	0
	.uleb128 0x26
	.ascii "empty\0"
	.byte	0x3
	.word	0x3f4
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv\0"
	.long	0x15b97
	.byte	0x1
	.long	0x462f
	.long	0x4635
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x25
	.secrel32	LASF53
	.byte	0x3
	.byte	0x5b
	.byte	0x37
	.long	0x10078
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF54
	.byte	0x3
	.word	0x403
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj\0"
	.long	0x4635
	.byte	0x1
	.long	0x4693
	.long	0x469e
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x25
	.secrel32	LASF55
	.byte	0x3
	.byte	0x5a
	.byte	0x32
	.long	0x1006c
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF54
	.byte	0x3
	.word	0x414
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEj\0"
	.long	0x469e
	.byte	0x1
	.long	0x46fb
	.long	0x4706
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x26
	.ascii "at\0"
	.byte	0x3
	.word	0x429
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj\0"
	.long	0x4635
	.byte	0x1
	.long	0x4757
	.long	0x4762
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x26
	.ascii "at\0"
	.byte	0x3
	.word	0x43e
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEj\0"
	.long	0x469e
	.byte	0x1
	.long	0x47b2
	.long	0x47bd
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF56
	.byte	0x3
	.word	0x44e
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv\0"
	.long	0x469e
	.byte	0x1
	.long	0x4811
	.long	0x4817
	.uleb128 0x5
	.long	0x16dfd
	.byte	0
	.uleb128 0xb
	.secrel32	LASF56
	.byte	0x3
	.word	0x459
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv\0"
	.long	0x4635
	.byte	0x1
	.long	0x486c
	.long	0x4872
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0x26
	.ascii "back\0"
	.byte	0x3
	.word	0x464
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv\0"
	.long	0x469e
	.byte	0x1
	.long	0x48c6
	.long	0x48cc
	.uleb128 0x5
	.long	0x16dfd
	.byte	0
	.uleb128 0x26
	.ascii "back\0"
	.byte	0x3
	.word	0x46f
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv\0"
	.long	0x4635
	.byte	0x1
	.long	0x4921
	.long	0x4927
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0xb
	.secrel32	LASF57
	.byte	0x3
	.word	0x47d
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x497b
	.long	0x4986
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e20
	.byte	0
	.uleb128 0xb
	.secrel32	LASF57
	.byte	0x3
	.word	0x486
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x49d8
	.long	0x49e3
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF57
	.byte	0x3
	.word	0x48f
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4a33
	.long	0x4a3e
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0xb
	.secrel32	LASF57
	.byte	0x3
	.word	0x49c
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLESt16initializer_listIcE\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4aa4
	.long	0x4aaf
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0xd470
	.byte	0
	.uleb128 0xb
	.secrel32	LASF58
	.byte	0x3
	.word	0x4b2
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4b08
	.long	0x4b13
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e20
	.byte	0
	.uleb128 0xb
	.secrel32	LASF58
	.byte	0x3
	.word	0x4c3
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_jj\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4b6e
	.long	0x4b83
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF58
	.byte	0x3
	.word	0x4cf
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4bdb
	.long	0x4beb
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF58
	.byte	0x3
	.word	0x4dc
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4c42
	.long	0x4c4d
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF58
	.byte	0x3
	.word	0x4ed
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEjc\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4ca3
	.long	0x4cb3
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0xb
	.secrel32	LASF58
	.byte	0x3
	.word	0x4f7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendESt16initializer_listIcE\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4d1e
	.long	0x4d29
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0xd470
	.byte	0
	.uleb128 0x22
	.secrel32	LASF59
	.byte	0x3
	.word	0x532
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc\0"
	.byte	0x1
	.long	0x4d7d
	.long	0x4d88
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x541
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4de1
	.long	0x4dec
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e20
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x551
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4e44
	.long	0x4e4f
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e26
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x568
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_jj\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4eaa
	.long	0x4ebf
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x578
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKcj\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4f17
	.long	0x4f27
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x588
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4f7e
	.long	0x4f89
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x599
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEjc\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x4fdf
	.long	0x4fef
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x5b5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignESt16initializer_listIcE\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x505a
	.long	0x5065
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0xd470
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x5ea
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEjc\0"
	.long	0x33c0
	.byte	0x1
	.long	0x50e2
	.long	0x50f7
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x345c
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0x22
	.secrel32	LASF61
	.byte	0x3
	.word	0x638
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPcS4_EESt16initializer_listIcE\0"
	.byte	0x1
	.long	0x5184
	.long	0x5194
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x33c0
	.uleb128 0x2
	.long	0xd470
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x64c
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x51ee
	.long	0x51fe
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x16e20
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x663
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_jj\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x525a
	.long	0x5274
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x67a
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKcj\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x52cd
	.long	0x52e2
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x68d
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x533a
	.long	0x534a
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x6a5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjjc\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x53a1
	.long	0x53b6
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x6b7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iteratorIPKcS4_EEc\0"
	.long	0x33c0
	.byte	0x1
	.long	0x5432
	.long	0x5442
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0x29
	.secrel32	LASF62
	.byte	0x3
	.byte	0x6c
	.byte	0x1e
	.long	0x345c
	.uleb128 0xb
	.secrel32	LASF63
	.byte	0x3
	.word	0x6f3
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEjj\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x54a3
	.long	0x54b3
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF63
	.byte	0x3
	.word	0x706
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EE\0"
	.long	0x33c0
	.byte	0x1
	.long	0x552d
	.long	0x5538
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x5442
	.byte	0
	.uleb128 0xb
	.secrel32	LASF63
	.byte	0x3
	.word	0x719
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_\0"
	.long	0x33c0
	.byte	0x1
	.long	0x55b5
	.long	0x55c5
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x5442
	.byte	0
	.uleb128 0x22
	.secrel32	LASF64
	.byte	0x3
	.word	0x72c
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv\0"
	.byte	0x1
	.long	0x5618
	.long	0x561e
	.uleb128 0x5
	.long	0x16dfd
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x745
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x567a
	.long	0x568f
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x16e20
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x75b
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjRKS4_jj\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x56ed
	.long	0x570c
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x774
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x5767
	.long	0x5781
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x78d
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKc\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x57db
	.long	0x57f0
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x7a5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjjc\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x5849
	.long	0x5863
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x7b7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_RKS4_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x58e7
	.long	0x58fc
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x16e20
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x7cb
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_j\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x597f
	.long	0x5999
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x7e1
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x5a1b
	.long	0x5a30
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x7f6
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_jc\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x5ab1
	.long	0x5acb
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x82f
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x5b4f
	.long	0x5b69
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x461
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x83a
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S8_S8_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x5bee
	.long	0x5c08
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x845
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_NS6_IPcS4_EESB_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x5c96
	.long	0x5cb0
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x33c0
	.uleb128 0x2
	.long	0x33c0
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x850
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_S9_S9_\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x5d35
	.long	0x5d4f
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x5442
	.uleb128 0x2
	.long	0x345c
	.uleb128 0x2
	.long	0x345c
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x869
	.byte	0x15
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_St16initializer_listIcE\0"
	.long	0x16e2c
	.byte	0x1
	.long	0x5de5
	.long	0x5dfa
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x345c
	.uleb128 0x2
	.long	0x345c
	.uleb128 0x2
	.long	0xd470
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF66
	.byte	0x3
	.word	0x8b2
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc\0"
	.long	0x16e2c
	.long	0x5e5a
	.long	0x5e74
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0xb8
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF67
	.byte	0x3
	.word	0x8b6
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj\0"
	.long	0x16e2c
	.long	0x5ed2
	.long	0x5eec
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF68
	.byte	0x3
	.word	0x8ba
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj\0"
	.long	0x16e2c
	.long	0x5f46
	.long	0x5f56
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x26
	.ascii "copy\0"
	.byte	0x3
	.word	0x8cb
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcjj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x5fae
	.long	0x5fc3
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x5b
	.ascii "swap\0"
	.byte	0x3
	.word	0x8d5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_\0"
	.byte	0x1
	.long	0x6016
	.long	0x6021
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x16e2c
	.byte	0
	.uleb128 0x26
	.ascii "c_str\0"
	.byte	0x3
	.word	0x8df
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv\0"
	.long	0x12a7d
	.byte	0x1
	.long	0x6078
	.long	0x607e
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0xb
	.secrel32	LASF69
	.byte	0x3
	.word	0x8eb
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv\0"
	.long	0x12a7d
	.byte	0x1
	.long	0x60d2
	.long	0x60d8
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0xb
	.secrel32	LASF70
	.byte	0x3
	.word	0x8fe
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv\0"
	.long	0x2f6c
	.byte	0x1
	.long	0x6136
	.long	0x613c
	.uleb128 0x5
	.long	0x16e08
	.byte	0
	.uleb128 0xb
	.secrel32	LASF71
	.byte	0x3
	.word	0x90e
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x6194
	.long	0x61a9
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF71
	.byte	0x3
	.word	0x91c
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_j\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x6202
	.long	0x6212
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF71
	.byte	0x3
	.word	0x93c
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x6269
	.long	0x6279
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF71
	.byte	0x3
	.word	0x94d
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x62ce
	.long	0x62de
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0xb8
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF72
	.byte	0x3
	.word	0x95a
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindERKS4_j\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x6338
	.long	0x6348
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF72
	.byte	0x3
	.word	0x97c
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcjj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x63a1
	.long	0x63b6
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF72
	.byte	0x3
	.word	0x98a
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x640e
	.long	0x641e
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF72
	.byte	0x3
	.word	0x99b
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x6474
	.long	0x6484
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0xb8
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF73
	.byte	0x3
	.word	0x9a9
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofERKS4_j\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x64e7
	.long	0x64f7
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF73
	.byte	0x3
	.word	0x9cc
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcjj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x6559
	.long	0x656e
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF73
	.byte	0x3
	.word	0x9da
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x65cf
	.long	0x65df
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF73
	.byte	0x3
	.word	0x9ee
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEcj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x663e
	.long	0x664e
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0xb8
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF74
	.byte	0x3
	.word	0x9fd
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofERKS4_j\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x66b0
	.long	0x66c0
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF74
	.byte	0x3
	.word	0xa20
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x6721
	.long	0x6736
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF74
	.byte	0x3
	.word	0xa2e
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x6796
	.long	0x67a6
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF74
	.byte	0x3
	.word	0xa42
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEcj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x6804
	.long	0x6814
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0xb8
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF75
	.byte	0x3
	.word	0xa50
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofERKS4_j\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x687b
	.long	0x688b
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF75
	.byte	0x3
	.word	0xa73
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcjj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x68f1
	.long	0x6906
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF75
	.byte	0x3
	.word	0xa81
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x696b
	.long	0x697b
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF75
	.byte	0x3
	.word	0xa93
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x69de
	.long	0x69ee
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0xb8
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF76
	.byte	0x3
	.word	0xaa2
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofERKS4_j\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x6a54
	.long	0x6a64
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF76
	.byte	0x3
	.word	0xac5
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcjj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x6ac9
	.long	0x6ade
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF76
	.byte	0x3
	.word	0xad3
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x6b42
	.long	0x6b52
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF76
	.byte	0x3
	.word	0xae5
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcj\0"
	.long	0x2a2e
	.byte	0x1
	.long	0x6bb4
	.long	0x6bc4
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0xb8
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x26
	.ascii "substr\0"
	.byte	0x3
	.word	0xaf5
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEjj\0"
	.long	0x2839
	.byte	0x1
	.long	0x6c1e
	.long	0x6c2e
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF77
	.byte	0x3
	.word	0xb08
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_\0"
	.long	0xf4
	.byte	0x1
	.long	0x6c89
	.long	0x6c94
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x16e20
	.byte	0
	.uleb128 0xb
	.secrel32	LASF77
	.byte	0x3
	.word	0xb65
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_\0"
	.long	0xf4
	.byte	0x1
	.long	0x6cf1
	.long	0x6d06
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x16e20
	.byte	0
	.uleb128 0xb
	.secrel32	LASF77
	.byte	0x3
	.word	0xb7f
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjRKS4_jj\0"
	.long	0xf4
	.byte	0x1
	.long	0x6d65
	.long	0x6d84
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x16e20
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF77
	.byte	0x3
	.word	0xb91
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc\0"
	.long	0xf4
	.byte	0x1
	.long	0x6ddd
	.long	0x6de8
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF77
	.byte	0x3
	.word	0xba9
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKc\0"
	.long	0xf4
	.byte	0x1
	.long	0x6e43
	.long	0x6e58
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF77
	.byte	0x3
	.word	0xbc4
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEjjPKcj\0"
	.long	0xf4
	.byte	0x1
	.long	0x6eb4
	.long	0x6ece
	.uleb128 0x5
	.long	0x16e08
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x2a2e
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2a2e
	.byte	0
	.uleb128 0x31
	.secrel32	LASF78
	.byte	0xc
	.byte	0xce
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag\0"
	.long	0x6f4e
	.long	0x6f63
	.uleb128 0x1d
	.secrel32	LASF79
	.long	0x461
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0xbf82
	.byte	0
	.uleb128 0x7a
	.ascii "_M_construct_aux<char*>\0"
	.byte	0x3
	.byte	0xe8
	.byte	0x9
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type\0"
	.long	0x6ff3
	.long	0x7008
	.uleb128 0x1d
	.secrel32	LASF80
	.long	0x461
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0xbc19
	.byte	0
	.uleb128 0x31
	.secrel32	LASF78
	.byte	0x3
	.byte	0xfc
	.byte	0x9
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_\0"
	.long	0x7070
	.long	0x7080
	.uleb128 0x1d
	.secrel32	LASF80
	.long	0x461
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x461
	.byte	0
	.uleb128 0x5b
	.ascii "basic_string<char*>\0"
	.byte	0x3
	.word	0x25c
	.byte	0x9
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4IPcvEET_S7_RKS3_\0"
	.byte	0x1
	.long	0x70f3
	.long	0x7108
	.uleb128 0x1d
	.secrel32	LASF81
	.long	0x461
	.uleb128 0x5
	.long	0x16dfd
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x16831
	.byte	0
	.uleb128 0x1d
	.secrel32	LASF82
	.long	0xb8
	.uleb128 0x6f
	.secrel32	LASF83
	.long	0xc244
	.uleb128 0x6f
	.secrel32	LASF84
	.long	0xd043
	.byte	0
	.uleb128 0x14
	.long	0x2839
	.uleb128 0x15
	.ascii "string\0"
	.byte	0x1e
	.byte	0x4a
	.byte	0x21
	.long	0x2839
	.uleb128 0x53
	.ascii "basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >\0"
	.byte	0x18
	.byte	0x3
	.byte	0x4d
	.byte	0xb
	.long	0xb9d5
	.uleb128 0x65
	.secrel32	LASF6
	.byte	0x4
	.byte	0x3
	.byte	0x8b
	.byte	0xe
	.long	0x7294
	.uleb128 0x5a
	.long	0xd72f
	.byte	0
	.uleb128 0x31
	.secrel32	LASF6
	.byte	0x3
	.byte	0x91
	.byte	0x2
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE12_Alloc_hiderC4EPDiRKS3_\0"
	.long	0x7204
	.long	0x7214
	.uleb128 0x5
	.long	0x16e9c
	.uleb128 0x2
	.long	0x7294
	.uleb128 0x2
	.long	0x16e78
	.byte	0
	.uleb128 0x31
	.secrel32	LASF6
	.byte	0x3
	.byte	0x94
	.byte	0x2
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE12_Alloc_hiderC4EPDiOS3_\0"
	.long	0x7275
	.long	0x7285
	.uleb128 0x5
	.long	0x16e9c
	.uleb128 0x2
	.long	0x7294
	.uleb128 0x2
	.long	0x16ea2
	.byte	0
	.uleb128 0x11
	.ascii "_M_p\0"
	.byte	0x3
	.byte	0x98
	.byte	0xa
	.long	0x7294
	.byte	0
	.byte	0
	.uleb128 0x25
	.secrel32	LASF9
	.byte	0x3
	.byte	0x5c
	.byte	0x30
	.long	0x11685
	.byte	0x1
	.uleb128 0x6c
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x3
	.byte	0x9e
	.byte	0xc
	.long	0x72b7
	.uleb128 0x88
	.secrel32	LASF85
	.byte	0x3
	.byte	0
	.uleb128 0x89
	.byte	0x10
	.byte	0x3
	.byte	0xa1
	.byte	0x7
	.long	0x72da
	.uleb128 0x6d
	.secrel32	LASF7
	.byte	0x3
	.byte	0xa2
	.byte	0x35
	.long	0x16ea8
	.uleb128 0x6d
	.secrel32	LASF8
	.byte	0x3
	.byte	0xa3
	.byte	0x13
	.long	0x72da
	.byte	0
	.uleb128 0x25
	.secrel32	LASF10
	.byte	0x3
	.byte	0x58
	.byte	0x32
	.long	0x1169d
	.byte	0x1
	.uleb128 0x14
	.long	0x72da
	.uleb128 0x8a
	.ascii "npos\0"
	.byte	0x3
	.byte	0x65
	.byte	0x1e
	.long	0x72e7
	.byte	0x1
	.uleb128 0x2b
	.secrel32	LASF11
	.byte	0x3
	.byte	0x9b
	.byte	0x14
	.long	0x718f
	.byte	0
	.uleb128 0x2b
	.secrel32	LASF12
	.byte	0x3
	.byte	0x9c
	.byte	0x12
	.long	0x72da
	.byte	0x4
	.uleb128 0x8b
	.long	0x72b7
	.byte	0x8
	.uleb128 0x31
	.secrel32	LASF13
	.byte	0x3
	.byte	0xa7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7_M_dataEPDi\0"
	.long	0x7371
	.long	0x737c
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x7294
	.byte	0
	.uleb128 0x31
	.secrel32	LASF14
	.byte	0x3
	.byte	0xab
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE9_M_lengthEj\0"
	.long	0x73d1
	.long	0x73dc
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x47
	.secrel32	LASF13
	.byte	0x3
	.byte	0xaf
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7_M_dataEv\0"
	.long	0x7294
	.long	0x7434
	.long	0x743a
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x47
	.secrel32	LASF15
	.byte	0x3
	.byte	0xb3
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE13_M_local_dataEv\0"
	.long	0x7294
	.long	0x7498
	.long	0x749e
	.uleb128 0x5
	.long	0x16eb8
	.byte	0
	.uleb128 0x25
	.secrel32	LASF16
	.byte	0x3
	.byte	0x5d
	.byte	0x35
	.long	0x11691
	.byte	0x1
	.uleb128 0x47
	.secrel32	LASF15
	.byte	0x3
	.byte	0xbd
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE13_M_local_dataEv\0"
	.long	0x749e
	.long	0x750a
	.long	0x7510
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x31
	.secrel32	LASF17
	.byte	0x3
	.byte	0xc7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE11_M_capacityEj\0"
	.long	0x7568
	.long	0x7573
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x31
	.secrel32	LASF18
	.byte	0x3
	.byte	0xcb
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE13_M_set_lengthEj\0"
	.long	0x75cd
	.long	0x75d8
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x47
	.secrel32	LASF19
	.byte	0x3
	.byte	0xd2
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE11_M_is_localEv\0"
	.long	0x15b97
	.long	0x7635
	.long	0x763b
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x47
	.secrel32	LASF20
	.byte	0x3
	.byte	0xd7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE9_M_createERjj\0"
	.long	0x7294
	.long	0x7696
	.long	0x76a6
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ec4
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x31
	.secrel32	LASF21
	.byte	0x3
	.byte	0xda
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE10_M_disposeEv\0"
	.long	0x76fd
	.long	0x7703
	.uleb128 0x5
	.long	0x16eb8
	.byte	0
	.uleb128 0x31
	.secrel32	LASF22
	.byte	0x3
	.byte	0xe1
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE10_M_destroyEj\0"
	.long	0x775a
	.long	0x7765
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x31
	.secrel32	LASF23
	.byte	0x3
	.byte	0xf7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE18_M_construct_aux_2EjDi\0"
	.long	0x77c6
	.long	0x77d6
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0x4c
	.secrel32	LASF24
	.byte	0x3
	.word	0x110
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE12_M_constructEjDi\0"
	.long	0x7832
	.long	0x7842
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0x25
	.secrel32	LASF25
	.byte	0x3
	.byte	0x57
	.byte	0x23
	.long	0x7854
	.byte	0x1
	.uleb128 0x14
	.long	0x7842
	.uleb128 0x29
	.secrel32	LASF26
	.byte	0x3
	.byte	0x50
	.byte	0x18
	.long	0x116db
	.uleb128 0x3b
	.secrel32	LASF27
	.byte	0x3
	.word	0x113
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE16_M_get_allocatorEv\0"
	.long	0x16eca
	.long	0x78c2
	.long	0x78c8
	.uleb128 0x5
	.long	0x16eb8
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF27
	.byte	0x3
	.word	0x117
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE16_M_get_allocatorEv\0"
	.long	0x16ed0
	.long	0x792b
	.long	0x7931
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF28
	.byte	0x3
	.word	0x12b
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE8_M_checkEjPKc\0"
	.long	0x72da
	.long	0x798e
	.long	0x799e
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x4c
	.secrel32	LASF29
	.byte	0x3
	.word	0x135
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE15_M_check_lengthEjjPKc\0"
	.long	0x7a00
	.long	0x7a15
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF30
	.byte	0x3
	.word	0x13e
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE8_M_limitEjj\0"
	.long	0x72da
	.long	0x7a70
	.long	0x7a80
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF31
	.byte	0x3
	.word	0x146
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE11_M_disjunctEPKDi\0"
	.long	0x15b97
	.long	0x7ae1
	.long	0x7aec
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.byte	0
	.uleb128 0x6e
	.ascii "_S_copy\0"
	.byte	0x3
	.word	0x14f
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7_S_copyEPDiPKDij\0"
	.long	0x7b57
	.uleb128 0x2
	.long	0x16e4a
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x6e
	.ascii "_S_move\0"
	.byte	0x3
	.word	0x158
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7_S_moveEPDiPKDij\0"
	.long	0x7bc2
	.uleb128 0x2
	.long	0x16e4a
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x3f
	.secrel32	LASF32
	.byte	0x3
	.word	0x161
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE9_S_assignEPDijDi\0"
	.long	0x7c29
	.uleb128 0x2
	.long	0x16e4a
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0x3f
	.secrel32	LASF33
	.byte	0x3
	.word	0x174
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE13_S_copy_charsEPDiN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_\0"
	.long	0x7cbc
	.uleb128 0x2
	.long	0x16e4a
	.uleb128 0x2
	.long	0x7cbc
	.uleb128 0x2
	.long	0x7cbc
	.byte	0
	.uleb128 0x25
	.secrel32	LASF34
	.byte	0x3
	.byte	0x5e
	.byte	0x44
	.long	0x116fd
	.byte	0x1
	.uleb128 0x3f
	.secrel32	LASF33
	.byte	0x3
	.word	0x178
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE13_S_copy_charsEPDiN9__gnu_cxx17__normal_iteratorIPKDiS4_EESA_\0"
	.long	0x7d5d
	.uleb128 0x2
	.long	0x16e4a
	.uleb128 0x2
	.long	0x7d5d
	.uleb128 0x2
	.long	0x7d5d
	.byte	0
	.uleb128 0x25
	.secrel32	LASF35
	.byte	0x3
	.byte	0x60
	.byte	0x8
	.long	0x11ed7
	.byte	0x1
	.uleb128 0x3f
	.secrel32	LASF33
	.byte	0x3
	.word	0x17d
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE13_S_copy_charsEPDiS5_S5_\0"
	.long	0x7dd9
	.uleb128 0x2
	.long	0x16e4a
	.uleb128 0x2
	.long	0x16e4a
	.uleb128 0x2
	.long	0x16e4a
	.byte	0
	.uleb128 0x3f
	.secrel32	LASF33
	.byte	0x3
	.word	0x181
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE13_S_copy_charsEPDiPKDiS7_\0"
	.long	0x7e49
	.uleb128 0x2
	.long	0x16e4a
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x16e61
	.byte	0
	.uleb128 0x17
	.secrel32	LASF36
	.byte	0x3
	.word	0x186
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE10_S_compareEjj\0"
	.long	0xf4
	.long	0x7ead
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x4c
	.secrel32	LASF37
	.byte	0x3
	.word	0x193
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE9_M_assignERKS4_\0"
	.long	0x7f07
	.long	0x7f12
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ed6
	.byte	0
	.uleb128 0x4c
	.secrel32	LASF38
	.byte	0x3
	.word	0x196
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE9_M_mutateEjjPKDij\0"
	.long	0x7f6e
	.long	0x7f88
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x4c
	.secrel32	LASF39
	.byte	0x3
	.word	0x19a
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE8_M_eraseEjj\0"
	.long	0x7fde
	.long	0x7fee
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1a4
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC4Ev\0"
	.byte	0x1
	.long	0x803d
	.long	0x8043
	.uleb128 0x5
	.long	0x16eb8
	.byte	0
	.uleb128 0x61
	.secrel32	LASF40
	.byte	0x3
	.word	0x1ad
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC4ERKS3_\0"
	.byte	0x1
	.long	0x8096
	.long	0x80a1
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16e78
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1b5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC4ERKS4_\0"
	.byte	0x1
	.long	0x80f4
	.long	0x80ff
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ed6
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1c2
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC4ERKS4_jRKS3_\0"
	.byte	0x1
	.long	0x8158
	.long	0x816d
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16e78
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1d1
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC4ERKS4_jj\0"
	.byte	0x1
	.long	0x81c2
	.long	0x81d7
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1e1
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC4ERKS4_jjRKS3_\0"
	.byte	0x1
	.long	0x8231
	.long	0x824b
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16e78
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1f3
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC4EPKDijRKS3_\0"
	.byte	0x1
	.long	0x82a3
	.long	0x82b8
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16e78
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x1fd
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC4EPKDiRKS3_\0"
	.byte	0x1
	.long	0x830f
	.long	0x831f
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x16e78
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x207
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC4EjDiRKS3_\0"
	.byte	0x1
	.long	0x8375
	.long	0x838a
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x167b0
	.uleb128 0x2
	.long	0x16e78
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x213
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC4EOS4_\0"
	.byte	0x1
	.long	0x83dc
	.long	0x83e7
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16edc
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x22e
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC4ESt16initializer_listIDiERKS3_\0"
	.byte	0x1
	.long	0x8452
	.long	0x8462
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0xda0d
	.uleb128 0x2
	.long	0x16e78
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x232
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC4ERKS4_RKS3_\0"
	.byte	0x1
	.long	0x84ba
	.long	0x84ca
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x16e78
	.byte	0
	.uleb128 0x22
	.secrel32	LASF40
	.byte	0x3
	.word	0x236
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEC4EOS4_RKS3_\0"
	.byte	0x1
	.long	0x8521
	.long	0x8531
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16edc
	.uleb128 0x2
	.long	0x16e78
	.byte	0
	.uleb128 0x22
	.secrel32	LASF41
	.byte	0x3
	.word	0x286
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEED4Ev\0"
	.byte	0x1
	.long	0x8580
	.long	0x858b
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x5
	.long	0xf4
	.byte	0
	.uleb128 0xb
	.secrel32	LASF42
	.byte	0x3
	.word	0x28e
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEaSERKS4_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x85e2
	.long	0x85ed
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ed6
	.byte	0
	.uleb128 0xb
	.secrel32	LASF42
	.byte	0x3
	.word	0x2b5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEaSEPKDi\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x8643
	.long	0x864e
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16e61
	.byte	0
	.uleb128 0xb
	.secrel32	LASF42
	.byte	0x3
	.word	0x2c0
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEaSEDi\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x86a2
	.long	0x86ad
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0xb
	.secrel32	LASF42
	.byte	0x3
	.word	0x2d2
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEaSEOS4_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x8703
	.long	0x870e
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16edc
	.byte	0
	.uleb128 0xb
	.secrel32	LASF42
	.byte	0x3
	.word	0x308
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEaSESt16initializer_listIDiE\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x8778
	.long	0x8783
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0xda0d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF43
	.byte	0x3
	.word	0x327
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5beginEv\0"
	.long	0x7cbc
	.byte	0x1
	.long	0x87da
	.long	0x87e0
	.uleb128 0x5
	.long	0x16eb8
	.byte	0
	.uleb128 0xb
	.secrel32	LASF43
	.byte	0x3
	.word	0x32f
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5beginEv\0"
	.long	0x7d5d
	.byte	0x1
	.long	0x8838
	.long	0x883e
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x26
	.ascii "end\0"
	.byte	0x3
	.word	0x337
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE3endEv\0"
	.long	0x7cbc
	.byte	0x1
	.long	0x8893
	.long	0x8899
	.uleb128 0x5
	.long	0x16eb8
	.byte	0
	.uleb128 0x26
	.ascii "end\0"
	.byte	0x3
	.word	0x33f
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE3endEv\0"
	.long	0x7d5d
	.byte	0x1
	.long	0x88ef
	.long	0x88f5
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x25
	.secrel32	LASF44
	.byte	0x3
	.byte	0x62
	.byte	0x30
	.long	0xdbbc
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF45
	.byte	0x3
	.word	0x348
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6rbeginEv\0"
	.long	0x88f5
	.byte	0x1
	.long	0x895a
	.long	0x8960
	.uleb128 0x5
	.long	0x16eb8
	.byte	0
	.uleb128 0x25
	.secrel32	LASF46
	.byte	0x3
	.byte	0x61
	.byte	0x35
	.long	0xdc56
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF45
	.byte	0x3
	.word	0x351
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6rbeginEv\0"
	.long	0x8960
	.byte	0x1
	.long	0x89c6
	.long	0x89cc
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x26
	.ascii "rend\0"
	.byte	0x3
	.word	0x35a
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4rendEv\0"
	.long	0x88f5
	.byte	0x1
	.long	0x8a23
	.long	0x8a29
	.uleb128 0x5
	.long	0x16eb8
	.byte	0
	.uleb128 0x26
	.ascii "rend\0"
	.byte	0x3
	.word	0x363
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4rendEv\0"
	.long	0x8960
	.byte	0x1
	.long	0x8a81
	.long	0x8a87
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x26
	.ascii "cbegin\0"
	.byte	0x3
	.word	0x36c
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6cbeginEv\0"
	.long	0x7d5d
	.byte	0x1
	.long	0x8ae3
	.long	0x8ae9
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x26
	.ascii "cend\0"
	.byte	0x3
	.word	0x374
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4cendEv\0"
	.long	0x7d5d
	.byte	0x1
	.long	0x8b41
	.long	0x8b47
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x26
	.ascii "crbegin\0"
	.byte	0x3
	.word	0x37d
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7crbeginEv\0"
	.long	0x8960
	.byte	0x1
	.long	0x8ba5
	.long	0x8bab
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x26
	.ascii "crend\0"
	.byte	0x3
	.word	0x386
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5crendEv\0"
	.long	0x8960
	.byte	0x1
	.long	0x8c05
	.long	0x8c0b
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0xb
	.secrel32	LASF47
	.byte	0x3
	.word	0x38f
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4sizeEv\0"
	.long	0x72da
	.byte	0x1
	.long	0x8c62
	.long	0x8c68
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0xb
	.secrel32	LASF48
	.byte	0x3
	.word	0x395
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6lengthEv\0"
	.long	0x72da
	.byte	0x1
	.long	0x8cc1
	.long	0x8cc7
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0xb
	.secrel32	LASF49
	.byte	0x3
	.word	0x39a
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE8max_sizeEv\0"
	.long	0x72da
	.byte	0x1
	.long	0x8d22
	.long	0x8d28
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x22
	.secrel32	LASF50
	.byte	0x3
	.word	0x3a8
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6resizeEjDi\0"
	.byte	0x1
	.long	0x8d7e
	.long	0x8d8e
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0x22
	.secrel32	LASF50
	.byte	0x3
	.word	0x3b5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6resizeEj\0"
	.byte	0x1
	.long	0x8de2
	.long	0x8ded
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x22
	.secrel32	LASF51
	.byte	0x3
	.word	0x3bb
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE13shrink_to_fitEv\0"
	.byte	0x1
	.long	0x8e49
	.long	0x8e4f
	.uleb128 0x5
	.long	0x16eb8
	.byte	0
	.uleb128 0xb
	.secrel32	LASF52
	.byte	0x3
	.word	0x3ce
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE8capacityEv\0"
	.long	0x72da
	.byte	0x1
	.long	0x8eaa
	.long	0x8eb0
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x5b
	.ascii "reserve\0"
	.byte	0x3
	.word	0x3e6
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7reserveEj\0"
	.byte	0x1
	.long	0x8f09
	.long	0x8f14
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x5b
	.ascii "clear\0"
	.byte	0x3
	.word	0x3ec
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5clearEv\0"
	.byte	0x1
	.long	0x8f69
	.long	0x8f6f
	.uleb128 0x5
	.long	0x16eb8
	.byte	0
	.uleb128 0x26
	.ascii "empty\0"
	.byte	0x3
	.word	0x3f4
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5emptyEv\0"
	.long	0x15b97
	.byte	0x1
	.long	0x8fc9
	.long	0x8fcf
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x25
	.secrel32	LASF53
	.byte	0x3
	.byte	0x5b
	.byte	0x37
	.long	0x116b5
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF54
	.byte	0x3
	.word	0x403
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEixEj\0"
	.long	0x8fcf
	.byte	0x1
	.long	0x9030
	.long	0x903b
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x25
	.secrel32	LASF55
	.byte	0x3
	.byte	0x5a
	.byte	0x32
	.long	0x116a9
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF54
	.byte	0x3
	.word	0x414
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEixEj\0"
	.long	0x903b
	.byte	0x1
	.long	0x909b
	.long	0x90a6
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x26
	.ascii "at\0"
	.byte	0x3
	.word	0x429
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE2atEj\0"
	.long	0x8fcf
	.byte	0x1
	.long	0x90fa
	.long	0x9105
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x26
	.ascii "at\0"
	.byte	0x3
	.word	0x43e
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE2atEj\0"
	.long	0x903b
	.byte	0x1
	.long	0x9158
	.long	0x9163
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF56
	.byte	0x3
	.word	0x44e
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5frontEv\0"
	.long	0x903b
	.byte	0x1
	.long	0x91ba
	.long	0x91c0
	.uleb128 0x5
	.long	0x16eb8
	.byte	0
	.uleb128 0xb
	.secrel32	LASF56
	.byte	0x3
	.word	0x459
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5frontEv\0"
	.long	0x8fcf
	.byte	0x1
	.long	0x9218
	.long	0x921e
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0x26
	.ascii "back\0"
	.byte	0x3
	.word	0x464
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4backEv\0"
	.long	0x903b
	.byte	0x1
	.long	0x9275
	.long	0x927b
	.uleb128 0x5
	.long	0x16eb8
	.byte	0
	.uleb128 0x26
	.ascii "back\0"
	.byte	0x3
	.word	0x46f
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4backEv\0"
	.long	0x8fcf
	.byte	0x1
	.long	0x92d3
	.long	0x92d9
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0xb
	.secrel32	LASF57
	.byte	0x3
	.word	0x47d
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEpLERKS4_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9330
	.long	0x933b
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ed6
	.byte	0
	.uleb128 0xb
	.secrel32	LASF57
	.byte	0x3
	.word	0x486
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEpLEPKDi\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9391
	.long	0x939c
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16e61
	.byte	0
	.uleb128 0xb
	.secrel32	LASF57
	.byte	0x3
	.word	0x48f
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEpLEDi\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x93f0
	.long	0x93fb
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0xb
	.secrel32	LASF57
	.byte	0x3
	.word	0x49c
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEpLESt16initializer_listIDiE\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9465
	.long	0x9470
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0xda0d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF58
	.byte	0x3
	.word	0x4b2
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6appendERKS4_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x94cc
	.long	0x94d7
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ed6
	.byte	0
	.uleb128 0xb
	.secrel32	LASF58
	.byte	0x3
	.word	0x4c3
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6appendERKS4_jj\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9535
	.long	0x954a
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF58
	.byte	0x3
	.word	0x4cf
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6appendEPKDij\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x95a6
	.long	0x95b6
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF58
	.byte	0x3
	.word	0x4dc
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6appendEPKDi\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9611
	.long	0x961c
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16e61
	.byte	0
	.uleb128 0xb
	.secrel32	LASF58
	.byte	0x3
	.word	0x4ed
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6appendEjDi\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9676
	.long	0x9686
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0xb
	.secrel32	LASF58
	.byte	0x3
	.word	0x4f7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6appendESt16initializer_listIDiE\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x96f5
	.long	0x9700
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0xda0d
	.byte	0
	.uleb128 0x22
	.secrel32	LASF59
	.byte	0x3
	.word	0x532
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE9push_backEDi\0"
	.byte	0x1
	.long	0x9758
	.long	0x9763
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x541
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6assignERKS4_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x97bf
	.long	0x97ca
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ed6
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x551
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6assignEOS4_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9825
	.long	0x9830
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16edc
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x568
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6assignERKS4_jj\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x988e
	.long	0x98a3
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x578
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6assignEPKDij\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x98ff
	.long	0x990f
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x588
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6assignEPKDi\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x996a
	.long	0x9975
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16e61
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x599
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6assignEjDi\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x99cf
	.long	0x99df
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0xb
	.secrel32	LASF60
	.byte	0x3
	.word	0x5b5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6assignESt16initializer_listIDiE\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9a4e
	.long	0x9a59
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0xda0d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x5ea
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6insertEN9__gnu_cxx17__normal_iteratorIPKDiS4_EEjDi\0"
	.long	0x7cbc
	.byte	0x1
	.long	0x9adb
	.long	0x9af0
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x7d5d
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0x22
	.secrel32	LASF61
	.byte	0x3
	.word	0x638
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6insertEN9__gnu_cxx17__normal_iteratorIPDiS4_EESt16initializer_listIDiE\0"
	.byte	0x1
	.long	0x9b82
	.long	0x9b92
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x7cbc
	.uleb128 0x2
	.long	0xda0d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x64c
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6insertEjRKS4_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9bef
	.long	0x9bff
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16ed6
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x663
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6insertEjRKS4_jj\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9c5e
	.long	0x9c78
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x67a
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6insertEjPKDij\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9cd5
	.long	0x9cea
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x68d
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6insertEjPKDi\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9d46
	.long	0x9d56
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16e61
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x6a5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6insertEjjDi\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9db1
	.long	0x9dc6
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0xb
	.secrel32	LASF61
	.byte	0x3
	.word	0x6b7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6insertEN9__gnu_cxx17__normal_iteratorIPKDiS4_EEDi\0"
	.long	0x7cbc
	.byte	0x1
	.long	0x9e47
	.long	0x9e57
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0x29
	.secrel32	LASF62
	.byte	0x3
	.byte	0x6c
	.byte	0x1e
	.long	0x7d5d
	.uleb128 0xb
	.secrel32	LASF63
	.byte	0x3
	.word	0x6f3
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5eraseEjj\0"
	.long	0x16ee2
	.byte	0x1
	.long	0x9ebb
	.long	0x9ecb
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF63
	.byte	0x3
	.word	0x706
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5eraseEN9__gnu_cxx17__normal_iteratorIPKDiS4_EE\0"
	.long	0x7cbc
	.byte	0x1
	.long	0x9f49
	.long	0x9f54
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x9e57
	.byte	0
	.uleb128 0xb
	.secrel32	LASF63
	.byte	0x3
	.word	0x719
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5eraseEN9__gnu_cxx17__normal_iteratorIPKDiS4_EES9_\0"
	.long	0x7cbc
	.byte	0x1
	.long	0x9fd5
	.long	0x9fe5
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x9e57
	.byte	0
	.uleb128 0x22
	.secrel32	LASF64
	.byte	0x3
	.word	0x72c
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE8pop_backEv\0"
	.byte	0x1
	.long	0xa03b
	.long	0xa041
	.uleb128 0x5
	.long	0x16eb8
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x745
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEjjRKS4_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa0a0
	.long	0xa0b5
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16ed6
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x75b
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEjjRKS4_jj\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa116
	.long	0xa135
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x774
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEjjPKDij\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa194
	.long	0xa1ae
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x78d
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEjjPKDi\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa20c
	.long	0xa221
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16e61
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x7a5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEjjjDi\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa27e
	.long	0xa298
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x7b7
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEN9__gnu_cxx17__normal_iteratorIPKDiS4_EES9_RKS4_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa320
	.long	0xa335
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x16ed6
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x7cb
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEN9__gnu_cxx17__normal_iteratorIPKDiS4_EES9_S8_j\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa3bc
	.long	0xa3d6
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x7e1
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEN9__gnu_cxx17__normal_iteratorIPKDiS4_EES9_S8_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa45c
	.long	0xa471
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x16e61
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x7f6
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEN9__gnu_cxx17__normal_iteratorIPKDiS4_EES9_jDi\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa4f7
	.long	0xa511
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x82f
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEN9__gnu_cxx17__normal_iteratorIPKDiS4_EES9_PDiSA_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa59a
	.long	0xa5b4
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x16e4a
	.uleb128 0x2
	.long	0x16e4a
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x83a
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEN9__gnu_cxx17__normal_iteratorIPKDiS4_EES9_S8_S8_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa63d
	.long	0xa657
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x16e61
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x845
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEN9__gnu_cxx17__normal_iteratorIPKDiS4_EES9_NS6_IPDiS4_EESB_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa6ea
	.long	0xa704
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x7cbc
	.uleb128 0x2
	.long	0x7cbc
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x850
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEN9__gnu_cxx17__normal_iteratorIPKDiS4_EES9_S9_S9_\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa78d
	.long	0xa7a7
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x9e57
	.uleb128 0x2
	.long	0x7d5d
	.uleb128 0x2
	.long	0x7d5d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF65
	.byte	0x3
	.word	0x869
	.byte	0x15
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7replaceEN9__gnu_cxx17__normal_iteratorIPKDiS4_EES9_St16initializer_listIDiE\0"
	.long	0x16ee2
	.byte	0x1
	.long	0xa842
	.long	0xa857
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x7d5d
	.uleb128 0x2
	.long	0x7d5d
	.uleb128 0x2
	.long	0xda0d
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF66
	.byte	0x3
	.word	0x8b2
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE14_M_replace_auxEjjjDi\0"
	.long	0x16ee2
	.long	0xa8bb
	.long	0xa8d5
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x167b0
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF67
	.byte	0x3
	.word	0x8b6
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE10_M_replaceEjjPKDij\0"
	.long	0x16ee2
	.long	0xa937
	.long	0xa951
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x3b
	.secrel32	LASF68
	.byte	0x3
	.word	0x8ba
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE9_M_appendEPKDij\0"
	.long	0x16ee2
	.long	0xa9af
	.long	0xa9bf
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x26
	.ascii "copy\0"
	.byte	0x3
	.word	0x8cb
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4copyEPDijj\0"
	.long	0x72da
	.byte	0x1
	.long	0xaa1b
	.long	0xaa30
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e4a
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x5b
	.ascii "swap\0"
	.byte	0x3
	.word	0x8d5
	.byte	0x7
	.ascii "_ZNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4swapERS4_\0"
	.byte	0x1
	.long	0xaa86
	.long	0xaa91
	.uleb128 0x5
	.long	0x16eb8
	.uleb128 0x2
	.long	0x16ee2
	.byte	0
	.uleb128 0x26
	.ascii "c_str\0"
	.byte	0x3
	.word	0x8df
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5c_strEv\0"
	.long	0x16e61
	.byte	0x1
	.long	0xaaeb
	.long	0xaaf1
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0xb
	.secrel32	LASF69
	.byte	0x3
	.word	0x8eb
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4dataEv\0"
	.long	0x16e61
	.byte	0x1
	.long	0xab48
	.long	0xab4e
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0xb
	.secrel32	LASF70
	.byte	0x3
	.word	0x8fe
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE13get_allocatorEv\0"
	.long	0x7842
	.byte	0x1
	.long	0xabaf
	.long	0xabb5
	.uleb128 0x5
	.long	0x16ebe
	.byte	0
	.uleb128 0xb
	.secrel32	LASF71
	.byte	0x3
	.word	0x90e
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4findEPKDijj\0"
	.long	0x72da
	.byte	0x1
	.long	0xac11
	.long	0xac26
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF71
	.byte	0x3
	.word	0x91c
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4findERKS4_j\0"
	.long	0x72da
	.byte	0x1
	.long	0xac82
	.long	0xac92
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF71
	.byte	0x3
	.word	0x93c
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4findEPKDij\0"
	.long	0x72da
	.byte	0x1
	.long	0xaced
	.long	0xacfd
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF71
	.byte	0x3
	.word	0x94d
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE4findEDij\0"
	.long	0x72da
	.byte	0x1
	.long	0xad56
	.long	0xad66
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x167b0
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF72
	.byte	0x3
	.word	0x95a
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5rfindERKS4_j\0"
	.long	0x72da
	.byte	0x1
	.long	0xadc3
	.long	0xadd3
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF72
	.byte	0x3
	.word	0x97c
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5rfindEPKDijj\0"
	.long	0x72da
	.byte	0x1
	.long	0xae30
	.long	0xae45
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF72
	.byte	0x3
	.word	0x98a
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5rfindEPKDij\0"
	.long	0x72da
	.byte	0x1
	.long	0xaea1
	.long	0xaeb1
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF72
	.byte	0x3
	.word	0x99b
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE5rfindEDij\0"
	.long	0x72da
	.byte	0x1
	.long	0xaf0b
	.long	0xaf1b
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x167b0
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF73
	.byte	0x3
	.word	0x9a9
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE13find_first_ofERKS4_j\0"
	.long	0x72da
	.byte	0x1
	.long	0xaf81
	.long	0xaf91
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF73
	.byte	0x3
	.word	0x9cc
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE13find_first_ofEPKDijj\0"
	.long	0x72da
	.byte	0x1
	.long	0xaff7
	.long	0xb00c
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF73
	.byte	0x3
	.word	0x9da
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE13find_first_ofEPKDij\0"
	.long	0x72da
	.byte	0x1
	.long	0xb071
	.long	0xb081
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF73
	.byte	0x3
	.word	0x9ee
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE13find_first_ofEDij\0"
	.long	0x72da
	.byte	0x1
	.long	0xb0e4
	.long	0xb0f4
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x167b0
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF74
	.byte	0x3
	.word	0x9fd
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE12find_last_ofERKS4_j\0"
	.long	0x72da
	.byte	0x1
	.long	0xb159
	.long	0xb169
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF74
	.byte	0x3
	.word	0xa20
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE12find_last_ofEPKDijj\0"
	.long	0x72da
	.byte	0x1
	.long	0xb1ce
	.long	0xb1e3
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF74
	.byte	0x3
	.word	0xa2e
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE12find_last_ofEPKDij\0"
	.long	0x72da
	.byte	0x1
	.long	0xb247
	.long	0xb257
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF74
	.byte	0x3
	.word	0xa42
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE12find_last_ofEDij\0"
	.long	0x72da
	.byte	0x1
	.long	0xb2b9
	.long	0xb2c9
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x167b0
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF75
	.byte	0x3
	.word	0xa50
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE17find_first_not_ofERKS4_j\0"
	.long	0x72da
	.byte	0x1
	.long	0xb333
	.long	0xb343
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF75
	.byte	0x3
	.word	0xa73
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE17find_first_not_ofEPKDijj\0"
	.long	0x72da
	.byte	0x1
	.long	0xb3ad
	.long	0xb3c2
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF75
	.byte	0x3
	.word	0xa81
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE17find_first_not_ofEPKDij\0"
	.long	0x72da
	.byte	0x1
	.long	0xb42b
	.long	0xb43b
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF75
	.byte	0x3
	.word	0xa93
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE17find_first_not_ofEDij\0"
	.long	0x72da
	.byte	0x1
	.long	0xb4a2
	.long	0xb4b2
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x167b0
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF76
	.byte	0x3
	.word	0xaa2
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE16find_last_not_ofERKS4_j\0"
	.long	0x72da
	.byte	0x1
	.long	0xb51b
	.long	0xb52b
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF76
	.byte	0x3
	.word	0xac5
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE16find_last_not_ofEPKDijj\0"
	.long	0x72da
	.byte	0x1
	.long	0xb594
	.long	0xb5a9
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF76
	.byte	0x3
	.word	0xad3
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE16find_last_not_ofEPKDij\0"
	.long	0x72da
	.byte	0x1
	.long	0xb611
	.long	0xb621
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF76
	.byte	0x3
	.word	0xae5
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE16find_last_not_ofEDij\0"
	.long	0x72da
	.byte	0x1
	.long	0xb687
	.long	0xb697
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x167b0
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x26
	.ascii "substr\0"
	.byte	0x3
	.word	0xaf5
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE6substrEjj\0"
	.long	0x7138
	.byte	0x1
	.long	0xb6f4
	.long	0xb704
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF77
	.byte	0x3
	.word	0xb08
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7compareERKS4_\0"
	.long	0xf4
	.byte	0x1
	.long	0xb762
	.long	0xb76d
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16ed6
	.byte	0
	.uleb128 0xb
	.secrel32	LASF77
	.byte	0x3
	.word	0xb65
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7compareEjjRKS4_\0"
	.long	0xf4
	.byte	0x1
	.long	0xb7cd
	.long	0xb7e2
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16ed6
	.byte	0
	.uleb128 0xb
	.secrel32	LASF77
	.byte	0x3
	.word	0xb7f
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7compareEjjRKS4_jj\0"
	.long	0xf4
	.byte	0x1
	.long	0xb844
	.long	0xb863
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16ed6
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0xb
	.secrel32	LASF77
	.byte	0x3
	.word	0xb91
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7compareEPKDi\0"
	.long	0xf4
	.byte	0x1
	.long	0xb8c0
	.long	0xb8cb
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x16e61
	.byte	0
	.uleb128 0xb
	.secrel32	LASF77
	.byte	0x3
	.word	0xba9
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7compareEjjPKDi\0"
	.long	0xf4
	.byte	0x1
	.long	0xb92a
	.long	0xb93f
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16e61
	.byte	0
	.uleb128 0xb
	.secrel32	LASF77
	.byte	0x3
	.word	0xbc4
	.byte	0x7
	.ascii "_ZNKSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEE7compareEjjPKDij\0"
	.long	0xf4
	.byte	0x1
	.long	0xb99f
	.long	0xb9b9
	.uleb128 0x5
	.long	0x16ebe
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x72da
	.uleb128 0x2
	.long	0x16e61
	.uleb128 0x2
	.long	0x72da
	.byte	0
	.uleb128 0x1d
	.secrel32	LASF82
	.long	0x167b0
	.uleb128 0x6f
	.secrel32	LASF83
	.long	0xc6e7
	.uleb128 0x6f
	.secrel32	LASF84
	.long	0xd72f
	.byte	0
	.uleb128 0x14
	.long	0x7138
	.uleb128 0x17
	.secrel32	LASF86
	.byte	0x3
	.word	0x1930
	.byte	0x3
	.ascii "_ZNSt7__cxx119to_stringEf\0"
	.long	0x7129
	.long	0xba0b
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x8c
	.secrel32	LASF86
	.byte	0x3
	.word	0x190e
	.byte	0x3
	.ascii "_ZNSt7__cxx119to_stringEi\0"
	.long	0x7129
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.byte	0
	.uleb128 0x70
	.byte	0x26
	.word	0x104
	.byte	0x41
	.long	0x2827
	.uleb128 0x6
	.byte	0x1f
	.byte	0x7f
	.byte	0xb
	.long	0x12820
	.uleb128 0x6
	.byte	0x1f
	.byte	0x80
	.byte	0xb
	.long	0x1285b
	.uleb128 0x6
	.byte	0x1f
	.byte	0x86
	.byte	0xb
	.long	0x12a4b
	.uleb128 0x6
	.byte	0x1f
	.byte	0x8c
	.byte	0xb
	.long	0x12a65
	.uleb128 0x6
	.byte	0x1f
	.byte	0x8d
	.byte	0xb
	.long	0x12a88
	.uleb128 0x6
	.byte	0x1f
	.byte	0x8e
	.byte	0xb
	.long	0x12aa0
	.uleb128 0x6
	.byte	0x1f
	.byte	0x8f
	.byte	0xb
	.long	0x12ab8
	.uleb128 0x6
	.byte	0x1f
	.byte	0x91
	.byte	0xb
	.long	0x12b01
	.uleb128 0x6
	.byte	0x1f
	.byte	0x94
	.byte	0xb
	.long	0x12b1d
	.uleb128 0x6
	.byte	0x1f
	.byte	0x96
	.byte	0xb
	.long	0x12b37
	.uleb128 0x6
	.byte	0x1f
	.byte	0x99
	.byte	0xb
	.long	0x12b54
	.uleb128 0x6
	.byte	0x1f
	.byte	0x9a
	.byte	0xb
	.long	0x12b72
	.uleb128 0x6
	.byte	0x1f
	.byte	0x9b
	.byte	0xb
	.long	0x12b98
	.uleb128 0x6
	.byte	0x1f
	.byte	0x9d
	.byte	0xb
	.long	0x12bbc
	.uleb128 0x6
	.byte	0x1f
	.byte	0xa3
	.byte	0xb
	.long	0x12be0
	.uleb128 0x6
	.byte	0x1f
	.byte	0xa5
	.byte	0xb
	.long	0x12bee
	.uleb128 0x6
	.byte	0x1f
	.byte	0xa6
	.byte	0xb
	.long	0x12c03
	.uleb128 0x6
	.byte	0x1f
	.byte	0xa7
	.byte	0xb
	.long	0x12c22
	.uleb128 0x6
	.byte	0x1f
	.byte	0xa8
	.byte	0xb
	.long	0x12c46
	.uleb128 0x6
	.byte	0x1f
	.byte	0xa9
	.byte	0xb
	.long	0x12c6b
	.uleb128 0x6
	.byte	0x1f
	.byte	0xab
	.byte	0xb
	.long	0x12c85
	.uleb128 0x6
	.byte	0x1f
	.byte	0xac
	.byte	0xb
	.long	0x12cab
	.uleb128 0x6
	.byte	0x1f
	.byte	0xf0
	.byte	0x16
	.long	0x12a28
	.uleb128 0x6
	.byte	0x1f
	.byte	0xf5
	.byte	0x16
	.long	0xfa18
	.uleb128 0x6
	.byte	0x1f
	.byte	0xf6
	.byte	0x16
	.long	0x12cca
	.uleb128 0x6
	.byte	0x1f
	.byte	0xf8
	.byte	0x16
	.long	0x12ce8
	.uleb128 0x6
	.byte	0x1f
	.byte	0xf9
	.byte	0x16
	.long	0x12d4c
	.uleb128 0x6
	.byte	0x1f
	.byte	0xfa
	.byte	0x16
	.long	0x12d01
	.uleb128 0x6
	.byte	0x1f
	.byte	0xfb
	.byte	0x16
	.long	0x12d26
	.uleb128 0x6
	.byte	0x1f
	.byte	0xfc
	.byte	0x16
	.long	0x12d6b
	.uleb128 0x28
	.ascii "abs\0"
	.byte	0x1
	.byte	0x66
	.byte	0x3
	.ascii "_ZSt3absg\0"
	.long	0x12dc2
	.long	0xbb53
	.uleb128 0x2
	.long	0x12dc2
	.byte	0
	.uleb128 0x28
	.ascii "abs\0"
	.byte	0x1
	.byte	0x4e
	.byte	0x3
	.ascii "_ZSt3abse\0"
	.long	0x12874
	.long	0xbb73
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x28
	.ascii "abs\0"
	.byte	0x1
	.byte	0x4a
	.byte	0x3
	.ascii "_ZSt3absf\0"
	.long	0x7d5
	.long	0xbb93
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x28
	.ascii "abs\0"
	.byte	0x1
	.byte	0x46
	.byte	0x3
	.ascii "_ZSt3absd\0"
	.long	0x1286a
	.long	0xbbb3
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x28
	.ascii "abs\0"
	.byte	0x1
	.byte	0x3d
	.byte	0x3
	.ascii "_ZSt3absx\0"
	.long	0x159
	.long	0xbbd3
	.uleb128 0x2
	.long	0x159
	.byte	0
	.uleb128 0x28
	.ascii "abs\0"
	.byte	0x1
	.byte	0x38
	.byte	0x3
	.ascii "_ZSt3absl\0"
	.long	0x14d
	.long	0xbbf3
	.uleb128 0x2
	.long	0x14d
	.byte	0
	.uleb128 0x28
	.ascii "div\0"
	.byte	0x1f
	.byte	0xb1
	.byte	0x3
	.ascii "_ZSt3divll\0"
	.long	0x1285b
	.long	0xbc19
	.uleb128 0x2
	.long	0x14d
	.uleb128 0x2
	.long	0x14d
	.byte	0
	.uleb128 0x8d
	.ascii "__false_type\0"
	.byte	0x1
	.byte	0x20
	.byte	0x4a
	.byte	0xa
	.uleb128 0x23
	.ascii "__is_integer<double>\0"
	.byte	0x1
	.byte	0x20
	.byte	0x7f
	.byte	0xc
	.long	0xbc6d
	.uleb128 0x6c
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x20
	.byte	0x81
	.byte	0xc
	.long	0xbc63
	.uleb128 0x1f
	.ascii "__value\0"
	.byte	0
	.byte	0
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0x1286a
	.byte	0
	.uleb128 0x23
	.ascii "__is_integer<float>\0"
	.byte	0x1
	.byte	0x20
	.byte	0x7f
	.byte	0xc
	.long	0xbcad
	.uleb128 0x6c
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x20
	.byte	0x81
	.byte	0xc
	.long	0xbca3
	.uleb128 0x1f
	.ascii "__value\0"
	.byte	0
	.byte	0
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0x7d5
	.byte	0
	.uleb128 0x23
	.ascii "integral_constant<bool, false>\0"
	.byte	0x1
	.byte	0x21
	.byte	0x45
	.byte	0xc
	.long	0xbdb7
	.uleb128 0x8e
	.secrel32	LASF87
	.byte	0x21
	.byte	0x47
	.byte	0x2d
	.long	0x15b9f
	.uleb128 0x29
	.secrel32	LASF88
	.byte	0x21
	.byte	0x48
	.byte	0x2d
	.long	0x15b97
	.uleb128 0x7b
	.ascii "operator std::integral_constant<bool, false>::value_type\0"
	.byte	0x21
	.byte	0x4a
	.byte	0x11
	.ascii "_ZNKSt17integral_constantIbLb0EEcvbEv\0"
	.long	0xbce2
	.long	0xbd5d
	.long	0xbd63
	.uleb128 0x5
	.long	0x15ba4
	.byte	0
	.uleb128 0x47
	.secrel32	LASF89
	.byte	0x21
	.byte	0x4f
	.byte	0x1c
	.ascii "_ZNKSt17integral_constantIbLb0EEclEv\0"
	.long	0xbce2
	.long	0xbd9c
	.long	0xbda2
	.uleb128 0x5
	.long	0x15ba4
	.byte	0
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0x15b97
	.uleb128 0x8f
	.ascii "__v\0"
	.long	0x15b97
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0xbcad
	.uleb128 0x23
	.ascii "integral_constant<bool, true>\0"
	.byte	0x1
	.byte	0x21
	.byte	0x45
	.byte	0xc
	.long	0xbec4
	.uleb128 0x8e
	.secrel32	LASF87
	.byte	0x21
	.byte	0x47
	.byte	0x2d
	.long	0x15b9f
	.uleb128 0x29
	.secrel32	LASF88
	.byte	0x21
	.byte	0x48
	.byte	0x2d
	.long	0x15b97
	.uleb128 0x7b
	.ascii "operator std::integral_constant<bool, true>::value_type\0"
	.byte	0x21
	.byte	0x4a
	.byte	0x11
	.ascii "_ZNKSt17integral_constantIbLb1EEcvbEv\0"
	.long	0xbdf0
	.long	0xbe6a
	.long	0xbe70
	.uleb128 0x5
	.long	0x15baa
	.byte	0
	.uleb128 0x47
	.secrel32	LASF89
	.byte	0x21
	.byte	0x4f
	.byte	0x1c
	.ascii "_ZNKSt17integral_constantIbLb1EEclEv\0"
	.long	0xbdf0
	.long	0xbea9
	.long	0xbeaf
	.uleb128 0x5
	.long	0x15baa
	.byte	0
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0x15b97
	.uleb128 0x8f
	.ascii "__v\0"
	.long	0x15b97
	.byte	0x1
	.byte	0
	.uleb128 0x14
	.long	0xbdbc
	.uleb128 0x90
	.ascii "__swappable_details\0"
	.byte	0x21
	.word	0x975
	.byte	0xd
	.uleb128 0x90
	.ascii "__swappable_with_details\0"
	.byte	0x21
	.word	0x9c3
	.byte	0xd
	.uleb128 0x65
	.secrel32	LASF90
	.byte	0x1
	.byte	0x22
	.byte	0x4c
	.byte	0xa
	.long	0xbf45
	.uleb128 0x91
	.secrel32	LASF90
	.byte	0x22
	.byte	0x4c
	.byte	0x2b
	.ascii "_ZNSt21piecewise_construct_tC4Ev\0"
	.byte	0x1
	.long	0xbf3e
	.uleb128 0x5
	.long	0x15bb0
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0xbf02
	.uleb128 0xad
	.ascii "piecewise_construct\0"
	.byte	0x22
	.byte	0x4f
	.byte	0x35
	.long	0xbf45
	.byte	0x1
	.byte	0
	.uleb128 0x8d
	.ascii "input_iterator_tag\0"
	.byte	0x1
	.byte	0xf
	.byte	0x59
	.byte	0xa
	.uleb128 0x23
	.ascii "forward_iterator_tag\0"
	.byte	0x1
	.byte	0xf
	.byte	0x5f
	.byte	0xa
	.long	0xbfa7
	.uleb128 0x5a
	.long	0xbf69
	.byte	0
	.byte	0
	.uleb128 0x23
	.ascii "bidirectional_iterator_tag\0"
	.byte	0x1
	.byte	0xf
	.byte	0x63
	.byte	0xa
	.long	0xbfd2
	.uleb128 0x5a
	.long	0xbf82
	.byte	0
	.byte	0
	.uleb128 0x23
	.ascii "random_access_iterator_tag\0"
	.byte	0x1
	.byte	0xf
	.byte	0x67
	.byte	0xa
	.long	0xbffd
	.uleb128 0x5a
	.long	0xbfa7
	.byte	0
	.byte	0
	.uleb128 0x92
	.ascii "__debug\0"
	.byte	0x23
	.byte	0x32
	.byte	0xd
	.uleb128 0x6
	.byte	0x24
	.byte	0x40
	.byte	0xb
	.long	0x15d4f
	.uleb128 0x6
	.byte	0x24
	.byte	0x8b
	.byte	0xb
	.long	0x123
	.uleb128 0x6
	.byte	0x24
	.byte	0x8d
	.byte	0xb
	.long	0x15d67
	.uleb128 0x6
	.byte	0x24
	.byte	0x8e
	.byte	0xb
	.long	0x15d80
	.uleb128 0x6
	.byte	0x24
	.byte	0x8f
	.byte	0xb
	.long	0x15da0
	.uleb128 0x6
	.byte	0x24
	.byte	0x90
	.byte	0xb
	.long	0x15dc4
	.uleb128 0x6
	.byte	0x24
	.byte	0x91
	.byte	0xb
	.long	0x15de3
	.uleb128 0x6
	.byte	0x24
	.byte	0x92
	.byte	0xb
	.long	0x15e02
	.uleb128 0x6
	.byte	0x24
	.byte	0x93
	.byte	0xb
	.long	0x15e20
	.uleb128 0x6
	.byte	0x24
	.byte	0x94
	.byte	0xb
	.long	0x15e42
	.uleb128 0x6
	.byte	0x24
	.byte	0x95
	.byte	0xb
	.long	0x15e63
	.uleb128 0x6
	.byte	0x24
	.byte	0x96
	.byte	0xb
	.long	0x15e7c
	.uleb128 0x6
	.byte	0x24
	.byte	0x97
	.byte	0xb
	.long	0x15e8e
	.uleb128 0x6
	.byte	0x24
	.byte	0x98
	.byte	0xb
	.long	0x15eb8
	.uleb128 0x6
	.byte	0x24
	.byte	0x99
	.byte	0xb
	.long	0x15ee2
	.uleb128 0x6
	.byte	0x24
	.byte	0x9a
	.byte	0xb
	.long	0x15f03
	.uleb128 0x6
	.byte	0x24
	.byte	0x9b
	.byte	0xb
	.long	0x15f35
	.uleb128 0x6
	.byte	0x24
	.byte	0x9c
	.byte	0xb
	.long	0x15f53
	.uleb128 0x6
	.byte	0x24
	.byte	0x9e
	.byte	0xb
	.long	0x15f6f
	.uleb128 0x6
	.byte	0x24
	.byte	0x9e
	.byte	0xb
	.long	0x15f8b
	.uleb128 0x6
	.byte	0x24
	.byte	0xa0
	.byte	0xb
	.long	0x15fac
	.uleb128 0x6
	.byte	0x24
	.byte	0xa1
	.byte	0xb
	.long	0x15fcd
	.uleb128 0x6
	.byte	0x24
	.byte	0xa2
	.byte	0xb
	.long	0x15fed
	.uleb128 0x6
	.byte	0x24
	.byte	0xa4
	.byte	0xb
	.long	0x16014
	.uleb128 0x6
	.byte	0x24
	.byte	0xa7
	.byte	0xb
	.long	0x1603a
	.uleb128 0x6
	.byte	0x24
	.byte	0xa7
	.byte	0xb
	.long	0x1605a
	.uleb128 0x6
	.byte	0x24
	.byte	0xaa
	.byte	0xb
	.long	0x1607f
	.uleb128 0x6
	.byte	0x24
	.byte	0xac
	.byte	0xb
	.long	0x160a5
	.uleb128 0x6
	.byte	0x24
	.byte	0xae
	.byte	0xb
	.long	0x160c6
	.uleb128 0x6
	.byte	0x24
	.byte	0xb0
	.byte	0xb
	.long	0x160e6
	.uleb128 0x6
	.byte	0x24
	.byte	0xb1
	.byte	0xb
	.long	0x1610b
	.uleb128 0x6
	.byte	0x24
	.byte	0xb2
	.byte	0xb
	.long	0x16129
	.uleb128 0x6
	.byte	0x24
	.byte	0xb3
	.byte	0xb
	.long	0x16147
	.uleb128 0x6
	.byte	0x24
	.byte	0xb4
	.byte	0xb
	.long	0x16166
	.uleb128 0x6
	.byte	0x24
	.byte	0xb5
	.byte	0xb
	.long	0x16184
	.uleb128 0x6
	.byte	0x24
	.byte	0xb6
	.byte	0xb
	.long	0x161a3
	.uleb128 0x6
	.byte	0x24
	.byte	0xb7
	.byte	0xb
	.long	0x161d4
	.uleb128 0x6
	.byte	0x24
	.byte	0xb8
	.byte	0xb
	.long	0x161ed
	.uleb128 0x6
	.byte	0x24
	.byte	0xb9
	.byte	0xb
	.long	0x16211
	.uleb128 0x6
	.byte	0x24
	.byte	0xba
	.byte	0xb
	.long	0x16235
	.uleb128 0x6
	.byte	0x24
	.byte	0xbb
	.byte	0xb
	.long	0x16259
	.uleb128 0x6
	.byte	0x24
	.byte	0xbc
	.byte	0xb
	.long	0x1628b
	.uleb128 0x6
	.byte	0x24
	.byte	0xbd
	.byte	0xb
	.long	0x162a9
	.uleb128 0x6
	.byte	0x24
	.byte	0xbf
	.byte	0xb
	.long	0x162c8
	.uleb128 0x6
	.byte	0x24
	.byte	0xc1
	.byte	0xb
	.long	0x162e7
	.uleb128 0x6
	.byte	0x24
	.byte	0xc2
	.byte	0xb
	.long	0x16305
	.uleb128 0x6
	.byte	0x24
	.byte	0xc3
	.byte	0xb
	.long	0x16329
	.uleb128 0x6
	.byte	0x24
	.byte	0xc4
	.byte	0xb
	.long	0x1634e
	.uleb128 0x6
	.byte	0x24
	.byte	0xc5
	.byte	0xb
	.long	0x16372
	.uleb128 0x6
	.byte	0x24
	.byte	0xc6
	.byte	0xb
	.long	0x1638b
	.uleb128 0x6
	.byte	0x24
	.byte	0xc7
	.byte	0xb
	.long	0x163b0
	.uleb128 0x6
	.byte	0x24
	.byte	0xc8
	.byte	0xb
	.long	0x163d5
	.uleb128 0x6
	.byte	0x24
	.byte	0xc9
	.byte	0xb
	.long	0x163fb
	.uleb128 0x6
	.byte	0x24
	.byte	0xca
	.byte	0xb
	.long	0x16420
	.uleb128 0x6
	.byte	0x24
	.byte	0xcb
	.byte	0xb
	.long	0x1643c
	.uleb128 0x6
	.byte	0x24
	.byte	0xcc
	.byte	0xb
	.long	0x16457
	.uleb128 0x6
	.byte	0x24
	.byte	0xcd
	.byte	0xb
	.long	0x16475
	.uleb128 0x6
	.byte	0x24
	.byte	0xce
	.byte	0xb
	.long	0x16494
	.uleb128 0x6
	.byte	0x24
	.byte	0xcf
	.byte	0xb
	.long	0x164b3
	.uleb128 0x6
	.byte	0x24
	.byte	0xd0
	.byte	0xb
	.long	0x164d1
	.uleb128 0x40
	.byte	0x24
	.word	0x108
	.byte	0x16
	.long	0x164f6
	.uleb128 0x40
	.byte	0x24
	.word	0x109
	.byte	0x16
	.long	0x16516
	.uleb128 0x40
	.byte	0x24
	.word	0x10a
	.byte	0x16
	.long	0x1653b
	.uleb128 0x40
	.byte	0x24
	.word	0x118
	.byte	0xe
	.long	0x162c8
	.uleb128 0x40
	.byte	0x24
	.word	0x11b
	.byte	0xe
	.long	0x16014
	.uleb128 0x40
	.byte	0x24
	.word	0x11e
	.byte	0xe
	.long	0x1607f
	.uleb128 0x40
	.byte	0x24
	.word	0x121
	.byte	0xe
	.long	0x160c6
	.uleb128 0x40
	.byte	0x24
	.word	0x125
	.byte	0xe
	.long	0x164f6
	.uleb128 0x40
	.byte	0x24
	.word	0x126
	.byte	0xe
	.long	0x16516
	.uleb128 0x40
	.byte	0x24
	.word	0x127
	.byte	0xe
	.long	0x1653b
	.uleb128 0x39
	.ascii "char_traits<char>\0"
	.byte	0x1
	.byte	0x25
	.word	0x113
	.byte	0xc
	.long	0xc5f8
	.uleb128 0x3f
	.secrel32	LASF60
	.byte	0x25
	.word	0x11c
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE6assignERcRKc\0"
	.long	0xc29b
	.uleb128 0x2
	.long	0x16561
	.uleb128 0x2
	.long	0x16567
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF91
	.byte	0x25
	.word	0x115
	.byte	0x21
	.long	0xb8
	.uleb128 0x14
	.long	0xc29b
	.uleb128 0x16
	.ascii "eq\0"
	.byte	0x25
	.word	0x120
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE2eqERKcS2_\0"
	.long	0x15b97
	.long	0xc2e8
	.uleb128 0x2
	.long	0x16567
	.uleb128 0x2
	.long	0x16567
	.byte	0
	.uleb128 0x16
	.ascii "lt\0"
	.byte	0x25
	.word	0x124
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE2ltERKcS2_\0"
	.long	0x15b97
	.long	0xc323
	.uleb128 0x2
	.long	0x16567
	.uleb128 0x2
	.long	0x16567
	.byte	0
	.uleb128 0x17
	.secrel32	LASF77
	.byte	0x25
	.word	0x12c
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE7compareEPKcS2_j\0"
	.long	0xf4
	.long	0xc36a
	.uleb128 0x2
	.long	0x1656d
	.uleb128 0x2
	.long	0x1656d
	.uleb128 0x2
	.long	0xc5f8
	.byte	0
	.uleb128 0x17
	.secrel32	LASF48
	.byte	0x25
	.word	0x13a
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE6lengthEPKc\0"
	.long	0xc5f8
	.long	0xc3a2
	.uleb128 0x2
	.long	0x1656d
	.byte	0
	.uleb128 0x17
	.secrel32	LASF71
	.byte	0x25
	.word	0x144
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE4findEPKcjRS1_\0"
	.long	0x1656d
	.long	0xc3e7
	.uleb128 0x2
	.long	0x1656d
	.uleb128 0x2
	.long	0xc5f8
	.uleb128 0x2
	.long	0x16567
	.byte	0
	.uleb128 0x16
	.ascii "move\0"
	.byte	0x25
	.word	0x152
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE4moveEPcPKcj\0"
	.long	0x16573
	.long	0xc42b
	.uleb128 0x2
	.long	0x16573
	.uleb128 0x2
	.long	0x1656d
	.uleb128 0x2
	.long	0xc5f8
	.byte	0
	.uleb128 0x16
	.ascii "copy\0"
	.byte	0x25
	.word	0x15a
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE4copyEPcPKcj\0"
	.long	0x16573
	.long	0xc46f
	.uleb128 0x2
	.long	0x16573
	.uleb128 0x2
	.long	0x1656d
	.uleb128 0x2
	.long	0xc5f8
	.byte	0
	.uleb128 0x17
	.secrel32	LASF60
	.byte	0x25
	.word	0x162
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE6assignEPcjc\0"
	.long	0x16573
	.long	0xc4b2
	.uleb128 0x2
	.long	0x16573
	.uleb128 0x2
	.long	0xc5f8
	.uleb128 0x2
	.long	0xc29b
	.byte	0
	.uleb128 0x17
	.secrel32	LASF92
	.byte	0x25
	.word	0x16a
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE12to_char_typeERKi\0"
	.long	0xc29b
	.long	0xc4f1
	.uleb128 0x2
	.long	0x16579
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF93
	.byte	0x25
	.word	0x116
	.byte	0x21
	.long	0xf4
	.uleb128 0x14
	.long	0xc4f1
	.uleb128 0x17
	.secrel32	LASF94
	.byte	0x25
	.word	0x170
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE11to_int_typeERKc\0"
	.long	0xc4f1
	.long	0xc541
	.uleb128 0x2
	.long	0x16567
	.byte	0
	.uleb128 0x17
	.secrel32	LASF95
	.byte	0x25
	.word	0x174
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE11eq_int_typeERKiS2_\0"
	.long	0x15b97
	.long	0xc587
	.uleb128 0x2
	.long	0x16579
	.uleb128 0x2
	.long	0x16579
	.byte	0
	.uleb128 0x93
	.ascii "eof\0"
	.byte	0x25
	.word	0x178
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE3eofEv\0"
	.long	0xc4f1
	.uleb128 0x16
	.ascii "not_eof\0"
	.byte	0x25
	.word	0x17c
	.byte	0x7
	.ascii "_ZNSt11char_traitsIcE7not_eofERKi\0"
	.long	0xc4f1
	.long	0xc5ee
	.uleb128 0x2
	.long	0x16579
	.byte	0
	.uleb128 0x1d
	.secrel32	LASF82
	.long	0xb8
	.byte	0
	.uleb128 0x15
	.ascii "size_t\0"
	.byte	0x26
	.byte	0xee
	.byte	0x1a
	.long	0xe4
	.uleb128 0x6
	.byte	0x27
	.byte	0x30
	.byte	0xb
	.long	0x16593
	.uleb128 0x6
	.byte	0x27
	.byte	0x31
	.byte	0xb
	.long	0x165b7
	.uleb128 0x6
	.byte	0x27
	.byte	0x32
	.byte	0xb
	.long	0x165d8
	.uleb128 0x6
	.byte	0x27
	.byte	0x33
	.byte	0xb
	.long	0x165fe
	.uleb128 0x6
	.byte	0x27
	.byte	0x35
	.byte	0xb
	.long	0x166d1
	.uleb128 0x6
	.byte	0x27
	.byte	0x36
	.byte	0xb
	.long	0x166fa
	.uleb128 0x6
	.byte	0x27
	.byte	0x37
	.byte	0xb
	.long	0x16725
	.uleb128 0x6
	.byte	0x27
	.byte	0x38
	.byte	0xb
	.long	0x16750
	.uleb128 0x6
	.byte	0x27
	.byte	0x3a
	.byte	0xb
	.long	0x1661f
	.uleb128 0x6
	.byte	0x27
	.byte	0x3b
	.byte	0xb
	.long	0x1664a
	.uleb128 0x6
	.byte	0x27
	.byte	0x3c
	.byte	0xb
	.long	0x16677
	.uleb128 0x6
	.byte	0x27
	.byte	0x3d
	.byte	0xb
	.long	0x166a4
	.uleb128 0x6
	.byte	0x27
	.byte	0x3f
	.byte	0xb
	.long	0x1677b
	.uleb128 0x6
	.byte	0x27
	.byte	0x40
	.byte	0xb
	.long	0x100
	.uleb128 0x6
	.byte	0x27
	.byte	0x42
	.byte	0xb
	.long	0x165a2
	.uleb128 0x6
	.byte	0x27
	.byte	0x43
	.byte	0xb
	.long	0x165c7
	.uleb128 0x6
	.byte	0x27
	.byte	0x44
	.byte	0xb
	.long	0x165e8
	.uleb128 0x6
	.byte	0x27
	.byte	0x45
	.byte	0xb
	.long	0x1660e
	.uleb128 0x6
	.byte	0x27
	.byte	0x47
	.byte	0xb
	.long	0x166e5
	.uleb128 0x6
	.byte	0x27
	.byte	0x48
	.byte	0xb
	.long	0x1670f
	.uleb128 0x6
	.byte	0x27
	.byte	0x49
	.byte	0xb
	.long	0x1673a
	.uleb128 0x6
	.byte	0x27
	.byte	0x4a
	.byte	0xb
	.long	0x16765
	.uleb128 0x6
	.byte	0x27
	.byte	0x4c
	.byte	0xb
	.long	0x16634
	.uleb128 0x6
	.byte	0x27
	.byte	0x4d
	.byte	0xb
	.long	0x16660
	.uleb128 0x6
	.byte	0x27
	.byte	0x4e
	.byte	0xb
	.long	0x1668d
	.uleb128 0x6
	.byte	0x27
	.byte	0x4f
	.byte	0xb
	.long	0x166ba
	.uleb128 0x6
	.byte	0x27
	.byte	0x51
	.byte	0xb
	.long	0x1678c
	.uleb128 0x6
	.byte	0x27
	.byte	0x52
	.byte	0xb
	.long	0x111
	.uleb128 0x39
	.ascii "char_traits<char32_t>\0"
	.byte	0x1
	.byte	0x25
	.word	0x25d
	.byte	0xc
	.long	0xcabb
	.uleb128 0x3f
	.secrel32	LASF60
	.byte	0x25
	.word	0x266
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE6assignERDiRKDi\0"
	.long	0xc745
	.uleb128 0x2
	.long	0x167aa
	.uleb128 0x2
	.long	0x167c1
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF91
	.byte	0x25
	.word	0x25f
	.byte	0x21
	.long	0x167b0
	.uleb128 0x14
	.long	0xc745
	.uleb128 0x16
	.ascii "eq\0"
	.byte	0x25
	.word	0x26a
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE2eqERKDiS2_\0"
	.long	0x15b97
	.long	0xc794
	.uleb128 0x2
	.long	0x167c1
	.uleb128 0x2
	.long	0x167c1
	.byte	0
	.uleb128 0x16
	.ascii "lt\0"
	.byte	0x25
	.word	0x26e
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE2ltERKDiS2_\0"
	.long	0x15b97
	.long	0xc7d1
	.uleb128 0x2
	.long	0x167c1
	.uleb128 0x2
	.long	0x167c1
	.byte	0
	.uleb128 0x17
	.secrel32	LASF77
	.byte	0x25
	.word	0x272
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE7compareEPKDiS2_j\0"
	.long	0xf4
	.long	0xc81a
	.uleb128 0x2
	.long	0x167c7
	.uleb128 0x2
	.long	0x167c7
	.uleb128 0x2
	.long	0xc5f8
	.byte	0
	.uleb128 0x17
	.secrel32	LASF48
	.byte	0x25
	.word	0x27d
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE6lengthEPKDi\0"
	.long	0xc5f8
	.long	0xc854
	.uleb128 0x2
	.long	0x167c7
	.byte	0
	.uleb128 0x17
	.secrel32	LASF71
	.byte	0x25
	.word	0x286
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE4findEPKDijRS1_\0"
	.long	0x167c7
	.long	0xc89b
	.uleb128 0x2
	.long	0x167c7
	.uleb128 0x2
	.long	0xc5f8
	.uleb128 0x2
	.long	0x167c1
	.byte	0
	.uleb128 0x16
	.ascii "move\0"
	.byte	0x25
	.word	0x28f
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE4moveEPDiPKDij\0"
	.long	0x167cd
	.long	0xc8e2
	.uleb128 0x2
	.long	0x167cd
	.uleb128 0x2
	.long	0x167c7
	.uleb128 0x2
	.long	0xc5f8
	.byte	0
	.uleb128 0x16
	.ascii "copy\0"
	.byte	0x25
	.word	0x298
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE4copyEPDiPKDij\0"
	.long	0x167cd
	.long	0xc929
	.uleb128 0x2
	.long	0x167cd
	.uleb128 0x2
	.long	0x167c7
	.uleb128 0x2
	.long	0xc5f8
	.byte	0
	.uleb128 0x17
	.secrel32	LASF60
	.byte	0x25
	.word	0x2a1
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE6assignEPDijDi\0"
	.long	0x167cd
	.long	0xc96f
	.uleb128 0x2
	.long	0x167cd
	.uleb128 0x2
	.long	0xc5f8
	.uleb128 0x2
	.long	0xc745
	.byte	0
	.uleb128 0x17
	.secrel32	LASF92
	.byte	0x25
	.word	0x2a9
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE12to_char_typeERKj\0"
	.long	0xc745
	.long	0xc9af
	.uleb128 0x2
	.long	0x167d3
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF93
	.byte	0x25
	.word	0x260
	.byte	0x21
	.long	0x1668d
	.uleb128 0x14
	.long	0xc9af
	.uleb128 0x17
	.secrel32	LASF94
	.byte	0x25
	.word	0x2ad
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE11to_int_typeERKDi\0"
	.long	0xc9af
	.long	0xca01
	.uleb128 0x2
	.long	0x167c1
	.byte	0
	.uleb128 0x17
	.secrel32	LASF95
	.byte	0x25
	.word	0x2b1
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE11eq_int_typeERKjS2_\0"
	.long	0x15b97
	.long	0xca48
	.uleb128 0x2
	.long	0x167d3
	.uleb128 0x2
	.long	0x167d3
	.byte	0
	.uleb128 0x93
	.ascii "eof\0"
	.byte	0x25
	.word	0x2b5
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE3eofEv\0"
	.long	0xc9af
	.uleb128 0x16
	.ascii "not_eof\0"
	.byte	0x25
	.word	0x2b9
	.byte	0x7
	.ascii "_ZNSt11char_traitsIDiE7not_eofERKj\0"
	.long	0xc9af
	.long	0xcab1
	.uleb128 0x2
	.long	0x167d3
	.byte	0
	.uleb128 0x1d
	.secrel32	LASF82
	.long	0x167b0
	.byte	0
	.uleb128 0x94
	.ascii "__exception_ptr\0"
	.byte	0x28
	.byte	0x34
	.byte	0xd
	.long	0xcf51
	.uleb128 0xae
	.secrel32	LASF96
	.byte	0x4
	.byte	0x28
	.byte	0x4f
	.byte	0xb
	.long	0xcf43
	.uleb128 0x11
	.ascii "_M_exception_object\0"
	.byte	0x28
	.byte	0x51
	.byte	0xd
	.long	0x7aa
	.byte	0
	.uleb128 0xaf
	.secrel32	LASF96
	.byte	0x28
	.byte	0x53
	.byte	0x10
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4EPv\0"
	.long	0xcb3b
	.long	0xcb46
	.uleb128 0x5
	.long	0x167d9
	.uleb128 0x2
	.long	0x7aa
	.byte	0
	.uleb128 0x7a
	.ascii "_M_addref\0"
	.byte	0x28
	.byte	0x55
	.byte	0xc
	.ascii "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv\0"
	.long	0xcb8e
	.long	0xcb94
	.uleb128 0x5
	.long	0x167d9
	.byte	0
	.uleb128 0x7a
	.ascii "_M_release\0"
	.byte	0x28
	.byte	0x56
	.byte	0xc
	.ascii "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv\0"
	.long	0xcbdf
	.long	0xcbe5
	.uleb128 0x5
	.long	0x167d9
	.byte	0
	.uleb128 0x7b
	.ascii "_M_get\0"
	.byte	0x28
	.byte	0x58
	.byte	0xd
	.ascii "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv\0"
	.long	0x7aa
	.long	0xcc2c
	.long	0xcc32
	.uleb128 0x5
	.long	0x167df
	.byte	0
	.uleb128 0x36
	.secrel32	LASF96
	.byte	0x28
	.byte	0x60
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4Ev\0"
	.byte	0x1
	.long	0xcc6d
	.long	0xcc73
	.uleb128 0x5
	.long	0x167d9
	.byte	0
	.uleb128 0x36
	.secrel32	LASF96
	.byte	0x28
	.byte	0x62
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4ERKS0_\0"
	.byte	0x1
	.long	0xccb2
	.long	0xccbd
	.uleb128 0x5
	.long	0x167d9
	.uleb128 0x2
	.long	0x167e5
	.byte	0
	.uleb128 0x36
	.secrel32	LASF96
	.byte	0x28
	.byte	0x65
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4EDn\0"
	.byte	0x1
	.long	0xccf9
	.long	0xcd04
	.uleb128 0x5
	.long	0x167d9
	.uleb128 0x2
	.long	0xcfb6
	.byte	0
	.uleb128 0x36
	.secrel32	LASF96
	.byte	0x28
	.byte	0x69
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrC4EOS0_\0"
	.byte	0x1
	.long	0xcd42
	.long	0xcd4d
	.uleb128 0x5
	.long	0x167d9
	.uleb128 0x2
	.long	0x167eb
	.byte	0
	.uleb128 0x41
	.secrel32	LASF42
	.byte	0x28
	.byte	0x76
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptraSERKS0_\0"
	.long	0x167f1
	.byte	0x1
	.long	0xcd90
	.long	0xcd9b
	.uleb128 0x5
	.long	0x167d9
	.uleb128 0x2
	.long	0x167e5
	.byte	0
	.uleb128 0x41
	.secrel32	LASF42
	.byte	0x28
	.byte	0x7a
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptraSEOS0_\0"
	.long	0x167f1
	.byte	0x1
	.long	0xcddd
	.long	0xcde8
	.uleb128 0x5
	.long	0x167d9
	.uleb128 0x2
	.long	0x167eb
	.byte	0
	.uleb128 0x95
	.ascii "~exception_ptr\0"
	.byte	0x28
	.byte	0x81
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptrD4Ev\0"
	.byte	0x1
	.long	0xce2f
	.long	0xce3a
	.uleb128 0x5
	.long	0x167d9
	.uleb128 0x5
	.long	0xf4
	.byte	0
	.uleb128 0x95
	.ascii "swap\0"
	.byte	0x28
	.byte	0x84
	.byte	0x7
	.ascii "_ZNSt15__exception_ptr13exception_ptr4swapERS0_\0"
	.byte	0x1
	.long	0xce7d
	.long	0xce88
	.uleb128 0x5
	.long	0x167d9
	.uleb128 0x2
	.long	0x167f1
	.byte	0
	.uleb128 0xb0
	.ascii "operator bool\0"
	.byte	0x28
	.byte	0x90
	.byte	0x10
	.ascii "_ZNKSt15__exception_ptr13exception_ptrcvbEv\0"
	.long	0x15b97
	.byte	0x1
	.long	0xced4
	.long	0xceda
	.uleb128 0x5
	.long	0x167df
	.byte	0
	.uleb128 0xb1
	.ascii "__cxa_exception_type\0"
	.byte	0x28
	.byte	0x99
	.byte	0x7
	.ascii "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv\0"
	.long	0x167f7
	.byte	0x1
	.long	0xcf3c
	.uleb128 0x5
	.long	0x167df
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0xcad4
	.uleb128 0x6
	.byte	0x28
	.byte	0x49
	.byte	0x10
	.long	0xcf59
	.byte	0
	.uleb128 0x6
	.byte	0x28
	.byte	0x39
	.byte	0x1a
	.long	0xcad4
	.uleb128 0xb2
	.ascii "rethrow_exception\0"
	.byte	0x28
	.byte	0x45
	.byte	0x8
	.ascii "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE\0"
	.long	0xcfb6
	.uleb128 0x2
	.long	0xcad4
	.byte	0
	.uleb128 0x15
	.ascii "nullptr_t\0"
	.byte	0x26
	.byte	0xf2
	.byte	0x1d
	.long	0x1657f
	.uleb128 0x66
	.ascii "type_info\0"
	.uleb128 0x14
	.long	0xcfc8
	.uleb128 0x65
	.secrel32	LASF97
	.byte	0x1
	.byte	0x29
	.byte	0x56
	.byte	0xa
	.long	0xd00e
	.uleb128 0x91
	.secrel32	LASF97
	.byte	0x29
	.byte	0x59
	.byte	0xe
	.ascii "_ZNSt9nothrow_tC4Ev\0"
	.byte	0x1
	.long	0xd007
	.uleb128 0x5
	.long	0x167fd
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0xcfd8
	.uleb128 0xb3
	.ascii "nothrow\0"
	.byte	0x29
	.byte	0x5d
	.byte	0x1a
	.ascii "_ZSt7nothrow\0"
	.long	0xd00e
	.uleb128 0x15
	.ascii "ptrdiff_t\0"
	.byte	0x26
	.byte	0xef
	.byte	0x1c
	.long	0xf4
	.uleb128 0x53
	.ascii "allocator<char>\0"
	.byte	0x1
	.byte	0x2a
	.byte	0x6c
	.byte	0xb
	.long	0xd0db
	.uleb128 0x96
	.long	0xfa7d
	.byte	0
	.byte	0x1
	.uleb128 0x36
	.secrel32	LASF98
	.byte	0x2a
	.byte	0x83
	.byte	0x7
	.ascii "_ZNSaIcEC4Ev\0"
	.byte	0x1
	.long	0xd082
	.long	0xd088
	.uleb128 0x5
	.long	0x16826
	.byte	0
	.uleb128 0x36
	.secrel32	LASF98
	.byte	0x2a
	.byte	0x85
	.byte	0x7
	.ascii "_ZNSaIcEC4ERKS_\0"
	.byte	0x1
	.long	0xd0a9
	.long	0xd0b4
	.uleb128 0x5
	.long	0x16826
	.uleb128 0x2
	.long	0x16831
	.byte	0
	.uleb128 0x97
	.secrel32	LASF99
	.byte	0x2a
	.byte	0x8b
	.byte	0x7
	.ascii "_ZNSaIcED4Ev\0"
	.byte	0x1
	.long	0xd0cf
	.uleb128 0x5
	.long	0x16826
	.uleb128 0x5
	.long	0xf4
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0xd043
	.uleb128 0x6
	.byte	0x2b
	.byte	0x35
	.byte	0xb
	.long	0x4cd
	.uleb128 0x6
	.byte	0x2b
	.byte	0x36
	.byte	0xb
	.long	0x1684b
	.uleb128 0x6
	.byte	0x2b
	.byte	0x37
	.byte	0xb
	.long	0x1686c
	.uleb128 0x6
	.byte	0x2c
	.byte	0x62
	.byte	0xb
	.long	0x15c6b
	.uleb128 0x6
	.byte	0x2c
	.byte	0x63
	.byte	0xb
	.long	0x16837
	.uleb128 0x6
	.byte	0x2c
	.byte	0x65
	.byte	0xb
	.long	0x168cc
	.uleb128 0x6
	.byte	0x2c
	.byte	0x66
	.byte	0xb
	.long	0x168e4
	.uleb128 0x6
	.byte	0x2c
	.byte	0x67
	.byte	0xb
	.long	0x168fe
	.uleb128 0x6
	.byte	0x2c
	.byte	0x68
	.byte	0xb
	.long	0x16916
	.uleb128 0x6
	.byte	0x2c
	.byte	0x69
	.byte	0xb
	.long	0x16930
	.uleb128 0x6
	.byte	0x2c
	.byte	0x6a
	.byte	0xb
	.long	0x1694a
	.uleb128 0x6
	.byte	0x2c
	.byte	0x6b
	.byte	0xb
	.long	0x16963
	.uleb128 0x6
	.byte	0x2c
	.byte	0x6c
	.byte	0xb
	.long	0x16989
	.uleb128 0x6
	.byte	0x2c
	.byte	0x6d
	.byte	0xb
	.long	0x169ac
	.uleb128 0x6
	.byte	0x2c
	.byte	0x6e
	.byte	0xb
	.long	0x169ca
	.uleb128 0x6
	.byte	0x2c
	.byte	0x71
	.byte	0xb
	.long	0x169eb
	.uleb128 0x6
	.byte	0x2c
	.byte	0x72
	.byte	0xb
	.long	0x16a13
	.uleb128 0x6
	.byte	0x2c
	.byte	0x73
	.byte	0xb
	.long	0x16a38
	.uleb128 0x6
	.byte	0x2c
	.byte	0x74
	.byte	0xb
	.long	0x16a58
	.uleb128 0x6
	.byte	0x2c
	.byte	0x75
	.byte	0xb
	.long	0x16a7b
	.uleb128 0x6
	.byte	0x2c
	.byte	0x76
	.byte	0xb
	.long	0x16aa1
	.uleb128 0x6
	.byte	0x2c
	.byte	0x78
	.byte	0xb
	.long	0x16aba
	.uleb128 0x6
	.byte	0x2c
	.byte	0x79
	.byte	0xb
	.long	0x16ad2
	.uleb128 0x6
	.byte	0x2c
	.byte	0x7e
	.byte	0xb
	.long	0x16ae3
	.uleb128 0x6
	.byte	0x2c
	.byte	0x7f
	.byte	0xb
	.long	0x16af9
	.uleb128 0x6
	.byte	0x2c
	.byte	0x83
	.byte	0xb
	.long	0x16b14
	.uleb128 0x6
	.byte	0x2c
	.byte	0x84
	.byte	0xb
	.long	0x16b2e
	.uleb128 0x6
	.byte	0x2c
	.byte	0x85
	.byte	0xb
	.long	0x16b4d
	.uleb128 0x6
	.byte	0x2c
	.byte	0x86
	.byte	0xb
	.long	0x16b63
	.uleb128 0x6
	.byte	0x2c
	.byte	0x87
	.byte	0xb
	.long	0x16b7d
	.uleb128 0x6
	.byte	0x2c
	.byte	0x88
	.byte	0xb
	.long	0x16b98
	.uleb128 0x6
	.byte	0x2c
	.byte	0x89
	.byte	0xb
	.long	0x16bc2
	.uleb128 0x6
	.byte	0x2c
	.byte	0x8a
	.byte	0xb
	.long	0x16be3
	.uleb128 0x6
	.byte	0x2c
	.byte	0x8b
	.byte	0xb
	.long	0x16c03
	.uleb128 0x6
	.byte	0x2c
	.byte	0x8d
	.byte	0xb
	.long	0x16c14
	.uleb128 0x6
	.byte	0x2c
	.byte	0x8f
	.byte	0xb
	.long	0x16c2e
	.uleb128 0x6
	.byte	0x2c
	.byte	0x90
	.byte	0xb
	.long	0x16c4d
	.uleb128 0x6
	.byte	0x2c
	.byte	0x91
	.byte	0xb
	.long	0x16c73
	.uleb128 0x6
	.byte	0x2c
	.byte	0x92
	.byte	0xb
	.long	0x16c93
	.uleb128 0x6
	.byte	0x2c
	.byte	0xb9
	.byte	0x16
	.long	0x16cb9
	.uleb128 0x6
	.byte	0x2c
	.byte	0xba
	.byte	0x16
	.long	0x16ce0
	.uleb128 0x6
	.byte	0x2c
	.byte	0xbb
	.byte	0x16
	.long	0x16d05
	.uleb128 0x6
	.byte	0x2c
	.byte	0xbc
	.byte	0x16
	.long	0x16d24
	.uleb128 0x6
	.byte	0x2c
	.byte	0xbd
	.byte	0x16
	.long	0x16d99
	.uleb128 0x39
	.ascii "allocator_traits<std::allocator<char> >\0"
	.byte	0x1
	.byte	0x2d
	.word	0x180
	.byte	0xc
	.long	0xd470
	.uleb128 0x2a
	.secrel32	LASF9
	.byte	0x2d
	.word	0x188
	.byte	0x1b
	.long	0x461
	.uleb128 0x17
	.secrel32	LASF100
	.byte	0x2d
	.word	0x1b3
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIcEE8allocateERS0_j\0"
	.long	0xd272
	.long	0xd2c9
	.uleb128 0x2
	.long	0x16dbe
	.uleb128 0x2
	.long	0xd2db
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF25
	.byte	0x2d
	.word	0x183
	.byte	0x2c
	.long	0xd043
	.uleb128 0x14
	.long	0xd2c9
	.uleb128 0x2a
	.secrel32	LASF10
	.byte	0x2d
	.word	0x197
	.byte	0x24
	.long	0xc5f8
	.uleb128 0x17
	.secrel32	LASF100
	.byte	0x2d
	.word	0x1c1
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIcEE8allocateERS0_jPKv\0"
	.long	0xd272
	.long	0xd33a
	.uleb128 0x2
	.long	0x16dbe
	.uleb128 0x2
	.long	0xd2db
	.uleb128 0x2
	.long	0xd33a
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF101
	.byte	0x2d
	.word	0x191
	.byte	0x2d
	.long	0x7e3
	.uleb128 0x3f
	.secrel32	LASF102
	.byte	0x2d
	.word	0x1cd
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcj\0"
	.long	0xd397
	.uleb128 0x2
	.long	0x16dbe
	.uleb128 0x2
	.long	0xd272
	.uleb128 0x2
	.long	0xd2db
	.byte	0
	.uleb128 0x17
	.secrel32	LASF49
	.byte	0x2d
	.word	0x1ef
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_\0"
	.long	0xd2db
	.long	0xd3dc
	.uleb128 0x2
	.long	0x16dc4
	.byte	0
	.uleb128 0x17
	.secrel32	LASF103
	.byte	0x2d
	.word	0x1f8
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_\0"
	.long	0xd2c9
	.long	0xd43f
	.uleb128 0x2
	.long	0x16dc4
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF88
	.byte	0x2d
	.word	0x185
	.byte	0x1d
	.long	0xb8
	.uleb128 0x2a
	.secrel32	LASF16
	.byte	0x2d
	.word	0x18b
	.byte	0x27
	.long	0x12a7d
	.uleb128 0x2a
	.secrel32	LASF104
	.byte	0x2d
	.word	0x1a6
	.byte	0x25
	.long	0xd043
	.uleb128 0x1d
	.secrel32	LASF84
	.long	0xd043
	.byte	0
	.uleb128 0x53
	.ascii "initializer_list<char>\0"
	.byte	0x8
	.byte	0x2e
	.byte	0x2f
	.byte	0xb
	.long	0xd610
	.uleb128 0x25
	.secrel32	LASF34
	.byte	0x2e
	.byte	0x36
	.byte	0x1a
	.long	0x12a7d
	.byte	0x1
	.uleb128 0x2b
	.secrel32	LASF105
	.byte	0x2e
	.byte	0x3a
	.byte	0x12
	.long	0xd490
	.byte	0
	.uleb128 0x25
	.secrel32	LASF10
	.byte	0x2e
	.byte	0x35
	.byte	0x18
	.long	0xc5f8
	.byte	0x1
	.uleb128 0x11
	.ascii "_M_len\0"
	.byte	0x2e
	.byte	0x3b
	.byte	0x13
	.long	0xd4aa
	.byte	0x4
	.uleb128 0x31
	.secrel32	LASF106
	.byte	0x2e
	.byte	0x3e
	.byte	0x11
	.ascii "_ZNSt16initializer_listIcEC4EPKcj\0"
	.long	0xd4f9
	.long	0xd509
	.uleb128 0x5
	.long	0x16e32
	.uleb128 0x2
	.long	0xd509
	.uleb128 0x2
	.long	0xd4aa
	.byte	0
	.uleb128 0x25
	.secrel32	LASF35
	.byte	0x2e
	.byte	0x37
	.byte	0x1a
	.long	0x12a7d
	.byte	0x1
	.uleb128 0x36
	.secrel32	LASF106
	.byte	0x2e
	.byte	0x42
	.byte	0x11
	.ascii "_ZNSt16initializer_listIcEC4Ev\0"
	.byte	0x1
	.long	0xd546
	.long	0xd54c
	.uleb128 0x5
	.long	0x16e32
	.byte	0
	.uleb128 0x41
	.secrel32	LASF47
	.byte	0x2e
	.byte	0x47
	.byte	0x7
	.ascii "_ZNKSt16initializer_listIcE4sizeEv\0"
	.long	0xd4aa
	.byte	0x1
	.long	0xd584
	.long	0xd58a
	.uleb128 0x5
	.long	0x16e38
	.byte	0
	.uleb128 0x41
	.secrel32	LASF43
	.byte	0x2e
	.byte	0x4b
	.byte	0x7
	.ascii "_ZNKSt16initializer_listIcE5beginEv\0"
	.long	0xd509
	.byte	0x1
	.long	0xd5c3
	.long	0xd5c9
	.uleb128 0x5
	.long	0x16e38
	.byte	0
	.uleb128 0x98
	.ascii "end\0"
	.byte	0x2e
	.byte	0x4f
	.byte	0x7
	.ascii "_ZNKSt16initializer_listIcE3endEv\0"
	.long	0xd509
	.byte	0x1
	.long	0xd601
	.long	0xd607
	.uleb128 0x5
	.long	0x16e38
	.byte	0
	.uleb128 0x32
	.ascii "_E\0"
	.long	0xb8
	.byte	0
	.uleb128 0x14
	.long	0xd470
	.uleb128 0x66
	.ascii "reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >\0"
	.uleb128 0x66
	.ascii "reverse_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >\0"
	.uleb128 0x53
	.ascii "allocator<char32_t>\0"
	.byte	0x1
	.byte	0x2a
	.byte	0x6c
	.byte	0xb
	.long	0xd7ce
	.uleb128 0x96
	.long	0x11127
	.byte	0
	.byte	0x1
	.uleb128 0x36
	.secrel32	LASF98
	.byte	0x2a
	.byte	0x83
	.byte	0x7
	.ascii "_ZNSaIDiEC4Ev\0"
	.byte	0x1
	.long	0xd773
	.long	0xd779
	.uleb128 0x5
	.long	0x16e72
	.byte	0
	.uleb128 0x36
	.secrel32	LASF98
	.byte	0x2a
	.byte	0x85
	.byte	0x7
	.ascii "_ZNSaIDiEC4ERKS_\0"
	.byte	0x1
	.long	0xd79b
	.long	0xd7a6
	.uleb128 0x5
	.long	0x16e72
	.uleb128 0x2
	.long	0x16e78
	.byte	0
	.uleb128 0x97
	.secrel32	LASF99
	.byte	0x2a
	.byte	0x8b
	.byte	0x7
	.ascii "_ZNSaIDiED4Ev\0"
	.byte	0x1
	.long	0xd7c2
	.uleb128 0x5
	.long	0x16e72
	.uleb128 0x5
	.long	0xf4
	.byte	0
	.byte	0
	.uleb128 0x14
	.long	0xd72f
	.uleb128 0x39
	.ascii "allocator_traits<std::allocator<char32_t> >\0"
	.byte	0x1
	.byte	0x2d
	.word	0x180
	.byte	0xc
	.long	0xda0d
	.uleb128 0x2a
	.secrel32	LASF9
	.byte	0x2d
	.word	0x188
	.byte	0x1b
	.long	0x16e4a
	.uleb128 0x17
	.secrel32	LASF100
	.byte	0x2d
	.word	0x1b3
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIDiEE8allocateERS0_j\0"
	.long	0xd809
	.long	0xd861
	.uleb128 0x2
	.long	0x16e7e
	.uleb128 0x2
	.long	0xd873
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF25
	.byte	0x2d
	.word	0x183
	.byte	0x2c
	.long	0xd72f
	.uleb128 0x14
	.long	0xd861
	.uleb128 0x2a
	.secrel32	LASF10
	.byte	0x2d
	.word	0x197
	.byte	0x24
	.long	0xc5f8
	.uleb128 0x17
	.secrel32	LASF100
	.byte	0x2d
	.word	0x1c1
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIDiEE8allocateERS0_jPKv\0"
	.long	0xd809
	.long	0xd8d3
	.uleb128 0x2
	.long	0x16e7e
	.uleb128 0x2
	.long	0xd873
	.uleb128 0x2
	.long	0xd8d3
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF101
	.byte	0x2d
	.word	0x191
	.byte	0x2d
	.long	0x7e3
	.uleb128 0x3f
	.secrel32	LASF102
	.byte	0x2d
	.word	0x1cd
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIDiEE10deallocateERS0_PDij\0"
	.long	0xd932
	.uleb128 0x2
	.long	0x16e7e
	.uleb128 0x2
	.long	0xd809
	.uleb128 0x2
	.long	0xd873
	.byte	0
	.uleb128 0x17
	.secrel32	LASF49
	.byte	0x2d
	.word	0x1ef
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIDiEE8max_sizeERKS0_\0"
	.long	0xd873
	.long	0xd978
	.uleb128 0x2
	.long	0x16e84
	.byte	0
	.uleb128 0x17
	.secrel32	LASF103
	.byte	0x2d
	.word	0x1f8
	.byte	0x7
	.ascii "_ZNSt16allocator_traitsISaIDiEE37select_on_container_copy_constructionERKS0_\0"
	.long	0xd861
	.long	0xd9dc
	.uleb128 0x2
	.long	0x16e84
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF88
	.byte	0x2d
	.word	0x185
	.byte	0x1d
	.long	0x167b0
	.uleb128 0x2a
	.secrel32	LASF16
	.byte	0x2d
	.word	0x18b
	.byte	0x27
	.long	0x16e61
	.uleb128 0x2a
	.secrel32	LASF104
	.byte	0x2d
	.word	0x1a6
	.byte	0x25
	.long	0xd72f
	.uleb128 0x1d
	.secrel32	LASF84
	.long	0xd72f
	.byte	0
	.uleb128 0x53
	.ascii "initializer_list<char32_t>\0"
	.byte	0x8
	.byte	0x2e
	.byte	0x2f
	.byte	0xb
	.long	0xdbb7
	.uleb128 0x25
	.secrel32	LASF34
	.byte	0x2e
	.byte	0x36
	.byte	0x1a
	.long	0x16e61
	.byte	0x1
	.uleb128 0x2b
	.secrel32	LASF105
	.byte	0x2e
	.byte	0x3a
	.byte	0x12
	.long	0xda31
	.byte	0
	.uleb128 0x25
	.secrel32	LASF10
	.byte	0x2e
	.byte	0x35
	.byte	0x18
	.long	0xc5f8
	.byte	0x1
	.uleb128 0x11
	.ascii "_M_len\0"
	.byte	0x2e
	.byte	0x3b
	.byte	0x13
	.long	0xda4b
	.byte	0x4
	.uleb128 0x31
	.secrel32	LASF106
	.byte	0x2e
	.byte	0x3e
	.byte	0x11
	.ascii "_ZNSt16initializer_listIDiEC4EPKDij\0"
	.long	0xda9c
	.long	0xdaac
	.uleb128 0x5
	.long	0x16ee8
	.uleb128 0x2
	.long	0xdaac
	.uleb128 0x2
	.long	0xda4b
	.byte	0
	.uleb128 0x25
	.secrel32	LASF35
	.byte	0x2e
	.byte	0x37
	.byte	0x1a
	.long	0x16e61
	.byte	0x1
	.uleb128 0x36
	.secrel32	LASF106
	.byte	0x2e
	.byte	0x42
	.byte	0x11
	.ascii "_ZNSt16initializer_listIDiEC4Ev\0"
	.byte	0x1
	.long	0xdaea
	.long	0xdaf0
	.uleb128 0x5
	.long	0x16ee8
	.byte	0
	.uleb128 0x41
	.secrel32	LASF47
	.byte	0x2e
	.byte	0x47
	.byte	0x7
	.ascii "_ZNKSt16initializer_listIDiE4sizeEv\0"
	.long	0xda4b
	.byte	0x1
	.long	0xdb29
	.long	0xdb2f
	.uleb128 0x5
	.long	0x16eee
	.byte	0
	.uleb128 0x41
	.secrel32	LASF43
	.byte	0x2e
	.byte	0x4b
	.byte	0x7
	.ascii "_ZNKSt16initializer_listIDiE5beginEv\0"
	.long	0xdaac
	.byte	0x1
	.long	0xdb69
	.long	0xdb6f
	.uleb128 0x5
	.long	0x16eee
	.byte	0
	.uleb128 0x98
	.ascii "end\0"
	.byte	0x2e
	.byte	0x4f
	.byte	0x7
	.ascii "_ZNKSt16initializer_listIDiE3endEv\0"
	.long	0xdaac
	.byte	0x1
	.long	0xdba8
	.long	0xdbae
	.uleb128 0x5
	.long	0x16eee
	.byte	0
	.uleb128 0x32
	.ascii "_E\0"
	.long	0x167b0
	.byte	0
	.uleb128 0x14
	.long	0xda0d
	.uleb128 0x66
	.ascii "reverse_iterator<__gnu_cxx::__normal_iterator<char32_t*, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > >\0"
	.uleb128 0x66
	.ascii "reverse_iterator<__gnu_cxx::__normal_iterator<char32_t const*, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > > >\0"
	.uleb128 0x87
	.ascii "literals\0"
	.byte	0x3
	.word	0x1a08
	.byte	0x14
	.long	0xdd29
	.uleb128 0x99
	.ascii "string_literals\0"
	.byte	0x3
	.word	0x1a0a
	.byte	0x14
	.uleb128 0x70
	.byte	0x3
	.word	0x1a0a
	.byte	0x14
	.long	0xdd09
	.byte	0
	.uleb128 0x70
	.byte	0x3
	.word	0x1a08
	.byte	0x14
	.long	0xdcf6
	.uleb128 0x40
	.byte	0x4
	.word	0x429
	.byte	0xb
	.long	0x16fce
	.uleb128 0x40
	.byte	0x4
	.word	0x42a
	.byte	0xb
	.long	0x16fbd
	.uleb128 0x28
	.ascii "acos\0"
	.byte	0x4
	.byte	0x5b
	.byte	0x3
	.ascii "_ZSt4acose\0"
	.long	0x12874
	.long	0xdd66
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x28
	.ascii "acos\0"
	.byte	0x4
	.byte	0x57
	.byte	0x3
	.ascii "_ZSt4acosf\0"
	.long	0x7d5
	.long	0xdd88
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x28
	.ascii "asin\0"
	.byte	0x4
	.byte	0x6e
	.byte	0x3
	.ascii "_ZSt4asine\0"
	.long	0x12874
	.long	0xddaa
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x28
	.ascii "asin\0"
	.byte	0x4
	.byte	0x6a
	.byte	0x3
	.ascii "_ZSt4asinf\0"
	.long	0x7d5
	.long	0xddcc
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x28
	.ascii "atan\0"
	.byte	0x4
	.byte	0x81
	.byte	0x3
	.ascii "_ZSt4atane\0"
	.long	0x12874
	.long	0xddee
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x28
	.ascii "atan\0"
	.byte	0x4
	.byte	0x7d
	.byte	0x3
	.ascii "_ZSt4atanf\0"
	.long	0x7d5
	.long	0xde10
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x28
	.ascii "atan2\0"
	.byte	0x4
	.byte	0x94
	.byte	0x3
	.ascii "_ZSt5atan2ee\0"
	.long	0x12874
	.long	0xde3a
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x28
	.ascii "atan2\0"
	.byte	0x4
	.byte	0x90
	.byte	0x3
	.ascii "_ZSt5atan2ff\0"
	.long	0x7d5
	.long	0xde64
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x28
	.ascii "cos\0"
	.byte	0x4
	.byte	0xbc
	.byte	0x3
	.ascii "_ZSt3cose\0"
	.long	0x12874
	.long	0xde84
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x28
	.ascii "cos\0"
	.byte	0x4
	.byte	0xb8
	.byte	0x3
	.ascii "_ZSt3cosf\0"
	.long	0x7d5
	.long	0xdea4
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "sin\0"
	.byte	0x4
	.word	0x1ad
	.byte	0x3
	.ascii "_ZSt3sine\0"
	.long	0x12874
	.long	0xdec5
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "sin\0"
	.byte	0x4
	.word	0x1a9
	.byte	0x3
	.ascii "_ZSt3sinf\0"
	.long	0x7d5
	.long	0xdee6
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "tan\0"
	.byte	0x4
	.word	0x1e6
	.byte	0x3
	.ascii "_ZSt3tane\0"
	.long	0x12874
	.long	0xdf07
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "tan\0"
	.byte	0x4
	.word	0x1e2
	.byte	0x3
	.ascii "_ZSt3tanf\0"
	.long	0x7d5
	.long	0xdf28
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x28
	.ascii "cosh\0"
	.byte	0x4
	.byte	0xcf
	.byte	0x3
	.ascii "_ZSt4coshe\0"
	.long	0x12874
	.long	0xdf4a
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x28
	.ascii "cosh\0"
	.byte	0x4
	.byte	0xcb
	.byte	0x3
	.ascii "_ZSt4coshf\0"
	.long	0x7d5
	.long	0xdf6c
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "sinh\0"
	.byte	0x4
	.word	0x1c0
	.byte	0x3
	.ascii "_ZSt4sinhe\0"
	.long	0x12874
	.long	0xdf8f
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "sinh\0"
	.byte	0x4
	.word	0x1bc
	.byte	0x3
	.ascii "_ZSt4sinhf\0"
	.long	0x7d5
	.long	0xdfb2
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "tanh\0"
	.byte	0x4
	.word	0x1f9
	.byte	0x3
	.ascii "_ZSt4tanhe\0"
	.long	0x12874
	.long	0xdfd5
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "tanh\0"
	.byte	0x4
	.word	0x1f5
	.byte	0x3
	.ascii "_ZSt4tanhf\0"
	.long	0x7d5
	.long	0xdff8
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x28
	.ascii "exp\0"
	.byte	0x4
	.byte	0xe2
	.byte	0x3
	.ascii "_ZSt3expe\0"
	.long	0x12874
	.long	0xe018
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x28
	.ascii "exp\0"
	.byte	0x4
	.byte	0xde
	.byte	0x3
	.ascii "_ZSt3expf\0"
	.long	0x7d5
	.long	0xe038
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "frexp\0"
	.byte	0x4
	.word	0x130
	.byte	0x3
	.ascii "_ZSt5frexpePi\0"
	.long	0x12874
	.long	0xe064
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x482
	.byte	0
	.uleb128 0x16
	.ascii "frexp\0"
	.byte	0x4
	.word	0x12c
	.byte	0x3
	.ascii "_ZSt5frexpfPi\0"
	.long	0x7d5
	.long	0xe090
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x482
	.byte	0
	.uleb128 0x16
	.ascii "ldexp\0"
	.byte	0x4
	.word	0x143
	.byte	0x3
	.ascii "_ZSt5ldexpei\0"
	.long	0x12874
	.long	0xe0bb
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x16
	.ascii "ldexp\0"
	.byte	0x4
	.word	0x13f
	.byte	0x3
	.ascii "_ZSt5ldexpfi\0"
	.long	0x7d5
	.long	0xe0e6
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x16
	.ascii "log\0"
	.byte	0x4
	.word	0x156
	.byte	0x3
	.ascii "_ZSt3loge\0"
	.long	0x12874
	.long	0xe107
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "log\0"
	.byte	0x4
	.word	0x152
	.byte	0x3
	.ascii "_ZSt3logf\0"
	.long	0x7d5
	.long	0xe128
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "log10\0"
	.byte	0x4
	.word	0x169
	.byte	0x3
	.ascii "_ZSt5log10e\0"
	.long	0x12874
	.long	0xe14d
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "log10\0"
	.byte	0x4
	.word	0x165
	.byte	0x3
	.ascii "_ZSt5log10f\0"
	.long	0x7d5
	.long	0xe172
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "modf\0"
	.byte	0x4
	.word	0x17c
	.byte	0x3
	.ascii "_ZSt4modfePe\0"
	.long	0x12874
	.long	0xe19c
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x16f97
	.byte	0
	.uleb128 0x16
	.ascii "modf\0"
	.byte	0x4
	.word	0x178
	.byte	0x3
	.ascii "_ZSt4modffPf\0"
	.long	0x7d5
	.long	0xe1c6
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x16fa3
	.byte	0
	.uleb128 0x16
	.ascii "pow\0"
	.byte	0x4
	.word	0x188
	.byte	0x3
	.ascii "_ZSt3powee\0"
	.long	0x12874
	.long	0xe1ed
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "pow\0"
	.byte	0x4
	.word	0x184
	.byte	0x3
	.ascii "_ZSt3powff\0"
	.long	0x7d5
	.long	0xe214
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "sqrt\0"
	.byte	0x4
	.word	0x1d3
	.byte	0x3
	.ascii "_ZSt4sqrte\0"
	.long	0x12874
	.long	0xe237
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "sqrt\0"
	.byte	0x4
	.word	0x1cf
	.byte	0x3
	.ascii "_ZSt4sqrtf\0"
	.long	0x7d5
	.long	0xe25a
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x28
	.ascii "ceil\0"
	.byte	0x4
	.byte	0xa9
	.byte	0x3
	.ascii "_ZSt4ceile\0"
	.long	0x12874
	.long	0xe27c
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x28
	.ascii "ceil\0"
	.byte	0x4
	.byte	0xa5
	.byte	0x3
	.ascii "_ZSt4ceilf\0"
	.long	0x7d5
	.long	0xe29e
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x28
	.ascii "fabs\0"
	.byte	0x4
	.byte	0xf5
	.byte	0x3
	.ascii "_ZSt4fabse\0"
	.long	0x12874
	.long	0xe2c0
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x28
	.ascii "fabs\0"
	.byte	0x4
	.byte	0xf1
	.byte	0x3
	.ascii "_ZSt4fabsf\0"
	.long	0x7d5
	.long	0xe2e2
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "floor\0"
	.byte	0x4
	.word	0x108
	.byte	0x3
	.ascii "_ZSt5floore\0"
	.long	0x12874
	.long	0xe307
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "floor\0"
	.byte	0x4
	.word	0x104
	.byte	0x3
	.ascii "_ZSt5floorf\0"
	.long	0x7d5
	.long	0xe32c
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "fmod\0"
	.byte	0x4
	.word	0x11b
	.byte	0x3
	.ascii "_ZSt4fmodee\0"
	.long	0x12874
	.long	0xe355
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "fmod\0"
	.byte	0x4
	.word	0x117
	.byte	0x3
	.ascii "_ZSt4fmodff\0"
	.long	0x7d5
	.long	0xe37e
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF107
	.byte	0x4
	.word	0x223
	.byte	0x3
	.ascii "_ZSt10fpclassifye\0"
	.long	0xf4
	.long	0xe3a7
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF107
	.byte	0x4
	.word	0x21e
	.byte	0x3
	.ascii "_ZSt10fpclassifyd\0"
	.long	0xf4
	.long	0xe3d0
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x17
	.secrel32	LASF107
	.byte	0x4
	.word	0x219
	.byte	0x3
	.ascii "_ZSt10fpclassifyf\0"
	.long	0xf4
	.long	0xe3f9
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF108
	.byte	0x4
	.word	0x23a
	.byte	0x3
	.ascii "_ZSt8isfinitee\0"
	.long	0x15b97
	.long	0xe41f
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF108
	.byte	0x4
	.word	0x236
	.byte	0x3
	.ascii "_ZSt8isfinited\0"
	.long	0x15b97
	.long	0xe445
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x17
	.secrel32	LASF108
	.byte	0x4
	.word	0x232
	.byte	0x3
	.ascii "_ZSt8isfinitef\0"
	.long	0x15b97
	.long	0xe46b
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "isinf\0"
	.byte	0x4
	.word	0x255
	.byte	0x3
	.ascii "_ZSt5isinfe\0"
	.long	0x15b97
	.long	0xe490
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "isinf\0"
	.byte	0x4
	.word	0x250
	.byte	0x3
	.ascii "_ZSt5isinfd\0"
	.long	0x15b97
	.long	0xe4b5
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x16
	.ascii "isinf\0"
	.byte	0x4
	.word	0x248
	.byte	0x3
	.ascii "_ZSt5isinff\0"
	.long	0x15b97
	.long	0xe4da
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "isnan\0"
	.byte	0x4
	.word	0x270
	.byte	0x3
	.ascii "_ZSt5isnane\0"
	.long	0x15b97
	.long	0xe4ff
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "isnan\0"
	.byte	0x4
	.word	0x26b
	.byte	0x3
	.ascii "_ZSt5isnand\0"
	.long	0x15b97
	.long	0xe524
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x16
	.ascii "isnan\0"
	.byte	0x4
	.word	0x263
	.byte	0x3
	.ascii "_ZSt5isnanf\0"
	.long	0x15b97
	.long	0xe549
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF109
	.byte	0x4
	.word	0x286
	.byte	0x3
	.ascii "_ZSt8isnormale\0"
	.long	0x15b97
	.long	0xe56f
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF109
	.byte	0x4
	.word	0x282
	.byte	0x3
	.ascii "_ZSt8isnormald\0"
	.long	0x15b97
	.long	0xe595
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x17
	.secrel32	LASF109
	.byte	0x4
	.word	0x27e
	.byte	0x3
	.ascii "_ZSt8isnormalf\0"
	.long	0x15b97
	.long	0xe5bb
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF110
	.byte	0x4
	.word	0x29d
	.byte	0x3
	.ascii "_ZSt7signbite\0"
	.long	0x15b97
	.long	0xe5e0
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF110
	.byte	0x4
	.word	0x299
	.byte	0x3
	.ascii "_ZSt7signbitd\0"
	.long	0x15b97
	.long	0xe605
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x17
	.secrel32	LASF110
	.byte	0x4
	.word	0x295
	.byte	0x3
	.ascii "_ZSt7signbitf\0"
	.long	0x15b97
	.long	0xe62a
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF111
	.byte	0x4
	.word	0x2b3
	.byte	0x3
	.ascii "_ZSt9isgreateree\0"
	.long	0x15b97
	.long	0xe657
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF111
	.byte	0x4
	.word	0x2af
	.byte	0x3
	.ascii "_ZSt9isgreaterdd\0"
	.long	0x15b97
	.long	0xe684
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x17
	.secrel32	LASF111
	.byte	0x4
	.word	0x2ab
	.byte	0x3
	.ascii "_ZSt9isgreaterff\0"
	.long	0x15b97
	.long	0xe6b1
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF112
	.byte	0x4
	.word	0x2cd
	.byte	0x3
	.ascii "_ZSt14isgreaterequalee\0"
	.long	0x15b97
	.long	0xe6e4
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF112
	.byte	0x4
	.word	0x2c9
	.byte	0x3
	.ascii "_ZSt14isgreaterequaldd\0"
	.long	0x15b97
	.long	0xe717
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x17
	.secrel32	LASF112
	.byte	0x4
	.word	0x2c5
	.byte	0x3
	.ascii "_ZSt14isgreaterequalff\0"
	.long	0x15b97
	.long	0xe74a
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF113
	.byte	0x4
	.word	0x2e7
	.byte	0x3
	.ascii "_ZSt6islessee\0"
	.long	0x15b97
	.long	0xe774
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF113
	.byte	0x4
	.word	0x2e3
	.byte	0x3
	.ascii "_ZSt6islessdd\0"
	.long	0x15b97
	.long	0xe79e
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x17
	.secrel32	LASF113
	.byte	0x4
	.word	0x2df
	.byte	0x3
	.ascii "_ZSt6islessff\0"
	.long	0x15b97
	.long	0xe7c8
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF114
	.byte	0x4
	.word	0x301
	.byte	0x3
	.ascii "_ZSt11islessequalee\0"
	.long	0x15b97
	.long	0xe7f8
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF114
	.byte	0x4
	.word	0x2fd
	.byte	0x3
	.ascii "_ZSt11islessequaldd\0"
	.long	0x15b97
	.long	0xe828
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x17
	.secrel32	LASF114
	.byte	0x4
	.word	0x2f9
	.byte	0x3
	.ascii "_ZSt11islessequalff\0"
	.long	0x15b97
	.long	0xe858
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF115
	.byte	0x4
	.word	0x31b
	.byte	0x3
	.ascii "_ZSt13islessgreateree\0"
	.long	0x15b97
	.long	0xe88a
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF115
	.byte	0x4
	.word	0x317
	.byte	0x3
	.ascii "_ZSt13islessgreaterdd\0"
	.long	0x15b97
	.long	0xe8bc
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x17
	.secrel32	LASF115
	.byte	0x4
	.word	0x313
	.byte	0x3
	.ascii "_ZSt13islessgreaterff\0"
	.long	0x15b97
	.long	0xe8ee
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF116
	.byte	0x4
	.word	0x335
	.byte	0x3
	.ascii "_ZSt11isunorderedee\0"
	.long	0x15b97
	.long	0xe91e
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF116
	.byte	0x4
	.word	0x331
	.byte	0x3
	.ascii "_ZSt11isunordereddd\0"
	.long	0x15b97
	.long	0xe94e
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x17
	.secrel32	LASF116
	.byte	0x4
	.word	0x32d
	.byte	0x3
	.ascii "_ZSt11isunorderedff\0"
	.long	0x15b97
	.long	0xe97e
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "acosh\0"
	.byte	0x4
	.word	0x4c2
	.byte	0x3
	.ascii "_ZSt5acoshe\0"
	.long	0x12874
	.long	0xe9a3
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "acosh\0"
	.byte	0x4
	.word	0x4be
	.byte	0x3
	.ascii "_ZSt5acoshf\0"
	.long	0x7d5
	.long	0xe9c8
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "asinh\0"
	.byte	0x4
	.word	0x4d4
	.byte	0x3
	.ascii "_ZSt5asinhe\0"
	.long	0x12874
	.long	0xe9ed
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "asinh\0"
	.byte	0x4
	.word	0x4d0
	.byte	0x3
	.ascii "_ZSt5asinhf\0"
	.long	0x7d5
	.long	0xea12
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "atanh\0"
	.byte	0x4
	.word	0x4e6
	.byte	0x3
	.ascii "_ZSt5atanhe\0"
	.long	0x12874
	.long	0xea37
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "atanh\0"
	.byte	0x4
	.word	0x4e2
	.byte	0x3
	.ascii "_ZSt5atanhf\0"
	.long	0x7d5
	.long	0xea5c
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "cbrt\0"
	.byte	0x4
	.word	0x4f8
	.byte	0x3
	.ascii "_ZSt4cbrte\0"
	.long	0x12874
	.long	0xea7f
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "cbrt\0"
	.byte	0x4
	.word	0x4f4
	.byte	0x3
	.ascii "_ZSt4cbrtf\0"
	.long	0x7d5
	.long	0xeaa2
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF117
	.byte	0x4
	.word	0x50a
	.byte	0x3
	.ascii "_ZSt8copysignee\0"
	.long	0x12874
	.long	0xeace
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF117
	.byte	0x4
	.word	0x506
	.byte	0x3
	.ascii "_ZSt8copysignff\0"
	.long	0x7d5
	.long	0xeafa
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "erf\0"
	.byte	0x4
	.word	0x51e
	.byte	0x3
	.ascii "_ZSt3erfe\0"
	.long	0x12874
	.long	0xeb1b
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "erf\0"
	.byte	0x4
	.word	0x51a
	.byte	0x3
	.ascii "_ZSt3erff\0"
	.long	0x7d5
	.long	0xeb3c
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "erfc\0"
	.byte	0x4
	.word	0x530
	.byte	0x3
	.ascii "_ZSt4erfce\0"
	.long	0x12874
	.long	0xeb5f
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "erfc\0"
	.byte	0x4
	.word	0x52c
	.byte	0x3
	.ascii "_ZSt4erfcf\0"
	.long	0x7d5
	.long	0xeb82
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "exp2\0"
	.byte	0x4
	.word	0x542
	.byte	0x3
	.ascii "_ZSt4exp2e\0"
	.long	0x12874
	.long	0xeba5
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "exp2\0"
	.byte	0x4
	.word	0x53e
	.byte	0x3
	.ascii "_ZSt4exp2f\0"
	.long	0x7d5
	.long	0xebc8
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "expm1\0"
	.byte	0x4
	.word	0x554
	.byte	0x3
	.ascii "_ZSt5expm1e\0"
	.long	0x12874
	.long	0xebed
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "expm1\0"
	.byte	0x4
	.word	0x550
	.byte	0x3
	.ascii "_ZSt5expm1f\0"
	.long	0x7d5
	.long	0xec12
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "fdim\0"
	.byte	0x4
	.word	0x566
	.byte	0x3
	.ascii "_ZSt4fdimee\0"
	.long	0x12874
	.long	0xec3b
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "fdim\0"
	.byte	0x4
	.word	0x562
	.byte	0x3
	.ascii "_ZSt4fdimff\0"
	.long	0x7d5
	.long	0xec64
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "fma\0"
	.byte	0x4
	.word	0x57a
	.byte	0x3
	.ascii "_ZSt3fmaeee\0"
	.long	0x12874
	.long	0xec91
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "fma\0"
	.byte	0x4
	.word	0x576
	.byte	0x3
	.ascii "_ZSt3fmafff\0"
	.long	0x7d5
	.long	0xecbe
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "fmax\0"
	.byte	0x4
	.word	0x58e
	.byte	0x3
	.ascii "_ZSt4fmaxee\0"
	.long	0x12874
	.long	0xece7
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "fmax\0"
	.byte	0x4
	.word	0x58a
	.byte	0x3
	.ascii "_ZSt4fmaxff\0"
	.long	0x7d5
	.long	0xed10
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "fmin\0"
	.byte	0x4
	.word	0x5a2
	.byte	0x3
	.ascii "_ZSt4fminee\0"
	.long	0x12874
	.long	0xed39
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "fmin\0"
	.byte	0x4
	.word	0x59e
	.byte	0x3
	.ascii "_ZSt4fminff\0"
	.long	0x7d5
	.long	0xed62
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "hypot\0"
	.byte	0x4
	.word	0x5b6
	.byte	0x3
	.ascii "_ZSt5hypotee\0"
	.long	0x12874
	.long	0xed8d
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "hypot\0"
	.byte	0x4
	.word	0x5b2
	.byte	0x3
	.ascii "_ZSt5hypotff\0"
	.long	0x7d5
	.long	0xedb8
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "ilogb\0"
	.byte	0x4
	.word	0x5ca
	.byte	0x3
	.ascii "_ZSt5ilogbe\0"
	.long	0xf4
	.long	0xeddd
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "ilogb\0"
	.byte	0x4
	.word	0x5c6
	.byte	0x3
	.ascii "_ZSt5ilogbf\0"
	.long	0xf4
	.long	0xee02
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF118
	.byte	0x4
	.word	0x5dd
	.byte	0x3
	.ascii "_ZSt6lgammae\0"
	.long	0x12874
	.long	0xee26
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF118
	.byte	0x4
	.word	0x5d9
	.byte	0x3
	.ascii "_ZSt6lgammaf\0"
	.long	0x7d5
	.long	0xee4a
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF119
	.byte	0x4
	.word	0x5ef
	.byte	0x3
	.ascii "_ZSt6llrinte\0"
	.long	0x159
	.long	0xee6e
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF119
	.byte	0x4
	.word	0x5eb
	.byte	0x3
	.ascii "_ZSt6llrintf\0"
	.long	0x159
	.long	0xee92
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF120
	.byte	0x4
	.word	0x601
	.byte	0x3
	.ascii "_ZSt7llrounde\0"
	.long	0x159
	.long	0xeeb7
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF120
	.byte	0x4
	.word	0x5fd
	.byte	0x3
	.ascii "_ZSt7llroundf\0"
	.long	0x159
	.long	0xeedc
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "log1p\0"
	.byte	0x4
	.word	0x613
	.byte	0x3
	.ascii "_ZSt5log1pe\0"
	.long	0x12874
	.long	0xef01
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "log1p\0"
	.byte	0x4
	.word	0x60f
	.byte	0x3
	.ascii "_ZSt5log1pf\0"
	.long	0x7d5
	.long	0xef26
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "log2\0"
	.byte	0x4
	.word	0x626
	.byte	0x3
	.ascii "_ZSt4log2e\0"
	.long	0x12874
	.long	0xef49
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "log2\0"
	.byte	0x4
	.word	0x622
	.byte	0x3
	.ascii "_ZSt4log2f\0"
	.long	0x7d5
	.long	0xef6c
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "logb\0"
	.byte	0x4
	.word	0x638
	.byte	0x3
	.ascii "_ZSt4logbe\0"
	.long	0x12874
	.long	0xef8f
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "logb\0"
	.byte	0x4
	.word	0x634
	.byte	0x3
	.ascii "_ZSt4logbf\0"
	.long	0x7d5
	.long	0xefb2
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "lrint\0"
	.byte	0x4
	.word	0x64a
	.byte	0x3
	.ascii "_ZSt5lrinte\0"
	.long	0x14d
	.long	0xefd7
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "lrint\0"
	.byte	0x4
	.word	0x646
	.byte	0x3
	.ascii "_ZSt5lrintf\0"
	.long	0x14d
	.long	0xeffc
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF121
	.byte	0x4
	.word	0x65c
	.byte	0x3
	.ascii "_ZSt6lrounde\0"
	.long	0x14d
	.long	0xf020
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF121
	.byte	0x4
	.word	0x658
	.byte	0x3
	.ascii "_ZSt6lroundf\0"
	.long	0x14d
	.long	0xf044
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF122
	.byte	0x4
	.word	0x66e
	.byte	0x3
	.ascii "_ZSt9nearbyinte\0"
	.long	0x12874
	.long	0xf06b
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF122
	.byte	0x4
	.word	0x66a
	.byte	0x3
	.ascii "_ZSt9nearbyintf\0"
	.long	0x7d5
	.long	0xf092
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF123
	.byte	0x4
	.word	0x680
	.byte	0x3
	.ascii "_ZSt9nextafteree\0"
	.long	0x12874
	.long	0xf0bf
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF123
	.byte	0x4
	.word	0x67c
	.byte	0x3
	.ascii "_ZSt9nextafterff\0"
	.long	0x7d5
	.long	0xf0ec
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF124
	.byte	0x4
	.word	0x694
	.byte	0x3
	.ascii "_ZSt10nexttowardee\0"
	.long	0x12874
	.long	0xf11b
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF124
	.byte	0x4
	.word	0x690
	.byte	0x3
	.ascii "_ZSt10nexttowardfe\0"
	.long	0x7d5
	.long	0xf14a
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF125
	.byte	0x4
	.word	0x6a6
	.byte	0x3
	.ascii "_ZSt9remainderee\0"
	.long	0x12874
	.long	0xf177
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF125
	.byte	0x4
	.word	0x6a2
	.byte	0x3
	.ascii "_ZSt9remainderff\0"
	.long	0x7d5
	.long	0xf1a4
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF126
	.byte	0x4
	.word	0x6ba
	.byte	0x3
	.ascii "_ZSt6remquoeePi\0"
	.long	0x12874
	.long	0xf1d5
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x482
	.byte	0
	.uleb128 0x17
	.secrel32	LASF126
	.byte	0x4
	.word	0x6b6
	.byte	0x3
	.ascii "_ZSt6remquoffPi\0"
	.long	0x7d5
	.long	0xf206
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x482
	.byte	0
	.uleb128 0x16
	.ascii "rint\0"
	.byte	0x4
	.word	0x6ce
	.byte	0x3
	.ascii "_ZSt4rinte\0"
	.long	0x12874
	.long	0xf229
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "rint\0"
	.byte	0x4
	.word	0x6ca
	.byte	0x3
	.ascii "_ZSt4rintf\0"
	.long	0x7d5
	.long	0xf24c
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "round\0"
	.byte	0x4
	.word	0x6e0
	.byte	0x3
	.ascii "_ZSt5rounde\0"
	.long	0x12874
	.long	0xf271
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "round\0"
	.byte	0x4
	.word	0x6dc
	.byte	0x3
	.ascii "_ZSt5roundf\0"
	.long	0x7d5
	.long	0xf296
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x17
	.secrel32	LASF127
	.byte	0x4
	.word	0x6f2
	.byte	0x3
	.ascii "_ZSt7scalblnel\0"
	.long	0x12874
	.long	0xf2c1
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0x14d
	.byte	0
	.uleb128 0x17
	.secrel32	LASF127
	.byte	0x4
	.word	0x6ee
	.byte	0x3
	.ascii "_ZSt7scalblnfl\0"
	.long	0x7d5
	.long	0xf2ec
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0x14d
	.byte	0
	.uleb128 0x17
	.secrel32	LASF128
	.byte	0x4
	.word	0x704
	.byte	0x3
	.ascii "_ZSt6scalbnei\0"
	.long	0x12874
	.long	0xf316
	.uleb128 0x2
	.long	0x12874
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x17
	.secrel32	LASF128
	.byte	0x4
	.word	0x700
	.byte	0x3
	.ascii "_ZSt6scalbnfi\0"
	.long	0x7d5
	.long	0xf340
	.uleb128 0x2
	.long	0x7d5
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x17
	.secrel32	LASF129
	.byte	0x4
	.word	0x716
	.byte	0x3
	.ascii "_ZSt6tgammae\0"
	.long	0x12874
	.long	0xf364
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x17
	.secrel32	LASF129
	.byte	0x4
	.word	0x712
	.byte	0x3
	.ascii "_ZSt6tgammaf\0"
	.long	0x7d5
	.long	0xf388
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x16
	.ascii "trunc\0"
	.byte	0x4
	.word	0x728
	.byte	0x3
	.ascii "_ZSt5trunce\0"
	.long	0x12874
	.long	0xf3ad
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x16
	.ascii "trunc\0"
	.byte	0x4
	.word	0x724
	.byte	0x3
	.ascii "_ZSt5truncf\0"
	.long	0x7d5
	.long	0xf3d2
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x23
	.ascii "iterator_traits<char*>\0"
	.byte	0x1
	.byte	0xf
	.byte	0xb2
	.byte	0xc
	.long	0xf43a
	.uleb128 0x15
	.ascii "iterator_category\0"
	.byte	0xf
	.byte	0xb4
	.byte	0x2a
	.long	0xbfd2
	.uleb128 0x29
	.secrel32	LASF130
	.byte	0xf
	.byte	0xb6
	.byte	0x2b
	.long	0xd031
	.uleb128 0x29
	.secrel32	LASF9
	.byte	0xf
	.byte	0xb7
	.byte	0x2b
	.long	0x461
	.uleb128 0x29
	.secrel32	LASF55
	.byte	0xf
	.byte	0xb8
	.byte	0x2b
	.long	0x1681a
	.uleb128 0x1d
	.secrel32	LASF131
	.long	0x461
	.byte	0
	.uleb128 0x39
	.ascii "remove_reference<std::allocator<char>&>\0"
	.byte	0x1
	.byte	0x21
	.word	0x5bc
	.byte	0xc
	.long	0xf483
	.uleb128 0x2a
	.secrel32	LASF132
	.byte	0x21
	.word	0x5bd
	.byte	0x15
	.long	0xd043
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0x16dca
	.byte	0
	.uleb128 0x23
	.ascii "iterator_traits<char const*>\0"
	.byte	0x1
	.byte	0xf
	.byte	0xbd
	.byte	0xc
	.long	0xf4d7
	.uleb128 0x29
	.secrel32	LASF130
	.byte	0xf
	.byte	0xc1
	.byte	0x2b
	.long	0xd031
	.uleb128 0x29
	.secrel32	LASF9
	.byte	0xf
	.byte	0xc2
	.byte	0x2b
	.long	0x12a7d
	.uleb128 0x29
	.secrel32	LASF55
	.byte	0xf
	.byte	0xc3
	.byte	0x2b
	.long	0x16820
	.uleb128 0x1d
	.secrel32	LASF131
	.long	0x12a7d
	.byte	0
	.uleb128 0x39
	.ascii "remove_reference<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>\0"
	.byte	0x1
	.byte	0x21
	.word	0x5bc
	.byte	0xc
	.long	0xf55b
	.uleb128 0x2a
	.secrel32	LASF132
	.byte	0x21
	.word	0x5bd
	.byte	0x15
	.long	0x2839
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0x16e2c
	.byte	0
	.uleb128 0x23
	.ascii "iterator_traits<char32_t const*>\0"
	.byte	0x1
	.byte	0xf
	.byte	0xbd
	.byte	0xc
	.long	0xf5b3
	.uleb128 0x29
	.secrel32	LASF130
	.byte	0xf
	.byte	0xc1
	.byte	0x2b
	.long	0xd031
	.uleb128 0x29
	.secrel32	LASF9
	.byte	0xf
	.byte	0xc2
	.byte	0x2b
	.long	0x16e61
	.uleb128 0x29
	.secrel32	LASF55
	.byte	0xf
	.byte	0xc3
	.byte	0x2b
	.long	0x16e6c
	.uleb128 0x1d
	.secrel32	LASF131
	.long	0x16e61
	.byte	0
	.uleb128 0x23
	.ascii "iterator_traits<char32_t*>\0"
	.byte	0x1
	.byte	0xf
	.byte	0xb2
	.byte	0xc
	.long	0xf605
	.uleb128 0x29
	.secrel32	LASF130
	.byte	0xf
	.byte	0xb6
	.byte	0x2b
	.long	0xd031
	.uleb128 0x29
	.secrel32	LASF9
	.byte	0xf
	.byte	0xb7
	.byte	0x2b
	.long	0x16e4a
	.uleb128 0x29
	.secrel32	LASF55
	.byte	0xf
	.byte	0xb8
	.byte	0x2b
	.long	0x16e5b
	.uleb128 0x1d
	.secrel32	LASF131
	.long	0x16e4a
	.byte	0
	.uleb128 0x28
	.ascii "__distance<char*>\0"
	.byte	0xe
	.byte	0x62
	.byte	0x5
	.ascii "_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag\0"
	.long	0xf40c
	.long	0xf69f
	.uleb128 0x1d
	.secrel32	LASF133
	.long	0x461
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0xbfd2
	.byte	0
	.uleb128 0x28
	.ascii "__iterator_category<char*>\0"
	.byte	0xf
	.byte	0xcd
	.byte	0x5
	.ascii "_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_\0"
	.long	0xf3f2
	.long	0xf726
	.uleb128 0x32
	.ascii "_Iter\0"
	.long	0x461
	.uleb128 0x2
	.long	0x1b16f
	.byte	0
	.uleb128 0x28
	.ascii "distance<char*>\0"
	.byte	0xe
	.byte	0x8a
	.byte	0x5
	.ascii "_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_\0"
	.long	0xf40c
	.long	0xf798
	.uleb128 0x1d
	.secrel32	LASF81
	.long	0x461
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x461
	.byte	0
	.uleb128 0x28
	.ascii "move<std::__cxx11::basic_string<char>&>\0"
	.byte	0xb
	.byte	0x63
	.byte	0x5
	.ascii "_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_\0"
	.long	0x1b5ec
	.long	0xf840
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0x16e2c
	.uleb128 0x2
	.long	0x16e2c
	.byte	0
	.uleb128 0x28
	.ascii "move<std::allocator<char>&>\0"
	.byte	0xb
	.byte	0x63
	.byte	0x5
	.ascii "_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_\0"
	.long	0x1b7fe
	.long	0xf8ad
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0x16dca
	.uleb128 0x2
	.long	0x16dca
	.byte	0
	.uleb128 0x17
	.secrel32	LASF134
	.byte	0x3
	.word	0x1765
	.byte	0x5
	.ascii "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_\0"
	.long	0x2839
	.long	0xf932
	.uleb128 0x1d
	.secrel32	LASF82
	.long	0xb8
	.uleb128 0x1d
	.secrel32	LASF83
	.long	0xc244
	.uleb128 0x1d
	.secrel32	LASF84
	.long	0xd043
	.uleb128 0x2
	.long	0x16e26
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x8c
	.secrel32	LASF134
	.byte	0x3
	.word	0x1759
	.byte	0x5
	.ascii "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_\0"
	.long	0x2839
	.uleb128 0x1d
	.secrel32	LASF82
	.long	0xb8
	.uleb128 0x1d
	.secrel32	LASF83
	.long	0xc244
	.uleb128 0x1d
	.secrel32	LASF84
	.long	0xd043
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x16e26
	.byte	0
	.byte	0
	.uleb128 0xb4
	.ascii "__gnu_cxx\0"
	.byte	0x26
	.word	0x106
	.byte	0xb
	.long	0x127f4
	.uleb128 0x99
	.ascii "__cxx11\0"
	.byte	0x26
	.word	0x108
	.byte	0x41
	.uleb128 0x70
	.byte	0x26
	.word	0x108
	.byte	0x41
	.long	0xf9c9
	.uleb128 0x6
	.byte	0x1f
	.byte	0xc8
	.byte	0xb
	.long	0x12a28
	.uleb128 0x6
	.byte	0x1f
	.byte	0xd8
	.byte	0xb
	.long	0x12cca
	.uleb128 0x6
	.byte	0x1f
	.byte	0xe3
	.byte	0xb
	.long	0x12ce8
	.uleb128 0x6
	.byte	0x1f
	.byte	0xe4
	.byte	0xb
	.long	0x12d01
	.uleb128 0x6
	.byte	0x1f
	.byte	0xe5
	.byte	0xb
	.long	0x12d26
	.uleb128 0x6
	.byte	0x1f
	.byte	0xe7
	.byte	0xb
	.long	0x12d4c
	.uleb128 0x6
	.byte	0x1f
	.byte	0xe8
	.byte	0xb
	.long	0x12d6b
	.uleb128 0x28
	.ascii "div\0"
	.byte	0x1f
	.byte	0xd5
	.byte	0x3
	.ascii "_ZN9__gnu_cxx3divExx\0"
	.long	0x12a28
	.long	0xfa48
	.uleb128 0x2
	.long	0x159
	.uleb128 0x2
	.long	0x159
	.byte	0
	.uleb128 0x92
	.ascii "__ops\0"
	.byte	0x2f
	.byte	0x23
	.byte	0xb
	.uleb128 0x6
	.byte	0x24
	.byte	0xf8
	.byte	0xb
	.long	0x164f6
	.uleb128 0x40
	.byte	0x24
	.word	0x101
	.byte	0xb
	.long	0x16516
	.uleb128 0x40
	.byte	0x24
	.word	0x102
	.byte	0xb
	.long	0x1653b
	.uleb128 0x6
	.byte	0x30
	.byte	0x2c
	.byte	0xe
	.long	0xc5f8
	.uleb128 0x6
	.byte	0x30
	.byte	0x2d
	.byte	0xe
	.long	0xd031
	.uleb128 0x53
	.ascii "new_allocator<char>\0"
	.byte	0x1
	.byte	0x30
	.byte	0x3a
	.byte	0xb
	.long	0xfd28
	.uleb128 0x36
	.secrel32	LASF135
	.byte	0x30
	.byte	0x4f
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIcEC4Ev\0"
	.byte	0x1
	.long	0xfacf
	.long	0xfad5
	.uleb128 0x5
	.long	0x16803
	.byte	0
	.uleb128 0x36
	.secrel32	LASF135
	.byte	0x30
	.byte	0x51
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIcEC4ERKS1_\0"
	.byte	0x1
	.long	0xfb0e
	.long	0xfb19
	.uleb128 0x5
	.long	0x16803
	.uleb128 0x2
	.long	0x1680e
	.byte	0
	.uleb128 0x36
	.secrel32	LASF136
	.byte	0x30
	.byte	0x56
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIcED4Ev\0"
	.byte	0x1
	.long	0xfb4e
	.long	0xfb59
	.uleb128 0x5
	.long	0x16803
	.uleb128 0x5
	.long	0xf4
	.byte	0
	.uleb128 0x25
	.secrel32	LASF9
	.byte	0x30
	.byte	0x3f
	.byte	0x1a
	.long	0x461
	.byte	0x1
	.uleb128 0x41
	.secrel32	LASF137
	.byte	0x30
	.byte	0x59
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx13new_allocatorIcE7addressERc\0"
	.long	0xfb59
	.byte	0x1
	.long	0xfba7
	.long	0xfbb2
	.uleb128 0x5
	.long	0x16814
	.uleb128 0x2
	.long	0xfbb2
	.byte	0
	.uleb128 0x25
	.secrel32	LASF55
	.byte	0x30
	.byte	0x41
	.byte	0x1a
	.long	0x1681a
	.byte	0x1
	.uleb128 0x25
	.secrel32	LASF16
	.byte	0x30
	.byte	0x40
	.byte	0x1a
	.long	0x12a7d
	.byte	0x1
	.uleb128 0x41
	.secrel32	LASF137
	.byte	0x30
	.byte	0x5d
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx13new_allocatorIcE7addressERKc\0"
	.long	0xfbbf
	.byte	0x1
	.long	0xfc0e
	.long	0xfc19
	.uleb128 0x5
	.long	0x16814
	.uleb128 0x2
	.long	0xfc19
	.byte	0
	.uleb128 0x25
	.secrel32	LASF53
	.byte	0x30
	.byte	0x42
	.byte	0x1a
	.long	0x16820
	.byte	0x1
	.uleb128 0x41
	.secrel32	LASF100
	.byte	0x30
	.byte	0x63
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIcE8allocateEjPKv\0"
	.long	0xfb59
	.byte	0x1
	.long	0xfc69
	.long	0xfc79
	.uleb128 0x5
	.long	0x16803
	.uleb128 0x2
	.long	0xfc79
	.uleb128 0x2
	.long	0x7e3
	.byte	0
	.uleb128 0x25
	.secrel32	LASF10
	.byte	0x30
	.byte	0x3d
	.byte	0x1a
	.long	0xc5f8
	.byte	0x1
	.uleb128 0x36
	.secrel32	LASF102
	.byte	0x30
	.byte	0x74
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcj\0"
	.byte	0x1
	.long	0xfcc7
	.long	0xfcd7
	.uleb128 0x5
	.long	0x16803
	.uleb128 0x2
	.long	0xfb59
	.uleb128 0x2
	.long	0xfc79
	.byte	0
	.uleb128 0x41
	.secrel32	LASF49
	.byte	0x30
	.byte	0x81
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv\0"
	.long	0xfc79
	.byte	0x1
	.long	0xfd18
	.long	0xfd1e
	.uleb128 0x5
	.long	0x16814
	.byte	0
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0xb8
	.byte	0
	.uleb128 0x14
	.long	0xfa7d
	.uleb128 0x23
	.ascii "__numeric_traits_integer<int>\0"
	.byte	0x1
	.byte	0x31
	.byte	0x37
	.byte	0xc
	.long	0xfd97
	.uleb128 0x7c
	.ascii "__min\0"
	.byte	0x31
	.byte	0x3a
	.byte	0x1b
	.long	0xfb
	.uleb128 0x7c
	.ascii "__max\0"
	.byte	0x31
	.byte	0x3b
	.byte	0x1b
	.long	0xfb
	.uleb128 0x43
	.secrel32	LASF138
	.byte	0x31
	.byte	0x3f
	.byte	0x19
	.long	0x15b9f
	.uleb128 0x7c
	.ascii "__digits\0"
	.byte	0x31
	.byte	0x40
	.byte	0x18
	.long	0xfb
	.uleb128 0x1d
	.secrel32	LASF139
	.long	0xf4
	.byte	0
	.uleb128 0x6
	.byte	0x2c
	.byte	0xaf
	.byte	0xb
	.long	0x16cb9
	.uleb128 0x6
	.byte	0x2c
	.byte	0xb0
	.byte	0xb
	.long	0x16ce0
	.uleb128 0x6
	.byte	0x2c
	.byte	0xb1
	.byte	0xb
	.long	0x16d05
	.uleb128 0x6
	.byte	0x2c
	.byte	0xb2
	.byte	0xb
	.long	0x16d24
	.uleb128 0x6
	.byte	0x2c
	.byte	0xb3
	.byte	0xb
	.long	0x16d99
	.uleb128 0x23
	.ascii "__alloc_traits<std::allocator<char>, char>\0"
	.byte	0x1
	.byte	0x32
	.byte	0x32
	.byte	0xa
	.long	0x100bc
	.uleb128 0x6
	.byte	0x32
	.byte	0x32
	.byte	0xa
	.long	0xd2e8
	.uleb128 0x6
	.byte	0x32
	.byte	0x32
	.byte	0xa
	.long	0xd27f
	.uleb128 0x6
	.byte	0x32
	.byte	0x32
	.byte	0xa
	.long	0xd347
	.uleb128 0x6
	.byte	0x32
	.byte	0x32
	.byte	0xa
	.long	0xd397
	.uleb128 0x5a
	.long	0xd240
	.byte	0
	.uleb128 0x9a
	.secrel32	LASF140
	.byte	0x32
	.byte	0x5e
	.byte	0x13
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_\0"
	.long	0xd043
	.long	0xfe6f
	.uleb128 0x2
	.long	0x16831
	.byte	0
	.uleb128 0x9b
	.secrel32	LASF141
	.byte	0x32
	.byte	0x61
	.byte	0x11
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIcEcE10_S_on_swapERS1_S3_\0"
	.long	0xfec1
	.uleb128 0x2
	.long	0x16dca
	.uleb128 0x2
	.long	0x16dca
	.byte	0
	.uleb128 0x4d
	.secrel32	LASF142
	.byte	0x32
	.byte	0x64
	.byte	0x1b
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIcEcE27_S_propagate_on_copy_assignEv\0"
	.long	0x15b97
	.uleb128 0x4d
	.secrel32	LASF143
	.byte	0x32
	.byte	0x67
	.byte	0x1b
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIcEcE27_S_propagate_on_move_assignEv\0"
	.long	0x15b97
	.uleb128 0x4d
	.secrel32	LASF144
	.byte	0x32
	.byte	0x6a
	.byte	0x1b
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIcEcE20_S_propagate_on_swapEv\0"
	.long	0x15b97
	.uleb128 0x4d
	.secrel32	LASF145
	.byte	0x32
	.byte	0x6d
	.byte	0x1b
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIcEcE15_S_always_equalEv\0"
	.long	0x15b97
	.uleb128 0x4d
	.secrel32	LASF146
	.byte	0x32
	.byte	0x70
	.byte	0x1b
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIcEcE15_S_nothrow_moveEv\0"
	.long	0x15b97
	.uleb128 0x29
	.secrel32	LASF88
	.byte	0x32
	.byte	0x3a
	.byte	0x35
	.long	0xd43f
	.uleb128 0x14
	.long	0x10037
	.uleb128 0x29
	.secrel32	LASF9
	.byte	0x32
	.byte	0x3b
	.byte	0x35
	.long	0xd272
	.uleb128 0x29
	.secrel32	LASF16
	.byte	0x32
	.byte	0x3c
	.byte	0x35
	.long	0xd44c
	.uleb128 0x29
	.secrel32	LASF10
	.byte	0x32
	.byte	0x3d
	.byte	0x35
	.long	0xd2db
	.uleb128 0x29
	.secrel32	LASF55
	.byte	0x32
	.byte	0x40
	.byte	0x35
	.long	0x16dd0
	.uleb128 0x29
	.secrel32	LASF53
	.byte	0x32
	.byte	0x41
	.byte	0x35
	.long	0x16dd6
	.uleb128 0x23
	.ascii "rebind<char>\0"
	.byte	0x1
	.byte	0x32
	.byte	0x74
	.byte	0xe
	.long	0x100b2
	.uleb128 0x15
	.ascii "other\0"
	.byte	0x32
	.byte	0x75
	.byte	0x41
	.long	0xd459
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0xb8
	.byte	0
	.uleb128 0x1d
	.secrel32	LASF84
	.long	0xd043
	.byte	0
	.uleb128 0x71
	.ascii "__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >\0"
	.byte	0x4
	.byte	0x33
	.word	0x2f9
	.byte	0xb
	.long	0x10849
	.uleb128 0x72
	.secrel32	LASF147
	.byte	0x33
	.word	0x2fc
	.byte	0x11
	.long	0x461
	.byte	0
	.byte	0x2
	.uleb128 0x22
	.secrel32	LASF148
	.byte	0x33
	.word	0x308
	.byte	0x1a
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC4Ev\0"
	.byte	0x1
	.long	0x101af
	.long	0x101b5
	.uleb128 0x5
	.long	0x1b169
	.byte	0
	.uleb128 0x61
	.secrel32	LASF148
	.byte	0x33
	.word	0x30c
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC4ERKS1_\0"
	.byte	0x1
	.long	0x10228
	.long	0x10233
	.uleb128 0x5
	.long	0x1b169
	.uleb128 0x2
	.long	0x1b16f
	.byte	0
	.uleb128 0x48
	.secrel32	LASF55
	.byte	0x33
	.word	0x305
	.byte	0x32
	.long	0xf424
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF149
	.byte	0x33
	.word	0x319
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv\0"
	.long	0x10233
	.byte	0x1
	.long	0x102b5
	.long	0x102bb
	.uleb128 0x5
	.long	0x1b175
	.byte	0
	.uleb128 0x48
	.secrel32	LASF9
	.byte	0x33
	.word	0x306
	.byte	0x32
	.long	0xf418
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF150
	.byte	0x33
	.word	0x31d
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEptEv\0"
	.long	0x102bb
	.byte	0x1
	.long	0x1033d
	.long	0x10343
	.uleb128 0x5
	.long	0x1b175
	.byte	0
	.uleb128 0xb
	.secrel32	LASF151
	.byte	0x33
	.word	0x321
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv\0"
	.long	0x1b17b
	.byte	0x1
	.long	0x103b6
	.long	0x103bc
	.uleb128 0x5
	.long	0x1b169
	.byte	0
	.uleb128 0xb
	.secrel32	LASF151
	.byte	0x33
	.word	0x328
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEi\0"
	.long	0x100bc
	.byte	0x1
	.long	0x1042f
	.long	0x1043a
	.uleb128 0x5
	.long	0x1b169
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0xb
	.secrel32	LASF152
	.byte	0x33
	.word	0x32d
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv\0"
	.long	0x1b17b
	.byte	0x1
	.long	0x104ad
	.long	0x104b3
	.uleb128 0x5
	.long	0x1b169
	.byte	0
	.uleb128 0xb
	.secrel32	LASF152
	.byte	0x33
	.word	0x334
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEi\0"
	.long	0x100bc
	.byte	0x1
	.long	0x10526
	.long	0x10531
	.uleb128 0x5
	.long	0x1b169
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0xb
	.secrel32	LASF54
	.byte	0x33
	.word	0x339
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEixEi\0"
	.long	0x10233
	.byte	0x1
	.long	0x105a5
	.long	0x105b0
	.uleb128 0x5
	.long	0x1b175
	.uleb128 0x2
	.long	0x105b0
	.byte	0
	.uleb128 0x48
	.secrel32	LASF130
	.byte	0x33
	.word	0x304
	.byte	0x38
	.long	0xf40c
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF57
	.byte	0x33
	.word	0x33d
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEpLEi\0"
	.long	0x1b17b
	.byte	0x1
	.long	0x10631
	.long	0x1063c
	.uleb128 0x5
	.long	0x1b169
	.uleb128 0x2
	.long	0x105b0
	.byte	0
	.uleb128 0xb
	.secrel32	LASF153
	.byte	0x33
	.word	0x341
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEplEi\0"
	.long	0x100bc
	.byte	0x1
	.long	0x106b0
	.long	0x106bb
	.uleb128 0x5
	.long	0x1b175
	.uleb128 0x2
	.long	0x105b0
	.byte	0
	.uleb128 0xb
	.secrel32	LASF154
	.byte	0x33
	.word	0x345
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmIEi\0"
	.long	0x1b17b
	.byte	0x1
	.long	0x1072e
	.long	0x10739
	.uleb128 0x5
	.long	0x1b169
	.uleb128 0x2
	.long	0x105b0
	.byte	0
	.uleb128 0xb
	.secrel32	LASF155
	.byte	0x33
	.word	0x349
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmiEi\0"
	.long	0x100bc
	.byte	0x1
	.long	0x107ad
	.long	0x107b8
	.uleb128 0x5
	.long	0x1b175
	.uleb128 0x2
	.long	0x105b0
	.byte	0
	.uleb128 0x26
	.ascii "base\0"
	.byte	0x33
	.word	0x34d
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv\0"
	.long	0x1b16f
	.byte	0x1
	.long	0x10830
	.long	0x10836
	.uleb128 0x5
	.long	0x1b175
	.byte	0
	.uleb128 0x1d
	.secrel32	LASF131
	.long	0x461
	.uleb128 0x1d
	.secrel32	LASF156
	.long	0x2839
	.byte	0
	.uleb128 0x14
	.long	0x100bc
	.uleb128 0x71
	.ascii "__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >\0"
	.byte	0x4
	.byte	0x33
	.word	0x2f9
	.byte	0xb
	.long	0x10fef
	.uleb128 0x72
	.secrel32	LASF147
	.byte	0x33
	.word	0x2fc
	.byte	0x11
	.long	0x12a7d
	.byte	0
	.byte	0x2
	.uleb128 0x22
	.secrel32	LASF148
	.byte	0x33
	.word	0x308
	.byte	0x1a
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC4Ev\0"
	.byte	0x1
	.long	0x10948
	.long	0x1094e
	.uleb128 0x5
	.long	0x1b151
	.byte	0
	.uleb128 0x61
	.secrel32	LASF148
	.byte	0x33
	.word	0x30c
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC4ERKS2_\0"
	.byte	0x1
	.long	0x109c2
	.long	0x109cd
	.uleb128 0x5
	.long	0x1b151
	.uleb128 0x2
	.long	0x1b157
	.byte	0
	.uleb128 0x48
	.secrel32	LASF55
	.byte	0x33
	.word	0x305
	.byte	0x32
	.long	0xf4c1
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF149
	.byte	0x33
	.word	0x319
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv\0"
	.long	0x109cd
	.byte	0x1
	.long	0x10a50
	.long	0x10a56
	.uleb128 0x5
	.long	0x1b15d
	.byte	0
	.uleb128 0x48
	.secrel32	LASF9
	.byte	0x33
	.word	0x306
	.byte	0x32
	.long	0xf4b5
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF150
	.byte	0x33
	.word	0x31d
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEptEv\0"
	.long	0x10a56
	.byte	0x1
	.long	0x10ad9
	.long	0x10adf
	.uleb128 0x5
	.long	0x1b15d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF151
	.byte	0x33
	.word	0x321
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv\0"
	.long	0x1b163
	.byte	0x1
	.long	0x10b53
	.long	0x10b59
	.uleb128 0x5
	.long	0x1b151
	.byte	0
	.uleb128 0xb
	.secrel32	LASF151
	.byte	0x33
	.word	0x328
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEi\0"
	.long	0x1084e
	.byte	0x1
	.long	0x10bcd
	.long	0x10bd8
	.uleb128 0x5
	.long	0x1b151
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0xb
	.secrel32	LASF152
	.byte	0x33
	.word	0x32d
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv\0"
	.long	0x1b163
	.byte	0x1
	.long	0x10c4c
	.long	0x10c52
	.uleb128 0x5
	.long	0x1b151
	.byte	0
	.uleb128 0xb
	.secrel32	LASF152
	.byte	0x33
	.word	0x334
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEi\0"
	.long	0x1084e
	.byte	0x1
	.long	0x10cc6
	.long	0x10cd1
	.uleb128 0x5
	.long	0x1b151
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0xb
	.secrel32	LASF54
	.byte	0x33
	.word	0x339
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEixEi\0"
	.long	0x109cd
	.byte	0x1
	.long	0x10d46
	.long	0x10d51
	.uleb128 0x5
	.long	0x1b15d
	.uleb128 0x2
	.long	0x10d51
	.byte	0
	.uleb128 0x48
	.secrel32	LASF130
	.byte	0x33
	.word	0x304
	.byte	0x38
	.long	0xf4a9
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF57
	.byte	0x33
	.word	0x33d
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEpLEi\0"
	.long	0x1b163
	.byte	0x1
	.long	0x10dd3
	.long	0x10dde
	.uleb128 0x5
	.long	0x1b151
	.uleb128 0x2
	.long	0x10d51
	.byte	0
	.uleb128 0xb
	.secrel32	LASF153
	.byte	0x33
	.word	0x341
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEplEi\0"
	.long	0x1084e
	.byte	0x1
	.long	0x10e53
	.long	0x10e5e
	.uleb128 0x5
	.long	0x1b15d
	.uleb128 0x2
	.long	0x10d51
	.byte	0
	.uleb128 0xb
	.secrel32	LASF154
	.byte	0x33
	.word	0x345
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmIEi\0"
	.long	0x1b163
	.byte	0x1
	.long	0x10ed2
	.long	0x10edd
	.uleb128 0x5
	.long	0x1b151
	.uleb128 0x2
	.long	0x10d51
	.byte	0
	.uleb128 0xb
	.secrel32	LASF155
	.byte	0x33
	.word	0x349
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmiEi\0"
	.long	0x1084e
	.byte	0x1
	.long	0x10f52
	.long	0x10f5d
	.uleb128 0x5
	.long	0x1b15d
	.uleb128 0x2
	.long	0x10d51
	.byte	0
	.uleb128 0x26
	.ascii "base\0"
	.byte	0x33
	.word	0x34d
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv\0"
	.long	0x1b157
	.byte	0x1
	.long	0x10fd6
	.long	0x10fdc
	.uleb128 0x5
	.long	0x1b15d
	.byte	0
	.uleb128 0x1d
	.secrel32	LASF131
	.long	0x12a7d
	.uleb128 0x1d
	.secrel32	LASF156
	.long	0x2839
	.byte	0
	.uleb128 0x14
	.long	0x1084e
	.uleb128 0x23
	.ascii "__numeric_traits_floating<float>\0"
	.byte	0x1
	.byte	0x31
	.byte	0x64
	.byte	0xc
	.long	0x11058
	.uleb128 0x43
	.secrel32	LASF157
	.byte	0x31
	.byte	0x67
	.byte	0x18
	.long	0xfb
	.uleb128 0x43
	.secrel32	LASF138
	.byte	0x31
	.byte	0x6a
	.byte	0x19
	.long	0x15b9f
	.uleb128 0x43
	.secrel32	LASF158
	.byte	0x31
	.byte	0x6b
	.byte	0x18
	.long	0xfb
	.uleb128 0x43
	.secrel32	LASF159
	.byte	0x31
	.byte	0x6c
	.byte	0x18
	.long	0xfb
	.uleb128 0x1d
	.secrel32	LASF139
	.long	0x7d5
	.byte	0
	.uleb128 0x23
	.ascii "__numeric_traits_floating<double>\0"
	.byte	0x1
	.byte	0x31
	.byte	0x64
	.byte	0xc
	.long	0x110bd
	.uleb128 0x43
	.secrel32	LASF157
	.byte	0x31
	.byte	0x67
	.byte	0x18
	.long	0xfb
	.uleb128 0x43
	.secrel32	LASF138
	.byte	0x31
	.byte	0x6a
	.byte	0x19
	.long	0x15b9f
	.uleb128 0x43
	.secrel32	LASF158
	.byte	0x31
	.byte	0x6b
	.byte	0x18
	.long	0xfb
	.uleb128 0x43
	.secrel32	LASF159
	.byte	0x31
	.byte	0x6c
	.byte	0x18
	.long	0xfb
	.uleb128 0x1d
	.secrel32	LASF139
	.long	0x1286a
	.byte	0
	.uleb128 0x23
	.ascii "__numeric_traits_floating<long double>\0"
	.byte	0x1
	.byte	0x31
	.byte	0x64
	.byte	0xc
	.long	0x11127
	.uleb128 0x43
	.secrel32	LASF157
	.byte	0x31
	.byte	0x67
	.byte	0x18
	.long	0xfb
	.uleb128 0x43
	.secrel32	LASF138
	.byte	0x31
	.byte	0x6a
	.byte	0x19
	.long	0x15b9f
	.uleb128 0x43
	.secrel32	LASF158
	.byte	0x31
	.byte	0x6b
	.byte	0x18
	.long	0xfb
	.uleb128 0x43
	.secrel32	LASF159
	.byte	0x31
	.byte	0x6c
	.byte	0x18
	.long	0xfb
	.uleb128 0x1d
	.secrel32	LASF139
	.long	0x12874
	.byte	0
	.uleb128 0x53
	.ascii "new_allocator<char32_t>\0"
	.byte	0x1
	.byte	0x30
	.byte	0x3a
	.byte	0xb
	.long	0x113e1
	.uleb128 0x36
	.secrel32	LASF135
	.byte	0x30
	.byte	0x4f
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIDiEC4Ev\0"
	.byte	0x1
	.long	0x1117e
	.long	0x11184
	.uleb128 0x5
	.long	0x16e3e
	.byte	0
	.uleb128 0x36
	.secrel32	LASF135
	.byte	0x30
	.byte	0x51
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIDiEC4ERKS1_\0"
	.byte	0x1
	.long	0x111be
	.long	0x111c9
	.uleb128 0x5
	.long	0x16e3e
	.uleb128 0x2
	.long	0x16e44
	.byte	0
	.uleb128 0x36
	.secrel32	LASF136
	.byte	0x30
	.byte	0x56
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIDiED4Ev\0"
	.byte	0x1
	.long	0x111ff
	.long	0x1120a
	.uleb128 0x5
	.long	0x16e3e
	.uleb128 0x5
	.long	0xf4
	.byte	0
	.uleb128 0x25
	.secrel32	LASF9
	.byte	0x30
	.byte	0x3f
	.byte	0x1a
	.long	0x16e4a
	.byte	0x1
	.uleb128 0x41
	.secrel32	LASF137
	.byte	0x30
	.byte	0x59
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx13new_allocatorIDiE7addressERDi\0"
	.long	0x1120a
	.byte	0x1
	.long	0x1125a
	.long	0x11265
	.uleb128 0x5
	.long	0x16e55
	.uleb128 0x2
	.long	0x11265
	.byte	0
	.uleb128 0x25
	.secrel32	LASF55
	.byte	0x30
	.byte	0x41
	.byte	0x1a
	.long	0x16e5b
	.byte	0x1
	.uleb128 0x25
	.secrel32	LASF16
	.byte	0x30
	.byte	0x40
	.byte	0x1a
	.long	0x16e61
	.byte	0x1
	.uleb128 0x41
	.secrel32	LASF137
	.byte	0x30
	.byte	0x5d
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx13new_allocatorIDiE7addressERKDi\0"
	.long	0x11272
	.byte	0x1
	.long	0x112c3
	.long	0x112ce
	.uleb128 0x5
	.long	0x16e55
	.uleb128 0x2
	.long	0x112ce
	.byte	0
	.uleb128 0x25
	.secrel32	LASF53
	.byte	0x30
	.byte	0x42
	.byte	0x1a
	.long	0x16e6c
	.byte	0x1
	.uleb128 0x41
	.secrel32	LASF100
	.byte	0x30
	.byte	0x63
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIDiE8allocateEjPKv\0"
	.long	0x1120a
	.byte	0x1
	.long	0x1131f
	.long	0x1132f
	.uleb128 0x5
	.long	0x16e3e
	.uleb128 0x2
	.long	0x1132f
	.uleb128 0x2
	.long	0x7e3
	.byte	0
	.uleb128 0x25
	.secrel32	LASF10
	.byte	0x30
	.byte	0x3d
	.byte	0x1a
	.long	0xc5f8
	.byte	0x1
	.uleb128 0x36
	.secrel32	LASF102
	.byte	0x30
	.byte	0x74
	.byte	0x7
	.ascii "_ZN9__gnu_cxx13new_allocatorIDiE10deallocateEPDij\0"
	.byte	0x1
	.long	0x1137f
	.long	0x1138f
	.uleb128 0x5
	.long	0x16e3e
	.uleb128 0x2
	.long	0x1120a
	.uleb128 0x2
	.long	0x1132f
	.byte	0
	.uleb128 0x41
	.secrel32	LASF49
	.byte	0x30
	.byte	0x81
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx13new_allocatorIDiE8max_sizeEv\0"
	.long	0x1132f
	.byte	0x1
	.long	0x113d1
	.long	0x113d7
	.uleb128 0x5
	.long	0x16e55
	.byte	0
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0x167b0
	.byte	0
	.uleb128 0x14
	.long	0x11127
	.uleb128 0x23
	.ascii "__alloc_traits<std::allocator<char32_t>, char32_t>\0"
	.byte	0x1
	.byte	0x32
	.byte	0x32
	.byte	0xa
	.long	0x116fd
	.uleb128 0x6
	.byte	0x32
	.byte	0x32
	.byte	0xa
	.long	0xd880
	.uleb128 0x6
	.byte	0x32
	.byte	0x32
	.byte	0xa
	.long	0xd816
	.uleb128 0x6
	.byte	0x32
	.byte	0x32
	.byte	0xa
	.long	0xd8e0
	.uleb128 0x6
	.byte	0x32
	.byte	0x32
	.byte	0xa
	.long	0xd932
	.uleb128 0x5a
	.long	0xd7d3
	.byte	0
	.uleb128 0x9a
	.secrel32	LASF140
	.byte	0x32
	.byte	0x5e
	.byte	0x13
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIDiEDiE17_S_select_on_copyERKS1_\0"
	.long	0xd72f
	.long	0x114a0
	.uleb128 0x2
	.long	0x16e78
	.byte	0
	.uleb128 0x9b
	.secrel32	LASF141
	.byte	0x32
	.byte	0x61
	.byte	0x11
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIDiEDiE10_S_on_swapERS1_S3_\0"
	.long	0x114f4
	.uleb128 0x2
	.long	0x16e8a
	.uleb128 0x2
	.long	0x16e8a
	.byte	0
	.uleb128 0x4d
	.secrel32	LASF142
	.byte	0x32
	.byte	0x64
	.byte	0x1b
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIDiEDiE27_S_propagate_on_copy_assignEv\0"
	.long	0x15b97
	.uleb128 0x4d
	.secrel32	LASF143
	.byte	0x32
	.byte	0x67
	.byte	0x1b
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIDiEDiE27_S_propagate_on_move_assignEv\0"
	.long	0x15b97
	.uleb128 0x4d
	.secrel32	LASF144
	.byte	0x32
	.byte	0x6a
	.byte	0x1b
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIDiEDiE20_S_propagate_on_swapEv\0"
	.long	0x15b97
	.uleb128 0x4d
	.secrel32	LASF145
	.byte	0x32
	.byte	0x6d
	.byte	0x1b
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIDiEDiE15_S_always_equalEv\0"
	.long	0x15b97
	.uleb128 0x4d
	.secrel32	LASF146
	.byte	0x32
	.byte	0x70
	.byte	0x1b
	.ascii "_ZN9__gnu_cxx14__alloc_traitsISaIDiEDiE15_S_nothrow_moveEv\0"
	.long	0x15b97
	.uleb128 0x29
	.secrel32	LASF88
	.byte	0x32
	.byte	0x3a
	.byte	0x35
	.long	0xd9dc
	.uleb128 0x14
	.long	0x11674
	.uleb128 0x29
	.secrel32	LASF9
	.byte	0x32
	.byte	0x3b
	.byte	0x35
	.long	0xd809
	.uleb128 0x29
	.secrel32	LASF16
	.byte	0x32
	.byte	0x3c
	.byte	0x35
	.long	0xd9e9
	.uleb128 0x29
	.secrel32	LASF10
	.byte	0x32
	.byte	0x3d
	.byte	0x35
	.long	0xd873
	.uleb128 0x29
	.secrel32	LASF55
	.byte	0x32
	.byte	0x40
	.byte	0x35
	.long	0x16e90
	.uleb128 0x29
	.secrel32	LASF53
	.byte	0x32
	.byte	0x41
	.byte	0x35
	.long	0x16e96
	.uleb128 0x23
	.ascii "rebind<char32_t>\0"
	.byte	0x1
	.byte	0x32
	.byte	0x74
	.byte	0xe
	.long	0x116f3
	.uleb128 0x15
	.ascii "other\0"
	.byte	0x32
	.byte	0x75
	.byte	0x41
	.long	0xd9f6
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0x167b0
	.byte	0
	.uleb128 0x1d
	.secrel32	LASF84
	.long	0xd72f
	.byte	0
	.uleb128 0x71
	.ascii "__normal_iterator<char32_t*, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >\0"
	.byte	0x4
	.byte	0x33
	.word	0x2f9
	.byte	0xb
	.long	0x11ed2
	.uleb128 0x72
	.secrel32	LASF147
	.byte	0x33
	.word	0x2fc
	.byte	0x11
	.long	0x16e4a
	.byte	0
	.byte	0x2
	.uleb128 0x22
	.secrel32	LASF148
	.byte	0x33
	.word	0x308
	.byte	0x1a
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEC4Ev\0"
	.byte	0x1
	.long	0x11804
	.long	0x1180a
	.uleb128 0x5
	.long	0x1b199
	.byte	0
	.uleb128 0x61
	.secrel32	LASF148
	.byte	0x33
	.word	0x30c
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEC4ERKS1_\0"
	.byte	0x1
	.long	0x11881
	.long	0x1188c
	.uleb128 0x5
	.long	0x1b199
	.uleb128 0x2
	.long	0x1b19f
	.byte	0
	.uleb128 0x48
	.secrel32	LASF55
	.byte	0x33
	.word	0x305
	.byte	0x32
	.long	0xf5ef
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF149
	.byte	0x33
	.word	0x319
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEdeEv\0"
	.long	0x1188c
	.byte	0x1
	.long	0x11912
	.long	0x11918
	.uleb128 0x5
	.long	0x1b1a5
	.byte	0
	.uleb128 0x48
	.secrel32	LASF9
	.byte	0x33
	.word	0x306
	.byte	0x32
	.long	0xf5e3
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF150
	.byte	0x33
	.word	0x31d
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEptEv\0"
	.long	0x11918
	.byte	0x1
	.long	0x1199e
	.long	0x119a4
	.uleb128 0x5
	.long	0x1b1a5
	.byte	0
	.uleb128 0xb
	.secrel32	LASF151
	.byte	0x33
	.word	0x321
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEppEv\0"
	.long	0x1b1ab
	.byte	0x1
	.long	0x11a1b
	.long	0x11a21
	.uleb128 0x5
	.long	0x1b199
	.byte	0
	.uleb128 0xb
	.secrel32	LASF151
	.byte	0x33
	.word	0x328
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEppEi\0"
	.long	0x116fd
	.byte	0x1
	.long	0x11a98
	.long	0x11aa3
	.uleb128 0x5
	.long	0x1b199
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0xb
	.secrel32	LASF152
	.byte	0x33
	.word	0x32d
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEmmEv\0"
	.long	0x1b1ab
	.byte	0x1
	.long	0x11b1a
	.long	0x11b20
	.uleb128 0x5
	.long	0x1b199
	.byte	0
	.uleb128 0xb
	.secrel32	LASF152
	.byte	0x33
	.word	0x334
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEmmEi\0"
	.long	0x116fd
	.byte	0x1
	.long	0x11b97
	.long	0x11ba2
	.uleb128 0x5
	.long	0x1b199
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0xb
	.secrel32	LASF54
	.byte	0x33
	.word	0x339
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEixEi\0"
	.long	0x1188c
	.byte	0x1
	.long	0x11c1a
	.long	0x11c25
	.uleb128 0x5
	.long	0x1b1a5
	.uleb128 0x2
	.long	0x11c25
	.byte	0
	.uleb128 0x48
	.secrel32	LASF130
	.byte	0x33
	.word	0x304
	.byte	0x38
	.long	0xf5d7
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF57
	.byte	0x33
	.word	0x33d
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEpLEi\0"
	.long	0x1b1ab
	.byte	0x1
	.long	0x11caa
	.long	0x11cb5
	.uleb128 0x5
	.long	0x1b199
	.uleb128 0x2
	.long	0x11c25
	.byte	0
	.uleb128 0xb
	.secrel32	LASF153
	.byte	0x33
	.word	0x341
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEplEi\0"
	.long	0x116fd
	.byte	0x1
	.long	0x11d2d
	.long	0x11d38
	.uleb128 0x5
	.long	0x1b1a5
	.uleb128 0x2
	.long	0x11c25
	.byte	0
	.uleb128 0xb
	.secrel32	LASF154
	.byte	0x33
	.word	0x345
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEmIEi\0"
	.long	0x1b1ab
	.byte	0x1
	.long	0x11daf
	.long	0x11dba
	.uleb128 0x5
	.long	0x1b199
	.uleb128 0x2
	.long	0x11c25
	.byte	0
	.uleb128 0xb
	.secrel32	LASF155
	.byte	0x33
	.word	0x349
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEmiEi\0"
	.long	0x116fd
	.byte	0x1
	.long	0x11e32
	.long	0x11e3d
	.uleb128 0x5
	.long	0x1b1a5
	.uleb128 0x2
	.long	0x11c25
	.byte	0
	.uleb128 0x26
	.ascii "base\0"
	.byte	0x33
	.word	0x34d
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEE4baseEv\0"
	.long	0x1b19f
	.byte	0x1
	.long	0x11eb9
	.long	0x11ebf
	.uleb128 0x5
	.long	0x1b1a5
	.byte	0
	.uleb128 0x1d
	.secrel32	LASF131
	.long	0x16e4a
	.uleb128 0x1d
	.secrel32	LASF156
	.long	0x7138
	.byte	0
	.uleb128 0x14
	.long	0x116fd
	.uleb128 0x71
	.ascii "__normal_iterator<char32_t const*, std::__cxx11::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> > >\0"
	.byte	0x4
	.byte	0x33
	.word	0x2f9
	.byte	0xb
	.long	0x126c0
	.uleb128 0x72
	.secrel32	LASF147
	.byte	0x33
	.word	0x2fc
	.byte	0x11
	.long	0x16e61
	.byte	0
	.byte	0x2
	.uleb128 0x22
	.secrel32	LASF148
	.byte	0x33
	.word	0x308
	.byte	0x1a
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEC4Ev\0"
	.byte	0x1
	.long	0x11fe5
	.long	0x11feb
	.uleb128 0x5
	.long	0x1b181
	.byte	0
	.uleb128 0x61
	.secrel32	LASF148
	.byte	0x33
	.word	0x30c
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEC4ERKS2_\0"
	.byte	0x1
	.long	0x12063
	.long	0x1206e
	.uleb128 0x5
	.long	0x1b181
	.uleb128 0x2
	.long	0x1b187
	.byte	0
	.uleb128 0x48
	.secrel32	LASF55
	.byte	0x33
	.word	0x305
	.byte	0x32
	.long	0xf59d
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF149
	.byte	0x33
	.word	0x319
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEdeEv\0"
	.long	0x1206e
	.byte	0x1
	.long	0x120f5
	.long	0x120fb
	.uleb128 0x5
	.long	0x1b18d
	.byte	0
	.uleb128 0x48
	.secrel32	LASF9
	.byte	0x33
	.word	0x306
	.byte	0x32
	.long	0xf591
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF150
	.byte	0x33
	.word	0x31d
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEptEv\0"
	.long	0x120fb
	.byte	0x1
	.long	0x12182
	.long	0x12188
	.uleb128 0x5
	.long	0x1b18d
	.byte	0
	.uleb128 0xb
	.secrel32	LASF151
	.byte	0x33
	.word	0x321
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEppEv\0"
	.long	0x1b193
	.byte	0x1
	.long	0x12200
	.long	0x12206
	.uleb128 0x5
	.long	0x1b181
	.byte	0
	.uleb128 0xb
	.secrel32	LASF151
	.byte	0x33
	.word	0x328
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEppEi\0"
	.long	0x11ed7
	.byte	0x1
	.long	0x1227e
	.long	0x12289
	.uleb128 0x5
	.long	0x1b181
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0xb
	.secrel32	LASF152
	.byte	0x33
	.word	0x32d
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEmmEv\0"
	.long	0x1b193
	.byte	0x1
	.long	0x12301
	.long	0x12307
	.uleb128 0x5
	.long	0x1b181
	.byte	0
	.uleb128 0xb
	.secrel32	LASF152
	.byte	0x33
	.word	0x334
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEmmEi\0"
	.long	0x11ed7
	.byte	0x1
	.long	0x1237f
	.long	0x1238a
	.uleb128 0x5
	.long	0x1b181
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0xb
	.secrel32	LASF54
	.byte	0x33
	.word	0x339
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEixEi\0"
	.long	0x1206e
	.byte	0x1
	.long	0x12403
	.long	0x1240e
	.uleb128 0x5
	.long	0x1b18d
	.uleb128 0x2
	.long	0x1240e
	.byte	0
	.uleb128 0x48
	.secrel32	LASF130
	.byte	0x33
	.word	0x304
	.byte	0x38
	.long	0xf585
	.byte	0x1
	.uleb128 0xb
	.secrel32	LASF57
	.byte	0x33
	.word	0x33d
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEpLEi\0"
	.long	0x1b193
	.byte	0x1
	.long	0x12494
	.long	0x1249f
	.uleb128 0x5
	.long	0x1b181
	.uleb128 0x2
	.long	0x1240e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF153
	.byte	0x33
	.word	0x341
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEplEi\0"
	.long	0x11ed7
	.byte	0x1
	.long	0x12518
	.long	0x12523
	.uleb128 0x5
	.long	0x1b18d
	.uleb128 0x2
	.long	0x1240e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF154
	.byte	0x33
	.word	0x345
	.byte	0x7
	.ascii "_ZN9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEmIEi\0"
	.long	0x1b193
	.byte	0x1
	.long	0x1259b
	.long	0x125a6
	.uleb128 0x5
	.long	0x1b181
	.uleb128 0x2
	.long	0x1240e
	.byte	0
	.uleb128 0xb
	.secrel32	LASF155
	.byte	0x33
	.word	0x349
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEEmiEi\0"
	.long	0x11ed7
	.byte	0x1
	.long	0x1261f
	.long	0x1262a
	.uleb128 0x5
	.long	0x1b18d
	.uleb128 0x2
	.long	0x1240e
	.byte	0
	.uleb128 0x26
	.ascii "base\0"
	.byte	0x33
	.word	0x34d
	.byte	0x7
	.ascii "_ZNK9__gnu_cxx17__normal_iteratorIPKDiNSt7__cxx1112basic_stringIDiSt11char_traitsIDiESaIDiEEEE4baseEv\0"
	.long	0x1b187
	.byte	0x1
	.long	0x126a7
	.long	0x126ad
	.uleb128 0x5
	.long	0x1b18d
	.byte	0
	.uleb128 0x1d
	.secrel32	LASF131
	.long	0x16e61
	.uleb128 0x1d
	.secrel32	LASF156
	.long	0x7138
	.byte	0
	.uleb128 0x14
	.long	0x11ed7
	.uleb128 0x28
	.ascii "__is_null_pointer<char>\0"
	.byte	0xd
	.byte	0x98
	.byte	0x5
	.ascii "_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_\0"
	.long	0x15b97
	.long	0x12723
	.uleb128 0x32
	.ascii "_Type\0"
	.long	0xb8
	.uleb128 0x2
	.long	0x461
	.byte	0
	.uleb128 0xb5
	.ascii "__to_xstring<std::__cxx11::basic_string<char>, char>\0"
	.byte	0xa
	.byte	0x63
	.byte	0x5
	.ascii "_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_PcEjSB_z\0"
	.long	0x2839
	.uleb128 0x32
	.ascii "_String\0"
	.long	0x2839
	.uleb128 0x1d
	.secrel32	LASF82
	.long	0xb8
	.uleb128 0x2
	.long	0x1bb8f
	.uleb128 0x2
	.long	0xc5f8
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x37
	.byte	0
	.byte	0
	.uleb128 0x23
	.ascii "_div_t\0"
	.byte	0x8
	.byte	0x34
	.byte	0x3b
	.byte	0x12
	.long	0x12820
	.uleb128 0x11
	.ascii "quot\0"
	.byte	0x34
	.byte	0x3c
	.byte	0x9
	.long	0xf4
	.byte	0
	.uleb128 0x11
	.ascii "rem\0"
	.byte	0x34
	.byte	0x3d
	.byte	0x9
	.long	0xf4
	.byte	0x4
	.byte	0
	.uleb128 0x15
	.ascii "div_t\0"
	.byte	0x34
	.byte	0x3e
	.byte	0x5
	.long	0x127f4
	.uleb128 0x23
	.ascii "_ldiv_t\0"
	.byte	0x8
	.byte	0x34
	.byte	0x40
	.byte	0x12
	.long	0x1285b
	.uleb128 0x11
	.ascii "quot\0"
	.byte	0x34
	.byte	0x41
	.byte	0xa
	.long	0x14d
	.byte	0
	.uleb128 0x11
	.ascii "rem\0"
	.byte	0x34
	.byte	0x42
	.byte	0xa
	.long	0x14d
	.byte	0x4
	.byte	0
	.uleb128 0x15
	.ascii "ldiv_t\0"
	.byte	0x34
	.byte	0x43
	.byte	0x5
	.long	0x1282e
	.uleb128 0x33
	.byte	0x8
	.byte	0x4
	.ascii "double\0"
	.uleb128 0x33
	.byte	0xc
	.byte	0x4
	.ascii "long double\0"
	.uleb128 0xc
	.byte	0x4
	.long	0x12889
	.uleb128 0xb6
	.uleb128 0xc
	.byte	0x4
	.long	0x47d
	.uleb128 0x10
	.long	0x461
	.long	0x128a1
	.uleb128 0x12
	.long	0xe4
	.byte	0
	.byte	0
	.uleb128 0xe
	.ascii "_sys_errlist\0"
	.byte	0x34
	.byte	0xac
	.byte	0x26
	.long	0x12891
	.uleb128 0xe
	.ascii "_sys_nerr\0"
	.byte	0x34
	.byte	0xad
	.byte	0x24
	.long	0xf4
	.uleb128 0x8
	.ascii "_imp____argc\0"
	.byte	0x34
	.word	0x119
	.byte	0x10
	.long	0x482
	.uleb128 0x8
	.ascii "_imp____argv\0"
	.byte	0x34
	.word	0x11d
	.byte	0x13
	.long	0x128f4
	.uleb128 0xc
	.byte	0x4
	.long	0x2815
	.uleb128 0x8
	.ascii "_imp____wargv\0"
	.byte	0x34
	.word	0x121
	.byte	0x16
	.long	0x12911
	.uleb128 0xc
	.byte	0x4
	.long	0x12917
	.uleb128 0xc
	.byte	0x4
	.long	0x46c
	.uleb128 0x8
	.ascii "_imp___environ\0"
	.byte	0x34
	.word	0x127
	.byte	0x13
	.long	0x128f4
	.uleb128 0x8
	.ascii "_imp___wenviron\0"
	.byte	0x34
	.word	0x12c
	.byte	0x16
	.long	0x12911
	.uleb128 0x8
	.ascii "_imp___pgmptr\0"
	.byte	0x34
	.word	0x132
	.byte	0x12
	.long	0x2815
	.uleb128 0x8
	.ascii "_imp___wpgmptr\0"
	.byte	0x34
	.word	0x137
	.byte	0x15
	.long	0x12917
	.uleb128 0x8
	.ascii "_imp___osplatform\0"
	.byte	0x34
	.word	0x13c
	.byte	0x19
	.long	0x7f8
	.uleb128 0x8
	.ascii "_imp___osver\0"
	.byte	0x34
	.word	0x141
	.byte	0x19
	.long	0x7f8
	.uleb128 0x8
	.ascii "_imp___winver\0"
	.byte	0x34
	.word	0x146
	.byte	0x19
	.long	0x7f8
	.uleb128 0x8
	.ascii "_imp___winmajor\0"
	.byte	0x34
	.word	0x14b
	.byte	0x19
	.long	0x7f8
	.uleb128 0x8
	.ascii "_imp___winminor\0"
	.byte	0x34
	.word	0x150
	.byte	0x19
	.long	0x7f8
	.uleb128 0x2f
	.byte	0x10
	.byte	0x34
	.word	0x2bb
	.byte	0x12
	.ascii "7lldiv_t\0"
	.long	0x12a28
	.uleb128 0xa
	.ascii "quot\0"
	.byte	0x34
	.word	0x2bb
	.byte	0x30
	.long	0x159
	.byte	0
	.uleb128 0xa
	.ascii "rem\0"
	.byte	0x34
	.word	0x2bb
	.byte	0x36
	.long	0x159
	.byte	0x8
	.byte	0
	.uleb128 0x1a
	.ascii "lldiv_t\0"
	.byte	0x34
	.word	0x2bb
	.byte	0x3d
	.long	0x129f7
	.uleb128 0xe
	.ascii "_amblksiz\0"
	.byte	0x35
	.byte	0x35
	.byte	0x17
	.long	0xe4
	.uleb128 0x13
	.ascii "atexit\0"
	.byte	0x34
	.word	0x18a
	.byte	0xf
	.long	0xf4
	.long	0x12a65
	.uleb128 0x2
	.long	0x12883
	.byte	0
	.uleb128 0x13
	.ascii "atof\0"
	.byte	0x34
	.word	0x18d
	.byte	0x12
	.long	0x1286a
	.long	0x12a7d
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0xc0
	.uleb128 0x14
	.long	0x12a7d
	.uleb128 0x13
	.ascii "atoi\0"
	.byte	0x34
	.word	0x190
	.byte	0xf
	.long	0xf4
	.long	0x12aa0
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x13
	.ascii "atol\0"
	.byte	0x34
	.word	0x192
	.byte	0x10
	.long	0x14d
	.long	0x12ab8
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x13
	.ascii "bsearch\0"
	.byte	0x34
	.word	0x196
	.byte	0x11
	.long	0x7aa
	.long	0x12ae7
	.uleb128 0x2
	.long	0x7e3
	.uleb128 0x2
	.long	0x7e3
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0x12ae7
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x12aed
	.uleb128 0x59
	.long	0xf4
	.long	0x12b01
	.uleb128 0x2
	.long	0x7e3
	.uleb128 0x2
	.long	0x7e3
	.byte	0
	.uleb128 0x13
	.ascii "div\0"
	.byte	0x34
	.word	0x19c
	.byte	0x11
	.long	0x12820
	.long	0x12b1d
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x13
	.ascii "getenv\0"
	.byte	0x34
	.word	0x19d
	.byte	0x11
	.long	0x461
	.long	0x12b37
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x13
	.ascii "ldiv\0"
	.byte	0x34
	.word	0x1a7
	.byte	0x12
	.long	0x1285b
	.long	0x12b54
	.uleb128 0x2
	.long	0x14d
	.uleb128 0x2
	.long	0x14d
	.byte	0
	.uleb128 0x13
	.ascii "mblen\0"
	.byte	0x34
	.word	0x1a9
	.byte	0xf
	.long	0xf4
	.long	0x12b72
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x13
	.ascii "mbstowcs\0"
	.byte	0x34
	.word	0x1b1
	.byte	0x12
	.long	0xd5
	.long	0x12b98
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x13
	.ascii "mbtowc\0"
	.byte	0x34
	.word	0x1af
	.byte	0xf
	.long	0xf4
	.long	0x12bbc
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x62
	.ascii "qsort\0"
	.byte	0x34
	.word	0x197
	.byte	0x10
	.long	0x12be0
	.uleb128 0x2
	.long	0x7aa
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0x12ae7
	.byte	0
	.uleb128 0x73
	.ascii "rand\0"
	.byte	0x34
	.word	0x1b4
	.byte	0xf
	.long	0xf4
	.uleb128 0x62
	.ascii "srand\0"
	.byte	0x34
	.word	0x1b6
	.byte	0x10
	.long	0x12c03
	.uleb128 0x2
	.long	0xe4
	.byte	0
	.uleb128 0x13
	.ascii "strtod\0"
	.byte	0x34
	.word	0x1c2
	.byte	0x20
	.long	0x1286a
	.long	0x12c22
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2815
	.byte	0
	.uleb128 0x13
	.ascii "strtol\0"
	.byte	0x34
	.word	0x1e5
	.byte	0x10
	.long	0x14d
	.long	0x12c46
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2815
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x13
	.ascii "strtoul\0"
	.byte	0x34
	.word	0x1e7
	.byte	0x19
	.long	0x498
	.long	0x12c6b
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2815
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x13
	.ascii "system\0"
	.byte	0x34
	.word	0x1eb
	.byte	0xf
	.long	0xf4
	.long	0x12c85
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x13
	.ascii "wcstombs\0"
	.byte	0x34
	.word	0x1f0
	.byte	0x12
	.long	0xd5
	.long	0x12cab
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x13
	.ascii "wctomb\0"
	.byte	0x34
	.word	0x1ee
	.byte	0xf
	.long	0xf4
	.long	0x12cca
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x472
	.byte	0
	.uleb128 0x13
	.ascii "lldiv\0"
	.byte	0x34
	.word	0x2bd
	.byte	0x25
	.long	0x12a28
	.long	0x12ce8
	.uleb128 0x2
	.long	0x159
	.uleb128 0x2
	.long	0x159
	.byte	0
	.uleb128 0x13
	.ascii "atoll\0"
	.byte	0x34
	.word	0x2c8
	.byte	0x28
	.long	0x159
	.long	0x12d01
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x13
	.ascii "strtoll\0"
	.byte	0x34
	.word	0x2c4
	.byte	0x28
	.long	0x159
	.long	0x12d26
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2815
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x13
	.ascii "strtoull\0"
	.byte	0x34
	.word	0x2c5
	.byte	0x31
	.long	0x95a
	.long	0x12d4c
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2815
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x13
	.ascii "strtof\0"
	.byte	0x34
	.word	0x1c9
	.byte	0x1f
	.long	0x7d5
	.long	0x12d6b
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2815
	.byte	0
	.uleb128 0x13
	.ascii "strtold\0"
	.byte	0x34
	.word	0x1d4
	.byte	0x27
	.long	0x12874
	.long	0x12d8b
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x2815
	.byte	0
	.uleb128 0x6
	.byte	0x36
	.byte	0x27
	.byte	0xc
	.long	0x12a4b
	.uleb128 0x6
	.byte	0x36
	.byte	0x33
	.byte	0xc
	.long	0x12820
	.uleb128 0x6
	.byte	0x36
	.byte	0x34
	.byte	0xc
	.long	0x1285b
	.uleb128 0x13
	.ascii "abs\0"
	.byte	0x34
	.word	0x17f
	.byte	0xf
	.long	0xf4
	.long	0x12dba
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x6
	.byte	0x36
	.byte	0x36
	.byte	0xc
	.long	0x12da3
	.uleb128 0x33
	.byte	0x10
	.byte	0x4
	.ascii "__float128\0"
	.uleb128 0x6
	.byte	0x36
	.byte	0x36
	.byte	0xc
	.long	0xbb33
	.uleb128 0x6
	.byte	0x36
	.byte	0x36
	.byte	0xc
	.long	0xbb53
	.uleb128 0x6
	.byte	0x36
	.byte	0x36
	.byte	0xc
	.long	0xbb73
	.uleb128 0x6
	.byte	0x36
	.byte	0x36
	.byte	0xc
	.long	0xbb93
	.uleb128 0x6
	.byte	0x36
	.byte	0x36
	.byte	0xc
	.long	0xbbb3
	.uleb128 0x6
	.byte	0x36
	.byte	0x36
	.byte	0xc
	.long	0xbbd3
	.uleb128 0x6
	.byte	0x36
	.byte	0x37
	.byte	0xc
	.long	0x12a65
	.uleb128 0x6
	.byte	0x36
	.byte	0x38
	.byte	0xc
	.long	0x12a88
	.uleb128 0x6
	.byte	0x36
	.byte	0x39
	.byte	0xc
	.long	0x12aa0
	.uleb128 0x6
	.byte	0x36
	.byte	0x3a
	.byte	0xc
	.long	0x12ab8
	.uleb128 0x6
	.byte	0x36
	.byte	0x3c
	.byte	0xc
	.long	0xfa18
	.uleb128 0x6
	.byte	0x36
	.byte	0x3c
	.byte	0xc
	.long	0x12b01
	.uleb128 0x6
	.byte	0x36
	.byte	0x3c
	.byte	0xc
	.long	0xbbf3
	.uleb128 0x6
	.byte	0x36
	.byte	0x3e
	.byte	0xc
	.long	0x12b1d
	.uleb128 0x6
	.byte	0x36
	.byte	0x40
	.byte	0xc
	.long	0x12b37
	.uleb128 0x6
	.byte	0x36
	.byte	0x43
	.byte	0xc
	.long	0x12b54
	.uleb128 0x6
	.byte	0x36
	.byte	0x44
	.byte	0xc
	.long	0x12b72
	.uleb128 0x6
	.byte	0x36
	.byte	0x45
	.byte	0xc
	.long	0x12b98
	.uleb128 0x6
	.byte	0x36
	.byte	0x47
	.byte	0xc
	.long	0x12bbc
	.uleb128 0x6
	.byte	0x36
	.byte	0x48
	.byte	0xc
	.long	0x12be0
	.uleb128 0x6
	.byte	0x36
	.byte	0x4a
	.byte	0xc
	.long	0x12bee
	.uleb128 0x6
	.byte	0x36
	.byte	0x4b
	.byte	0xc
	.long	0x12c03
	.uleb128 0x6
	.byte	0x36
	.byte	0x4c
	.byte	0xc
	.long	0x12c22
	.uleb128 0x6
	.byte	0x36
	.byte	0x4d
	.byte	0xc
	.long	0x12c46
	.uleb128 0x6
	.byte	0x36
	.byte	0x4e
	.byte	0xc
	.long	0x12c6b
	.uleb128 0x6
	.byte	0x36
	.byte	0x50
	.byte	0xc
	.long	0x12c85
	.uleb128 0x6
	.byte	0x36
	.byte	0x51
	.byte	0xc
	.long	0x12cab
	.uleb128 0xe
	.ascii "IWinTypesBase_v0_1_c_ifspec\0"
	.byte	0x37
	.byte	0x29
	.byte	0x16
	.long	0x27f9
	.uleb128 0xe
	.ascii "IWinTypesBase_v0_1_s_ifspec\0"
	.byte	0x37
	.byte	0x2a
	.byte	0x16
	.long	0x27f9
	.uleb128 0xe
	.ascii "IID_IUnknown\0"
	.byte	0x38
	.byte	0x3d
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_AsyncIUnknown\0"
	.byte	0x38
	.byte	0xbd
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IClassFactory\0"
	.byte	0x38
	.word	0x16d
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IMarshal\0"
	.byte	0x39
	.word	0x16e
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_INoMarshal\0"
	.byte	0x39
	.word	0x255
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IAgileObject\0"
	.byte	0x39
	.word	0x294
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IAgileReference\0"
	.byte	0x39
	.word	0x2d2
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IMarshal2\0"
	.byte	0x39
	.word	0x32d
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IMalloc\0"
	.byte	0x39
	.word	0x3b2
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IStdMarshalInfo\0"
	.byte	0x39
	.word	0x469
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IExternalConnection\0"
	.byte	0x39
	.word	0x4cc
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IMultiQI\0"
	.byte	0x39
	.word	0x547
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_AsyncIMultiQI\0"
	.byte	0x39
	.word	0x59e
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternalUnknown\0"
	.byte	0x39
	.word	0x60c
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IEnumUnknown\0"
	.byte	0x39
	.word	0x668
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IEnumString\0"
	.byte	0x39
	.word	0x706
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ISequentialStream\0"
	.byte	0x39
	.word	0x7a2
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IStream\0"
	.byte	0x39
	.word	0x84d
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IRpcChannelBuffer\0"
	.byte	0x39
	.word	0x991
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IRpcChannelBuffer2\0"
	.byte	0x39
	.word	0xa3b
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IAsyncRpcChannelBuffer\0"
	.byte	0x39
	.word	0xabd
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IRpcChannelBuffer3\0"
	.byte	0x39
	.word	0xb7f
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IRpcSyntaxNegotiate\0"
	.byte	0x39
	.word	0xc99
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IRpcProxyBuffer\0"
	.byte	0x39
	.word	0xcee
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IRpcStubBuffer\0"
	.byte	0x39
	.word	0xd56
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IPSFactoryBuffer\0"
	.byte	0x39
	.word	0xe1c
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IChannelHook\0"
	.byte	0x39
	.word	0xe9f
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IClientSecurity\0"
	.byte	0x39
	.word	0xfc3
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IServerSecurity\0"
	.byte	0x39
	.word	0x106d
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IRpcOptions\0"
	.byte	0x39
	.word	0x1113
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IGlobalOptions\0"
	.byte	0x39
	.word	0x11ae
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ISurrogate\0"
	.byte	0x39
	.word	0x1221
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IGlobalInterfaceTable\0"
	.byte	0x39
	.word	0x1289
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ISynchronize\0"
	.byte	0x39
	.word	0x1312
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ISynchronizeHandle\0"
	.byte	0x39
	.word	0x138c
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ISynchronizeEvent\0"
	.byte	0x39
	.word	0x13e1
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ISynchronizeContainer\0"
	.byte	0x39
	.word	0x1441
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ISynchronizeMutex\0"
	.byte	0x39
	.word	0x14af
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ICancelMethodCalls\0"
	.byte	0x39
	.word	0x151e
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IAsyncManager\0"
	.byte	0x39
	.word	0x158a
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ICallFactory\0"
	.byte	0x39
	.word	0x1608
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IRpcHelper\0"
	.byte	0x39
	.word	0x1666
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IReleaseMarshalBuffers\0"
	.byte	0x39
	.word	0x16d1
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IWaitMultiple\0"
	.byte	0x39
	.word	0x172c
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IAddrTrackingControl\0"
	.byte	0x39
	.word	0x1798
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IAddrExclusionControl\0"
	.byte	0x39
	.word	0x17fd
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IPipeByte\0"
	.byte	0x39
	.word	0x1868
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IPipeLong\0"
	.byte	0x39
	.word	0x18d9
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IPipeDouble\0"
	.byte	0x39
	.word	0x194a
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IComThreadingInfo\0"
	.byte	0x39
	.word	0x1b24
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IProcessInitControl\0"
	.byte	0x39
	.word	0x1bb2
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IFastRundown\0"
	.byte	0x39
	.word	0x1c07
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IMarshalingStream\0"
	.byte	0x39
	.word	0x1c4a
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ICallbackWithNoReentrancyToApplicationSTA\0"
	.byte	0x39
	.word	0x1d09
	.byte	0x16
	.long	0xb3e
	.uleb128 0xe
	.ascii "GUID_NULL\0"
	.byte	0x3a
	.byte	0xd
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "CATID_MARSHALER\0"
	.byte	0x3a
	.byte	0xe
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IRpcChannel\0"
	.byte	0x3a
	.byte	0xf
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IRpcStub\0"
	.byte	0x3a
	.byte	0x10
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IStubManager\0"
	.byte	0x3a
	.byte	0x11
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IRpcProxy\0"
	.byte	0x3a
	.byte	0x12
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IProxyManager\0"
	.byte	0x3a
	.byte	0x13
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IPSFactory\0"
	.byte	0x3a
	.byte	0x14
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IInternalMoniker\0"
	.byte	0x3a
	.byte	0x15
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IDfReserved1\0"
	.byte	0x3a
	.byte	0x16
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IDfReserved2\0"
	.byte	0x3a
	.byte	0x17
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IDfReserved3\0"
	.byte	0x3a
	.byte	0x18
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "CLSID_StdMarshal\0"
	.byte	0x3a
	.byte	0x19
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_AggStdMarshal\0"
	.byte	0x3a
	.byte	0x1a
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_StdAsyncActManager\0"
	.byte	0x3a
	.byte	0x1b
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "IID_IStub\0"
	.byte	0x3a
	.byte	0x1c
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IProxy\0"
	.byte	0x3a
	.byte	0x1d
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IEnumGeneric\0"
	.byte	0x3a
	.byte	0x1e
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IEnumHolder\0"
	.byte	0x3a
	.byte	0x1f
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IEnumCallback\0"
	.byte	0x3a
	.byte	0x20
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IOleManager\0"
	.byte	0x3a
	.byte	0x21
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IOlePresObj\0"
	.byte	0x3a
	.byte	0x22
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IDebug\0"
	.byte	0x3a
	.byte	0x23
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IID_IDebugStream\0"
	.byte	0x3a
	.byte	0x24
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "CLSID_PSGenObject\0"
	.byte	0x3a
	.byte	0x25
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_PSClientSite\0"
	.byte	0x3a
	.byte	0x26
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_PSClassObject\0"
	.byte	0x3a
	.byte	0x27
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_PSInPlaceActive\0"
	.byte	0x3a
	.byte	0x28
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_PSInPlaceFrame\0"
	.byte	0x3a
	.byte	0x29
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_PSDragDrop\0"
	.byte	0x3a
	.byte	0x2a
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_PSBindCtx\0"
	.byte	0x3a
	.byte	0x2b
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_PSEnumerators\0"
	.byte	0x3a
	.byte	0x2c
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_StaticMetafile\0"
	.byte	0x3a
	.byte	0x2d
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_StaticDib\0"
	.byte	0x3a
	.byte	0x2e
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CID_CDfsVolume\0"
	.byte	0x3a
	.byte	0x2f
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_DCOMAccessControl\0"
	.byte	0x3a
	.byte	0x30
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_GlobalOptions\0"
	.byte	0x3a
	.byte	0x31
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_StdGlobalInterfaceTable\0"
	.byte	0x3a
	.byte	0x32
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_ComBinding\0"
	.byte	0x3a
	.byte	0x33
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_StdEvent\0"
	.byte	0x3a
	.byte	0x34
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_ManualResetEvent\0"
	.byte	0x3a
	.byte	0x35
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_SynchronizeContainer\0"
	.byte	0x3a
	.byte	0x36
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_AddrControl\0"
	.byte	0x3a
	.byte	0x37
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDFormKrnl\0"
	.byte	0x3a
	.byte	0x38
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDPropertyPage\0"
	.byte	0x3a
	.byte	0x39
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDFormDialog\0"
	.byte	0x3a
	.byte	0x3a
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDCommandButton\0"
	.byte	0x3a
	.byte	0x3b
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDComboBox\0"
	.byte	0x3a
	.byte	0x3c
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDTextBox\0"
	.byte	0x3a
	.byte	0x3d
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDCheckBox\0"
	.byte	0x3a
	.byte	0x3e
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDLabel\0"
	.byte	0x3a
	.byte	0x3f
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDOptionButton\0"
	.byte	0x3a
	.byte	0x40
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDListBox\0"
	.byte	0x3a
	.byte	0x41
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDScrollBar\0"
	.byte	0x3a
	.byte	0x42
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDGroupBox\0"
	.byte	0x3a
	.byte	0x43
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDGeneralPropertyPage\0"
	.byte	0x3a
	.byte	0x44
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDGenericPropertyPage\0"
	.byte	0x3a
	.byte	0x45
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDFontPropertyPage\0"
	.byte	0x3a
	.byte	0x46
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDColorPropertyPage\0"
	.byte	0x3a
	.byte	0x47
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDLabelPropertyPage\0"
	.byte	0x3a
	.byte	0x48
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDCheckBoxPropertyPage\0"
	.byte	0x3a
	.byte	0x49
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDTextBoxPropertyPage\0"
	.byte	0x3a
	.byte	0x4a
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDOptionButtonPropertyPage\0"
	.byte	0x3a
	.byte	0x4b
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDListBoxPropertyPage\0"
	.byte	0x3a
	.byte	0x4c
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDCommandButtonPropertyPage\0"
	.byte	0x3a
	.byte	0x4d
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDComboBoxPropertyPage\0"
	.byte	0x3a
	.byte	0x4e
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDScrollBarPropertyPage\0"
	.byte	0x3a
	.byte	0x4f
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDGroupBoxPropertyPage\0"
	.byte	0x3a
	.byte	0x50
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CCDXObjectPropertyPage\0"
	.byte	0x3a
	.byte	0x51
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CStdPropertyFrame\0"
	.byte	0x3a
	.byte	0x52
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CFormPropertyPage\0"
	.byte	0x3a
	.byte	0x53
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CGridPropertyPage\0"
	.byte	0x3a
	.byte	0x54
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CWSJArticlePage\0"
	.byte	0x3a
	.byte	0x55
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_CSystemPage\0"
	.byte	0x3a
	.byte	0x56
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_IdentityUnmarshal\0"
	.byte	0x3a
	.byte	0x57
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_InProcFreeMarshaler\0"
	.byte	0x3a
	.byte	0x58
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_Picture_Metafile\0"
	.byte	0x3a
	.byte	0x59
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_Picture_EnhMetafile\0"
	.byte	0x3a
	.byte	0x5a
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "CLSID_Picture_Dib\0"
	.byte	0x3a
	.byte	0x5b
	.byte	0x16
	.long	0xb62
	.uleb128 0xe
	.ascii "GUID_TRISTATE\0"
	.byte	0x3a
	.byte	0x5c
	.byte	0x15
	.long	0xb3e
	.uleb128 0xe
	.ascii "IWinTypes_v0_1_c_ifspec\0"
	.byte	0x3b
	.byte	0x28
	.byte	0x16
	.long	0x27f9
	.uleb128 0xe
	.ascii "IWinTypes_v0_1_s_ifspec\0"
	.byte	0x3b
	.byte	0x29
	.byte	0x16
	.long	0x27f9
	.uleb128 0x8
	.ascii "IID_IMallocSpy\0"
	.byte	0x3c
	.word	0x1dbd
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IBindCtx\0"
	.byte	0x3c
	.word	0x1f3a
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IEnumMoniker\0"
	.byte	0x3c
	.word	0x204a
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IRunnableObject\0"
	.byte	0x3c
	.word	0x20e8
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IRunningObjectTable\0"
	.byte	0x3c
	.word	0x218e
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IPersist\0"
	.byte	0x3c
	.word	0x2269
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IPersistStream\0"
	.byte	0x3c
	.word	0x22be
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IMoniker\0"
	.byte	0x3c
	.word	0x236a
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IROTData\0"
	.byte	0x3c
	.word	0x2558
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IEnumSTATSTG\0"
	.byte	0x3c
	.word	0x25b5
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IStorage\0"
	.byte	0x3c
	.word	0x2658
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IPersistFile\0"
	.byte	0x3c
	.word	0x2841
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IPersistStorage\0"
	.byte	0x3c
	.word	0x28f1
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ILockBytes\0"
	.byte	0x3c
	.word	0x29b1
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IEnumFORMATETC\0"
	.byte	0x3c
	.word	0x2ac0
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IEnumSTATDATA\0"
	.byte	0x3c
	.word	0x2b6c
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IRootStorage\0"
	.byte	0x3c
	.word	0x2c08
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IAdviseSink\0"
	.byte	0x3c
	.word	0x2cb3
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_AsyncIAdviseSink\0"
	.byte	0x3c
	.word	0x2d73
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IAdviseSink2\0"
	.byte	0x3c
	.word	0x2ea9
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_AsyncIAdviseSink2\0"
	.byte	0x3c
	.word	0x2f2e
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IDataObject\0"
	.byte	0x3c
	.word	0x2ff4
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IDataAdviseHolder\0"
	.byte	0x3c
	.word	0x3118
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IMessageFilter\0"
	.byte	0x3c
	.word	0x31d3
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "FMTID_SummaryInformation\0"
	.byte	0x3c
	.word	0x325d
	.byte	0x14
	.long	0xb75
	.uleb128 0x8
	.ascii "FMTID_DocSummaryInformation\0"
	.byte	0x3c
	.word	0x325f
	.byte	0x14
	.long	0xb75
	.uleb128 0x8
	.ascii "FMTID_UserDefinedProperties\0"
	.byte	0x3c
	.word	0x3261
	.byte	0x14
	.long	0xb75
	.uleb128 0x8
	.ascii "FMTID_DiscardableInformation\0"
	.byte	0x3c
	.word	0x3263
	.byte	0x14
	.long	0xb75
	.uleb128 0x8
	.ascii "FMTID_ImageSummaryInformation\0"
	.byte	0x3c
	.word	0x3265
	.byte	0x14
	.long	0xb75
	.uleb128 0x8
	.ascii "FMTID_AudioSummaryInformation\0"
	.byte	0x3c
	.word	0x3267
	.byte	0x14
	.long	0xb75
	.uleb128 0x8
	.ascii "FMTID_VideoSummaryInformation\0"
	.byte	0x3c
	.word	0x3269
	.byte	0x14
	.long	0xb75
	.uleb128 0x8
	.ascii "FMTID_MediaFileSummaryInformation\0"
	.byte	0x3c
	.word	0x326b
	.byte	0x14
	.long	0xb75
	.uleb128 0x8
	.ascii "IID_IClassActivator\0"
	.byte	0x3c
	.word	0x3273
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IFillLockBytes\0"
	.byte	0x3c
	.word	0x32d5
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IProgressNotify\0"
	.byte	0x3c
	.word	0x3389
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ILayoutStorage\0"
	.byte	0x3c
	.word	0x33ee
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IBlockingLock\0"
	.byte	0x3c
	.word	0x3492
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ITimeAndNoticeControl\0"
	.byte	0x3c
	.word	0x34f7
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOplockStorage\0"
	.byte	0x3c
	.word	0x354e
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IDirectWriterLock\0"
	.byte	0x3c
	.word	0x35d5
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IUrlMon\0"
	.byte	0x3c
	.word	0x364d
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IForegroundTransfer\0"
	.byte	0x3c
	.word	0x36bc
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IThumbnailExtractor\0"
	.byte	0x3c
	.word	0x3710
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IDummyHICONIncluder\0"
	.byte	0x3c
	.word	0x3786
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IProcessLock\0"
	.byte	0x3c
	.word	0x37e5
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ISurrogateService\0"
	.byte	0x3c
	.word	0x3848
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInitializeSpy\0"
	.byte	0x3c
	.word	0x38f2
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IApartmentShutdown\0"
	.byte	0x3c
	.word	0x398a
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "IID_IOleAdviseHolder\0"
	.byte	0x3d
	.byte	0xab
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOleCache\0"
	.byte	0x3d
	.word	0x162
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOleCache2\0"
	.byte	0x3d
	.word	0x229
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOleCacheControl\0"
	.byte	0x3d
	.word	0x2d4
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IParseDisplayName\0"
	.byte	0x3d
	.word	0x33c
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOleContainer\0"
	.byte	0x3d
	.word	0x39c
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOleClientSite\0"
	.byte	0x3d
	.word	0x417
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOleObject\0"
	.byte	0x3d
	.word	0x4fe
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IOLETypes_v0_0_c_ifspec\0"
	.byte	0x3d
	.word	0x6fe
	.byte	0x16
	.long	0x27f9
	.uleb128 0x8
	.ascii "IOLETypes_v0_0_s_ifspec\0"
	.byte	0x3d
	.word	0x6ff
	.byte	0x16
	.long	0x27f9
	.uleb128 0x8
	.ascii "IID_IOleWindow\0"
	.byte	0x3d
	.word	0x724
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOleLink\0"
	.byte	0x3d
	.word	0x79a
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOleItemContainer\0"
	.byte	0x3d
	.word	0x8bf
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOleInPlaceUIWindow\0"
	.byte	0x3d
	.word	0x976
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOleInPlaceActiveObject\0"
	.byte	0x3d
	.word	0xa1c
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOleInPlaceFrame\0"
	.byte	0x3d
	.word	0xaf8
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOleInPlaceObject\0"
	.byte	0x3d
	.word	0xbf1
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IOleInPlaceSite\0"
	.byte	0x3d
	.word	0xc91
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IContinue\0"
	.byte	0x3d
	.word	0xda4
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IViewObject\0"
	.byte	0x3d
	.word	0xdf9
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IViewObject2\0"
	.byte	0x3d
	.word	0xf2a
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IDropSource\0"
	.byte	0x3d
	.word	0xfd2
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IDropTarget\0"
	.byte	0x3d
	.word	0x105b
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IDropSourceNotify\0"
	.byte	0x3d
	.word	0x10ff
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IEnumOLEVERB\0"
	.byte	0x3d
	.word	0x1176
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "IID_IServiceProvider\0"
	.byte	0x3e
	.byte	0x39
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "IOleAutomationTypes_v1_0_c_ifspec\0"
	.byte	0x3f
	.byte	0xf1
	.byte	0x16
	.long	0x27f9
	.uleb128 0xe
	.ascii "IOleAutomationTypes_v1_0_s_ifspec\0"
	.byte	0x3f
	.byte	0xf2
	.byte	0x16
	.long	0x27f9
	.uleb128 0x8
	.ascii "IID_ICreateTypeInfo\0"
	.byte	0x3f
	.word	0x33b
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ICreateTypeInfo2\0"
	.byte	0x3f
	.word	0x562
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ICreateTypeLib\0"
	.byte	0x3f
	.word	0x7b2
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ICreateTypeLib2\0"
	.byte	0x3f
	.word	0x8ba
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IDispatch\0"
	.byte	0x3f
	.word	0x9b6
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IEnumVARIANT\0"
	.byte	0x3f
	.word	0xa87
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ITypeComp\0"
	.byte	0x3f
	.word	0xb35
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ITypeInfo\0"
	.byte	0x3f
	.word	0xbd9
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ITypeInfo2\0"
	.byte	0x3f
	.word	0xe50
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ITypeLib\0"
	.byte	0x3f
	.word	0x10d6
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ITypeLib2\0"
	.byte	0x3f
	.word	0x123d
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ITypeChangeEvents\0"
	.byte	0x3f
	.word	0x1361
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IErrorInfo\0"
	.byte	0x3f
	.word	0x13da
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ICreateErrorInfo\0"
	.byte	0x3f
	.word	0x147d
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ISupportErrorInfo\0"
	.byte	0x3f
	.word	0x1520
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ITypeFactory\0"
	.byte	0x3f
	.word	0x1575
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ITypeMarshal\0"
	.byte	0x3f
	.word	0x15d0
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IRecordInfo\0"
	.byte	0x3f
	.word	0x1684
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IErrorLog\0"
	.byte	0x3f
	.word	0x1820
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IPropertyBag\0"
	.byte	0x3f
	.word	0x187a
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "__MIDL_itf_msxml_0000_v0_0_c_ifspec\0"
	.byte	0x40
	.byte	0xeb
	.byte	0x18
	.long	0x27f9
	.uleb128 0xe
	.ascii "__MIDL_itf_msxml_0000_v0_0_s_ifspec\0"
	.byte	0x40
	.byte	0xec
	.byte	0x18
	.long	0x27f9
	.uleb128 0xe
	.ascii "LIBID_MSXML\0"
	.byte	0x40
	.byte	0xfc
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMImplementation\0"
	.byte	0x40
	.word	0x100
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMNode\0"
	.byte	0x40
	.word	0x127
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMDocumentFragment\0"
	.byte	0x40
	.word	0x1fd
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMDocument\0"
	.byte	0x40
	.word	0x266
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMNodeList\0"
	.byte	0x40
	.word	0x375
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMNamedNodeMap\0"
	.byte	0x40
	.word	0x3b0
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMCharacterData\0"
	.byte	0x40
	.word	0x404
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMAttribute\0"
	.byte	0x40
	.word	0x496
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMElement\0"
	.byte	0x40
	.word	0x50f
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMText\0"
	.byte	0x40
	.word	0x5a6
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMComment\0"
	.byte	0x40
	.word	0x625
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMProcessingInstruction\0"
	.byte	0x40
	.word	0x69e
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMCDATASection\0"
	.byte	0x40
	.word	0x717
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMDocumentType\0"
	.byte	0x40
	.word	0x792
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMNotation\0"
	.byte	0x40
	.word	0x80b
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMEntity\0"
	.byte	0x40
	.word	0x87f
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMEntityReference\0"
	.byte	0x40
	.word	0x8f8
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDOMParseError\0"
	.byte	0x40
	.word	0x961
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXTLRuntime\0"
	.byte	0x40
	.word	0x9a6
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "DIID_XMLDOMDocumentEvents\0"
	.byte	0x40
	.word	0xa3d
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_DOMDocument\0"
	.byte	0x40
	.word	0xa5c
	.byte	0x18
	.long	0xb62
	.uleb128 0x8
	.ascii "CLSID_DOMFreeThreadedDocument\0"
	.byte	0x40
	.word	0xa60
	.byte	0x18
	.long	0xb62
	.uleb128 0x8
	.ascii "IID_IXMLHttpRequest\0"
	.byte	0x40
	.word	0xa67
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_XMLHTTPRequest\0"
	.byte	0x40
	.word	0xacd
	.byte	0x18
	.long	0xb62
	.uleb128 0x8
	.ascii "IID_IXMLDSOControl\0"
	.byte	0x40
	.word	0xad4
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_XMLDSOControl\0"
	.byte	0x40
	.word	0xb0d
	.byte	0x18
	.long	0xb62
	.uleb128 0x8
	.ascii "IID_IXMLElementCollection\0"
	.byte	0x40
	.word	0xb14
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDocument\0"
	.byte	0x40
	.word	0xb4a
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLDocument2\0"
	.byte	0x40
	.word	0xbb2
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLElement\0"
	.byte	0x40
	.word	0xc24
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLElement2\0"
	.byte	0x40
	.word	0xc82
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLAttribute\0"
	.byte	0x40
	.word	0xce5
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IXMLError\0"
	.byte	0x40
	.word	0xd11
	.byte	0x16
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_XMLDocument\0"
	.byte	0x40
	.word	0xd2e
	.byte	0x18
	.long	0xb62
	.uleb128 0x8
	.ascii "CLSID_SBS_StdURLMoniker\0"
	.byte	0x41
	.word	0x17e
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_SBS_HttpProtocol\0"
	.byte	0x41
	.word	0x17f
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_SBS_FtpProtocol\0"
	.byte	0x41
	.word	0x180
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_SBS_GopherProtocol\0"
	.byte	0x41
	.word	0x181
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_SBS_HttpSProtocol\0"
	.byte	0x41
	.word	0x182
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_SBS_FileProtocol\0"
	.byte	0x41
	.word	0x183
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_SBS_MkProtocol\0"
	.byte	0x41
	.word	0x184
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_SBS_UrlMkBindCtx\0"
	.byte	0x41
	.word	0x185
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_SBS_SoftDistExt\0"
	.byte	0x41
	.word	0x186
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_SBS_CdlProtocol\0"
	.byte	0x41
	.word	0x187
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_SBS_ClassInstallFilter\0"
	.byte	0x41
	.word	0x188
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_SBS_InternetSecurityManager\0"
	.byte	0x41
	.word	0x189
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_SBS_InternetZoneManager\0"
	.byte	0x41
	.word	0x18a
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IAsyncMoniker\0"
	.byte	0x41
	.word	0x193
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_StdURLMoniker\0"
	.byte	0x41
	.word	0x194
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_HttpProtocol\0"
	.byte	0x41
	.word	0x195
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_FtpProtocol\0"
	.byte	0x41
	.word	0x196
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_GopherProtocol\0"
	.byte	0x41
	.word	0x197
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_HttpSProtocol\0"
	.byte	0x41
	.word	0x198
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_FileProtocol\0"
	.byte	0x41
	.word	0x199
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_MkProtocol\0"
	.byte	0x41
	.word	0x19a
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_StdURLProtocol\0"
	.byte	0x41
	.word	0x19b
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_UrlMkBindCtx\0"
	.byte	0x41
	.word	0x19c
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_CdlProtocol\0"
	.byte	0x41
	.word	0x19d
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_ClassInstallFilter\0"
	.byte	0x41
	.word	0x19e
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IAsyncBindCtx\0"
	.byte	0x41
	.word	0x19f
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IPersistMoniker\0"
	.byte	0x41
	.word	0x250
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IMonikerProp\0"
	.byte	0x41
	.word	0x321
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IBindProtocol\0"
	.byte	0x41
	.word	0x37f
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IBinding\0"
	.byte	0x41
	.word	0x3e0
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IBindStatusCallback\0"
	.byte	0x41
	.word	0x575
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IBindStatusCallbackEx\0"
	.byte	0x41
	.word	0x6a5
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IAuthenticate\0"
	.byte	0x41
	.word	0x764
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IAuthenticateEx\0"
	.byte	0x41
	.word	0x7d0
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IHttpNegotiate\0"
	.byte	0x41
	.word	0x841
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IHttpNegotiate2\0"
	.byte	0x41
	.word	0x8c1
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IHttpNegotiate3\0"
	.byte	0x41
	.word	0x93b
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IWinInetFileStream\0"
	.byte	0x41
	.word	0x9bf
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IWindowForBindingUI\0"
	.byte	0x41
	.word	0xa30
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ICodeInstall\0"
	.byte	0x41
	.word	0xa9b
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IWinInetInfo\0"
	.byte	0x41
	.word	0x10a5
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IHttpSecurity\0"
	.byte	0x41
	.word	0x1112
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IWinInetHttpInfo\0"
	.byte	0x41
	.word	0x1179
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IWinInetHttpTimeouts\0"
	.byte	0x41
	.word	0x11f8
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "SID_BindHost\0"
	.byte	0x41
	.word	0x1335
	.byte	0x15
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IBindHost\0"
	.byte	0x41
	.word	0x133f
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternet\0"
	.byte	0x41
	.word	0x144d
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternetBindInfo\0"
	.byte	0x41
	.word	0x14ac
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternetBindInfoEx\0"
	.byte	0x41
	.word	0x1526
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternetProtocolRoot\0"
	.byte	0x41
	.word	0x15bf
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternetProtocol\0"
	.byte	0x41
	.word	0x1684
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternetProtocolSink\0"
	.byte	0x41
	.word	0x181a
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternetProtocolSinkStackable\0"
	.byte	0x41
	.word	0x18bd
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternetSession\0"
	.byte	0x41
	.word	0x193f
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternetThreadSwitch\0"
	.byte	0x41
	.word	0x1a48
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternetPriority\0"
	.byte	0x41
	.word	0x1ab2
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternetProtocolInfo\0"
	.byte	0x41
	.word	0x1b4e
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "CLSID_InternetSecurityManager\0"
	.byte	0x41
	.word	0x1cb2
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "CLSID_InternetZoneManager\0"
	.byte	0x41
	.word	0x1cb3
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_IInternetSecurityMgrSite\0"
	.byte	0x41
	.word	0x1ccb
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternetSecurityManager\0"
	.byte	0x41
	.word	0x1d69
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternetHostSecurityManager\0"
	.byte	0x41
	.word	0x210f
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IInternetZoneManager\0"
	.byte	0x41
	.word	0x22c4
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "CLSID_SoftDistExt\0"
	.byte	0x41
	.word	0x269c
	.byte	0x14
	.long	0xb4f
	.uleb128 0x8
	.ascii "IID_ISoftDistExt\0"
	.byte	0x41
	.word	0x26cc
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_ICatalogFileInfo\0"
	.byte	0x41
	.word	0x2778
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IDataFilter\0"
	.byte	0x41
	.word	0x27e6
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IEncodingFilterFactory\0"
	.byte	0x41
	.word	0x28a6
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "GUID_CUSTOM_CONFIRMOBJECTSAFETY\0"
	.byte	0x41
	.word	0x2933
	.byte	0x15
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IWrappedProtocol\0"
	.byte	0x41
	.word	0x2941
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IGetBindHandle\0"
	.byte	0x41
	.word	0x29a5
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IBindCallbackRedirect\0"
	.byte	0x41
	.word	0x2a0d
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IPropertyStorage\0"
	.byte	0x42
	.word	0x1b7
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IPropertySetStorage\0"
	.byte	0x42
	.word	0x304
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IEnumSTATPROPSTG\0"
	.byte	0x42
	.word	0x3a6
	.byte	0x1
	.long	0xb3e
	.uleb128 0x8
	.ascii "IID_IEnumSTATPROPSETSTG\0"
	.byte	0x42
	.word	0x444
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "IID_StdOle\0"
	.byte	0x43
	.byte	0x15
	.byte	0x14
	.long	0xb4f
	.uleb128 0xe
	.ascii "GUID_DEVINTERFACE_DISK\0"
	.byte	0x44
	.byte	0xc
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "GUID_DEVINTERFACE_CDROM\0"
	.byte	0x44
	.byte	0xd
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "GUID_DEVINTERFACE_PARTITION\0"
	.byte	0x44
	.byte	0xe
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "GUID_DEVINTERFACE_TAPE\0"
	.byte	0x44
	.byte	0xf
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "GUID_DEVINTERFACE_WRITEONCEDISK\0"
	.byte	0x44
	.byte	0x10
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "GUID_DEVINTERFACE_VOLUME\0"
	.byte	0x44
	.byte	0x11
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "GUID_DEVINTERFACE_MEDIUMCHANGER\0"
	.byte	0x44
	.byte	0x12
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "GUID_DEVINTERFACE_FLOPPY\0"
	.byte	0x44
	.byte	0x13
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "GUID_DEVINTERFACE_CDCHANGER\0"
	.byte	0x44
	.byte	0x14
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "GUID_DEVINTERFACE_STORAGEPORT\0"
	.byte	0x44
	.byte	0x15
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "GUID_DEVINTERFACE_COMPORT\0"
	.byte	0x44
	.byte	0x16
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR\0"
	.byte	0x44
	.byte	0x17
	.byte	0x1
	.long	0xb3e
	.uleb128 0x23
	.ascii "_SCARD_IO_REQUEST\0"
	.byte	0x8
	.byte	0x45
	.byte	0xa1
	.byte	0x12
	.long	0x1589f
	.uleb128 0x11
	.ascii "dwProtocol\0"
	.byte	0x45
	.byte	0xa2
	.byte	0xb
	.long	0x7c7
	.byte	0
	.uleb128 0x11
	.ascii "cbPciLength\0"
	.byte	0x45
	.byte	0xa3
	.byte	0xb
	.long	0x7c7
	.byte	0x4
	.byte	0
	.uleb128 0x15
	.ascii "SCARD_IO_REQUEST\0"
	.byte	0x45
	.byte	0xa4
	.byte	0x5
	.long	0x1585a
	.uleb128 0x14
	.long	0x1589f
	.uleb128 0xe
	.ascii "g_rgSCardT0Pci\0"
	.byte	0x46
	.byte	0x25
	.byte	0x2e
	.long	0x158b8
	.uleb128 0xe
	.ascii "g_rgSCardT1Pci\0"
	.byte	0x46
	.byte	0x25
	.byte	0x3d
	.long	0x158b8
	.uleb128 0xe
	.ascii "g_rgSCardRawPci\0"
	.byte	0x46
	.byte	0x25
	.byte	0x4c
	.long	0x158b8
	.uleb128 0xe
	.ascii "IID_IPrintDialogCallback\0"
	.byte	0x47
	.byte	0xe
	.byte	0x1
	.long	0xb3e
	.uleb128 0xe
	.ascii "IID_IPrintDialogServices\0"
	.byte	0x47
	.byte	0xf
	.byte	0x1
	.long	0xb3e
	.uleb128 0x15
	.ascii "LPOFNHOOKPROC\0"
	.byte	0x47
	.byte	0x2e
	.byte	0x1f
	.long	0x1595b
	.uleb128 0xc
	.byte	0x4
	.long	0x15961
	.uleb128 0x59
	.long	0x974
	.long	0x1597f
	.uleb128 0x2
	.long	0x2178
	.uleb128 0x2
	.long	0x7eb
	.uleb128 0x2
	.long	0x209d
	.uleb128 0x2
	.long	0x20ac
	.byte	0
	.uleb128 0x23
	.ascii "tagOFNA\0"
	.byte	0x58
	.byte	0x47
	.byte	0x64
	.byte	0x12
	.long	0x15b6c
	.uleb128 0x11
	.ascii "lStructSize\0"
	.byte	0x47
	.byte	0x65
	.byte	0xb
	.long	0x7c7
	.byte	0
	.uleb128 0x11
	.ascii "hwndOwner\0"
	.byte	0x47
	.byte	0x66
	.byte	0xa
	.long	0x2178
	.byte	0x4
	.uleb128 0x2b
	.secrel32	LASF5
	.byte	0x47
	.byte	0x67
	.byte	0xf
	.long	0x20ee
	.byte	0x8
	.uleb128 0x11
	.ascii "lpstrFilter\0"
	.byte	0x47
	.byte	0x68
	.byte	0xc
	.long	0x9f6
	.byte	0xc
	.uleb128 0x11
	.ascii "lpstrCustomFilter\0"
	.byte	0x47
	.byte	0x69
	.byte	0xb
	.long	0x9e7
	.byte	0x10
	.uleb128 0x11
	.ascii "nMaxCustFilter\0"
	.byte	0x47
	.byte	0x6a
	.byte	0xb
	.long	0x7c7
	.byte	0x14
	.uleb128 0x11
	.ascii "nFilterIndex\0"
	.byte	0x47
	.byte	0x6b
	.byte	0xb
	.long	0x7c7
	.byte	0x18
	.uleb128 0x11
	.ascii "lpstrFile\0"
	.byte	0x47
	.byte	0x6c
	.byte	0xb
	.long	0x9e7
	.byte	0x1c
	.uleb128 0x11
	.ascii "nMaxFile\0"
	.byte	0x47
	.byte	0x6d
	.byte	0xb
	.long	0x7c7
	.byte	0x20
	.uleb128 0x11
	.ascii "lpstrFileTitle\0"
	.byte	0x47
	.byte	0x6e
	.byte	0xb
	.long	0x9e7
	.byte	0x24
	.uleb128 0x11
	.ascii "nMaxFileTitle\0"
	.byte	0x47
	.byte	0x6f
	.byte	0xb
	.long	0x7c7
	.byte	0x28
	.uleb128 0x11
	.ascii "lpstrInitialDir\0"
	.byte	0x47
	.byte	0x70
	.byte	0xc
	.long	0x9f6
	.byte	0x2c
	.uleb128 0x11
	.ascii "lpstrTitle\0"
	.byte	0x47
	.byte	0x71
	.byte	0xc
	.long	0x9f6
	.byte	0x30
	.uleb128 0x11
	.ascii "Flags\0"
	.byte	0x47
	.byte	0x72
	.byte	0xb
	.long	0x7c7
	.byte	0x34
	.uleb128 0x11
	.ascii "nFileOffset\0"
	.byte	0x47
	.byte	0x73
	.byte	0xa
	.long	0x7ba
	.byte	0x38
	.uleb128 0x11
	.ascii "nFileExtension\0"
	.byte	0x47
	.byte	0x74
	.byte	0xa
	.long	0x7ba
	.byte	0x3a
	.uleb128 0x11
	.ascii "lpstrDefExt\0"
	.byte	0x47
	.byte	0x75
	.byte	0xc
	.long	0x9f6
	.byte	0x3c
	.uleb128 0x11
	.ascii "lCustData\0"
	.byte	0x47
	.byte	0x76
	.byte	0xc
	.long	0x20ac
	.byte	0x40
	.uleb128 0x11
	.ascii "lpfnHook\0"
	.byte	0x47
	.byte	0x77
	.byte	0x13
	.long	0x15945
	.byte	0x44
	.uleb128 0x11
	.ascii "lpTemplateName\0"
	.byte	0x47
	.byte	0x78
	.byte	0xc
	.long	0x9f6
	.byte	0x48
	.uleb128 0x11
	.ascii "pvReserved\0"
	.byte	0x47
	.byte	0x79
	.byte	0xb
	.long	0x7aa
	.byte	0x4c
	.uleb128 0x11
	.ascii "dwReserved\0"
	.byte	0x47
	.byte	0x7a
	.byte	0xb
	.long	0x7c7
	.byte	0x50
	.uleb128 0x11
	.ascii "FlagsEx\0"
	.byte	0x47
	.byte	0x7b
	.byte	0xb
	.long	0x7c7
	.byte	0x54
	.byte	0
	.uleb128 0x15
	.ascii "OPENFILENAMEA\0"
	.byte	0x47
	.byte	0x7c
	.byte	0x5
	.long	0x1597f
	.uleb128 0x15
	.ascii "OPENFILENAME\0"
	.byte	0x47
	.byte	0x97
	.byte	0x3
	.long	0x15b6c
	.uleb128 0x33
	.byte	0x1
	.byte	0x2
	.ascii "bool\0"
	.uleb128 0x14
	.long	0x15b97
	.uleb128 0xc
	.byte	0x4
	.long	0xbdb7
	.uleb128 0xc
	.byte	0x4
	.long	0xbec4
	.uleb128 0xc
	.byte	0x4
	.long	0xbf02
	.uleb128 0xb7
	.long	0xbf4a
	.uleb128 0x94
	.ascii "__gnu_debug\0"
	.byte	0x23
	.byte	0x38
	.byte	0xb
	.long	0x15bdb
	.uleb128 0x9c
	.byte	0x23
	.byte	0x3a
	.byte	0x18
	.long	0xbffd
	.byte	0
	.uleb128 0x23
	.ascii "_iobuf\0"
	.byte	0x20
	.byte	0x48
	.byte	0x29
	.byte	0xa
	.long	0x15c6b
	.uleb128 0x11
	.ascii "_ptr\0"
	.byte	0x48
	.byte	0x2a
	.byte	0xb
	.long	0x461
	.byte	0
	.uleb128 0x11
	.ascii "_cnt\0"
	.byte	0x48
	.byte	0x2b
	.byte	0x9
	.long	0xf4
	.byte	0x4
	.uleb128 0x11
	.ascii "_base\0"
	.byte	0x48
	.byte	0x2c
	.byte	0xb
	.long	0x461
	.byte	0x8
	.uleb128 0x11
	.ascii "_flag\0"
	.byte	0x48
	.byte	0x2d
	.byte	0x9
	.long	0xf4
	.byte	0xc
	.uleb128 0x11
	.ascii "_file\0"
	.byte	0x48
	.byte	0x2e
	.byte	0x9
	.long	0xf4
	.byte	0x10
	.uleb128 0x11
	.ascii "_charbuf\0"
	.byte	0x48
	.byte	0x2f
	.byte	0x9
	.long	0xf4
	.byte	0x14
	.uleb128 0x11
	.ascii "_bufsiz\0"
	.byte	0x48
	.byte	0x30
	.byte	0x9
	.long	0xf4
	.byte	0x18
	.uleb128 0x11
	.ascii "_tmpfname\0"
	.byte	0x48
	.byte	0x31
	.byte	0xb
	.long	0x461
	.byte	0x1c
	.byte	0
	.uleb128 0x15
	.ascii "FILE\0"
	.byte	0x48
	.byte	0x33
	.byte	0x19
	.long	0x15bdb
	.uleb128 0x10
	.long	0x15c6b
	.long	0x15c83
	.uleb128 0x78
	.byte	0
	.uleb128 0xe
	.ascii "_imp___iob\0"
	.byte	0x48
	.byte	0x41
	.byte	0x10
	.long	0x15c96
	.uleb128 0xc
	.byte	0x4
	.long	0x15c78
	.uleb128 0x39
	.ascii "tm\0"
	.byte	0x24
	.byte	0x48
	.word	0x551
	.byte	0xa
	.long	0x15d4a
	.uleb128 0xa
	.ascii "tm_sec\0"
	.byte	0x48
	.word	0x552
	.byte	0x9
	.long	0xf4
	.byte	0
	.uleb128 0xa
	.ascii "tm_min\0"
	.byte	0x48
	.word	0x553
	.byte	0x9
	.long	0xf4
	.byte	0x4
	.uleb128 0xa
	.ascii "tm_hour\0"
	.byte	0x48
	.word	0x554
	.byte	0x9
	.long	0xf4
	.byte	0x8
	.uleb128 0xa
	.ascii "tm_mday\0"
	.byte	0x48
	.word	0x555
	.byte	0x9
	.long	0xf4
	.byte	0xc
	.uleb128 0xa
	.ascii "tm_mon\0"
	.byte	0x48
	.word	0x556
	.byte	0x9
	.long	0xf4
	.byte	0x10
	.uleb128 0xa
	.ascii "tm_year\0"
	.byte	0x48
	.word	0x557
	.byte	0x9
	.long	0xf4
	.byte	0x14
	.uleb128 0xa
	.ascii "tm_wday\0"
	.byte	0x48
	.word	0x558
	.byte	0x9
	.long	0xf4
	.byte	0x18
	.uleb128 0xa
	.ascii "tm_yday\0"
	.byte	0x48
	.word	0x559
	.byte	0x9
	.long	0xf4
	.byte	0x1c
	.uleb128 0xa
	.ascii "tm_isdst\0"
	.byte	0x48
	.word	0x55a
	.byte	0x9
	.long	0xf4
	.byte	0x20
	.byte	0
	.uleb128 0x14
	.long	0x15c9c
	.uleb128 0x1a
	.ascii "mbstate_t\0"
	.byte	0x48
	.word	0x588
	.byte	0xf
	.long	0xf4
	.uleb128 0x14
	.long	0x15d4f
	.uleb128 0x13
	.ascii "btowc\0"
	.byte	0x48
	.word	0x58b
	.byte	0x12
	.long	0x123
	.long	0x15d80
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x13
	.ascii "fgetwc\0"
	.byte	0x48
	.word	0x303
	.byte	0x12
	.long	0x123
	.long	0x15d9a
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x15c6b
	.uleb128 0x13
	.ascii "fgetws\0"
	.byte	0x48
	.word	0x30c
	.byte	0x14
	.long	0x46c
	.long	0x15dc4
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x13
	.ascii "fputwc\0"
	.byte	0x48
	.word	0x305
	.byte	0x12
	.long	0x123
	.long	0x15de3
	.uleb128 0x2
	.long	0x472
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x13
	.ascii "fputws\0"
	.byte	0x48
	.word	0x30d
	.byte	0xf
	.long	0xf4
	.long	0x15e02
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x13
	.ascii "fwide\0"
	.byte	0x48
	.word	0x59a
	.byte	0xf
	.long	0xf4
	.long	0x15e20
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x30
	.ascii "fwprintf\0"
	.byte	0x48
	.word	0x249
	.byte	0x5
	.long	0xf4
	.long	0x15e42
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x37
	.byte	0
	.uleb128 0x30
	.ascii "fwscanf\0"
	.byte	0x48
	.word	0x225
	.byte	0x5
	.long	0xf4
	.long	0x15e63
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x37
	.byte	0
	.uleb128 0x13
	.ascii "getwc\0"
	.byte	0x48
	.word	0x307
	.byte	0x12
	.long	0x123
	.long	0x15e7c
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x73
	.ascii "getwchar\0"
	.byte	0x48
	.word	0x308
	.byte	0x12
	.long	0x123
	.uleb128 0x13
	.ascii "mbrlen\0"
	.byte	0x48
	.word	0x58c
	.byte	0x12
	.long	0xd5
	.long	0x15eb2
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0x15eb2
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x15d4f
	.uleb128 0x13
	.ascii "mbrtowc\0"
	.byte	0x48
	.word	0x58d
	.byte	0x12
	.long	0xd5
	.long	0x15ee2
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0x15eb2
	.byte	0
	.uleb128 0x13
	.ascii "mbsinit\0"
	.byte	0x48
	.word	0x59b
	.byte	0xf
	.long	0xf4
	.long	0x15efd
	.uleb128 0x2
	.long	0x15efd
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x15d62
	.uleb128 0x13
	.ascii "mbsrtowcs\0"
	.byte	0x48
	.word	0x58e
	.byte	0x12
	.long	0xd5
	.long	0x15f2f
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x15f2f
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0x15eb2
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x12a7d
	.uleb128 0x13
	.ascii "putwc\0"
	.byte	0x48
	.word	0x309
	.byte	0x12
	.long	0x123
	.long	0x15f53
	.uleb128 0x2
	.long	0x472
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x13
	.ascii "putwchar\0"
	.byte	0x48
	.word	0x30a
	.byte	0x12
	.long	0x123
	.long	0x15f6f
	.uleb128 0x2
	.long	0x472
	.byte	0
	.uleb128 0x74
	.secrel32	LASF160
	.byte	0x49
	.byte	0x3e
	.byte	0x5
	.long	0xf4
	.long	0x15f8b
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x37
	.byte	0
	.uleb128 0x74
	.secrel32	LASF160
	.byte	0x49
	.byte	0x22
	.byte	0x5
	.long	0xf4
	.long	0x15fac
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x37
	.byte	0
	.uleb128 0x30
	.ascii "swscanf\0"
	.byte	0x48
	.word	0x20f
	.byte	0x5
	.long	0xf4
	.long	0x15fcd
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x37
	.byte	0
	.uleb128 0x13
	.ascii "ungetwc\0"
	.byte	0x48
	.word	0x30b
	.byte	0x12
	.long	0x123
	.long	0x15fed
	.uleb128 0x2
	.long	0x123
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x30
	.ascii "vfwprintf\0"
	.byte	0x48
	.word	0x25f
	.byte	0x5
	.long	0xf4
	.long	0x16014
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0x30
	.ascii "vfwscanf\0"
	.byte	0x48
	.word	0x23f
	.byte	0x5
	.long	0xf4
	.long	0x1603a
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0x74
	.secrel32	LASF161
	.byte	0x49
	.byte	0x33
	.byte	0x5
	.long	0xf4
	.long	0x1605a
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0x74
	.secrel32	LASF161
	.byte	0x49
	.byte	0x1b
	.byte	0x5
	.long	0xf4
	.long	0x1607f
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0x30
	.ascii "vswscanf\0"
	.byte	0x48
	.word	0x231
	.byte	0x5
	.long	0xf4
	.long	0x160a5
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0x30
	.ascii "vwprintf\0"
	.byte	0x48
	.word	0x266
	.byte	0x5
	.long	0xf4
	.long	0x160c6
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0x30
	.ascii "vwscanf\0"
	.byte	0x48
	.word	0x238
	.byte	0x5
	.long	0xf4
	.long	0x160e6
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0x13
	.ascii "wcrtomb\0"
	.byte	0x48
	.word	0x58f
	.byte	0x12
	.long	0xd5
	.long	0x1610b
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x472
	.uleb128 0x2
	.long	0x15eb2
	.byte	0
	.uleb128 0x24
	.ascii "wcscat\0"
	.byte	0x4a
	.byte	0x84
	.byte	0x14
	.long	0x46c
	.long	0x16129
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x1288b
	.byte	0
	.uleb128 0x24
	.ascii "wcscmp\0"
	.byte	0x4a
	.byte	0x86
	.byte	0xf
	.long	0xf4
	.long	0x16147
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x1288b
	.byte	0
	.uleb128 0x24
	.ascii "wcscoll\0"
	.byte	0x4a
	.byte	0xa3
	.byte	0xf
	.long	0xf4
	.long	0x16166
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x1288b
	.byte	0
	.uleb128 0x24
	.ascii "wcscpy\0"
	.byte	0x4a
	.byte	0x87
	.byte	0x14
	.long	0x46c
	.long	0x16184
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x1288b
	.byte	0
	.uleb128 0x24
	.ascii "wcscspn\0"
	.byte	0x4a
	.byte	0x88
	.byte	0x12
	.long	0xd5
	.long	0x161a3
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x1288b
	.byte	0
	.uleb128 0x13
	.ascii "wcsftime\0"
	.byte	0x48
	.word	0x565
	.byte	0x12
	.long	0xd5
	.long	0x161ce
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x161ce
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x15d4a
	.uleb128 0x24
	.ascii "wcslen\0"
	.byte	0x4a
	.byte	0x89
	.byte	0x12
	.long	0xd5
	.long	0x161ed
	.uleb128 0x2
	.long	0x1288b
	.byte	0
	.uleb128 0x24
	.ascii "wcsncat\0"
	.byte	0x4a
	.byte	0x8b
	.byte	0xc
	.long	0x46c
	.long	0x16211
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x24
	.ascii "wcsncmp\0"
	.byte	0x4a
	.byte	0x8c
	.byte	0xf
	.long	0xf4
	.long	0x16235
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x24
	.ascii "wcsncpy\0"
	.byte	0x4a
	.byte	0x8d
	.byte	0xc
	.long	0x46c
	.long	0x16259
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x13
	.ascii "wcsrtombs\0"
	.byte	0x48
	.word	0x590
	.byte	0x12
	.long	0xd5
	.long	0x16285
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x16285
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0x15eb2
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1288b
	.uleb128 0x24
	.ascii "wcsspn\0"
	.byte	0x4a
	.byte	0x91
	.byte	0x12
	.long	0xd5
	.long	0x162a9
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x1288b
	.byte	0
	.uleb128 0x13
	.ascii "wcstod\0"
	.byte	0x34
	.word	0x219
	.byte	0x12
	.long	0x1286a
	.long	0x162c8
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x12917
	.byte	0
	.uleb128 0x13
	.ascii "wcstof\0"
	.byte	0x34
	.word	0x21d
	.byte	0x11
	.long	0x7d5
	.long	0x162e7
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x12917
	.byte	0
	.uleb128 0x24
	.ascii "wcstok\0"
	.byte	0x4a
	.byte	0x93
	.byte	0x14
	.long	0x46c
	.long	0x16305
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x1288b
	.byte	0
	.uleb128 0x13
	.ascii "wcstol\0"
	.byte	0x34
	.word	0x229
	.byte	0x10
	.long	0x14d
	.long	0x16329
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x12917
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x13
	.ascii "wcstoul\0"
	.byte	0x34
	.word	0x22b
	.byte	0x19
	.long	0x498
	.long	0x1634e
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x12917
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x24
	.ascii "wcsxfrm\0"
	.byte	0x4a
	.byte	0xa1
	.byte	0x12
	.long	0xd5
	.long	0x16372
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x13
	.ascii "wctob\0"
	.byte	0x48
	.word	0x591
	.byte	0xf
	.long	0xf4
	.long	0x1638b
	.uleb128 0x2
	.long	0x123
	.byte	0
	.uleb128 0x13
	.ascii "wmemcmp\0"
	.byte	0x48
	.word	0x596
	.byte	0xf
	.long	0xf4
	.long	0x163b0
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x13
	.ascii "wmemcpy\0"
	.byte	0x48
	.word	0x597
	.byte	0x14
	.long	0x46c
	.long	0x163d5
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x13
	.ascii "wmemmove\0"
	.byte	0x48
	.word	0x599
	.byte	0x14
	.long	0x46c
	.long	0x163fb
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x13
	.ascii "wmemset\0"
	.byte	0x48
	.word	0x594
	.byte	0x14
	.long	0x46c
	.long	0x16420
	.uleb128 0x2
	.long	0x46c
	.uleb128 0x2
	.long	0x472
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x30
	.ascii "wprintf\0"
	.byte	0x48
	.word	0x254
	.byte	0x5
	.long	0xf4
	.long	0x1643c
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x37
	.byte	0
	.uleb128 0x30
	.ascii "wscanf\0"
	.byte	0x48
	.word	0x21a
	.byte	0x5
	.long	0xf4
	.long	0x16457
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x37
	.byte	0
	.uleb128 0x24
	.ascii "wcschr\0"
	.byte	0x4a
	.byte	0x85
	.byte	0x22
	.long	0x46c
	.long	0x16475
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x472
	.byte	0
	.uleb128 0x24
	.ascii "wcspbrk\0"
	.byte	0x4a
	.byte	0x8f
	.byte	0x22
	.long	0x46c
	.long	0x16494
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x1288b
	.byte	0
	.uleb128 0x24
	.ascii "wcsrchr\0"
	.byte	0x4a
	.byte	0x90
	.byte	0x22
	.long	0x46c
	.long	0x164b3
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x472
	.byte	0
	.uleb128 0x24
	.ascii "wcsstr\0"
	.byte	0x4a
	.byte	0x92
	.byte	0x22
	.long	0x46c
	.long	0x164d1
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x1288b
	.byte	0
	.uleb128 0x13
	.ascii "wmemchr\0"
	.byte	0x48
	.word	0x595
	.byte	0x22
	.long	0x46c
	.long	0x164f6
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x472
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x13
	.ascii "wcstold\0"
	.byte	0x34
	.word	0x226
	.byte	0x17
	.long	0x12874
	.long	0x16516
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x12917
	.byte	0
	.uleb128 0x13
	.ascii "wcstoll\0"
	.byte	0x48
	.word	0x59c
	.byte	0x27
	.long	0x159
	.long	0x1653b
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x12917
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x13
	.ascii "wcstoull\0"
	.byte	0x48
	.word	0x59d
	.byte	0x30
	.long	0x95a
	.long	0x16561
	.uleb128 0x2
	.long	0x1288b
	.uleb128 0x2
	.long	0x12917
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x20
	.byte	0x4
	.long	0xc29b
	.uleb128 0x20
	.byte	0x4
	.long	0xc2a8
	.uleb128 0xc
	.byte	0x4
	.long	0xc2a8
	.uleb128 0xc
	.byte	0x4
	.long	0xc29b
	.uleb128 0x20
	.byte	0x4
	.long	0xc4fe
	.uleb128 0xb8
	.ascii "decltype(nullptr)\0"
	.uleb128 0x15
	.ascii "int8_t\0"
	.byte	0x4b
	.byte	0x23
	.byte	0x15
	.long	0x92c
	.uleb128 0x15
	.ascii "uint8_t\0"
	.byte	0x4b
	.byte	0x24
	.byte	0x19
	.long	0x697
	.uleb128 0x14
	.long	0x165a2
	.uleb128 0x15
	.ascii "int16_t\0"
	.byte	0x4b
	.byte	0x25
	.byte	0x10
	.long	0x941
	.uleb128 0x15
	.ascii "uint16_t\0"
	.byte	0x4b
	.byte	0x26
	.byte	0x19
	.long	0x132
	.uleb128 0x15
	.ascii "int32_t\0"
	.byte	0x4b
	.byte	0x27
	.byte	0xe
	.long	0xf4
	.uleb128 0x15
	.ascii "uint32_t\0"
	.byte	0x4b
	.byte	0x28
	.byte	0x14
	.long	0xe4
	.uleb128 0x14
	.long	0x165e8
	.uleb128 0x15
	.ascii "int64_t\0"
	.byte	0x4b
	.byte	0x29
	.byte	0x26
	.long	0x159
	.uleb128 0x15
	.ascii "uint64_t\0"
	.byte	0x4b
	.byte	0x2a
	.byte	0x30
	.long	0x95a
	.uleb128 0x15
	.ascii "int_least8_t\0"
	.byte	0x4b
	.byte	0x2d
	.byte	0x15
	.long	0x92c
	.uleb128 0x15
	.ascii "uint_least8_t\0"
	.byte	0x4b
	.byte	0x2e
	.byte	0x19
	.long	0x697
	.uleb128 0x15
	.ascii "int_least16_t\0"
	.byte	0x4b
	.byte	0x2f
	.byte	0x10
	.long	0x941
	.uleb128 0x15
	.ascii "uint_least16_t\0"
	.byte	0x4b
	.byte	0x30
	.byte	0x19
	.long	0x132
	.uleb128 0x15
	.ascii "int_least32_t\0"
	.byte	0x4b
	.byte	0x31
	.byte	0xe
	.long	0xf4
	.uleb128 0x15
	.ascii "uint_least32_t\0"
	.byte	0x4b
	.byte	0x32
	.byte	0x14
	.long	0xe4
	.uleb128 0x15
	.ascii "int_least64_t\0"
	.byte	0x4b
	.byte	0x33
	.byte	0x26
	.long	0x159
	.uleb128 0x15
	.ascii "uint_least64_t\0"
	.byte	0x4b
	.byte	0x34
	.byte	0x30
	.long	0x95a
	.uleb128 0x15
	.ascii "int_fast8_t\0"
	.byte	0x4b
	.byte	0x3a
	.byte	0x15
	.long	0x92c
	.uleb128 0x15
	.ascii "uint_fast8_t\0"
	.byte	0x4b
	.byte	0x3b
	.byte	0x17
	.long	0x697
	.uleb128 0x15
	.ascii "int_fast16_t\0"
	.byte	0x4b
	.byte	0x3c
	.byte	0x10
	.long	0x941
	.uleb128 0x15
	.ascii "uint_fast16_t\0"
	.byte	0x4b
	.byte	0x3d
	.byte	0x19
	.long	0x132
	.uleb128 0x15
	.ascii "int_fast32_t\0"
	.byte	0x4b
	.byte	0x3e
	.byte	0xe
	.long	0xf4
	.uleb128 0x15
	.ascii "uint_fast32_t\0"
	.byte	0x4b
	.byte	0x3f
	.byte	0x18
	.long	0xe4
	.uleb128 0x15
	.ascii "int_fast64_t\0"
	.byte	0x4b
	.byte	0x40
	.byte	0x26
	.long	0x159
	.uleb128 0x15
	.ascii "uint_fast64_t\0"
	.byte	0x4b
	.byte	0x41
	.byte	0x30
	.long	0x95a
	.uleb128 0x15
	.ascii "intmax_t\0"
	.byte	0x4b
	.byte	0x44
	.byte	0x26
	.long	0x159
	.uleb128 0x15
	.ascii "uintmax_t\0"
	.byte	0x4b
	.byte	0x45
	.byte	0x30
	.long	0x95a
	.uleb128 0x33
	.byte	0x2
	.byte	0x10
	.ascii "char16_t\0"
	.uleb128 0x20
	.byte	0x4
	.long	0xc745
	.uleb128 0x33
	.byte	0x4
	.byte	0x10
	.ascii "char32_t\0"
	.uleb128 0x14
	.long	0x167b0
	.uleb128 0x20
	.byte	0x4
	.long	0xc752
	.uleb128 0xc
	.byte	0x4
	.long	0xc752
	.uleb128 0xc
	.byte	0x4
	.long	0xc745
	.uleb128 0x20
	.byte	0x4
	.long	0xc9bc
	.uleb128 0xc
	.byte	0x4
	.long	0xcad4
	.uleb128 0xc
	.byte	0x4
	.long	0xcf43
	.uleb128 0x20
	.byte	0x4
	.long	0xcf43
	.uleb128 0x5c
	.byte	0x4
	.long	0xcad4
	.uleb128 0x20
	.byte	0x4
	.long	0xcad4
	.uleb128 0xc
	.byte	0x4
	.long	0xcfd3
	.uleb128 0xc
	.byte	0x4
	.long	0xcfd8
	.uleb128 0xc
	.byte	0x4
	.long	0xfa7d
	.uleb128 0x14
	.long	0x16803
	.uleb128 0x20
	.byte	0x4
	.long	0xfd28
	.uleb128 0xc
	.byte	0x4
	.long	0xfd28
	.uleb128 0x20
	.byte	0x4
	.long	0xb8
	.uleb128 0x20
	.byte	0x4
	.long	0xc0
	.uleb128 0xc
	.byte	0x4
	.long	0xd043
	.uleb128 0x14
	.long	0x16826
	.uleb128 0x20
	.byte	0x4
	.long	0xd0db
	.uleb128 0x15
	.ascii "fpos_t\0"
	.byte	0x2
	.byte	0x68
	.byte	0x25
	.long	0x159
	.uleb128 0x14
	.long	0x16837
	.uleb128 0x24
	.ascii "setlocale\0"
	.byte	0x12
	.byte	0x50
	.byte	0x11
	.long	0x461
	.long	0x1686c
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0xb9
	.ascii "localeconv\0"
	.byte	0x12
	.byte	0x51
	.byte	0x21
	.long	0x67f
	.uleb128 0xe
	.ascii "__security_cookie\0"
	.byte	0x4c
	.byte	0x7d
	.byte	0x14
	.long	0x111
	.uleb128 0x60
	.long	0x168a5
	.uleb128 0x2
	.long	0x7aa
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1689a
	.uleb128 0x8
	.ascii "_pthread_key_dest\0"
	.byte	0x4d
	.word	0x123
	.byte	0x1f
	.long	0x168c6
	.uleb128 0xc
	.byte	0x4
	.long	0x168a5
	.uleb128 0x62
	.ascii "clearerr\0"
	.byte	0x2
	.word	0x242
	.byte	0x10
	.long	0x168e4
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x13
	.ascii "fclose\0"
	.byte	0x2
	.word	0x243
	.byte	0xf
	.long	0xf4
	.long	0x168fe
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x13
	.ascii "feof\0"
	.byte	0x2
	.word	0x24a
	.byte	0xf
	.long	0xf4
	.long	0x16916
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x13
	.ascii "ferror\0"
	.byte	0x2
	.word	0x24b
	.byte	0xf
	.long	0xf4
	.long	0x16930
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x13
	.ascii "fflush\0"
	.byte	0x2
	.word	0x24c
	.byte	0xf
	.long	0xf4
	.long	0x1694a
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x13
	.ascii "fgetc\0"
	.byte	0x2
	.word	0x24d
	.byte	0xf
	.long	0xf4
	.long	0x16963
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x13
	.ascii "fgetpos\0"
	.byte	0x2
	.word	0x24f
	.byte	0xf
	.long	0xf4
	.long	0x16983
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0x16983
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x16837
	.uleb128 0x13
	.ascii "fgets\0"
	.byte	0x2
	.word	0x251
	.byte	0x11
	.long	0x461
	.long	0x169ac
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x13
	.ascii "fopen\0"
	.byte	0x2
	.word	0x258
	.byte	0x11
	.long	0x15d9a
	.long	0x169ca
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x30
	.ascii "fprintf\0"
	.byte	0x2
	.word	0x14e
	.byte	0x5
	.long	0xf4
	.long	0x169eb
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x37
	.byte	0
	.uleb128 0x13
	.ascii "fread\0"
	.byte	0x2
	.word	0x25d
	.byte	0x12
	.long	0xd5
	.long	0x16a13
	.uleb128 0x2
	.long	0x7aa
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x13
	.ascii "freopen\0"
	.byte	0x2
	.word	0x25e
	.byte	0x11
	.long	0x15d9a
	.long	0x16a38
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x30
	.ascii "fscanf\0"
	.byte	0x2
	.word	0x121
	.byte	0x5
	.long	0xf4
	.long	0x16a58
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x37
	.byte	0
	.uleb128 0x13
	.ascii "fseek\0"
	.byte	0x2
	.word	0x261
	.byte	0xf
	.long	0xf4
	.long	0x16a7b
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0x14d
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x13
	.ascii "fsetpos\0"
	.byte	0x2
	.word	0x25f
	.byte	0xf
	.long	0xf4
	.long	0x16a9b
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0x16a9b
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x16846
	.uleb128 0x13
	.ascii "ftell\0"
	.byte	0x2
	.word	0x262
	.byte	0x10
	.long	0x14d
	.long	0x16aba
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x13
	.ascii "getc\0"
	.byte	0x2
	.word	0x28f
	.byte	0xf
	.long	0xf4
	.long	0x16ad2
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x73
	.ascii "getchar\0"
	.byte	0x2
	.word	0x290
	.byte	0xf
	.long	0xf4
	.uleb128 0x62
	.ascii "perror\0"
	.byte	0x34
	.word	0x26d
	.byte	0x10
	.long	0x16af9
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x30
	.ascii "printf\0"
	.byte	0x2
	.word	0x159
	.byte	0x5
	.long	0xf4
	.long	0x16b14
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x37
	.byte	0
	.uleb128 0x13
	.ascii "remove\0"
	.byte	0x2
	.word	0x2a4
	.byte	0xf
	.long	0xf4
	.long	0x16b2e
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x13
	.ascii "rename\0"
	.byte	0x2
	.word	0x2a5
	.byte	0xf
	.long	0xf4
	.long	0x16b4d
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x12a7d
	.byte	0
	.uleb128 0x62
	.ascii "rewind\0"
	.byte	0x2
	.word	0x2ab
	.byte	0x10
	.long	0x16b63
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x30
	.ascii "scanf\0"
	.byte	0x2
	.word	0x116
	.byte	0x5
	.long	0xf4
	.long	0x16b7d
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x37
	.byte	0
	.uleb128 0x62
	.ascii "setbuf\0"
	.byte	0x2
	.word	0x2ad
	.byte	0x10
	.long	0x16b98
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0x461
	.byte	0
	.uleb128 0x13
	.ascii "setvbuf\0"
	.byte	0x2
	.word	0x2b1
	.byte	0xf
	.long	0xf4
	.long	0x16bc2
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0xd5
	.byte	0
	.uleb128 0x30
	.ascii "sprintf\0"
	.byte	0x2
	.word	0x164
	.byte	0x5
	.long	0xf4
	.long	0x16be3
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x37
	.byte	0
	.uleb128 0x30
	.ascii "sscanf\0"
	.byte	0x2
	.word	0x10b
	.byte	0x5
	.long	0xf4
	.long	0x16c03
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x37
	.byte	0
	.uleb128 0x73
	.ascii "tmpfile\0"
	.byte	0x2
	.word	0x2cb
	.byte	0x11
	.long	0x15d9a
	.uleb128 0x13
	.ascii "tmpnam\0"
	.byte	0x2
	.word	0x2cc
	.byte	0x11
	.long	0x461
	.long	0x16c2e
	.uleb128 0x2
	.long	0x461
	.byte	0
	.uleb128 0x13
	.ascii "ungetc\0"
	.byte	0x2
	.word	0x2cd
	.byte	0xf
	.long	0xf4
	.long	0x16c4d
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0x15d9a
	.byte	0
	.uleb128 0x30
	.ascii "vfprintf\0"
	.byte	0x2
	.word	0x16f
	.byte	0x5
	.long	0xf4
	.long	0x16c73
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0x30
	.ascii "vprintf\0"
	.byte	0x2
	.word	0x176
	.byte	0x5
	.long	0xf4
	.long	0x16c93
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0x30
	.ascii "vsprintf\0"
	.byte	0x2
	.word	0x17d
	.byte	0x5
	.long	0xf4
	.long	0x16cb9
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0x30
	.ascii "snprintf\0"
	.byte	0x2
	.word	0x184
	.byte	0x5
	.long	0xf4
	.long	0x16ce0
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0xd5
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x37
	.byte	0
	.uleb128 0x30
	.ascii "vfscanf\0"
	.byte	0x2
	.word	0x140
	.byte	0x5
	.long	0xf4
	.long	0x16d05
	.uleb128 0x2
	.long	0x15d9a
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0x30
	.ascii "vscanf\0"
	.byte	0x2
	.word	0x139
	.byte	0x5
	.long	0xf4
	.long	0x16d24
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0xd
	.ascii "vsnprintf\0"
	.byte	0x2
	.word	0x18f
	.byte	0x5
	.long	0xf4
	.long	LFB1008
	.long	LFE1008-LFB1008
	.uleb128 0x1
	.byte	0x9c
	.long	0x16d99
	.uleb128 0x3
	.ascii "__stream\0"
	.byte	0x2
	.word	0x18f
	.byte	0x16
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "__n\0"
	.byte	0x2
	.word	0x18f
	.byte	0x27
	.long	0xd5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "__format\0"
	.byte	0x2
	.word	0x18f
	.byte	0x38
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "__local_argv\0"
	.byte	0x2
	.word	0x18f
	.byte	0x54
	.long	0x9f
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.byte	0
	.uleb128 0x30
	.ascii "vsscanf\0"
	.byte	0x2
	.word	0x132
	.byte	0x5
	.long	0xf4
	.long	0x16dbe
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0x20
	.byte	0x4
	.long	0xd2c9
	.uleb128 0x20
	.byte	0x4
	.long	0xd2d6
	.uleb128 0x20
	.byte	0x4
	.long	0xd043
	.uleb128 0x20
	.byte	0x4
	.long	0x10037
	.uleb128 0x20
	.byte	0x4
	.long	0x10043
	.uleb128 0xc
	.byte	0x4
	.long	0x2884
	.uleb128 0x14
	.long	0x16ddc
	.uleb128 0x5c
	.byte	0x4
	.long	0xd043
	.uleb128 0x10
	.long	0xb8
	.long	0x16dfd
	.uleb128 0x12
	.long	0xe4
	.byte	0xf
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x2839
	.uleb128 0x14
	.long	0x16dfd
	.uleb128 0xc
	.byte	0x4
	.long	0x7124
	.uleb128 0x20
	.byte	0x4
	.long	0x2a2e
	.uleb128 0x20
	.byte	0x4
	.long	0x2f6c
	.uleb128 0x20
	.byte	0x4
	.long	0x2f79
	.uleb128 0x20
	.byte	0x4
	.long	0x7124
	.uleb128 0x5c
	.byte	0x4
	.long	0x2839
	.uleb128 0x20
	.byte	0x4
	.long	0x2839
	.uleb128 0xc
	.byte	0x4
	.long	0xd470
	.uleb128 0xc
	.byte	0x4
	.long	0xd610
	.uleb128 0xc
	.byte	0x4
	.long	0x11127
	.uleb128 0x20
	.byte	0x4
	.long	0x113e1
	.uleb128 0xc
	.byte	0x4
	.long	0x167b0
	.uleb128 0x14
	.long	0x16e4a
	.uleb128 0xc
	.byte	0x4
	.long	0x113e1
	.uleb128 0x20
	.byte	0x4
	.long	0x167b0
	.uleb128 0xc
	.byte	0x4
	.long	0x167bc
	.uleb128 0x14
	.long	0x16e61
	.uleb128 0x20
	.byte	0x4
	.long	0x167bc
	.uleb128 0xc
	.byte	0x4
	.long	0xd72f
	.uleb128 0x20
	.byte	0x4
	.long	0xd7ce
	.uleb128 0x20
	.byte	0x4
	.long	0xd861
	.uleb128 0x20
	.byte	0x4
	.long	0xd86e
	.uleb128 0x20
	.byte	0x4
	.long	0xd72f
	.uleb128 0x20
	.byte	0x4
	.long	0x11674
	.uleb128 0x20
	.byte	0x4
	.long	0x11680
	.uleb128 0xc
	.byte	0x4
	.long	0x718f
	.uleb128 0x5c
	.byte	0x4
	.long	0xd72f
	.uleb128 0x10
	.long	0x167b0
	.long	0x16eb8
	.uleb128 0x12
	.long	0xe4
	.byte	0x3
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x7138
	.uleb128 0xc
	.byte	0x4
	.long	0xb9d5
	.uleb128 0x20
	.byte	0x4
	.long	0x72da
	.uleb128 0x20
	.byte	0x4
	.long	0x7842
	.uleb128 0x20
	.byte	0x4
	.long	0x784f
	.uleb128 0x20
	.byte	0x4
	.long	0xb9d5
	.uleb128 0x5c
	.byte	0x4
	.long	0x7138
	.uleb128 0x20
	.byte	0x4
	.long	0x7138
	.uleb128 0xc
	.byte	0x4
	.long	0xda0d
	.uleb128 0xc
	.byte	0x4
	.long	0xdbb7
	.uleb128 0x9c
	.byte	0x9
	.byte	0x5
	.byte	0x11
	.long	0x281b
	.uleb128 0xe
	.ascii "stbi_write_tga_with_rle\0"
	.byte	0x5
	.byte	0xa9
	.byte	0xc
	.long	0xf4
	.uleb128 0xe
	.ascii "stbi_write_png_compression_level\0"
	.byte	0x5
	.byte	0xaa
	.byte	0xc
	.long	0xf4
	.uleb128 0xe
	.ascii "stbi_write_force_png_filter\0"
	.byte	0x5
	.byte	0xab
	.byte	0xc
	.long	0xf4
	.uleb128 0x15
	.ascii "stbi_write_func\0"
	.byte	0x5
	.byte	0xba
	.byte	0xe
	.long	0x16f82
	.uleb128 0x60
	.long	0x16f97
	.uleb128 0x2
	.long	0x7aa
	.uleb128 0x2
	.long	0x7aa
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x12874
	.uleb128 0xc
	.byte	0x4
	.long	0x1286a
	.uleb128 0xc
	.byte	0x4
	.long	0x7d5
	.uleb128 0xe
	.ascii "_imp___HUGE\0"
	.byte	0x4e
	.byte	0x9c
	.byte	0x13
	.long	0x16f9d
	.uleb128 0x1a
	.ascii "float_t\0"
	.byte	0x4e
	.word	0x17a
	.byte	0x15
	.long	0x12874
	.uleb128 0x1a
	.ascii "double_t\0"
	.byte	0x4e
	.word	0x17b
	.byte	0x15
	.long	0x12874
	.uleb128 0x8
	.ascii "signgam\0"
	.byte	0x4e
	.word	0x393
	.byte	0xe
	.long	0xf4
	.uleb128 0x6
	.byte	0x4f
	.byte	0x26
	.byte	0xc
	.long	0x12da3
	.uleb128 0x6
	.byte	0x4f
	.byte	0x26
	.byte	0xc
	.long	0xbb33
	.uleb128 0x6
	.byte	0x4f
	.byte	0x26
	.byte	0xc
	.long	0xbb53
	.uleb128 0x6
	.byte	0x4f
	.byte	0x26
	.byte	0xc
	.long	0xbb73
	.uleb128 0x6
	.byte	0x4f
	.byte	0x26
	.byte	0xc
	.long	0xbb93
	.uleb128 0x6
	.byte	0x4f
	.byte	0x26
	.byte	0xc
	.long	0xbbb3
	.uleb128 0x6
	.byte	0x4f
	.byte	0x26
	.byte	0xc
	.long	0xbbd3
	.uleb128 0x24
	.ascii "acos\0"
	.byte	0x4e
	.byte	0xbe
	.byte	0x12
	.long	0x1286a
	.long	0x17040
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x27
	.byte	0xc
	.long	0x17029
	.uleb128 0x6
	.byte	0x4f
	.byte	0x27
	.byte	0xc
	.long	0xdd44
	.uleb128 0x6
	.byte	0x4f
	.byte	0x27
	.byte	0xc
	.long	0xdd66
	.uleb128 0x24
	.ascii "asin\0"
	.byte	0x4e
	.byte	0xbd
	.byte	0x12
	.long	0x1286a
	.long	0x1706f
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x28
	.byte	0xc
	.long	0x17058
	.uleb128 0x6
	.byte	0x4f
	.byte	0x28
	.byte	0xc
	.long	0xdd88
	.uleb128 0x6
	.byte	0x4f
	.byte	0x28
	.byte	0xc
	.long	0xddaa
	.uleb128 0x24
	.ascii "atan\0"
	.byte	0x4e
	.byte	0xbf
	.byte	0x12
	.long	0x1286a
	.long	0x1709e
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x29
	.byte	0xc
	.long	0x17087
	.uleb128 0x6
	.byte	0x4f
	.byte	0x29
	.byte	0xc
	.long	0xddcc
	.uleb128 0x6
	.byte	0x4f
	.byte	0x29
	.byte	0xc
	.long	0xddee
	.uleb128 0x24
	.ascii "atan2\0"
	.byte	0x4e
	.byte	0xc0
	.byte	0x12
	.long	0x1286a
	.long	0x170d3
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2a
	.byte	0xc
	.long	0x170b6
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2a
	.byte	0xc
	.long	0xde10
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2a
	.byte	0xc
	.long	0xde3a
	.uleb128 0x24
	.ascii "cos\0"
	.byte	0x4e
	.byte	0xb8
	.byte	0x12
	.long	0x1286a
	.long	0x17101
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2b
	.byte	0xc
	.long	0x170eb
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2b
	.byte	0xc
	.long	0xde64
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2b
	.byte	0xc
	.long	0xde84
	.uleb128 0x24
	.ascii "sin\0"
	.byte	0x4e
	.byte	0xb7
	.byte	0x12
	.long	0x1286a
	.long	0x1712f
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2c
	.byte	0xc
	.long	0x17119
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2c
	.byte	0xc
	.long	0xdea4
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2c
	.byte	0xc
	.long	0xdec5
	.uleb128 0x24
	.ascii "tan\0"
	.byte	0x4e
	.byte	0xb9
	.byte	0x12
	.long	0x1286a
	.long	0x1715d
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2d
	.byte	0xc
	.long	0x17147
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2d
	.byte	0xc
	.long	0xdee6
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2d
	.byte	0xc
	.long	0xdf07
	.uleb128 0x24
	.ascii "cosh\0"
	.byte	0x4e
	.byte	0xbb
	.byte	0x12
	.long	0x1286a
	.long	0x1718c
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2e
	.byte	0xc
	.long	0x17175
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2e
	.byte	0xc
	.long	0xdf28
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2e
	.byte	0xc
	.long	0xdf4a
	.uleb128 0x24
	.ascii "sinh\0"
	.byte	0x4e
	.byte	0xba
	.byte	0x12
	.long	0x1286a
	.long	0x171bb
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2f
	.byte	0xc
	.long	0x171a4
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2f
	.byte	0xc
	.long	0xdf6c
	.uleb128 0x6
	.byte	0x4f
	.byte	0x2f
	.byte	0xc
	.long	0xdf8f
	.uleb128 0x24
	.ascii "tanh\0"
	.byte	0x4e
	.byte	0xbc
	.byte	0x12
	.long	0x1286a
	.long	0x171ea
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x30
	.byte	0xc
	.long	0x171d3
	.uleb128 0x6
	.byte	0x4f
	.byte	0x30
	.byte	0xc
	.long	0xdfb2
	.uleb128 0x6
	.byte	0x4f
	.byte	0x30
	.byte	0xc
	.long	0xdfd5
	.uleb128 0x24
	.ascii "exp\0"
	.byte	0x4e
	.byte	0xc1
	.byte	0x12
	.long	0x1286a
	.long	0x17218
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x31
	.byte	0xc
	.long	0x17202
	.uleb128 0x6
	.byte	0x4f
	.byte	0x31
	.byte	0xc
	.long	0xdff8
	.uleb128 0x6
	.byte	0x4f
	.byte	0x31
	.byte	0xc
	.long	0xe018
	.uleb128 0x24
	.ascii "frexp\0"
	.byte	0x4e
	.byte	0xf4
	.byte	0x12
	.long	0x1286a
	.long	0x1724d
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x482
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x32
	.byte	0xc
	.long	0x17230
	.uleb128 0x6
	.byte	0x4f
	.byte	0x32
	.byte	0xc
	.long	0xe038
	.uleb128 0x6
	.byte	0x4f
	.byte	0x32
	.byte	0xc
	.long	0xe064
	.uleb128 0x24
	.ascii "ldexp\0"
	.byte	0x4e
	.byte	0xf3
	.byte	0x12
	.long	0x1286a
	.long	0x17282
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x33
	.byte	0xc
	.long	0x17265
	.uleb128 0x6
	.byte	0x4f
	.byte	0x33
	.byte	0xc
	.long	0xe090
	.uleb128 0x6
	.byte	0x4f
	.byte	0x33
	.byte	0xc
	.long	0xe0bb
	.uleb128 0x24
	.ascii "log\0"
	.byte	0x4e
	.byte	0xc2
	.byte	0x12
	.long	0x1286a
	.long	0x172b0
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x34
	.byte	0xc
	.long	0x1729a
	.uleb128 0x6
	.byte	0x4f
	.byte	0x34
	.byte	0xc
	.long	0xe0e6
	.uleb128 0x6
	.byte	0x4f
	.byte	0x34
	.byte	0xc
	.long	0xe107
	.uleb128 0x24
	.ascii "log10\0"
	.byte	0x4e
	.byte	0xc3
	.byte	0x12
	.long	0x1286a
	.long	0x172e0
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x35
	.byte	0xc
	.long	0x172c8
	.uleb128 0x6
	.byte	0x4f
	.byte	0x35
	.byte	0xc
	.long	0xe128
	.uleb128 0x6
	.byte	0x4f
	.byte	0x35
	.byte	0xc
	.long	0xe14d
	.uleb128 0x24
	.ascii "modf\0"
	.byte	0x4e
	.byte	0xf5
	.byte	0x12
	.long	0x1286a
	.long	0x17314
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x16f9d
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x36
	.byte	0xc
	.long	0x172f8
	.uleb128 0x6
	.byte	0x4f
	.byte	0x36
	.byte	0xc
	.long	0xe172
	.uleb128 0x6
	.byte	0x4f
	.byte	0x36
	.byte	0xc
	.long	0xe19c
	.uleb128 0x24
	.ascii "pow\0"
	.byte	0x4e
	.byte	0xc4
	.byte	0x12
	.long	0x1286a
	.long	0x17347
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x37
	.byte	0xc
	.long	0x1732c
	.uleb128 0x6
	.byte	0x4f
	.byte	0x37
	.byte	0xc
	.long	0xe1c6
	.uleb128 0x6
	.byte	0x4f
	.byte	0x37
	.byte	0xc
	.long	0xe1ed
	.uleb128 0x24
	.ascii "sqrt\0"
	.byte	0x4e
	.byte	0xc5
	.byte	0x12
	.long	0x1286a
	.long	0x17376
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x38
	.byte	0xc
	.long	0x1735f
	.uleb128 0x6
	.byte	0x4f
	.byte	0x38
	.byte	0xc
	.long	0xe214
	.uleb128 0x6
	.byte	0x4f
	.byte	0x38
	.byte	0xc
	.long	0xe237
	.uleb128 0x24
	.ascii "ceil\0"
	.byte	0x4e
	.byte	0xc6
	.byte	0x12
	.long	0x1286a
	.long	0x173a5
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x39
	.byte	0xc
	.long	0x1738e
	.uleb128 0x6
	.byte	0x4f
	.byte	0x39
	.byte	0xc
	.long	0xe25a
	.uleb128 0x6
	.byte	0x4f
	.byte	0x39
	.byte	0xc
	.long	0xe27c
	.uleb128 0x24
	.ascii "fabs\0"
	.byte	0x4e
	.byte	0xcc
	.byte	0x19
	.long	0x1286a
	.long	0x173d4
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x3a
	.byte	0xc
	.long	0x173bd
	.uleb128 0x6
	.byte	0x4f
	.byte	0x3a
	.byte	0xc
	.long	0xe29e
	.uleb128 0x6
	.byte	0x4f
	.byte	0x3a
	.byte	0xc
	.long	0xe2c0
	.uleb128 0x24
	.ascii "floor\0"
	.byte	0x4e
	.byte	0xc7
	.byte	0x12
	.long	0x1286a
	.long	0x17404
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x3b
	.byte	0xc
	.long	0x173ec
	.uleb128 0x6
	.byte	0x4f
	.byte	0x3b
	.byte	0xc
	.long	0xe2e2
	.uleb128 0x6
	.byte	0x4f
	.byte	0x3b
	.byte	0xc
	.long	0xe307
	.uleb128 0x24
	.ascii "fmod\0"
	.byte	0x4e
	.byte	0xf6
	.byte	0x12
	.long	0x1286a
	.long	0x17438
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x3c
	.byte	0xc
	.long	0x1741c
	.uleb128 0x6
	.byte	0x4f
	.byte	0x3c
	.byte	0xc
	.long	0xe32c
	.uleb128 0x6
	.byte	0x4f
	.byte	0x3c
	.byte	0xc
	.long	0xe355
	.uleb128 0x6
	.byte	0x4f
	.byte	0x3f
	.byte	0xc
	.long	0xe37e
	.uleb128 0x6
	.byte	0x4f
	.byte	0x3f
	.byte	0xc
	.long	0xe3a7
	.uleb128 0x6
	.byte	0x4f
	.byte	0x3f
	.byte	0xc
	.long	0xe3d0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x40
	.byte	0xc
	.long	0xe3f9
	.uleb128 0x6
	.byte	0x4f
	.byte	0x40
	.byte	0xc
	.long	0xe41f
	.uleb128 0x6
	.byte	0x4f
	.byte	0x40
	.byte	0xc
	.long	0xe445
	.uleb128 0x6
	.byte	0x4f
	.byte	0x41
	.byte	0xc
	.long	0xe46b
	.uleb128 0x6
	.byte	0x4f
	.byte	0x41
	.byte	0xc
	.long	0xe490
	.uleb128 0x6
	.byte	0x4f
	.byte	0x41
	.byte	0xc
	.long	0xe4b5
	.uleb128 0x6
	.byte	0x4f
	.byte	0x42
	.byte	0xc
	.long	0xe4da
	.uleb128 0x6
	.byte	0x4f
	.byte	0x42
	.byte	0xc
	.long	0xe4ff
	.uleb128 0x6
	.byte	0x4f
	.byte	0x42
	.byte	0xc
	.long	0xe524
	.uleb128 0x6
	.byte	0x4f
	.byte	0x43
	.byte	0xc
	.long	0xe549
	.uleb128 0x6
	.byte	0x4f
	.byte	0x43
	.byte	0xc
	.long	0xe56f
	.uleb128 0x6
	.byte	0x4f
	.byte	0x43
	.byte	0xc
	.long	0xe595
	.uleb128 0x6
	.byte	0x4f
	.byte	0x44
	.byte	0xc
	.long	0xe5bb
	.uleb128 0x6
	.byte	0x4f
	.byte	0x44
	.byte	0xc
	.long	0xe5e0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x44
	.byte	0xc
	.long	0xe605
	.uleb128 0x6
	.byte	0x4f
	.byte	0x45
	.byte	0xc
	.long	0xe62a
	.uleb128 0x6
	.byte	0x4f
	.byte	0x45
	.byte	0xc
	.long	0xe657
	.uleb128 0x6
	.byte	0x4f
	.byte	0x45
	.byte	0xc
	.long	0xe684
	.uleb128 0x6
	.byte	0x4f
	.byte	0x46
	.byte	0xc
	.long	0xe6b1
	.uleb128 0x6
	.byte	0x4f
	.byte	0x46
	.byte	0xc
	.long	0xe6e4
	.uleb128 0x6
	.byte	0x4f
	.byte	0x46
	.byte	0xc
	.long	0xe717
	.uleb128 0x6
	.byte	0x4f
	.byte	0x47
	.byte	0xc
	.long	0xe74a
	.uleb128 0x6
	.byte	0x4f
	.byte	0x47
	.byte	0xc
	.long	0xe774
	.uleb128 0x6
	.byte	0x4f
	.byte	0x47
	.byte	0xc
	.long	0xe79e
	.uleb128 0x6
	.byte	0x4f
	.byte	0x48
	.byte	0xc
	.long	0xe7c8
	.uleb128 0x6
	.byte	0x4f
	.byte	0x48
	.byte	0xc
	.long	0xe7f8
	.uleb128 0x6
	.byte	0x4f
	.byte	0x48
	.byte	0xc
	.long	0xe828
	.uleb128 0x6
	.byte	0x4f
	.byte	0x49
	.byte	0xc
	.long	0xe858
	.uleb128 0x6
	.byte	0x4f
	.byte	0x49
	.byte	0xc
	.long	0xe88a
	.uleb128 0x6
	.byte	0x4f
	.byte	0x49
	.byte	0xc
	.long	0xe8bc
	.uleb128 0x6
	.byte	0x4f
	.byte	0x4a
	.byte	0xc
	.long	0xe8ee
	.uleb128 0x6
	.byte	0x4f
	.byte	0x4a
	.byte	0xc
	.long	0xe91e
	.uleb128 0x6
	.byte	0x4f
	.byte	0x4a
	.byte	0xc
	.long	0xe94e
	.uleb128 0x13
	.ascii "acosh\0"
	.byte	0x4e
	.word	0x2c1
	.byte	0x19
	.long	0x1286a
	.long	0x17589
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x4e
	.byte	0xc
	.long	0x17570
	.uleb128 0x6
	.byte	0x4f
	.byte	0x4e
	.byte	0xc
	.long	0xe97e
	.uleb128 0x6
	.byte	0x4f
	.byte	0x4e
	.byte	0xc
	.long	0xe9a3
	.uleb128 0x13
	.ascii "asinh\0"
	.byte	0x4e
	.word	0x2c6
	.byte	0x19
	.long	0x1286a
	.long	0x175ba
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x4f
	.byte	0xc
	.long	0x175a1
	.uleb128 0x6
	.byte	0x4f
	.byte	0x4f
	.byte	0xc
	.long	0xe9c8
	.uleb128 0x6
	.byte	0x4f
	.byte	0x4f
	.byte	0xc
	.long	0xe9ed
	.uleb128 0x13
	.ascii "atanh\0"
	.byte	0x4e
	.word	0x2cb
	.byte	0x19
	.long	0x1286a
	.long	0x175eb
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x50
	.byte	0xc
	.long	0x175d2
	.uleb128 0x6
	.byte	0x4f
	.byte	0x50
	.byte	0xc
	.long	0xea12
	.uleb128 0x6
	.byte	0x4f
	.byte	0x50
	.byte	0xc
	.long	0xea37
	.uleb128 0x13
	.ascii "cbrt\0"
	.byte	0x4e
	.word	0x36d
	.byte	0x19
	.long	0x1286a
	.long	0x1761b
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x51
	.byte	0xc
	.long	0x17603
	.uleb128 0x6
	.byte	0x4f
	.byte	0x51
	.byte	0xc
	.long	0xea5c
	.uleb128 0x6
	.byte	0x4f
	.byte	0x51
	.byte	0xc
	.long	0xea7f
	.uleb128 0x44
	.secrel32	LASF117
	.byte	0x4e
	.word	0x427
	.byte	0x19
	.long	0x1286a
	.long	0x1764f
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x52
	.byte	0xc
	.long	0x17633
	.uleb128 0x6
	.byte	0x4f
	.byte	0x52
	.byte	0xc
	.long	0xeaa2
	.uleb128 0x6
	.byte	0x4f
	.byte	0x52
	.byte	0xc
	.long	0xeace
	.uleb128 0x13
	.ascii "erf\0"
	.byte	0x4e
	.word	0x385
	.byte	0x19
	.long	0x1286a
	.long	0x1767e
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x53
	.byte	0xc
	.long	0x17667
	.uleb128 0x6
	.byte	0x4f
	.byte	0x53
	.byte	0xc
	.long	0xeafa
	.uleb128 0x6
	.byte	0x4f
	.byte	0x53
	.byte	0xc
	.long	0xeb1b
	.uleb128 0x13
	.ascii "erfc\0"
	.byte	0x4e
	.word	0x38a
	.byte	0x19
	.long	0x1286a
	.long	0x176ae
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x54
	.byte	0xc
	.long	0x17696
	.uleb128 0x6
	.byte	0x4f
	.byte	0x54
	.byte	0xc
	.long	0xeb3c
	.uleb128 0x6
	.byte	0x4f
	.byte	0x54
	.byte	0xc
	.long	0xeb5f
	.uleb128 0x13
	.ascii "exp2\0"
	.byte	0x4e
	.word	0x2d8
	.byte	0x19
	.long	0x1286a
	.long	0x176de
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x55
	.byte	0xc
	.long	0x176c6
	.uleb128 0x6
	.byte	0x4f
	.byte	0x55
	.byte	0xc
	.long	0xeb82
	.uleb128 0x6
	.byte	0x4f
	.byte	0x55
	.byte	0xc
	.long	0xeba5
	.uleb128 0x13
	.ascii "expm1\0"
	.byte	0x4e
	.word	0x2de
	.byte	0x19
	.long	0x1286a
	.long	0x1770f
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x56
	.byte	0xc
	.long	0x176f6
	.uleb128 0x6
	.byte	0x4f
	.byte	0x56
	.byte	0xc
	.long	0xebc8
	.uleb128 0x6
	.byte	0x4f
	.byte	0x56
	.byte	0xc
	.long	0xebed
	.uleb128 0x13
	.ascii "fdim\0"
	.byte	0x4e
	.word	0x455
	.byte	0x19
	.long	0x1286a
	.long	0x17744
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x57
	.byte	0xc
	.long	0x17727
	.uleb128 0x6
	.byte	0x4f
	.byte	0x57
	.byte	0xc
	.long	0xec12
	.uleb128 0x6
	.byte	0x4f
	.byte	0x57
	.byte	0xc
	.long	0xec3b
	.uleb128 0x13
	.ascii "fma\0"
	.byte	0x4e
	.word	0x46a
	.byte	0x19
	.long	0x1286a
	.long	0x1777d
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x58
	.byte	0xc
	.long	0x1775c
	.uleb128 0x6
	.byte	0x4f
	.byte	0x58
	.byte	0xc
	.long	0xec64
	.uleb128 0x6
	.byte	0x4f
	.byte	0x58
	.byte	0xc
	.long	0xec91
	.uleb128 0x13
	.ascii "fmax\0"
	.byte	0x4e
	.word	0x45f
	.byte	0x19
	.long	0x1286a
	.long	0x177b2
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x59
	.byte	0xc
	.long	0x17795
	.uleb128 0x6
	.byte	0x4f
	.byte	0x59
	.byte	0xc
	.long	0xecbe
	.uleb128 0x6
	.byte	0x4f
	.byte	0x59
	.byte	0xc
	.long	0xece7
	.uleb128 0x13
	.ascii "fmin\0"
	.byte	0x4e
	.word	0x464
	.byte	0x19
	.long	0x1286a
	.long	0x177e7
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5a
	.byte	0xc
	.long	0x177ca
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5a
	.byte	0xc
	.long	0xed10
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5a
	.byte	0xc
	.long	0xed39
	.uleb128 0x13
	.ascii "hypot\0"
	.byte	0x4e
	.word	0x372
	.byte	0x19
	.long	0x1286a
	.long	0x1781d
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5b
	.byte	0xc
	.long	0x177ff
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5b
	.byte	0xc
	.long	0xed62
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5b
	.byte	0xc
	.long	0xed8d
	.uleb128 0x13
	.ascii "ilogb\0"
	.byte	0x4e
	.word	0x2ec
	.byte	0x16
	.long	0xf4
	.long	0x1784e
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5c
	.byte	0xc
	.long	0x17835
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5c
	.byte	0xc
	.long	0xedb8
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5c
	.byte	0xc
	.long	0xeddd
	.uleb128 0x44
	.secrel32	LASF118
	.byte	0x4e
	.word	0x38f
	.byte	0x19
	.long	0x1286a
	.long	0x1787d
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5d
	.byte	0xc
	.long	0x17866
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5d
	.byte	0xc
	.long	0xee02
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5d
	.byte	0xc
	.long	0xee26
	.uleb128 0x44
	.secrel32	LASF119
	.byte	0x4e
	.word	0x3b2
	.byte	0x25
	.long	0x159
	.long	0x178ac
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5e
	.byte	0xc
	.long	0x17895
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5e
	.byte	0xc
	.long	0xee4a
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5e
	.byte	0xc
	.long	0xee6e
	.uleb128 0x44
	.secrel32	LASF120
	.byte	0x4e
	.word	0x40e
	.byte	0x27
	.long	0x159
	.long	0x178db
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5f
	.byte	0xc
	.long	0x178c4
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5f
	.byte	0xc
	.long	0xee92
	.uleb128 0x6
	.byte	0x4f
	.byte	0x5f
	.byte	0xc
	.long	0xeeb7
	.uleb128 0x13
	.ascii "log1p\0"
	.byte	0x4e
	.word	0x300
	.byte	0x19
	.long	0x1286a
	.long	0x1790c
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x60
	.byte	0xc
	.long	0x178f3
	.uleb128 0x6
	.byte	0x4f
	.byte	0x60
	.byte	0xc
	.long	0xeedc
	.uleb128 0x6
	.byte	0x4f
	.byte	0x60
	.byte	0xc
	.long	0xef01
	.uleb128 0x13
	.ascii "log2\0"
	.byte	0x4e
	.word	0x305
	.byte	0x19
	.long	0x1286a
	.long	0x1793c
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x61
	.byte	0xc
	.long	0x17924
	.uleb128 0x6
	.byte	0x4f
	.byte	0x61
	.byte	0xc
	.long	0xef26
	.uleb128 0x6
	.byte	0x4f
	.byte	0x61
	.byte	0xc
	.long	0xef49
	.uleb128 0x13
	.ascii "logb\0"
	.byte	0x4e
	.word	0x30a
	.byte	0x19
	.long	0x1286a
	.long	0x1796c
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x62
	.byte	0xc
	.long	0x17954
	.uleb128 0x6
	.byte	0x4f
	.byte	0x62
	.byte	0xc
	.long	0xef6c
	.uleb128 0x6
	.byte	0x4f
	.byte	0x62
	.byte	0xc
	.long	0xef8f
	.uleb128 0x13
	.ascii "lrint\0"
	.byte	0x4e
	.word	0x3ae
	.byte	0x15
	.long	0x14d
	.long	0x1799d
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x63
	.byte	0xc
	.long	0x17984
	.uleb128 0x6
	.byte	0x4f
	.byte	0x63
	.byte	0xc
	.long	0xefb2
	.uleb128 0x6
	.byte	0x4f
	.byte	0x63
	.byte	0xc
	.long	0xefd7
	.uleb128 0x44
	.secrel32	LASF121
	.byte	0x4e
	.word	0x40b
	.byte	0x17
	.long	0x14d
	.long	0x179cc
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x64
	.byte	0xc
	.long	0x179b5
	.uleb128 0x6
	.byte	0x4f
	.byte	0x64
	.byte	0xc
	.long	0xeffc
	.uleb128 0x6
	.byte	0x4f
	.byte	0x64
	.byte	0xc
	.long	0xf020
	.uleb128 0x44
	.secrel32	LASF122
	.byte	0x4e
	.word	0x3a3
	.byte	0x19
	.long	0x1286a
	.long	0x179fb
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x65
	.byte	0xc
	.long	0x179e4
	.uleb128 0x6
	.byte	0x4f
	.byte	0x65
	.byte	0xc
	.long	0xf044
	.uleb128 0x6
	.byte	0x4f
	.byte	0x65
	.byte	0xc
	.long	0xf06b
	.uleb128 0x44
	.secrel32	LASF123
	.byte	0x4e
	.word	0x44a
	.byte	0x19
	.long	0x1286a
	.long	0x17a2f
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x66
	.byte	0xc
	.long	0x17a13
	.uleb128 0x6
	.byte	0x4f
	.byte	0x66
	.byte	0xc
	.long	0xf092
	.uleb128 0x6
	.byte	0x4f
	.byte	0x66
	.byte	0xc
	.long	0xf0bf
	.uleb128 0x44
	.secrel32	LASF124
	.byte	0x4e
	.word	0x44f
	.byte	0x19
	.long	0x1286a
	.long	0x17a63
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x12874
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x67
	.byte	0xc
	.long	0x17a47
	.uleb128 0x6
	.byte	0x4f
	.byte	0x67
	.byte	0xc
	.long	0xf0ec
	.uleb128 0x6
	.byte	0x4f
	.byte	0x67
	.byte	0xc
	.long	0xf11b
	.uleb128 0x44
	.secrel32	LASF125
	.byte	0x4e
	.word	0x41d
	.byte	0x19
	.long	0x1286a
	.long	0x17a97
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x68
	.byte	0xc
	.long	0x17a7b
	.uleb128 0x6
	.byte	0x4f
	.byte	0x68
	.byte	0xc
	.long	0xf14a
	.uleb128 0x6
	.byte	0x4f
	.byte	0x68
	.byte	0xc
	.long	0xf177
	.uleb128 0x44
	.secrel32	LASF126
	.byte	0x4e
	.word	0x422
	.byte	0x19
	.long	0x1286a
	.long	0x17ad0
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x482
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x69
	.byte	0xc
	.long	0x17aaf
	.uleb128 0x6
	.byte	0x4f
	.byte	0x69
	.byte	0xc
	.long	0xf1a4
	.uleb128 0x6
	.byte	0x4f
	.byte	0x69
	.byte	0xc
	.long	0xf1d5
	.uleb128 0x13
	.ascii "rint\0"
	.byte	0x4e
	.word	0x3a9
	.byte	0x17
	.long	0x1286a
	.long	0x17b00
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6a
	.byte	0xc
	.long	0x17ae8
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6a
	.byte	0xc
	.long	0xf206
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6a
	.byte	0xc
	.long	0xf229
	.uleb128 0x13
	.ascii "round\0"
	.byte	0x4e
	.word	0x406
	.byte	0x19
	.long	0x1286a
	.long	0x17b31
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6b
	.byte	0xc
	.long	0x17b18
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6b
	.byte	0xc
	.long	0xf24c
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6b
	.byte	0xc
	.long	0xf271
	.uleb128 0x44
	.secrel32	LASF127
	.byte	0x4e
	.word	0x367
	.byte	0x19
	.long	0x1286a
	.long	0x17b65
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0x14d
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6c
	.byte	0xc
	.long	0x17b49
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6c
	.byte	0xc
	.long	0xf296
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6c
	.byte	0xc
	.long	0xf2c1
	.uleb128 0x44
	.secrel32	LASF128
	.byte	0x4e
	.word	0x363
	.byte	0x19
	.long	0x1286a
	.long	0x17b99
	.uleb128 0x2
	.long	0x1286a
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6d
	.byte	0xc
	.long	0x17b7d
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6d
	.byte	0xc
	.long	0xf2ec
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6d
	.byte	0xc
	.long	0xf316
	.uleb128 0x44
	.secrel32	LASF129
	.byte	0x4e
	.word	0x396
	.byte	0x19
	.long	0x1286a
	.long	0x17bc8
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6e
	.byte	0xc
	.long	0x17bb1
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6e
	.byte	0xc
	.long	0xf340
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6e
	.byte	0xc
	.long	0xf364
	.uleb128 0x13
	.ascii "trunc\0"
	.byte	0x4e
	.word	0x414
	.byte	0x19
	.long	0x1286a
	.long	0x17bf9
	.uleb128 0x2
	.long	0x1286a
	.byte	0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6f
	.byte	0xc
	.long	0x17be0
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6f
	.byte	0xc
	.long	0xf388
	.uleb128 0x6
	.byte	0x4f
	.byte	0x6f
	.byte	0xc
	.long	0xf3ad
	.uleb128 0x9d
	.long	0x16f1d
	.byte	0xfe
	.byte	0x5
	.uleb128 0x5
	.byte	0x3
	.long	_stbi_write_png_compression_level
	.uleb128 0x9d
	.long	0x16efd
	.byte	0xff
	.byte	0x5
	.uleb128 0x5
	.byte	0x3
	.long	_stbi_write_tga_with_rle
	.uleb128 0xba
	.long	0x16f46
	.word	0x100
	.byte	0x5
	.uleb128 0x5
	.byte	0x3
	.long	_stbi_write_force_png_filter
	.uleb128 0x1
	.ascii "stbi__flip_vertically_on_write\0"
	.byte	0x5
	.word	0x103
	.byte	0xc
	.long	0xf4
	.uleb128 0x5
	.byte	0x3
	.long	__ZL30stbi__flip_vertically_on_write
	.uleb128 0x2f
	.byte	0x4c
	.byte	0x5
	.word	0x10b
	.byte	0x1
	.ascii "19stbi__write_context\0"
	.long	0x17cc8
	.uleb128 0x19
	.secrel32	LASF162
	.byte	0x5
	.word	0x10c
	.byte	0x15
	.long	0x17cc8
	.byte	0
	.uleb128 0x19
	.secrel32	LASF163
	.byte	0x5
	.word	0x10d
	.byte	0xa
	.long	0x7aa
	.byte	0x4
	.uleb128 0x19
	.secrel32	LASF164
	.byte	0x5
	.word	0x10e
	.byte	0x1b
	.long	0x17cce
	.byte	0x8
	.uleb128 0xa
	.ascii "buf_used\0"
	.byte	0x5
	.word	0x10f
	.byte	0x8
	.long	0xf4
	.byte	0x48
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x16f6a
	.uleb128 0x10
	.long	0x697
	.long	0x17cde
	.uleb128 0x12
	.long	0xe4
	.byte	0x3f
	.byte	0
	.uleb128 0x1a
	.ascii "stbi__write_context\0"
	.byte	0x5
	.word	0x110
	.byte	0x3
	.long	0x17c6a
	.uleb128 0x1a
	.ascii "stbiw_uint32\0"
	.byte	0x5
	.word	0x159
	.byte	0x16
	.long	0xe4
	.uleb128 0x10
	.long	0x6a8
	.long	0x17d21
	.uleb128 0x12
	.long	0xe4
	.byte	0x3f
	.byte	0
	.uleb128 0x14
	.long	0x17d11
	.uleb128 0x1
	.ascii "stbiw__jpg_ZigZag\0"
	.byte	0x5
	.word	0x4c4
	.byte	0x1c
	.long	0x17d21
	.uleb128 0x5
	.byte	0x3
	.long	__ZL17stbiw__jpg_ZigZag
	.uleb128 0x5d
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x6
	.word	0x15a
	.byte	0x1
	.long	0x17da0
	.uleb128 0x1f
	.ascii "STBI_default\0"
	.byte	0
	.uleb128 0x1f
	.ascii "STBI_grey\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "STBI_grey_alpha\0"
	.byte	0x2
	.uleb128 0x1f
	.ascii "STBI_rgb\0"
	.byte	0x3
	.uleb128 0x1f
	.ascii "STBI_rgb_alpha\0"
	.byte	0x4
	.byte	0
	.uleb128 0x1a
	.ascii "stbi_uc\0"
	.byte	0x6
	.word	0x164
	.byte	0x17
	.long	0x697
	.uleb128 0x14
	.long	0x17da0
	.uleb128 0x1a
	.ascii "stbi_us\0"
	.byte	0x6
	.word	0x165
	.byte	0x18
	.long	0x132
	.uleb128 0x2f
	.byte	0xc
	.byte	0x6
	.word	0x17d
	.byte	0x1
	.ascii "17stbi_io_callbacks\0"
	.long	0x17e12
	.uleb128 0xa
	.ascii "read\0"
	.byte	0x6
	.word	0x17e
	.byte	0x35
	.long	0x17e2b
	.byte	0
	.uleb128 0xa
	.ascii "skip\0"
	.byte	0x6
	.word	0x17f
	.byte	0x27
	.long	0x17e41
	.byte	0x4
	.uleb128 0xa
	.ascii "eof\0"
	.byte	0x6
	.word	0x180
	.byte	0x21
	.long	0x17e56
	.byte	0x8
	.byte	0
	.uleb128 0x59
	.long	0xf4
	.long	0x17e2b
	.uleb128 0x2
	.long	0x7aa
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x17e12
	.uleb128 0x60
	.long	0x17e41
	.uleb128 0x2
	.long	0x7aa
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x17e31
	.uleb128 0x59
	.long	0xf4
	.long	0x17e56
	.uleb128 0x2
	.long	0x7aa
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x17e47
	.uleb128 0x1a
	.ascii "stbi_io_callbacks\0"
	.byte	0x6
	.word	0x181
	.byte	0x3
	.long	0x17dc7
	.uleb128 0x14
	.long	0x17e5c
	.uleb128 0x1a
	.ascii "stbi__uint16\0"
	.byte	0x6
	.word	0x267
	.byte	0x12
	.long	0x165c7
	.uleb128 0x1a
	.ascii "stbi__int16\0"
	.byte	0x6
	.word	0x268
	.byte	0x12
	.long	0x165b7
	.uleb128 0x1a
	.ascii "stbi__uint32\0"
	.byte	0x6
	.word	0x269
	.byte	0x12
	.long	0x165e8
	.uleb128 0x14
	.long	0x17ea7
	.uleb128 0x1a
	.ascii "stbi__int32\0"
	.byte	0x6
	.word	0x26a
	.byte	0x12
	.long	0x165d8
	.uleb128 0x2f
	.byte	0xbc
	.byte	0x6
	.word	0x302
	.byte	0x1
	.ascii "13stbi__context\0"
	.long	0x1802c
	.uleb128 0xa
	.ascii "img_x\0"
	.byte	0x6
	.word	0x303
	.byte	0x11
	.long	0x17ea7
	.byte	0
	.uleb128 0xa
	.ascii "img_y\0"
	.byte	0x6
	.word	0x303
	.byte	0x18
	.long	0x17ea7
	.byte	0x4
	.uleb128 0x19
	.secrel32	LASF165
	.byte	0x6
	.word	0x304
	.byte	0x8
	.long	0xf4
	.byte	0x8
	.uleb128 0xa
	.ascii "img_out_n\0"
	.byte	0x6
	.word	0x304
	.byte	0xf
	.long	0xf4
	.byte	0xc
	.uleb128 0xa
	.ascii "io\0"
	.byte	0x6
	.word	0x306
	.byte	0x16
	.long	0x17e5c
	.byte	0x10
	.uleb128 0xa
	.ascii "io_user_data\0"
	.byte	0x6
	.word	0x307
	.byte	0xa
	.long	0x7aa
	.byte	0x1c
	.uleb128 0xa
	.ascii "read_from_callbacks\0"
	.byte	0x6
	.word	0x309
	.byte	0x8
	.long	0xf4
	.byte	0x20
	.uleb128 0xa
	.ascii "buflen\0"
	.byte	0x6
	.word	0x30a
	.byte	0x8
	.long	0xf4
	.byte	0x24
	.uleb128 0xa
	.ascii "buffer_start\0"
	.byte	0x6
	.word	0x30b
	.byte	0x1c
	.long	0x1802c
	.byte	0x28
	.uleb128 0xa
	.ascii "callback_already_read\0"
	.byte	0x6
	.word	0x30c
	.byte	0x8
	.long	0xf4
	.byte	0xa8
	.uleb128 0xa
	.ascii "img_buffer\0"
	.byte	0x6
	.word	0x30e
	.byte	0xd
	.long	0x1803c
	.byte	0xac
	.uleb128 0xa
	.ascii "img_buffer_end\0"
	.byte	0x6
	.word	0x30e
	.byte	0x1a
	.long	0x1803c
	.byte	0xb0
	.uleb128 0xa
	.ascii "img_buffer_original\0"
	.byte	0x6
	.word	0x30f
	.byte	0xd
	.long	0x1803c
	.byte	0xb4
	.uleb128 0xa
	.ascii "img_buffer_original_end\0"
	.byte	0x6
	.word	0x30f
	.byte	0x23
	.long	0x1803c
	.byte	0xb8
	.byte	0
	.uleb128 0x10
	.long	0x17da0
	.long	0x1803c
	.uleb128 0x12
	.long	0xe4
	.byte	0x7f
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x17da0
	.uleb128 0x1a
	.ascii "stbi__context\0"
	.byte	0x6
	.word	0x310
	.byte	0x3
	.long	0x17ed7
	.uleb128 0x1
	.ascii "stbi__stdio_callbacks\0"
	.byte	0x6
	.word	0x342
	.byte	0x1a
	.long	0x17e5c
	.uleb128 0x5
	.byte	0x3
	.long	__ZL21stbi__stdio_callbacks
	.uleb128 0x5d
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x6
	.word	0x35c
	.byte	0x1
	.long	0x180b0
	.uleb128 0x1f
	.ascii "STBI_ORDER_RGB\0"
	.byte	0
	.uleb128 0x1f
	.ascii "STBI_ORDER_BGR\0"
	.byte	0x1
	.byte	0
	.uleb128 0x2f
	.byte	0xc
	.byte	0x6
	.word	0x362
	.byte	0x1
	.ascii "17stbi__result_info\0"
	.long	0x18119
	.uleb128 0xa
	.ascii "bits_per_channel\0"
	.byte	0x6
	.word	0x363
	.byte	0x8
	.long	0xf4
	.byte	0
	.uleb128 0xa
	.ascii "num_channels\0"
	.byte	0x6
	.word	0x364
	.byte	0x8
	.long	0xf4
	.byte	0x4
	.uleb128 0xa
	.ascii "channel_order\0"
	.byte	0x6
	.word	0x365
	.byte	0x8
	.long	0xf4
	.byte	0x8
	.byte	0
	.uleb128 0x1a
	.ascii "stbi__result_info\0"
	.byte	0x6
	.word	0x366
	.byte	0x3
	.long	0x180b0
	.uleb128 0x7d
	.ascii "stbi__g_failure_reason\0"
	.byte	0x6
	.word	0x3a5
	.byte	0xd
	.long	0x12a7d
	.uleb128 0x1
	.ascii "stbi__vertically_flip_on_load_global\0"
	.byte	0x6
	.word	0x424
	.byte	0xc
	.long	0xf4
	.uleb128 0x5
	.byte	0x3
	.long	__ZL36stbi__vertically_flip_on_load_global
	.uleb128 0x7d
	.ascii "stbi__vertically_flip_on_load_local\0"
	.byte	0x6
	.word	0x42e
	.byte	0x1e
	.long	0xf4
	.uleb128 0x7d
	.ascii "stbi__vertically_flip_on_load_set\0"
	.byte	0x6
	.word	0x42e
	.byte	0x43
	.long	0xf4
	.uleb128 0x1
	.ascii "stbi__l2h_gamma\0"
	.byte	0x6
	.word	0x5e9
	.byte	0xe
	.long	0x7d5
	.uleb128 0x5
	.byte	0x3
	.long	__ZL15stbi__l2h_gamma
	.uleb128 0x1
	.ascii "stbi__l2h_scale\0"
	.byte	0x6
	.word	0x5e9
	.byte	0x24
	.long	0x7d5
	.uleb128 0x5
	.byte	0x3
	.long	__ZL15stbi__l2h_scale
	.uleb128 0x1
	.ascii "stbi__h2l_gamma_i\0"
	.byte	0x6
	.word	0x5ef
	.byte	0xe
	.long	0x7d5
	.uleb128 0x5
	.byte	0x3
	.long	__ZL17stbi__h2l_gamma_i
	.uleb128 0x1
	.ascii "stbi__h2l_scale_i\0"
	.byte	0x6
	.word	0x5ef
	.byte	0x2b
	.long	0x7d5
	.uleb128 0x5
	.byte	0x3
	.long	__ZL17stbi__h2l_scale_i
	.uleb128 0x5d
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x6
	.word	0x5fb
	.byte	0x1
	.long	0x182a8
	.uleb128 0x1f
	.ascii "STBI__SCAN_load\0"
	.byte	0
	.uleb128 0x1f
	.ascii "STBI__SCAN_type\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "STBI__SCAN_header\0"
	.byte	0x2
	.byte	0
	.uleb128 0x5e
	.word	0x690
	.byte	0x6
	.word	0x756
	.byte	0x1
	.ascii "13stbi__huffman\0"
	.long	0x18325
	.uleb128 0xa
	.ascii "fast\0"
	.byte	0x6
	.word	0x757
	.byte	0x20
	.long	0x18325
	.byte	0
	.uleb128 0x54
	.secrel32	LASF166
	.byte	0x6
	.word	0x759
	.byte	0x19
	.long	0x18336
	.word	0x200
	.uleb128 0x1e
	.ascii "values\0"
	.byte	0x6
	.word	0x75a
	.byte	0x17
	.long	0x18346
	.word	0x400
	.uleb128 0x54
	.secrel32	LASF47
	.byte	0x6
	.word	0x75b
	.byte	0x15
	.long	0x18356
	.word	0x500
	.uleb128 0x1e
	.ascii "maxcode\0"
	.byte	0x6
	.word	0x75c
	.byte	0x1b
	.long	0x18367
	.word	0x604
	.uleb128 0x54
	.secrel32	LASF167
	.byte	0x6
	.word	0x75d
	.byte	0x13
	.long	0x18377
	.word	0x64c
	.byte	0
	.uleb128 0x10
	.long	0x17da0
	.long	0x18336
	.uleb128 0x3a
	.long	0xe4
	.word	0x1ff
	.byte	0
	.uleb128 0x10
	.long	0x17e7c
	.long	0x18346
	.uleb128 0x12
	.long	0xe4
	.byte	0xff
	.byte	0
	.uleb128 0x10
	.long	0x17da0
	.long	0x18356
	.uleb128 0x12
	.long	0xe4
	.byte	0xff
	.byte	0
	.uleb128 0x10
	.long	0x17da0
	.long	0x18367
	.uleb128 0x3a
	.long	0xe4
	.word	0x100
	.byte	0
	.uleb128 0x10
	.long	0xe4
	.long	0x18377
	.uleb128 0x12
	.long	0xe4
	.byte	0x11
	.byte	0
	.uleb128 0x10
	.long	0xf4
	.long	0x18387
	.uleb128 0x12
	.long	0xe4
	.byte	0x10
	.byte	0
	.uleb128 0x1a
	.ascii "stbi__huffman\0"
	.byte	0x6
	.word	0x75e
	.byte	0x3
	.long	0x182a8
	.uleb128 0x5e
	.word	0x4818
	.byte	0x6
	.word	0x761
	.byte	0x1
	.ascii "10stbi__jpeg\0"
	.long	0x18761
	.uleb128 0x6b
	.byte	0x48
	.byte	0x6
	.word	0x76f
	.byte	0x4
	.long	0x184c7
	.uleb128 0xa
	.ascii "id\0"
	.byte	0x6
	.word	0x770
	.byte	0xb
	.long	0xf4
	.byte	0
	.uleb128 0xa
	.ascii "h\0"
	.byte	0x6
	.word	0x771
	.byte	0xb
	.long	0xf4
	.byte	0x4
	.uleb128 0xa
	.ascii "v\0"
	.byte	0x6
	.word	0x771
	.byte	0xd
	.long	0xf4
	.byte	0x8
	.uleb128 0xa
	.ascii "tq\0"
	.byte	0x6
	.word	0x772
	.byte	0xb
	.long	0xf4
	.byte	0xc
	.uleb128 0xa
	.ascii "hd\0"
	.byte	0x6
	.word	0x773
	.byte	0xb
	.long	0xf4
	.byte	0x10
	.uleb128 0xa
	.ascii "ha\0"
	.byte	0x6
	.word	0x773
	.byte	0xe
	.long	0xf4
	.byte	0x14
	.uleb128 0xa
	.ascii "dc_pred\0"
	.byte	0x6
	.word	0x774
	.byte	0xb
	.long	0xf4
	.byte	0x18
	.uleb128 0xa
	.ascii "x\0"
	.byte	0x6
	.word	0x776
	.byte	0xb
	.long	0xf4
	.byte	0x1c
	.uleb128 0xa
	.ascii "y\0"
	.byte	0x6
	.word	0x776
	.byte	0xd
	.long	0xf4
	.byte	0x20
	.uleb128 0xa
	.ascii "w2\0"
	.byte	0x6
	.word	0x776
	.byte	0xf
	.long	0xf4
	.byte	0x24
	.uleb128 0xa
	.ascii "h2\0"
	.byte	0x6
	.word	0x776
	.byte	0x12
	.long	0xf4
	.byte	0x28
	.uleb128 0x19
	.secrel32	LASF69
	.byte	0x6
	.word	0x777
	.byte	0x10
	.long	0x1803c
	.byte	0x2c
	.uleb128 0x19
	.secrel32	LASF168
	.byte	0x6
	.word	0x778
	.byte	0xd
	.long	0x7aa
	.byte	0x30
	.uleb128 0xa
	.ascii "raw_coeff\0"
	.byte	0x6
	.word	0x778
	.byte	0x18
	.long	0x7aa
	.byte	0x34
	.uleb128 0xa
	.ascii "linebuf\0"
	.byte	0x6
	.word	0x779
	.byte	0x10
	.long	0x1803c
	.byte	0x38
	.uleb128 0xa
	.ascii "coeff\0"
	.byte	0x6
	.word	0x77a
	.byte	0x10
	.long	0x94e
	.byte	0x3c
	.uleb128 0xa
	.ascii "coeff_w\0"
	.byte	0x6
	.word	0x77b
	.byte	0x10
	.long	0xf4
	.byte	0x40
	.uleb128 0xa
	.ascii "coeff_h\0"
	.byte	0x6
	.word	0x77b
	.byte	0x19
	.long	0xf4
	.byte	0x44
	.byte	0
	.uleb128 0xa
	.ascii "s\0"
	.byte	0x6
	.word	0x762
	.byte	0x13
	.long	0x18761
	.byte	0
	.uleb128 0xa
	.ascii "huff_dc\0"
	.byte	0x6
	.word	0x763
	.byte	0x1b
	.long	0x18767
	.byte	0x4
	.uleb128 0x1e
	.ascii "huff_ac\0"
	.byte	0x6
	.word	0x764
	.byte	0x1b
	.long	0x18767
	.word	0x1a44
	.uleb128 0x54
	.secrel32	LASF169
	.byte	0x6
	.word	0x765
	.byte	0x1e
	.long	0x18777
	.word	0x3484
	.uleb128 0x1e
	.ascii "fast_ac\0"
	.byte	0x6
	.word	0x766
	.byte	0x29
	.long	0x1878d
	.word	0x3684
	.uleb128 0x1e
	.ascii "img_h_max\0"
	.byte	0x6
	.word	0x769
	.byte	0x8
	.long	0xf4
	.word	0x4684
	.uleb128 0x1e
	.ascii "img_v_max\0"
	.byte	0x6
	.word	0x769
	.byte	0x13
	.long	0xf4
	.word	0x4688
	.uleb128 0x1e
	.ascii "img_mcu_x\0"
	.byte	0x6
	.word	0x76a
	.byte	0x8
	.long	0xf4
	.word	0x468c
	.uleb128 0x1e
	.ascii "img_mcu_y\0"
	.byte	0x6
	.word	0x76a
	.byte	0x13
	.long	0xf4
	.word	0x4690
	.uleb128 0x1e
	.ascii "img_mcu_w\0"
	.byte	0x6
	.word	0x76b
	.byte	0x8
	.long	0xf4
	.word	0x4694
	.uleb128 0x1e
	.ascii "img_mcu_h\0"
	.byte	0x6
	.word	0x76b
	.byte	0x13
	.long	0xf4
	.word	0x4698
	.uleb128 0x1e
	.ascii "img_comp\0"
	.byte	0x6
	.word	0x77c
	.byte	0x10
	.long	0x187a4
	.word	0x469c
	.uleb128 0x54
	.secrel32	LASF170
	.byte	0x6
	.word	0x77e
	.byte	0x13
	.long	0x17ea7
	.word	0x47bc
	.uleb128 0x1e
	.ascii "code_bits\0"
	.byte	0x6
	.word	0x77f
	.byte	0x13
	.long	0xf4
	.word	0x47c0
	.uleb128 0x1e
	.ascii "marker\0"
	.byte	0x6
	.word	0x780
	.byte	0x13
	.long	0x697
	.word	0x47c4
	.uleb128 0x1e
	.ascii "nomore\0"
	.byte	0x6
	.word	0x781
	.byte	0x13
	.long	0xf4
	.word	0x47c8
	.uleb128 0x1e
	.ascii "progressive\0"
	.byte	0x6
	.word	0x783
	.byte	0x13
	.long	0xf4
	.word	0x47cc
	.uleb128 0x1e
	.ascii "spec_start\0"
	.byte	0x6
	.word	0x784
	.byte	0x13
	.long	0xf4
	.word	0x47d0
	.uleb128 0x1e
	.ascii "spec_end\0"
	.byte	0x6
	.word	0x785
	.byte	0x13
	.long	0xf4
	.word	0x47d4
	.uleb128 0x1e
	.ascii "succ_high\0"
	.byte	0x6
	.word	0x786
	.byte	0x13
	.long	0xf4
	.word	0x47d8
	.uleb128 0x1e
	.ascii "succ_low\0"
	.byte	0x6
	.word	0x787
	.byte	0x13
	.long	0xf4
	.word	0x47dc
	.uleb128 0x1e
	.ascii "eob_run\0"
	.byte	0x6
	.word	0x788
	.byte	0x13
	.long	0xf4
	.word	0x47e0
	.uleb128 0x1e
	.ascii "jfif\0"
	.byte	0x6
	.word	0x789
	.byte	0x13
	.long	0xf4
	.word	0x47e4
	.uleb128 0x1e
	.ascii "app14_color_transform\0"
	.byte	0x6
	.word	0x78a
	.byte	0x13
	.long	0xf4
	.word	0x47e8
	.uleb128 0x1e
	.ascii "rgb\0"
	.byte	0x6
	.word	0x78b
	.byte	0x13
	.long	0xf4
	.word	0x47ec
	.uleb128 0x1e
	.ascii "scan_n\0"
	.byte	0x6
	.word	0x78d
	.byte	0x8
	.long	0xf4
	.word	0x47f0
	.uleb128 0x1e
	.ascii "order\0"
	.byte	0x6
	.word	0x78d
	.byte	0x17
	.long	0x187b4
	.word	0x47f4
	.uleb128 0x1e
	.ascii "restart_interval\0"
	.byte	0x6
	.word	0x78e
	.byte	0x8
	.long	0xf4
	.word	0x4804
	.uleb128 0x1e
	.ascii "todo\0"
	.byte	0x6
	.word	0x78e
	.byte	0x1a
	.long	0xf4
	.word	0x4808
	.uleb128 0x1e
	.ascii "idct_block_kernel\0"
	.byte	0x6
	.word	0x791
	.byte	0x4a
	.long	0x187d9
	.word	0x480c
	.uleb128 0x1e
	.ascii "YCbCr_to_RGB_kernel\0"
	.byte	0x6
	.word	0x792
	.byte	0x7b
	.long	0x18809
	.word	0x4810
	.uleb128 0x1e
	.ascii "resample_row_hv_2_kernel\0"
	.byte	0x6
	.word	0x793
	.byte	0x67
	.long	0x18832
	.word	0x4814
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x18042
	.uleb128 0x10
	.long	0x18387
	.long	0x18777
	.uleb128 0x12
	.long	0xe4
	.byte	0x3
	.byte	0
	.uleb128 0x10
	.long	0x17e7c
	.long	0x1878d
	.uleb128 0x12
	.long	0xe4
	.byte	0x3
	.uleb128 0x12
	.long	0xe4
	.byte	0x3f
	.byte	0
	.uleb128 0x10
	.long	0x17e92
	.long	0x187a4
	.uleb128 0x12
	.long	0xe4
	.byte	0x3
	.uleb128 0x3a
	.long	0xe4
	.word	0x1ff
	.byte	0
	.uleb128 0x10
	.long	0x183b6
	.long	0x187b4
	.uleb128 0x12
	.long	0xe4
	.byte	0x3
	.byte	0
	.uleb128 0x10
	.long	0xf4
	.long	0x187c4
	.uleb128 0x12
	.long	0xe4
	.byte	0x3
	.byte	0
	.uleb128 0x60
	.long	0x187d9
	.uleb128 0x2
	.long	0x1803c
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0x94e
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x187c4
	.uleb128 0x60
	.long	0x18803
	.uleb128 0x2
	.long	0x1803c
	.uleb128 0x2
	.long	0x18803
	.uleb128 0x2
	.long	0x18803
	.uleb128 0x2
	.long	0x18803
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x17db1
	.uleb128 0xc
	.byte	0x4
	.long	0x187df
	.uleb128 0x59
	.long	0x1803c
	.long	0x18832
	.uleb128 0x2
	.long	0x1803c
	.uleb128 0x2
	.long	0x1803c
	.uleb128 0x2
	.long	0x1803c
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1880f
	.uleb128 0x1a
	.ascii "stbi__jpeg\0"
	.byte	0x6
	.word	0x794
	.byte	0x3
	.long	0x1839e
	.uleb128 0x10
	.long	0x17ebd
	.long	0x1885c
	.uleb128 0x12
	.long	0xe4
	.byte	0x10
	.byte	0
	.uleb128 0x14
	.long	0x1884c
	.uleb128 0x1
	.ascii "stbi__bmask\0"
	.byte	0x6
	.word	0x7ee
	.byte	0x1b
	.long	0x1885c
	.uleb128 0x5
	.byte	0x3
	.long	__ZL11stbi__bmask
	.uleb128 0x10
	.long	0xfb
	.long	0x1888c
	.uleb128 0x12
	.long	0xe4
	.byte	0xf
	.byte	0
	.uleb128 0x14
	.long	0x1887c
	.uleb128 0x1
	.ascii "stbi__jbias\0"
	.byte	0x6
	.word	0x823
	.byte	0x12
	.long	0x1888c
	.uleb128 0x5
	.byte	0x3
	.long	__ZL11stbi__jbias
	.uleb128 0x10
	.long	0x17db1
	.long	0x188bc
	.uleb128 0x12
	.long	0xe4
	.byte	0x4e
	.byte	0
	.uleb128 0x14
	.long	0x188ac
	.uleb128 0x1
	.ascii "stbi__jpeg_dezigzag\0"
	.byte	0x6
	.word	0x84e
	.byte	0x16
	.long	0x188bc
	.uleb128 0x5
	.byte	0x3
	.long	__ZL19stbi__jpeg_dezigzag
	.uleb128 0x1a
	.ascii "resample_row_func\0"
	.byte	0x6
	.word	0xd16
	.byte	0x14
	.long	0x18832
	.uleb128 0x2f
	.byte	0x20
	.byte	0x6
	.word	0xea4
	.byte	0x1
	.ascii "14stbi__resample\0"
	.long	0x18999
	.uleb128 0xa
	.ascii "resample\0"
	.byte	0x6
	.word	0xea5
	.byte	0x16
	.long	0x188e4
	.byte	0
	.uleb128 0xa
	.ascii "line0\0"
	.byte	0x6
	.word	0xea6
	.byte	0xd
	.long	0x1803c
	.byte	0x4
	.uleb128 0xa
	.ascii "line1\0"
	.byte	0x6
	.word	0xea6
	.byte	0x14
	.long	0x1803c
	.byte	0x8
	.uleb128 0xa
	.ascii "hs\0"
	.byte	0x6
	.word	0xea7
	.byte	0x8
	.long	0xf4
	.byte	0xc
	.uleb128 0xa
	.ascii "vs\0"
	.byte	0x6
	.word	0xea7
	.byte	0xb
	.long	0xf4
	.byte	0x10
	.uleb128 0xa
	.ascii "w_lores\0"
	.byte	0x6
	.word	0xea8
	.byte	0x8
	.long	0xf4
	.byte	0x14
	.uleb128 0xa
	.ascii "ystep\0"
	.byte	0x6
	.word	0xea9
	.byte	0x8
	.long	0xf4
	.byte	0x18
	.uleb128 0xa
	.ascii "ypos\0"
	.byte	0x6
	.word	0xeaa
	.byte	0x8
	.long	0xf4
	.byte	0x1c
	.byte	0
	.uleb128 0x1a
	.ascii "stbi__resample\0"
	.byte	0x6
	.word	0xeab
	.byte	0x3
	.long	0x188ff
	.uleb128 0x5e
	.word	0x7e4
	.byte	0x6
	.word	0xf92
	.byte	0x1
	.ascii "14stbi__zhuffman\0"
	.long	0x18a3a
	.uleb128 0xa
	.ascii "fast\0"
	.byte	0x6
	.word	0xf93
	.byte	0x2b
	.long	0x18a3a
	.byte	0
	.uleb128 0x1e
	.ascii "firstcode\0"
	.byte	0x6
	.word	0xf94
	.byte	0x1d
	.long	0x18a4b
	.word	0x400
	.uleb128 0x1e
	.ascii "maxcode\0"
	.byte	0x6
	.word	0xf95
	.byte	0x12
	.long	0x18377
	.word	0x420
	.uleb128 0x1e
	.ascii "firstsymbol\0"
	.byte	0x6
	.word	0xf96
	.byte	0x1f
	.long	0x18a4b
	.word	0x464
	.uleb128 0x54
	.secrel32	LASF47
	.byte	0x6
	.word	0xf97
	.byte	0x15
	.long	0x18a5b
	.word	0x484
	.uleb128 0x54
	.secrel32	LASF87
	.byte	0x6
	.word	0xf98
	.byte	0x1a
	.long	0x18a6c
	.word	0x5a4
	.byte	0
	.uleb128 0x10
	.long	0x17e7c
	.long	0x18a4b
	.uleb128 0x3a
	.long	0xe4
	.word	0x1ff
	.byte	0
	.uleb128 0x10
	.long	0x17e7c
	.long	0x18a5b
	.uleb128 0x12
	.long	0xe4
	.byte	0xf
	.byte	0
	.uleb128 0x10
	.long	0x17da0
	.long	0x18a6c
	.uleb128 0x3a
	.long	0xe4
	.word	0x11f
	.byte	0
	.uleb128 0x10
	.long	0x17e7c
	.long	0x18a7d
	.uleb128 0x3a
	.long	0xe4
	.word	0x11f
	.byte	0
	.uleb128 0x1a
	.ascii "stbi__zhuffman\0"
	.byte	0x6
	.word	0xf99
	.byte	0x3
	.long	0x189b1
	.uleb128 0x5e
	.word	0xfe8
	.byte	0x6
	.word	0xfe2
	.byte	0x1
	.ascii "10stbi__zbuf\0"
	.long	0x18b6e
	.uleb128 0xa
	.ascii "zbuffer\0"
	.byte	0x6
	.word	0xfe3
	.byte	0xd
	.long	0x1803c
	.byte	0
	.uleb128 0xa
	.ascii "zbuffer_end\0"
	.byte	0x6
	.word	0xfe3
	.byte	0x17
	.long	0x1803c
	.byte	0x4
	.uleb128 0xa
	.ascii "num_bits\0"
	.byte	0x6
	.word	0xfe4
	.byte	0x8
	.long	0xf4
	.byte	0x8
	.uleb128 0x19
	.secrel32	LASF170
	.byte	0x6
	.word	0xfe5
	.byte	0x11
	.long	0x17ea7
	.byte	0xc
	.uleb128 0xa
	.ascii "zout\0"
	.byte	0x6
	.word	0xfe7
	.byte	0xa
	.long	0x461
	.byte	0x10
	.uleb128 0xa
	.ascii "zout_start\0"
	.byte	0x6
	.word	0xfe8
	.byte	0xa
	.long	0x461
	.byte	0x14
	.uleb128 0xa
	.ascii "zout_end\0"
	.byte	0x6
	.word	0xfe9
	.byte	0xa
	.long	0x461
	.byte	0x18
	.uleb128 0xa
	.ascii "z_expandable\0"
	.byte	0x6
	.word	0xfea
	.byte	0xa
	.long	0xf4
	.byte	0x1c
	.uleb128 0xa
	.ascii "z_length\0"
	.byte	0x6
	.word	0xfec
	.byte	0x13
	.long	0x18a7d
	.byte	0x20
	.uleb128 0x1e
	.ascii "z_distance\0"
	.byte	0x6
	.word	0xfec
	.byte	0x1d
	.long	0x18a7d
	.word	0x804
	.byte	0
	.uleb128 0x1a
	.ascii "stbi__zbuf\0"
	.byte	0x6
	.word	0xfed
	.byte	0x3
	.long	0x18a95
	.uleb128 0x10
	.long	0xfb
	.long	0x18b92
	.uleb128 0x12
	.long	0xe4
	.byte	0x1e
	.byte	0
	.uleb128 0x14
	.long	0x18b82
	.uleb128 0x1
	.ascii "stbi__zlength_base\0"
	.byte	0x6
	.word	0x104b
	.byte	0x12
	.long	0x18b92
	.uleb128 0x5
	.byte	0x3
	.long	__ZL18stbi__zlength_base
	.uleb128 0x1
	.ascii "stbi__zlength_extra\0"
	.byte	0x6
	.word	0x1050
	.byte	0x12
	.long	0x18b92
	.uleb128 0x5
	.byte	0x3
	.long	__ZL19stbi__zlength_extra
	.uleb128 0x10
	.long	0xfb
	.long	0x18bec
	.uleb128 0x12
	.long	0xe4
	.byte	0x1f
	.byte	0
	.uleb128 0x14
	.long	0x18bdc
	.uleb128 0x1
	.ascii "stbi__zdist_base\0"
	.byte	0x6
	.word	0x1053
	.byte	0x12
	.long	0x18bec
	.uleb128 0x5
	.byte	0x3
	.long	__ZL16stbi__zdist_base
	.uleb128 0x1
	.ascii "stbi__zdist_extra\0"
	.byte	0x6
	.word	0x1056
	.byte	0x12
	.long	0x18bec
	.uleb128 0x5
	.byte	0x3
	.long	__ZL17stbi__zdist_extra
	.uleb128 0x10
	.long	0x17db1
	.long	0x18c43
	.uleb128 0x3a
	.long	0xe4
	.word	0x11f
	.byte	0
	.uleb128 0x14
	.long	0x18c32
	.uleb128 0x1
	.ascii "stbi__zdefault_length\0"
	.byte	0x6
	.word	0x10e0
	.byte	0x16
	.long	0x18c43
	.uleb128 0x5
	.byte	0x3
	.long	__ZL21stbi__zdefault_length
	.uleb128 0x10
	.long	0x17db1
	.long	0x18c7d
	.uleb128 0x12
	.long	0xe4
	.byte	0x1f
	.byte	0
	.uleb128 0x14
	.long	0x18c6d
	.uleb128 0x1
	.ascii "stbi__zdefault_distance\0"
	.byte	0x6
	.word	0x10ec
	.byte	0x16
	.long	0x18c7d
	.uleb128 0x5
	.byte	0x3
	.long	__ZL23stbi__zdefault_distance
	.uleb128 0x2f
	.byte	0x8
	.byte	0x6
	.word	0x117b
	.byte	0x1
	.ascii "14stbi__pngchunk\0"
	.long	0x18ce1
	.uleb128 0x19
	.secrel32	LASF48
	.byte	0x6
	.word	0x117c
	.byte	0x11
	.long	0x17ea7
	.byte	0
	.uleb128 0x19
	.secrel32	LASF132
	.byte	0x6
	.word	0x117d
	.byte	0x11
	.long	0x17ea7
	.byte	0x4
	.byte	0
	.uleb128 0x1a
	.ascii "stbi__pngchunk\0"
	.byte	0x6
	.word	0x117e
	.byte	0x3
	.long	0x18ca9
	.uleb128 0x2f
	.byte	0x14
	.byte	0x6
	.word	0x1192
	.byte	0x1
	.ascii "9stbi__png\0"
	.long	0x18d5a
	.uleb128 0xa
	.ascii "s\0"
	.byte	0x6
	.word	0x1193
	.byte	0x13
	.long	0x18761
	.byte	0
	.uleb128 0xa
	.ascii "idata\0"
	.byte	0x6
	.word	0x1194
	.byte	0xd
	.long	0x1803c
	.byte	0x4
	.uleb128 0xa
	.ascii "expanded\0"
	.byte	0x6
	.word	0x1194
	.byte	0x15
	.long	0x1803c
	.byte	0x8
	.uleb128 0xa
	.ascii "out\0"
	.byte	0x6
	.word	0x1194
	.byte	0x20
	.long	0x1803c
	.byte	0xc
	.uleb128 0x19
	.secrel32	LASF171
	.byte	0x6
	.word	0x1195
	.byte	0x8
	.long	0xf4
	.byte	0x10
	.byte	0
	.uleb128 0x1a
	.ascii "stbi__png\0"
	.byte	0x6
	.word	0x1196
	.byte	0x3
	.long	0x18cf9
	.uleb128 0x5d
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x6
	.word	0x1199
	.byte	0x6
	.long	0x18def
	.uleb128 0x1f
	.ascii "STBI__F_none\0"
	.byte	0
	.uleb128 0x1f
	.ascii "STBI__F_sub\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "STBI__F_up\0"
	.byte	0x2
	.uleb128 0x1f
	.ascii "STBI__F_avg\0"
	.byte	0x3
	.uleb128 0x1f
	.ascii "STBI__F_paeth\0"
	.byte	0x4
	.uleb128 0x1f
	.ascii "STBI__F_avg_first\0"
	.byte	0x5
	.uleb128 0x1f
	.ascii "STBI__F_paeth_first\0"
	.byte	0x6
	.byte	0
	.uleb128 0x10
	.long	0x17da0
	.long	0x18dff
	.uleb128 0x12
	.long	0xe4
	.byte	0x4
	.byte	0
	.uleb128 0x1
	.ascii "first_row_filter\0"
	.byte	0x6
	.word	0x11a4
	.byte	0x10
	.long	0x18def
	.uleb128 0x5
	.byte	0x3
	.long	__ZL16first_row_filter
	.uleb128 0x10
	.long	0x17db1
	.long	0x18e2f
	.uleb128 0x12
	.long	0xe4
	.byte	0x8
	.byte	0
	.uleb128 0x14
	.long	0x18e1f
	.uleb128 0x1
	.ascii "stbi__depth_scale_table\0"
	.byte	0x6
	.word	0x11b8
	.byte	0x16
	.long	0x18e2f
	.uleb128 0x5
	.byte	0x3
	.long	__ZL23stbi__depth_scale_table
	.uleb128 0x1
	.ascii "stbi__unpremultiply_on_load\0"
	.byte	0x6
	.word	0x1312
	.byte	0xc
	.long	0xf4
	.uleb128 0x5
	.byte	0x3
	.long	__ZL27stbi__unpremultiply_on_load
	.uleb128 0x1
	.ascii "stbi__de_iphone_flag\0"
	.byte	0x6
	.word	0x1313
	.byte	0xc
	.long	0xf4
	.uleb128 0x5
	.byte	0x3
	.long	__ZL20stbi__de_iphone_flag
	.uleb128 0x2f
	.byte	0x24
	.byte	0x6
	.word	0x1495
	.byte	0x1
	.ascii "14stbi__bmp_data\0"
	.long	0x18f49
	.uleb128 0xa
	.ascii "bpp\0"
	.byte	0x6
	.word	0x1496
	.byte	0x8
	.long	0xf4
	.byte	0
	.uleb128 0x19
	.secrel32	LASF172
	.byte	0x6
	.word	0x1496
	.byte	0xd
	.long	0xf4
	.byte	0x4
	.uleb128 0xa
	.ascii "hsz\0"
	.byte	0x6
	.word	0x1496
	.byte	0x15
	.long	0xf4
	.byte	0x8
	.uleb128 0xa
	.ascii "mr\0"
	.byte	0x6
	.word	0x1497
	.byte	0x11
	.long	0xe4
	.byte	0xc
	.uleb128 0xa
	.ascii "mg\0"
	.byte	0x6
	.word	0x1497
	.byte	0x14
	.long	0xe4
	.byte	0x10
	.uleb128 0xa
	.ascii "mb\0"
	.byte	0x6
	.word	0x1497
	.byte	0x17
	.long	0xe4
	.byte	0x14
	.uleb128 0xa
	.ascii "ma\0"
	.byte	0x6
	.word	0x1497
	.byte	0x1a
	.long	0xe4
	.byte	0x18
	.uleb128 0xa
	.ascii "all_a\0"
	.byte	0x6
	.word	0x1497
	.byte	0x1e
	.long	0xe4
	.byte	0x1c
	.uleb128 0xa
	.ascii "extra_read\0"
	.byte	0x6
	.word	0x1498
	.byte	0x8
	.long	0xf4
	.byte	0x20
	.byte	0
	.uleb128 0x1a
	.ascii "stbi__bmp_data\0"
	.byte	0x6
	.word	0x1499
	.byte	0x3
	.long	0x18eaa
	.uleb128 0x2f
	.byte	0x3
	.byte	0x6
	.word	0x1826
	.byte	0x1
	.ascii "16stbi__pic_packet\0"
	.long	0x18fa9
	.uleb128 0x19
	.secrel32	LASF47
	.byte	0x6
	.word	0x1827
	.byte	0xc
	.long	0x17da0
	.byte	0
	.uleb128 0x19
	.secrel32	LASF132
	.byte	0x6
	.word	0x1827
	.byte	0x11
	.long	0x17da0
	.byte	0x1
	.uleb128 0x19
	.secrel32	LASF173
	.byte	0x6
	.word	0x1827
	.byte	0x16
	.long	0x17da0
	.byte	0x2
	.byte	0
	.uleb128 0x1a
	.ascii "stbi__pic_packet\0"
	.byte	0x6
	.word	0x1828
	.byte	0x3
	.long	0x18f61
	.uleb128 0x2f
	.byte	0x4
	.byte	0x6
	.word	0x18e4
	.byte	0x1
	.ascii "13stbi__gif_lzw\0"
	.long	0x1900e
	.uleb128 0xa
	.ascii "prefix\0"
	.byte	0x6
	.word	0x18e5
	.byte	0x10
	.long	0x17e92
	.byte	0
	.uleb128 0x19
	.secrel32	LASF174
	.byte	0x6
	.word	0x18e6
	.byte	0xc
	.long	0x17da0
	.byte	0x2
	.uleb128 0xa
	.ascii "suffix\0"
	.byte	0x6
	.word	0x18e7
	.byte	0xc
	.long	0x17da0
	.byte	0x3
	.byte	0
	.uleb128 0x1a
	.ascii "stbi__gif_lzw\0"
	.byte	0x6
	.word	0x18e8
	.byte	0x3
	.long	0x18fc3
	.uleb128 0x5e
	.word	0x8858
	.byte	0x6
	.word	0x18eb
	.byte	0x1
	.ascii "9stbi__gif\0"
	.long	0x191e7
	.uleb128 0xa
	.ascii "w\0"
	.byte	0x6
	.word	0x18ec
	.byte	0x8
	.long	0xf4
	.byte	0
	.uleb128 0xa
	.ascii "h\0"
	.byte	0x6
	.word	0x18ec
	.byte	0xa
	.long	0xf4
	.byte	0x4
	.uleb128 0xa
	.ascii "out\0"
	.byte	0x6
	.word	0x18ed
	.byte	0xd
	.long	0x1803c
	.byte	0x8
	.uleb128 0xa
	.ascii "background\0"
	.byte	0x6
	.word	0x18ee
	.byte	0xd
	.long	0x1803c
	.byte	0xc
	.uleb128 0xa
	.ascii "history\0"
	.byte	0x6
	.word	0x18ef
	.byte	0xd
	.long	0x1803c
	.byte	0x10
	.uleb128 0x19
	.secrel32	LASF175
	.byte	0x6
	.word	0x18f0
	.byte	0x8
	.long	0xf4
	.byte	0x14
	.uleb128 0xa
	.ascii "bgindex\0"
	.byte	0x6
	.word	0x18f0
	.byte	0xf
	.long	0xf4
	.byte	0x18
	.uleb128 0xa
	.ascii "ratio\0"
	.byte	0x6
	.word	0x18f0
	.byte	0x18
	.long	0xf4
	.byte	0x1c
	.uleb128 0xa
	.ascii "transparent\0"
	.byte	0x6
	.word	0x18f0
	.byte	0x1f
	.long	0xf4
	.byte	0x20
	.uleb128 0xa
	.ascii "eflags\0"
	.byte	0x6
	.word	0x18f0
	.byte	0x2c
	.long	0xf4
	.byte	0x24
	.uleb128 0xa
	.ascii "pal\0"
	.byte	0x6
	.word	0x18f1
	.byte	0x17
	.long	0x191e7
	.byte	0x28
	.uleb128 0x1e
	.ascii "lpal\0"
	.byte	0x6
	.word	0x18f2
	.byte	0x17
	.long	0x191e7
	.word	0x428
	.uleb128 0x1e
	.ascii "codes\0"
	.byte	0x6
	.word	0x18f3
	.byte	0x1c
	.long	0x191fd
	.word	0x828
	.uleb128 0x1e
	.ascii "color_table\0"
	.byte	0x6
	.word	0x18f4
	.byte	0xd
	.long	0x1803c
	.word	0x8828
	.uleb128 0x1e
	.ascii "parse\0"
	.byte	0x6
	.word	0x18f5
	.byte	0x8
	.long	0xf4
	.word	0x882c
	.uleb128 0x1e
	.ascii "step\0"
	.byte	0x6
	.word	0x18f5
	.byte	0xf
	.long	0xf4
	.word	0x8830
	.uleb128 0x1e
	.ascii "lflags\0"
	.byte	0x6
	.word	0x18f6
	.byte	0x8
	.long	0xf4
	.word	0x8834
	.uleb128 0x1e
	.ascii "start_x\0"
	.byte	0x6
	.word	0x18f7
	.byte	0x8
	.long	0xf4
	.word	0x8838
	.uleb128 0x1e
	.ascii "start_y\0"
	.byte	0x6
	.word	0x18f7
	.byte	0x11
	.long	0xf4
	.word	0x883c
	.uleb128 0x1e
	.ascii "max_x\0"
	.byte	0x6
	.word	0x18f8
	.byte	0x8
	.long	0xf4
	.word	0x8840
	.uleb128 0x1e
	.ascii "max_y\0"
	.byte	0x6
	.word	0x18f8
	.byte	0xf
	.long	0xf4
	.word	0x8844
	.uleb128 0x1e
	.ascii "cur_x\0"
	.byte	0x6
	.word	0x18f9
	.byte	0x8
	.long	0xf4
	.word	0x8848
	.uleb128 0x1e
	.ascii "cur_y\0"
	.byte	0x6
	.word	0x18f9
	.byte	0xf
	.long	0xf4
	.word	0x884c
	.uleb128 0x1e
	.ascii "line_size\0"
	.byte	0x6
	.word	0x18fa
	.byte	0x8
	.long	0xf4
	.word	0x8850
	.uleb128 0x54
	.secrel32	LASF176
	.byte	0x6
	.word	0x18fb
	.byte	0x8
	.long	0xf4
	.word	0x8854
	.byte	0
	.uleb128 0x10
	.long	0x17da0
	.long	0x191fd
	.uleb128 0x12
	.long	0xe4
	.byte	0xff
	.uleb128 0x12
	.long	0xe4
	.byte	0x3
	.byte	0
	.uleb128 0x10
	.long	0x1900e
	.long	0x1920e
	.uleb128 0x3a
	.long	0xe4
	.word	0x1fff
	.byte	0
	.uleb128 0x1a
	.ascii "stbi__gif\0"
	.byte	0x6
	.word	0x18fc
	.byte	0x3
	.long	0x19025
	.uleb128 0x1a
	.ascii "stbtt_uint8\0"
	.byte	0x7
	.word	0x1a8
	.byte	0x1c
	.long	0x697
	.uleb128 0x1a
	.ascii "stbtt_int8\0"
	.byte	0x7
	.word	0x1a9
	.byte	0x1c
	.long	0x92c
	.uleb128 0x1a
	.ascii "stbtt_uint16\0"
	.byte	0x7
	.word	0x1aa
	.byte	0x1c
	.long	0x132
	.uleb128 0x1a
	.ascii "stbtt_int16\0"
	.byte	0x7
	.word	0x1ab
	.byte	0x1c
	.long	0x941
	.uleb128 0x1a
	.ascii "stbtt_uint32\0"
	.byte	0x7
	.word	0x1ac
	.byte	0x1c
	.long	0xe4
	.uleb128 0x1a
	.ascii "stbtt_int32\0"
	.byte	0x7
	.word	0x1ad
	.byte	0x1c
	.long	0xf4
	.uleb128 0x2f
	.byte	0xc
	.byte	0x7
	.word	0x1fe
	.byte	0x1
	.ascii "10stbtt__buf\0"
	.long	0x192e5
	.uleb128 0x19
	.secrel32	LASF69
	.byte	0x7
	.word	0x1ff
	.byte	0x13
	.long	0x954
	.byte	0
	.uleb128 0xa
	.ascii "cursor\0"
	.byte	0x7
	.word	0x200
	.byte	0x8
	.long	0xf4
	.byte	0x4
	.uleb128 0x19
	.secrel32	LASF47
	.byte	0x7
	.word	0x201
	.byte	0x8
	.long	0xf4
	.byte	0x8
	.byte	0
	.uleb128 0x1a
	.ascii "stbtt__buf\0"
	.byte	0x7
	.word	0x202
	.byte	0x3
	.long	0x192a0
	.uleb128 0x14
	.long	0x192e5
	.uleb128 0x2f
	.byte	0x14
	.byte	0x7
	.word	0x20c
	.byte	0x1
	.ascii "15stbtt_bakedchar\0"
	.long	0x19379
	.uleb128 0xa
	.ascii "x0\0"
	.byte	0x7
	.word	0x20d
	.byte	0x13
	.long	0x132
	.byte	0
	.uleb128 0xa
	.ascii "y0\0"
	.byte	0x7
	.word	0x20d
	.byte	0x16
	.long	0x132
	.byte	0x2
	.uleb128 0xa
	.ascii "x1\0"
	.byte	0x7
	.word	0x20d
	.byte	0x19
	.long	0x132
	.byte	0x4
	.uleb128 0xa
	.ascii "y1\0"
	.byte	0x7
	.word	0x20d
	.byte	0x1c
	.long	0x132
	.byte	0x6
	.uleb128 0x19
	.secrel32	LASF177
	.byte	0x7
	.word	0x20e
	.byte	0xa
	.long	0x7d5
	.byte	0x8
	.uleb128 0x19
	.secrel32	LASF178
	.byte	0x7
	.word	0x20e
	.byte	0xf
	.long	0x7d5
	.byte	0xc
	.uleb128 0x19
	.secrel32	LASF179
	.byte	0x7
	.word	0x20e
	.byte	0x14
	.long	0x7d5
	.byte	0x10
	.byte	0
	.uleb128 0x1a
	.ascii "stbtt_bakedchar\0"
	.byte	0x7
	.word	0x20f
	.byte	0x3
	.long	0x192fe
	.uleb128 0x14
	.long	0x19379
	.uleb128 0x2f
	.byte	0x20
	.byte	0x7
	.word	0x21c
	.byte	0x1
	.ascii "18stbtt_aligned_quad\0"
	.long	0x1941f
	.uleb128 0xa
	.ascii "x0\0"
	.byte	0x7
	.word	0x21d
	.byte	0xa
	.long	0x7d5
	.byte	0
	.uleb128 0xa
	.ascii "y0\0"
	.byte	0x7
	.word	0x21d
	.byte	0xd
	.long	0x7d5
	.byte	0x4
	.uleb128 0xa
	.ascii "s0\0"
	.byte	0x7
	.word	0x21d
	.byte	0x10
	.long	0x7d5
	.byte	0x8
	.uleb128 0xa
	.ascii "t0\0"
	.byte	0x7
	.word	0x21d
	.byte	0x13
	.long	0x7d5
	.byte	0xc
	.uleb128 0xa
	.ascii "x1\0"
	.byte	0x7
	.word	0x21e
	.byte	0xa
	.long	0x7d5
	.byte	0x10
	.uleb128 0xa
	.ascii "y1\0"
	.byte	0x7
	.word	0x21e
	.byte	0xd
	.long	0x7d5
	.byte	0x14
	.uleb128 0xa
	.ascii "s1\0"
	.byte	0x7
	.word	0x21e
	.byte	0x10
	.long	0x7d5
	.byte	0x18
	.uleb128 0xa
	.ascii "t1\0"
	.byte	0x7
	.word	0x21e
	.byte	0x13
	.long	0x7d5
	.byte	0x1c
	.byte	0
	.uleb128 0x1a
	.ascii "stbtt_aligned_quad\0"
	.byte	0x7
	.word	0x21f
	.byte	0x3
	.long	0x19397
	.uleb128 0x2f
	.byte	0x1c
	.byte	0x7
	.word	0x23c
	.byte	0x1
	.ascii "16stbtt_packedchar\0"
	.long	0x194d7
	.uleb128 0xa
	.ascii "x0\0"
	.byte	0x7
	.word	0x23d
	.byte	0x13
	.long	0x132
	.byte	0
	.uleb128 0xa
	.ascii "y0\0"
	.byte	0x7
	.word	0x23d
	.byte	0x16
	.long	0x132
	.byte	0x2
	.uleb128 0xa
	.ascii "x1\0"
	.byte	0x7
	.word	0x23d
	.byte	0x19
	.long	0x132
	.byte	0x4
	.uleb128 0xa
	.ascii "y1\0"
	.byte	0x7
	.word	0x23d
	.byte	0x1c
	.long	0x132
	.byte	0x6
	.uleb128 0x19
	.secrel32	LASF177
	.byte	0x7
	.word	0x23e
	.byte	0xa
	.long	0x7d5
	.byte	0x8
	.uleb128 0x19
	.secrel32	LASF178
	.byte	0x7
	.word	0x23e
	.byte	0xf
	.long	0x7d5
	.byte	0xc
	.uleb128 0x19
	.secrel32	LASF179
	.byte	0x7
	.word	0x23e
	.byte	0x14
	.long	0x7d5
	.byte	0x10
	.uleb128 0xa
	.ascii "xoff2\0"
	.byte	0x7
	.word	0x23f
	.byte	0xa
	.long	0x7d5
	.byte	0x14
	.uleb128 0xa
	.ascii "yoff2\0"
	.byte	0x7
	.word	0x23f
	.byte	0x10
	.long	0x7d5
	.byte	0x18
	.byte	0
	.uleb128 0x1a
	.ascii "stbtt_packedchar\0"
	.byte	0x7
	.word	0x240
	.byte	0x3
	.long	0x1943b
	.uleb128 0x14
	.long	0x194d7
	.uleb128 0x2a
	.secrel32	LASF180
	.byte	0x7
	.word	0x242
	.byte	0x23
	.long	0x19503
	.uleb128 0x4f
	.secrel32	LASF180
	.byte	0x2c
	.byte	0x7
	.word	0x2a2
	.byte	0x8
	.long	0x195d0
	.uleb128 0xa
	.ascii "user_allocator_context\0"
	.byte	0x7
	.word	0x2a3
	.byte	0xa
	.long	0x7aa
	.byte	0
	.uleb128 0xa
	.ascii "pack_info\0"
	.byte	0x7
	.word	0x2a4
	.byte	0xa
	.long	0x7aa
	.byte	0x4
	.uleb128 0x19
	.secrel32	LASF181
	.byte	0x7
	.word	0x2a5
	.byte	0xa
	.long	0xf4
	.byte	0x8
	.uleb128 0x19
	.secrel32	LASF182
	.byte	0x7
	.word	0x2a6
	.byte	0xa
	.long	0xf4
	.byte	0xc
	.uleb128 0x19
	.secrel32	LASF183
	.byte	0x7
	.word	0x2a7
	.byte	0xa
	.long	0xf4
	.byte	0x10
	.uleb128 0x19
	.secrel32	LASF184
	.byte	0x7
	.word	0x2a8
	.byte	0xa
	.long	0xf4
	.byte	0x14
	.uleb128 0xa
	.ascii "skip_missing\0"
	.byte	0x7
	.word	0x2a9
	.byte	0xa
	.long	0xf4
	.byte	0x18
	.uleb128 0x19
	.secrel32	LASF185
	.byte	0x7
	.word	0x2aa
	.byte	0x13
	.long	0xe4
	.byte	0x1c
	.uleb128 0x19
	.secrel32	LASF186
	.byte	0x7
	.word	0x2aa
	.byte	0x21
	.long	0xe4
	.byte	0x20
	.uleb128 0x19
	.secrel32	LASF187
	.byte	0x7
	.word	0x2ab
	.byte	0x13
	.long	0x954
	.byte	0x24
	.uleb128 0xa
	.ascii "nodes\0"
	.byte	0x7
	.word	0x2ac
	.byte	0xb
	.long	0x7aa
	.byte	0x28
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF188
	.byte	0x7
	.word	0x243
	.byte	0x1f
	.long	0x195e2
	.uleb128 0x14
	.long	0x195d0
	.uleb128 0x4f
	.secrel32	LASF188
	.byte	0x80
	.byte	0x7
	.word	0x2c5
	.byte	0x8
	.long	0x1972e
	.uleb128 0x19
	.secrel32	LASF189
	.byte	0x7
	.word	0x2c7
	.byte	0x15
	.long	0x7aa
	.byte	0
	.uleb128 0x19
	.secrel32	LASF69
	.byte	0x7
	.word	0x2c8
	.byte	0x15
	.long	0x954
	.byte	0x4
	.uleb128 0x19
	.secrel32	LASF190
	.byte	0x7
	.word	0x2c9
	.byte	0x15
	.long	0xf4
	.byte	0x8
	.uleb128 0xa
	.ascii "numGlyphs\0"
	.byte	0x7
	.word	0x2cb
	.byte	0x8
	.long	0xf4
	.byte	0xc
	.uleb128 0xa
	.ascii "loca\0"
	.byte	0x7
	.word	0x2cd
	.byte	0x8
	.long	0xf4
	.byte	0x10
	.uleb128 0xa
	.ascii "head\0"
	.byte	0x7
	.word	0x2cd
	.byte	0xd
	.long	0xf4
	.byte	0x14
	.uleb128 0xa
	.ascii "glyf\0"
	.byte	0x7
	.word	0x2cd
	.byte	0x12
	.long	0xf4
	.byte	0x18
	.uleb128 0xa
	.ascii "hhea\0"
	.byte	0x7
	.word	0x2cd
	.byte	0x17
	.long	0xf4
	.byte	0x1c
	.uleb128 0xa
	.ascii "hmtx\0"
	.byte	0x7
	.word	0x2cd
	.byte	0x1c
	.long	0xf4
	.byte	0x20
	.uleb128 0xa
	.ascii "kern\0"
	.byte	0x7
	.word	0x2cd
	.byte	0x21
	.long	0xf4
	.byte	0x24
	.uleb128 0xa
	.ascii "gpos\0"
	.byte	0x7
	.word	0x2cd
	.byte	0x26
	.long	0xf4
	.byte	0x28
	.uleb128 0xa
	.ascii "svg\0"
	.byte	0x7
	.word	0x2cd
	.byte	0x2b
	.long	0xf4
	.byte	0x2c
	.uleb128 0x19
	.secrel32	LASF191
	.byte	0x7
	.word	0x2ce
	.byte	0x8
	.long	0xf4
	.byte	0x30
	.uleb128 0xa
	.ascii "indexToLocFormat\0"
	.byte	0x7
	.word	0x2cf
	.byte	0x8
	.long	0xf4
	.byte	0x34
	.uleb128 0xa
	.ascii "cff\0"
	.byte	0x7
	.word	0x2d1
	.byte	0xf
	.long	0x192e5
	.byte	0x38
	.uleb128 0x19
	.secrel32	LASF192
	.byte	0x7
	.word	0x2d2
	.byte	0xf
	.long	0x192e5
	.byte	0x44
	.uleb128 0xa
	.ascii "gsubrs\0"
	.byte	0x7
	.word	0x2d3
	.byte	0xf
	.long	0x192e5
	.byte	0x50
	.uleb128 0xa
	.ascii "subrs\0"
	.byte	0x7
	.word	0x2d4
	.byte	0xf
	.long	0x192e5
	.byte	0x5c
	.uleb128 0xa
	.ascii "fontdicts\0"
	.byte	0x7
	.word	0x2d5
	.byte	0xf
	.long	0x192e5
	.byte	0x68
	.uleb128 0x19
	.secrel32	LASF193
	.byte	0x7
	.word	0x2d6
	.byte	0xf
	.long	0x192e5
	.byte	0x74
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF194
	.byte	0x7
	.word	0x245
	.byte	0x1b
	.long	0x1973b
	.uleb128 0x4f
	.secrel32	LASF194
	.byte	0x18
	.byte	0x7
	.word	0xf0e
	.byte	0x8
	.long	0x1979c
	.uleb128 0xa
	.ascii "x\0"
	.byte	0x7
	.word	0xf10
	.byte	0x10
	.long	0x19d89
	.byte	0
	.uleb128 0xa
	.ascii "y\0"
	.byte	0x7
	.word	0xf10
	.byte	0x12
	.long	0x19d89
	.byte	0x4
	.uleb128 0xa
	.ascii "id\0"
	.byte	0x7
	.word	0xf11
	.byte	0x8
	.long	0xf4
	.byte	0x8
	.uleb128 0xa
	.ascii "w\0"
	.byte	0x7
	.word	0xf11
	.byte	0xb
	.long	0xf4
	.byte	0xc
	.uleb128 0xa
	.ascii "h\0"
	.byte	0x7
	.word	0xf11
	.byte	0xd
	.long	0xf4
	.byte	0x10
	.uleb128 0xa
	.ascii "was_packed\0"
	.byte	0x7
	.word	0xf11
	.byte	0xf
	.long	0xf4
	.byte	0x14
	.byte	0
	.uleb128 0x2f
	.byte	0x18
	.byte	0x7
	.word	0x268
	.byte	0x1
	.ascii "16stbtt_pack_range\0"
	.long	0x19834
	.uleb128 0x19
	.secrel32	LASF195
	.byte	0x7
	.word	0x269
	.byte	0xa
	.long	0x7d5
	.byte	0
	.uleb128 0x19
	.secrel32	LASF196
	.byte	0x7
	.word	0x26a
	.byte	0x8
	.long	0xf4
	.byte	0x4
	.uleb128 0xa
	.ascii "array_of_unicode_codepoints\0"
	.byte	0x7
	.word	0x26b
	.byte	0x9
	.long	0x482
	.byte	0x8
	.uleb128 0x19
	.secrel32	LASF197
	.byte	0x7
	.word	0x26c
	.byte	0x8
	.long	0xf4
	.byte	0xc
	.uleb128 0x19
	.secrel32	LASF198
	.byte	0x7
	.word	0x26d
	.byte	0x16
	.long	0x19834
	.byte	0x10
	.uleb128 0x19
	.secrel32	LASF185
	.byte	0x7
	.word	0x26e
	.byte	0x12
	.long	0x697
	.byte	0x14
	.uleb128 0x19
	.secrel32	LASF186
	.byte	0x7
	.word	0x26e
	.byte	0x20
	.long	0x697
	.byte	0x15
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x194d7
	.uleb128 0x1a
	.ascii "stbtt_pack_range\0"
	.byte	0x7
	.word	0x26f
	.byte	0x3
	.long	0x1979c
	.uleb128 0x4f
	.secrel32	LASF199
	.byte	0xc
	.byte	0x7
	.word	0x320
	.byte	0x10
	.long	0x1988d
	.uleb128 0x19
	.secrel32	LASF200
	.byte	0x7
	.word	0x322
	.byte	0x8
	.long	0xf4
	.byte	0
	.uleb128 0x19
	.secrel32	LASF201
	.byte	0x7
	.word	0x323
	.byte	0x8
	.long	0xf4
	.byte	0x4
	.uleb128 0x19
	.secrel32	LASF202
	.byte	0x7
	.word	0x324
	.byte	0x8
	.long	0xf4
	.byte	0x8
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF199
	.byte	0x7
	.word	0x325
	.byte	0x3
	.long	0x19854
	.uleb128 0x5d
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x7
	.word	0x334
	.byte	0x9
	.long	0x198e4
	.uleb128 0x1f
	.ascii "STBTT_vmove\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "STBTT_vline\0"
	.byte	0x2
	.uleb128 0x1f
	.ascii "STBTT_vcurve\0"
	.byte	0x3
	.uleb128 0x1f
	.ascii "STBTT_vcubic\0"
	.byte	0x4
	.byte	0
	.uleb128 0x2f
	.byte	0xe
	.byte	0x7
	.word	0x340
	.byte	0x4
	.ascii "12stbtt_vertex\0"
	.long	0x19968
	.uleb128 0xa
	.ascii "x\0"
	.byte	0x7
	.word	0x341
	.byte	0x19
	.long	0x941
	.byte	0
	.uleb128 0xa
	.ascii "y\0"
	.byte	0x7
	.word	0x341
	.byte	0x1b
	.long	0x941
	.byte	0x2
	.uleb128 0xa
	.ascii "cx\0"
	.byte	0x7
	.word	0x341
	.byte	0x1d
	.long	0x941
	.byte	0x4
	.uleb128 0xa
	.ascii "cy\0"
	.byte	0x7
	.word	0x341
	.byte	0x20
	.long	0x941
	.byte	0x6
	.uleb128 0xa
	.ascii "cx1\0"
	.byte	0x7
	.word	0x341
	.byte	0x23
	.long	0x941
	.byte	0x8
	.uleb128 0xa
	.ascii "cy1\0"
	.byte	0x7
	.word	0x341
	.byte	0x27
	.long	0x941
	.byte	0xa
	.uleb128 0x19
	.secrel32	LASF132
	.byte	0x7
	.word	0x342
	.byte	0x15
	.long	0x697
	.byte	0xc
	.uleb128 0x19
	.secrel32	LASF184
	.byte	0x7
	.word	0x342
	.byte	0x1a
	.long	0x697
	.byte	0xd
	.byte	0
	.uleb128 0x1a
	.ascii "stbtt_vertex\0"
	.byte	0x7
	.word	0x343
	.byte	0x6
	.long	0x198e4
	.uleb128 0x2f
	.byte	0x10
	.byte	0x7
	.word	0x398
	.byte	0x1
	.ascii "13stbtt__bitmap\0"
	.long	0x199cd
	.uleb128 0xa
	.ascii "w\0"
	.byte	0x7
	.word	0x399
	.byte	0x8
	.long	0xf4
	.byte	0
	.uleb128 0xa
	.ascii "h\0"
	.byte	0x7
	.word	0x399
	.byte	0xa
	.long	0xf4
	.byte	0x4
	.uleb128 0x19
	.secrel32	LASF203
	.byte	0x7
	.word	0x399
	.byte	0xc
	.long	0xf4
	.byte	0x8
	.uleb128 0x19
	.secrel32	LASF187
	.byte	0x7
	.word	0x39a
	.byte	0x13
	.long	0x954
	.byte	0xc
	.byte	0
	.uleb128 0x1a
	.ascii "stbtt__bitmap\0"
	.byte	0x7
	.word	0x39b
	.byte	0x3
	.long	0x1997e
	.uleb128 0x5d
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x7
	.word	0x40f
	.byte	0x6
	.long	0x19a5e
	.uleb128 0x1f
	.ascii "STBTT_PLATFORM_ID_UNICODE\0"
	.byte	0
	.uleb128 0x1f
	.ascii "STBTT_PLATFORM_ID_MAC\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "STBTT_PLATFORM_ID_ISO\0"
	.byte	0x2
	.uleb128 0x1f
	.ascii "STBTT_PLATFORM_ID_MICROSOFT\0"
	.byte	0x3
	.byte	0
	.uleb128 0x5d
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x7
	.word	0x41e
	.byte	0x6
	.long	0x19ad3
	.uleb128 0x1f
	.ascii "STBTT_MS_EID_SYMBOL\0"
	.byte	0
	.uleb128 0x1f
	.ascii "STBTT_MS_EID_UNICODE_BMP\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "STBTT_MS_EID_SHIFTJIS\0"
	.byte	0x2
	.uleb128 0x1f
	.ascii "STBTT_MS_EID_UNICODE_FULL\0"
	.byte	0xa
	.byte	0
	.uleb128 0x2f
	.byte	0x30
	.byte	0x7
	.word	0x765
	.byte	0x1
	.ascii "12stbtt__csctx\0"
	.long	0x19ba8
	.uleb128 0xa
	.ascii "bounds\0"
	.byte	0x7
	.word	0x766
	.byte	0x8
	.long	0xf4
	.byte	0
	.uleb128 0xa
	.ascii "started\0"
	.byte	0x7
	.word	0x767
	.byte	0x8
	.long	0xf4
	.byte	0x4
	.uleb128 0xa
	.ascii "first_x\0"
	.byte	0x7
	.word	0x768
	.byte	0xa
	.long	0x7d5
	.byte	0x8
	.uleb128 0xa
	.ascii "first_y\0"
	.byte	0x7
	.word	0x768
	.byte	0x13
	.long	0x7d5
	.byte	0xc
	.uleb128 0xa
	.ascii "x\0"
	.byte	0x7
	.word	0x769
	.byte	0xa
	.long	0x7d5
	.byte	0x10
	.uleb128 0xa
	.ascii "y\0"
	.byte	0x7
	.word	0x769
	.byte	0xd
	.long	0x7d5
	.byte	0x14
	.uleb128 0xa
	.ascii "min_x\0"
	.byte	0x7
	.word	0x76a
	.byte	0x10
	.long	0x1928b
	.byte	0x18
	.uleb128 0xa
	.ascii "max_x\0"
	.byte	0x7
	.word	0x76a
	.byte	0x17
	.long	0x1928b
	.byte	0x1c
	.uleb128 0xa
	.ascii "min_y\0"
	.byte	0x7
	.word	0x76a
	.byte	0x1e
	.long	0x1928b
	.byte	0x20
	.uleb128 0xa
	.ascii "max_y\0"
	.byte	0x7
	.word	0x76a
	.byte	0x25
	.long	0x1928b
	.byte	0x24
	.uleb128 0x19
	.secrel32	LASF204
	.byte	0x7
	.word	0x76c
	.byte	0x12
	.long	0x19ba8
	.byte	0x28
	.uleb128 0x19
	.secrel32	LASF205
	.byte	0x7
	.word	0x76d
	.byte	0x8
	.long	0xf4
	.byte	0x2c
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19968
	.uleb128 0x1a
	.ascii "stbtt__csctx\0"
	.byte	0x7
	.word	0x76e
	.byte	0x3
	.long	0x19ad3
	.uleb128 0x4f
	.secrel32	LASF206
	.byte	0x4
	.byte	0x7
	.word	0xad3
	.byte	0x10
	.long	0x19be2
	.uleb128 0xa
	.ascii "next\0"
	.byte	0x7
	.word	0xad5
	.byte	0x1f
	.long	0x19be2
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19bc4
	.uleb128 0x2a
	.secrel32	LASF206
	.byte	0x7
	.word	0xad6
	.byte	0x3
	.long	0x19bc4
	.uleb128 0x4f
	.secrel32	LASF207
	.byte	0xc
	.byte	0x7
	.word	0xad8
	.byte	0x10
	.long	0x19c4e
	.uleb128 0xa
	.ascii "head\0"
	.byte	0x7
	.word	0xada
	.byte	0x1f
	.long	0x19be2
	.byte	0
	.uleb128 0xa
	.ascii "first_free\0"
	.byte	0x7
	.word	0xadb
	.byte	0xc
	.long	0x7aa
	.byte	0x4
	.uleb128 0xa
	.ascii "num_remaining_in_head_chunk\0"
	.byte	0x7
	.word	0xadc
	.byte	0xb
	.long	0xf4
	.byte	0x8
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF207
	.byte	0x7
	.word	0xadd
	.byte	0x3
	.long	0x19bf5
	.uleb128 0x4f
	.secrel32	LASF208
	.byte	0x14
	.byte	0x7
	.word	0xb04
	.byte	0x10
	.long	0x19cac
	.uleb128 0xa
	.ascii "x0\0"
	.byte	0x7
	.word	0xb05
	.byte	0xa
	.long	0x7d5
	.byte	0
	.uleb128 0xa
	.ascii "y0\0"
	.byte	0x7
	.word	0xb05
	.byte	0xd
	.long	0x7d5
	.byte	0x4
	.uleb128 0xa
	.ascii "x1\0"
	.byte	0x7
	.word	0xb05
	.byte	0x11
	.long	0x7d5
	.byte	0x8
	.uleb128 0xa
	.ascii "y1\0"
	.byte	0x7
	.word	0xb05
	.byte	0x14
	.long	0x7d5
	.byte	0xc
	.uleb128 0x19
	.secrel32	LASF209
	.byte	0x7
	.word	0xb06
	.byte	0x8
	.long	0xf4
	.byte	0x10
	.byte	0
	.uleb128 0x2a
	.secrel32	LASF208
	.byte	0x7
	.word	0xb07
	.byte	0x3
	.long	0x19c5b
	.uleb128 0x4f
	.secrel32	LASF210
	.byte	0x1c
	.byte	0x7
	.word	0xb0a
	.byte	0x10
	.long	0x19d2e
	.uleb128 0xa
	.ascii "next\0"
	.byte	0x7
	.word	0xb0c
	.byte	0x1f
	.long	0x19d2e
	.byte	0
	.uleb128 0xa
	.ascii "fx\0"
	.byte	0x7
	.word	0xb12
	.byte	0xa
	.long	0x7d5
	.byte	0x4
	.uleb128 0xa
	.ascii "fdx\0"
	.byte	0x7
	.word	0xb12
	.byte	0xd
	.long	0x7d5
	.byte	0x8
	.uleb128 0xa
	.ascii "fdy\0"
	.byte	0x7
	.word	0xb12
	.byte	0x11
	.long	0x7d5
	.byte	0xc
	.uleb128 0xa
	.ascii "direction\0"
	.byte	0x7
	.word	0xb13
	.byte	0xa
	.long	0x7d5
	.byte	0x10
	.uleb128 0xa
	.ascii "sy\0"
	.byte	0x7
	.word	0xb14
	.byte	0xa
	.long	0x7d5
	.byte	0x14
	.uleb128 0xa
	.ascii "ey\0"
	.byte	0x7
	.word	0xb15
	.byte	0xa
	.long	0x7d5
	.byte	0x18
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19cb9
	.uleb128 0x2a
	.secrel32	LASF210
	.byte	0x7
	.word	0xb19
	.byte	0x3
	.long	0x19cb9
	.uleb128 0x2f
	.byte	0x8
	.byte	0x7
	.word	0xd65
	.byte	0x1
	.ascii "12stbtt__point\0"
	.long	0x19d73
	.uleb128 0xa
	.ascii "x\0"
	.byte	0x7
	.word	0xd66
	.byte	0xa
	.long	0x7d5
	.byte	0
	.uleb128 0xa
	.ascii "y\0"
	.byte	0x7
	.word	0xd66
	.byte	0xc
	.long	0x7d5
	.byte	0x4
	.byte	0
	.uleb128 0x1a
	.ascii "stbtt__point\0"
	.byte	0x7
	.word	0xd67
	.byte	0x3
	.long	0x19d41
	.uleb128 0x1a
	.ascii "stbrp_coord\0"
	.byte	0x7
	.word	0xef6
	.byte	0xd
	.long	0xf4
	.uleb128 0x2f
	.byte	0x14
	.byte	0x7
	.word	0xf04
	.byte	0x1
	.ascii "13stbrp_context\0"
	.long	0x19dfb
	.uleb128 0x19
	.secrel32	LASF181
	.byte	0x7
	.word	0xf05
	.byte	0x8
	.long	0xf4
	.byte	0
	.uleb128 0x19
	.secrel32	LASF182
	.byte	0x7
	.word	0xf05
	.byte	0xe
	.long	0xf4
	.byte	0x4
	.uleb128 0xa
	.ascii "x\0"
	.byte	0x7
	.word	0xf06
	.byte	0x8
	.long	0xf4
	.byte	0x8
	.uleb128 0xa
	.ascii "y\0"
	.byte	0x7
	.word	0xf06
	.byte	0xa
	.long	0xf4
	.byte	0xc
	.uleb128 0x19
	.secrel32	LASF211
	.byte	0x7
	.word	0xf06
	.byte	0xc
	.long	0xf4
	.byte	0x10
	.byte	0
	.uleb128 0x1a
	.ascii "stbrp_context\0"
	.byte	0x7
	.word	0xf07
	.byte	0x3
	.long	0x19d9e
	.uleb128 0x2f
	.byte	0x1
	.byte	0x7
	.word	0xf0a
	.byte	0x1
	.ascii "10stbrp_node\0"
	.long	0x19e36
	.uleb128 0xa
	.ascii "x\0"
	.byte	0x7
	.word	0xf0b
	.byte	0x12
	.long	0x697
	.byte	0
	.byte	0
	.uleb128 0x1a
	.ascii "stbrp_node\0"
	.byte	0x7
	.word	0xf0c
	.byte	0x3
	.long	0x19e12
	.uleb128 0x1b
	.ascii "kGifTransIndex\0"
	.byte	0x8
	.byte	0x3f
	.byte	0xb
	.long	0xfb
	.uleb128 0x5
	.byte	0x3
	.long	__ZL14kGifTransIndex
	.uleb128 0xbb
	.word	0x504
	.byte	0x8
	.byte	0x42
	.byte	0x1
	.ascii "10GifPalette\0"
	.long	0x19edb
	.uleb128 0x2b
	.secrel32	LASF212
	.byte	0x8
	.byte	0x43
	.byte	0x9
	.long	0xf4
	.byte	0
	.uleb128 0x11
	.ascii "r\0"
	.byte	0x8
	.byte	0x45
	.byte	0x12
	.long	0x19edb
	.byte	0x4
	.uleb128 0x64
	.ascii "g\0"
	.byte	0x8
	.byte	0x46
	.byte	0x12
	.long	0x19edb
	.word	0x104
	.uleb128 0x64
	.ascii "b\0"
	.byte	0x8
	.byte	0x47
	.byte	0x12
	.long	0x19edb
	.word	0x204
	.uleb128 0x64
	.ascii "treeSplitElt\0"
	.byte	0x8
	.byte	0x4c
	.byte	0x1d
	.long	0x19edb
	.word	0x304
	.uleb128 0x64
	.ascii "treeSplit\0"
	.byte	0x8
	.byte	0x4d
	.byte	0x1a
	.long	0x19edb
	.word	0x404
	.byte	0
	.uleb128 0x10
	.long	0x165a2
	.long	0x19eeb
	.uleb128 0x12
	.long	0xe4
	.byte	0xff
	.byte	0
	.uleb128 0x15
	.ascii "GifPalette\0"
	.byte	0x8
	.byte	0x4e
	.byte	0x3
	.long	0x19e67
	.uleb128 0x14
	.long	0x19eeb
	.uleb128 0x5e
	.word	0x108
	.byte	0x8
	.word	0x214
	.byte	0x1
	.ascii "12GifBitStatus\0"
	.long	0x19f65
	.uleb128 0xa
	.ascii "bitIndex\0"
	.byte	0x8
	.word	0x215
	.byte	0xd
	.long	0x165a2
	.byte	0
	.uleb128 0xa
	.ascii "byte\0"
	.byte	0x8
	.word	0x216
	.byte	0xd
	.long	0x165a2
	.byte	0x1
	.uleb128 0xa
	.ascii "chunkIndex\0"
	.byte	0x8
	.word	0x218
	.byte	0xe
	.long	0x165e8
	.byte	0x4
	.uleb128 0xa
	.ascii "chunk\0"
	.byte	0x8
	.word	0x219
	.byte	0x16
	.long	0x19edb
	.byte	0x8
	.byte	0
	.uleb128 0x1a
	.ascii "GifBitStatus\0"
	.byte	0x8
	.word	0x21a
	.byte	0x3
	.long	0x19f03
	.uleb128 0x5e
	.word	0x200
	.byte	0x8
	.word	0x24a
	.byte	0x1
	.ascii "10GifLzwNode\0"
	.long	0x19fa5
	.uleb128 0xa
	.ascii "m_next\0"
	.byte	0x8
	.word	0x24b
	.byte	0x18
	.long	0x19fa5
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x165c7
	.long	0x19fb5
	.uleb128 0x12
	.long	0xe4
	.byte	0xff
	.byte	0
	.uleb128 0x1a
	.ascii "GifLzwNode\0"
	.byte	0x8
	.word	0x24c
	.byte	0x3
	.long	0x19f7b
	.uleb128 0x2f
	.byte	0xc
	.byte	0x8
	.word	0x2d9
	.byte	0x1
	.ascii "9GifWriter\0"
	.long	0x1a00e
	.uleb128 0xa
	.ascii "f\0"
	.byte	0x8
	.word	0x2da
	.byte	0xb
	.long	0x15d9a
	.byte	0
	.uleb128 0x19
	.secrel32	LASF213
	.byte	0x8
	.word	0x2db
	.byte	0xe
	.long	0x1a00e
	.byte	0x4
	.uleb128 0xa
	.ascii "firstFrame\0"
	.byte	0x8
	.word	0x2dc
	.byte	0xa
	.long	0x15b97
	.byte	0x8
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x165a2
	.uleb128 0x1a
	.ascii "GifWriter\0"
	.byte	0x8
	.word	0x2dd
	.byte	0x3
	.long	0x19fc9
	.uleb128 0x15
	.ascii "uint8\0"
	.byte	0x9
	.byte	0x22
	.byte	0x1c
	.long	0x697
	.uleb128 0x15
	.ascii "uint32\0"
	.byte	0x9
	.byte	0x24
	.byte	0x1c
	.long	0xe4
	.uleb128 0x15
	.ascii "uint64\0"
	.byte	0x9
	.byte	0x25
	.byte	0x1c
	.long	0x95a
	.uleb128 0x15
	.ascii "ms\0"
	.byte	0x9
	.byte	0x26
	.byte	0x1c
	.long	0xabe
	.uleb128 0x15
	.ascii "int32\0"
	.byte	0x9
	.byte	0x2a
	.byte	0x13
	.long	0xf4
	.uleb128 0x65
	.secrel32	LASF214
	.byte	0x14
	.byte	0x9
	.byte	0x2e
	.byte	0x8
	.long	0x1a0c9
	.uleb128 0x11
	.ascii "Memory\0"
	.byte	0x9
	.byte	0x30
	.byte	0x15
	.long	0x1a0c9
	.byte	0
	.uleb128 0x11
	.ascii "Width\0"
	.byte	0x9
	.byte	0x31
	.byte	0x15
	.long	0x1a05e
	.byte	0x4
	.uleb128 0x11
	.ascii "Height\0"
	.byte	0x9
	.byte	0x32
	.byte	0x15
	.long	0x1a05e
	.byte	0x8
	.uleb128 0x11
	.ascii "Original\0"
	.byte	0x9
	.byte	0x34
	.byte	0x18
	.long	0x1a0c9
	.byte	0xc
	.uleb128 0x11
	.ascii "Info\0"
	.byte	0x9
	.byte	0x35
	.byte	0x18
	.long	0x1a0cf
	.byte	0x10
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1a027
	.uleb128 0xc
	.byte	0x4
	.long	0x262f
	.uleb128 0x4e
	.secrel32	LASF215
	.byte	0x9
	.byte	0x38
	.byte	0xb
	.long	0xfb
	.uleb128 0x5
	.byte	0x3
	.long	__ZL14file_name_size
	.uleb128 0x79
	.ascii "Texture\0"
	.word	0x1a4
	.byte	0x9
	.byte	0x39
	.byte	0x8
	.long	0x1a118
	.uleb128 0x11
	.ascii "texture\0"
	.byte	0x9
	.byte	0x3a
	.byte	0x18
	.long	0x1a06c
	.byte	0
	.uleb128 0x2b
	.secrel32	LASF216
	.byte	0x9
	.byte	0x3b
	.byte	0x21
	.long	0x1a118
	.byte	0x14
	.byte	0
	.uleb128 0x10
	.long	0xb8
	.long	0x1a129
	.uleb128 0x3a
	.long	0xe4
	.word	0x18f
	.byte	0
	.uleb128 0x23
	.ascii "RECT_f\0"
	.byte	0x10
	.byte	0x9
	.byte	0x3e
	.byte	0x8
	.long	0x1a171
	.uleb128 0x2b
	.secrel32	LASF3
	.byte	0x9
	.byte	0x3f
	.byte	0xb
	.long	0x7d5
	.byte	0
	.uleb128 0x11
	.ascii "top\0"
	.byte	0x9
	.byte	0x3f
	.byte	0x11
	.long	0x7d5
	.byte	0x4
	.uleb128 0x2b
	.secrel32	LASF4
	.byte	0x9
	.byte	0x3f
	.byte	0x16
	.long	0x7d5
	.byte	0x8
	.uleb128 0x11
	.ascii "bottom\0"
	.byte	0x9
	.byte	0x3f
	.byte	0x1d
	.long	0x7d5
	.byte	0xc
	.byte	0
	.uleb128 0x23
	.ascii "v2\0"
	.byte	0x8
	.byte	0x9
	.byte	0x4c
	.byte	0x8
	.long	0x1a194
	.uleb128 0x11
	.ascii "x\0"
	.byte	0x9
	.byte	0x4d
	.byte	0x9
	.long	0xf4
	.byte	0
	.uleb128 0x11
	.ascii "y\0"
	.byte	0x9
	.byte	0x4d
	.byte	0xc
	.long	0xf4
	.byte	0x4
	.byte	0
	.uleb128 0x34
	.ascii "Main_Buffer\0"
	.byte	0x9
	.byte	0x50
	.byte	0xc
	.long	0x1a06c
	.uleb128 0x5
	.byte	0x3
	.long	_Main_Buffer
	.uleb128 0x34
	.ascii "Main_Info\0"
	.byte	0x9
	.byte	0x51
	.byte	0xc
	.long	0x262f
	.uleb128 0x5
	.byte	0x3
	.long	_Main_Info
	.uleb128 0x34
	.ascii "Window\0"
	.byte	0x9
	.byte	0x53
	.byte	0x6
	.long	0x2178
	.uleb128 0x5
	.byte	0x3
	.long	_Window
	.uleb128 0x34
	.ascii "left_button_down\0"
	.byte	0x9
	.byte	0x55
	.byte	0x6
	.long	0x15b97
	.uleb128 0x5
	.byte	0x3
	.long	_left_button_down
	.uleb128 0x34
	.ascii "right_button_down\0"
	.byte	0x9
	.byte	0x56
	.byte	0x6
	.long	0x15b97
	.uleb128 0x5
	.byte	0x3
	.long	_right_button_down
	.uleb128 0x34
	.ascii "mousewheel_counter\0"
	.byte	0x9
	.byte	0x58
	.byte	0x5
	.long	0xf4
	.uleb128 0x5
	.byte	0x3
	.long	_mousewheel_counter
	.uleb128 0x34
	.ascii "mouse_position\0"
	.byte	0x9
	.byte	0x59
	.byte	0x5
	.long	0x1a171
	.uleb128 0x5
	.byte	0x3
	.long	_mouse_position
	.uleb128 0x34
	.ascii "handled_press_left\0"
	.byte	0x9
	.byte	0x5b
	.byte	0x6
	.long	0x15b97
	.uleb128 0x5
	.byte	0x3
	.long	_handled_press_left
	.uleb128 0x34
	.ascii "handled_press_right\0"
	.byte	0x9
	.byte	0x5c
	.byte	0x6
	.long	0x15b97
	.uleb128 0x5
	.byte	0x3
	.long	_handled_press_right
	.uleb128 0x34
	.ascii "changed_size\0"
	.byte	0x9
	.byte	0x5d
	.byte	0x6
	.long	0x15b97
	.uleb128 0x5
	.byte	0x3
	.long	_changed_size
	.uleb128 0x10
	.long	0x1a06c
	.long	0x1a2c6
	.uleb128 0x12
	.long	0xe4
	.byte	0x78
	.byte	0
	.uleb128 0x34
	.ascii "caps_data\0"
	.byte	0x9
	.byte	0x60
	.byte	0x8
	.long	0x1a2b6
	.uleb128 0x5
	.byte	0x3
	.long	_caps_data
	.uleb128 0x10
	.long	0x1a0e7
	.long	0x1a2ee
	.uleb128 0x12
	.long	0xe4
	.byte	0x9
	.byte	0
	.uleb128 0x34
	.ascii "textures\0"
	.byte	0x9
	.byte	0x65
	.byte	0x9
	.long	0x1a2de
	.uleb128 0x5
	.byte	0x3
	.long	_textures
	.uleb128 0x34
	.ascii "total_textures\0"
	.byte	0x9
	.byte	0x66
	.byte	0x5
	.long	0xf4
	.uleb128 0x5
	.byte	0x3
	.long	_total_textures
	.uleb128 0x79
	.ascii "Font_Data\0"
	.word	0x2050
	.byte	0x9
	.byte	0x6d
	.byte	0x8
	.long	0x1a3bb
	.uleb128 0x2b
	.secrel32	LASF217
	.byte	0x9
	.byte	0x6e
	.byte	0x18
	.long	0x1a3bb
	.byte	0
	.uleb128 0x2b
	.secrel32	LASF218
	.byte	0x9
	.byte	0x70
	.byte	0x9
	.long	0xf4
	.byte	0xc
	.uleb128 0x2b
	.secrel32	LASF219
	.byte	0x9
	.byte	0x71
	.byte	0x9
	.long	0xf4
	.byte	0x10
	.uleb128 0x2b
	.secrel32	LASF202
	.byte	0x9
	.byte	0x73
	.byte	0x9
	.long	0xf4
	.byte	0x14
	.uleb128 0x11
	.ascii "line_height\0"
	.byte	0x9
	.byte	0x74
	.byte	0x9
	.long	0xf4
	.byte	0x18
	.uleb128 0x11
	.ascii "line_gap\0"
	.byte	0x9
	.byte	0x75
	.byte	0x9
	.long	0xf4
	.byte	0x1c
	.uleb128 0x2b
	.secrel32	LASF220
	.byte	0x9
	.byte	0x77
	.byte	0x14
	.long	0x195d0
	.byte	0x20
	.uleb128 0x11
	.ascii "spc\0"
	.byte	0x9
	.byte	0x79
	.byte	0x23
	.long	0x1a3cb
	.byte	0xa0
	.uleb128 0xbc
	.secrel32	LASF221
	.byte	0x9
	.byte	0x7a
	.byte	0x3a
	.long	0x1a3db
	.word	0x124
	.byte	0
	.uleb128 0x10
	.long	0x7d5
	.long	0x1a3cb
	.uleb128 0x12
	.long	0xe4
	.byte	0x2
	.byte	0
	.uleb128 0x10
	.long	0x194f6
	.long	0x1a3db
	.uleb128 0x12
	.long	0xe4
	.byte	0x2
	.byte	0
	.uleb128 0x10
	.long	0x194d7
	.long	0x1a3f1
	.uleb128 0x12
	.long	0xe4
	.byte	0x2
	.uleb128 0x12
	.long	0xe4
	.byte	0x5e
	.byte	0
	.uleb128 0xbd
	.ascii "font_types\0"
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x9
	.byte	0x7d
	.byte	0x6
	.long	0x1a432
	.uleb128 0x1f
	.ascii "Small_Font\0"
	.byte	0
	.uleb128 0x1f
	.ascii "Medium_Font\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "Big_Font\0"
	.byte	0x2
	.byte	0
	.uleb128 0x34
	.ascii "Font\0"
	.byte	0x9
	.byte	0x83
	.byte	0xb
	.long	0x1a322
	.uleb128 0x5
	.byte	0x3
	.long	_Font
	.uleb128 0x23
	.ascii "Color\0"
	.byte	0x10
	.byte	0x9
	.byte	0x85
	.byte	0x8
	.long	0x1a481
	.uleb128 0x11
	.ascii "R\0"
	.byte	0x9
	.byte	0x86
	.byte	0x9
	.long	0xf4
	.byte	0
	.uleb128 0x11
	.ascii "G\0"
	.byte	0x9
	.byte	0x86
	.byte	0xc
	.long	0xf4
	.byte	0x4
	.uleb128 0x11
	.ascii "B\0"
	.byte	0x9
	.byte	0x86
	.byte	0xf
	.long	0xf4
	.byte	0x8
	.uleb128 0x11
	.ascii "A\0"
	.byte	0x9
	.byte	0x86
	.byte	0x12
	.long	0xf4
	.byte	0xc
	.byte	0
	.uleb128 0x14
	.long	0x1a445
	.uleb128 0x23
	.ascii "Color_hsv\0"
	.byte	0x10
	.byte	0x9
	.byte	0x89
	.byte	0x8
	.long	0x1a4ca
	.uleb128 0x11
	.ascii "h\0"
	.byte	0x9
	.byte	0x8a
	.byte	0xb
	.long	0x7d5
	.byte	0
	.uleb128 0x11
	.ascii "s\0"
	.byte	0x9
	.byte	0x8a
	.byte	0xe
	.long	0x7d5
	.byte	0x4
	.uleb128 0x11
	.ascii "v\0"
	.byte	0x9
	.byte	0x8a
	.byte	0x11
	.long	0x7d5
	.byte	0x8
	.uleb128 0x11
	.ascii "alpha\0"
	.byte	0x9
	.byte	0x8b
	.byte	0xb
	.long	0x1a027
	.byte	0xc
	.byte	0
	.uleb128 0x1b
	.ascii "WHITE\0"
	.byte	0x9
	.byte	0xd0
	.byte	0xd
	.long	0x1a481
	.uleb128 0x5
	.byte	0x3
	.long	__ZL5WHITE
	.uleb128 0x1b
	.ascii "DARK_WHITE\0"
	.byte	0x9
	.byte	0xd1
	.byte	0xd
	.long	0x1a481
	.uleb128 0x5
	.byte	0x3
	.long	__ZL10DARK_WHITE
	.uleb128 0x1b
	.ascii "LIGHT_GRAY\0"
	.byte	0x9
	.byte	0xd2
	.byte	0xd
	.long	0x1a481
	.uleb128 0x5
	.byte	0x3
	.long	__ZL10LIGHT_GRAY
	.uleb128 0x1b
	.ascii "GRAY\0"
	.byte	0x9
	.byte	0xd3
	.byte	0xd
	.long	0x1a481
	.uleb128 0x5
	.byte	0x3
	.long	__ZL4GRAY
	.uleb128 0x1b
	.ascii "BLACK\0"
	.byte	0x9
	.byte	0xd4
	.byte	0xd
	.long	0x1a481
	.uleb128 0x5
	.byte	0x3
	.long	__ZL5BLACK
	.uleb128 0x1b
	.ascii "GREEN\0"
	.byte	0x9
	.byte	0xd5
	.byte	0xd
	.long	0x1a481
	.uleb128 0x5
	.byte	0x3
	.long	__ZL5GREEN
	.uleb128 0x1b
	.ascii "DARK_GREEN\0"
	.byte	0x9
	.byte	0xd6
	.byte	0xd
	.long	0x1a481
	.uleb128 0x5
	.byte	0x3
	.long	__ZL10DARK_GREEN
	.uleb128 0x1b
	.ascii "BLUE\0"
	.byte	0x9
	.byte	0xd7
	.byte	0xd
	.long	0x1a481
	.uleb128 0x5
	.byte	0x3
	.long	__ZL4BLUE
	.uleb128 0x1b
	.ascii "DARK_BLUE\0"
	.byte	0x9
	.byte	0xd8
	.byte	0xd
	.long	0x1a481
	.uleb128 0x5
	.byte	0x3
	.long	__ZL9DARK_BLUE
	.uleb128 0x1b
	.ascii "ERROR_RED\0"
	.byte	0x9
	.byte	0xd9
	.byte	0xd
	.long	0x1a481
	.uleb128 0x5
	.byte	0x3
	.long	__ZL9ERROR_RED
	.uleb128 0x1b
	.ascii "WARNING\0"
	.byte	0x9
	.byte	0xda
	.byte	0xd
	.long	0x1a481
	.uleb128 0x5
	.byte	0x3
	.long	__ZL7WARNING
	.uleb128 0x23
	.ascii "Color_Palette\0"
	.byte	0x70
	.byte	0x9
	.byte	0xdc
	.byte	0x8
	.long	0x1a666
	.uleb128 0x2b
	.secrel32	LASF222
	.byte	0x9
	.byte	0xdd
	.byte	0xb
	.long	0x1a445
	.byte	0
	.uleb128 0x11
	.ascii "highlight_button_color\0"
	.byte	0x9
	.byte	0xdd
	.byte	0x19
	.long	0x1a445
	.byte	0x10
	.uleb128 0x2b
	.secrel32	LASF223
	.byte	0x9
	.byte	0xde
	.byte	0xb
	.long	0x1a445
	.byte	0x20
	.uleb128 0x11
	.ascii "highlight_value_color\0"
	.byte	0x9
	.byte	0xde
	.byte	0x19
	.long	0x1a445
	.byte	0x30
	.uleb128 0x2b
	.secrel32	LASF224
	.byte	0x9
	.byte	0xdf
	.byte	0xb
	.long	0x1a445
	.byte	0x40
	.uleb128 0x11
	.ascii "highlight_text_color\0"
	.byte	0x9
	.byte	0xdf
	.byte	0x19
	.long	0x1a445
	.byte	0x50
	.uleb128 0x2b
	.secrel32	LASF225
	.byte	0x9
	.byte	0xe0
	.byte	0xb
	.long	0x1a445
	.byte	0x60
	.byte	0
	.uleb128 0x34
	.ascii "default_palette\0"
	.byte	0x9
	.byte	0xe3
	.byte	0xf
	.long	0x1a5bd
	.uleb128 0x5
	.byte	0x3
	.long	_default_palette
	.uleb128 0x34
	.ascii "slider_palette\0"
	.byte	0x9
	.byte	0xe4
	.byte	0xf
	.long	0x1a5bd
	.uleb128 0x5
	.byte	0x3
	.long	_slider_palette
	.uleb128 0x34
	.ascii "header_palette\0"
	.byte	0x9
	.byte	0xe5
	.byte	0xf
	.long	0x1a5bd
	.uleb128 0x5
	.byte	0x3
	.long	_header_palette
	.uleb128 0x34
	.ascii "save_palette\0"
	.byte	0x9
	.byte	0xe6
	.byte	0xf
	.long	0x1a5bd
	.uleb128 0x5
	.byte	0x3
	.long	_save_palette
	.uleb128 0x34
	.ascii "no_save_palette\0"
	.byte	0x9
	.byte	0xe7
	.byte	0xf
	.long	0x1a5bd
	.uleb128 0x5
	.byte	0x3
	.long	_no_save_palette
	.uleb128 0x1b
	.ascii "Packed_Font_W\0"
	.byte	0x9
	.byte	0xe9
	.byte	0xb
	.long	0xfb
	.uleb128 0x5
	.byte	0x3
	.long	__ZL13Packed_Font_W
	.uleb128 0x1b
	.ascii "Packed_Font_H\0"
	.byte	0x9
	.byte	0xea
	.byte	0xb
	.long	0xfb
	.uleb128 0x5
	.byte	0x3
	.long	__ZL13Packed_Font_H
	.uleb128 0x7e
	.ascii "texture_dim\0"
	.byte	0x9
	.word	0x24a
	.byte	0x5
	.long	0xf4
	.uleb128 0x5
	.byte	0x3
	.long	_texture_dim
	.uleb128 0x7f
	.ascii "Centers_Style\0"
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x9
	.word	0x31a
	.byte	0x6
	.long	0x1a784
	.uleb128 0x1f
	.ascii "Grid\0"
	.byte	0
	.uleb128 0x1f
	.ascii "Hexagonal\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "Random\0"
	.byte	0x2
	.byte	0
	.uleb128 0x7f
	.ascii "Render_Centers_By\0"
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x9
	.word	0x320
	.byte	0x6
	.long	0x1a7e5
	.uleb128 0x1f
	.ascii "Randomness\0"
	.byte	0
	.uleb128 0x1f
	.ascii "Brightness\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "Darkness\0"
	.byte	0x2
	.uleb128 0x1f
	.ascii "Render_Centers_By_Count\0"
	.byte	0x3
	.byte	0
	.uleb128 0x4f
	.secrel32	LASF226
	.byte	0x84
	.byte	0x9
	.word	0x32a
	.byte	0x8
	.long	0x1ab55
	.uleb128 0xa
	.ascii "result_brightness\0"
	.byte	0x9
	.word	0x32b
	.byte	0x1d
	.long	0xf4
	.byte	0
	.uleb128 0xa
	.ascii "result_contrast\0"
	.byte	0x9
	.word	0x32c
	.byte	0x1d
	.long	0xf4
	.byte	0x4
	.uleb128 0xa
	.ascii "source_brightness\0"
	.byte	0x9
	.word	0x32e
	.byte	0x1d
	.long	0xf4
	.byte	0x8
	.uleb128 0xa
	.ascii "source_contrast\0"
	.byte	0x9
	.word	0x32f
	.byte	0x1d
	.long	0xf4
	.byte	0xc
	.uleb128 0xa
	.ascii "save_as_png\0"
	.byte	0x9
	.word	0x331
	.byte	0x18
	.long	0x15b97
	.byte	0x10
	.uleb128 0xa
	.ascii "save_as_bmp\0"
	.byte	0x9
	.word	0x332
	.byte	0x18
	.long	0x15b97
	.byte	0x11
	.uleb128 0xa
	.ascii "save_as_jpg\0"
	.byte	0x9
	.word	0x333
	.byte	0x18
	.long	0x15b97
	.byte	0x12
	.uleb128 0x19
	.secrel32	LASF217
	.byte	0x9
	.word	0x335
	.byte	0x13
	.long	0x7d5
	.byte	0x14
	.uleb128 0xa
	.ascii "lock_zoom\0"
	.byte	0x9
	.word	0x337
	.byte	0x16
	.long	0x15b97
	.byte	0x18
	.uleb128 0xa
	.ascii "texture_selected\0"
	.byte	0x9
	.word	0x339
	.byte	0x1c
	.long	0xf4
	.byte	0x1c
	.uleb128 0xa
	.ascii "bg_color\0"
	.byte	0x9
	.word	0x33c
	.byte	0x16
	.long	0x1a445
	.byte	0x20
	.uleb128 0xa
	.ascii "use_original_as_background\0"
	.byte	0x9
	.word	0x33d
	.byte	0x27
	.long	0x15b97
	.byte	0x30
	.uleb128 0xa
	.ascii "caps_or_texture\0"
	.byte	0x9
	.word	0x340
	.byte	0x1b
	.long	0xf4
	.byte	0x34
	.uleb128 0xa
	.ascii "style_settings_visible\0"
	.byte	0x9
	.word	0x341
	.byte	0x23
	.long	0x15b97
	.byte	0x38
	.uleb128 0xa
	.ascii "x_hex\0"
	.byte	0x9
	.word	0x344
	.byte	0x12
	.long	0xf4
	.byte	0x3c
	.uleb128 0xa
	.ascii "y_hex\0"
	.byte	0x9
	.word	0x345
	.byte	0x12
	.long	0xf4
	.byte	0x40
	.uleb128 0x19
	.secrel32	LASF227
	.byte	0x9
	.word	0x346
	.byte	0x12
	.long	0xf4
	.byte	0x44
	.uleb128 0xa
	.ascii "shuffle_centers\0"
	.byte	0x9
	.word	0x347
	.byte	0x1c
	.long	0x15b97
	.byte	0x48
	.uleb128 0xa
	.ascii "x_grid\0"
	.byte	0x9
	.word	0x34a
	.byte	0x12
	.long	0xf4
	.byte	0x4c
	.uleb128 0xa
	.ascii "y_grid\0"
	.byte	0x9
	.word	0x34b
	.byte	0x12
	.long	0xf4
	.byte	0x50
	.uleb128 0x19
	.secrel32	LASF181
	.byte	0x9
	.word	0x34c
	.byte	0x12
	.long	0xf4
	.byte	0x54
	.uleb128 0xa
	.ascii "total_centers\0"
	.byte	0x9
	.word	0x34f
	.byte	0x19
	.long	0xf4
	.byte	0x58
	.uleb128 0xa
	.ascii "random_radius\0"
	.byte	0x9
	.word	0x350
	.byte	0x19
	.long	0xf4
	.byte	0x5c
	.uleb128 0xa
	.ascii "render_centers_by\0"
	.byte	0x9
	.word	0x351
	.byte	0x1d
	.long	0xf4
	.byte	0x60
	.uleb128 0xa
	.ascii "centers_style\0"
	.byte	0x9
	.word	0x354
	.byte	0x19
	.long	0xf4
	.byte	0x64
	.uleb128 0xa
	.ascii "centers_settings_visible\0"
	.byte	0x9
	.word	0x355
	.byte	0x25
	.long	0x15b97
	.byte	0x68
	.uleb128 0xa
	.ascii "inverse_caps\0"
	.byte	0x9
	.word	0x358
	.byte	0x19
	.long	0x15b97
	.byte	0x69
	.uleb128 0xa
	.ascii "by_color\0"
	.byte	0x9
	.word	0x359
	.byte	0x19
	.long	0x15b97
	.byte	0x6a
	.uleb128 0xa
	.ascii "hard_max\0"
	.byte	0x9
	.word	0x35a
	.byte	0x19
	.long	0x15b97
	.byte	0x6b
	.uleb128 0xa
	.ascii "adjusted_brightness\0"
	.byte	0x9
	.word	0x35d
	.byte	0x1f
	.long	0xf4
	.byte	0x6c
	.uleb128 0xa
	.ascii "adjusted_hue\0"
	.byte	0x9
	.word	0x35e
	.byte	0x1f
	.long	0xf4
	.byte	0x70
	.uleb128 0xa
	.ascii "allow_oversizing\0"
	.byte	0x9
	.word	0x360
	.byte	0x1d
	.long	0x15b97
	.byte	0x74
	.uleb128 0xa
	.ascii "range_high\0"
	.byte	0x9
	.word	0x362
	.byte	0x16
	.long	0xf4
	.byte	0x78
	.uleb128 0xa
	.ascii "range_low\0"
	.byte	0x9
	.word	0x363
	.byte	0x16
	.long	0xf4
	.byte	0x7c
	.uleb128 0xa
	.ascii "invert_size\0"
	.byte	0x9
	.word	0x365
	.byte	0x19
	.long	0x15b97
	.byte	0x80
	.uleb128 0x19
	.secrel32	LASF228
	.byte	0x9
	.word	0x366
	.byte	0x19
	.long	0x15b97
	.byte	0x81
	.uleb128 0xbe
	.secrel32	LASF226
	.ascii "_ZN16General_SettingsC4Ev\0"
	.long	0x1ab4e
	.uleb128 0x5
	.long	0x1e9e6
	.byte	0
	.byte	0
	.uleb128 0x7e
	.ascii "settings\0"
	.byte	0x9
	.word	0x368
	.byte	0x12
	.long	0x1a7e5
	.uleb128 0x5
	.byte	0x3
	.long	_settings
	.uleb128 0x39
	.ascii "Slider_Handler\0"
	.byte	0xc
	.byte	0x9
	.word	0x55b
	.byte	0x8
	.long	0x1abe3
	.uleb128 0xa
	.ascii "pressing_a_slider\0"
	.byte	0x9
	.word	0x55c
	.byte	0x24
	.long	0x15b97
	.byte	0
	.uleb128 0xa
	.ascii "which_slider_is_pressed\0"
	.byte	0x9
	.word	0x55d
	.byte	0x25
	.long	0xf4
	.byte	0x4
	.uleb128 0xa
	.ascii "high_slider_pressed\0"
	.byte	0x9
	.word	0x55e
	.byte	0x24
	.long	0x15b97
	.byte	0x8
	.byte	0
	.uleb128 0x7e
	.ascii "sliders\0"
	.byte	0x9
	.word	0x561
	.byte	0x10
	.long	0x1ab6d
	.uleb128 0x5
	.byte	0x3
	.long	_sliders
	.uleb128 0x39
	.ascii "Panel\0"
	.byte	0x20
	.byte	0x9
	.word	0x563
	.byte	0x8
	.long	0x1b0bf
	.uleb128 0xa
	.ascii "left_x\0"
	.byte	0x9
	.word	0x564
	.byte	0x12
	.long	0xf4
	.byte	0
	.uleb128 0xa
	.ascii "base_width\0"
	.byte	0x9
	.word	0x566
	.byte	0x17
	.long	0xf4
	.byte	0x4
	.uleb128 0xa
	.ascii "base_height\0"
	.byte	0x9
	.word	0x567
	.byte	0x17
	.long	0xf4
	.byte	0x8
	.uleb128 0xa
	.ascii "row_height\0"
	.byte	0x9
	.word	0x569
	.byte	0x18
	.long	0xf4
	.byte	0xc
	.uleb128 0xa
	.ascii "column_width\0"
	.byte	0x9
	.word	0x56a
	.byte	0x18
	.long	0xf4
	.byte	0x10
	.uleb128 0xa
	.ascii "at_x\0"
	.byte	0x9
	.word	0x56c
	.byte	0x10
	.long	0xf4
	.byte	0x14
	.uleb128 0xa
	.ascii "at_y\0"
	.byte	0x9
	.word	0x56d
	.byte	0x10
	.long	0xf4
	.byte	0x18
	.uleb128 0x19
	.secrel32	LASF195
	.byte	0x9
	.word	0x56f
	.byte	0x15
	.long	0xf4
	.byte	0x1c
	.uleb128 0x80
	.ascii "row\0"
	.byte	0x9
	.word	0x571
	.byte	0xa
	.ascii "_ZN5Panel3rowEif\0"
	.long	0x1acc1
	.long	0x1acd1
	.uleb128 0x5
	.long	0x1b0bf
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x80
	.ascii "current_row\0"
	.byte	0x9
	.word	0x572
	.byte	0xa
	.ascii "_ZN5Panel11current_rowEif\0"
	.long	0x1ad05
	.long	0x1ad15
	.uleb128 0x5
	.long	0x1b0bf
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x80
	.ascii "indent\0"
	.byte	0x9
	.word	0x573
	.byte	0xa
	.ascii "_ZN5Panel6indentEf\0"
	.long	0x1ad3d
	.long	0x1ad48
	.uleb128 0x5
	.long	0x1b0bf
	.uleb128 0x2
	.long	0x7d5
	.byte	0
	.uleb128 0x55
	.ascii "get_current_rect\0"
	.byte	0x9
	.word	0x574
	.byte	0xa
	.ascii "_ZN5Panel16get_current_rectEv\0"
	.long	0x227b
	.long	0x1ad88
	.long	0x1ad8e
	.uleb128 0x5
	.long	0x1b0bf
	.byte	0
	.uleb128 0x55
	.ascii "push_toggler\0"
	.byte	0x9
	.word	0x576
	.byte	0xa
	.ascii "_ZN5Panel12push_togglerEPc13Color_PalettePbP5Color\0"
	.long	0x15b97
	.long	0x1addf
	.long	0x1adf9
	.uleb128 0x5
	.long	0x1b0bf
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x1a5bd
	.uleb128 0x2
	.long	0x1b0ca
	.uleb128 0x2
	.long	0x1b0d0
	.byte	0
	.uleb128 0x55
	.ascii "push_updown_counter\0"
	.byte	0x9
	.word	0x577
	.byte	0xa
	.ascii "_ZN5Panel19push_updown_counterEPc13Color_PalettePvb\0"
	.long	0xf4
	.long	0x1ae52
	.long	0x1ae6c
	.uleb128 0x5
	.long	0x1b0bf
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x1a5bd
	.uleb128 0x2
	.long	0x7aa
	.uleb128 0x2
	.long	0x15b97
	.byte	0
	.uleb128 0x55
	.ascii "push_slider\0"
	.byte	0x9
	.word	0x578
	.byte	0xa
	.ascii "_ZN5Panel11push_sliderEPc13Color_PalettePiiii\0"
	.long	0x15b97
	.long	0x1aeb7
	.long	0x1aedb
	.uleb128 0x5
	.long	0x1b0bf
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x1a5bd
	.uleb128 0x2
	.long	0x482
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x55
	.ascii "push_double_slider\0"
	.byte	0x9
	.word	0x579
	.byte	0xa
	.ascii "_ZN5Panel18push_double_sliderEPc13Color_PalettePiS2_iii\0"
	.long	0x15b97
	.long	0x1af37
	.long	0x1af60
	.uleb128 0x5
	.long	0x1b0bf
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x1a5bd
	.uleb128 0x2
	.long	0x482
	.uleb128 0x2
	.long	0x482
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x55
	.ascii "push_button\0"
	.byte	0x9
	.word	0x57a
	.byte	0xa
	.ascii "_ZN5Panel11push_buttonEPc13Color_Palettei\0"
	.long	0xf4
	.long	0x1afa7
	.long	0x1afbc
	.uleb128 0x5
	.long	0x1b0bf
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x1a5bd
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.uleb128 0x55
	.ascii "push_header\0"
	.byte	0x9
	.word	0x57b
	.byte	0xa
	.ascii "_ZN5Panel11push_headerEPc13Color_PaletteiPi\0"
	.long	0x15b97
	.long	0x1b005
	.long	0x1b01f
	.uleb128 0x5
	.long	0x1b0bf
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x1a5bd
	.uleb128 0x2
	.long	0xf4
	.uleb128 0x2
	.long	0x482
	.byte	0
	.uleb128 0x55
	.ascii "push_selector\0"
	.byte	0x9
	.word	0x57c
	.byte	0xa
	.ascii "_ZN5Panel13push_selectorEPc13Color_Palette\0"
	.long	0xf4
	.long	0x1b069
	.long	0x1b079
	.uleb128 0x5
	.long	0x1b0bf
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x1a5bd
	.byte	0
	.uleb128 0xbf
	.ascii "add_text\0"
	.byte	0x9
	.word	0x57d
	.byte	0xa
	.ascii "_ZN5Panel8add_textEPc5Colori\0"
	.long	0x1b0a9
	.uleb128 0x5
	.long	0x1b0bf
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0x1a445
	.uleb128 0x2
	.long	0xf4
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1abfa
	.uleb128 0x14
	.long	0x1b0bf
	.uleb128 0xc
	.byte	0x4
	.long	0x15b97
	.uleb128 0xc
	.byte	0x4
	.long	0x1a445
	.uleb128 0x7f
	.ascii "Push_Result\0"
	.byte	0x7
	.byte	0x4
	.long	0xe4
	.byte	0x9
	.word	0x580
	.byte	0x6
	.long	0x1b151
	.uleb128 0x1f
	.ascii "Button_not_Pressed_nor_Hovered\0"
	.byte	0
	.uleb128 0x1f
	.ascii "Button_Hovered\0"
	.byte	0x1
	.uleb128 0x1f
	.ascii "Button_Left_Clicked\0"
	.byte	0x2
	.uleb128 0x1f
	.ascii "Button_Right_Clicked\0"
	.byte	0x3
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1084e
	.uleb128 0x20
	.byte	0x4
	.long	0x12a83
	.uleb128 0xc
	.byte	0x4
	.long	0x10fef
	.uleb128 0x20
	.byte	0x4
	.long	0x1084e
	.uleb128 0xc
	.byte	0x4
	.long	0x100bc
	.uleb128 0x20
	.byte	0x4
	.long	0x467
	.uleb128 0xc
	.byte	0x4
	.long	0x10849
	.uleb128 0x20
	.byte	0x4
	.long	0x100bc
	.uleb128 0xc
	.byte	0x4
	.long	0x11ed7
	.uleb128 0x20
	.byte	0x4
	.long	0x16e67
	.uleb128 0xc
	.byte	0x4
	.long	0x126c0
	.uleb128 0x20
	.byte	0x4
	.long	0x11ed7
	.uleb128 0xc
	.byte	0x4
	.long	0x116fd
	.uleb128 0x20
	.byte	0x4
	.long	0x16e50
	.uleb128 0xc
	.byte	0x4
	.long	0x11ed2
	.uleb128 0x20
	.byte	0x4
	.long	0x116fd
	.uleb128 0x81
	.ascii "_ZNSt17integral_constantIbLb0EE5valueE\0"
	.long	0xbcd5
	.byte	0
	.uleb128 0x81
	.ascii "_ZNSt17integral_constantIbLb1EE5valueE\0"
	.long	0xbde3
	.byte	0x1
	.uleb128 0xc0
	.ascii "_ZN9__gnu_cxx24__numeric_traits_integerIiE5__minE\0"
	.long	0xfd54
	.sleb128 -2147483648
	.uleb128 0xc1
	.ascii "_ZN9__gnu_cxx24__numeric_traits_integerIiE5__maxE\0"
	.long	0xfd62
	.long	0x7fffffff
	.uleb128 0x81
	.ascii "_ZN9__gnu_cxx25__numeric_traits_floatingIfE16__max_exponent10E\0"
	.long	0x11042
	.byte	0x26
	.uleb128 0x9e
	.ascii "_ZN9__gnu_cxx25__numeric_traits_floatingIdE16__max_exponent10E\0"
	.long	0x110a7
	.word	0x134
	.uleb128 0x9e
	.ascii "_ZN9__gnu_cxx25__numeric_traits_floatingIeE16__max_exponent10E\0"
	.long	0x11111
	.word	0x1344
	.uleb128 0xc2
	.ascii "_GLOBAL__sub_I_stbi_write_png_compression_level\0"
	.long	LFB2700
	.long	LFE2700-LFB2700
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0xc3
	.ascii "__static_initialization_and_destruction_0\0"
	.long	LFB2699
	.long	LFE2699-LFB2699
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b403
	.uleb128 0x3
	.ascii "__initialize_p\0"
	.byte	0x9
	.word	0x932
	.byte	0x1
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "__priority\0"
	.byte	0x9
	.word	0x932
	.byte	0x1
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x56
	.long	0xf605
	.long	LFB2688
	.long	LFE2688-LFB2688
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b44d
	.uleb128 0x1d
	.secrel32	LASF133
	.long	0x461
	.uleb128 0x21
	.ascii "__first\0"
	.byte	0xe
	.byte	0x62
	.byte	0x26
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x21
	.ascii "__last\0"
	.byte	0xe
	.byte	0x62
	.byte	0x45
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x75
	.long	0xbfd2
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x56
	.long	0xf69f
	.long	LFB2687
	.long	LFE2687-LFB2687
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b474
	.uleb128 0x32
	.ascii "_Iter\0"
	.long	0x461
	.uleb128 0x75
	.long	0x1b16f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x45
	.long	0xf726
	.long	LFB2661
	.long	LFE2661-LFB2661
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b4b6
	.uleb128 0x1d
	.secrel32	LASF81
	.long	0x461
	.uleb128 0x21
	.ascii "__first\0"
	.byte	0xe
	.byte	0x8a
	.byte	0x1d
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x21
	.ascii "__last\0"
	.byte	0xe
	.byte	0x8a
	.byte	0x35
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x56
	.long	0x126c5
	.long	LFB2660
	.long	LFE2660-LFB2660
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b4e6
	.uleb128 0x32
	.ascii "_Type\0"
	.long	0xb8
	.uleb128 0x21
	.ascii "__ptr\0"
	.byte	0xd
	.byte	0x98
	.byte	0x1e
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x82
	.long	0x6ece
	.long	0x1b507
	.long	LFB2630
	.long	LFE2630-LFB2630
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b54c
	.uleb128 0x1d
	.secrel32	LASF79
	.long	0x461
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x16e03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2c
	.secrel32	LASF229
	.byte	0xc
	.byte	0xcf
	.byte	0x20
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.secrel32	LASF230
	.byte	0xc
	.byte	0xcf
	.byte	0x33
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x75
	.long	0xbf82
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1b
	.ascii "__dnew\0"
	.byte	0xc
	.byte	0xd7
	.byte	0xc
	.long	0x2a2e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x82
	.long	0x6f63
	.long	0x1b56d
	.long	LFB2596
	.long	LFE2596-LFB2596
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b5a0
	.uleb128 0x1d
	.secrel32	LASF80
	.long	0x461
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x16e03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2c
	.secrel32	LASF229
	.byte	0x3
	.byte	0xe8
	.byte	0x26
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.secrel32	LASF230
	.byte	0x3
	.byte	0xe8
	.byte	0x39
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x75
	.long	0xbc19
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x82
	.long	0x7008
	.long	0x1b5c1
	.long	LFB2564
	.long	LFE2564-LFB2564
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b5ec
	.uleb128 0x1d
	.secrel32	LASF80
	.long	0x461
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x16e03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2c
	.secrel32	LASF229
	.byte	0x3
	.byte	0xfc
	.byte	0x22
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.secrel32	LASF230
	.byte	0x3
	.byte	0xfc
	.byte	0x35
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x5c
	.byte	0x4
	.long	0xf544
	.uleb128 0x56
	.long	0xf798
	.long	LFB2562
	.long	LFE2562-LFB2562
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b61e
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0x16e2c
	.uleb128 0x21
	.ascii "__t\0"
	.byte	0xb
	.byte	0x63
	.byte	0x10
	.long	0x16e2c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x50
	.long	0x2897
	.long	0x1b62c
	.byte	0x2
	.long	0x1b650
	.uleb128 0x3d
	.secrel32	LASF231
	.long	0x16de2
	.uleb128 0x67
	.ascii "__dat\0"
	.byte	0x3
	.byte	0x91
	.byte	0x17
	.long	0x29e8
	.uleb128 0x67
	.ascii "__a\0"
	.byte	0x3
	.byte	0x91
	.byte	0x2c
	.long	0x16831
	.byte	0
	.uleb128 0x57
	.long	0x1b61e
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_\0"
	.long	0x1b6ab
	.long	0x1b6bb
	.uleb128 0x46
	.long	0x1b62c
	.uleb128 0x46
	.long	0x1b635
	.uleb128 0x46
	.long	0x1b643
	.byte	0
	.uleb128 0x50
	.long	0xfb19
	.long	0x1b6c9
	.byte	0x2
	.long	0x1b6dc
	.uleb128 0x3d
	.secrel32	LASF231
	.long	0x16809
	.uleb128 0x3d
	.secrel32	LASF232
	.long	0xfb
	.byte	0
	.uleb128 0x57
	.long	0x1b6bb
	.ascii "_ZN9__gnu_cxx13new_allocatorIcED2Ev\0"
	.long	0x1b70d
	.long	0x1b713
	.uleb128 0x46
	.long	0x1b6c9
	.byte	0
	.uleb128 0x50
	.long	0xfa9a
	.long	0x1b721
	.byte	0x2
	.long	0x1b72b
	.uleb128 0x3d
	.secrel32	LASF231
	.long	0x16809
	.byte	0
	.uleb128 0x57
	.long	0x1b713
	.ascii "_ZN9__gnu_cxx13new_allocatorIcEC2Ev\0"
	.long	0x1b75c
	.long	0x1b762
	.uleb128 0x46
	.long	0x1b721
	.byte	0
	.uleb128 0x50
	.long	0x2905
	.long	0x1b770
	.byte	0x2
	.long	0x1b794
	.uleb128 0x3d
	.secrel32	LASF231
	.long	0x16de2
	.uleb128 0x67
	.ascii "__dat\0"
	.byte	0x3
	.byte	0x94
	.byte	0x17
	.long	0x29e8
	.uleb128 0x67
	.ascii "__a\0"
	.byte	0x3
	.byte	0x94
	.byte	0x27
	.long	0x16de7
	.byte	0
	.uleb128 0x57
	.long	0x1b762
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_\0"
	.long	0x1b7ee
	.long	0x1b7fe
	.uleb128 0x46
	.long	0x1b770
	.uleb128 0x46
	.long	0x1b779
	.uleb128 0x46
	.long	0x1b787
	.byte	0
	.uleb128 0x5c
	.byte	0x4
	.long	0xf46c
	.uleb128 0x9f
	.long	0xf840
	.long	0x1b824
	.uleb128 0x32
	.ascii "_Tp\0"
	.long	0x16dca
	.uleb128 0x67
	.ascii "__t\0"
	.byte	0xb
	.byte	0x63
	.byte	0x10
	.long	0x16dca
	.byte	0
	.uleb128 0x50
	.long	0x7080
	.long	0x1b83b
	.byte	0x2
	.long	0x1b86e
	.uleb128 0x1d
	.secrel32	LASF81
	.long	0x461
	.uleb128 0x3d
	.secrel32	LASF231
	.long	0x16e03
	.uleb128 0xa0
	.secrel32	LASF229
	.byte	0x3
	.word	0x25c
	.byte	0x25
	.long	0x461
	.uleb128 0xa0
	.secrel32	LASF230
	.byte	0x3
	.word	0x25c
	.byte	0x3b
	.long	0x461
	.uleb128 0x68
	.ascii "__a\0"
	.byte	0x3
	.word	0x25d
	.byte	0x16
	.long	0x16831
	.byte	0
	.uleb128 0xa1
	.long	0x1b824
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_\0"
	.long	0x1b8d7
	.long	LFB2466
	.long	LFE2466-LFB2466
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b8f8
	.uleb128 0x1d
	.secrel32	LASF81
	.long	0x461
	.uleb128 0x63
	.long	0x1b83b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x63
	.long	0x1b844
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x63
	.long	0x1b852
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x63
	.long	0x1b860
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x45
	.long	0xf8ad
	.long	LFB2462
	.long	LFE2462-LFB2462
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b94b
	.uleb128 0x1d
	.secrel32	LASF82
	.long	0xb8
	.uleb128 0x1d
	.secrel32	LASF83
	.long	0xc244
	.uleb128 0x1d
	.secrel32	LASF84
	.long	0xd043
	.uleb128 0x3
	.ascii "__lhs\0"
	.byte	0x3
	.word	0x1765
	.byte	0x37
	.long	0x16e26
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "__rhs\0"
	.byte	0x3
	.word	0x1766
	.byte	0x16
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x45
	.long	0xf932
	.long	LFB2461
	.long	LFE2461-LFB2461
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b99e
	.uleb128 0x1d
	.secrel32	LASF82
	.long	0xb8
	.uleb128 0x1d
	.secrel32	LASF83
	.long	0xc244
	.uleb128 0x1d
	.secrel32	LASF84
	.long	0xd043
	.uleb128 0x3
	.ascii "__lhs\0"
	.byte	0x3
	.word	0x1759
	.byte	0x1d
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "__rhs\0"
	.byte	0x3
	.word	0x175a
	.byte	0x30
	.long	0x16e26
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x50
	.long	0xd0b4
	.long	0x1b9ac
	.byte	0x2
	.long	0x1b9bf
	.uleb128 0x3d
	.secrel32	LASF231
	.long	0x1682c
	.uleb128 0x3d
	.secrel32	LASF232
	.long	0xfb
	.byte	0
	.uleb128 0x57
	.long	0x1b99e
	.ascii "_ZNSaIcED2Ev\0"
	.long	0x1b9d9
	.long	0x1b9df
	.uleb128 0x46
	.long	0x1b9ac
	.byte	0
	.uleb128 0x50
	.long	0xd064
	.long	0x1b9ed
	.byte	0x2
	.long	0x1b9f7
	.uleb128 0x3d
	.secrel32	LASF231
	.long	0x1682c
	.byte	0
	.uleb128 0x57
	.long	0x1b9df
	.ascii "_ZNSaIcEC2Ev\0"
	.long	0x1ba11
	.long	0x1ba17
	.uleb128 0x46
	.long	0x1b9ed
	.byte	0
	.uleb128 0x50
	.long	0x3a55
	.long	0x1ba25
	.byte	0x2
	.long	0x1ba3e
	.uleb128 0x3d
	.secrel32	LASF231
	.long	0x16e03
	.uleb128 0x68
	.ascii "__str\0"
	.byte	0x3
	.word	0x213
	.byte	0x23
	.long	0x16e26
	.byte	0
	.uleb128 0x57
	.long	0x1ba17
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_\0"
	.long	0x1ba88
	.long	0x1ba93
	.uleb128 0x46
	.long	0x1ba25
	.uleb128 0x46
	.long	0x1ba2e
	.byte	0
	.uleb128 0x50
	.long	0x3bef
	.long	0x1baa1
	.byte	0x2
	.long	0x1bab4
	.uleb128 0x3d
	.secrel32	LASF231
	.long	0x16e03
	.uleb128 0x3d
	.secrel32	LASF232
	.long	0xfb
	.byte	0
	.uleb128 0x57
	.long	0x1ba93
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev\0"
	.long	0x1bafb
	.long	0x1bb01
	.uleb128 0x46
	.long	0x1baa1
	.byte	0
	.uleb128 0xc4
	.long	0x2980
	.byte	0x3
	.byte	0x8b
	.byte	0xe
	.long	0x1bb13
	.byte	0x2
	.long	0x1bb26
	.uleb128 0x3d
	.secrel32	LASF231
	.long	0x16de2
	.uleb128 0x3d
	.secrel32	LASF232
	.long	0xfb
	.byte	0
	.uleb128 0xa1
	.long	0x1bb01
	.ascii "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev\0"
	.long	0x1bb86
	.long	LFB2308
	.long	LFE2308-LFB2308
	.uleb128 0x1
	.byte	0x9c
	.long	0x1bb8f
	.uleb128 0x63
	.long	0x1bb13
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1bb95
	.uleb128 0x59
	.long	0xf4
	.long	0x1bbb3
	.uleb128 0x2
	.long	0x461
	.uleb128 0x2
	.long	0xc5f8
	.uleb128 0x2
	.long	0x12a7d
	.uleb128 0x2
	.long	0x9f
	.byte	0
	.uleb128 0x45
	.long	0x12723
	.long	LFB2304
	.long	LFE2304-LFB2304
	.uleb128 0x1
	.byte	0x9c
	.long	0x1bc43
	.uleb128 0x32
	.ascii "_String\0"
	.long	0x2839
	.uleb128 0x1d
	.secrel32	LASF82
	.long	0xb8
	.uleb128 0x21
	.ascii "__convf\0"
	.byte	0xa
	.byte	0x63
	.byte	0x18
	.long	0x1bb8f
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x21
	.ascii "__n\0"
	.byte	0xa
	.byte	0x64
	.byte	0x26
	.long	0xc5f8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.ascii "__fmt\0"
	.byte	0xa
	.byte	0x65
	.byte	0x12
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x37
	.uleb128 0x1b
	.ascii "__s\0"
	.byte	0xa
	.byte	0x69
	.byte	0xf
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1b
	.ascii "__args\0"
	.byte	0xa
	.byte	0x6c
	.byte	0x19
	.long	0x9f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1b
	.ascii "__len\0"
	.byte	0xa
	.byte	0x6f
	.byte	0x11
	.long	0xfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x51
	.long	0x1aedb
	.word	0x8de
	.byte	0x6
	.long	0x1bc5d
	.long	LFB2230
	.long	LFE2230-LFB2230
	.uleb128 0x1
	.byte	0x9c
	.long	0x1bf3d
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x1b0c5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -244
	.uleb128 0x4
	.secrel32	LASF233
	.byte	0x9
	.word	0x8de
	.byte	0x26
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF234
	.byte	0x9
	.word	0x8de
	.byte	0x3a
	.long	0x1a5bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "low_value\0"
	.byte	0x9
	.word	0x8de
	.byte	0x48
	.long	0x482
	.uleb128 0x3
	.byte	0x91
	.sleb128 116
	.uleb128 0x3
	.ascii "high_value\0"
	.byte	0x9
	.word	0x8de
	.byte	0x58
	.long	0x482
	.uleb128 0x3
	.byte	0x91
	.sleb128 120
	.uleb128 0x3
	.ascii "min_v\0"
	.byte	0x9
	.word	0x8de
	.byte	0x68
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 124
	.uleb128 0x3
	.ascii "max_v\0"
	.byte	0x9
	.word	0x8de
	.byte	0x73
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 128
	.uleb128 0x4
	.secrel32	LASF235
	.byte	0x9
	.word	0x8de
	.byte	0x7e
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 132
	.uleb128 0x7
	.secrel32	LASF236
	.byte	0x9
	.word	0x8df
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "initial_high_value\0"
	.byte	0x9
	.word	0x8e0
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "initial_low_value\0"
	.byte	0x9
	.word	0x8e1
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x7
	.secrel32	LASF237
	.byte	0x9
	.word	0x8e3
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x7
	.secrel32	LASF238
	.byte	0x9
	.word	0x8e4
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x7
	.secrel32	LASF239
	.byte	0x9
	.word	0x8e6
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "slider_height\0"
	.byte	0x9
	.word	0x8e7
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "slider_width\0"
	.byte	0x9
	.word	0x8e8
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x7
	.secrel32	LASF240
	.byte	0x9
	.word	0x8e9
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x1
	.ascii "high_pos\0"
	.byte	0x9
	.word	0x8eb
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "low_pos\0"
	.byte	0x9
	.word	0x8ec
	.byte	0xb
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "high_slider_position\0"
	.byte	0x9
	.word	0x8ed
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "low_slider_position\0"
	.byte	0x9
	.word	0x8ee
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "high_pos_rect\0"
	.byte	0x9
	.word	0x8f0
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x1
	.ascii "low_pos_rect\0"
	.byte	0x9
	.word	0x8f1
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x7
	.secrel32	LASF241
	.byte	0x9
	.word	0x8f3
	.byte	0xa
	.long	0x15b97
	.uleb128 0x3
	.byte	0x91
	.sleb128 -77
	.uleb128 0x1
	.ascii "value_float\0"
	.byte	0x9
	.word	0x8f5
	.byte	0xb
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x7
	.secrel32	LASF87
	.byte	0x9
	.word	0x8f8
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "high_is_closer\0"
	.byte	0x9
	.word	0x8fa
	.byte	0xa
	.long	0x15b97
	.uleb128 0x3
	.byte	0x91
	.sleb128 -78
	.uleb128 0x1
	.ascii "high_slider_color\0"
	.byte	0x9
	.word	0x8fc
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.uleb128 0x1
	.ascii "low_slider_color\0"
	.byte	0x9
	.word	0x8fd
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x7
	.secrel32	LASF224
	.byte	0x9
	.word	0x909
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -228
	.uleb128 0xf
	.long	LBB960
	.long	LBE960-LBB960
	.long	0x1bf1c
	.uleb128 0x1
	.ascii "max_low\0"
	.byte	0x9
	.word	0x915
	.byte	0x15
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.byte	0
	.uleb128 0x9
	.long	LBB961
	.long	LBE961-LBB961
	.uleb128 0x1
	.ascii "min_high\0"
	.byte	0x9
	.word	0x919
	.byte	0x15
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -236
	.byte	0
	.byte	0
	.uleb128 0x51
	.long	0x1ae6c
	.word	0x8aa
	.byte	0x6
	.long	0x1bf57
	.long	LFB2229
	.long	LFE2229-LFB2229
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c122
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x1b0c5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x4
	.secrel32	LASF233
	.byte	0x9
	.word	0x8aa
	.byte	0x1f
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF234
	.byte	0x9
	.word	0x8aa
	.byte	0x33
	.long	0x1a5bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF87
	.byte	0x9
	.word	0x8aa
	.byte	0x41
	.long	0x482
	.uleb128 0x3
	.byte	0x91
	.sleb128 116
	.uleb128 0x3
	.ascii "min_v\0"
	.byte	0x9
	.word	0x8aa
	.byte	0x4c
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 120
	.uleb128 0x3
	.ascii "max_v\0"
	.byte	0x9
	.word	0x8aa
	.byte	0x57
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 124
	.uleb128 0x4
	.secrel32	LASF235
	.byte	0x9
	.word	0x8aa
	.byte	0x62
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 128
	.uleb128 0x7
	.secrel32	LASF236
	.byte	0x9
	.word	0x8ab
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "initial_value\0"
	.byte	0x9
	.word	0x8ac
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x7
	.secrel32	LASF237
	.byte	0x9
	.word	0x8ae
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x7
	.secrel32	LASF238
	.byte	0x9
	.word	0x8af
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x7
	.secrel32	LASF239
	.byte	0x9
	.word	0x8b1
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "slider_side\0"
	.byte	0x9
	.word	0x8b2
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x7
	.secrel32	LASF240
	.byte	0x9
	.word	0x8b3
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x1
	.ascii "pos\0"
	.byte	0x9
	.word	0x8b5
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "slider_position\0"
	.byte	0x9
	.word	0x8b6
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "pos_rect\0"
	.byte	0x9
	.word	0x8b7
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x7
	.secrel32	LASF241
	.byte	0x9
	.word	0x8b9
	.byte	0xa
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -33
	.uleb128 0x1
	.ascii "slider_color\0"
	.byte	0x9
	.word	0x8bc
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x7
	.secrel32	LASF223
	.byte	0x9
	.word	0x8bd
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x7
	.secrel32	LASF224
	.byte	0x9
	.word	0x8be
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0xf
	.long	LBB947
	.long	LBE947-LBB947
	.long	0x1c102
	.uleb128 0x1
	.ascii "new_pos\0"
	.byte	0x9
	.word	0x8c7
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.byte	0
	.uleb128 0x9
	.long	LBB952
	.long	LBE952-LBB952
	.uleb128 0x1
	.ascii "new_pos\0"
	.byte	0x9
	.word	0x8cf
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.byte	0
	.byte	0
	.uleb128 0xa2
	.secrel32	LASF242
	.byte	0x9
	.word	0x8a2
	.byte	0x6
	.ascii "_Z17slider_is_pressedib\0"
	.long	0x15b97
	.long	LFB2228
	.long	LFE2228-LFB2228
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c178
	.uleb128 0x4
	.secrel32	LASF243
	.byte	0x9
	.word	0x8a2
	.byte	0x1c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "high\0"
	.byte	0x9
	.word	0x8a2
	.byte	0x28
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0xa2
	.secrel32	LASF242
	.byte	0x9
	.word	0x89d
	.byte	0x6
	.ascii "_Z17slider_is_pressedi\0"
	.long	0x15b97
	.long	LFB2227
	.long	LFE2227-LFB2227
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c1bc
	.uleb128 0x4
	.secrel32	LASF243
	.byte	0x9
	.word	0x89d
	.byte	0x1c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x51
	.long	0x1af60
	.word	0x882
	.byte	0x5
	.long	0x1c1d6
	.long	LFB2226
	.long	LFE2226-LFB2226
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c266
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x1b0c5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x4
	.secrel32	LASF233
	.byte	0x9
	.word	0x882
	.byte	0x1e
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF234
	.byte	0x9
	.word	0x882
	.byte	0x32
	.long	0x1a5bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF239
	.byte	0x9
	.word	0x882
	.byte	0x3f
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 116
	.uleb128 0x7
	.secrel32	LASF236
	.byte	0x9
	.word	0x883
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF244
	.byte	0x9
	.word	0x885
	.byte	0xa
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x7
	.secrel32	LASF241
	.byte	0x9
	.word	0x88b
	.byte	0xa
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -21
	.uleb128 0x7
	.secrel32	LASF222
	.byte	0x9
	.word	0x88d
	.byte	0xb
	.long	0x1a445
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x7
	.secrel32	LASF224
	.byte	0x9
	.word	0x88e
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x51
	.long	0x1b01f
	.word	0x863
	.byte	0x5
	.long	0x1c280
	.long	LFB2225
	.long	LFE2225-LFB2225
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c353
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x1b0c5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x4
	.secrel32	LASF233
	.byte	0x9
	.word	0x863
	.byte	0x20
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF234
	.byte	0x9
	.word	0x863
	.byte	0x34
	.long	0x1a5bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x7
	.secrel32	LASF239
	.byte	0x9
	.word	0x864
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF245
	.byte	0x9
	.word	0x865
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "at\0"
	.byte	0x9
	.word	0x867
	.byte	0xa
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x7
	.secrel32	LASF246
	.byte	0x9
	.word	0x868
	.byte	0xa
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x7
	.secrel32	LASF247
	.byte	0x9
	.word	0x869
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x7
	.secrel32	LASF238
	.byte	0x9
	.word	0x86a
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x7
	.secrel32	LASF241
	.byte	0x9
	.word	0x86c
	.byte	0xa
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -25
	.uleb128 0x7
	.secrel32	LASF222
	.byte	0x9
	.word	0x86e
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x7
	.secrel32	LASF224
	.byte	0x9
	.word	0x86f
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x1
	.ascii "sign\0"
	.byte	0x9
	.word	0x871
	.byte	0xa
	.long	0x1c353
	.uleb128 0x3
	.byte	0x91
	.sleb128 -126
	.byte	0
	.uleb128 0x10
	.long	0xb8
	.long	0x1c363
	.uleb128 0x12
	.long	0xe4
	.byte	0x1
	.byte	0
	.uleb128 0x51
	.long	0x1afbc
	.word	0x84e
	.byte	0x6
	.long	0x1c37d
	.long	LFB2224
	.long	LFE2224-LFB2224
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c419
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x1b0c5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x4
	.secrel32	LASF233
	.byte	0x9
	.word	0x84e
	.byte	0x1f
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF234
	.byte	0x9
	.word	0x84e
	.byte	0x33
	.long	0x1a5bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF248
	.byte	0x9
	.word	0x84e
	.byte	0x40
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 116
	.uleb128 0x3
	.ascii "current_header\0"
	.byte	0x9
	.word	0x84e
	.byte	0x4d
	.long	0x482
	.uleb128 0x3
	.byte	0x91
	.sleb128 120
	.uleb128 0x7
	.secrel32	LASF238
	.byte	0x9
	.word	0x84f
	.byte	0xa
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF241
	.byte	0x9
	.word	0x850
	.byte	0xa
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x7
	.secrel32	LASF224
	.byte	0x9
	.word	0x852
	.byte	0xb
	.long	0x1a445
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x7
	.secrel32	LASF225
	.byte	0x9
	.word	0x853
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.byte	0
	.uleb128 0x51
	.long	0x1b079
	.word	0x847
	.byte	0x6
	.long	0x1c433
	.long	LFB2223
	.long	LFE2223-LFB2223
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c498
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x1b0c5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x4
	.secrel32	LASF233
	.byte	0x9
	.word	0x847
	.byte	0x1c
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x9
	.word	0x847
	.byte	0x28
	.long	0x1a445
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "override_font_size\0"
	.byte	0x9
	.word	0x847
	.byte	0x2f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "text_font_size\0"
	.byte	0x9
	.word	0x848
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x51
	.long	0x1adf9
	.word	0x81b
	.byte	0x5
	.long	0x1c4b2
	.long	LFB2222
	.long	LFE2222-LFB2222
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c5d5
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x1b0c5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x4
	.secrel32	LASF216
	.byte	0x9
	.word	0x81b
	.byte	0x26
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF234
	.byte	0x9
	.word	0x81b
	.byte	0x3a
	.long	0x1a5bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF87
	.byte	0x9
	.word	0x81b
	.byte	0x49
	.long	0x7aa
	.uleb128 0x3
	.byte	0x91
	.sleb128 116
	.uleb128 0x3
	.ascii "is_float\0"
	.byte	0x9
	.word	0x81b
	.byte	0x55
	.long	0x15b97
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x7
	.secrel32	LASF239
	.byte	0x9
	.word	0x81c
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF245
	.byte	0x9
	.word	0x81d
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF249
	.byte	0x9
	.word	0x81f
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF246
	.byte	0x9
	.word	0x821
	.byte	0xa
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "value_rect\0"
	.byte	0x9
	.word	0x822
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x7
	.secrel32	LASF247
	.byte	0x9
	.word	0x823
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x7
	.secrel32	LASF250
	.byte	0x9
	.word	0x824
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x7
	.secrel32	LASF241
	.byte	0x9
	.word	0x826
	.byte	0xa
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -29
	.uleb128 0x7
	.secrel32	LASF222
	.byte	0x9
	.word	0x828
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x7
	.secrel32	LASF223
	.byte	0x9
	.word	0x829
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x7
	.secrel32	LASF224
	.byte	0x9
	.word	0x82a
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x7
	.secrel32	LASF233
	.byte	0x9
	.word	0x82c
	.byte	0xa
	.long	0x1c353
	.uleb128 0x3
	.byte	0x91
	.sleb128 -162
	.byte	0
	.uleb128 0x51
	.long	0x1ad8e
	.word	0x7fb
	.byte	0x6
	.long	0x1c5ef
	.long	LFB2221
	.long	LFE2221-LFB2221
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c72e
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x1b0c5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x4
	.secrel32	LASF216
	.byte	0x9
	.word	0x7fb
	.byte	0x20
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF234
	.byte	0x9
	.word	0x7fb
	.byte	0x34
	.long	0x1a5bd
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "toggled\0"
	.byte	0x9
	.word	0x7fb
	.byte	0x43
	.long	0x1b0ca
	.uleb128 0x3
	.byte	0x91
	.sleb128 116
	.uleb128 0x3
	.ascii "override_color\0"
	.byte	0x9
	.word	0x7fb
	.byte	0x53
	.long	0x1b0d0
	.uleb128 0x3
	.byte	0x91
	.sleb128 120
	.uleb128 0x7
	.secrel32	LASF239
	.byte	0x9
	.word	0x7fc
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF245
	.byte	0x9
	.word	0x7fd
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "inside_side\0"
	.byte	0x9
	.word	0x7fe
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF244
	.byte	0x9
	.word	0x800
	.byte	0xa
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "inside_rect\0"
	.byte	0x9
	.word	0x801
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x7
	.secrel32	LASF249
	.byte	0x9
	.word	0x803
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "name_width\0"
	.byte	0x9
	.word	0x804
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF250
	.byte	0x9
	.word	0x805
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "hovering\0"
	.byte	0x9
	.word	0x807
	.byte	0xa
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -37
	.uleb128 0x7
	.secrel32	LASF241
	.byte	0x9
	.word	0x808
	.byte	0xa
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -38
	.uleb128 0x7
	.secrel32	LASF222
	.byte	0x9
	.word	0x80a
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x7
	.secrel32	LASF224
	.byte	0x9
	.word	0x80b
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.uleb128 0x51
	.long	0x1ad48
	.word	0x7f7
	.byte	0x6
	.long	0x1c748
	.long	LFB2220
	.long	LFE2220-LFB2220
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c755
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x1b0c5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x83
	.long	0x1ad15
	.word	0x7f2
	.byte	0x6
	.long	0x1c770
	.long	LFB2219
	.long	LFE2219-LFB2219
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c7b1
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x1b0c5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x3
	.ascii "indent_percentage\0"
	.byte	0x9
	.word	0x7f2
	.byte	0x1a
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "indent_by\0"
	.byte	0x9
	.word	0x7f3
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x83
	.long	0x1acd1
	.word	0x7ed
	.byte	0x6
	.long	0x1c7cc
	.long	LFB2218
	.long	LFE2218-LFB2218
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c7fd
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x1b0c5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x3
	.ascii "columns\0"
	.byte	0x9
	.word	0x7ed
	.byte	0x1d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF251
	.byte	0x9
	.word	0x7ed
	.byte	0x2c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x83
	.long	0x1ac9e
	.word	0x7e4
	.byte	0x6
	.long	0x1c818
	.long	LFB2217
	.long	LFE2217-LFB2217
	.uleb128 0x1
	.byte	0x9c
	.long	0x1c849
	.uleb128 0x3c
	.secrel32	LASF231
	.long	0x1b0c5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x3
	.ascii "columns\0"
	.byte	0x9
	.word	0x7e4
	.byte	0x15
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF251
	.byte	0x9
	.word	0x7e4
	.byte	0x24
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x18
	.ascii "main\0"
	.byte	0x9
	.word	0x5d0
	.byte	0x5
	.long	0xf4
	.long	LFB2216
	.long	LFE2216-LFB2216
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d1bb
	.uleb128 0x1
	.ascii "CPM\0"
	.byte	0x9
	.word	0x5d4
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -368
	.uleb128 0x1
	.ascii "t0\0"
	.byte	0x9
	.word	0x5d5
	.byte	0x8
	.long	0x1a053
	.uleb128 0x3
	.byte	0x75
	.sleb128 -376
	.uleb128 0x1
	.ascii "t1\0"
	.byte	0x9
	.word	0x5d5
	.byte	0xc
	.long	0x1a053
	.uleb128 0x3
	.byte	0x75
	.sleb128 -384
	.uleb128 0x7
	.secrel32	LASF252
	.byte	0x9
	.word	0x5db
	.byte	0x9
	.long	0x1d1bb
	.uleb128 0x3
	.byte	0x75
	.sleb128 -396
	.uleb128 0x1
	.ascii "path\0"
	.byte	0x9
	.word	0x5e3
	.byte	0xb
	.long	0x461
	.uleb128 0x3
	.byte	0x75
	.sleb128 -80
	.uleb128 0x1
	.ascii "ffd\0"
	.byte	0x9
	.word	0x5e4
	.byte	0x15
	.long	0x242d
	.uleb128 0x3
	.byte	0x75
	.sleb128 -716
	.uleb128 0x1
	.ascii "texture_dir\0"
	.byte	0x9
	.word	0x5e5
	.byte	0xc
	.long	0xa06
	.uleb128 0x3
	.byte	0x75
	.sleb128 -84
	.uleb128 0x1
	.ascii "filesize\0"
	.byte	0x9
	.word	0x5e6
	.byte	0x13
	.long	0xabe
	.uleb128 0x3
	.byte	0x75
	.sleb128 -728
	.uleb128 0x7
	.secrel32	LASF253
	.byte	0x9
	.word	0x607
	.byte	0xa
	.long	0x1a118
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1128
	.uleb128 0x1
	.ascii "save_counter\0"
	.byte	0x9
	.word	0x608
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x75
	.sleb128 -40
	.uleb128 0x1
	.ascii "saved_changes\0"
	.byte	0x9
	.word	0x609
	.byte	0xa
	.long	0x15b97
	.uleb128 0x2
	.byte	0x75
	.sleb128 -41
	.uleb128 0x7
	.secrel32	LASF254
	.byte	0x9
	.word	0x60b
	.byte	0xc
	.long	0x1a06c
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1148
	.uleb128 0x7
	.secrel32	LASF255
	.byte	0x9
	.word	0x60c
	.byte	0xc
	.long	0x1a06c
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1168
	.uleb128 0x1
	.ascii "source_zoom_rectangle\0"
	.byte	0x9
	.word	0x60e
	.byte	0xc
	.long	0x1a129
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1184
	.uleb128 0x1
	.ascii "processed_zoom_rectangle\0"
	.byte	0x9
	.word	0x60e
	.byte	0x23
	.long	0x1a129
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1200
	.uleb128 0x1
	.ascii "color_picker_active\0"
	.byte	0x9
	.word	0x60f
	.byte	0xa
	.long	0x15b97
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1201
	.uleb128 0x69
	.secrel32	Ldebug_ranges0+0x138
	.long	0x1c9fd
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x5de
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x75
	.sleb128 -28
	.uleb128 0x4b
	.secrel32	Ldebug_ranges0+0x150
	.uleb128 0x1
	.ascii "filepath\0"
	.byte	0x9
	.word	0x5df
	.byte	0x10
	.long	0x7129
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1228
	.byte	0
	.byte	0
	.uleb128 0x69
	.secrel32	Ldebug_ranges0+0x168
	.long	0x1ca93
	.uleb128 0x7
	.secrel32	LASF253
	.byte	0x9
	.word	0x5ed
	.byte	0x13
	.long	0x461
	.uleb128 0x3
	.byte	0x75
	.sleb128 -88
	.uleb128 0x1
	.ascii "texture_prefix\0"
	.byte	0x9
	.word	0x5ef
	.byte	0x13
	.long	0x461
	.uleb128 0x3
	.byte	0x75
	.sleb128 -92
	.uleb128 0x1
	.ascii "valid_texture_name\0"
	.byte	0x9
	.word	0x5f0
	.byte	0x12
	.long	0x15b97
	.uleb128 0x2
	.byte	0x75
	.sleb128 -29
	.uleb128 0x1
	.ascii "file_path\0"
	.byte	0x9
	.word	0x5f6
	.byte	0x12
	.long	0x1a118
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1808
	.uleb128 0x7
	.secrel32	LASF256
	.byte	0x9
	.word	0x5fc
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -96
	.uleb128 0x9
	.long	LBB897
	.long	LBE897-LBB897
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x5f1
	.byte	0x16
	.long	0xf4
	.uleb128 0x2
	.byte	0x75
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0xf
	.long	LBB899
	.long	LBE899-LBB899
	.long	0x1d196
	.uleb128 0x1
	.ascii "main_border\0"
	.byte	0x9
	.word	0x614
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -100
	.uleb128 0x1
	.ascii "inner_border\0"
	.byte	0x9
	.word	0x615
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -104
	.uleb128 0x1
	.ascii "available_width\0"
	.byte	0x9
	.word	0x617
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1232
	.uleb128 0x1
	.ascii "settings_width\0"
	.byte	0x9
	.word	0x619
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -108
	.uleb128 0x1
	.ascii "display_width\0"
	.byte	0x9
	.word	0x61a
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -112
	.uleb128 0x1
	.ascii "available_height\0"
	.byte	0x9
	.word	0x61c
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -116
	.uleb128 0x1
	.ascii "display_rows\0"
	.byte	0x9
	.word	0x61d
	.byte	0xf
	.long	0x7d5
	.uleb128 0x3
	.byte	0x75
	.sleb128 -120
	.uleb128 0x1
	.ascii "source_left\0"
	.byte	0x9
	.word	0x61f
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -124
	.uleb128 0x1
	.ascii "settings_left\0"
	.byte	0x9
	.word	0x620
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -128
	.uleb128 0x1
	.ascii "processed_left\0"
	.byte	0x9
	.word	0x621
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -132
	.uleb128 0x1
	.ascii "slider_count\0"
	.byte	0x9
	.word	0x623
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x75
	.sleb128 -48
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x9
	.word	0x626
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -136
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x9
	.word	0x62a
	.byte	0xf
	.long	0x22c6
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1240
	.uleb128 0x1
	.ascii "border\0"
	.byte	0x9
	.word	0x631
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -140
	.uleb128 0x1
	.ascii "source_panel\0"
	.byte	0x9
	.word	0x633
	.byte	0xf
	.long	0x1abfa
	.uleb128 0x3
	.byte	0x75
	.sleb128 -2016
	.uleb128 0x1
	.ascii "s_rect\0"
	.byte	0x9
	.word	0x636
	.byte	0xe
	.long	0x227b
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1256
	.uleb128 0x1
	.ascii "render_source_rect\0"
	.byte	0x9
	.word	0x637
	.byte	0xe
	.long	0x227b
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1272
	.uleb128 0x1
	.ascii "source_button_result\0"
	.byte	0x9
	.word	0x639
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x75
	.sleb128 -52
	.uleb128 0x1
	.ascii "s_change\0"
	.byte	0x9
	.word	0x643
	.byte	0xe
	.long	0x15b97
	.uleb128 0x3
	.byte	0x75
	.sleb128 -141
	.uleb128 0x1
	.ascii "result_panel\0"
	.byte	0x9
	.word	0x651
	.byte	0xf
	.long	0x1abfa
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1984
	.uleb128 0x1
	.ascii "p_rect\0"
	.byte	0x9
	.word	0x654
	.byte	0xe
	.long	0x227b
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1288
	.uleb128 0x1
	.ascii "render_processed_rect\0"
	.byte	0x9
	.word	0x655
	.byte	0xe
	.long	0x227b
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1304
	.uleb128 0x1
	.ascii "processed_button_result\0"
	.byte	0x9
	.word	0x657
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x75
	.sleb128 -56
	.uleb128 0x1
	.ascii "r_change\0"
	.byte	0x9
	.word	0x661
	.byte	0xe
	.long	0x15b97
	.uleb128 0x3
	.byte	0x75
	.sleb128 -142
	.uleb128 0x1
	.ascii "settings_panel\0"
	.byte	0x9
	.word	0x6ca
	.byte	0xf
	.long	0x1abfa
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1952
	.uleb128 0x1
	.ascii "centers_header_pushed\0"
	.byte	0x9
	.word	0x6d0
	.byte	0xe
	.long	0x15b97
	.uleb128 0x3
	.byte	0x75
	.sleb128 -153
	.uleb128 0x1
	.ascii "style_header_pushed\0"
	.byte	0x9
	.word	0x722
	.byte	0xe
	.long	0x15b97
	.uleb128 0x3
	.byte	0x75
	.sleb128 -185
	.uleb128 0x1
	.ascii "gif_press\0"
	.byte	0x9
	.word	0x757
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -196
	.uleb128 0x7
	.secrel32	LASF234
	.byte	0x9
	.word	0x785
	.byte	0x17
	.long	0x1a5bd
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1920
	.uleb128 0x1
	.ascii "save_click_result\0"
	.byte	0x9
	.word	0x786
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -204
	.uleb128 0x1
	.ascii "zoom_pressed\0"
	.byte	0x9
	.word	0x7b5
	.byte	0xe
	.long	0x15b97
	.uleb128 0x3
	.byte	0x75
	.sleb128 -213
	.uleb128 0x1
	.ascii "ms_elapsed\0"
	.byte	0x9
	.word	0x7de
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -220
	.uleb128 0xf
	.long	LBB901
	.long	LBE901-LBB901
	.long	0x1ce35
	.uleb128 0x1
	.ascii "temp_file_name\0"
	.byte	0x9
	.word	0x671
	.byte	0x12
	.long	0x1a118
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1808
	.uleb128 0x1
	.ascii "success\0"
	.byte	0x9
	.word	0x672
	.byte	0x12
	.long	0x15b97
	.uleb128 0x3
	.byte	0x75
	.sleb128 -143
	.uleb128 0x1
	.ascii "Bpp\0"
	.byte	0x9
	.word	0x674
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1308
	.byte	0
	.uleb128 0xf
	.long	LBB903
	.long	LBE903-LBB903
	.long	0x1cea2
	.uleb128 0x1
	.ascii "factor\0"
	.byte	0x9
	.word	0x6a9
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x75
	.sleb128 -148
	.uleb128 0x7
	.secrel32	LASF167
	.byte	0x9
	.word	0x6aa
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x75
	.sleb128 -152
	.uleb128 0xf
	.long	LBB907
	.long	LBE907-LBB907
	.long	0x1ce86
	.uleb128 0x7
	.secrel32	LASF258
	.byte	0x9
	.word	0x6af
	.byte	0x18
	.long	0x1a171
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1316
	.byte	0
	.uleb128 0x9
	.long	LBB911
	.long	LBE911-LBB911
	.uleb128 0x7
	.secrel32	LASF258
	.byte	0x9
	.word	0x6b7
	.byte	0x18
	.long	0x1a171
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1324
	.byte	0
	.byte	0
	.uleb128 0xf
	.long	LBB913
	.long	LBE913-LBB913
	.long	0x1cec2
	.uleb128 0x1
	.ascii "zoom\0"
	.byte	0x9
	.word	0x6c0
	.byte	0x12
	.long	0x227b
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1340
	.byte	0
	.uleb128 0xf
	.long	LBB915
	.long	LBE915-LBB915
	.long	0x1cee2
	.uleb128 0x1
	.ascii "zoom\0"
	.byte	0x9
	.word	0x6c5
	.byte	0x12
	.long	0x227b
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1356
	.byte	0
	.uleb128 0xf
	.long	LBB917
	.long	LBE917-LBB917
	.long	0x1cf3c
	.uleb128 0x1
	.ascii "radius_press\0"
	.byte	0x9
	.word	0x6d9
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -160
	.uleb128 0x1
	.ascii "x_hex_press\0"
	.byte	0x9
	.word	0x6de
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -164
	.uleb128 0x1
	.ascii "y_hex_press\0"
	.byte	0x9
	.word	0x6e3
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -168
	.byte	0
	.uleb128 0xf
	.long	LBB920
	.long	LBE920-LBB920
	.long	0x1cf97
	.uleb128 0x1
	.ascii "width_press\0"
	.byte	0x9
	.word	0x6ef
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -172
	.uleb128 0x1
	.ascii "x_grid_press\0"
	.byte	0x9
	.word	0x6f4
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -176
	.uleb128 0x1
	.ascii "y_grid_press\0"
	.byte	0x9
	.word	0x6f9
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -180
	.byte	0
	.uleb128 0xf
	.long	LBB923
	.long	LBE923-LBB923
	.long	0x1cffb
	.uleb128 0x1
	.ascii "random_radius_press\0"
	.byte	0x9
	.word	0x6ff
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -184
	.uleb128 0x1
	.ascii "total_element_press\0"
	.byte	0x9
	.word	0x703
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x75
	.sleb128 -60
	.uleb128 0x1
	.ascii "by_press\0"
	.byte	0x9
	.word	0x70c
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x75
	.sleb128 -64
	.byte	0
	.uleb128 0xf
	.long	LBB927
	.long	LBE927-LBB927
	.long	0x1d022
	.uleb128 0x1
	.ascii "scale_press\0"
	.byte	0x9
	.word	0x71a
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x75
	.sleb128 -68
	.byte	0
	.uleb128 0xf
	.long	LBB931
	.long	LBE931-LBB931
	.long	0x1d062
	.uleb128 0x1
	.ascii "texture_press\0"
	.byte	0x9
	.word	0x738
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -192
	.uleb128 0x1
	.ascii "max_range\0"
	.byte	0x9
	.word	0x748
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1360
	.byte	0
	.uleb128 0xf
	.long	LBB933
	.long	LBE933-LBB933
	.long	0x1d0bc
	.uleb128 0x7
	.secrel32	LASF256
	.byte	0x9
	.word	0x75a
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -200
	.uleb128 0x7
	.secrel32	LASF259
	.byte	0x9
	.word	0x75d
	.byte	0x12
	.long	0x1d1cb
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1808
	.uleb128 0x7
	.secrel32	LASF260
	.byte	0x9
	.word	0x76e
	.byte	0x17
	.long	0x1a014
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1372
	.uleb128 0x9
	.long	LBB934
	.long	LBE934-LBB934
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x771
	.byte	0x16
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -72
	.byte	0
	.byte	0
	.uleb128 0xf
	.long	LBB936
	.long	LBE936-LBB936
	.long	0x1d11e
	.uleb128 0x7
	.secrel32	LASF256
	.byte	0x9
	.word	0x788
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -208
	.uleb128 0x7
	.secrel32	LASF259
	.byte	0x9
	.word	0x78b
	.byte	0x12
	.long	0x1d1cb
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1808
	.uleb128 0x1
	.ascii "success\0"
	.byte	0x9
	.word	0x78e
	.byte	0x12
	.long	0x15b97
	.uleb128 0x3
	.byte	0x75
	.sleb128 -73
	.uleb128 0x9
	.long	LBB938
	.long	LBE938-LBB938
	.uleb128 0x1
	.ascii "pitch\0"
	.byte	0x9
	.word	0x795
	.byte	0x15
	.long	0xf4
	.uleb128 0x3
	.byte	0x75
	.sleb128 -212
	.byte	0
	.byte	0
	.uleb128 0xf
	.long	LBB940
	.long	LBE940-LBB940
	.long	0x1d17a
	.uleb128 0x1
	.ascii "at_rect\0"
	.byte	0x9
	.word	0x7c2
	.byte	0x12
	.long	0x227b
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1388
	.uleb128 0x1
	.ascii "color_picker_rect\0"
	.byte	0x9
	.word	0x7c3
	.byte	0x12
	.long	0x227b
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1404
	.uleb128 0x1
	.ascii "color_picker\0"
	.byte	0x9
	.word	0x7c7
	.byte	0x13
	.long	0x1abfa
	.uleb128 0x3
	.byte	0x75
	.sleb128 -1808
	.byte	0
	.uleb128 0x2d
	.long	LVL67
	.long	0x32e55
	.uleb128 0x2d
	.long	LVL68
	.long	0x32e76
	.uleb128 0x2d
	.long	LVL70
	.long	0x32eac
	.byte	0
	.uleb128 0x2d
	.long	LVL63
	.long	0x32e76
	.uleb128 0x2d
	.long	LVL64
	.long	0x32ebe
	.uleb128 0x2d
	.long	LVL65
	.long	0x32ee2
	.uleb128 0x2d
	.long	LVL66
	.long	0x32f04
	.byte	0
	.uleb128 0x10
	.long	0xf4
	.long	0x1d1cb
	.uleb128 0x12
	.long	0xe4
	.byte	0x2
	.byte	0
	.uleb128 0x10
	.long	0xb8
	.long	0x1d1dc
	.uleb128 0x3a
	.long	0xe4
	.word	0x192
	.byte	0
	.uleb128 0x3e
	.ascii "load_image\0"
	.byte	0x9
	.word	0x5c6
	.byte	0x6
	.ascii "_Z10load_imageP6bitmapPKcbb\0"
	.long	LFB2215
	.long	LFE2215-LFB2215
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d27a
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x9
	.word	0x5c6
	.byte	0x19
	.long	0x1d27a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF253
	.byte	0x9
	.word	0x5c6
	.byte	0x2d
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "swap_r_and_b\0"
	.byte	0x9
	.word	0x5c6
	.byte	0x3d
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x3
	.ascii "premultiply_a\0"
	.byte	0x9
	.word	0x5c6
	.byte	0x58
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "Bpp\0"
	.byte	0x9
	.word	0x5c7
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1a06c
	.uleb128 0x42
	.ascii "get_CPM\0"
	.byte	0x9
	.word	0x5c0
	.byte	0x5
	.ascii "_Z7get_CPMv\0"
	.long	0xf4
	.long	LFB2214
	.long	LFE2214-LFB2214
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d2d4
	.uleb128 0x1
	.ascii "counter_per_second\0"
	.byte	0x9
	.word	0x5c1
	.byte	0x13
	.long	0xabe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2d
	.long	LVL60
	.long	0x32f1e
	.byte	0
	.uleb128 0x3e
	.ascii "update_zoom\0"
	.byte	0x9
	.word	0x5a8
	.byte	0x6
	.ascii "_Z11update_zoomP6RECT_f7tagRECTf2v2\0"
	.long	LFB2213
	.long	LFE2213-LFB2213
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d412
	.uleb128 0x3
	.ascii "zoom_rect\0"
	.byte	0x9
	.word	0x5a8
	.byte	0x1a
	.long	0x1d412
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF261
	.byte	0x9
	.word	0x5a8
	.byte	0x2a
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF167
	.byte	0x9
	.word	0x5a8
	.byte	0x3d
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF258
	.byte	0x9
	.word	0x5a8
	.byte	0x47
	.long	0x1a171
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1
	.ascii "w\0"
	.byte	0x9
	.word	0x5a9
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "h\0"
	.byte	0x9
	.word	0x5aa
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "click_x\0"
	.byte	0x9
	.word	0x5ac
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "click_y\0"
	.byte	0x9
	.word	0x5ad
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB890
	.long	LBE890-LBB890
	.uleb128 0x1
	.ascii "percentage_x\0"
	.byte	0x9
	.word	0x5b0
	.byte	0xf
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "percentage_y\0"
	.byte	0x9
	.word	0x5b1
	.byte	0xf
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "hover_image_x\0"
	.byte	0x9
	.word	0x5b3
	.byte	0xf
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "hover_image_y\0"
	.byte	0x9
	.word	0x5b4
	.byte	0xf
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1a129
	.uleb128 0x42
	.ascii "reset_zoom_rectangle\0"
	.byte	0x9
	.word	0x598
	.byte	0x8
	.ascii "_Z20reset_zoom_rectangle6bitmap7tagRECT\0"
	.long	0x1a129
	.long	LFB2212
	.long	LFE2212-LFB2212
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d50a
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x598
	.byte	0x24
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF261
	.byte	0x9
	.word	0x598
	.byte	0x30
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1
	.ascii "scale_w\0"
	.byte	0x9
	.word	0x59a
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "scale_h\0"
	.byte	0x9
	.word	0x59b
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "w\0"
	.byte	0x9
	.word	0x59d
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "h\0"
	.byte	0x9
	.word	0x59e
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "delta_x\0"
	.byte	0x9
	.word	0x5a0
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "delta_y\0"
	.byte	0x9
	.word	0x5a1
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x9
	.word	0x5a3
	.byte	0xc
	.long	0x1a129
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0
	.uleb128 0x49
	.ascii "make_panel\0"
	.byte	0x9
	.word	0x587
	.byte	0x7
	.ascii "_Z10make_paneliiiii\0"
	.long	0x1abfa
	.long	LFB2208
	.long	LFE2208-LFB2208
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d59e
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x9
	.word	0x587
	.byte	0x16
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x9
	.word	0x587
	.byte	0x1d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x9
	.word	0x587
	.byte	0x24
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x9
	.word	0x587
	.byte	0x30
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF195
	.byte	0x9
	.word	0x587
	.byte	0x3b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x9
	.word	0x588
	.byte	0xb
	.long	0x1abfa
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0
	.uleb128 0x49
	.ascii "get_dot_index\0"
	.byte	0x9
	.word	0x54f
	.byte	0x5
	.ascii "_Z13get_dot_indexPci\0"
	.long	0xf4
	.long	LFB2204
	.long	LFE2204-LFB2204
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d611
	.uleb128 0x4
	.secrel32	LASF253
	.byte	0x9
	.word	0x54f
	.byte	0x19
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF215
	.byte	0x9
	.word	0x54f
	.byte	0x28
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x9
	.long	LBB889
	.long	LBE889-LBB889
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x550
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.byte	0
	.uleb128 0x42
	.ascii "open_file_externally\0"
	.byte	0x9
	.word	0x53a
	.byte	0x6
	.ascii "_Z20open_file_externallyPci\0"
	.long	0x15b97
	.long	LFB2203
	.long	LFE2203-LFB2203
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d6ac
	.uleb128 0x4
	.secrel32	LASF253
	.byte	0x9
	.word	0x53a
	.byte	0x21
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "size_file_name\0"
	.byte	0x9
	.word	0x53a
	.byte	0x30
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "dialog_arguments\0"
	.byte	0x9
	.word	0x53b
	.byte	0x12
	.long	0x15b82
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2d
	.long	LVL59
	.long	0x32f58
	.byte	0
	.uleb128 0x49
	.ascii "v2_inside_rect\0"
	.byte	0x9
	.word	0x531
	.byte	0xd
	.ascii "_Z14v2_inside_rect2v27tagRECT\0"
	.long	0x15b97
	.long	LFB2202
	.long	LFE2202-LFB2202
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d70f
	.uleb128 0x3
	.ascii "v\0"
	.byte	0x9
	.word	0x531
	.byte	0x1f
	.long	0x1a171
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF262
	.byte	0x9
	.word	0x531
	.byte	0x27
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x49
	.ascii "compute_rendering_position\0"
	.byte	0x9
	.word	0x51f
	.byte	0x6
	.ascii "_Z26compute_rendering_position7tagRECTiii\0"
	.long	0x227b
	.long	LFB2201
	.long	LFE2201-LFB2201
	.uleb128 0x1
	.byte	0x9c
	.long	0x1d858
	.uleb128 0x4
	.secrel32	LASF263
	.byte	0x9
	.word	0x51f
	.byte	0x26
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "dest_side\0"
	.byte	0x9
	.word	0x51f
	.byte	0x35
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "source_width\0"
	.byte	0x9
	.word	0x51f
	.byte	0x44
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "source_height\0"
	.byte	0x9
	.word	0x51f
	.byte	0x56
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x9
	.word	0x520
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.uleb128 0x1
	.ascii "rect_width\0"
	.byte	0x9
	.word	0x524
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1
	.ascii "rect_height\0"
	.byte	0x9
	.word	0x525
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x1
	.ascii "width_or_height\0"
	.byte	0x9
	.word	0x527
	.byte	0xa
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x1
	.ascii "rendered_width\0"
	.byte	0x9
	.word	0x528
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "rendered_height\0"
	.byte	0x9
	.word	0x529
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x42
	.ascii "create_image_texture\0"
	.byte	0x9
	.word	0x4d1
	.byte	0x8
	.ascii "_Z20create_image_texture6bitmap\0"
	.long	0x1a06c
	.long	LFB2200
	.long	LFE2200-LFB2200
	.uleb128 0x1
	.byte	0x9c
	.long	0x1da06
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x4d1
	.byte	0x24
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x7
	.secrel32	LASF264
	.byte	0x9
	.word	0x4d3
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x7
	.secrel32	LASF227
	.byte	0x9
	.word	0x4d3
	.byte	0x1c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x7
	.secrel32	LASF265
	.byte	0x9
	.word	0x4d4
	.byte	0x9
	.long	0x1da06
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF266
	.byte	0x9
	.word	0x4d7
	.byte	0xc
	.long	0x1b0d0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "brightnesses\0"
	.byte	0x9
	.word	0x4d9
	.byte	0xc
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "min_brightness\0"
	.byte	0x9
	.word	0x4da
	.byte	0xb
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "max_brightness\0"
	.byte	0x9
	.word	0x4db
	.byte	0xb
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x7
	.secrel32	LASF255
	.byte	0x9
	.word	0x4f1
	.byte	0xc
	.long	0x1a06c
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.uleb128 0x1
	.ascii "dim\0"
	.byte	0x9
	.word	0x502
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0xf
	.long	LBB882
	.long	LBE882-LBB882
	.long	0x1d99a
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x4dc
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB883
	.long	LBE883-LBB883
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x9
	.word	0x4e2
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0xf
	.long	LBB886
	.long	LBE886-LBB886
	.long	0x1d9b6
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x4f8
	.byte	0x15
	.long	0x1a035
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x9
	.long	LBB887
	.long	LBE887-LBB887
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x503
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x9
	.long	LBB888
	.long	LBE888-LBB888
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x9
	.word	0x504
	.byte	0xf
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x7
	.secrel32	LASF243
	.byte	0x9
	.word	0x507
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "w\0"
	.byte	0x9
	.word	0x50b
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1a171
	.uleb128 0x42
	.ascii "create_image_caps\0"
	.byte	0x9
	.word	0x4a3
	.byte	0x8
	.ascii "_Z17create_image_caps6bitmap\0"
	.long	0x1a06c
	.long	LFB2199
	.long	LFE2199-LFB2199
	.uleb128 0x1
	.byte	0x9c
	.long	0x1db30
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x4a3
	.byte	0x21
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x7
	.secrel32	LASF264
	.byte	0x9
	.word	0x4a5
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x7
	.secrel32	LASF227
	.byte	0x9
	.word	0x4a5
	.byte	0x1c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x7
	.secrel32	LASF265
	.byte	0x9
	.word	0x4a6
	.byte	0x9
	.long	0x1da06
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x7
	.secrel32	LASF267
	.byte	0x9
	.word	0x4a8
	.byte	0xa
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF255
	.byte	0x9
	.word	0x4b5
	.byte	0xc
	.long	0x1a06c
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.uleb128 0x1
	.ascii "dim\0"
	.byte	0x9
	.word	0x4c3
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0xf
	.long	LBB878
	.long	LBE878-LBB878
	.long	0x1dadf
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x4ad
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xf
	.long	LBB879
	.long	LBE879-LBB879
	.long	0x1dafb
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x4b0
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0xf
	.long	LBB880
	.long	LBE880-LBB880
	.long	0x1db17
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x4bb
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x9
	.long	LBB881
	.long	LBE881-LBB881
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x4c4
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x42
	.ascii "get_centers\0"
	.byte	0x9
	.word	0x489
	.byte	0x5
	.ascii "_Z11get_centers6bitmapPiS0_\0"
	.long	0x1da06
	.long	LFB2198
	.long	LFE2198-LFB2198
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dbb0
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x489
	.byte	0x18
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF264
	.byte	0x9
	.word	0x489
	.byte	0x24
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF227
	.byte	0x9
	.word	0x489
	.byte	0x3c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x7
	.secrel32	LASF265
	.byte	0x9
	.word	0x48a
	.byte	0x9
	.long	0x1da06
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x35
	.ascii "apply_contrast\0"
	.byte	0x9
	.word	0x46f
	.byte	0x6
	.ascii "_Z14apply_contrast6bitmapib\0"
	.long	LFB2197
	.long	LFE2197-LFB2197
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dd03
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x46f
	.byte	0x1c
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "contrast\0"
	.byte	0x9
	.word	0x46f
	.byte	0x27
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF268
	.byte	0x9
	.word	0x46f
	.byte	0x36
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x7
	.secrel32	LASF217
	.byte	0x9
	.word	0x472
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x9
	.word	0x473
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "f\0"
	.byte	0x9
	.word	0x474
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF269
	.byte	0x9
	.word	0x476
	.byte	0xd
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "source\0"
	.byte	0x9
	.word	0x477
	.byte	0xd
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x9
	.long	LBB874
	.long	LBE874-LBB874
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x9
	.word	0x47a
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x9
	.long	LBB875
	.long	LBE875-LBB875
	.uleb128 0x1
	.ascii "R_pre\0"
	.byte	0x9
	.word	0x47b
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "G_pre\0"
	.byte	0x9
	.word	0x47c
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "B_pre\0"
	.byte	0x9
	.word	0x47d
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "A\0"
	.byte	0x9
	.word	0x47f
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -45
	.uleb128 0x1
	.ascii "R\0"
	.byte	0x9
	.word	0x480
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -46
	.uleb128 0x1
	.ascii "G\0"
	.byte	0x9
	.word	0x481
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -47
	.uleb128 0x1
	.ascii "B\0"
	.byte	0x9
	.word	0x482
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1a035
	.uleb128 0x35
	.ascii "apply_brightness\0"
	.byte	0x9
	.word	0x457
	.byte	0x6
	.ascii "_Z16apply_brightness6bitmapib\0"
	.long	LFB2196
	.long	LFE2196-LFB2196
	.uleb128 0x1
	.byte	0x9c
	.long	0x1de17
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x457
	.byte	0x1e
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF270
	.byte	0x9
	.word	0x457
	.byte	0x29
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF268
	.byte	0x9
	.word	0x457
	.byte	0x3a
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x7
	.secrel32	LASF217
	.byte	0x9
	.word	0x45a
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x9
	.word	0x45b
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF269
	.byte	0x9
	.word	0x45d
	.byte	0xd
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "source\0"
	.byte	0x9
	.word	0x45e
	.byte	0xd
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x9
	.long	LBB872
	.long	LBE872-LBB872
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x9
	.word	0x461
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x9
	.long	LBB873
	.long	LBE873-LBB873
	.uleb128 0x1
	.ascii "A\0"
	.byte	0x9
	.word	0x462
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -33
	.uleb128 0x1
	.ascii "R\0"
	.byte	0x9
	.word	0x463
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x1
	.ascii "G\0"
	.byte	0x9
	.word	0x464
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -18
	.uleb128 0x1
	.ascii "B\0"
	.byte	0x9
	.word	0x465
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -19
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc5
	.secrel32	LASF228
	.byte	0x9
	.word	0x44b
	.byte	0x6
	.ascii "_Z12invert_alphaP6bitmap\0"
	.long	LFB2195
	.long	LFE2195-LFB2195
	.uleb128 0x1
	.byte	0x9c
	.long	0x1dec3
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x44b
	.byte	0x1b
	.long	0x1d27a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7
	.secrel32	LASF271
	.byte	0x9
	.word	0x44c
	.byte	0xd
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x9
	.long	LBB870
	.long	LBE870-LBB870
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x9
	.word	0x44d
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x9
	.long	LBB871
	.long	LBE871-LBB871
	.uleb128 0x1
	.ascii "A\0"
	.byte	0x9
	.word	0x44e
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x1
	.ascii "R\0"
	.byte	0x9
	.word	0x44f
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -18
	.uleb128 0x1
	.ascii "G\0"
	.byte	0x9
	.word	0x450
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -19
	.uleb128 0x1
	.ascii "B\0"
	.byte	0x9
	.word	0x451
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x35
	.ascii "premultiply_alpha\0"
	.byte	0x9
	.word	0x43e
	.byte	0x6
	.ascii "_Z17premultiply_alphaP6bitmap\0"
	.long	LFB2194
	.long	LFE2194-LFB2194
	.uleb128 0x1
	.byte	0x9c
	.long	0x1df96
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x43e
	.byte	0x20
	.long	0x1d27a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7
	.secrel32	LASF271
	.byte	0x9
	.word	0x43f
	.byte	0xd
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x9
	.long	LBB868
	.long	LBE868-LBB868
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x9
	.word	0x440
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x9
	.long	LBB869
	.long	LBE869-LBB869
	.uleb128 0x1
	.ascii "A\0"
	.byte	0x9
	.word	0x441
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x1
	.ascii "A_scaled\0"
	.byte	0x9
	.word	0x442
	.byte	0xf
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "R\0"
	.byte	0x9
	.word	0x443
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -25
	.uleb128 0x1
	.ascii "G\0"
	.byte	0x9
	.word	0x444
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0x1
	.ascii "B\0"
	.byte	0x9
	.word	0x445
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -27
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x35
	.ascii "swap_red_and_blue_channels\0"
	.byte	0x9
	.word	0x426
	.byte	0x6
	.ascii "_Z26swap_red_and_blue_channelsP6bitmap\0"
	.long	LFB2193
	.long	LFE2193-LFB2193
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e0de
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x426
	.byte	0x29
	.long	0x1d27a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7
	.secrel32	LASF271
	.byte	0x9
	.word	0x427
	.byte	0xd
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0xf
	.long	LBB862
	.long	LBE862-LBB862
	.long	0x1e069
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x9
	.word	0x428
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x9
	.long	LBB863
	.long	LBE863-LBB863
	.uleb128 0x1
	.ascii "A\0"
	.byte	0x9
	.word	0x429
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -21
	.uleb128 0x1
	.ascii "B\0"
	.byte	0x9
	.word	0x42a
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x1
	.ascii "G\0"
	.byte	0x9
	.word	0x42b
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -23
	.uleb128 0x1
	.ascii "R\0"
	.byte	0x9
	.word	0x42c
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB865
	.long	LBE865-LBB865
	.uleb128 0x7
	.secrel32	LASF271
	.byte	0x9
	.word	0x432
	.byte	0x11
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x9
	.long	LBB866
	.long	LBE866-LBB866
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x9
	.word	0x433
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x9
	.long	LBB867
	.long	LBE867-LBB867
	.uleb128 0x1
	.ascii "A\0"
	.byte	0x9
	.word	0x434
	.byte	0x13
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -29
	.uleb128 0x1
	.ascii "B\0"
	.byte	0x9
	.word	0x435
	.byte	0x13
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -30
	.uleb128 0x1
	.ascii "G\0"
	.byte	0x9
	.word	0x436
	.byte	0x13
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -31
	.uleb128 0x1
	.ascii "R\0"
	.byte	0x9
	.word	0x437
	.byte	0x13
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x3e
	.ascii "adjust_bpp\0"
	.byte	0x9
	.word	0x40c
	.byte	0x6
	.ascii "_Z10adjust_bppP6bitmapi\0"
	.long	LFB2192
	.long	LFE2192-LFB2192
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e1bf
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x40c
	.byte	0x19
	.long	0x1d27a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "Bpp\0"
	.byte	0x9
	.word	0x40c
	.byte	0x24
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0xf
	.long	LBB857
	.long	LBE857-LBB857
	.long	0x1e17c
	.uleb128 0x7
	.secrel32	LASF272
	.byte	0x9
	.word	0x410
	.byte	0x11
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "Bytes\0"
	.byte	0x9
	.word	0x411
	.byte	0x11
	.long	0x1a0c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB858
	.long	LBE858-LBB858
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x9
	.word	0x412
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB860
	.long	LBE860-LBB860
	.uleb128 0x7
	.secrel32	LASF272
	.byte	0x9
	.word	0x41a
	.byte	0x11
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF271
	.byte	0x9
	.word	0x41b
	.byte	0x11
	.long	0x1a0c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x9
	.long	LBB861
	.long	LBE861-LBB861
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x9
	.word	0x41c
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x35
	.ascii "compute_dimensions_from_y_grid\0"
	.byte	0x9
	.word	0x404
	.byte	0x6
	.ascii "_Z30compute_dimensions_from_y_grid6bitmap\0"
	.long	LFB2191
	.long	LFE2191-LFB2191
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e22c
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x404
	.byte	0x2c
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x35
	.ascii "compute_dimensions_from_x_grid\0"
	.byte	0x9
	.word	0x3fc
	.byte	0x6
	.ascii "_Z30compute_dimensions_from_x_grid6bitmap\0"
	.long	LFB2190
	.long	LFE2190-LFB2190
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e299
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x3fc
	.byte	0x2c
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x35
	.ascii "compute_dimensions_from_width\0"
	.byte	0x9
	.word	0x3f6
	.byte	0x6
	.ascii "_Z29compute_dimensions_from_width6bitmap\0"
	.long	LFB2189
	.long	LFE2189-LFB2189
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e304
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x3f6
	.byte	0x2b
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x35
	.ascii "compute_dimensions_from_y_hex\0"
	.byte	0x9
	.word	0x3ee
	.byte	0x6
	.ascii "_Z29compute_dimensions_from_y_hex6bitmap\0"
	.long	LFB2188
	.long	LFE2188-LFB2188
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e36f
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x3ee
	.byte	0x2b
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x35
	.ascii "compute_dimensions_from_x_hex\0"
	.byte	0x9
	.word	0x3e6
	.byte	0x6
	.ascii "_Z29compute_dimensions_from_x_hex6bitmap\0"
	.long	LFB2187
	.long	LFE2187-LFB2187
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e3da
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x3e6
	.byte	0x2b
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x35
	.ascii "compute_dimensions_from_radius\0"
	.byte	0x9
	.word	0x3e0
	.byte	0x6
	.ascii "_Z30compute_dimensions_from_radius6bitmap\0"
	.long	LFB2186
	.long	LFE2186-LFB2186
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e447
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x3e0
	.byte	0x2c
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x42
	.ascii "compute_centers_colors\0"
	.byte	0x9
	.word	0x3d4
	.byte	0x8
	.ascii "_Z22compute_centers_colors6bitmapP2v2ii\0"
	.long	0x1b0d0
	.long	LFB2185
	.long	LFE2185-LFB2185
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e506
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x3d4
	.byte	0x26
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF265
	.byte	0x9
	.word	0x3d4
	.byte	0x31
	.long	0x1da06
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF264
	.byte	0x9
	.word	0x3d4
	.byte	0x3e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF227
	.byte	0x9
	.word	0x3d4
	.byte	0x55
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x7
	.secrel32	LASF266
	.byte	0x9
	.word	0x3d6
	.byte	0xc
	.long	0x1b0d0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB855
	.long	LBE855-LBB855
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x3d9
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x42
	.ascii "compute_indexes_by_color\0"
	.byte	0x9
	.word	0x3aa
	.byte	0x6
	.ascii "_Z24compute_indexes_by_color6bitmapP2v2ii\0"
	.long	0x482
	.long	LFB2184
	.long	LFE2184-LFB2184
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e6b4
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x3aa
	.byte	0x26
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF265
	.byte	0x9
	.word	0x3aa
	.byte	0x31
	.long	0x1da06
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF264
	.byte	0x9
	.word	0x3aa
	.byte	0x3e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF227
	.byte	0x9
	.word	0x3aa
	.byte	0x55
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x7
	.secrel32	LASF267
	.byte	0x9
	.word	0x3ac
	.byte	0xa
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "caps_colors\0"
	.byte	0x9
	.word	0x3af
	.byte	0xb
	.long	0x1e6b4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1980
	.uleb128 0xf
	.long	LBB850
	.long	LBE850-LBB850
	.long	0x1e5e5
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x3b0
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x9
	.long	LBB851
	.long	LBE851-LBB851
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x3b4
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB852
	.long	LBE852-LBB852
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x9
	.word	0x3b5
	.byte	0xf
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1996
	.uleb128 0x1
	.ascii "R_value\0"
	.byte	0x9
	.word	0x3b6
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -37
	.uleb128 0x1
	.ascii "G_value\0"
	.byte	0x9
	.word	0x3b7
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -38
	.uleb128 0x1
	.ascii "B_value\0"
	.byte	0x9
	.word	0x3b8
	.byte	0xf
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -39
	.uleb128 0x1
	.ascii "min_distance\0"
	.byte	0x9
	.word	0x3ba
	.byte	0xf
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF273
	.byte	0x9
	.word	0x3bb
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB853
	.long	LBE853-LBB853
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x9
	.word	0x3bc
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x9
	.long	LBB854
	.long	LBE854-LBB854
	.uleb128 0x1
	.ascii "distance\0"
	.byte	0x9
	.word	0x3bd
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -2000
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x1a445
	.long	0x1e6c4
	.uleb128 0x12
	.long	0xe4
	.byte	0x78
	.byte	0
	.uleb128 0x42
	.ascii "compute_indexes\0"
	.byte	0x9
	.word	0x38e
	.byte	0x6
	.ascii "_Z15compute_indexes6bitmapP2v2ii\0"
	.long	0x482
	.long	LFB2183
	.long	LFE2183-LFB2183
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e7f6
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x38e
	.byte	0x1d
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF265
	.byte	0x9
	.word	0x38e
	.byte	0x28
	.long	0x1da06
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF264
	.byte	0x9
	.word	0x38e
	.byte	0x35
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF227
	.byte	0x9
	.word	0x38e
	.byte	0x4c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x7
	.secrel32	LASF267
	.byte	0x9
	.word	0x390
	.byte	0xa
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF273
	.byte	0x9
	.word	0x392
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "max_index\0"
	.byte	0x9
	.word	0x393
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF217
	.byte	0x9
	.word	0x3a1
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0xf
	.long	LBB847
	.long	LBE847-LBB847
	.long	0x1e7dd
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x395
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x9
	.long	LBB848
	.long	LBE848-LBB848
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x9
	.word	0x396
	.byte	0xf
	.long	0x1a445
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "gray_value\0"
	.byte	0x9
	.word	0x397
	.byte	0xe
	.long	0x1286a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB849
	.long	LBE849-LBB849
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x3a2
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x35
	.ascii "sort_by_birghtness\0"
	.byte	0x9
	.word	0x376
	.byte	0x6
	.ascii "_Z18sort_by_birghtnessP2v2P5ColorPfib\0"
	.long	LFB2182
	.long	LFE2182-LFB2182
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e92a
	.uleb128 0x4
	.secrel32	LASF265
	.byte	0x9
	.word	0x376
	.byte	0x1d
	.long	0x1da06
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF266
	.byte	0x9
	.word	0x376
	.byte	0x2d
	.long	0x1b0d0
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF270
	.byte	0x9
	.word	0x376
	.byte	0x3c
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF48
	.byte	0x9
	.word	0x376
	.byte	0x4c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "reverse\0"
	.byte	0x9
	.word	0x376
	.byte	0x59
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x9
	.long	LBB841
	.long	LBE841-LBB841
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x378
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x9
	.long	LBB843
	.long	LBE843-LBB843
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x9
	.word	0x379
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x9
	.long	LBB844
	.long	LBE844-LBB844
	.uleb128 0x1
	.ascii "condition\0"
	.byte	0x9
	.word	0x37a
	.byte	0x12
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x9
	.long	LBB846
	.long	LBE846-LBB846
	.uleb128 0x1
	.ascii "temp_v\0"
	.byte	0x9
	.word	0x37e
	.byte	0x14
	.long	0x1a171
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "temp_b\0"
	.byte	0x9
	.word	0x382
	.byte	0x17
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "temp_c\0"
	.byte	0x9
	.word	0x386
	.byte	0x17
	.long	0x1a445
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x3e
	.ascii "shuffle\0"
	.byte	0x9
	.word	0x36a
	.byte	0x6
	.ascii "_Z7shuffleP2v2ii\0"
	.long	LFB2181
	.long	LFE2181-LFB2181
	.uleb128 0x1
	.byte	0x9c
	.long	0x1e9e6
	.uleb128 0x3
	.ascii "array\0"
	.byte	0x9
	.word	0x36a
	.byte	0x12
	.long	0x1da06
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "array_length\0"
	.byte	0x9
	.word	0x36a
	.byte	0x1d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "shuffle_times\0"
	.byte	0x9
	.word	0x36a
	.byte	0x2f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.long	LBB835
	.long	LBE835-LBB835
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x36b
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB837
	.long	LBE837-LBB837
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x9
	.word	0x36c
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB840
	.long	LBE840-LBB840
	.uleb128 0x7
	.secrel32	LASF274
	.byte	0x9
	.word	0x36e
	.byte	0x14
	.long	0x1a171
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1a7e5
	.uleb128 0x14
	.long	0x1e9e6
	.uleb128 0xc6
	.long	0x1ab2a
	.byte	0x9
	.word	0x32a
	.byte	0x8
	.long	0x1ea04
	.byte	0x2
	.long	0x1ea0e
	.uleb128 0x3d
	.secrel32	LASF231
	.long	0x1e9ec
	.byte	0
	.uleb128 0xc7
	.long	0x1e9f1
	.ascii "_ZN16General_SettingsC1Ev\0"
	.long	0x1ea40
	.long	LFB2180
	.long	LFE2180-LFB2180
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ea49
	.uleb128 0x63
	.long	0x1ea04
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x49
	.ascii "compute_color_average\0"
	.byte	0x9
	.word	0x2ee
	.byte	0x7
	.ascii "_Z21compute_color_average6bitmapiii\0"
	.long	0x1a445
	.long	LFB2177
	.long	LFE2177-LFB2177
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ebe1
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x9
	.word	0x2ee
	.byte	0x24
	.long	0x1a06c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "center_x\0"
	.byte	0x9
	.word	0x2ee
	.byte	0x2f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "center_y\0"
	.byte	0x9
	.word	0x2ee
	.byte	0x3d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x4
	.secrel32	LASF227
	.byte	0x9
	.word	0x2ee
	.byte	0x4b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x9
	.word	0x2ef
	.byte	0xb
	.long	0x1a445
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.uleb128 0x7
	.secrel32	LASF275
	.byte	0x9
	.word	0x2f1
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x7
	.secrel32	LASF276
	.byte	0x9
	.word	0x2f2
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x7
	.secrel32	LASF277
	.byte	0x9
	.word	0x2f3
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x7
	.secrel32	LASF278
	.byte	0x9
	.word	0x2f4
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "Pitch\0"
	.byte	0x9
	.word	0x2fb
	.byte	0xb
	.long	0x1a05e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "Row\0"
	.byte	0x9
	.word	0x2fc
	.byte	0xc
	.long	0x1a0c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "R\0"
	.byte	0x9
	.word	0x2ff
	.byte	0xc
	.long	0x1a044
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "G\0"
	.byte	0x9
	.word	0x300
	.byte	0xc
	.long	0x1a044
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "B\0"
	.byte	0x9
	.word	0x301
	.byte	0xc
	.long	0x1a044
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x7
	.secrel32	LASF279
	.byte	0x9
	.word	0x302
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x9
	.long	LBB831
	.long	LBE831-LBB831
	.uleb128 0x1
	.ascii "Y\0"
	.byte	0x9
	.word	0x304
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x9
	.long	LBB832
	.long	LBE832-LBB832
	.uleb128 0x7
	.secrel32	LASF280
	.byte	0x9
	.word	0x305
	.byte	0x11
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x9
	.long	LBB833
	.long	LBE833-LBB833
	.uleb128 0x1
	.ascii "X\0"
	.byte	0x9
	.word	0x306
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x35
	.ascii "compute_centers_grid\0"
	.byte	0x9
	.word	0x2e6
	.byte	0x6
	.ascii "_Z20compute_centers_gridP2v2iii\0"
	.long	LFB2176
	.long	LFE2176-LFB2176
	.uleb128 0x1
	.byte	0x9c
	.long	0x1eca1
	.uleb128 0x4
	.secrel32	LASF265
	.byte	0x9
	.word	0x2e6
	.byte	0x1f
	.long	0x1da06
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x_caps\0"
	.byte	0x9
	.word	0x2e6
	.byte	0x2c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y_caps\0"
	.byte	0x9
	.word	0x2e6
	.byte	0x38
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "side\0"
	.byte	0x9
	.word	0x2e6
	.byte	0x44
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x9
	.long	LBB828
	.long	LBE828-LBB828
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x2e7
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB830
	.long	LBE830-LBB830
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x9
	.word	0x2e8
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x3e
	.ascii "compute_centers_randomly\0"
	.byte	0x9
	.word	0x2de
	.byte	0x6
	.ascii "_Z24compute_centers_randomlyP2v2iii\0"
	.long	LFB2175
	.long	LFE2175-LFB2175
	.uleb128 0x1
	.byte	0x9c
	.long	0x1ed62
	.uleb128 0x4
	.secrel32	LASF265
	.byte	0x9
	.word	0x2de
	.byte	0x23
	.long	0x1da06
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "centers_length\0"
	.byte	0x9
	.word	0x2de
	.byte	0x30
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "bmp_width\0"
	.byte	0x9
	.word	0x2de
	.byte	0x44
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "bmp_height\0"
	.byte	0x9
	.word	0x2de
	.byte	0x53
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x9
	.long	LBB827
	.long	LBE827-LBB827
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x2e0
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x35
	.ascii "compute_centers_hex\0"
	.byte	0x9
	.word	0x2c8
	.byte	0x6
	.ascii "_Z19compute_centers_hexP2v2iii\0"
	.long	LFB2174
	.long	LFE2174-LFB2174
	.uleb128 0x1
	.byte	0x9c
	.long	0x1eeb4
	.uleb128 0x4
	.secrel32	LASF265
	.byte	0x9
	.word	0x2c8
	.byte	0x1e
	.long	0x1da06
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x_caps\0"
	.byte	0x9
	.word	0x2c8
	.byte	0x2b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y_caps\0"
	.byte	0x9
	.word	0x2c8
	.byte	0x37
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF227
	.byte	0x9
	.word	0x2c8
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "delta_vertical\0"
	.byte	0x9
	.word	0x2c9
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "delta_horizontal\0"
	.byte	0x9
	.word	0x2ca
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "current_y\0"
	.byte	0x9
	.word	0x2cc
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1
	.ascii "indent\0"
	.byte	0x9
	.word	0x2cd
	.byte	0xa
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x1
	.ascii "counter\0"
	.byte	0x9
	.word	0x2cf
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB824
	.long	LBE824-LBB824
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x9
	.word	0x2d1
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB825
	.long	LBE825-LBB825
	.uleb128 0x1
	.ascii "current_x\0"
	.byte	0x9
	.word	0x2d2
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x9
	.long	LBB826
	.long	LBE826-LBB826
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x9
	.word	0x2d4
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x3e
	.ascii "render_bitmap_to_screen\0"
	.byte	0x9
	.word	0x287
	.byte	0x6
	.ascii "_Z23render_bitmap_to_screenP6bitmap7tagRECTS1_\0"
	.long	LFB2173
	.long	LFE2173-LFB2173
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f136
	.uleb128 0x4
	.secrel32	LASF281
	.byte	0x9
	.word	0x287
	.byte	0x26
	.long	0x1d27a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF263
	.byte	0x9
	.word	0x287
	.byte	0x33
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "source_rect\0"
	.byte	0x9
	.word	0x287
	.byte	0x43
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x7
	.secrel32	LASF275
	.byte	0x9
	.word	0x288
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF276
	.byte	0x9
	.word	0x289
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x7
	.secrel32	LASF277
	.byte	0x9
	.word	0x28a
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x7
	.secrel32	LASF278
	.byte	0x9
	.word	0x28b
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x7
	.secrel32	LASF282
	.byte	0x9
	.word	0x292
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x7
	.secrel32	LASF283
	.byte	0x9
	.word	0x292
	.byte	0x13
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x7
	.secrel32	LASF284
	.byte	0x9
	.word	0x294
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "Row\0"
	.byte	0x9
	.word	0x295
	.byte	0xc
	.long	0x1a0c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF285
	.byte	0x9
	.word	0x296
	.byte	0xd
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x7
	.secrel32	LASF286
	.byte	0x9
	.word	0x299
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x7
	.secrel32	LASF287
	.byte	0x9
	.word	0x29a
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x9
	.long	LBB820
	.long	LBE820-LBB820
	.uleb128 0x1
	.ascii "Y\0"
	.byte	0x9
	.word	0x29c
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB821
	.long	LBE821-LBB821
	.uleb128 0x7
	.secrel32	LASF280
	.byte	0x9
	.word	0x29d
	.byte	0x11
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x9
	.long	LBB822
	.long	LBE822-LBB822
	.uleb128 0x1
	.ascii "X\0"
	.byte	0x9
	.word	0x2a5
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB823
	.long	LBE823-LBB823
	.uleb128 0x1
	.ascii "texel_position\0"
	.byte	0x9
	.word	0x2ad
	.byte	0x14
	.long	0x1a035
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x7
	.secrel32	LASF288
	.byte	0x9
	.word	0x2ae
	.byte	0x14
	.long	0x1a035
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "SA\0"
	.byte	0x9
	.word	0x2b0
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "SR\0"
	.byte	0x9
	.word	0x2b1
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -85
	.uleb128 0x1
	.ascii "SG\0"
	.byte	0x9
	.word	0x2b2
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -86
	.uleb128 0x1
	.ascii "SB\0"
	.byte	0x9
	.word	0x2b3
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -87
	.uleb128 0x1
	.ascii "DA\0"
	.byte	0x9
	.word	0x2b5
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "DR\0"
	.byte	0x9
	.word	0x2b6
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -93
	.uleb128 0x1
	.ascii "DG\0"
	.byte	0x9
	.word	0x2b7
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -94
	.uleb128 0x1
	.ascii "DB\0"
	.byte	0x9
	.word	0x2b8
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -95
	.uleb128 0x1
	.ascii "A\0"
	.byte	0x9
	.word	0x2ba
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "R\0"
	.byte	0x9
	.word	0x2bb
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -97
	.uleb128 0x1
	.ascii "G\0"
	.byte	0x9
	.word	0x2bc
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -98
	.uleb128 0x1
	.ascii "B\0"
	.byte	0x9
	.word	0x2bd
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -99
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x49
	.ascii "get_h\0"
	.byte	0x9
	.word	0x285
	.byte	0x5
	.ascii "_Z5get_h6RECT_f\0"
	.long	0xf4
	.long	LFB2172
	.long	LFE2172-LFB2172
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f174
	.uleb128 0x4
	.secrel32	LASF262
	.byte	0x9
	.word	0x285
	.byte	0x12
	.long	0x1a129
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x49
	.ascii "get_w\0"
	.byte	0x9
	.word	0x284
	.byte	0x5
	.ascii "_Z5get_w6RECT_f\0"
	.long	0xf4
	.long	LFB2171
	.long	LFE2171-LFB2171
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f1b2
	.uleb128 0x4
	.secrel32	LASF262
	.byte	0x9
	.word	0x284
	.byte	0x12
	.long	0x1a129
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x49
	.ascii "get_h\0"
	.byte	0x9
	.word	0x283
	.byte	0x5
	.ascii "_Z5get_h7tagRECT\0"
	.long	0xf4
	.long	LFB2170
	.long	LFE2170-LFB2170
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f1f1
	.uleb128 0x4
	.secrel32	LASF262
	.byte	0x9
	.word	0x283
	.byte	0x10
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x49
	.ascii "get_w\0"
	.byte	0x9
	.word	0x282
	.byte	0x5
	.ascii "_Z5get_w7tagRECT\0"
	.long	0xf4
	.long	LFB2169
	.long	LFE2169-LFB2169
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f230
	.uleb128 0x4
	.secrel32	LASF262
	.byte	0x9
	.word	0x282
	.byte	0x10
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x35
	.ascii "blit_texture_to_bitmap\0"
	.byte	0x9
	.word	0x24b
	.byte	0x6
	.ascii "_Z22blit_texture_to_bitmapP6bitmapi2v2i5Colorib\0"
	.long	LFB2168
	.long	LFE2168-LFB2168
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f501
	.uleb128 0x3
	.ascii "Dest\0"
	.byte	0x9
	.word	0x24b
	.byte	0x25
	.long	0x1d27a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "element_index\0"
	.byte	0x9
	.word	0x24b
	.byte	0x2f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "center\0"
	.byte	0x9
	.word	0x24b
	.byte	0x41
	.long	0x1a171
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "w\0"
	.byte	0x9
	.word	0x24b
	.byte	0x4d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF289
	.byte	0x9
	.word	0x24b
	.byte	0x56
	.long	0x1a445
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "texture_index\0"
	.byte	0x9
	.word	0x24b
	.byte	0x61
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x4
	.secrel32	LASF228
	.byte	0x9
	.word	0x24b
	.byte	0x75
	.long	0x15b97
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x9
	.word	0x24d
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x9
	.word	0x24e
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x7
	.secrel32	LASF275
	.byte	0x9
	.word	0x250
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x7
	.secrel32	LASF276
	.byte	0x9
	.word	0x251
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF277
	.byte	0x9
	.word	0x252
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x7
	.secrel32	LASF278
	.byte	0x9
	.word	0x253
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x7
	.secrel32	LASF282
	.byte	0x9
	.word	0x25a
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x7
	.secrel32	LASF283
	.byte	0x9
	.word	0x25a
	.byte	0x13
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x7
	.secrel32	LASF284
	.byte	0x9
	.word	0x25c
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "Row\0"
	.byte	0x9
	.word	0x25d
	.byte	0xc
	.long	0x1a0c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x7
	.secrel32	LASF285
	.byte	0x9
	.word	0x25e
	.byte	0xd
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x7
	.secrel32	LASF286
	.byte	0x9
	.word	0x261
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x7
	.secrel32	LASF287
	.byte	0x9
	.word	0x262
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x9
	.long	LBB816
	.long	LBE816-LBB816
	.uleb128 0x1
	.ascii "Y\0"
	.byte	0x9
	.word	0x264
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x9
	.long	LBB817
	.long	LBE817-LBB817
	.uleb128 0x7
	.secrel32	LASF280
	.byte	0x9
	.word	0x265
	.byte	0x11
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB818
	.long	LBE818-LBB818
	.uleb128 0x1
	.ascii "X\0"
	.byte	0x9
	.word	0x267
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB819
	.long	LBE819-LBB819
	.uleb128 0x7
	.secrel32	LASF288
	.byte	0x9
	.word	0x269
	.byte	0x14
	.long	0x1a035
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "SA\0"
	.byte	0x9
	.word	0x26b
	.byte	0x13
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "SR\0"
	.byte	0x9
	.word	0x26d
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -73
	.uleb128 0x1
	.ascii "SG\0"
	.byte	0x9
	.word	0x26e
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -74
	.uleb128 0x1
	.ascii "SB\0"
	.byte	0x9
	.word	0x26f
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -75
	.uleb128 0x1
	.ascii "DA\0"
	.byte	0x9
	.word	0x271
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "DR\0"
	.byte	0x9
	.word	0x272
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -81
	.uleb128 0x1
	.ascii "DG\0"
	.byte	0x9
	.word	0x273
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -82
	.uleb128 0x1
	.ascii "DB\0"
	.byte	0x9
	.word	0x274
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -83
	.uleb128 0x1
	.ascii "A\0"
	.byte	0x9
	.word	0x276
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "R\0"
	.byte	0x9
	.word	0x277
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -85
	.uleb128 0x1
	.ascii "G\0"
	.byte	0x9
	.word	0x278
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -86
	.uleb128 0x1
	.ascii "B\0"
	.byte	0x9
	.word	0x279
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -87
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x35
	.ascii "blit_bitmap_to_bitmap\0"
	.byte	0x9
	.word	0x1f7
	.byte	0x6
	.ascii "_Z21blit_bitmap_to_bitmapP6bitmapS0_iiii\0"
	.long	LFB2167
	.long	LFE2167-LFB2167
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f782
	.uleb128 0x3
	.ascii "Dest\0"
	.byte	0x9
	.word	0x1f7
	.byte	0x24
	.long	0x1d27a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF281
	.byte	0x9
	.word	0x1f7
	.byte	0x32
	.long	0x1d27a
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x9
	.word	0x1f7
	.byte	0x3e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x9
	.word	0x1f7
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x9
	.word	0x1f7
	.byte	0x4c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x9
	.word	0x1f7
	.byte	0x57
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x7
	.secrel32	LASF275
	.byte	0x9
	.word	0x1fc
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF276
	.byte	0x9
	.word	0x1fd
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x7
	.secrel32	LASF277
	.byte	0x9
	.word	0x1fe
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF278
	.byte	0x9
	.word	0x1ff
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x7
	.secrel32	LASF282
	.byte	0x9
	.word	0x206
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x7
	.secrel32	LASF283
	.byte	0x9
	.word	0x206
	.byte	0x13
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x7
	.secrel32	LASF284
	.byte	0x9
	.word	0x208
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "Row\0"
	.byte	0x9
	.word	0x209
	.byte	0xc
	.long	0x1a0c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x7
	.secrel32	LASF285
	.byte	0x9
	.word	0x20a
	.byte	0xd
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x7
	.secrel32	LASF286
	.byte	0x9
	.word	0x20d
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x7
	.secrel32	LASF287
	.byte	0x9
	.word	0x20e
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x9
	.long	LBB812
	.long	LBE812-LBB812
	.uleb128 0x1
	.ascii "Y\0"
	.byte	0x9
	.word	0x210
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x9
	.long	LBB813
	.long	LBE813-LBB813
	.uleb128 0x7
	.secrel32	LASF280
	.byte	0x9
	.word	0x211
	.byte	0x11
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB814
	.long	LBE814-LBB814
	.uleb128 0x1
	.ascii "X\0"
	.byte	0x9
	.word	0x213
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB815
	.long	LBE815-LBB815
	.uleb128 0x7
	.secrel32	LASF288
	.byte	0x9
	.word	0x215
	.byte	0x14
	.long	0x1a035
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "SA\0"
	.byte	0x9
	.word	0x217
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "SR\0"
	.byte	0x9
	.word	0x218
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -73
	.uleb128 0x1
	.ascii "SG\0"
	.byte	0x9
	.word	0x219
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -74
	.uleb128 0x1
	.ascii "SB\0"
	.byte	0x9
	.word	0x21a
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -75
	.uleb128 0x1
	.ascii "DA\0"
	.byte	0x9
	.word	0x21c
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "DR\0"
	.byte	0x9
	.word	0x21d
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -81
	.uleb128 0x1
	.ascii "DG\0"
	.byte	0x9
	.word	0x21e
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -82
	.uleb128 0x1
	.ascii "DB\0"
	.byte	0x9
	.word	0x21f
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -83
	.uleb128 0x1
	.ascii "A\0"
	.byte	0x9
	.word	0x221
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "R\0"
	.byte	0x9
	.word	0x222
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -85
	.uleb128 0x1
	.ascii "G\0"
	.byte	0x9
	.word	0x223
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -86
	.uleb128 0x1
	.ascii "B\0"
	.byte	0x9
	.word	0x224
	.byte	0x13
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -87
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x3e
	.ascii "render_rectangle\0"
	.byte	0x9
	.word	0x1e5
	.byte	0x6
	.ascii "_Z16render_rectangle7tagRECT5Colorh\0"
	.long	LFB2166
	.long	LFE2166-LFB2166
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f857
	.uleb128 0x4
	.secrel32	LASF290
	.byte	0x9
	.word	0x1e5
	.byte	0x1c
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF289
	.byte	0x9
	.word	0x1e5
	.byte	0x2d
	.long	0x1a445
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF239
	.byte	0x9
	.word	0x1e5
	.byte	0x3a
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "top_rect\0"
	.byte	0x9
	.word	0x1ec
	.byte	0xa
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "bottom_rect\0"
	.byte	0x9
	.word	0x1ed
	.byte	0xa
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "left_rect\0"
	.byte	0x9
	.word	0x1ee
	.byte	0xa
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "right_rect\0"
	.byte	0x9
	.word	0x1ef
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x35
	.ascii "render_filled_rectangle\0"
	.byte	0x9
	.word	0x1c9
	.byte	0x6
	.ascii "_Z23render_filled_rectangle7tagRECT5Color\0"
	.long	LFB2165
	.long	LFE2165-LFB2165
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f987
	.uleb128 0x4
	.secrel32	LASF290
	.byte	0x9
	.word	0x1c9
	.byte	0x23
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF289
	.byte	0x9
	.word	0x1c9
	.byte	0x34
	.long	0x1a445
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x9
	.word	0x1cb
	.byte	0xc
	.long	0x1a035
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF275
	.byte	0x9
	.word	0x1cd
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x7
	.secrel32	LASF276
	.byte	0x9
	.word	0x1ce
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF277
	.byte	0x9
	.word	0x1cf
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x7
	.secrel32	LASF278
	.byte	0x9
	.word	0x1d0
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "Pitch\0"
	.byte	0x9
	.word	0x1d7
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "Row\0"
	.byte	0x9
	.word	0x1d8
	.byte	0xc
	.long	0x1a0c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x9
	.long	LBB809
	.long	LBE809-LBB809
	.uleb128 0x1
	.ascii "Y\0"
	.byte	0x9
	.word	0x1db
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x9
	.long	LBB810
	.long	LBE810-LBB810
	.uleb128 0x7
	.secrel32	LASF280
	.byte	0x9
	.word	0x1dc
	.byte	0x11
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB811
	.long	LBE811-LBB811
	.uleb128 0x1
	.ascii "X\0"
	.byte	0x9
	.word	0x1dd
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x49
	.ascii "handle_window_messages\0"
	.byte	0x9
	.word	0x1bf
	.byte	0x5
	.ascii "_Z22handle_window_messagesv\0"
	.long	0xf4
	.long	LFB2164
	.long	LFE2164-LFB2164
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fa01
	.uleb128 0x1
	.ascii "Message\0"
	.byte	0x9
	.word	0x1c0
	.byte	0x9
	.long	0x27ec
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2d
	.long	LVL56
	.long	0x32f80
	.uleb128 0x2d
	.long	LVL57
	.long	0x32fa2
	.uleb128 0x2d
	.long	LVL58
	.long	0x32fcb
	.byte	0
	.uleb128 0x35
	.ascii "start_main_window\0"
	.byte	0x9
	.word	0x1ab
	.byte	0x6
	.ascii "_Z17start_main_windowv\0"
	.long	LFB2163
	.long	LFE2163-LFB2163
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fa7a
	.uleb128 0x1
	.ascii "WindowClass\0"
	.byte	0x9
	.word	0x1ac
	.byte	0xe
	.long	0x2769
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	LVL52
	.long	0x32ff4
	.uleb128 0x2d
	.long	LVL53
	.long	0x3301c
	.uleb128 0x2d
	.long	LVL54
	.long	0x32ff4
	.uleb128 0x2d
	.long	LVL55
	.long	0x33041
	.byte	0
	.uleb128 0x42
	.ascii "main_window_callback\0"
	.byte	0x9
	.word	0x175
	.byte	0x12
	.ascii "_Z20main_window_callbackP6HWND__jjl@16\0"
	.long	0x20bb
	.long	LFB2162
	.long	LFE2162-LFB2162
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fbc7
	.uleb128 0x3
	.ascii "Window\0"
	.byte	0x9
	.word	0x175
	.byte	0x2c
	.long	0x2178
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "Message\0"
	.byte	0x9
	.word	0x175
	.byte	0x39
	.long	0x7eb
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "WParam\0"
	.byte	0x9
	.word	0x175
	.byte	0x49
	.long	0x209d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "LParam\0"
	.byte	0x9
	.word	0x175
	.byte	0x58
	.long	0x20ac
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "Result\0"
	.byte	0x9
	.word	0x176
	.byte	0xd
	.long	0x20bb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0xf
	.long	LBB806
	.long	LBE806-LBB806
	.long	0x1fb7b
	.uleb128 0x1
	.ascii "ClientRect\0"
	.byte	0x9
	.word	0x17c
	.byte	0x12
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x7
	.secrel32	LASF181
	.byte	0x9
	.word	0x17e
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF182
	.byte	0x9
	.word	0x17f
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2d
	.long	LVL48
	.long	0x33069
	.byte	0
	.uleb128 0x69
	.secrel32	Ldebug_ranges0+0x120
	.long	0x1fbab
	.uleb128 0x1
	.ascii "key_state\0"
	.byte	0x9
	.word	0x19a
	.byte	0x12
	.long	0x132
	.uleb128 0x2
	.byte	0x91
	.sleb128 -30
	.uleb128 0x7
	.secrel32	LASF167
	.byte	0x9
	.word	0x19b
	.byte	0x12
	.long	0x941
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x2d
	.long	LVL49
	.long	0x3308c
	.uleb128 0x2d
	.long	LVL50
	.long	0x3308c
	.uleb128 0x2d
	.long	LVL51
	.long	0x330b3
	.byte	0
	.uleb128 0x49
	.ascii "screen_to_window_position\0"
	.byte	0x9
	.word	0x168
	.byte	0x4
	.ascii "_Z25screen_to_window_position8tagPOINT\0"
	.long	0x1a171
	.long	LFB2161
	.long	LFE2161-LFB2161
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fc6b
	.uleb128 0x3
	.ascii "pos\0"
	.byte	0x9
	.word	0x168
	.byte	0x24
	.long	0x22c6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x9
	.word	0x169
	.byte	0x8
	.long	0x1a171
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF262
	.byte	0x9
	.word	0x16b
	.byte	0xa
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	LVL45
	.long	0x33069
	.uleb128 0x2d
	.long	LVL46
	.long	0x330d9
	.uleb128 0x2d
	.long	LVL47
	.long	0x330d9
	.byte	0
	.uleb128 0x35
	.ascii "blit_main_buffer_to_window\0"
	.byte	0x9
	.word	0x15f
	.byte	0x6
	.ascii "_Z26blit_main_buffer_to_windowv\0"
	.long	LFB2160
	.long	LFE2160-LFB2160
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fce6
	.uleb128 0x1
	.ascii "DeviceContext\0"
	.byte	0x9
	.word	0x160
	.byte	0x9
	.long	0x21dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2d
	.long	LVL43
	.long	0x330fe
	.uleb128 0x2d
	.long	LVL44
	.long	0x33111
	.byte	0
	.uleb128 0x3e
	.ascii "resize_main_buffer\0"
	.byte	0x9
	.word	0x154
	.byte	0x6
	.ascii "_Z18resize_main_bufferii\0"
	.long	LFB2159
	.long	LFE2159-LFB2159
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fd53
	.uleb128 0x3
	.ascii "new_width\0"
	.byte	0x9
	.word	0x154
	.byte	0x1d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "new_height\0"
	.byte	0x9
	.word	0x154
	.byte	0x2c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0xc8
	.ascii "initialize_main_buffer\0"
	.byte	0x9
	.word	0x14a
	.byte	0x6
	.ascii "_Z22initialize_main_bufferv\0"
	.long	LFB2158
	.long	LFE2158-LFB2158
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x84
	.secrel32	LASF291
	.byte	0x9
	.word	0x140
	.byte	0x6
	.ascii "_Z11render_textfii7tagRECT5Color\0"
	.long	LFB2157
	.long	LFE2157-LFB2157
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fe44
	.uleb128 0x3
	.ascii "number\0"
	.byte	0x9
	.word	0x140
	.byte	0x18
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "digits\0"
	.byte	0x9
	.word	0x140
	.byte	0x24
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF292
	.byte	0x9
	.word	0x140
	.byte	0x30
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF263
	.byte	0x9
	.word	0x140
	.byte	0x40
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x9
	.word	0x140
	.byte	0x51
	.long	0x1a445
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x7
	.secrel32	LASF233
	.byte	0x9
	.word	0x141
	.byte	0xb
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF48
	.byte	0x9
	.word	0x143
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x84
	.secrel32	LASF291
	.byte	0x9
	.word	0x137
	.byte	0x6
	.ascii "_Z11render_textii7tagRECT5Color\0"
	.long	LFB2156
	.long	LFE2156-LFB2156
	.uleb128 0x1
	.byte	0x9c
	.long	0x1fede
	.uleb128 0x3
	.ascii "number\0"
	.byte	0x9
	.word	0x137
	.byte	0x16
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF292
	.byte	0x9
	.word	0x137
	.byte	0x22
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF263
	.byte	0x9
	.word	0x137
	.byte	0x32
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x9
	.word	0x137
	.byte	0x43
	.long	0x1a445
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x7
	.secrel32	LASF233
	.byte	0x9
	.word	0x138
	.byte	0xb
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF48
	.byte	0x9
	.word	0x13a
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x84
	.secrel32	LASF291
	.byte	0x9
	.word	0x106
	.byte	0x6
	.ascii "_Z11render_textPcii7tagRECT5Color\0"
	.long	LFB2155
	.long	LFE2155-LFB2155
	.uleb128 0x1
	.byte	0x9c
	.long	0x20104
	.uleb128 0x4
	.secrel32	LASF233
	.byte	0x9
	.word	0x106
	.byte	0x18
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF48
	.byte	0x9
	.word	0x106
	.byte	0x22
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF292
	.byte	0x9
	.word	0x106
	.byte	0x2e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF263
	.byte	0x9
	.word	0x106
	.byte	0x3e
	.long	0x227b
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x9
	.word	0x106
	.byte	0x4f
	.long	0x1a445
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x1
	.ascii "xpos\0"
	.byte	0x9
	.word	0x107
	.byte	0xb
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "ypos\0"
	.byte	0x9
	.word	0x108
	.byte	0xb
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "quad\0"
	.byte	0x9
	.word	0x109
	.byte	0x18
	.long	0x1941f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x9
	.word	0x10b
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x9
	.word	0x10b
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB796
	.long	LBE796-LBB796
	.uleb128 0x1
	.ascii "ch\0"
	.byte	0x9
	.word	0x10d
	.byte	0x10
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -25
	.uleb128 0x9
	.long	LBB797
	.long	LBE797-LBB797
	.uleb128 0x1
	.ascii "Dest\0"
	.byte	0x9
	.word	0x111
	.byte	0x11
	.long	0x1dd03
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x7
	.secrel32	LASF281
	.byte	0x9
	.word	0x112
	.byte	0x11
	.long	0x1a0c9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "max_x\0"
	.byte	0x9
	.word	0x114
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "max_y\0"
	.byte	0x9
	.word	0x115
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "skipped_horizontal_pixels\0"
	.byte	0x9
	.word	0x117
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x9
	.long	LBB803
	.long	LBE803-LBB803
	.uleb128 0x1
	.ascii "SA\0"
	.byte	0x9
	.word	0x11b
	.byte	0x1b
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "SR\0"
	.byte	0x9
	.word	0x11c
	.byte	0x1b
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -53
	.uleb128 0x1
	.ascii "SG\0"
	.byte	0x9
	.word	0x11d
	.byte	0x1b
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -54
	.uleb128 0x1
	.ascii "SB\0"
	.byte	0x9
	.word	0x11e
	.byte	0x1b
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -55
	.uleb128 0x1
	.ascii "DA\0"
	.byte	0x9
	.word	0x120
	.byte	0x1b
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "DR\0"
	.byte	0x9
	.word	0x121
	.byte	0x1b
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -61
	.uleb128 0x1
	.ascii "DG\0"
	.byte	0x9
	.word	0x122
	.byte	0x1b
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -62
	.uleb128 0x1
	.ascii "DB\0"
	.byte	0x9
	.word	0x123
	.byte	0x1b
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -63
	.uleb128 0x1
	.ascii "A\0"
	.byte	0x9
	.word	0x125
	.byte	0x1b
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "R\0"
	.byte	0x9
	.word	0x126
	.byte	0x1b
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -65
	.uleb128 0x1
	.ascii "G\0"
	.byte	0x9
	.word	0x127
	.byte	0x1b
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -66
	.uleb128 0x1
	.ascii "B\0"
	.byte	0x9
	.word	0x128
	.byte	0x1b
	.long	0x1a027
	.uleb128 0x3
	.byte	0x91
	.sleb128 -67
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x76
	.ascii "init_font\0"
	.byte	0x9
	.byte	0xf0
	.byte	0x6
	.ascii "_Z9init_fontPi\0"
	.long	LFB2154
	.long	LFE2154-LFB2154
	.uleb128 0x1
	.byte	0x9c
	.long	0x2019b
	.uleb128 0x2c
	.secrel32	LASF252
	.byte	0x9
	.byte	0xf0
	.byte	0x14
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1b
	.ascii "ttf_buffer\0"
	.byte	0x9
	.byte	0xf2
	.byte	0xa
	.long	0x2019b
	.uleb128 0x5
	.byte	0x91
	.sleb128 -1048596
	.uleb128 0x4e
	.secrel32	LASF274
	.byte	0x9
	.byte	0xf3
	.byte	0x9
	.long	0xf4
	.uleb128 0x5
	.byte	0x91
	.sleb128 -1048600
	.uleb128 0x1b
	.ascii "temp_bitmap\0"
	.byte	0x9
	.byte	0xfc
	.byte	0xb
	.long	0x201af
	.uleb128 0x5
	.byte	0x91
	.sleb128 -1798600
	.uleb128 0x9
	.long	LBB795
	.long	LBE795-LBB795
	.uleb128 0x1b
	.ascii "i\0"
	.byte	0x9
	.byte	0xfe
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0xb8
	.long	0x201af
	.uleb128 0xc9
	.long	0xe4
	.long	0xfffff
	.byte	0
	.uleb128 0x10
	.long	0x1a027
	.long	0x201cd
	.uleb128 0x12
	.long	0xe4
	.byte	0x2
	.uleb128 0x3a
	.long	0xe4
	.word	0x1f3
	.uleb128 0x3a
	.long	0xe4
	.word	0x1f3
	.byte	0
	.uleb128 0x5f
	.ascii "get_rect\0"
	.byte	0x9
	.byte	0xec
	.byte	0x6
	.ascii "_Z8get_rectiiii\0"
	.long	0x227b
	.long	LFB2153
	.long	LFE2153-LFB2153
	.uleb128 0x1
	.byte	0x9c
	.long	0x20235
	.uleb128 0x21
	.ascii "x\0"
	.byte	0x9
	.byte	0xec
	.byte	0x13
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x21
	.ascii "y\0"
	.byte	0x9
	.byte	0xec
	.byte	0x1a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2c
	.secrel32	LASF181
	.byte	0x9
	.byte	0xec
	.byte	0x21
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2c
	.secrel32	LASF182
	.byte	0x9
	.byte	0xec
	.byte	0x2c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x77
	.ascii "shift_hue\0"
	.byte	0x9
	.byte	0xc6
	.byte	0x7
	.ascii "_Z9shift_hue5Colori\0"
	.long	0x1a445
	.long	LFB2152
	.long	LFE2152-LFB2152
	.uleb128 0x1
	.byte	0x9c
	.long	0x20297
	.uleb128 0x21
	.ascii "c\0"
	.byte	0x9
	.byte	0xc6
	.byte	0x17
	.long	0x1a445
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x21
	.ascii "shift\0"
	.byte	0x9
	.byte	0xc6
	.byte	0x1e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1b
	.ascii "hsv\0"
	.byte	0x9
	.byte	0xc7
	.byte	0xf
	.long	0x1a486
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x77
	.ascii "hsv_to_rgb\0"
	.byte	0x9
	.byte	0xaf
	.byte	0x7
	.ascii "_Z10hsv_to_rgb9Color_hsv\0"
	.long	0x1a445
	.long	LFB2151
	.long	LFE2151-LFB2151
	.uleb128 0x1
	.byte	0x9c
	.long	0x20334
	.uleb128 0x21
	.ascii "c\0"
	.byte	0x9
	.byte	0xaf
	.byte	0x1c
	.long	0x1a486
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1b
	.ascii "v\0"
	.byte	0x9
	.byte	0xb1
	.byte	0xb
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x1b
	.ascii "sector\0"
	.byte	0x9
	.byte	0xb5
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x4e
	.secrel32	LASF293
	.byte	0x9
	.byte	0xb6
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1b
	.ascii "p\0"
	.byte	0x9
	.byte	0xb7
	.byte	0xb
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -29
	.uleb128 0x1b
	.ascii "q\0"
	.byte	0x9
	.byte	0xb8
	.byte	0xb
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -30
	.uleb128 0x1b
	.ascii "t\0"
	.byte	0x9
	.byte	0xb9
	.byte	0xb
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -31
	.byte	0
	.uleb128 0x77
	.ascii "rgb_to_hsv\0"
	.byte	0x9
	.byte	0x95
	.byte	0xb
	.ascii "_Z10rgb_to_hsv5Color\0"
	.long	0x1a486
	.long	LFB2150
	.long	LFE2150-LFB2150
	.uleb128 0x1
	.byte	0x9c
	.long	0x203b5
	.uleb128 0x21
	.ascii "c\0"
	.byte	0x9
	.byte	0x95
	.byte	0x1c
	.long	0x1a445
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1b
	.ascii "min\0"
	.byte	0x9
	.byte	0x96
	.byte	0xb
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x1b
	.ascii "max\0"
	.byte	0x9
	.byte	0x97
	.byte	0xb
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -18
	.uleb128 0x4e
	.secrel32	LASF167
	.byte	0x9
	.byte	0x98
	.byte	0xb
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -19
	.uleb128 0x4e
	.secrel32	LASF257
	.byte	0x9
	.byte	0x9a
	.byte	0xf
	.long	0x1a486
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0
	.uleb128 0x5f
	.ascii "min_c\0"
	.byte	0x9
	.byte	0x91
	.byte	0x8
	.ascii "_Z5min_chhh\0"
	.long	0xf4
	.long	LFB2149
	.long	LFE2149-LFB2149
	.uleb128 0x1
	.byte	0x9c
	.long	0x20414
	.uleb128 0x21
	.ascii "a\0"
	.byte	0x9
	.byte	0x91
	.byte	0x14
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x21
	.ascii "b\0"
	.byte	0x9
	.byte	0x91
	.byte	0x1d
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x21
	.ascii "c\0"
	.byte	0x9
	.byte	0x91
	.byte	0x26
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x4e
	.secrel32	LASF274
	.byte	0x9
	.byte	0x92
	.byte	0xb
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.byte	0
	.uleb128 0x5f
	.ascii "max_c\0"
	.byte	0x9
	.byte	0x8d
	.byte	0x8
	.ascii "_Z5max_chhh\0"
	.long	0xf4
	.long	LFB2148
	.long	LFE2148-LFB2148
	.uleb128 0x1
	.byte	0x9c
	.long	0x20473
	.uleb128 0x21
	.ascii "a\0"
	.byte	0x9
	.byte	0x8d
	.byte	0x14
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x21
	.ascii "b\0"
	.byte	0x9
	.byte	0x8d
	.byte	0x1d
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x21
	.ascii "c\0"
	.byte	0x9
	.byte	0x8d
	.byte	0x26
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x4e
	.secrel32	LASF274
	.byte	0x9
	.byte	0x8e
	.byte	0xb
	.long	0x1a027
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.byte	0
	.uleb128 0x5f
	.ascii "rect_from_rectf\0"
	.byte	0x9
	.byte	0x42
	.byte	0x6
	.ascii "_Z15rect_from_rectf6RECT_f\0"
	.long	0x227b
	.long	LFB2141
	.long	LFE2141-LFB2141
	.uleb128 0x1
	.byte	0x9c
	.long	0x204d4
	.uleb128 0x2c
	.secrel32	LASF262
	.byte	0x9
	.byte	0x42
	.byte	0x1d
	.long	0x1a129
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4e
	.secrel32	LASF257
	.byte	0x9
	.byte	0x43
	.byte	0xa
	.long	0x227b
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0
	.uleb128 0x42
	.ascii "GifEnd\0"
	.byte	0x8
	.word	0x336
	.byte	0x6
	.ascii "_Z6GifEndP9GifWriter\0"
	.long	0x15b97
	.long	LFB2140
	.long	LFE2140-LFB2140
	.uleb128 0x1
	.byte	0x9c
	.long	0x20518
	.uleb128 0x4
	.secrel32	LASF260
	.byte	0x8
	.word	0x336
	.byte	0x19
	.long	0x20518
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1a014
	.uleb128 0x42
	.ascii "GifWriteFrame\0"
	.byte	0x8
	.word	0x31f
	.byte	0x6
	.ascii "_Z13GifWriteFrameP9GifWriterPKhjjjib\0"
	.long	0x15b97
	.long	LFB2139
	.long	LFE2139-LFB2139
	.uleb128 0x1
	.byte	0x9c
	.long	0x205fe
	.uleb128 0x4
	.secrel32	LASF260
	.byte	0x8
	.word	0x31f
	.byte	0x20
	.long	0x20518
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x8
	.word	0x31f
	.byte	0x37
	.long	0x205fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x8
	.word	0x31f
	.byte	0x47
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x8
	.word	0x31f
	.byte	0x57
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF176
	.byte	0x8
	.word	0x31f
	.byte	0x68
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF212
	.byte	0x8
	.word	0x31f
	.byte	0x73
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "dither\0"
	.byte	0x8
	.word	0x31f
	.byte	0x86
	.long	0x15b97
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1316
	.uleb128 0x7
	.secrel32	LASF213
	.byte	0x8
	.word	0x323
	.byte	0x14
	.long	0x205fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "pal\0"
	.byte	0x8
	.word	0x326
	.byte	0x10
	.long	0x19eeb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1304
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x165b2
	.uleb128 0x42
	.ascii "GifBegin\0"
	.byte	0x8
	.word	0x2e2
	.byte	0x6
	.ascii "_Z8GifBeginP9GifWriterPKcjjjib\0"
	.long	0x15b97
	.long	LFB2138
	.long	LFE2138-LFB2138
	.uleb128 0x1
	.byte	0x9c
	.long	0x206b7
	.uleb128 0x4
	.secrel32	LASF260
	.byte	0x8
	.word	0x2e2
	.byte	0x1b
	.long	0x20518
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x8
	.word	0x2e2
	.byte	0x2f
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x8
	.word	0x2e2
	.byte	0x42
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x8
	.word	0x2e2
	.byte	0x52
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF176
	.byte	0x8
	.word	0x2e2
	.byte	0x63
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF212
	.byte	0x8
	.word	0x2e2
	.byte	0x72
	.long	0x165d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "dither\0"
	.byte	0x8
	.word	0x2e2
	.byte	0x85
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x3e
	.ascii "GifWriteLzwImage\0"
	.byte	0x8
	.word	0x262
	.byte	0x6
	.ascii "_Z16GifWriteLzwImageP6_iobufPhjjjjjP10GifPalette\0"
	.long	LFB2137
	.long	LFE2137-LFB2137
	.uleb128 0x1
	.byte	0x9c
	.long	0x2086f
	.uleb128 0x3
	.ascii "f\0"
	.byte	0x8
	.word	0x262
	.byte	0x1d
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x8
	.word	0x262
	.byte	0x29
	.long	0x1a00e
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF3
	.byte	0x8
	.word	0x262
	.byte	0x39
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "top\0"
	.byte	0x8
	.word	0x262
	.byte	0x48
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x8
	.word	0x262
	.byte	0x57
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x8
	.word	0x262
	.byte	0x67
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF176
	.byte	0x8
	.word	0x262
	.byte	0x78
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF295
	.byte	0x8
	.word	0x262
	.byte	0x8b
	.long	0x2086f
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x1
	.ascii "minCodeSize\0"
	.byte	0x8
	.word	0x280
	.byte	0xf
	.long	0xfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "clearCode\0"
	.byte	0x8
	.word	0x281
	.byte	0x14
	.long	0x165f9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "codetree\0"
	.byte	0x8
	.word	0x285
	.byte	0x11
	.long	0x20875
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "curCode\0"
	.byte	0x8
	.word	0x288
	.byte	0xd
	.long	0x165d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "codeSize\0"
	.byte	0x8
	.word	0x289
	.byte	0xe
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "maxCode\0"
	.byte	0x8
	.word	0x28a
	.byte	0xe
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "stat\0"
	.byte	0x8
	.word	0x28c
	.byte	0x12
	.long	0x19f65
	.uleb128 0x3
	.byte	0x91
	.sleb128 -316
	.uleb128 0x9
	.long	LBB791
	.long	LBE791-LBB791
	.uleb128 0x1
	.ascii "yy\0"
	.byte	0x8
	.word	0x293
	.byte	0x12
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB793
	.long	LBE793-LBB793
	.uleb128 0x1
	.ascii "xx\0"
	.byte	0x8
	.word	0x295
	.byte	0x16
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x9
	.long	LBB794
	.long	LBE794-LBB794
	.uleb128 0x1
	.ascii "nextValue\0"
	.byte	0x8
	.word	0x29c
	.byte	0x15
	.long	0x165a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -49
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19eeb
	.uleb128 0xc
	.byte	0x4
	.long	0x19fb5
	.uleb128 0x3e
	.ascii "GifWritePalette\0"
	.byte	0x8
	.word	0x24f
	.byte	0x6
	.ascii "_Z15GifWritePalettePK10GifPaletteP6_iobuf\0"
	.long	LFB2136
	.long	LFE2136-LFB2136
	.uleb128 0x1
	.byte	0x9c
	.long	0x20934
	.uleb128 0x4
	.secrel32	LASF295
	.byte	0x8
	.word	0x24f
	.byte	0x29
	.long	0x20934
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "f\0"
	.byte	0x8
	.word	0x24f
	.byte	0x35
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x9
	.long	LBB789
	.long	LBE789-LBB789
	.uleb128 0x1
	.ascii "ii\0"
	.byte	0x8
	.word	0x255
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB790
	.long	LBE790-LBB790
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x8
	.word	0x257
	.byte	0x12
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x8
	.word	0x258
	.byte	0x12
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x8
	.word	0x259
	.byte	0x12
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19efe
	.uleb128 0x3e
	.ascii "GifWriteCode\0"
	.byte	0x8
	.word	0x239
	.byte	0x6
	.ascii "_Z12GifWriteCodeP6_iobufP12GifBitStatusjj\0"
	.long	LFB2135
	.long	LFE2135-LFB2135
	.uleb128 0x1
	.byte	0x9c
	.long	0x209dd
	.uleb128 0x3
	.ascii "f\0"
	.byte	0x8
	.word	0x239
	.byte	0x1a
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "stat\0"
	.byte	0x8
	.word	0x239
	.byte	0x2b
	.long	0x209dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF166
	.byte	0x8
	.word	0x239
	.byte	0x3a
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF48
	.byte	0x8
	.word	0x239
	.byte	0x49
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x9
	.long	LBB788
	.long	LBE788-LBB788
	.uleb128 0x1
	.ascii "ii\0"
	.byte	0x8
	.word	0x23b
	.byte	0x13
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19f65
	.uleb128 0x3e
	.ascii "GifWriteChunk\0"
	.byte	0x8
	.word	0x22f
	.byte	0x6
	.ascii "_Z13GifWriteChunkP6_iobufP12GifBitStatus\0"
	.long	LFB2134
	.long	LFE2134-LFB2134
	.uleb128 0x1
	.byte	0x9c
	.long	0x20a4d
	.uleb128 0x3
	.ascii "f\0"
	.byte	0x8
	.word	0x22f
	.byte	0x1b
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "stat\0"
	.byte	0x8
	.word	0x22f
	.byte	0x2c
	.long	0x209dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x35
	.ascii "GifWriteBit\0"
	.byte	0x8
	.word	0x21d
	.byte	0x6
	.ascii "_Z11GifWriteBitP12GifBitStatusj\0"
	.long	LFB2133
	.long	LFE2133-LFB2133
	.uleb128 0x1
	.byte	0x9c
	.long	0x20aae
	.uleb128 0x3
	.ascii "stat\0"
	.byte	0x8
	.word	0x21d
	.byte	0x21
	.long	0x209dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "bit\0"
	.byte	0x8
	.word	0x21d
	.byte	0x30
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x3e
	.ascii "GifThresholdImage\0"
	.byte	0x8
	.word	0x1ec
	.byte	0x6
	.ascii "_Z17GifThresholdImagePKhS0_PhjjP10GifPalette\0"
	.long	LFB2132
	.long	LFE2132-LFB2132
	.uleb128 0x1
	.byte	0x9c
	.long	0x20bb4
	.uleb128 0x4
	.secrel32	LASF296
	.byte	0x8
	.word	0x1ec
	.byte	0x28
	.long	0x205fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF297
	.byte	0x8
	.word	0x1ec
	.byte	0x42
	.long	0x205fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF298
	.byte	0x8
	.word	0x1ec
	.byte	0x56
	.long	0x1a00e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x8
	.word	0x1ec
	.byte	0x69
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x8
	.word	0x1ec
	.byte	0x79
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF295
	.byte	0x8
	.word	0x1ec
	.byte	0x8d
	.long	0x2086f
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x7
	.secrel32	LASF299
	.byte	0x8
	.word	0x1ee
	.byte	0xe
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB784
	.long	LBE784-LBB784
	.uleb128 0x1
	.ascii "ii\0"
	.byte	0x8
	.word	0x1ef
	.byte	0x13
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB787
	.long	LBE787-LBB787
	.uleb128 0x7
	.secrel32	LASF300
	.byte	0x8
	.word	0x200
	.byte	0x15
	.long	0x165d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF301
	.byte	0x8
	.word	0x201
	.byte	0x15
	.long	0x165d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x3e
	.ascii "GifDitherImage\0"
	.byte	0x8
	.word	0x17f
	.byte	0x6
	.ascii "_Z14GifDitherImagePKhS0_PhjjP10GifPalette\0"
	.long	LFB2131
	.long	LFE2131-LFB2131
	.uleb128 0x1
	.byte	0x9c
	.long	0x20eb8
	.uleb128 0x4
	.secrel32	LASF296
	.byte	0x8
	.word	0x17f
	.byte	0x25
	.long	0x205fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF297
	.byte	0x8
	.word	0x17f
	.byte	0x3f
	.long	0x205fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF298
	.byte	0x8
	.word	0x17f
	.byte	0x53
	.long	0x1a00e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x8
	.word	0x17f
	.byte	0x66
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x8
	.word	0x17f
	.byte	0x76
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF295
	.byte	0x8
	.word	0x17f
	.byte	0x8a
	.long	0x2086f
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x7
	.secrel32	LASF299
	.byte	0x8
	.word	0x181
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "quantPixels\0"
	.byte	0x8
	.word	0x186
	.byte	0xe
	.long	0x20eb8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0xf
	.long	LBB769
	.long	LBE769-LBB769
	.long	0x20cd2
	.uleb128 0x1
	.ascii "ii\0"
	.byte	0x8
	.word	0x188
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB770
	.long	LBE770-LBB770
	.uleb128 0x1
	.ascii "pix\0"
	.byte	0x8
	.word	0x18a
	.byte	0x11
	.long	0x165a2
	.uleb128 0x3
	.byte	0x91
	.sleb128 -109
	.uleb128 0x1
	.ascii "pix16\0"
	.byte	0x8
	.word	0x18b
	.byte	0x11
	.long	0x165d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.uleb128 0xf
	.long	LBB771
	.long	LBE771-LBB771
	.long	0x20e9e
	.uleb128 0x1
	.ascii "yy\0"
	.byte	0x8
	.word	0x18f
	.byte	0x13
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB773
	.long	LBE773-LBB773
	.uleb128 0x1
	.ascii "xx\0"
	.byte	0x8
	.word	0x191
	.byte	0x17
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x9
	.long	LBB774
	.long	LBE774-LBB774
	.uleb128 0x1
	.ascii "nextPix\0"
	.byte	0x8
	.word	0x193
	.byte	0x16
	.long	0x20eb8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "lastPix\0"
	.byte	0x8
	.word	0x194
	.byte	0x1c
	.long	0x205fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "rr\0"
	.byte	0x8
	.word	0x197
	.byte	0x15
	.long	0x165d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "gg\0"
	.byte	0x8
	.word	0x198
	.byte	0x15
	.long	0x165d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "bb\0"
	.byte	0x8
	.word	0x199
	.byte	0x15
	.long	0x165d8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x7
	.secrel32	LASF300
	.byte	0x8
	.word	0x1a9
	.byte	0x15
	.long	0x165d8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x7
	.secrel32	LASF301
	.byte	0x8
	.word	0x1aa
	.byte	0x15
	.long	0x165d8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x1
	.ascii "r_err\0"
	.byte	0x8
	.word	0x1b0
	.byte	0x15
	.long	0x165d8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "g_err\0"
	.byte	0x8
	.word	0x1b1
	.byte	0x15
	.long	0x165d8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "b_err\0"
	.byte	0x8
	.word	0x1b2
	.byte	0x15
	.long	0x165d8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "quantloc_7\0"
	.byte	0x8
	.word	0x1bb
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "quantloc_3\0"
	.byte	0x8
	.word	0x1bc
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "quantloc_5\0"
	.byte	0x8
	.word	0x1bd
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "quantloc_1\0"
	.byte	0x8
	.word	0x1be
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0xf
	.long	LBB776
	.long	LBE776-LBB776
	.long	0x20e3f
	.uleb128 0x1
	.ascii "pix7\0"
	.byte	0x8
	.word	0x1c2
	.byte	0x1a
	.long	0x20eb8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.byte	0
	.uleb128 0xf
	.long	LBB778
	.long	LBE778-LBB778
	.long	0x20e5f
	.uleb128 0x1
	.ascii "pix3\0"
	.byte	0x8
	.word	0x1ca
	.byte	0x1a
	.long	0x20eb8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.byte	0
	.uleb128 0xf
	.long	LBB780
	.long	LBE780-LBB780
	.long	0x20e7f
	.uleb128 0x1
	.ascii "pix5\0"
	.byte	0x8
	.word	0x1d2
	.byte	0x1a
	.long	0x20eb8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.byte	0
	.uleb128 0x9
	.long	LBB782
	.long	LBE782-LBB782
	.uleb128 0x1
	.ascii "pix1\0"
	.byte	0x8
	.word	0x1da
	.byte	0x1a
	.long	0x20eb8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB783
	.long	LBE783-LBB783
	.uleb128 0x1
	.ascii "ii\0"
	.byte	0x8
	.word	0x1e3
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x165d8
	.uleb128 0x3e
	.ascii "GifMakePalette\0"
	.byte	0x8
	.word	0x161
	.byte	0x6
	.ascii "_Z14GifMakePalettePKhS0_jjibP10GifPalette\0"
	.long	LFB2130
	.long	LFE2130-LFB2130
	.uleb128 0x1
	.byte	0x9c
	.long	0x20ff2
	.uleb128 0x4
	.secrel32	LASF296
	.byte	0x8
	.word	0x161
	.byte	0x25
	.long	0x205fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF297
	.byte	0x8
	.word	0x161
	.byte	0x3f
	.long	0x205fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x8
	.word	0x161
	.byte	0x53
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x8
	.word	0x161
	.byte	0x63
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF212
	.byte	0x8
	.word	0x161
	.byte	0x6f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF302
	.byte	0x8
	.word	0x161
	.byte	0x7e
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x4
	.secrel32	LASF295
	.byte	0x8
	.word	0x161
	.byte	0x9a
	.long	0x2086f
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1
	.ascii "imageSize\0"
	.byte	0x8
	.word	0x167
	.byte	0xc
	.long	0xd5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "destroyableImage\0"
	.byte	0x8
	.word	0x168
	.byte	0xe
	.long	0x1a00e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF299
	.byte	0x8
	.word	0x16b
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "lastElt\0"
	.byte	0x8
	.word	0x16f
	.byte	0xf
	.long	0xfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x7
	.secrel32	LASF303
	.byte	0x8
	.word	0x170
	.byte	0xf
	.long	0xfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF304
	.byte	0x8
	.word	0x171
	.byte	0xf
	.long	0xfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x49
	.ascii "GifPickChangedPixels\0"
	.byte	0x8
	.word	0x147
	.byte	0x5
	.ascii "_Z20GifPickChangedPixelsPKhPhi\0"
	.long	0xf4
	.long	LFB2129
	.long	LFE2129-LFB2129
	.uleb128 0x1
	.byte	0x9c
	.long	0x210b6
	.uleb128 0x4
	.secrel32	LASF296
	.byte	0x8
	.word	0x147
	.byte	0x2a
	.long	0x205fe
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "frame\0"
	.byte	0x8
	.word	0x147
	.byte	0x3e
	.long	0x1a00e
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF299
	.byte	0x8
	.word	0x147
	.byte	0x49
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "numChanged\0"
	.byte	0x8
	.word	0x149
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1
	.ascii "writeIter\0"
	.byte	0x8
	.word	0x14a
	.byte	0xe
	.long	0x1a00e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x9
	.long	LBB768
	.long	LBE768-LBB768
	.uleb128 0x1
	.ascii "ii\0"
	.byte	0x8
	.word	0x14c
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x76
	.ascii "GifSplitPalette\0"
	.byte	0x8
	.byte	0xd0
	.byte	0x6
	.ascii "_Z15GifSplitPalettePhiiiiiibP10GifPalette\0"
	.long	LFB2128
	.long	LFE2128-LFB2128
	.uleb128 0x1
	.byte	0x9c
	.long	0x213c7
	.uleb128 0x2c
	.secrel32	LASF254
	.byte	0x8
	.byte	0xd0
	.byte	0x1f
	.long	0x1a00e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.secrel32	LASF299
	.byte	0x8
	.byte	0xd0
	.byte	0x2a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x21
	.ascii "firstElt\0"
	.byte	0x8
	.byte	0xd0
	.byte	0x39
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.ascii "lastElt\0"
	.byte	0x8
	.byte	0xd0
	.byte	0x47
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2c
	.secrel32	LASF303
	.byte	0x8
	.byte	0xd0
	.byte	0x54
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x2c
	.secrel32	LASF304
	.byte	0x8
	.byte	0xd0
	.byte	0x62
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x21
	.ascii "treeNode\0"
	.byte	0x8
	.byte	0xd0
	.byte	0x71
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x2c
	.secrel32	LASF302
	.byte	0x8
	.byte	0xd0
	.byte	0x80
	.long	0x15b97
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x21
	.ascii "pal\0"
	.byte	0x8
	.byte	0xd0
	.byte	0x9c
	.long	0x2086f
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x1
	.ascii "minR\0"
	.byte	0x8
	.word	0x11b
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "maxR\0"
	.byte	0x8
	.word	0x11b
	.byte	0x15
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "minG\0"
	.byte	0x8
	.word	0x11c
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1
	.ascii "maxG\0"
	.byte	0x8
	.word	0x11c
	.byte	0x15
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "minB\0"
	.byte	0x8
	.word	0x11d
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1
	.ascii "maxB\0"
	.byte	0x8
	.word	0x11d
	.byte	0x15
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "rRange\0"
	.byte	0x8
	.word	0x12e
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x1
	.ascii "gRange\0"
	.byte	0x8
	.word	0x12f
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x1
	.ascii "bRange\0"
	.byte	0x8
	.word	0x130
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x1
	.ascii "splitCom\0"
	.byte	0x8
	.word	0x133
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x1
	.ascii "subPixelsA\0"
	.byte	0x8
	.word	0x137
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x1
	.ascii "subPixelsB\0"
	.byte	0x8
	.word	0x138
	.byte	0x9
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0xf
	.long	LBB756
	.long	LBE756-LBB756
	.long	0x21375
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x8
	.word	0x103
	.byte	0x12
	.long	0x1660e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x8
	.word	0x103
	.byte	0x17
	.long	0x1660e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x8
	.word	0x103
	.byte	0x1c
	.long	0x1660e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0xf
	.long	LBB760
	.long	LBE760-LBB760
	.long	0x2130d
	.uleb128 0x1b
	.ascii "r\0"
	.byte	0x8
	.byte	0xe0
	.byte	0x1a
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1b
	.ascii "g\0"
	.byte	0x8
	.byte	0xe0
	.byte	0x21
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1b
	.ascii "b\0"
	.byte	0x8
	.byte	0xe0
	.byte	0x28
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x9
	.long	LBB761
	.long	LBE761-LBB761
	.uleb128 0x1b
	.ascii "ii\0"
	.byte	0x8
	.byte	0xe1
	.byte	0x19
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.uleb128 0xf
	.long	LBB763
	.long	LBE763-LBB763
	.long	0x2135a
	.uleb128 0x1b
	.ascii "r\0"
	.byte	0x8
	.byte	0xf2
	.byte	0x1a
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1b
	.ascii "g\0"
	.byte	0x8
	.byte	0xf2
	.byte	0x1f
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1b
	.ascii "b\0"
	.byte	0x8
	.byte	0xf2
	.byte	0x24
	.long	0x165e8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x9
	.long	LBB764
	.long	LBE764-LBB764
	.uleb128 0x1b
	.ascii "ii\0"
	.byte	0x8
	.byte	0xf3
	.byte	0x19
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB765
	.long	LBE765-LBB765
	.uleb128 0x1
	.ascii "ii\0"
	.byte	0x8
	.word	0x104
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB766
	.long	LBE766-LBB766
	.uleb128 0x1
	.ascii "ii\0"
	.byte	0x8
	.word	0x11e
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x9
	.long	LBB767
	.long	LBE767-LBB767
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x8
	.word	0x120
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x8
	.word	0x121
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x8
	.word	0x122
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x76
	.ascii "GifPartitionByMedian\0"
	.byte	0x8
	.byte	0xbe
	.byte	0x6
	.ascii "_Z20GifPartitionByMedianPhiiii\0"
	.long	LFB2127
	.long	LFE2127-LFB2127
	.uleb128 0x1
	.byte	0x9c
	.long	0x2147b
	.uleb128 0x2c
	.secrel32	LASF254
	.byte	0x8
	.byte	0xbe
	.byte	0x24
	.long	0x1a00e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.secrel32	LASF3
	.byte	0x8
	.byte	0xbe
	.byte	0x2f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.secrel32	LASF4
	.byte	0x8
	.byte	0xbe
	.byte	0x39
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.ascii "com\0"
	.byte	0x8
	.byte	0xbe
	.byte	0x44
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x21
	.ascii "neededCenter\0"
	.byte	0x8
	.byte	0xbe
	.byte	0x4d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x9
	.long	LBB754
	.long	LBE754-LBB754
	.uleb128 0x4e
	.secrel32	LASF305
	.byte	0x8
	.byte	0xc2
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x77
	.ascii "GifPartition\0"
	.byte	0x8
	.byte	0xa1
	.byte	0x5
	.ascii "_Z12GifPartitionPhiiii\0"
	.long	0xf4
	.long	LFB2126
	.long	LFE2126-LFB2126
	.uleb128 0x1
	.byte	0x9c
	.long	0x21574
	.uleb128 0x2c
	.secrel32	LASF254
	.byte	0x8
	.byte	0xa1
	.byte	0x1b
	.long	0x1a00e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.secrel32	LASF3
	.byte	0x8
	.byte	0xa1
	.byte	0x2c
	.long	0xfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.secrel32	LASF4
	.byte	0x8
	.byte	0xa1
	.byte	0x3c
	.long	0xfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.ascii "elt\0"
	.byte	0x8
	.byte	0xa1
	.byte	0x4d
	.long	0xfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2c
	.secrel32	LASF305
	.byte	0x8
	.byte	0xa1
	.byte	0x56
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1b
	.ascii "pivotValue\0"
	.byte	0x8
	.byte	0xa3
	.byte	0xf
	.long	0xfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1b
	.ascii "storeIndex\0"
	.byte	0x8
	.byte	0xa5
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1b
	.ascii "split\0"
	.byte	0x8
	.byte	0xa6
	.byte	0xa
	.long	0x15b97
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x9
	.long	LBB751
	.long	LBE751-LBB751
	.uleb128 0x1b
	.ascii "ii\0"
	.byte	0x8
	.byte	0xa7
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB752
	.long	LBE752-LBB752
	.uleb128 0x1b
	.ascii "arrayVal\0"
	.byte	0x8
	.byte	0xa9
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xca
	.ascii "GifSwapPixels\0"
	.byte	0x8
	.byte	0x89
	.byte	0x6
	.ascii "_Z13GifSwapPixelsPhii\0"
	.long	LFB2125
	.long	LFE2125-LFB2125
	.uleb128 0x1
	.byte	0x9c
	.long	0x2164b
	.uleb128 0x2c
	.secrel32	LASF254
	.byte	0x8
	.byte	0x89
	.byte	0x1d
	.long	0x1a00e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x21
	.ascii "pixA\0"
	.byte	0x8
	.byte	0x89
	.byte	0x28
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x21
	.ascii "pixB\0"
	.byte	0x8
	.byte	0x89
	.byte	0x32
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1b
	.ascii "rA\0"
	.byte	0x8
	.byte	0x8b
	.byte	0xd
	.long	0x165a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x1b
	.ascii "gA\0"
	.byte	0x8
	.byte	0x8c
	.byte	0xd
	.long	0x165a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x1b
	.ascii "bA\0"
	.byte	0x8
	.byte	0x8d
	.byte	0xd
	.long	0x165a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -11
	.uleb128 0x1b
	.ascii "aA\0"
	.byte	0x8
	.byte	0x8e
	.byte	0xd
	.long	0x165a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1b
	.ascii "rB\0"
	.byte	0x8
	.byte	0x90
	.byte	0xd
	.long	0x165a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x1b
	.ascii "gB\0"
	.byte	0x8
	.byte	0x91
	.byte	0xd
	.long	0x165a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x1b
	.ascii "bB\0"
	.byte	0x8
	.byte	0x92
	.byte	0xd
	.long	0x165a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -15
	.uleb128 0x1b
	.ascii "aB\0"
	.byte	0x8
	.byte	0x93
	.byte	0xd
	.long	0x165a2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x76
	.ascii "GifGetClosestPaletteColor\0"
	.byte	0x8
	.byte	0x59
	.byte	0x6
	.ascii "_Z25GifGetClosestPaletteColorP10GifPaletteiiiPiS1_i\0"
	.long	LFB2124
	.long	LFE2124-LFB2124
	.uleb128 0x1
	.byte	0x9c
	.long	0x217a5
	.uleb128 0x2c
	.secrel32	LASF295
	.byte	0x8
	.byte	0x59
	.byte	0x2d
	.long	0x2086f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x21
	.ascii "r\0"
	.byte	0x8
	.byte	0x59
	.byte	0x37
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x21
	.ascii "g\0"
	.byte	0x8
	.byte	0x59
	.byte	0x3e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x21
	.ascii "b\0"
	.byte	0x8
	.byte	0x59
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2c
	.secrel32	LASF301
	.byte	0x8
	.byte	0x59
	.byte	0x4d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x2c
	.secrel32	LASF300
	.byte	0x8
	.byte	0x59
	.byte	0x5b
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x21
	.ascii "treeRoot\0"
	.byte	0x8
	.byte	0x59
	.byte	0x69
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1b
	.ascii "comps\0"
	.byte	0x8
	.byte	0x71
	.byte	0x9
	.long	0x1d1bb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1b
	.ascii "splitComp\0"
	.byte	0x8
	.byte	0x72
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1b
	.ascii "splitPos\0"
	.byte	0x8
	.byte	0x74
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x4b
	.secrel32	Ldebug_ranges0+0x108
	.uleb128 0x1b
	.ascii "ind\0"
	.byte	0x8
	.byte	0x5e
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1b
	.ascii "r_err\0"
	.byte	0x8
	.byte	0x62
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1b
	.ascii "g_err\0"
	.byte	0x8
	.byte	0x63
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1b
	.ascii "b_err\0"
	.byte	0x8
	.byte	0x64
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x4e
	.secrel32	LASF293
	.byte	0x8
	.byte	0x65
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x5f
	.ascii "GifIAbs\0"
	.byte	0x8
	.byte	0x53
	.byte	0x5
	.ascii "_Z7GifIAbsi\0"
	.long	0xf4
	.long	LFB2123
	.long	LFE2123-LFB2123
	.uleb128 0x1
	.byte	0x9c
	.long	0x217dd
	.uleb128 0x21
	.ascii "i\0"
	.byte	0x8
	.byte	0x53
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x5f
	.ascii "GifIMin\0"
	.byte	0x8
	.byte	0x52
	.byte	0x5
	.ascii "_Z7GifIMinii\0"
	.long	0xf4
	.long	LFB2122
	.long	LFE2122-LFB2122
	.uleb128 0x1
	.byte	0x9c
	.long	0x21823
	.uleb128 0x21
	.ascii "l\0"
	.byte	0x8
	.byte	0x52
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x21
	.ascii "r\0"
	.byte	0x8
	.byte	0x52
	.byte	0x18
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x5f
	.ascii "GifIMax\0"
	.byte	0x8
	.byte	0x51
	.byte	0x5
	.ascii "_Z7GifIMaxii\0"
	.long	0xf4
	.long	LFB2121
	.long	LFE2121-LFB2121
	.uleb128 0x1
	.byte	0x9c
	.long	0x21869
	.uleb128 0x21
	.ascii "l\0"
	.byte	0x8
	.byte	0x51
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x21
	.ascii "r\0"
	.byte	0x8
	.byte	0x51
	.byte	0x18
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_CompareUTF8toUTF16_bigendian\0"
	.byte	0x7
	.word	0x1327
	.byte	0xf
	.long	0xf4
	.long	LFB2120
	.long	LFE2120-LFB2120
	.uleb128 0x1
	.byte	0x9c
	.long	0x218e4
	.uleb128 0x3
	.ascii "s1\0"
	.byte	0x7
	.word	0x1327
	.byte	0x3e
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len1\0"
	.byte	0x7
	.word	0x1327
	.byte	0x46
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "s2\0"
	.byte	0x7
	.word	0x1327
	.byte	0x58
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "len2\0"
	.byte	0x7
	.word	0x1327
	.byte	0x60
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_FindMatchingFont\0"
	.byte	0x7
	.word	0x1322
	.byte	0xf
	.long	0xf4
	.long	LFB2119
	.long	LFE2119-LFB2119
	.uleb128 0x1
	.byte	0x9c
	.long	0x21943
	.uleb128 0x4
	.secrel32	LASF306
	.byte	0x7
	.word	0x1322
	.byte	0x3b
	.long	0x691
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF216
	.byte	0x7
	.word	0x1322
	.byte	0x51
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF175
	.byte	0x7
	.word	0x1322
	.byte	0x5b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_InitFont\0"
	.byte	0x7
	.word	0x131d
	.byte	0xf
	.long	0xf4
	.long	LFB2118
	.long	LFE2118-LFB2118
	.uleb128 0x1
	.byte	0x9c
	.long	0x2199a
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x131d
	.byte	0x2e
	.long	0x2199a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x7
	.word	0x131d
	.byte	0x49
	.long	0x691
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF172
	.byte	0x7
	.word	0x131d
	.byte	0x53
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x195d0
	.uleb128 0x18
	.ascii "stbtt_GetNumberOfFonts\0"
	.byte	0x7
	.word	0x1318
	.byte	0xf
	.long	0xf4
	.long	LFB2117
	.long	LFE2117-LFB2117
	.uleb128 0x1
	.byte	0x9c
	.long	0x219df
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x7
	.word	0x1318
	.byte	0x3b
	.long	0x691
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetFontOffsetForIndex\0"
	.byte	0x7
	.word	0x1313
	.byte	0xf
	.long	0xf4
	.long	LFB2116
	.long	LFE2116-LFB2116
	.uleb128 0x1
	.byte	0x9c
	.long	0x21a33
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x7
	.word	0x1313
	.byte	0x40
	.long	0x691
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF243
	.byte	0x7
	.word	0x1313
	.byte	0x4a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_BakeFontBitmap\0"
	.byte	0x7
	.word	0x130c
	.byte	0xf
	.long	0xf4
	.long	LFB2115
	.long	LFE2115-LFB2115
	.uleb128 0x1
	.byte	0x9c
	.long	0x21aee
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x7
	.word	0x130c
	.byte	0x39
	.long	0x691
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF172
	.byte	0x7
	.word	0x130c
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF307
	.byte	0x7
	.word	0x130d
	.byte	0x27
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF187
	.byte	0x7
	.word	0x130d
	.byte	0x44
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "pw\0"
	.byte	0x7
	.word	0x130d
	.byte	0x50
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ph\0"
	.byte	0x7
	.word	0x130d
	.byte	0x58
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF308
	.byte	0x7
	.word	0x130e
	.byte	0x25
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF197
	.byte	0x7
	.word	0x130e
	.byte	0x35
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x4
	.secrel32	LASF221
	.byte	0x7
	.word	0x130e
	.byte	0x51
	.long	0x21aee
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19379
	.uleb128 0xd
	.ascii "stbtt_FindMatchingFont_internal\0"
	.byte	0x7
	.word	0x12fc
	.byte	0xc
	.long	0xf4
	.long	LFB2114
	.long	LFE2114-LFB2114
	.uleb128 0x1
	.byte	0x9c
	.long	0x21b8a
	.uleb128 0x4
	.secrel32	LASF309
	.byte	0x7
	.word	0x12fc
	.byte	0x3b
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "name_utf8\0"
	.byte	0x7
	.word	0x12fc
	.byte	0x52
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF175
	.byte	0x7
	.word	0x12fc
	.byte	0x69
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x12fe
	.byte	0x10
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB746
	.long	LBE746-LBB746
	.uleb128 0x1
	.ascii "off\0"
	.byte	0x7
	.word	0x1300
	.byte	0x13
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__matches\0"
	.byte	0x7
	.word	0x12df
	.byte	0xc
	.long	0xf4
	.long	LFB2113
	.long	LFE2113-LFB2113
	.uleb128 0x1
	.byte	0x9c
	.long	0x21c1f
	.uleb128 0x3
	.ascii "fc\0"
	.byte	0x7
	.word	0x12df
	.byte	0x28
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF172
	.byte	0x7
	.word	0x12df
	.byte	0x39
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF216
	.byte	0x7
	.word	0x12df
	.byte	0x4e
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF175
	.byte	0x7
	.word	0x12df
	.byte	0x60
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "nlen\0"
	.byte	0x7
	.word	0x12e1
	.byte	0x10
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "nm\0"
	.byte	0x7
	.word	0x12e2
	.byte	0x11
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "hd\0"
	.byte	0x7
	.word	0x12e2
	.byte	0x14
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19221
	.uleb128 0xd
	.ascii "stbtt__matchpair\0"
	.byte	0x7
	.word	0x12b0
	.byte	0xc
	.long	0xf4
	.long	LFB2112
	.long	LFE2112-LFB2112
	.uleb128 0x1
	.byte	0x9c
	.long	0x21d97
	.uleb128 0x3
	.ascii "fc\0"
	.byte	0x7
	.word	0x12b0
	.byte	0x2a
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "nm\0"
	.byte	0x7
	.word	0x12b0
	.byte	0x3b
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF216
	.byte	0x7
	.word	0x12b0
	.byte	0x4c
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "nlen\0"
	.byte	0x7
	.word	0x12b0
	.byte	0x5e
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "target_id\0"
	.byte	0x7
	.word	0x12b0
	.byte	0x70
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "next_id\0"
	.byte	0x7
	.word	0x12b0
	.byte	0x87
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x12b2
	.byte	0x10
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF279
	.byte	0x7
	.word	0x12b3
	.byte	0x10
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF310
	.byte	0x7
	.word	0x12b4
	.byte	0x10
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x9
	.long	LBB740
	.long	LBE740-LBB740
	.uleb128 0x1
	.ascii "loc\0"
	.byte	0x7
	.word	0x12b7
	.byte	0x14
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "id\0"
	.byte	0x7
	.word	0x12b8
	.byte	0x13
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x9
	.long	LBB742
	.long	LBE742-LBB742
	.uleb128 0x1
	.ascii "platform\0"
	.byte	0x7
	.word	0x12bb
	.byte	0x16
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "encoding\0"
	.byte	0x7
	.word	0x12bb
	.byte	0x35
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "language\0"
	.byte	0x7
	.word	0x12bb
	.byte	0x54
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x9
	.long	LBB744
	.long	LBE744-LBB744
	.uleb128 0x1
	.ascii "slen\0"
	.byte	0x7
	.word	0x12bf
	.byte	0x19
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "off\0"
	.byte	0x7
	.word	0x12c0
	.byte	0x19
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "matchlen\0"
	.byte	0x7
	.word	0x12c3
	.byte	0x19
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetFontNameString\0"
	.byte	0x7
	.word	0x129b
	.byte	0x17
	.long	0x12a7d
	.long	LFB2111
	.long	LFE2111-LFB2111
	.uleb128 0x1
	.byte	0x9c
	.long	0x21eb5
	.uleb128 0x4
	.secrel32	LASF311
	.byte	0x7
	.word	0x129b
	.byte	0x45
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF48
	.byte	0x7
	.word	0x129b
	.byte	0x50
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "platformID\0"
	.byte	0x7
	.word	0x129b
	.byte	0x5c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "encodingID\0"
	.byte	0x7
	.word	0x129b
	.byte	0x6c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "languageID\0"
	.byte	0x7
	.word	0x129b
	.byte	0x7c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "nameID\0"
	.byte	0x7
	.word	0x129b
	.byte	0x8c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x129d
	.byte	0x10
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF279
	.byte	0x7
	.word	0x129d
	.byte	0x12
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF310
	.byte	0x7
	.word	0x129d
	.byte	0x18
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "fc\0"
	.byte	0x7
	.word	0x129e
	.byte	0x11
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF172
	.byte	0x7
	.word	0x129f
	.byte	0x11
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "nm\0"
	.byte	0x7
	.word	0x12a0
	.byte	0x11
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB738
	.long	LBE738-LBB738
	.uleb128 0x1
	.ascii "loc\0"
	.byte	0x7
	.word	0x12a6
	.byte	0x14
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x195dd
	.uleb128 0xd
	.ascii "stbtt_CompareUTF8toUTF16_bigendian_internal\0"
	.byte	0x7
	.word	0x1294
	.byte	0xc
	.long	0xf4
	.long	LFB2110
	.long	LFE2110-LFB2110
	.uleb128 0x1
	.byte	0x9c
	.long	0x21f3f
	.uleb128 0x3
	.ascii "s1\0"
	.byte	0x7
	.word	0x1294
	.byte	0x3e
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len1\0"
	.byte	0x7
	.word	0x1294
	.byte	0x46
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "s2\0"
	.byte	0x7
	.word	0x1294
	.byte	0x52
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "len2\0"
	.byte	0x7
	.word	0x1294
	.byte	0x5a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.byte	0
	.uleb128 0x27
	.ascii "stbtt__CompareUTF8toUTF16_bigendian_prefix\0"
	.byte	0x7
	.word	0x126d
	.byte	0x14
	.long	0x1928b
	.long	LFB2109
	.long	LFE2109-LFB2109
	.uleb128 0x1
	.byte	0x9c
	.long	0x22011
	.uleb128 0x3
	.ascii "s1\0"
	.byte	0x7
	.word	0x126d
	.byte	0x4c
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len1\0"
	.byte	0x7
	.word	0x126d
	.byte	0x5c
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "s2\0"
	.byte	0x7
	.word	0x126d
	.byte	0x6f
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "len2\0"
	.byte	0x7
	.word	0x126d
	.byte	0x7f
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x126f
	.byte	0x10
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x9
	.long	LBB725
	.long	LBE725-LBB725
	.uleb128 0x1
	.ascii "ch\0"
	.byte	0x7
	.word	0x1273
	.byte	0x14
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x9
	.long	LBB731
	.long	LBE731-LBB731
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x7
	.word	0x127c
	.byte	0x17
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "ch2\0"
	.byte	0x7
	.word	0x127d
	.byte	0x17
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_FreeSDF\0"
	.byte	0x7
	.word	0x1262
	.byte	0x10
	.long	LFB2108
	.long	LFE2108-LFB2108
	.uleb128 0x1
	.byte	0x9c
	.long	0x22053
	.uleb128 0x4
	.secrel32	LASF214
	.byte	0x7
	.word	0x1262
	.byte	0x2d
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF189
	.byte	0x7
	.word	0x1262
	.byte	0x3b
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetCodepointSDF\0"
	.byte	0x7
	.word	0x125d
	.byte	0x1b
	.long	0x954
	.long	LFB2107
	.long	LFE2107-LFB2107
	.uleb128 0x1
	.byte	0x9c
	.long	0x22121
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x125d
	.byte	0x47
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF217
	.byte	0x7
	.word	0x125d
	.byte	0x53
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF312
	.byte	0x7
	.word	0x125d
	.byte	0x5e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF184
	.byte	0x7
	.word	0x125d
	.byte	0x6d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF313
	.byte	0x7
	.word	0x125d
	.byte	0x84
	.long	0x697
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x4
	.secrel32	LASF314
	.byte	0x7
	.word	0x125d
	.byte	0x98
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x7
	.word	0x125d
	.byte	0xaf
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x7
	.word	0x125d
	.byte	0xbb
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x4
	.secrel32	LASF177
	.byte	0x7
	.word	0x125d
	.byte	0xc8
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x4
	.secrel32	LASF178
	.byte	0x7
	.word	0x125d
	.byte	0xd3
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetGlyphSDF\0"
	.byte	0x7
	.word	0x11a8
	.byte	0x1b
	.long	0x954
	.long	LFB2106
	.long	LFE2106-LFB2106
	.uleb128 0x1
	.byte	0x9c
	.long	0x22789
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x11a8
	.byte	0x43
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF217
	.byte	0x7
	.word	0x11a8
	.byte	0x4f
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF315
	.byte	0x7
	.word	0x11a8
	.byte	0x5a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF184
	.byte	0x7
	.word	0x11a8
	.byte	0x65
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF313
	.byte	0x7
	.word	0x11a8
	.byte	0x7c
	.long	0x697
	.uleb128 0x3
	.byte	0x91
	.sleb128 -340
	.uleb128 0x4
	.secrel32	LASF314
	.byte	0x7
	.word	0x11a8
	.byte	0x90
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x7
	.word	0x11a8
	.byte	0xa7
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x7
	.word	0x11a8
	.byte	0xb3
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x4
	.secrel32	LASF177
	.byte	0x7
	.word	0x11a8
	.byte	0xc0
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x4
	.secrel32	LASF178
	.byte	0x7
	.word	0x11a8
	.byte	0xcb
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x7
	.secrel32	LASF316
	.byte	0x7
	.word	0x11aa
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x7
	.secrel32	LASF317
	.byte	0x7
	.word	0x11aa
	.byte	0x1b
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "ix0\0"
	.byte	0x7
	.word	0x11ab
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -280
	.uleb128 0x1
	.ascii "iy0\0"
	.byte	0x7
	.word	0x11ab
	.byte	0xc
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -284
	.uleb128 0x1
	.ascii "ix1\0"
	.byte	0x7
	.word	0x11ab
	.byte	0x10
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -288
	.uleb128 0x1
	.ascii "iy1\0"
	.byte	0x7
	.word	0x11ab
	.byte	0x14
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -292
	.uleb128 0x1
	.ascii "w\0"
	.byte	0x7
	.word	0x11ac
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "h\0"
	.byte	0x7
	.word	0x11ac
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x7
	.word	0x11ad
	.byte	0x13
	.long	0x954
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x9
	.long	LBB695
	.long	LBE695-LBB695
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x7
	.word	0x11c8
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x7
	.word	0x11c8
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x11c8
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x7
	.word	0x11c8
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "precompute\0"
	.byte	0x7
	.word	0x11c9
	.byte	0xe
	.long	0x16fa3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "verts\0"
	.byte	0x7
	.word	0x11ca
	.byte	0x15
	.long	0x19ba8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -296
	.uleb128 0x7
	.secrel32	LASF318
	.byte	0x7
	.word	0x11cb
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0xf
	.long	LBB699
	.long	LBE699-LBB699
	.long	0x22358
	.uleb128 0x1
	.ascii "x0\0"
	.byte	0x7
	.word	0x11d1
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "y0\0"
	.byte	0x7
	.word	0x11d1
	.byte	0x2c
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x7
	.word	0x11d2
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "y1\0"
	.byte	0x7
	.word	0x11d2
	.byte	0x2c
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "dist\0"
	.byte	0x7
	.word	0x11d3
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.uleb128 0xf
	.long	LBB702
	.long	LBE702-LBB702
	.long	0x223f8
	.uleb128 0x1
	.ascii "x2\0"
	.byte	0x7
	.word	0x11d6
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "y2\0"
	.byte	0x7
	.word	0x11d6
	.byte	0x2d
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x7
	.word	0x11d7
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1
	.ascii "y1\0"
	.byte	0x7
	.word	0x11d7
	.byte	0x2d
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "x0\0"
	.byte	0x7
	.word	0x11d8
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1
	.ascii "y0\0"
	.byte	0x7
	.word	0x11d8
	.byte	0x2d
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "bx\0"
	.byte	0x7
	.word	0x11d9
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x1
	.ascii "by\0"
	.byte	0x7
	.word	0x11d9
	.byte	0x28
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x1
	.ascii "len2\0"
	.byte	0x7
	.word	0x11da
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.byte	0
	.uleb128 0x9
	.long	LBB706
	.long	LBE706-LBB706
	.uleb128 0x1
	.ascii "val\0"
	.byte	0x7
	.word	0x11e5
	.byte	0x13
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "min_dist\0"
	.byte	0x7
	.word	0x11e6
	.byte	0x13
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "sx\0"
	.byte	0x7
	.word	0x11e7
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x1
	.ascii "sy\0"
	.byte	0x7
	.word	0x11e8
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x1
	.ascii "x_gspace\0"
	.byte	0x7
	.word	0x11e9
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x1
	.ascii "y_gspace\0"
	.byte	0x7
	.word	0x11ea
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x1
	.ascii "winding\0"
	.byte	0x7
	.word	0x11ec
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x9
	.long	LBB708
	.long	LBE708-LBB708
	.uleb128 0x1
	.ascii "x0\0"
	.byte	0x7
	.word	0x11ef
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -300
	.uleb128 0x1
	.ascii "y0\0"
	.byte	0x7
	.word	0x11ef
	.byte	0x2f
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -304
	.uleb128 0x1
	.ascii "dist2\0"
	.byte	0x7
	.word	0x11f2
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0xf
	.long	LBB710
	.long	LBE710-LBB710
	.long	0x2255c
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x7
	.word	0x11f7
	.byte	0x19
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x1
	.ascii "y1\0"
	.byte	0x7
	.word	0x11f7
	.byte	0x34
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x1
	.ascii "dist\0"
	.byte	0x7
	.word	0x11fc
	.byte	0x19
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x9
	.long	LBB712
	.long	LBE712-LBB712
	.uleb128 0x1
	.ascii "dx\0"
	.byte	0x7
	.word	0x1202
	.byte	0x1c
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x1
	.ascii "dy\0"
	.byte	0x7
	.word	0x1202
	.byte	0x28
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x1
	.ascii "px\0"
	.byte	0x7
	.word	0x1203
	.byte	0x1c
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x1
	.ascii "py\0"
	.byte	0x7
	.word	0x1203
	.byte	0x28
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x7
	.word	0x1206
	.byte	0x1c
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB715
	.long	LBE715-LBB715
	.uleb128 0x1
	.ascii "x2\0"
	.byte	0x7
	.word	0x120b
	.byte	0x19
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -308
	.uleb128 0x1
	.ascii "y2\0"
	.byte	0x7
	.word	0x120b
	.byte	0x35
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -312
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x7
	.word	0x120c
	.byte	0x19
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -316
	.uleb128 0x1
	.ascii "y1\0"
	.byte	0x7
	.word	0x120c
	.byte	0x35
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -320
	.uleb128 0x1
	.ascii "box_x0\0"
	.byte	0x7
	.word	0x120d
	.byte	0x19
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x1
	.ascii "box_y0\0"
	.byte	0x7
	.word	0x120e
	.byte	0x19
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x1
	.ascii "box_x1\0"
	.byte	0x7
	.word	0x120f
	.byte	0x19
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.uleb128 0x1
	.ascii "box_y1\0"
	.byte	0x7
	.word	0x1210
	.byte	0x19
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x9
	.long	LBB717
	.long	LBE717-LBB717
	.uleb128 0x1
	.ascii "num\0"
	.byte	0x7
	.word	0x1213
	.byte	0x1a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "ax\0"
	.byte	0x7
	.word	0x1214
	.byte	0x1c
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.uleb128 0x1
	.ascii "ay\0"
	.byte	0x7
	.word	0x1214
	.byte	0x28
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x1
	.ascii "bx\0"
	.byte	0x7
	.word	0x1215
	.byte	0x1c
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x1
	.ascii "by\0"
	.byte	0x7
	.word	0x1215
	.byte	0x31
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x1
	.ascii "mx\0"
	.byte	0x7
	.word	0x1216
	.byte	0x1c
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -220
	.uleb128 0x1
	.ascii "my\0"
	.byte	0x7
	.word	0x1216
	.byte	0x2a
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x1
	.ascii "res\0"
	.byte	0x7
	.word	0x1217
	.byte	0x1c
	.long	0x1a3bb
	.uleb128 0x3
	.byte	0x91
	.sleb128 -332
	.uleb128 0x1
	.ascii "px\0"
	.byte	0x7
	.word	0x1217
	.byte	0x23
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -272
	.uleb128 0x1
	.ascii "py\0"
	.byte	0x7
	.word	0x1217
	.byte	0x26
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -276
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x7
	.word	0x1217
	.byte	0x29
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -264
	.uleb128 0x1
	.ascii "it\0"
	.byte	0x7
	.word	0x1217
	.byte	0x2b
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -268
	.uleb128 0x1
	.ascii "a_inv\0"
	.byte	0x7
	.word	0x1218
	.byte	0x1c
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -228
	.uleb128 0xf
	.long	LBB719
	.long	LBE719-LBB719
	.long	0x2274c
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x7
	.word	0x121a
	.byte	0x1f
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x7
	.word	0x121b
	.byte	0x1f
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -236
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x7
	.word	0x121c
	.byte	0x1f
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x9
	.long	LBB721
	.long	LBE721-LBB721
	.uleb128 0x1
	.ascii "discriminant\0"
	.byte	0x7
	.word	0x1222
	.byte	0x22
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -244
	.uleb128 0x9
	.long	LBB723
	.long	LBE723-LBB723
	.uleb128 0x1
	.ascii "root\0"
	.byte	0x7
	.word	0x1226
	.byte	0x25
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -248
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB724
	.long	LBE724-LBB724
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x7
	.word	0x122d
	.byte	0x1f
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -252
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x7
	.word	0x122e
	.byte	0x1f
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x1
	.ascii "d\0"
	.byte	0x7
	.word	0x122f
	.byte	0x1f
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -260
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__solve_cubic\0"
	.byte	0x7
	.word	0x1189
	.byte	0xc
	.long	0xf4
	.long	LFB2105
	.long	LFE2105-LFB2105
	.uleb128 0x1
	.byte	0x9c
	.long	0x228ad
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x7
	.word	0x1189
	.byte	0x25
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x1189
	.byte	0x2e
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x7
	.word	0x1189
	.byte	0x37
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "r\0"
	.byte	0x7
	.word	0x1189
	.byte	0x41
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x7
	.word	0x118b
	.byte	0x8
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x7
	.word	0x118c
	.byte	0x8
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "q\0"
	.byte	0x7
	.word	0x118d
	.byte	0x8
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "p3\0"
	.byte	0x7
	.word	0x118e
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "d\0"
	.byte	0x7
	.word	0x118f
	.byte	0x8
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0xf
	.long	LBB693
	.long	LBE693-LBB693
	.long	0x2286a
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x7
	.word	0x1191
	.byte	0x9
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "u\0"
	.byte	0x7
	.word	0x1192
	.byte	0x9
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x7
	.word	0x1193
	.byte	0x9
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x9
	.long	LBB694
	.long	LBE694-LBB694
	.uleb128 0x1
	.ascii "u\0"
	.byte	0x7
	.word	0x1199
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x7
	.word	0x119a
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x7
	.word	0x119b
	.byte	0xb
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x7
	.word	0x119c
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__cuberoot\0"
	.byte	0x7
	.word	0x1180
	.byte	0xe
	.long	0x7d5
	.long	LFB2104
	.long	LFE2104-LFB2104
	.uleb128 0x1
	.byte	0x9c
	.long	0x228e3
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x7
	.word	0x1180
	.byte	0x25
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__compute_crossings_x\0"
	.byte	0x7
	.word	0x113b
	.byte	0xc
	.long	0xf4
	.long	LFB2103
	.long	LFE2103-LFB2103
	.uleb128 0x1
	.byte	0x9c
	.long	0x22b3e
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x7
	.word	0x113b
	.byte	0x2d
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x7
	.word	0x113b
	.byte	0x36
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "nverts\0"
	.byte	0x7
	.word	0x113b
	.byte	0x3d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "verts\0"
	.byte	0x7
	.word	0x113b
	.byte	0x53
	.long	0x19ba8
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x113d
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "orig\0"
	.byte	0x7
	.word	0x113e
	.byte	0xa
	.long	0x22b3e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "ray\0"
	.byte	0x7
	.word	0x113e
	.byte	0x13
	.long	0x22b3e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "y_frac\0"
	.byte	0x7
	.word	0x113f
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "winding\0"
	.byte	0x7
	.word	0x1140
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0xf
	.long	LBB680
	.long	LBE680-LBB680
	.long	0x22a19
	.uleb128 0x1
	.ascii "x0\0"
	.byte	0x7
	.word	0x1150
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "y0\0"
	.byte	0x7
	.word	0x1150
	.byte	0x27
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x7
	.word	0x1151
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "y1\0"
	.byte	0x7
	.word	0x1151
	.byte	0x27
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x9
	.long	LBB682
	.long	LBE682-LBB682
	.uleb128 0x1
	.ascii "x_inter\0"
	.byte	0x7
	.word	0x1153
	.byte	0x13
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB684
	.long	LBE684-LBB684
	.uleb128 0x1
	.ascii "x0\0"
	.byte	0x7
	.word	0x1159
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "y0\0"
	.byte	0x7
	.word	0x1159
	.byte	0x28
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x7
	.word	0x115a
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "y1\0"
	.byte	0x7
	.word	0x115a
	.byte	0x28
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "x2\0"
	.byte	0x7
	.word	0x115b
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1
	.ascii "y2\0"
	.byte	0x7
	.word	0x115b
	.byte	0x28
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "ax\0"
	.byte	0x7
	.word	0x115c
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "ay\0"
	.byte	0x7
	.word	0x115c
	.byte	0x33
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "by\0"
	.byte	0x7
	.word	0x115d
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x9
	.long	LBB686
	.long	LBE686-LBB686
	.uleb128 0x1
	.ascii "q0\0"
	.byte	0x7
	.word	0x115f
	.byte	0x13
	.long	0x22b3e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "q1\0"
	.byte	0x7
	.word	0x115f
	.byte	0x19
	.long	0x22b3e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x1
	.ascii "q2\0"
	.byte	0x7
	.word	0x115f
	.byte	0x1f
	.long	0x22b3e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x1
	.ascii "hits\0"
	.byte	0x7
	.word	0x1160
	.byte	0x13
	.long	0x22b4e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0xf
	.long	LBB690
	.long	LBE690-LBB690
	.long	0x22b1c
	.uleb128 0x1
	.ascii "x_inter\0"
	.byte	0x7
	.word	0x116d
	.byte	0x19
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x9
	.long	LBB691
	.long	LBE691-LBB691
	.uleb128 0x1
	.ascii "num_hits\0"
	.byte	0x7
	.word	0x1172
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x7d5
	.long	0x22b4e
	.uleb128 0x12
	.long	0xe4
	.byte	0x1
	.byte	0
	.uleb128 0x10
	.long	0x7d5
	.long	0x22b64
	.uleb128 0x12
	.long	0xe4
	.byte	0x1
	.uleb128 0x12
	.long	0xe4
	.byte	0x1
	.byte	0
	.uleb128 0x27
	.ascii "equal\0"
	.byte	0x7
	.word	0x1136
	.byte	0xc
	.long	0xf4
	.long	LFB2102
	.long	LFE2102-LFB2102
	.uleb128 0x1
	.byte	0x9c
	.long	0x22b9e
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x7
	.word	0x1136
	.byte	0x19
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x1136
	.byte	0x23
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__ray_intersect_bezier\0"
	.byte	0x7
	.word	0x10f6
	.byte	0xc
	.long	0xf4
	.long	LFB2101
	.long	LFE2101-LFB2101
	.uleb128 0x1
	.byte	0x9c
	.long	0x22de4
	.uleb128 0x3
	.ascii "orig\0"
	.byte	0x7
	.word	0x10f6
	.byte	0x2e
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "ray\0"
	.byte	0x7
	.word	0x10f6
	.byte	0x3d
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "q0\0"
	.byte	0x7
	.word	0x10f6
	.byte	0x4b
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "q1\0"
	.byte	0x7
	.word	0x10f6
	.byte	0x58
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "q2\0"
	.byte	0x7
	.word	0x10f6
	.byte	0x65
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "hits\0"
	.byte	0x7
	.word	0x10f6
	.byte	0x72
	.long	0x22de4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "q0perp\0"
	.byte	0x7
	.word	0x10f8
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "q1perp\0"
	.byte	0x7
	.word	0x10f9
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "q2perp\0"
	.byte	0x7
	.word	0x10fa
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "roperp\0"
	.byte	0x7
	.word	0x10fb
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x7
	.word	0x10fd
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x7
	.word	0x10fe
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x7
	.word	0x10ff
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "s0\0"
	.byte	0x7
	.word	0x1101
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "s1\0"
	.byte	0x7
	.word	0x1101
	.byte	0x13
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "num_s\0"
	.byte	0x7
	.word	0x1102
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0xf
	.long	LBB672
	.long	LBE672-LBB672
	.long	0x22d21
	.uleb128 0x1
	.ascii "discr\0"
	.byte	0x7
	.word	0x1105
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x9
	.long	LBB674
	.long	LBE674-LBB674
	.uleb128 0x1
	.ascii "rcpna\0"
	.byte	0x7
	.word	0x1107
	.byte	0x10
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "d\0"
	.byte	0x7
	.word	0x1108
	.byte	0x10
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB676
	.long	LBE676-LBB676
	.uleb128 0x1
	.ascii "rcp_len2\0"
	.byte	0x7
	.word	0x111d
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "rayn_x\0"
	.byte	0x7
	.word	0x111e
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "rayn_y\0"
	.byte	0x7
	.word	0x111e
	.byte	0x29
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "q0d\0"
	.byte	0x7
	.word	0x1120
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "q1d\0"
	.byte	0x7
	.word	0x1121
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "q2d\0"
	.byte	0x7
	.word	0x1122
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "rod\0"
	.byte	0x7
	.word	0x1123
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "q10d\0"
	.byte	0x7
	.word	0x1125
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "q20d\0"
	.byte	0x7
	.word	0x1126
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1
	.ascii "q0rd\0"
	.byte	0x7
	.word	0x1127
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x22b3e
	.uleb128 0x2e
	.ascii "stbtt_GetPackedQuad\0"
	.byte	0x7
	.word	0x10d3
	.byte	0x10
	.long	LFB2100
	.long	LFE2100-LFB2100
	.uleb128 0x1
	.byte	0x9c
	.long	0x22ef1
	.uleb128 0x4
	.secrel32	LASF221
	.byte	0x7
	.word	0x10d3
	.byte	0x3c
	.long	0x22ef1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "pw\0"
	.byte	0x7
	.word	0x10d3
	.byte	0x4a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "ph\0"
	.byte	0x7
	.word	0x10d3
	.byte	0x52
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF319
	.byte	0x7
	.word	0x10d3
	.byte	0x5a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "xpos\0"
	.byte	0x7
	.word	0x10d3
	.byte	0x6d
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ypos\0"
	.byte	0x7
	.word	0x10d3
	.byte	0x7a
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "q\0"
	.byte	0x7
	.word	0x10d3
	.byte	0x94
	.long	0x22ef7
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "align_to_integer\0"
	.byte	0x7
	.word	0x10d3
	.byte	0x9b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x1
	.ascii "ipw\0"
	.byte	0x7
	.word	0x10d5
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "iph\0"
	.byte	0x7
	.word	0x10d5
	.byte	0x1b
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x7
	.word	0x10d6
	.byte	0x1c
	.long	0x22ef1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x9
	.long	LBB670
	.long	LBE670-LBB670
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x7
	.word	0x10d9
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x7
	.word	0x10da
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x194f1
	.uleb128 0xc
	.byte	0x4
	.long	0x1941f
	.uleb128 0x2e
	.ascii "stbtt_GetScaledFontVMetrics\0"
	.byte	0x7
	.word	0x10c6
	.byte	0x10
	.long	LFB2099
	.long	LFE2099-LFB2099
	.uleb128 0x1
	.byte	0x9c
	.long	0x22ff3
	.uleb128 0x4
	.secrel32	LASF306
	.byte	0x7
	.word	0x10c6
	.byte	0x41
	.long	0x691
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF243
	.byte	0x7
	.word	0x10c6
	.byte	0x4f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF47
	.byte	0x7
	.word	0x10c6
	.byte	0x5c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF218
	.byte	0x7
	.word	0x10c6
	.byte	0x69
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF219
	.byte	0x7
	.word	0x10c6
	.byte	0x78
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "lineGap\0"
	.byte	0x7
	.word	0x10c6
	.byte	0x88
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "i_ascent\0"
	.byte	0x7
	.word	0x10c8
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "i_descent\0"
	.byte	0x7
	.word	0x10c8
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "i_lineGap\0"
	.byte	0x7
	.word	0x10c8
	.byte	0x1d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x7
	.secrel32	LASF217
	.byte	0x7
	.word	0x10c9
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF220
	.byte	0x7
	.word	0x10ca
	.byte	0x13
	.long	0x195d0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_PackFontRange\0"
	.byte	0x7
	.word	0x10ba
	.byte	0xf
	.long	0xf4
	.long	LFB2098
	.long	LFE2098-LFB2098
	.uleb128 0x1
	.byte	0x9c
	.long	0x230b0
	.uleb128 0x3
	.ascii "spc\0"
	.byte	0x7
	.word	0x10ba
	.byte	0x37
	.long	0x230b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF306
	.byte	0x7
	.word	0x10ba
	.byte	0x51
	.long	0x691
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF320
	.byte	0x7
	.word	0x10ba
	.byte	0x5f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF195
	.byte	0x7
	.word	0x10ba
	.byte	0x71
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF196
	.byte	0x7
	.word	0x10bb
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "num_chars_in_range\0"
	.byte	0x7
	.word	0x10bb
	.byte	0x37
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF198
	.byte	0x7
	.word	0x10bb
	.byte	0x5d
	.long	0x19834
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1
	.ascii "range\0"
	.byte	0x7
	.word	0x10bd
	.byte	0x15
	.long	0x1983a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x194f6
	.uleb128 0x18
	.ascii "stbtt_PackFontRanges\0"
	.byte	0x7
	.word	0x1096
	.byte	0xf
	.long	0xf4
	.long	LFB2097
	.long	LFE2097-LFB2097
	.uleb128 0x1
	.byte	0x9c
	.long	0x2318e
	.uleb128 0x3
	.ascii "spc\0"
	.byte	0x7
	.word	0x1096
	.byte	0x38
	.long	0x230b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF306
	.byte	0x7
	.word	0x1096
	.byte	0x52
	.long	0x691
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF320
	.byte	0x7
	.word	0x1096
	.byte	0x60
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF321
	.byte	0x7
	.word	0x1096
	.byte	0x7e
	.long	0x2318e
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF322
	.byte	0x7
	.word	0x1096
	.byte	0x8a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x7
	.secrel32	LASF220
	.byte	0x7
	.word	0x1098
	.byte	0x13
	.long	0x195d0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x1099
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x7
	.word	0x1099
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x7
	.word	0x1099
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF323
	.byte	0x7
	.word	0x1099
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x7
	.secrel32	LASF324
	.byte	0x7
	.word	0x109b
	.byte	0x13
	.long	0x23194
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1983a
	.uleb128 0xc
	.byte	0x4
	.long	0x1972e
	.uleb128 0x2e
	.ascii "stbtt_PackFontRangesPackRects\0"
	.byte	0x7
	.word	0x1091
	.byte	0x10
	.long	LFB2096
	.long	LFE2096-LFB2096
	.uleb128 0x1
	.byte	0x9c
	.long	0x231fc
	.uleb128 0x3
	.ascii "spc\0"
	.byte	0x7
	.word	0x1091
	.byte	0x42
	.long	0x230b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF324
	.byte	0x7
	.word	0x1091
	.byte	0x53
	.long	0x23194
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF325
	.byte	0x7
	.word	0x1091
	.byte	0x5e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_PackFontRangesRenderIntoRects\0"
	.byte	0x7
	.word	0x1038
	.byte	0xf
	.long	0xf4
	.long	LFB2095
	.long	LFE2095-LFB2095
	.uleb128 0x1
	.byte	0x9c
	.long	0x2344c
	.uleb128 0x3
	.ascii "spc\0"
	.byte	0x7
	.word	0x1038
	.byte	0x47
	.long	0x230b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x1038
	.byte	0x62
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF321
	.byte	0x7
	.word	0x1038
	.byte	0x7a
	.long	0x2318e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF322
	.byte	0x7
	.word	0x1038
	.byte	0x86
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF324
	.byte	0x7
	.word	0x1038
	.byte	0x9e
	.long	0x23194
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x103a
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x7
	.word	0x103a
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x7
	.word	0x103a
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "missing_glyph\0"
	.byte	0x7
	.word	0x103a
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x7
	.secrel32	LASF323
	.byte	0x7
	.word	0x103a
	.byte	0x23
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "old_h_over\0"
	.byte	0x7
	.word	0x103d
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "old_v_over\0"
	.byte	0x7
	.word	0x103e
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x9
	.long	LBB664
	.long	LBE664-LBB664
	.uleb128 0x1
	.ascii "fh\0"
	.byte	0x7
	.word	0x1042
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x7
	.secrel32	LASF217
	.byte	0x7
	.word	0x1043
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "recip_h\0"
	.byte	0x7
	.word	0x1044
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "recip_v\0"
	.byte	0x7
	.word	0x1044
	.byte	0x15
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "sub_x\0"
	.byte	0x7
	.word	0x1044
	.byte	0x1d
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "sub_y\0"
	.byte	0x7
	.word	0x1044
	.byte	0x23
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x9
	.long	LBB666
	.long	LBE666-LBB666
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x7
	.word	0x104c
	.byte	0x16
	.long	0x23194
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x9
	.long	LBB668
	.long	LBE668-LBB668
	.uleb128 0x1
	.ascii "bc\0"
	.byte	0x7
	.word	0x104e
	.byte	0x1f
	.long	0x19834
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x7
	.secrel32	LASF202
	.byte	0x7
	.word	0x104f
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "lsb\0"
	.byte	0x7
	.word	0x104f
	.byte	0x1a
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1
	.ascii "x0\0"
	.byte	0x7
	.word	0x104f
	.byte	0x1f
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "y0\0"
	.byte	0x7
	.word	0x104f
	.byte	0x22
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x7
	.word	0x104f
	.byte	0x25
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x1
	.ascii "y1\0"
	.byte	0x7
	.word	0x104f
	.byte	0x28
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x7
	.secrel32	LASF312
	.byte	0x7
	.word	0x1050
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x7
	.secrel32	LASF315
	.byte	0x7
	.word	0x1051
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "pad\0"
	.byte	0x7
	.word	0x1052
	.byte	0x19
	.long	0x19d89
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_MakeGlyphBitmapSubpixelPrefilter\0"
	.byte	0x7
	.word	0x1020
	.byte	0x10
	.long	LFB2094
	.long	LFE2094-LFB2094
	.uleb128 0x1
	.byte	0x9c
	.long	0x2357f
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x1020
	.byte	0x4d
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF326
	.byte	0x7
	.word	0x1020
	.byte	0x62
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF327
	.byte	0x7
	.word	0x1020
	.byte	0x6e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF328
	.byte	0x7
	.word	0x1020
	.byte	0x79
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF329
	.byte	0x7
	.word	0x1020
	.byte	0x84
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0x1020
	.byte	0x96
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0x1020
	.byte	0xa5
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF330
	.byte	0x7
	.word	0x1020
	.byte	0xb4
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x4
	.secrel32	LASF331
	.byte	0x7
	.word	0x1020
	.byte	0xc3
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x3
	.ascii "prefilter_x\0"
	.byte	0x7
	.word	0x1020
	.byte	0xd0
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x3
	.ascii "prefilter_y\0"
	.byte	0x7
	.word	0x1020
	.byte	0xe1
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x3
	.ascii "sub_x\0"
	.byte	0x7
	.word	0x1020
	.byte	0xf5
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 44
	.uleb128 0xa3
	.ascii "sub_y\0"
	.byte	0x7
	.word	0x1020
	.word	0x103
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 48
	.uleb128 0xa4
	.secrel32	LASF315
	.byte	0x7
	.word	0x1020
	.word	0x10e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 52
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_PackFontRangesGatherRects\0"
	.byte	0x7
	.word	0xffd
	.byte	0xf
	.long	0xf4
	.long	LFB2093
	.long	LFE2093-LFB2093
	.uleb128 0x1
	.byte	0x9c
	.long	0x236e0
	.uleb128 0x3
	.ascii "spc\0"
	.byte	0x7
	.word	0xffd
	.byte	0x43
	.long	0x230b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xffd
	.byte	0x5e
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF321
	.byte	0x7
	.word	0xffd
	.byte	0x76
	.long	0x2318e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF322
	.byte	0x7
	.word	0xffd
	.byte	0x82
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF324
	.byte	0x7
	.word	0xffd
	.byte	0x9a
	.long	0x23194
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0xfff
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x7
	.word	0xfff
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x7
	.word	0xfff
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "missing_glyph_added\0"
	.byte	0x7
	.word	0x1000
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB660
	.long	LBE660-LBB660
	.uleb128 0x1
	.ascii "fh\0"
	.byte	0x7
	.word	0x1004
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF217
	.byte	0x7
	.word	0x1005
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x9
	.long	LBB662
	.long	LBE662-LBB662
	.uleb128 0x1
	.ascii "x0\0"
	.byte	0x7
	.word	0x1009
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "y0\0"
	.byte	0x7
	.word	0x1009
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x7
	.word	0x1009
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "y1\0"
	.byte	0x7
	.word	0x1009
	.byte	0x17
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x7
	.secrel32	LASF312
	.byte	0x7
	.word	0x100a
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x7
	.secrel32	LASF315
	.byte	0x7
	.word	0x100b
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x27
	.ascii "stbtt__oversample_shift\0"
	.byte	0x7
	.word	0xff0
	.byte	0xe
	.long	0x7d5
	.long	LFB2092
	.long	LFE2092-LFB2092
	.uleb128 0x1
	.byte	0x9c
	.long	0x23727
	.uleb128 0x3
	.ascii "oversample\0"
	.byte	0x7
	.word	0xff0
	.byte	0x2a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__v_prefilter\0"
	.byte	0x7
	.word	0xfb2
	.byte	0xd
	.long	LFB2091
	.long	LFE2091-LFB2091
	.uleb128 0x1
	.byte	0x9c
	.long	0x237f5
	.uleb128 0x4
	.secrel32	LASF187
	.byte	0x7
	.word	0xfb2
	.byte	0x2f
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "w\0"
	.byte	0x7
	.word	0xfb2
	.byte	0x3b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "h\0"
	.byte	0x7
	.word	0xfb2
	.byte	0x42
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF183
	.byte	0x7
	.word	0xfb2
	.byte	0x49
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF332
	.byte	0x7
	.word	0xfb2
	.byte	0x67
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x7
	.secrel32	LASF164
	.byte	0x7
	.word	0xfb4
	.byte	0x12
	.long	0xb21
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "safe_h\0"
	.byte	0x7
	.word	0xfb5
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x7
	.word	0xfb6
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB658
	.long	LBE658-LBB658
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0xfb9
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "total\0"
	.byte	0x7
	.word	0xfba
	.byte	0x14
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__h_prefilter\0"
	.byte	0x7
	.word	0xf74
	.byte	0xd
	.long	LFB2090
	.long	LFE2090-LFB2090
	.uleb128 0x1
	.byte	0x9c
	.long	0x238c3
	.uleb128 0x4
	.secrel32	LASF187
	.byte	0x7
	.word	0xf74
	.byte	0x2f
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "w\0"
	.byte	0x7
	.word	0xf74
	.byte	0x3b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "h\0"
	.byte	0x7
	.word	0xf74
	.byte	0x42
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF183
	.byte	0x7
	.word	0xf74
	.byte	0x49
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF332
	.byte	0x7
	.word	0xf74
	.byte	0x67
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x7
	.secrel32	LASF164
	.byte	0x7
	.word	0xf76
	.byte	0x12
	.long	0xb21
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "safe_w\0"
	.byte	0x7
	.word	0xf77
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x7
	.word	0xf78
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB656
	.long	LBE656-LBB656
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0xf7b
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "total\0"
	.byte	0x7
	.word	0xf7c
	.byte	0x14
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.byte	0
	.uleb128 0x52
	.ascii "stbtt_PackSetSkipMissingCodepoints\0"
	.byte	0x7
	.word	0xf6d
	.byte	0x10
	.long	LFB2089
	.long	LFE2089-LFB2089
	.uleb128 0x1
	.byte	0x9c
	.long	0x2391b
	.uleb128 0x3
	.ascii "spc\0"
	.byte	0x7
	.word	0xf6d
	.byte	0x47
	.long	0x230b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "skip\0"
	.byte	0x7
	.word	0xf6d
	.byte	0x50
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_PackSetOversampling\0"
	.byte	0x7
	.word	0xf63
	.byte	0x10
	.long	LFB2088
	.long	LFE2088-LFB2088
	.uleb128 0x1
	.byte	0x9c
	.long	0x23979
	.uleb128 0x3
	.ascii "spc\0"
	.byte	0x7
	.word	0xf63
	.byte	0x3e
	.long	0x230b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF185
	.byte	0x7
	.word	0xf63
	.byte	0x50
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF186
	.byte	0x7
	.word	0xf63
	.byte	0x6b
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_PackEnd\0"
	.byte	0x7
	.word	0xf5d
	.byte	0x10
	.long	LFB2087
	.long	LFE2087-LFB2087
	.uleb128 0x1
	.byte	0x9c
	.long	0x239ab
	.uleb128 0x3
	.ascii "spc\0"
	.byte	0x7
	.word	0xf5d
	.byte	0x34
	.long	0x230b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_PackBegin\0"
	.byte	0x7
	.word	0xf3c
	.byte	0xf
	.long	0xf4
	.long	LFB2086
	.long	LFE2086-LFB2086
	.uleb128 0x1
	.byte	0x9c
	.long	0x23a7d
	.uleb128 0x3
	.ascii "spc\0"
	.byte	0x7
	.word	0xf3c
	.byte	0x33
	.long	0x230b0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF187
	.byte	0x7
	.word	0xf3c
	.byte	0x47
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "pw\0"
	.byte	0x7
	.word	0xf3c
	.byte	0x53
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "ph\0"
	.byte	0x7
	.word	0xf3c
	.byte	0x5b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF183
	.byte	0x7
	.word	0xf3c
	.byte	0x63
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF184
	.byte	0x7
	.word	0xf3c
	.byte	0x78
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "alloc_context\0"
	.byte	0x7
	.word	0xf3c
	.byte	0x87
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x7
	.secrel32	LASF163
	.byte	0x7
	.word	0xf3e
	.byte	0x13
	.long	0x23a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF333
	.byte	0x7
	.word	0xf3f
	.byte	0x13
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "nodes\0"
	.byte	0x7
	.word	0xf40
	.byte	0x13
	.long	0x23a83
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19dfb
	.uleb128 0xc
	.byte	0x4
	.long	0x19e36
	.uleb128 0x38
	.ascii "stbrp_pack_rects\0"
	.byte	0x7
	.word	0xf1f
	.byte	0xd
	.long	LFB2085
	.long	LFE2085-LFB2085
	.uleb128 0x1
	.byte	0x9c
	.long	0x23aec
	.uleb128 0x3
	.ascii "con\0"
	.byte	0x7
	.word	0xf1f
	.byte	0x2d
	.long	0x23a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF324
	.byte	0x7
	.word	0xf1f
	.byte	0x3e
	.long	0x23194
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF325
	.byte	0x7
	.word	0xf1f
	.byte	0x49
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0xf21
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x38
	.ascii "stbrp_init_target\0"
	.byte	0x7
	.word	0xf14
	.byte	0xd
	.long	LFB2084
	.long	LFE2084-LFB2084
	.uleb128 0x1
	.byte	0x9c
	.long	0x23b62
	.uleb128 0x3
	.ascii "con\0"
	.byte	0x7
	.word	0xf14
	.byte	0x2e
	.long	0x23a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "pw\0"
	.byte	0x7
	.word	0xf14
	.byte	0x37
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "ph\0"
	.byte	0x7
	.word	0xf14
	.byte	0x3f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "nodes\0"
	.byte	0x7
	.word	0xf14
	.byte	0x4f
	.long	0x23a83
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF333
	.byte	0x7
	.word	0xf14
	.byte	0x5a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_GetBakedQuad\0"
	.byte	0x7
	.word	0xeda
	.byte	0x10
	.long	LFB2083
	.long	LFE2083-LFB2083
	.uleb128 0x1
	.byte	0x9c
	.long	0x23c7e
	.uleb128 0x4
	.secrel32	LASF221
	.byte	0x7
	.word	0xeda
	.byte	0x3a
	.long	0x23c7e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "pw\0"
	.byte	0x7
	.word	0xeda
	.byte	0x48
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "ph\0"
	.byte	0x7
	.word	0xeda
	.byte	0x50
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF319
	.byte	0x7
	.word	0xeda
	.byte	0x58
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "xpos\0"
	.byte	0x7
	.word	0xeda
	.byte	0x6b
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ypos\0"
	.byte	0x7
	.word	0xeda
	.byte	0x78
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "q\0"
	.byte	0x7
	.word	0xeda
	.byte	0x92
	.long	0x22ef7
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "opengl_fillrule\0"
	.byte	0x7
	.word	0xeda
	.byte	0x99
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x1
	.ascii "d3d_bias\0"
	.byte	0x7
	.word	0xedc
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "ipw\0"
	.byte	0x7
	.word	0xedd
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "iph\0"
	.byte	0x7
	.word	0xedd
	.byte	0x1b
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x7
	.word	0xede
	.byte	0x1b
	.long	0x23c7e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "round_x\0"
	.byte	0x7
	.word	0xedf
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "round_y\0"
	.byte	0x7
	.word	0xee0
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19392
	.uleb128 0xd
	.ascii "stbtt_BakeFontBitmap_internal\0"
	.byte	0x7
	.word	0xeac
	.byte	0xc
	.long	0xf4
	.long	LFB2082
	.long	LFE2082-LFB2082
	.uleb128 0x1
	.byte	0x9c
	.long	0x23e39
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x7
	.word	0xeac
	.byte	0x39
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF172
	.byte	0x7
	.word	0xeac
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF307
	.byte	0x7
	.word	0xead
	.byte	0x27
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF187
	.byte	0x7
	.word	0xeae
	.byte	0x30
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "pw\0"
	.byte	0x7
	.word	0xeae
	.byte	0x3c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ph\0"
	.byte	0x7
	.word	0xeae
	.byte	0x44
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF308
	.byte	0x7
	.word	0xeaf
	.byte	0x25
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF197
	.byte	0x7
	.word	0xeaf
	.byte	0x35
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x4
	.secrel32	LASF221
	.byte	0x7
	.word	0xeb0
	.byte	0x32
	.long	0x21aee
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x7
	.secrel32	LASF217
	.byte	0x7
	.word	0xeb2
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x7
	.word	0xeb3
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x7
	.word	0xeb3
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF211
	.byte	0x7
	.word	0xeb3
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0xeb3
	.byte	0x16
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "f\0"
	.byte	0x7
	.word	0xeb4
	.byte	0x13
	.long	0x195d0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x9
	.long	LBB654
	.long	LBE654-LBB654
	.uleb128 0x7
	.secrel32	LASF202
	.byte	0x7
	.word	0xebf
	.byte	0xb
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x1
	.ascii "lsb\0"
	.byte	0x7
	.word	0xebf
	.byte	0x14
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x1
	.ascii "x0\0"
	.byte	0x7
	.word	0xebf
	.byte	0x19
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x1
	.ascii "y0\0"
	.byte	0x7
	.word	0xebf
	.byte	0x1c
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x7
	.word	0xebf
	.byte	0x1f
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -196
	.uleb128 0x1
	.ascii "y1\0"
	.byte	0x7
	.word	0xebf
	.byte	0x22
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x1
	.ascii "gw\0"
	.byte	0x7
	.word	0xebf
	.byte	0x25
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "gh\0"
	.byte	0x7
	.word	0xebf
	.byte	0x28
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x7
	.word	0xec0
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_MakeCodepointBitmap\0"
	.byte	0x7
	.word	0xea1
	.byte	0x10
	.long	LFB2081
	.long	LFE2081-LFB2081
	.uleb128 0x1
	.byte	0x9c
	.long	0x23ee7
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xea1
	.byte	0x40
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF326
	.byte	0x7
	.word	0xea1
	.byte	0x55
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF327
	.byte	0x7
	.word	0xea1
	.byte	0x61
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF328
	.byte	0x7
	.word	0xea1
	.byte	0x6c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF329
	.byte	0x7
	.word	0xea1
	.byte	0x77
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xea1
	.byte	0x89
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xea1
	.byte	0x98
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF312
	.byte	0x7
	.word	0xea1
	.byte	0xa5
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetCodepointBitmap\0"
	.byte	0x7
	.word	0xe9c
	.byte	0x1a
	.long	0x954
	.long	LFB2080
	.long	LFE2080-LFB2080
	.uleb128 0x1
	.byte	0x9c
	.long	0x23f98
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xe9c
	.byte	0x49
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xe9c
	.byte	0x55
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xe9c
	.byte	0x64
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF312
	.byte	0x7
	.word	0xe9c
	.byte	0x71
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x7
	.word	0xe9c
	.byte	0x81
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x7
	.word	0xe9c
	.byte	0x8d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF177
	.byte	0x7
	.word	0xe9c
	.byte	0x9a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF178
	.byte	0x7
	.word	0xe9c
	.byte	0xa5
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_MakeCodepointBitmapSubpixel\0"
	.byte	0x7
	.word	0xe97
	.byte	0x10
	.long	LFB2079
	.long	LFE2079-LFB2079
	.uleb128 0x1
	.byte	0x9c
	.long	0x2406e
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xe97
	.byte	0x48
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF326
	.byte	0x7
	.word	0xe97
	.byte	0x5d
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF327
	.byte	0x7
	.word	0xe97
	.byte	0x69
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF328
	.byte	0x7
	.word	0xe97
	.byte	0x74
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF329
	.byte	0x7
	.word	0xe97
	.byte	0x7f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xe97
	.byte	0x91
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xe97
	.byte	0xa0
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF330
	.byte	0x7
	.word	0xe97
	.byte	0xaf
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x4
	.secrel32	LASF331
	.byte	0x7
	.word	0xe97
	.byte	0xbe
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x4
	.secrel32	LASF312
	.byte	0x7
	.word	0xe97
	.byte	0xcb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_MakeCodepointBitmapSubpixelPrefilter\0"
	.byte	0x7
	.word	0xe92
	.byte	0x10
	.long	LFB2078
	.long	LFE2078-LFB2078
	.uleb128 0x1
	.byte	0x9c
	.long	0x241a7
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xe92
	.byte	0x51
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF326
	.byte	0x7
	.word	0xe92
	.byte	0x66
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF327
	.byte	0x7
	.word	0xe92
	.byte	0x72
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF328
	.byte	0x7
	.word	0xe92
	.byte	0x7d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF329
	.byte	0x7
	.word	0xe92
	.byte	0x88
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xe92
	.byte	0x9a
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xe92
	.byte	0xa9
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF330
	.byte	0x7
	.word	0xe92
	.byte	0xb8
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x4
	.secrel32	LASF331
	.byte	0x7
	.word	0xe92
	.byte	0xc7
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x3
	.ascii "oversample_x\0"
	.byte	0x7
	.word	0xe92
	.byte	0xd4
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x3
	.ascii "oversample_y\0"
	.byte	0x7
	.word	0xe92
	.byte	0xe6
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x3
	.ascii "sub_x\0"
	.byte	0x7
	.word	0xe92
	.byte	0xfb
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 44
	.uleb128 0xa3
	.ascii "sub_y\0"
	.byte	0x7
	.word	0xe92
	.word	0x109
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 48
	.uleb128 0xa4
	.secrel32	LASF312
	.byte	0x7
	.word	0xe92
	.word	0x114
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 52
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetCodepointBitmapSubpixel\0"
	.byte	0x7
	.word	0xe8d
	.byte	0x1a
	.long	0x954
	.long	LFB2077
	.long	LFE2077-LFB2077
	.uleb128 0x1
	.byte	0x9c
	.long	0x24280
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xe8d
	.byte	0x51
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xe8d
	.byte	0x5d
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xe8d
	.byte	0x6c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF330
	.byte	0x7
	.word	0xe8d
	.byte	0x7b
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF331
	.byte	0x7
	.word	0xe8d
	.byte	0x8a
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF312
	.byte	0x7
	.word	0xe8d
	.byte	0x97
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x7
	.word	0xe8d
	.byte	0xa7
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x7
	.word	0xe8d
	.byte	0xb3
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x4
	.secrel32	LASF177
	.byte	0x7
	.word	0xe8d
	.byte	0xc0
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x4
	.secrel32	LASF178
	.byte	0x7
	.word	0xe8d
	.byte	0xcb
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_MakeGlyphBitmap\0"
	.byte	0x7
	.word	0xe88
	.byte	0x10
	.long	LFB2076
	.long	LFE2076-LFB2076
	.uleb128 0x1
	.byte	0x9c
	.long	0x2432a
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xe88
	.byte	0x3c
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF326
	.byte	0x7
	.word	0xe88
	.byte	0x51
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF327
	.byte	0x7
	.word	0xe88
	.byte	0x5d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF328
	.byte	0x7
	.word	0xe88
	.byte	0x68
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF329
	.byte	0x7
	.word	0xe88
	.byte	0x73
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xe88
	.byte	0x85
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xe88
	.byte	0x94
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF315
	.byte	0x7
	.word	0xe88
	.byte	0xa1
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_MakeGlyphBitmapSubpixel\0"
	.byte	0x7
	.word	0xe75
	.byte	0x10
	.long	LFB2075
	.long	LFE2075-LFB2075
	.uleb128 0x1
	.byte	0x9c
	.long	0x2444c
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xe75
	.byte	0x44
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF326
	.byte	0x7
	.word	0xe75
	.byte	0x59
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF327
	.byte	0x7
	.word	0xe75
	.byte	0x65
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF328
	.byte	0x7
	.word	0xe75
	.byte	0x70
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF329
	.byte	0x7
	.word	0xe75
	.byte	0x7b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xe75
	.byte	0x8d
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xe75
	.byte	0x9c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF330
	.byte	0x7
	.word	0xe75
	.byte	0xab
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x4
	.secrel32	LASF331
	.byte	0x7
	.word	0xe75
	.byte	0xba
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x4
	.secrel32	LASF315
	.byte	0x7
	.word	0xe75
	.byte	0xc7
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x1
	.ascii "ix0\0"
	.byte	0x7
	.word	0xe77
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "iy0\0"
	.byte	0x7
	.word	0xe77
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF334
	.byte	0x7
	.word	0xe78
	.byte	0x12
	.long	0x19ba8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x7
	.secrel32	LASF318
	.byte	0x7
	.word	0xe79
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "gbm\0"
	.byte	0x7
	.word	0xe7a
	.byte	0x12
	.long	0x199cd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetGlyphBitmap\0"
	.byte	0x7
	.word	0xe70
	.byte	0x1a
	.long	0x954
	.long	LFB2074
	.long	LFE2074-LFB2074
	.uleb128 0x1
	.byte	0x9c
	.long	0x244f9
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xe70
	.byte	0x45
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xe70
	.byte	0x51
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xe70
	.byte	0x60
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF315
	.byte	0x7
	.word	0xe70
	.byte	0x6d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x7
	.word	0xe70
	.byte	0x79
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x7
	.word	0xe70
	.byte	0x85
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF177
	.byte	0x7
	.word	0xe70
	.byte	0x92
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF178
	.byte	0x7
	.word	0xe70
	.byte	0x9d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetGlyphBitmapSubpixel\0"
	.byte	0x7
	.word	0xe48
	.byte	0x1a
	.long	0x954
	.long	LFB2073
	.long	LFE2073-LFB2073
	.uleb128 0x1
	.byte	0x9c
	.long	0x2463e
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xe48
	.byte	0x4d
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xe48
	.byte	0x59
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xe48
	.byte	0x68
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF330
	.byte	0x7
	.word	0xe48
	.byte	0x77
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF331
	.byte	0x7
	.word	0xe48
	.byte	0x86
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF315
	.byte	0x7
	.word	0xe48
	.byte	0x93
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x7
	.word	0xe48
	.byte	0x9f
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x7
	.word	0xe48
	.byte	0xab
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x4
	.secrel32	LASF177
	.byte	0x7
	.word	0xe48
	.byte	0xb8
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x4
	.secrel32	LASF178
	.byte	0x7
	.word	0xe48
	.byte	0xc3
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x1
	.ascii "ix0\0"
	.byte	0x7
	.word	0xe4a
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "iy0\0"
	.byte	0x7
	.word	0xe4a
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "ix1\0"
	.byte	0x7
	.word	0xe4a
	.byte	0x10
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "iy1\0"
	.byte	0x7
	.word	0xe4a
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "gbm\0"
	.byte	0x7
	.word	0xe4b
	.byte	0x12
	.long	0x199cd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x7
	.secrel32	LASF334
	.byte	0x7
	.word	0xe4c
	.byte	0x12
	.long	0x19ba8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x7
	.secrel32	LASF318
	.byte	0x7
	.word	0xe4d
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_FreeBitmap\0"
	.byte	0x7
	.word	0xe43
	.byte	0x10
	.long	LFB2072
	.long	LFE2072-LFB2072
	.uleb128 0x1
	.byte	0x9c
	.long	0x24683
	.uleb128 0x4
	.secrel32	LASF214
	.byte	0x7
	.word	0xe43
	.byte	0x30
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF189
	.byte	0x7
	.word	0xe43
	.byte	0x3e
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_Rasterize\0"
	.byte	0x7
	.word	0xe36
	.byte	0x10
	.long	LFB2071
	.long	LFE2071-LFB2071
	.uleb128 0x1
	.byte	0x9c
	.long	0x247d0
	.uleb128 0x4
	.secrel32	LASF257
	.byte	0x7
	.word	0xe36
	.byte	0x2f
	.long	0x247d0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "flatness_in_pixels\0"
	.byte	0x7
	.word	0xe36
	.byte	0x3d
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF334
	.byte	0x7
	.word	0xe36
	.byte	0x5f
	.long	0x19ba8
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF318
	.byte	0x7
	.word	0xe36
	.byte	0x6d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xe36
	.byte	0x7e
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xe36
	.byte	0x8d
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF330
	.byte	0x7
	.word	0xe36
	.byte	0x9c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF331
	.byte	0x7
	.word	0xe36
	.byte	0xab
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x3
	.ascii "x_off\0"
	.byte	0x7
	.word	0xe36
	.byte	0xb8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x3
	.ascii "y_off\0"
	.byte	0x7
	.word	0xe36
	.byte	0xc3
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x4
	.secrel32	LASF209
	.byte	0x7
	.word	0xe36
	.byte	0xce
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x4
	.secrel32	LASF189
	.byte	0x7
	.word	0xe36
	.byte	0xdc
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 44
	.uleb128 0x7
	.secrel32	LASF217
	.byte	0x7
	.word	0xe38
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "winding_count\0"
	.byte	0x7
	.word	0xe39
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "winding_lengths\0"
	.byte	0x7
	.word	0xe3a
	.byte	0x9
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x7
	.secrel32	LASF335
	.byte	0x7
	.word	0xe3b
	.byte	0x12
	.long	0x247d6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x199cd
	.uleb128 0xc
	.byte	0x4
	.long	0x19d73
	.uleb128 0xd
	.ascii "stbtt_FlattenCurves\0"
	.byte	0x7
	.word	0xde9
	.byte	0x16
	.long	0x247d6
	.long	LFB2070
	.long	LFE2070-LFB2070
	.uleb128 0x1
	.byte	0x9c
	.long	0x24929
	.uleb128 0x4
	.secrel32	LASF334
	.byte	0x7
	.word	0xde9
	.byte	0x38
	.long	0x19ba8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF318
	.byte	0x7
	.word	0xde9
	.byte	0x46
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "objspace_flatness\0"
	.byte	0x7
	.word	0xde9
	.byte	0x57
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "contour_lengths\0"
	.byte	0x7
	.word	0xde9
	.byte	0x70
	.long	0x24929
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "num_contours\0"
	.byte	0x7
	.word	0xde9
	.byte	0x86
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF189
	.byte	0x7
	.word	0xde9
	.byte	0x9a
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x6a
	.ascii "error\0"
	.byte	0x7
	.word	0xe2e
	.byte	0x1
	.long	L3492
	.uleb128 0x7
	.secrel32	LASF336
	.byte	0x7
	.word	0xdeb
	.byte	0x12
	.long	0x247d6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF337
	.byte	0x7
	.word	0xdec
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x7
	.secrel32	LASF338
	.byte	0x7
	.word	0xdee
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0xdef
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x7
	.word	0xdef
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF339
	.byte	0x7
	.word	0xdef
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "pass\0"
	.byte	0x7
	.word	0xdef
	.byte	0x17
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x4b
	.secrel32	Ldebug_ranges0+0xf0
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x7
	.word	0xe02
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x7
	.word	0xe02
	.byte	0x11
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x482
	.uleb128 0x1c
	.ascii "stbtt__tesselate_cubic\0"
	.byte	0x7
	.word	0xdbe
	.byte	0xd
	.long	LFB2069
	.long	LFE2069-LFB2069
	.uleb128 0x1
	.byte	0x9c
	.long	0x24ba3
	.uleb128 0x4
	.secrel32	LASF336
	.byte	0x7
	.word	0xdbe
	.byte	0x32
	.long	0x247d6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF337
	.byte	0x7
	.word	0xdbe
	.byte	0x3f
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x0\0"
	.byte	0x7
	.word	0xdbe
	.byte	0x51
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y0\0"
	.byte	0x7
	.word	0xdbe
	.byte	0x5b
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "x1\0"
	.byte	0x7
	.word	0xdbe
	.byte	0x65
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "y1\0"
	.byte	0x7
	.word	0xdbe
	.byte	0x6f
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "x2\0"
	.byte	0x7
	.word	0xdbe
	.byte	0x79
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "y2\0"
	.byte	0x7
	.word	0xdbe
	.byte	0x83
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x3
	.ascii "x3\0"
	.byte	0x7
	.word	0xdbe
	.byte	0x8d
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x3
	.ascii "y3\0"
	.byte	0x7
	.word	0xdbe
	.byte	0x97
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x4
	.secrel32	LASF338
	.byte	0x7
	.word	0xdbe
	.byte	0xa1
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x7
	.word	0xdbe
	.byte	0xc0
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 44
	.uleb128 0x1
	.ascii "dx0\0"
	.byte	0x7
	.word	0xdc1
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "dy0\0"
	.byte	0x7
	.word	0xdc2
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "dx1\0"
	.byte	0x7
	.word	0xdc3
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "dy1\0"
	.byte	0x7
	.word	0xdc4
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "dx2\0"
	.byte	0x7
	.word	0xdc5
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "dy2\0"
	.byte	0x7
	.word	0xdc6
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "dx\0"
	.byte	0x7
	.word	0xdc7
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "dy\0"
	.byte	0x7
	.word	0xdc8
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "longlen\0"
	.byte	0x7
	.word	0xdc9
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "shortlen\0"
	.byte	0x7
	.word	0xdca
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "flatness_squared\0"
	.byte	0x7
	.word	0xdcb
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x9
	.long	LBB648
	.long	LBE648-LBB648
	.uleb128 0x1
	.ascii "x01\0"
	.byte	0x7
	.word	0xdd1
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "y01\0"
	.byte	0x7
	.word	0xdd2
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "x12\0"
	.byte	0x7
	.word	0xdd3
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "y12\0"
	.byte	0x7
	.word	0xdd4
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "x23\0"
	.byte	0x7
	.word	0xdd5
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "y23\0"
	.byte	0x7
	.word	0xdd6
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "xa\0"
	.byte	0x7
	.word	0xdd8
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "ya\0"
	.byte	0x7
	.word	0xdd9
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "xb\0"
	.byte	0x7
	.word	0xdda
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "yb\0"
	.byte	0x7
	.word	0xddb
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "mx\0"
	.byte	0x7
	.word	0xddd
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1
	.ascii "my\0"
	.byte	0x7
	.word	0xdde
	.byte	0xd
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__tesselate_curve\0"
	.byte	0x7
	.word	0xdaa
	.byte	0xc
	.long	0xf4
	.long	LFB2068
	.long	LFE2068-LFB2068
	.uleb128 0x1
	.byte	0x9c
	.long	0x24ca6
	.uleb128 0x4
	.secrel32	LASF336
	.byte	0x7
	.word	0xdaa
	.byte	0x31
	.long	0x247d6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF337
	.byte	0x7
	.word	0xdaa
	.byte	0x3e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x0\0"
	.byte	0x7
	.word	0xdaa
	.byte	0x50
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y0\0"
	.byte	0x7
	.word	0xdaa
	.byte	0x5a
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "x1\0"
	.byte	0x7
	.word	0xdaa
	.byte	0x64
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "y1\0"
	.byte	0x7
	.word	0xdaa
	.byte	0x6e
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "x2\0"
	.byte	0x7
	.word	0xdaa
	.byte	0x78
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "y2\0"
	.byte	0x7
	.word	0xdaa
	.byte	0x82
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x4
	.secrel32	LASF338
	.byte	0x7
	.word	0xdaa
	.byte	0x8c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x7
	.word	0xdaa
	.byte	0xab
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x1
	.ascii "mx\0"
	.byte	0x7
	.word	0xdad
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "my\0"
	.byte	0x7
	.word	0xdae
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "dx\0"
	.byte	0x7
	.word	0xdb0
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "dy\0"
	.byte	0x7
	.word	0xdb1
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x38
	.ascii "stbtt__add_point\0"
	.byte	0x7
	.word	0xda2
	.byte	0xd
	.long	LFB2067
	.long	LFE2067-LFB2067
	.uleb128 0x1
	.byte	0x9c
	.long	0x24d05
	.uleb128 0x4
	.secrel32	LASF336
	.byte	0x7
	.word	0xda2
	.byte	0x2c
	.long	0x247d6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x7
	.word	0xda2
	.byte	0x38
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x7
	.word	0xda2
	.byte	0x41
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x7
	.word	0xda2
	.byte	0x4a
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__rasterize\0"
	.byte	0x7
	.word	0xd69
	.byte	0xd
	.long	LFB2066
	.long	LFE2066-LFB2066
	.uleb128 0x1
	.byte	0x9c
	.long	0x24eab
	.uleb128 0x4
	.secrel32	LASF257
	.byte	0x7
	.word	0xd69
	.byte	0x2d
	.long	0x247d0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "pts\0"
	.byte	0x7
	.word	0xd69
	.byte	0x43
	.long	0x247d6
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "wcount\0"
	.byte	0x7
	.word	0xd69
	.byte	0x4d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF335
	.byte	0x7
	.word	0xd69
	.byte	0x59
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xd69
	.byte	0x69
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xd69
	.byte	0x78
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF330
	.byte	0x7
	.word	0xd69
	.byte	0x87
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF331
	.byte	0x7
	.word	0xd69
	.byte	0x96
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x3
	.ascii "off_x\0"
	.byte	0x7
	.word	0xd69
	.byte	0xa3
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x3
	.ascii "off_y\0"
	.byte	0x7
	.word	0xd69
	.byte	0xae
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x4
	.secrel32	LASF209
	.byte	0x7
	.word	0xd69
	.byte	0xb9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x4
	.secrel32	LASF189
	.byte	0x7
	.word	0xd69
	.byte	0xc7
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 44
	.uleb128 0x1
	.ascii "y_scale_inv\0"
	.byte	0x7
	.word	0xd6b
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "e\0"
	.byte	0x7
	.word	0xd6c
	.byte	0x11
	.long	0x24eab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x7
	.word	0xd6d
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0xd6d
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x7
	.word	0xd6d
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x7
	.word	0xd6d
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x7
	.word	0xd6d
	.byte	0x10
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF340
	.byte	0x7
	.word	0xd71
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x9
	.long	LBB644
	.long	LBE644-LBB644
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x7
	.word	0xd82
	.byte	0x15
	.long	0x247d6
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x9
	.long	LBB646
	.long	LBE646-LBB646
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x7
	.word	0xd86
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x7
	.word	0xd86
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19cac
	.uleb128 0x1c
	.ascii "stbtt__sort_edges\0"
	.byte	0x7
	.word	0xd5e
	.byte	0xd
	.long	LFB2065
	.long	LFE2065-LFB2065
	.uleb128 0x1
	.byte	0x9c
	.long	0x24ef3
	.uleb128 0x3
	.ascii "p\0"
	.byte	0x7
	.word	0xd5e
	.byte	0x2c
	.long	0x24eab
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x7
	.word	0xd5e
	.byte	0x33
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__sort_edges_quicksort\0"
	.byte	0x7
	.word	0xd20
	.byte	0xd
	.long	LFB2064
	.long	LFE2064-LFB2064
	.uleb128 0x1
	.byte	0x9c
	.long	0x24fc7
	.uleb128 0x3
	.ascii "p\0"
	.byte	0x7
	.word	0xd20
	.byte	0x36
	.long	0x24eab
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x7
	.word	0xd20
	.byte	0x3d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x9
	.long	LBB640
	.long	LBE640-LBB640
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x7
	.word	0xd24
	.byte	0x13
	.long	0x19cac
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "c01\0"
	.byte	0x7
	.word	0xd25
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "c12\0"
	.byte	0x7
	.word	0xd25
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x7
	.word	0xd25
	.byte	0x13
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x7
	.word	0xd25
	.byte	0x15
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0xd25
	.byte	0x17
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x7
	.word	0xd25
	.byte	0x19
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB642
	.long	LBE642-LBB642
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x7
	.word	0xd2e
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x38
	.ascii "stbtt__sort_edges_ins_sort\0"
	.byte	0x7
	.word	0xd0e
	.byte	0xd
	.long	LFB2063
	.long	LFE2063-LFB2063
	.uleb128 0x1
	.byte	0x9c
	.long	0x25076
	.uleb128 0x3
	.ascii "p\0"
	.byte	0x7
	.word	0xd0e
	.byte	0x35
	.long	0x24eab
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x7
	.word	0xd0e
	.byte	0x3c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0xd10
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x7
	.word	0xd10
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x9
	.long	LBB637
	.long	LBE637-LBB637
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x7
	.word	0xd12
	.byte	0x13
	.long	0x19cac
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x7
	.word	0xd12
	.byte	0x1e
	.long	0x24eab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x4b
	.secrel32	Ldebug_ranges0+0xd8
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x7
	.word	0xd15
	.byte	0x17
	.long	0x24eab
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x7
	.word	0xd16
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__rasterize_sorted_edges\0"
	.byte	0x7
	.word	0xca8
	.byte	0xd
	.long	LFB2062
	.long	LFE2062-LFB2062
	.uleb128 0x1
	.byte	0x9c
	.long	0x25289
	.uleb128 0x4
	.secrel32	LASF257
	.byte	0x7
	.word	0xca8
	.byte	0x3a
	.long	0x247d0
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "e\0"
	.byte	0x7
	.word	0xca8
	.byte	0x4f
	.long	0x24eab
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x7
	.word	0xca8
	.byte	0x56
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF340
	.byte	0x7
	.word	0xca8
	.byte	0x5d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "off_x\0"
	.byte	0x7
	.word	0xca8
	.byte	0x6d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "off_y\0"
	.byte	0x7
	.word	0xca8
	.byte	0x78
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF189
	.byte	0x7
	.word	0xca8
	.byte	0x85
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1
	.ascii "hh\0"
	.byte	0x7
	.word	0xcaa
	.byte	0x11
	.long	0x19c4e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "active\0"
	.byte	0x7
	.word	0xcab
	.byte	0x18
	.long	0x25289
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x7
	.word	0xcac
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x7
	.word	0xcac
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0xcac
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "scanline_data\0"
	.byte	0x7
	.word	0xcad
	.byte	0xa
	.long	0x2528f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -604
	.uleb128 0x7
	.secrel32	LASF341
	.byte	0x7
	.word	0xcad
	.byte	0x1f
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "scanline2\0"
	.byte	0x7
	.word	0xcad
	.byte	0x2a
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x9
	.long	LBB627
	.long	LBE627-LBB627
	.uleb128 0x1
	.ascii "scan_y_top\0"
	.byte	0x7
	.word	0xcbd
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "scan_y_bottom\0"
	.byte	0x7
	.word	0xcbe
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "step\0"
	.byte	0x7
	.word	0xcbf
	.byte	0x1c
	.long	0x2529f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0xf
	.long	LBB628
	.long	LBE628-LBB628
	.long	0x2520d
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x7
	.word	0xcc7
	.byte	0x1f
	.long	0x25289
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.uleb128 0xf
	.long	LBB631
	.long	LBE631-LBB631
	.long	0x25229
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x7
	.word	0xcd5
	.byte	0x21
	.long	0x25289
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0xf
	.long	LBB632
	.long	LBE632-LBB632
	.long	0x2526e
	.uleb128 0x1
	.ascii "sum\0"
	.byte	0x7
	.word	0xceb
	.byte	0x10
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x9
	.long	LBB634
	.long	LBE634-LBB634
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x7
	.word	0xced
	.byte	0x13
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x7
	.word	0xcee
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB635
	.long	LBE635-LBB635
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x7
	.word	0xcfa
	.byte	0x1e
	.long	0x25289
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19d34
	.uleb128 0x10
	.long	0x7d5
	.long	0x2529f
	.uleb128 0x12
	.long	0xe4
	.byte	0x80
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x25289
	.uleb128 0x1c
	.ascii "stbtt__fill_active_edges_new\0"
	.byte	0x7
	.word	0xc06
	.byte	0xd
	.long	LFB2061
	.long	LFE2061-LFB2061
	.uleb128 0x1
	.byte	0x9c
	.long	0x25552
	.uleb128 0x4
	.secrel32	LASF341
	.byte	0x7
	.word	0xc06
	.byte	0x31
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "scanline_fill\0"
	.byte	0x7
	.word	0xc06
	.byte	0x42
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x7
	.word	0xc06
	.byte	0x55
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "e\0"
	.byte	0x7
	.word	0xc06
	.byte	0x6e
	.long	0x25289
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "y_top\0"
	.byte	0x7
	.word	0xc06
	.byte	0x77
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "y_bottom\0"
	.byte	0x7
	.word	0xc08
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0xf
	.long	LBB613
	.long	LBE613-LBB613
	.long	0x25361
	.uleb128 0x1
	.ascii "x0\0"
	.byte	0x7
	.word	0xc11
	.byte	0x10
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x9
	.long	LBB614
	.long	LBE614-LBB614
	.uleb128 0x1
	.ascii "x0\0"
	.byte	0x7
	.word	0xc1b
	.byte	0x10
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "dx\0"
	.byte	0x7
	.word	0xc1c
	.byte	0x10
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "xb\0"
	.byte	0x7
	.word	0xc1d
	.byte	0x10
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "x_top\0"
	.byte	0x7
	.word	0xc1e
	.byte	0x10
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "x_bottom\0"
	.byte	0x7
	.word	0xc1e
	.byte	0x17
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "sy0\0"
	.byte	0x7
	.word	0xc1f
	.byte	0x10
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "sy1\0"
	.byte	0x7
	.word	0xc1f
	.byte	0x14
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "dy\0"
	.byte	0x7
	.word	0xc20
	.byte	0x10
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0xf
	.long	LBB618
	.long	LBE618-LBB618
	.long	0x2541b
	.uleb128 0x7
	.secrel32	LASF182
	.byte	0x7
	.word	0xc39
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x7
	.word	0xc3b
	.byte	0x14
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.byte	0
	.uleb128 0xf
	.long	LBB619
	.long	LBE619-LBB619
	.long	0x254bd
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x7
	.word	0xc41
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x7
	.word	0xc41
	.byte	0x16
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "x2\0"
	.byte	0x7
	.word	0xc41
	.byte	0x19
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "y_crossing\0"
	.byte	0x7
	.word	0xc42
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "step\0"
	.byte	0x7
	.word	0xc42
	.byte	0x22
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "sign\0"
	.byte	0x7
	.word	0xc42
	.byte	0x28
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "area\0"
	.byte	0x7
	.word	0xc42
	.byte	0x2e
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x9
	.long	LBB621
	.long	LBE621-LBB621
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x7
	.word	0xc46
	.byte	0x19
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB624
	.long	LBE624-LBB624
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x7
	.word	0xc6d
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x9
	.long	LBB626
	.long	LBE626-LBB626
	.uleb128 0x1
	.ascii "y0\0"
	.byte	0x7
	.word	0xc7d
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x7
	.word	0xc7e
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1
	.ascii "x2\0"
	.byte	0x7
	.word	0xc7f
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "x3\0"
	.byte	0x7
	.word	0xc80
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1
	.ascii "y3\0"
	.byte	0x7
	.word	0xc81
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "y1\0"
	.byte	0x7
	.word	0xc86
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x1
	.ascii "y2\0"
	.byte	0x7
	.word	0xc87
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__handle_clipped_edge\0"
	.byte	0x7
	.word	0xbe1
	.byte	0xd
	.long	LFB2060
	.long	LFE2060-LFB2060
	.uleb128 0x1
	.byte	0x9c
	.long	0x255e9
	.uleb128 0x4
	.secrel32	LASF341
	.byte	0x7
	.word	0xbe1
	.byte	0x2f
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x7
	.word	0xbe1
	.byte	0x3d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "e\0"
	.byte	0x7
	.word	0xbe1
	.byte	0x54
	.long	0x25289
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "x0\0"
	.byte	0x7
	.word	0xbe1
	.byte	0x5d
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "y0\0"
	.byte	0x7
	.word	0xbe1
	.byte	0x67
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "x1\0"
	.byte	0x7
	.word	0xbe1
	.byte	0x71
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "y1\0"
	.byte	0x7
	.word	0xbe1
	.byte	0x7b
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__new_active\0"
	.byte	0x7
	.word	0xb36
	.byte	0x1c
	.long	0x25289
	.long	LFB2059
	.long	LFE2059-LFB2059
	.uleb128 0x1
	.byte	0x9c
	.long	0x25689
	.uleb128 0x3
	.ascii "hh\0"
	.byte	0x7
	.word	0xb36
	.byte	0x3c
	.long	0x25689
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "e\0"
	.byte	0x7
	.word	0xb36
	.byte	0x4d
	.long	0x24eab
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "off_x\0"
	.byte	0x7
	.word	0xb36
	.byte	0x54
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "start_point\0"
	.byte	0x7
	.word	0xb36
	.byte	0x61
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF189
	.byte	0x7
	.word	0xb36
	.byte	0x74
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x7
	.word	0xb38
	.byte	0x18
	.long	0x25289
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "dxdy\0"
	.byte	0x7
	.word	0xb39
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19c4e
	.uleb128 0x1c
	.ascii "stbtt__hheap_cleanup\0"
	.byte	0x7
	.word	0xafa
	.byte	0xd
	.long	LFB2058
	.long	LFE2058-LFB2058
	.uleb128 0x1
	.byte	0x9c
	.long	0x256fd
	.uleb128 0x3
	.ascii "hh\0"
	.byte	0x7
	.word	0xafa
	.byte	0x30
	.long	0x25689
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF189
	.byte	0x7
	.word	0xafa
	.byte	0x3a
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x7
	.word	0xafc
	.byte	0x18
	.long	0x256fd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB610
	.long	LBE610-LBB610
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x7
	.word	0xafe
	.byte	0x1b
	.long	0x256fd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19be8
	.uleb128 0x38
	.ascii "stbtt__hheap_free\0"
	.byte	0x7
	.word	0xaf4
	.byte	0xd
	.long	LFB2057
	.long	LFE2057-LFB2057
	.uleb128 0x1
	.byte	0x9c
	.long	0x25746
	.uleb128 0x3
	.ascii "hh\0"
	.byte	0x7
	.word	0xaf4
	.byte	0x2d
	.long	0x25689
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "p\0"
	.byte	0x7
	.word	0xaf4
	.byte	0x37
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__hheap_alloc\0"
	.byte	0x7
	.word	0xadf
	.byte	0xe
	.long	0x7aa
	.long	LFB2056
	.long	LFE2056-LFB2056
	.uleb128 0x1
	.byte	0x9c
	.long	0x257e4
	.uleb128 0x3
	.ascii "hh\0"
	.byte	0x7
	.word	0xadf
	.byte	0x2f
	.long	0x25689
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF47
	.byte	0x7
	.word	0xadf
	.byte	0x3a
	.long	0xd5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF189
	.byte	0x7
	.word	0xadf
	.byte	0x46
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0xf
	.long	LBB606
	.long	LBE606-LBB606
	.long	0x257bb
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x7
	.word	0xae2
	.byte	0xd
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x9
	.long	LBB609
	.long	LBE609-LBB609
	.uleb128 0x7
	.secrel32	LASF279
	.byte	0x7
	.word	0xae7
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x7
	.word	0xae8
	.byte	0x1e
	.long	0x256fd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_GetCodepointBitmapBox\0"
	.byte	0x7
	.word	0xaca
	.byte	0x10
	.long	LFB2055
	.long	LFE2055-LFB2055
	.uleb128 0x1
	.byte	0x9c
	.long	0x25894
	.uleb128 0x4
	.secrel32	LASF311
	.byte	0x7
	.word	0xaca
	.byte	0x42
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF312
	.byte	0x7
	.word	0xaca
	.byte	0x4c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xaca
	.byte	0x5d
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xaca
	.byte	0x6c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "ix0\0"
	.byte	0x7
	.word	0xaca
	.byte	0x7a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "iy0\0"
	.byte	0x7
	.word	0xaca
	.byte	0x84
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "ix1\0"
	.byte	0x7
	.word	0xaca
	.byte	0x8e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "iy1\0"
	.byte	0x7
	.word	0xaca
	.byte	0x98
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_GetCodepointBitmapBoxSubpixel\0"
	.byte	0x7
	.word	0xac5
	.byte	0x10
	.long	LFB2054
	.long	LFE2054-LFB2054
	.uleb128 0x1
	.byte	0x9c
	.long	0x2596c
	.uleb128 0x4
	.secrel32	LASF311
	.byte	0x7
	.word	0xac5
	.byte	0x4a
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF312
	.byte	0x7
	.word	0xac5
	.byte	0x54
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xac5
	.byte	0x65
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xac5
	.byte	0x74
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF330
	.byte	0x7
	.word	0xac5
	.byte	0x83
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF331
	.byte	0x7
	.word	0xac5
	.byte	0x92
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "ix0\0"
	.byte	0x7
	.word	0xac5
	.byte	0xa0
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "iy0\0"
	.byte	0x7
	.word	0xac5
	.byte	0xaa
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x3
	.ascii "ix1\0"
	.byte	0x7
	.word	0xac5
	.byte	0xb4
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x3
	.ascii "iy1\0"
	.byte	0x7
	.word	0xac5
	.byte	0xbe
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_GetGlyphBitmapBox\0"
	.byte	0x7
	.word	0xac0
	.byte	0x10
	.long	LFB2053
	.long	LFE2053-LFB2053
	.uleb128 0x1
	.byte	0x9c
	.long	0x25a18
	.uleb128 0x4
	.secrel32	LASF311
	.byte	0x7
	.word	0xac0
	.byte	0x3e
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF315
	.byte	0x7
	.word	0xac0
	.byte	0x48
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xac0
	.byte	0x55
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xac0
	.byte	0x64
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "ix0\0"
	.byte	0x7
	.word	0xac0
	.byte	0x72
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "iy0\0"
	.byte	0x7
	.word	0xac0
	.byte	0x7c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "ix1\0"
	.byte	0x7
	.word	0xac0
	.byte	0x86
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "iy1\0"
	.byte	0x7
	.word	0xac0
	.byte	0x90
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_GetGlyphBitmapBoxSubpixel\0"
	.byte	0x7
	.word	0xaae
	.byte	0x10
	.long	LFB2052
	.long	LFE2052-LFB2052
	.uleb128 0x1
	.byte	0x9c
	.long	0x25b28
	.uleb128 0x4
	.secrel32	LASF311
	.byte	0x7
	.word	0xaae
	.byte	0x46
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF315
	.byte	0x7
	.word	0xaae
	.byte	0x50
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF316
	.byte	0x7
	.word	0xaae
	.byte	0x5d
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF317
	.byte	0x7
	.word	0xaae
	.byte	0x6c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF330
	.byte	0x7
	.word	0xaae
	.byte	0x7a
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF331
	.byte	0x7
	.word	0xaae
	.byte	0x89
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "ix0\0"
	.byte	0x7
	.word	0xaae
	.byte	0x97
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "iy0\0"
	.byte	0x7
	.word	0xaae
	.byte	0xa1
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x3
	.ascii "ix1\0"
	.byte	0x7
	.word	0xaae
	.byte	0xab
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x3
	.ascii "iy1\0"
	.byte	0x7
	.word	0xaae
	.byte	0xb5
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x1
	.ascii "x0\0"
	.byte	0x7
	.word	0xab0
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "y0\0"
	.byte	0x7
	.word	0xab0
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x7
	.word	0xab0
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "y1\0"
	.byte	0x7
	.word	0xab0
	.byte	0x15
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetCodepointSVG\0"
	.byte	0x7
	.word	0xaa4
	.byte	0xf
	.long	0xf4
	.long	LFB2051
	.long	LFE2051-LFB2051
	.uleb128 0x1
	.byte	0x9c
	.long	0x25b86
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xaa4
	.byte	0x3b
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF342
	.byte	0x7
	.word	0xaa4
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "svg\0"
	.byte	0x7
	.word	0xaa4
	.byte	0x65
	.long	0x15f2f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetGlyphSVG\0"
	.byte	0x7
	.word	0xa93
	.byte	0xf
	.long	0xf4
	.long	LFB2050
	.long	LFE2050-LFB2050
	.uleb128 0x1
	.byte	0x9c
	.long	0x25c03
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xa93
	.byte	0x37
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "gl\0"
	.byte	0x7
	.word	0xa93
	.byte	0x41
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "svg\0"
	.byte	0x7
	.word	0xa93
	.byte	0x52
	.long	0x15f2f
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x7
	.word	0xa95
	.byte	0x11
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "svg_doc\0"
	.byte	0x7
	.word	0xa96
	.byte	0x11
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x42
	.ascii "stbtt_FindSVGDoc\0"
	.byte	0x7
	.word	0xa82
	.byte	0x18
	.ascii "_Z16stbtt_FindSVGDocPK14stbtt_fontinfoi\0"
	.long	0x21c1f
	.long	LFB2049
	.long	LFE2049-LFB2049
	.uleb128 0x1
	.byte	0x9c
	.long	0x25cf4
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xa82
	.byte	0x3f
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "gl\0"
	.byte	0x7
	.word	0xa82
	.byte	0x49
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0xa84
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x7
	.word	0xa85
	.byte	0x11
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "svg_doc_list\0"
	.byte	0x7
	.word	0xa86
	.byte	0x11
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "numEntries\0"
	.byte	0x7
	.word	0xa88
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "svg_docs\0"
	.byte	0x7
	.word	0xa89
	.byte	0x11
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x9
	.long	LBB604
	.long	LBE604-LBB604
	.uleb128 0x1
	.ascii "svg_doc\0"
	.byte	0x7
	.word	0xa8c
	.byte	0x14
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_FreeShape\0"
	.byte	0x7
	.word	0xa7d
	.byte	0x10
	.long	LFB2048
	.long	LFE2048-LFB2048
	.uleb128 0x1
	.byte	0x9c
	.long	0x25d36
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xa7d
	.byte	0x36
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "v\0"
	.byte	0x7
	.word	0xa7d
	.byte	0x4a
	.long	0x19ba8
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_ScaleForMappingEmToPixels\0"
	.byte	0x7
	.word	0xa77
	.byte	0x11
	.long	0x7d5
	.long	LFB2047
	.long	LFE2047-LFB2047
	.uleb128 0x1
	.byte	0x9c
	.long	0x25da5
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xa77
	.byte	0x47
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF187
	.byte	0x7
	.word	0xa77
	.byte	0x53
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "unitsPerEm\0"
	.byte	0x7
	.word	0xa79
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_ScaleForPixelHeight\0"
	.byte	0x7
	.word	0xa71
	.byte	0x11
	.long	0x7d5
	.long	LFB2046
	.long	LFE2046-LFB2046
	.uleb128 0x1
	.byte	0x9c
	.long	0x25e0b
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xa71
	.byte	0x41
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x7
	.word	0xa71
	.byte	0x4d
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "fheight\0"
	.byte	0x7
	.word	0xa73
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_GetFontBoundingBox\0"
	.byte	0x7
	.word	0xa69
	.byte	0x10
	.long	LFB2045
	.long	LFE2045-LFB2045
	.uleb128 0x1
	.byte	0x9c
	.long	0x25e84
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xa69
	.byte	0x3f
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x0\0"
	.byte	0x7
	.word	0xa69
	.byte	0x4a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y0\0"
	.byte	0x7
	.word	0xa69
	.byte	0x53
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "x1\0"
	.byte	0x7
	.word	0xa69
	.byte	0x5c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "y1\0"
	.byte	0x7
	.word	0xa69
	.byte	0x65
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetFontVMetricsOS2\0"
	.byte	0x7
	.word	0xa5e
	.byte	0x10
	.long	0xf4
	.long	LFB2044
	.long	LFE2044-LFB2044
	.uleb128 0x1
	.byte	0x9c
	.long	0x25f1c
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xa5e
	.byte	0x3f
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "typoAscent\0"
	.byte	0x7
	.word	0xa5e
	.byte	0x4a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "typoDescent\0"
	.byte	0x7
	.word	0xa5e
	.byte	0x5b
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "typoLineGap\0"
	.byte	0x7
	.word	0xa5e
	.byte	0x6d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "tab\0"
	.byte	0x7
	.word	0xa60
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_GetFontVMetrics\0"
	.byte	0x7
	.word	0xa57
	.byte	0x10
	.long	LFB2043
	.long	LFE2043-LFB2043
	.uleb128 0x1
	.byte	0x9c
	.long	0x25f8a
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xa57
	.byte	0x3c
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF218
	.byte	0x7
	.word	0xa57
	.byte	0x47
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF219
	.byte	0x7
	.word	0xa57
	.byte	0x54
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "lineGap\0"
	.byte	0x7
	.word	0xa57
	.byte	0x62
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_GetCodepointHMetrics\0"
	.byte	0x7
	.word	0xa52
	.byte	0x10
	.long	LFB2042
	.long	LFE2042-LFB2042
	.uleb128 0x1
	.byte	0x9c
	.long	0x25ff9
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xa52
	.byte	0x41
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF312
	.byte	0x7
	.word	0xa52
	.byte	0x4b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF343
	.byte	0x7
	.word	0xa52
	.byte	0x5b
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF344
	.byte	0x7
	.word	0xa52
	.byte	0x6e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetCodepointKernAdvance\0"
	.byte	0x7
	.word	0xa4b
	.byte	0x10
	.long	0xf4
	.long	LFB2041
	.long	LFE2041-LFB2041
	.uleb128 0x1
	.byte	0x9c
	.long	0x2605f
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xa4b
	.byte	0x44
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "ch1\0"
	.byte	0x7
	.word	0xa4b
	.byte	0x4e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "ch2\0"
	.byte	0x7
	.word	0xa4b
	.byte	0x57
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetGlyphKernAdvance\0"
	.byte	0x7
	.word	0xa3f
	.byte	0x10
	.long	0xf4
	.long	LFB2040
	.long	LFE2040-LFB2040
	.uleb128 0x1
	.byte	0x9c
	.long	0x260cf
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0xa3f
	.byte	0x40
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "g1\0"
	.byte	0x7
	.word	0xa3f
	.byte	0x4a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "g2\0"
	.byte	0x7
	.word	0xa3f
	.byte	0x52
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x7
	.secrel32	LASF345
	.byte	0x7
	.word	0xa41
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__GetGlyphGPOSInfoAdvance\0"
	.byte	0x7
	.word	0x9bf
	.byte	0x15
	.long	0x1928b
	.long	LFB2039
	.long	LFE2039-LFB2039
	.uleb128 0x1
	.byte	0x9c
	.long	0x26564
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x9bf
	.byte	0x4a
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF200
	.byte	0x7
	.word	0x9bf
	.byte	0x54
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF201
	.byte	0x7
	.word	0x9bf
	.byte	0x60
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "lookupListOffset\0"
	.byte	0x7
	.word	0x9c1
	.byte	0x12
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -38
	.uleb128 0x1
	.ascii "lookupList\0"
	.byte	0x7
	.word	0x9c2
	.byte	0x12
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "lookupCount\0"
	.byte	0x7
	.word	0x9c3
	.byte	0x12
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -46
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x7
	.word	0x9c4
	.byte	0x12
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x9c5
	.byte	0x11
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB583
	.long	LBE583-LBB583
	.uleb128 0x1
	.ascii "lookupOffset\0"
	.byte	0x7
	.word	0x9d3
	.byte	0x16
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "lookupTable\0"
	.byte	0x7
	.word	0x9d4
	.byte	0x16
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "lookupType\0"
	.byte	0x7
	.word	0x9d6
	.byte	0x16
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -54
	.uleb128 0x1
	.ascii "subTableCount\0"
	.byte	0x7
	.word	0x9d7
	.byte	0x16
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "subTableOffsets\0"
	.byte	0x7
	.word	0x9d8
	.byte	0x16
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x4b
	.secrel32	Ldebug_ranges0+0xc0
	.uleb128 0x1
	.ascii "sti\0"
	.byte	0x7
	.word	0x9db
	.byte	0x1d
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB588
	.long	LBE588-LBB588
	.uleb128 0x1
	.ascii "subtableOffset\0"
	.byte	0x7
	.word	0x9dd
	.byte	0x22
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -62
	.uleb128 0x1
	.ascii "table\0"
	.byte	0x7
	.word	0x9de
	.byte	0x22
	.long	0x21c1f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "posFormat\0"
	.byte	0x7
	.word	0x9df
	.byte	0x22
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -70
	.uleb128 0x1
	.ascii "coverageOffset\0"
	.byte	0x7
	.word	0x9e0
	.byte	0x22
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "coverageIndex\0"
	.byte	0x7
	.word	0x9e1
	.byte	0x21
	.long	0x1928b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0xf
	.long	LBB591
	.long	LBE591-LBB591
	.long	0x26445
	.uleb128 0x1
	.ascii "l\0"
	.byte	0x7
	.word	0x9e6
	.byte	0x29
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x7
	.word	0x9e6
	.byte	0x2c
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x7
	.word	0x9e6
	.byte	0x2f
	.long	0x1928b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "straw\0"
	.byte	0x7
	.word	0x9e7
	.byte	0x21
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x7
	.secrel32	LASF346
	.byte	0x7
	.word	0x9e7
	.byte	0x28
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x7
	.secrel32	LASF347
	.byte	0x7
	.word	0x9e8
	.byte	0x2a
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -78
	.uleb128 0x7
	.secrel32	LASF348
	.byte	0x7
	.word	0x9e9
	.byte	0x2a
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "valueRecordPairSizeInBytes\0"
	.byte	0x7
	.word	0x9ea
	.byte	0x29
	.long	0x1928b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "pairSetCount\0"
	.byte	0x7
	.word	0x9eb
	.byte	0x2a
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -86
	.uleb128 0x1
	.ascii "pairPosOffset\0"
	.byte	0x7
	.word	0x9ec
	.byte	0x2a
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "pairValueTable\0"
	.byte	0x7
	.word	0x9ed
	.byte	0x2a
	.long	0x21c1f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "pairValueCount\0"
	.byte	0x7
	.word	0x9ee
	.byte	0x2a
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -94
	.uleb128 0x1
	.ascii "pairValueArray\0"
	.byte	0x7
	.word	0x9ef
	.byte	0x2a
	.long	0x21c1f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x9
	.long	LBB592
	.long	LBE592-LBB592
	.uleb128 0x1
	.ascii "secondGlyph\0"
	.byte	0x7
	.word	0x9ff
	.byte	0x2e
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -114
	.uleb128 0x1
	.ascii "pairValue\0"
	.byte	0x7
	.word	0xa00
	.byte	0x2e
	.long	0x21c1f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x9
	.long	LBB596
	.long	LBE596-LBB596
	.uleb128 0x7
	.secrel32	LASF345
	.byte	0x7
	.word	0xa0a
	.byte	0x31
	.long	0x19260
	.uleb128 0x3
	.byte	0x91
	.sleb128 -122
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB597
	.long	LBE597-LBB597
	.uleb128 0x7
	.secrel32	LASF347
	.byte	0x7
	.word	0xa11
	.byte	0x2a
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x7
	.secrel32	LASF348
	.byte	0x7
	.word	0xa12
	.byte	0x2a
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -126
	.uleb128 0x1
	.ascii "classDef1Offset\0"
	.byte	0x7
	.word	0xa14
	.byte	0x2a
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x1
	.ascii "classDef2Offset\0"
	.byte	0x7
	.word	0xa15
	.byte	0x2a
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -130
	.uleb128 0x1
	.ascii "glyph1class\0"
	.byte	0x7
	.word	0xa16
	.byte	0x21
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x1
	.ascii "glyph2class\0"
	.byte	0x7
	.word	0xa17
	.byte	0x21
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x1
	.ascii "class1Count\0"
	.byte	0x7
	.word	0xa19
	.byte	0x2a
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -142
	.uleb128 0x1
	.ascii "class2Count\0"
	.byte	0x7
	.word	0xa1a
	.byte	0x2a
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x9
	.long	LBB599
	.long	LBE599-LBB599
	.uleb128 0x1
	.ascii "class1Records\0"
	.byte	0x7
	.word	0xa25
	.byte	0x2e
	.long	0x21c1f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x1
	.ascii "class2Records\0"
	.byte	0x7
	.word	0xa26
	.byte	0x2e
	.long	0x21c1f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x7
	.secrel32	LASF345
	.byte	0x7
	.word	0xa27
	.byte	0x2d
	.long	0x19260
	.uleb128 0x3
	.byte	0x91
	.sleb128 -154
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__GetGlyphClass\0"
	.byte	0x7
	.word	0x98b
	.byte	0x15
	.long	0x1928b
	.long	LFB2038
	.long	LFE2038-LFB2038
	.uleb128 0x1
	.byte	0x9c
	.long	0x266f2
	.uleb128 0x3
	.ascii "classDefTable\0"
	.byte	0x7
	.word	0x98b
	.byte	0x37
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF315
	.byte	0x7
	.word	0x98b
	.byte	0x4a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "classDefFormat\0"
	.byte	0x7
	.word	0x98d
	.byte	0x12
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0xf
	.long	LBB579
	.long	LBE579-LBB579
	.long	0x2662c
	.uleb128 0x1
	.ascii "startGlyphID\0"
	.byte	0x7
	.word	0x991
	.byte	0x1a
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF349
	.byte	0x7
	.word	0x992
	.byte	0x1a
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -30
	.uleb128 0x1
	.ascii "classDef1ValueArray\0"
	.byte	0x7
	.word	0x993
	.byte	0x1a
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x9
	.long	LBB580
	.long	LBE580-LBB580
	.uleb128 0x1
	.ascii "classRangeCount\0"
	.byte	0x7
	.word	0x99c
	.byte	0x1a
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -38
	.uleb128 0x1
	.ascii "classRangeRecords\0"
	.byte	0x7
	.word	0x99d
	.byte	0x1a
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "l\0"
	.byte	0x7
	.word	0x9a0
	.byte	0x19
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x7
	.word	0x9a0
	.byte	0x1e
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x7
	.word	0x9a0
	.byte	0x33
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x7
	.secrel32	LASF350
	.byte	0x7
	.word	0x9a1
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x7
	.secrel32	LASF351
	.byte	0x7
	.word	0x9a1
	.byte	0x1d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x7
	.secrel32	LASF346
	.byte	0x7
	.word	0x9a1
	.byte	0x27
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x9
	.long	LBB581
	.long	LBE581-LBB581
	.uleb128 0x1
	.ascii "classRangeRecord\0"
	.byte	0x7
	.word	0x9a3
	.byte	0x1e
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__GetCoverageIndex\0"
	.byte	0x7
	.word	0x950
	.byte	0x15
	.long	0x1928b
	.long	LFB2037
	.long	LFE2037-LFB2037
	.uleb128 0x1
	.byte	0x9c
	.long	0x268e9
	.uleb128 0x3
	.ascii "coverageTable\0"
	.byte	0x7
	.word	0x950
	.byte	0x3a
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF315
	.byte	0x7
	.word	0x950
	.byte	0x4d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "coverageFormat\0"
	.byte	0x7
	.word	0x952
	.byte	0x12
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -34
	.uleb128 0xf
	.long	LBB569
	.long	LBE569-LBB569
	.long	0x26805
	.uleb128 0x7
	.secrel32	LASF349
	.byte	0x7
	.word	0x955
	.byte	0x1a
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "l\0"
	.byte	0x7
	.word	0x958
	.byte	0x19
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x7
	.word	0x958
	.byte	0x1e
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x7
	.word	0x958
	.byte	0x2e
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "straw\0"
	.byte	0x7
	.word	0x959
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x7
	.secrel32	LASF346
	.byte	0x7
	.word	0x959
	.byte	0x18
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x9
	.long	LBB570
	.long	LBE570-LBB570
	.uleb128 0x1
	.ascii "glyphArray\0"
	.byte	0x7
	.word	0x95b
	.byte	0x1e
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "glyphID\0"
	.byte	0x7
	.word	0x95c
	.byte	0x1e
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -50
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB571
	.long	LBE571-LBB571
	.uleb128 0x1
	.ascii "rangeCount\0"
	.byte	0x7
	.word	0x96b
	.byte	0x1a
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -58
	.uleb128 0x1
	.ascii "rangeArray\0"
	.byte	0x7
	.word	0x96c
	.byte	0x1a
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "l\0"
	.byte	0x7
	.word	0x96f
	.byte	0x19
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x7
	.word	0x96f
	.byte	0x1e
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x7
	.word	0x96f
	.byte	0x2e
	.long	0x1928b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x7
	.secrel32	LASF350
	.byte	0x7
	.word	0x970
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x7
	.secrel32	LASF351
	.byte	0x7
	.word	0x970
	.byte	0x1d
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x7
	.secrel32	LASF346
	.byte	0x7
	.word	0x970
	.byte	0x27
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x9
	.long	LBB572
	.long	LBE572-LBB572
	.uleb128 0x1
	.ascii "rangeRecord\0"
	.byte	0x7
	.word	0x972
	.byte	0x1e
	.long	0x21c1f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x9
	.long	LBB576
	.long	LBE576-LBB576
	.uleb128 0x1
	.ascii "startCoverageIndex\0"
	.byte	0x7
	.word	0x97c
	.byte	0x22
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -86
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__GetGlyphKernInfoAdvance\0"
	.byte	0x7
	.word	0x932
	.byte	0xd
	.long	0xf4
	.long	LFB2036
	.long	LFE2036-LFB2036
	.uleb128 0x1
	.byte	0x9c
	.long	0x269ac
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x932
	.byte	0x42
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF200
	.byte	0x7
	.word	0x932
	.byte	0x4c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF201
	.byte	0x7
	.word	0x932
	.byte	0x58
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x7
	.word	0x934
	.byte	0x11
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF346
	.byte	0x7
	.word	0x935
	.byte	0x11
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "straw\0"
	.byte	0x7
	.word	0x935
	.byte	0x19
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "l\0"
	.byte	0x7
	.word	0x936
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x7
	.word	0x936
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x7
	.word	0x936
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetKerningTable\0"
	.byte	0x7
	.word	0x917
	.byte	0xf
	.long	0xf4
	.long	LFB2035
	.long	LFE2035-LFB2035
	.uleb128 0x1
	.byte	0x9c
	.long	0x26a43
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x917
	.byte	0x3b
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "table\0"
	.byte	0x7
	.word	0x917
	.byte	0x55
	.long	0x26a43
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "table_length\0"
	.byte	0x7
	.word	0x917
	.byte	0x60
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x7
	.word	0x919
	.byte	0x11
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x7
	.word	0x91a
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF48
	.byte	0x7
	.word	0x91a
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1988d
	.uleb128 0x18
	.ascii "stbtt_GetKerningTableLength\0"
	.byte	0x7
	.word	0x908
	.byte	0x10
	.long	0xf4
	.long	LFB2034
	.long	LFE2034-LFB2034
	.uleb128 0x1
	.byte	0x9c
	.long	0x26a9d
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x908
	.byte	0x42
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x7
	.word	0x90a
	.byte	0x11
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x2e
	.ascii "stbtt_GetGlyphHMetrics\0"
	.byte	0x7
	.word	0x8fc
	.byte	0x10
	.long	LFB2033
	.long	LFE2033-LFB2033
	.uleb128 0x1
	.byte	0x9c
	.long	0x26b28
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x8fc
	.byte	0x3d
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF352
	.byte	0x7
	.word	0x8fc
	.byte	0x47
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF343
	.byte	0x7
	.word	0x8fc
	.byte	0x59
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF344
	.byte	0x7
	.word	0x8fc
	.byte	0x6c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "numOfLongHorMetrics\0"
	.byte	0x7
	.word	0x8fe
	.byte	0x11
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -18
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetGlyphShape\0"
	.byte	0x7
	.word	0x8f4
	.byte	0xf
	.long	0xf4
	.long	LFB2032
	.long	LFE2032-LFB2032
	.uleb128 0x1
	.byte	0x9c
	.long	0x26b84
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x8f4
	.byte	0x39
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF352
	.byte	0x7
	.word	0x8f4
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF204
	.byte	0x7
	.word	0x8f4
	.byte	0x5f
	.long	0x26b84
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19ba8
	.uleb128 0xd
	.ascii "stbtt__GetGlyphInfoT2\0"
	.byte	0x7
	.word	0x8e9
	.byte	0xc
	.long	0xf4
	.long	LFB2031
	.long	LFE2031-LFB2031
	.uleb128 0x1
	.byte	0x9c
	.long	0x26c31
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x8e9
	.byte	0x38
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF352
	.byte	0x7
	.word	0x8e9
	.byte	0x42
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x0\0"
	.byte	0x7
	.word	0x8e9
	.byte	0x54
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y0\0"
	.byte	0x7
	.word	0x8e9
	.byte	0x5d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "x1\0"
	.byte	0x7
	.word	0x8e9
	.byte	0x66
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "y1\0"
	.byte	0x7
	.word	0x8e9
	.byte	0x6f
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x7
	.word	0x8eb
	.byte	0x11
	.long	0x19bae
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x7
	.word	0x8ec
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__GetGlyphShapeT2\0"
	.byte	0x7
	.word	0x8d8
	.byte	0xc
	.long	0xf4
	.long	LFB2030
	.long	LFE2030-LFB2030
	.uleb128 0x1
	.byte	0x9c
	.long	0x26cbe
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x8d8
	.byte	0x39
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF352
	.byte	0x7
	.word	0x8d8
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF204
	.byte	0x7
	.word	0x8d8
	.byte	0x5f
	.long	0x26b84
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "count_ctx\0"
	.byte	0x7
	.word	0x8db
	.byte	0x11
	.long	0x19bae
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "output_ctx\0"
	.byte	0x7
	.word	0x8dc
	.byte	0x11
	.long	0x19bae
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__run_charstring\0"
	.byte	0x7
	.word	0x7d5
	.byte	0xc
	.long	0xf4
	.long	LFB2029
	.long	LFE2029-LFB2029
	.uleb128 0x1
	.byte	0x9c
	.long	0x26f4a
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x7d5
	.byte	0x38
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF352
	.byte	0x7
	.word	0x7d5
	.byte	0x42
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x7
	.word	0x7d5
	.byte	0x5d
	.long	0x26f4a
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x6a
	.ascii "hvcurveto\0"
	.byte	0x7
	.word	0x828
	.byte	0x7
	.long	L2936
	.uleb128 0x6a
	.ascii "vlineto\0"
	.byte	0x7
	.word	0x818
	.byte	0x7
	.long	L2930
	.uleb128 0x1
	.ascii "in_header\0"
	.byte	0x7
	.word	0x7d7
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "maskbits\0"
	.byte	0x7
	.word	0x7d7
	.byte	0x17
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "subr_stack_height\0"
	.byte	0x7
	.word	0x7d7
	.byte	0x25
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "sp\0"
	.byte	0x7
	.word	0x7d7
	.byte	0x3c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x7
	.word	0x7d7
	.byte	0x44
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x7d7
	.byte	0x47
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "b0\0"
	.byte	0x7
	.word	0x7d7
	.byte	0x4a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "has_subrs\0"
	.byte	0x7
	.word	0x7d8
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "clear_stack\0"
	.byte	0x7
	.word	0x7d8
	.byte	0x17
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x7
	.word	0x7d9
	.byte	0xa
	.long	0x26f50
	.uleb128 0x3
	.byte	0x91
	.sleb128 -308
	.uleb128 0x1
	.ascii "subr_stack\0"
	.byte	0x7
	.word	0x7da
	.byte	0xf
	.long	0x26f60
	.uleb128 0x3
	.byte	0x91
	.sleb128 -428
	.uleb128 0x1
	.ascii "subrs\0"
	.byte	0x7
	.word	0x7da
	.byte	0x1f
	.long	0x192e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -440
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x7
	.word	0x7da
	.byte	0x34
	.long	0x192e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -452
	.uleb128 0x1
	.ascii "f\0"
	.byte	0x7
	.word	0x7db
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x9
	.long	LBB566
	.long	LBE566-LBB566
	.uleb128 0x1
	.ascii "dx1\0"
	.byte	0x7
	.word	0x870
	.byte	0x10
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "dx2\0"
	.byte	0x7
	.word	0x870
	.byte	0x15
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "dx3\0"
	.byte	0x7
	.word	0x870
	.byte	0x1a
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "dx4\0"
	.byte	0x7
	.word	0x870
	.byte	0x1f
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "dx5\0"
	.byte	0x7
	.word	0x870
	.byte	0x24
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "dx6\0"
	.byte	0x7
	.word	0x870
	.byte	0x29
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "dy1\0"
	.byte	0x7
	.word	0x870
	.byte	0x2e
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "dy2\0"
	.byte	0x7
	.word	0x870
	.byte	0x33
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "dy3\0"
	.byte	0x7
	.word	0x870
	.byte	0x38
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "dy4\0"
	.byte	0x7
	.word	0x870
	.byte	0x3d
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1
	.ascii "dy5\0"
	.byte	0x7
	.word	0x870
	.byte	0x42
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "dy6\0"
	.byte	0x7
	.word	0x870
	.byte	0x47
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "dx\0"
	.byte	0x7
	.word	0x871
	.byte	0x10
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1
	.ascii "dy\0"
	.byte	0x7
	.word	0x871
	.byte	0x14
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "b1\0"
	.byte	0x7
	.word	0x872
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19bae
	.uleb128 0x10
	.long	0x7d5
	.long	0x26f60
	.uleb128 0x12
	.long	0xe4
	.byte	0x2f
	.byte	0
	.uleb128 0x10
	.long	0x192e5
	.long	0x26f70
	.uleb128 0x12
	.long	0xe4
	.byte	0x9
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__cid_get_glyph_subrs\0"
	.byte	0x7
	.word	0x7b9
	.byte	0x13
	.long	0x192e5
	.long	LFB2028
	.long	LFE2028-LFB2028
	.uleb128 0x1
	.byte	0x9c
	.long	0x2704b
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x7b9
	.byte	0x44
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF352
	.byte	0x7
	.word	0x7b9
	.byte	0x4e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x7
	.secrel32	LASF193
	.byte	0x7
	.word	0x7bb
	.byte	0xf
	.long	0x192e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "nranges\0"
	.byte	0x7
	.word	0x7bc
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF339
	.byte	0x7
	.word	0x7bc
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "end\0"
	.byte	0x7
	.word	0x7bc
	.byte	0x18
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x7
	.word	0x7bc
	.byte	0x1d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "fmt\0"
	.byte	0x7
	.word	0x7bc
	.byte	0x20
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "fdselector\0"
	.byte	0x7
	.word	0x7bc
	.byte	0x25
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x7bc
	.byte	0x36
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__get_subr\0"
	.byte	0x7
	.word	0x7ab
	.byte	0x13
	.long	0x192e5
	.long	LFB2027
	.long	LFE2027-LFB2027
	.uleb128 0x1
	.byte	0x9c
	.long	0x270b2
	.uleb128 0x3
	.ascii "idx\0"
	.byte	0x7
	.word	0x7ab
	.byte	0x2e
	.long	0x192e5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x7
	.word	0x7ab
	.byte	0x37
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x7
	.secrel32	LASF279
	.byte	0x7
	.word	0x7ad
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "bias\0"
	.byte	0x7
	.word	0x7ae
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__csctx_rccurve_to\0"
	.byte	0x7
	.word	0x7a0
	.byte	0xd
	.long	LFB2026
	.long	LFE2026-LFB2026
	.uleb128 0x1
	.byte	0x9c
	.long	0x2718e
	.uleb128 0x3
	.ascii "ctx\0"
	.byte	0x7
	.word	0x7a0
	.byte	0x33
	.long	0x26f4a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "dx1\0"
	.byte	0x7
	.word	0x7a0
	.byte	0x3e
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "dy1\0"
	.byte	0x7
	.word	0x7a0
	.byte	0x49
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "dx2\0"
	.byte	0x7
	.word	0x7a0
	.byte	0x54
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "dy2\0"
	.byte	0x7
	.word	0x7a0
	.byte	0x5f
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "dx3\0"
	.byte	0x7
	.word	0x7a0
	.byte	0x6a
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "dy3\0"
	.byte	0x7
	.word	0x7a0
	.byte	0x75
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1
	.ascii "cx1\0"
	.byte	0x7
	.word	0x7a2
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "cy1\0"
	.byte	0x7
	.word	0x7a3
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "cx2\0"
	.byte	0x7
	.word	0x7a4
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "cy2\0"
	.byte	0x7
	.word	0x7a5
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__csctx_rline_to\0"
	.byte	0x7
	.word	0x799
	.byte	0xd
	.long	LFB2025
	.long	LFE2025-LFB2025
	.uleb128 0x1
	.byte	0x9c
	.long	0x271e6
	.uleb128 0x3
	.ascii "ctx\0"
	.byte	0x7
	.word	0x799
	.byte	0x31
	.long	0x26f4a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "dx\0"
	.byte	0x7
	.word	0x799
	.byte	0x3c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "dy\0"
	.byte	0x7
	.word	0x799
	.byte	0x46
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__csctx_rmove_to\0"
	.byte	0x7
	.word	0x791
	.byte	0xd
	.long	LFB2024
	.long	LFE2024-LFB2024
	.uleb128 0x1
	.byte	0x9c
	.long	0x2723e
	.uleb128 0x3
	.ascii "ctx\0"
	.byte	0x7
	.word	0x791
	.byte	0x31
	.long	0x26f4a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "dx\0"
	.byte	0x7
	.word	0x791
	.byte	0x3c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "dy\0"
	.byte	0x7
	.word	0x791
	.byte	0x46
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__csctx_close_shape\0"
	.byte	0x7
	.word	0x78b
	.byte	0xd
	.long	LFB2023
	.long	LFE2023-LFB2023
	.uleb128 0x1
	.byte	0x9c
	.long	0x2727b
	.uleb128 0x3
	.ascii "ctx\0"
	.byte	0x7
	.word	0x78b
	.byte	0x34
	.long	0x26f4a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__csctx_v\0"
	.byte	0x7
	.word	0x77b
	.byte	0xd
	.long	LFB2022
	.long	LFE2022-LFB2022
	.uleb128 0x1
	.byte	0x9c
	.long	0x27316
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x7
	.word	0x77b
	.byte	0x2a
	.long	0x26f4a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF132
	.byte	0x7
	.word	0x77b
	.byte	0x39
	.long	0x19221
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x7
	.word	0x77b
	.byte	0x4b
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x7
	.word	0x77b
	.byte	0x5a
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "cx\0"
	.byte	0x7
	.word	0x77b
	.byte	0x69
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "cy\0"
	.byte	0x7
	.word	0x77b
	.byte	0x79
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "cx1\0"
	.byte	0x7
	.word	0x77b
	.byte	0x89
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "cy1\0"
	.byte	0x7
	.word	0x77b
	.byte	0x9a
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.byte	0
	.uleb128 0x38
	.ascii "stbtt__track_vertex\0"
	.byte	0x7
	.word	0x772
	.byte	0xd
	.long	LFB2021
	.long	LFE2021-LFB2021
	.uleb128 0x1
	.byte	0x9c
	.long	0x27368
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x7
	.word	0x772
	.byte	0x2f
	.long	0x26f4a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x7
	.word	0x772
	.byte	0x3e
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x7
	.word	0x772
	.byte	0x4d
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__GetGlyphShapeTT\0"
	.byte	0x7
	.word	0x685
	.byte	0xc
	.long	0xf4
	.long	LFB2020
	.long	LFE2020-LFB2020
	.uleb128 0x1
	.byte	0x9c
	.long	0x276d9
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x685
	.byte	0x39
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF352
	.byte	0x7
	.word	0x685
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF204
	.byte	0x7
	.word	0x685
	.byte	0x5f
	.long	0x26b84
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x7
	.secrel32	LASF353
	.byte	0x7
	.word	0x687
	.byte	0x10
	.long	0x19260
	.uleb128 0x3
	.byte	0x91
	.sleb128 -102
	.uleb128 0x1
	.ascii "endPtsOfContours\0"
	.byte	0x7
	.word	0x688
	.byte	0x11
	.long	0x21c1f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x7
	.word	0x689
	.byte	0x11
	.long	0x21c1f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x7
	.secrel32	LASF334
	.byte	0x7
	.word	0x68a
	.byte	0x12
	.long	0x19ba8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF205
	.byte	0x7
	.word	0x68b
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x7
	.word	0x68c
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0xf
	.long	LBB546
	.long	LBE546-LBB546
	.long	0x275c4
	.uleb128 0x7
	.secrel32	LASF175
	.byte	0x7
	.word	0x695
	.byte	0x13
	.long	0x19221
	.uleb128 0x2
	.byte	0x91
	.sleb128 -25
	.uleb128 0x1
	.ascii "flagcount\0"
	.byte	0x7
	.word	0x695
	.byte	0x1b
	.long	0x19221
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0x1
	.ascii "ins\0"
	.byte	0x7
	.word	0x696
	.byte	0x13
	.long	0x1928b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x696
	.byte	0x18
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x7
	.word	0x696
	.byte	0x1a
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x7
	.word	0x696
	.byte	0x1e
	.long	0x1928b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x7
	.word	0x696
	.byte	0x20
	.long	0x1928b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "next_move\0"
	.byte	0x7
	.word	0x696
	.byte	0x23
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "was_off\0"
	.byte	0x7
	.word	0x696
	.byte	0x2e
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "off\0"
	.byte	0x7
	.word	0x696
	.byte	0x39
	.long	0x1928b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x7
	.secrel32	LASF354
	.byte	0x7
	.word	0x696
	.byte	0x3e
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x7
	.word	0x697
	.byte	0x13
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x7
	.word	0x697
	.byte	0x15
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "cx\0"
	.byte	0x7
	.word	0x697
	.byte	0x17
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "cy\0"
	.byte	0x7
	.word	0x697
	.byte	0x1a
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "sx\0"
	.byte	0x7
	.word	0x697
	.byte	0x1d
	.long	0x1928b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "sy\0"
	.byte	0x7
	.word	0x697
	.byte	0x20
	.long	0x1928b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "scx\0"
	.byte	0x7
	.word	0x697
	.byte	0x24
	.long	0x1928b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "scy\0"
	.byte	0x7
	.word	0x697
	.byte	0x28
	.long	0x1928b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x7
	.secrel32	LASF336
	.byte	0x7
	.word	0x698
	.byte	0x14
	.long	0x21c1f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0xf
	.long	LBB550
	.long	LBE550-LBB550
	.long	0x275a9
	.uleb128 0x1
	.ascii "dx\0"
	.byte	0x7
	.word	0x6be
	.byte	0x19
	.long	0x19260
	.uleb128 0x3
	.byte	0x91
	.sleb128 -126
	.byte	0
	.uleb128 0x9
	.long	LBB554
	.long	LBE554-LBB554
	.uleb128 0x1
	.ascii "dy\0"
	.byte	0x7
	.word	0x6ce
	.byte	0x19
	.long	0x19260
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB557
	.long	LBE557-LBB557
	.uleb128 0x1
	.ascii "more\0"
	.byte	0x7
	.word	0x711
	.byte	0xb
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x7
	.secrel32	LASF355
	.byte	0x7
	.word	0x712
	.byte	0x14
	.long	0x21c1f
	.uleb128 0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x9
	.long	LBB558
	.long	LBE558-LBB558
	.uleb128 0x7
	.secrel32	LASF175
	.byte	0x7
	.word	0x716
	.byte	0x17
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -138
	.uleb128 0x1
	.ascii "gidx\0"
	.byte	0x7
	.word	0x716
	.byte	0x1e
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x1
	.ascii "comp_num_verts\0"
	.byte	0x7
	.word	0x717
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x717
	.byte	0x22
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "comp_verts\0"
	.byte	0x7
	.word	0x718
	.byte	0x18
	.long	0x19ba8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -164
	.uleb128 0x1
	.ascii "tmp\0"
	.byte	0x7
	.word	0x718
	.byte	0x29
	.long	0x19ba8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x1
	.ascii "mtx\0"
	.byte	0x7
	.word	0x719
	.byte	0x10
	.long	0x276d9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x7
	.word	0x719
	.byte	0x28
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x7
	.word	0x719
	.byte	0x2b
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x9
	.long	LBB562
	.long	LBE562-LBB562
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x7
	.word	0x742
	.byte	0x1e
	.long	0x19ba8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x7
	.word	0x743
	.byte	0x22
	.long	0x941
	.uleb128 0x3
	.byte	0x91
	.sleb128 -154
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x7
	.word	0x743
	.byte	0x24
	.long	0x941
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x7d5
	.long	0x276e9
	.uleb128 0x12
	.long	0xe4
	.byte	0x5
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__close_shape\0"
	.byte	0x7
	.word	0x675
	.byte	0xc
	.long	0xf4
	.long	LFB2019
	.long	LFE2019-LFB2019
	.uleb128 0x1
	.byte	0x9c
	.long	0x277b4
	.uleb128 0x4
	.secrel32	LASF334
	.byte	0x7
	.word	0x675
	.byte	0x2d
	.long	0x19ba8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF205
	.byte	0x7
	.word	0x675
	.byte	0x3b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "was_off\0"
	.byte	0x7
	.word	0x675
	.byte	0x4d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF354
	.byte	0x7
	.word	0x675
	.byte	0x5a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "sx\0"
	.byte	0x7
	.word	0x676
	.byte	0x11
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "sy\0"
	.byte	0x7
	.word	0x676
	.byte	0x21
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "scx\0"
	.byte	0x7
	.word	0x676
	.byte	0x31
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "scy\0"
	.byte	0x7
	.word	0x676
	.byte	0x42
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x3
	.ascii "cx\0"
	.byte	0x7
	.word	0x676
	.byte	0x53
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x3
	.ascii "cy\0"
	.byte	0x7
	.word	0x676
	.byte	0x63
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_IsGlyphEmpty\0"
	.byte	0x7
	.word	0x669
	.byte	0xf
	.long	0xf4
	.long	LFB2018
	.long	LFE2018-LFB2018
	.uleb128 0x1
	.byte	0x9c
	.long	0x2781d
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x669
	.byte	0x38
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF352
	.byte	0x7
	.word	0x669
	.byte	0x42
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x7
	.secrel32	LASF353
	.byte	0x7
	.word	0x66b
	.byte	0x10
	.long	0x19260
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x7
	.word	0x66c
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetCodepointBox\0"
	.byte	0x7
	.word	0x664
	.byte	0xf
	.long	0xf4
	.long	LFB2017
	.long	LFE2017-LFB2017
	.uleb128 0x1
	.byte	0x9c
	.long	0x278a7
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x664
	.byte	0x3b
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF312
	.byte	0x7
	.word	0x664
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x0\0"
	.byte	0x7
	.word	0x664
	.byte	0x55
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y0\0"
	.byte	0x7
	.word	0x664
	.byte	0x5e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "x1\0"
	.byte	0x7
	.word	0x664
	.byte	0x67
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "y1\0"
	.byte	0x7
	.word	0x664
	.byte	0x70
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetGlyphBox\0"
	.byte	0x7
	.word	0x654
	.byte	0xf
	.long	0xf4
	.long	LFB2016
	.long	LFE2016-LFB2016
	.uleb128 0x1
	.byte	0x9c
	.long	0x27945
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x654
	.byte	0x37
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF352
	.byte	0x7
	.word	0x654
	.byte	0x41
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x0\0"
	.byte	0x7
	.word	0x654
	.byte	0x53
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y0\0"
	.byte	0x7
	.word	0x654
	.byte	0x5c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "x1\0"
	.byte	0x7
	.word	0x654
	.byte	0x65
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "y1\0"
	.byte	0x7
	.word	0x654
	.byte	0x6e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x9
	.long	LBB544
	.long	LBE544-LBB544
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x7
	.word	0x659
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__GetGlyfOffset\0"
	.byte	0x7
	.word	0x63e
	.byte	0xc
	.long	0xf4
	.long	LFB2015
	.long	LFE2015-LFB2015
	.uleb128 0x1
	.byte	0x9c
	.long	0x279b0
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x63e
	.byte	0x37
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF352
	.byte	0x7
	.word	0x63e
	.byte	0x41
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "g1\0"
	.byte	0x7
	.word	0x640
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "g2\0"
	.byte	0x7
	.word	0x640
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x38
	.ascii "stbtt_setvertex\0"
	.byte	0x7
	.word	0x635
	.byte	0xd
	.long	LFB2014
	.long	LFE2014-LFB2014
	.uleb128 0x1
	.byte	0x9c
	.long	0x27a2c
	.uleb128 0x3
	.ascii "v\0"
	.byte	0x7
	.word	0x635
	.byte	0x2b
	.long	0x19ba8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF132
	.byte	0x7
	.word	0x635
	.byte	0x3a
	.long	0x19221
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x7
	.word	0x635
	.byte	0x4c
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x7
	.word	0x635
	.byte	0x5b
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "cx\0"
	.byte	0x7
	.word	0x635
	.byte	0x6a
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "cy\0"
	.byte	0x7
	.word	0x635
	.byte	0x7a
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_GetCodepointShape\0"
	.byte	0x7
	.word	0x630
	.byte	0xf
	.long	0xf4
	.long	LFB2013
	.long	LFE2013-LFB2013
	.uleb128 0x1
	.byte	0x9c
	.long	0x27a8c
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x630
	.byte	0x3d
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF342
	.byte	0x7
	.word	0x630
	.byte	0x47
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF334
	.byte	0x7
	.word	0x630
	.byte	0x69
	.long	0x26b84
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x18
	.ascii "stbtt_FindGlyphIndex\0"
	.byte	0x7
	.word	0x5d3
	.byte	0xf
	.long	0xf4
	.long	LFB2012
	.long	LFE2012-LFB2012
	.uleb128 0x1
	.byte	0x9c
	.long	0x27cf5
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x5d3
	.byte	0x3a
	.long	0x21eb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF342
	.byte	0x7
	.word	0x5d3
	.byte	0x44
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x7
	.word	0x5d5
	.byte	0x11
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF191
	.byte	0x7
	.word	0x5d6
	.byte	0x11
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "format\0"
	.byte	0x7
	.word	0x5d8
	.byte	0x11
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -42
	.uleb128 0xf
	.long	LBB524
	.long	LBE524-LBB524
	.long	0x27b29
	.uleb128 0x7
	.secrel32	LASF356
	.byte	0x7
	.word	0x5da
	.byte	0x13
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0xf
	.long	LBB527
	.long	LBE527-LBB527
	.long	0x27b57
	.uleb128 0x7
	.secrel32	LASF174
	.byte	0x7
	.word	0x5df
	.byte	0x14
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x7
	.secrel32	LASF279
	.byte	0x7
	.word	0x5e0
	.byte	0x14
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0xf
	.long	LBB532
	.long	LBE532-LBB532
	.long	0x27c48
	.uleb128 0x1
	.ascii "segcount\0"
	.byte	0x7
	.word	0x5e8
	.byte	0x14
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -58
	.uleb128 0x1
	.ascii "searchRange\0"
	.byte	0x7
	.word	0x5e9
	.byte	0x14
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -18
	.uleb128 0x1
	.ascii "entrySelector\0"
	.byte	0x7
	.word	0x5ea
	.byte	0x14
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "rangeShift\0"
	.byte	0x7
	.word	0x5eb
	.byte	0x14
	.long	0x1924a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "endCount\0"
	.byte	0x7
	.word	0x5ee
	.byte	0x14
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "search\0"
	.byte	0x7
	.word	0x5ef
	.byte	0x14
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0xf
	.long	LBB533
	.long	LBE533-LBB533
	.long	0x27c09
	.uleb128 0x1
	.ascii "end\0"
	.byte	0x7
	.word	0x5fc
	.byte	0x17
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -66
	.byte	0
	.uleb128 0x9
	.long	LBB534
	.long	LBE534-LBB534
	.uleb128 0x7
	.secrel32	LASF172
	.byte	0x7
	.word	0x606
	.byte	0x17
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x7
	.secrel32	LASF339
	.byte	0x7
	.word	0x606
	.byte	0x1f
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -70
	.uleb128 0x1
	.ascii "item\0"
	.byte	0x7
	.word	0x607
	.byte	0x17
	.long	0x1924a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB537
	.long	LBE537-LBB537
	.uleb128 0x1
	.ascii "ngroups\0"
	.byte	0x7
	.word	0x615
	.byte	0x14
	.long	0x19275
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "low\0"
	.byte	0x7
	.word	0x616
	.byte	0x13
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "high\0"
	.byte	0x7
	.word	0x616
	.byte	0x17
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB538
	.long	LBE538-LBB538
	.uleb128 0x1
	.ascii "mid\0"
	.byte	0x7
	.word	0x61a
	.byte	0x16
	.long	0x1928b
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "start_char\0"
	.byte	0x7
	.word	0x61b
	.byte	0x17
	.long	0x19275
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "end_char\0"
	.byte	0x7
	.word	0x61c
	.byte	0x17
	.long	0x19275
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x9
	.long	LBB542
	.long	LBE542-LBB542
	.uleb128 0x1
	.ascii "start_glyph\0"
	.byte	0x7
	.word	0x622
	.byte	0x1a
	.long	0x19275
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt_InitFont_internal\0"
	.byte	0x7
	.word	0x562
	.byte	0xc
	.long	0xf4
	.long	LFB2011
	.long	LFE2011-LFB2011
	.uleb128 0x1
	.byte	0x9c
	.long	0x27e6e
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x562
	.byte	0x34
	.long	0x2199a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x7
	.word	0x562
	.byte	0x49
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF190
	.byte	0x7
	.word	0x562
	.byte	0x53
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "cmap\0"
	.byte	0x7
	.word	0x564
	.byte	0x11
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x7
	.word	0x564
	.byte	0x17
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x565
	.byte	0x10
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "numTables\0"
	.byte	0x7
	.word	0x565
	.byte	0x12
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0xf
	.long	LBB520
	.long	LBE520-LBB520
	.long	0x27e47
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x7
	.word	0x57b
	.byte	0x12
	.long	0x192e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "topdict\0"
	.byte	0x7
	.word	0x57b
	.byte	0x15
	.long	0x192e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "topdictidx\0"
	.byte	0x7
	.word	0x57b
	.byte	0x1e
	.long	0x192e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "cstype\0"
	.byte	0x7
	.word	0x57c
	.byte	0x14
	.long	0x19275
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x7
	.secrel32	LASF192
	.byte	0x7
	.word	0x57c
	.byte	0x20
	.long	0x19275
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "fdarrayoff\0"
	.byte	0x7
	.word	0x57c
	.byte	0x31
	.long	0x19275
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1
	.ascii "fdselectoff\0"
	.byte	0x7
	.word	0x57c
	.byte	0x41
	.long	0x19275
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "cff\0"
	.byte	0x7
	.word	0x57d
	.byte	0x14
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x9
	.long	LBB522
	.long	LBE522-LBB522
	.uleb128 0x1
	.ascii "encoding_record\0"
	.byte	0x7
	.word	0x5b9
	.byte	0x14
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__get_svg\0"
	.byte	0x7
	.word	0x553
	.byte	0xc
	.long	0xf4
	.long	LFB2010
	.long	LFE2010-LFB2010
	.uleb128 0x1
	.byte	0x9c
	.long	0x27ecd
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x7
	.word	0x553
	.byte	0x2b
	.long	0x2199a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x7
	.word	0x555
	.byte	0x11
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB518
	.long	LBE518-LBB518
	.uleb128 0x7
	.secrel32	LASF172
	.byte	0x7
	.word	0x559
	.byte	0x17
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__get_subrs\0"
	.byte	0x7
	.word	0x545
	.byte	0x13
	.long	0x192e5
	.long	LFB2009
	.long	LFE2009-LFB2009
	.uleb128 0x1
	.byte	0x9c
	.long	0x27f5a
	.uleb128 0x3
	.ascii "cff\0"
	.byte	0x7
	.word	0x545
	.byte	0x2f
	.long	0x192e5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "fontdict\0"
	.byte	0x7
	.word	0x545
	.byte	0x3f
	.long	0x192e5
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "subrsoff\0"
	.byte	0x7
	.word	0x547
	.byte	0x11
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "private_loc\0"
	.byte	0x7
	.word	0x547
	.byte	0x1f
	.long	0x27f5a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "pdict\0"
	.byte	0x7
	.word	0x548
	.byte	0xf
	.long	0x192e5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x10
	.long	0x19275
	.long	0x27f6a
	.uleb128 0x12
	.long	0xe4
	.byte	0x1
	.byte	0
	.uleb128 0xd
	.ascii "stbtt_GetNumberOfFonts_internal\0"
	.byte	0x7
	.word	0x535
	.byte	0xc
	.long	0xf4
	.long	LFB2008
	.long	LFE2008-LFB2008
	.uleb128 0x1
	.byte	0x9c
	.long	0x27fb2
	.uleb128 0x4
	.secrel32	LASF309
	.byte	0x7
	.word	0x535
	.byte	0x3b
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt_GetFontOffsetForIndex_internal\0"
	.byte	0x7
	.word	0x522
	.byte	0xc
	.long	0xf4
	.long	LFB2007
	.long	LFE2007-LFB2007
	.uleb128 0x1
	.byte	0x9c
	.long	0x28027
	.uleb128 0x4
	.secrel32	LASF309
	.byte	0x7
	.word	0x522
	.byte	0x40
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF243
	.byte	0x7
	.word	0x522
	.byte	0x55
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x9
	.long	LBB514
	.long	LBE514-LBB514
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x7
	.word	0x52c
	.byte	0x16
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__find_table\0"
	.byte	0x7
	.word	0x515
	.byte	0x15
	.long	0x19275
	.long	LFB2006
	.long	LFE2006-LFB2006
	.uleb128 0x1
	.byte	0x9c
	.long	0x280d5
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x7
	.word	0x515
	.byte	0x34
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF190
	.byte	0x7
	.word	0x515
	.byte	0x47
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "tag\0"
	.byte	0x7
	.word	0x515
	.byte	0x5e
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "num_tables\0"
	.byte	0x7
	.word	0x517
	.byte	0x10
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "tabledir\0"
	.byte	0x7
	.word	0x518
	.byte	0x11
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x519
	.byte	0x10
	.long	0x1928b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB510
	.long	LBE510-LBB510
	.uleb128 0x1
	.ascii "loc\0"
	.byte	0x7
	.word	0x51b
	.byte	0x14
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x27
	.ascii "stbtt__isfont\0"
	.byte	0x7
	.word	0x509
	.byte	0xc
	.long	0xf4
	.long	LFB2005
	.long	LFE2005-LFB2005
	.uleb128 0x1
	.byte	0x9c
	.long	0x2810b
	.uleb128 0x4
	.secrel32	LASF311
	.byte	0x7
	.word	0x509
	.byte	0x27
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.ascii "ttLONG\0"
	.byte	0x7
	.word	0x504
	.byte	0x14
	.long	0x1928b
	.long	LFB2004
	.long	LFE2004-LFB2004
	.uleb128 0x1
	.byte	0x9c
	.long	0x28138
	.uleb128 0x3
	.ascii "p\0"
	.byte	0x7
	.word	0x504
	.byte	0x28
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.ascii "ttULONG\0"
	.byte	0x7
	.word	0x503
	.byte	0x15
	.long	0x19275
	.long	LFB2003
	.long	LFE2003-LFB2003
	.uleb128 0x1
	.byte	0x9c
	.long	0x28166
	.uleb128 0x3
	.ascii "p\0"
	.byte	0x7
	.word	0x503
	.byte	0x2a
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.ascii "ttSHORT\0"
	.byte	0x7
	.word	0x502
	.byte	0x14
	.long	0x19260
	.long	LFB2002
	.long	LFE2002-LFB2002
	.uleb128 0x1
	.byte	0x9c
	.long	0x28194
	.uleb128 0x3
	.ascii "p\0"
	.byte	0x7
	.word	0x502
	.byte	0x29
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.ascii "ttUSHORT\0"
	.byte	0x7
	.word	0x501
	.byte	0x15
	.long	0x1924a
	.long	LFB2001
	.long	LFE2001-LFB2001
	.uleb128 0x1
	.byte	0x9c
	.long	0x281c3
	.uleb128 0x3
	.ascii "p\0"
	.byte	0x7
	.word	0x501
	.byte	0x2b
	.long	0x21c1f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__cff_index_get\0"
	.byte	0x7
	.word	0x4e7
	.byte	0x13
	.long	0x192e5
	.long	LFB2000
	.long	LFE2000-LFB2000
	.uleb128 0x1
	.byte	0x9c
	.long	0x28250
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x4e7
	.byte	0x33
	.long	0x192e5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "i\0"
	.byte	0x7
	.word	0x4e7
	.byte	0x3a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x7
	.secrel32	LASF279
	.byte	0x7
	.word	0x4e9
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "offsize\0"
	.byte	0x7
	.word	0x4e9
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF339
	.byte	0x7
	.word	0x4e9
	.byte	0x18
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "end\0"
	.byte	0x7
	.word	0x4e9
	.byte	0x1f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__cff_index_count\0"
	.byte	0x7
	.word	0x4e1
	.byte	0xc
	.long	0xf4
	.long	LFB1999
	.long	LFE1999-LFB1999
	.uleb128 0x1
	.byte	0x9c
	.long	0x2828d
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x4e1
	.byte	0x2f
	.long	0x2828d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x192e5
	.uleb128 0x1c
	.ascii "stbtt__dict_get_ints\0"
	.byte	0x7
	.word	0x4d9
	.byte	0xd
	.long	LFB1998
	.long	LFE1998-LFB1998
	.uleb128 0x1
	.byte	0x9c
	.long	0x28322
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x4d9
	.byte	0x2e
	.long	0x2828d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "key\0"
	.byte	0x7
	.word	0x4d9
	.byte	0x35
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "outcount\0"
	.byte	0x7
	.word	0x4d9
	.byte	0x3e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "out\0"
	.byte	0x7
	.word	0x4d9
	.byte	0x56
	.long	0x28322
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x4db
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "operands\0"
	.byte	0x7
	.word	0x4dc
	.byte	0xf
	.long	0x192e5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x19275
	.uleb128 0xd
	.ascii "stbtt__dict_get\0"
	.byte	0x7
	.word	0x4ca
	.byte	0x13
	.long	0x192e5
	.long	LFB1997
	.long	LFE1997-LFB1997
	.uleb128 0x1
	.byte	0x9c
	.long	0x283a7
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x4ca
	.byte	0x2f
	.long	0x2828d
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "key\0"
	.byte	0x7
	.word	0x4ca
	.byte	0x36
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.long	LBB508
	.long	LBE508-LBB508
	.uleb128 0x7
	.secrel32	LASF339
	.byte	0x7
	.word	0x4ce
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "end\0"
	.byte	0x7
	.word	0x4ce
	.byte	0x1e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "op\0"
	.byte	0x7
	.word	0x4ce
	.byte	0x23
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__cff_skip_operand\0"
	.byte	0x7
	.word	0x4bb
	.byte	0xd
	.long	LFB1996
	.long	LFE1996-LFB1996
	.uleb128 0x1
	.byte	0x9c
	.long	0x283fe
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x4bb
	.byte	0x31
	.long	0x2828d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x7
	.word	0x4bc
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "b0\0"
	.byte	0x7
	.word	0x4bc
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__cff_int\0"
	.byte	0x7
	.word	0x4af
	.byte	0x15
	.long	0x19275
	.long	LFB1995
	.long	LFE1995-LFB1995
	.uleb128 0x1
	.byte	0x9c
	.long	0x28442
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x4af
	.byte	0x30
	.long	0x2828d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "b0\0"
	.byte	0x7
	.word	0x4b1
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__cff_get_index\0"
	.byte	0x7
	.word	0x4a1
	.byte	0x13
	.long	0x192e5
	.long	LFB1994
	.long	LFE1994-LFB1994
	.uleb128 0x1
	.byte	0x9c
	.long	0x284b1
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x4a1
	.byte	0x34
	.long	0x2828d
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x7
	.secrel32	LASF279
	.byte	0x7
	.word	0x4a3
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF339
	.byte	0x7
	.word	0x4a3
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "offsize\0"
	.byte	0x7
	.word	0x4a3
	.byte	0x16
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__buf_range\0"
	.byte	0x7
	.word	0x498
	.byte	0x13
	.long	0x192e5
	.long	LFB1993
	.long	LFE1993-LFB1993
	.uleb128 0x1
	.byte	0x9c
	.long	0x28513
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x498
	.byte	0x36
	.long	0x28513
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "o\0"
	.byte	0x7
	.word	0x498
	.byte	0x3d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x7
	.word	0x498
	.byte	0x44
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x7
	.word	0x49a
	.byte	0xf
	.long	0x192e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x192f9
	.uleb128 0xd
	.ascii "stbtt__new_buf\0"
	.byte	0x7
	.word	0x48b
	.byte	0x13
	.long	0x192e5
	.long	LFB1992
	.long	LFE1992-LFB1992
	.uleb128 0x1
	.byte	0x9c
	.long	0x2856d
	.uleb128 0x3
	.ascii "p\0"
	.byte	0x7
	.word	0x48b
	.byte	0x2e
	.long	0x7e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF47
	.byte	0x7
	.word	0x48b
	.byte	0x38
	.long	0xd5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x7
	.word	0x48d
	.byte	0xf
	.long	0x192e5
	.uleb128 0x3
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0
	.uleb128 0xd
	.ascii "stbtt__buf_get\0"
	.byte	0x7
	.word	0x481
	.byte	0x15
	.long	0x19275
	.long	LFB1991
	.long	LFE1991-LFB1991
	.uleb128 0x1
	.byte	0x9c
	.long	0x285cc
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x481
	.byte	0x30
	.long	0x2828d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x7
	.word	0x481
	.byte	0x37
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x7
	.word	0x483
	.byte	0x11
	.long	0x19275
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x7
	.word	0x484
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__buf_skip\0"
	.byte	0x7
	.word	0x47c
	.byte	0xd
	.long	LFB1990
	.long	LFE1990-LFB1990
	.uleb128 0x1
	.byte	0x9c
	.long	0x2860c
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x47c
	.byte	0x29
	.long	0x2828d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "o\0"
	.byte	0x7
	.word	0x47c
	.byte	0x30
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x1c
	.ascii "stbtt__buf_seek\0"
	.byte	0x7
	.word	0x476
	.byte	0xd
	.long	LFB1989
	.long	LFE1989-LFB1989
	.uleb128 0x1
	.byte	0x9c
	.long	0x2864c
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x476
	.byte	0x29
	.long	0x2828d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "o\0"
	.byte	0x7
	.word	0x476
	.byte	0x30
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x27
	.ascii "stbtt__buf_peek8\0"
	.byte	0x7
	.word	0x46f
	.byte	0x14
	.long	0x19221
	.long	LFB1988
	.long	LFE1988-LFB1988
	.uleb128 0x1
	.byte	0x9c
	.long	0x28683
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x46f
	.byte	0x31
	.long	0x2828d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.ascii "stbtt__buf_get8\0"
	.byte	0x7
	.word	0x468
	.byte	0x14
	.long	0x19221
	.long	LFB1987
	.long	LFE1987-LFB1987
	.uleb128 0x1
	.byte	0x9c
	.long	0x286b9
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x7
	.word	0x468
	.byte	0x30
	.long	0x2828d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x18
	.ascii "stbi_is_16_bit_from_callbacks\0"
	.byte	0x6
	.word	0x1d69
	.byte	0xd
	.long	0xf4
	.long	LFB1986
	.long	LFE1986-LFB1986
	.uleb128 0x1
	.byte	0x9c
	.long	0x2871c
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x6
	.word	0x1d69
	.byte	0x44
	.long	0x2871c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF357
	.byte	0x6
	.word	0x1d69
	.byte	0x4d
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x1d6b
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x17e77
	.uleb128 0x18
	.ascii "stbi_is_16_bit_from_memory\0"
	.byte	0x6
	.word	0x1d62
	.byte	0xd
	.long	0xf4
	.long	LFB1985
	.long	LFE1985-LFB1985
	.uleb128 0x1
	.byte	0x9c
	.long	0x28784
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x1d62
	.byte	0x37
	.long	0x18803
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x6
	.word	0x1d62
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x1d64
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.byte	0
	.uleb128 0x18
	.ascii "stbi_info_from_callbacks\0"
	.byte	0x6
	.word	0x1d5b
	.byte	0xd
	.long	0xf4
	.long	LFB1984
	.long	LFE1984-LFB1984
	.uleb128 0x1
	.byte	0x9c
	.long	0x2880e
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x6
	.word	0x1d5b
	.byte	0x3f
	.long	0x2871c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF357
	.byte	0x6
	.word	0x1d5b
	.byte	0x48
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1d5b
	.byte	0x53
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1d5b
	.byte	0x5b
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1d5b
	.byte	0x63
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x1d5d
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.byte	0
	.uleb128 0x18
	.ascii "stbi_info_from_memory\0"
	.byte	0x6
	.word	0x1d54
	.byte	0xd
	.long	0xf4
	.long	LFB1983
	.long	LFE1983-LFB1983
	.uleb128 0x1
	.byte	0x9c
	.long	0x28897
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x1d54
	.byte	0x32
	.long	0x18803
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x6
	.word	0x1d54
	.byte	0x3e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1d54
	.byte	0x48
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1d54
	.byte	0x50
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1d54
	.byte	0x58
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x1d56
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.byte	0
	.uleb128 0x18
	.ascii "stbi_is_16_bit_from_file\0"
	.byte	0x6
	.word	0x1d48
	.byte	0xd
	.long	0xf4
	.long	LFB1982
	.long	LFE1982-LFB1982
	.uleb128 0x1
	.byte	0x9c
	.long	0x28903
	.uleb128 0x3
	.ascii "f\0"
	.byte	0x6
	.word	0x1d48
	.byte	0x2c
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0x1d4a
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x1d4b
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x1
	.ascii "pos\0"
	.byte	0x6
	.word	0x1d4c
	.byte	0x9
	.long	0x14d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x18
	.ascii "stbi_is_16_bit\0"
	.byte	0x6
	.word	0x1d3e
	.byte	0xd
	.long	0xf4
	.long	LFB1981
	.long	LFE1981-LFB1981
	.uleb128 0x1
	.byte	0x9c
	.long	0x28958
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x6
	.word	0x1d3e
	.byte	0x28
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "f\0"
	.byte	0x6
	.word	0x1d40
	.byte	0xb
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0x1d41
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x18
	.ascii "stbi_info_from_file\0"
	.byte	0x6
	.word	0x1d33
	.byte	0xd
	.long	0xf4
	.long	LFB1980
	.long	LFE1980-LFB1980
	.uleb128 0x1
	.byte	0x9c
	.long	0x289eb
	.uleb128 0x3
	.ascii "f\0"
	.byte	0x6
	.word	0x1d33
	.byte	0x27
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1d33
	.byte	0x2f
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1d33
	.byte	0x37
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1d33
	.byte	0x3f
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0x1d35
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x1d36
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x1
	.ascii "pos\0"
	.byte	0x6
	.word	0x1d37
	.byte	0x9
	.long	0x14d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x18
	.ascii "stbi_info\0"
	.byte	0x6
	.word	0x1d29
	.byte	0xd
	.long	0xf4
	.long	LFB1979
	.long	LFE1979-LFB1979
	.uleb128 0x1
	.byte	0x9c
	.long	0x28a67
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x6
	.word	0x1d29
	.byte	0x23
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1d29
	.byte	0x32
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1d29
	.byte	0x3a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1d29
	.byte	0x42
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "f\0"
	.byte	0x6
	.word	0x1d2b
	.byte	0xb
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0x1d2c
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xd
	.ascii "stbi__is_16_main\0"
	.byte	0x6
	.word	0x1d1b
	.byte	0xc
	.long	0xf4
	.long	LFB1978
	.long	LFE1978-LFB1978
	.uleb128 0x1
	.byte	0x9c
	.long	0x28a9e
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1d1b
	.byte	0x2c
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__info_main\0"
	.byte	0x6
	.word	0x1cf1
	.byte	0xc
	.long	0xf4
	.long	LFB1977
	.long	LFE1977-LFB1977
	.uleb128 0x1
	.byte	0x9c
	.long	0x28b00
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1cf1
	.byte	0x2b
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1cf1
	.byte	0x33
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1cf1
	.byte	0x3b
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1cf1
	.byte	0x43
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.byte	0
	.uleb128 0xd
	.ascii "stbi__pnm_info\0"
	.byte	0x6
	.word	0x1cca
	.byte	0x11
	.long	0xf4
	.long	LFB1976
	.long	LFE1976-LFB1976
	.uleb128 0x1
	.byte	0x9c
	.long	0x28bac
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1cca
	.byte	0x2f
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1cca
	.byte	0x37
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1cca
	.byte	0x3f
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1cca
	.byte	0x47
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "maxv\0"
	.byte	0x6
	.word	0x1ccc
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF358
	.byte	0x6
	.word	0x1ccc
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x6
	.word	0x1ccd
	.byte	0x9
	.long	0xb8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -29
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x1ccd
	.byte	0xc
	.long	0xb8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x6
	.word	0x1ccd
	.byte	0xf
	.long	0xb8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -18
	.byte	0
	.uleb128 0xd
	.ascii "stbi__pnm_getinteger\0"
	.byte	0x6
	.word	0x1cbe
	.byte	0x11
	.long	0xf4
	.long	LFB1975
	.long	LFE1975-LFB1975
	.uleb128 0x1
	.byte	0x9c
	.long	0x28c05
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1cbe
	.byte	0x35
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x6
	.word	0x1cbe
	.byte	0x3e
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x7
	.secrel32	LASF87
	.byte	0x6
	.word	0x1cc0
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x27
	.ascii "stbi__pnm_isdigit\0"
	.byte	0x6
	.word	0x1cb9
	.byte	0x11
	.long	0xf4
	.long	LFB1974
	.long	LFE1974-LFB1974
	.uleb128 0x1
	.byte	0x9c
	.long	0x28c3d
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x6
	.word	0x1cb9
	.byte	0x28
	.long	0xb8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__pnm_skip_whitespace\0"
	.byte	0x6
	.word	0x1cab
	.byte	0x11
	.long	LFB1973
	.long	LFE1973-LFB1973
	.uleb128 0x1
	.byte	0x9c
	.long	0x28c87
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1cab
	.byte	0x3a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x6
	.word	0x1cab
	.byte	0x43
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x27
	.ascii "stbi__pnm_isspace\0"
	.byte	0x6
	.word	0x1ca6
	.byte	0x11
	.long	0xf4
	.long	LFB1972
	.long	LFE1972-LFB1972
	.uleb128 0x1
	.byte	0x9c
	.long	0x28cbf
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x6
	.word	0x1ca6
	.byte	0x28
	.long	0xb8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0xd
	.ascii "stbi__pnm_load\0"
	.byte	0x6
	.word	0x1c89
	.byte	0xe
	.long	0x7aa
	.long	LFB1971
	.long	LFE1971-LFB1971
	.uleb128 0x1
	.byte	0x9c
	.long	0x28d4f
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1c89
	.byte	0x2c
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1c89
	.byte	0x34
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1c89
	.byte	0x3c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1c89
	.byte	0x44
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x1c89
	.byte	0x4e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ri\0"
	.byte	0x6
	.word	0x1c89
	.byte	0x6b
	.long	0x28d4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "out\0"
	.byte	0x6
	.word	0x1c8b
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x18119
	.uleb128 0xd
	.ascii "stbi__pnm_test\0"
	.byte	0x6
	.word	0x1c7d
	.byte	0x11
	.long	0xf4
	.long	LFB1970
	.long	LFE1970-LFB1970
	.uleb128 0x1
	.byte	0x9c
	.long	0x28da6
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1c7d
	.byte	0x2f
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x1c7f
	.byte	0x9
	.long	0xb8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x6
	.word	0x1c7f
	.byte	0xc
	.long	0xb8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -18
	.byte	0
	.uleb128 0xd
	.ascii "stbi__pic_info\0"
	.byte	0x6
	.word	0x1c35
	.byte	0xc
	.long	0xf4
	.long	LFB1969
	.long	LFE1969-LFB1969
	.uleb128 0x1
	.byte	0x9c
	.long	0x28e7a
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1c35
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1c35
	.byte	0x32
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1c35
	.byte	0x3a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1c35
	.byte	0x42
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x7
	.secrel32	LASF360
	.byte	0x6
	.word	0x1c37
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF361
	.byte	0x6
	.word	0x1c37
	.byte	0x13
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "chained\0"
	.byte	0x6
	.word	0x1c37
	.byte	0x21
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x7
	.secrel32	LASF358
	.byte	0x6
	.word	0x1c37
	.byte	0x29
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "packets\0"
	.byte	0x6
	.word	0x1c38
	.byte	0x15
	.long	0x28e7a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -66
	.uleb128 0x9
	.long	LBB507
	.long	LBE507-LBB507
	.uleb128 0x7
	.secrel32	LASF362
	.byte	0x6
	.word	0x1c53
	.byte	0x19
	.long	0x28e8a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x18fa9
	.long	0x28e8a
	.uleb128 0x12
	.long	0xe4
	.byte	0x9
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x18fa9
	.uleb128 0xd
	.ascii "stbi__psd_is16\0"
	.byte	0x6
	.word	0x1c18
	.byte	0xc
	.long	0xf4
	.long	LFB1968
	.long	LFE1968-LFB1968
	.uleb128 0x1
	.byte	0x9c
	.long	0x28ee5
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1c18
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7
	.secrel32	LASF363
	.byte	0x6
	.word	0x1c1a
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF171
	.byte	0x6
	.word	0x1c1a
	.byte	0x16
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xd
	.ascii "stbi__psd_info\0"
	.byte	0x6
	.word	0x1bf5
	.byte	0xc
	.long	0xf4
	.long	LFB1967
	.long	LFE1967-LFB1967
	.uleb128 0x1
	.byte	0x9c
	.long	0x28f76
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1bf5
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1bf5
	.byte	0x32
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1bf5
	.byte	0x3a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1bf5
	.byte	0x42
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x7
	.secrel32	LASF363
	.byte	0x6
	.word	0x1bf7
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF358
	.byte	0x6
	.word	0x1bf7
	.byte	0x16
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF171
	.byte	0x6
	.word	0x1bf7
	.byte	0x1d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xd
	.ascii "stbi__bmp_info\0"
	.byte	0x6
	.word	0x1bde
	.byte	0xc
	.long	0xf4
	.long	LFB1966
	.long	LFE1966-LFB1966
	.uleb128 0x1
	.byte	0x9c
	.long	0x28ff5
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1bde
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1bde
	.byte	0x32
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1bde
	.byte	0x3a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1bde
	.byte	0x42
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x1be0
	.byte	0xa
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF220
	.byte	0x6
	.word	0x1be1
	.byte	0x13
	.long	0x18f49
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0xd
	.ascii "stbi__hdr_info\0"
	.byte	0x6
	.word	0x1bb0
	.byte	0xc
	.long	0xf4
	.long	LFB1965
	.long	LFE1965-LFB1965
	.uleb128 0x1
	.byte	0x9c
	.long	0x2909d
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1bb0
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1bb0
	.byte	0x32
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1bb0
	.byte	0x3a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1bb0
	.byte	0x42
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x7
	.secrel32	LASF164
	.byte	0x6
	.word	0x1bb2
	.byte	0x9
	.long	0x2909d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1044
	.uleb128 0x1
	.ascii "token\0"
	.byte	0x6
	.word	0x1bb3
	.byte	0xa
	.long	0x461
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1048
	.uleb128 0x1
	.ascii "valid\0"
	.byte	0x6
	.word	0x1bb4
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF358
	.byte	0x6
	.word	0x1bb5
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1052
	.byte	0
	.uleb128 0x10
	.long	0xb8
	.long	0x290ae
	.uleb128 0x3a
	.long	0xe4
	.word	0x3ff
	.byte	0
	.uleb128 0xd
	.ascii "stbi__hdr_load\0"
	.byte	0x6
	.word	0x1b2d
	.byte	0xf
	.long	0x16fa3
	.long	LFB1964
	.long	LFE1964-LFB1964
	.uleb128 0x1
	.byte	0x9c
	.long	0x292bc
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1b2d
	.byte	0x2d
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1b2d
	.byte	0x35
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1b2d
	.byte	0x3d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1b2d
	.byte	0x45
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x1b2d
	.byte	0x4f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ri\0"
	.byte	0x6
	.word	0x1b2d
	.byte	0x6c
	.long	0x28d4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x6a
	.ascii "main_decode_loop\0"
	.byte	0x6
	.word	0x1b6c
	.byte	0xc
	.long	L2414
	.uleb128 0x7
	.secrel32	LASF164
	.byte	0x6
	.word	0x1b2f
	.byte	0x9
	.long	0x2909d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1098
	.uleb128 0x1
	.ascii "token\0"
	.byte	0x6
	.word	0x1b30
	.byte	0xa
	.long	0x461
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1104
	.uleb128 0x1
	.ascii "valid\0"
	.byte	0x6
	.word	0x1b31
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF181
	.byte	0x6
	.word	0x1b32
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x7
	.secrel32	LASF182
	.byte	0x6
	.word	0x1b32
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x7
	.secrel32	LASF341
	.byte	0x6
	.word	0x1b33
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF364
	.byte	0x6
	.word	0x1b34
	.byte	0xb
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x6
	.word	0x1b35
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x7
	.secrel32	LASF279
	.byte	0x6
	.word	0x1b36
	.byte	0x12
	.long	0x697
	.uleb128 0x3
	.byte	0x91
	.sleb128 -73
	.uleb128 0x7
	.secrel32	LASF87
	.byte	0x6
	.word	0x1b36
	.byte	0x19
	.long	0x697
	.uleb128 0x3
	.byte	0x91
	.sleb128 -74
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x1b37
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0x1b37
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x1b37
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "c1\0"
	.byte	0x6
	.word	0x1b37
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "c2\0"
	.byte	0x6
	.word	0x1b37
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x6
	.word	0x1b37
	.byte	0x18
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "headerToken\0"
	.byte	0x6
	.word	0x1b38
	.byte	0x10
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0xf
	.long	LBB499
	.long	LBE499-LBB499
	.long	0x2927e
	.uleb128 0x1
	.ascii "rgbe\0"
	.byte	0x6
	.word	0x1b6b
	.byte	0x15
	.long	0x292bc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1108
	.byte	0
	.uleb128 0xf
	.long	LBB504
	.long	LBE504-LBB504
	.long	0x2929e
	.uleb128 0x1
	.ascii "rgbe\0"
	.byte	0x6
	.word	0x1b7c
	.byte	0x15
	.long	0x292bc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1112
	.byte	0
	.uleb128 0x9
	.long	LBB506
	.long	LBE506-LBB506
	.uleb128 0x1
	.ascii "nleft\0"
	.byte	0x6
	.word	0x1b93
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x17da0
	.long	0x292cc
	.uleb128 0x12
	.long	0xe4
	.byte	0x3
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__hdr_convert\0"
	.byte	0x6
	.word	0x1b12
	.byte	0xd
	.long	LFB1963
	.long	LFE1963-LFB1963
	.uleb128 0x1
	.byte	0x9c
	.long	0x2933d
	.uleb128 0x4
	.secrel32	LASF326
	.byte	0x6
	.word	0x1b12
	.byte	0x26
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "input\0"
	.byte	0x6
	.word	0x1b12
	.byte	0x37
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x1b12
	.byte	0x42
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.long	LBB492
	.long	LBE492-LBB492
	.uleb128 0x1
	.ascii "f1\0"
	.byte	0x6
	.word	0x1b15
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__hdr_gettoken\0"
	.byte	0x6
	.word	0x1afc
	.byte	0xe
	.long	0x461
	.long	LFB1962
	.long	LFE1962-LFB1962
	.uleb128 0x1
	.byte	0x9c
	.long	0x293a4
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0x1afc
	.byte	0x30
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x1afc
	.byte	0x39
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x6
	.word	0x1afe
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x6
	.word	0x1aff
	.byte	0x9
	.long	0xb8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -21
	.byte	0
	.uleb128 0xd
	.ascii "stbi__hdr_test\0"
	.byte	0x6
	.word	0x1af0
	.byte	0xc
	.long	0xf4
	.long	LFB1961
	.long	LFE1961-LFB1961
	.uleb128 0x1
	.byte	0x9c
	.long	0x293e7
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1af0
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0x1af2
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__hdr_test_core\0"
	.byte	0x6
	.word	0x1ae6
	.byte	0xc
	.long	0xf4
	.long	LFB1960
	.long	LFE1960-LFB1960
	.uleb128 0x1
	.byte	0x9c
	.long	0x29445
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1ae6
	.byte	0x2f
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "signature\0"
	.byte	0x6
	.word	0x1ae6
	.byte	0x3e
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x1ae8
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__gif_info\0"
	.byte	0x6
	.word	0x1adc
	.byte	0xc
	.long	0xf4
	.long	LFB1959
	.long	LFE1959-LFB1959
	.uleb128 0x1
	.byte	0x9c
	.long	0x294a6
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1adc
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1adc
	.byte	0x32
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1adc
	.byte	0x3a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1adc
	.byte	0x42
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.byte	0
	.uleb128 0xd
	.ascii "stbi__gif_load\0"
	.byte	0x6
	.word	0x1abf
	.byte	0xe
	.long	0x7aa
	.long	LFB1958
	.long	LFE1958-LFB1958
	.uleb128 0x1
	.byte	0x9c
	.long	0x29544
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1abf
	.byte	0x2c
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1abf
	.byte	0x34
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1abf
	.byte	0x3c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1abf
	.byte	0x44
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x1abf
	.byte	0x4e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ri\0"
	.byte	0x6
	.word	0x1abf
	.byte	0x6b
	.long	0x28d4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "u\0"
	.byte	0x6
	.word	0x1ac1
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x6
	.word	0x1ac2
	.byte	0xe
	.long	0x1920e
	.uleb128 0x4
	.byte	0x91
	.sleb128 -34924
	.byte	0
	.uleb128 0xd
	.ascii "stbi__load_gif_main\0"
	.byte	0x6
	.word	0x1a71
	.byte	0xe
	.long	0x7aa
	.long	LFB1957
	.long	LFE1957-LFB1957
	.uleb128 0x1
	.byte	0x9c
	.long	0x2968d
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1a71
	.byte	0x31
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "delays\0"
	.byte	0x6
	.word	0x1a71
	.byte	0x3a
	.long	0x24929
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1a71
	.byte	0x47
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1a71
	.byte	0x4f
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0x1a71
	.byte	0x57
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1a71
	.byte	0x5f
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x1a71
	.byte	0x69
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x9
	.long	LBB485
	.long	LBE485-LBB485
	.uleb128 0x1
	.ascii "layers\0"
	.byte	0x6
	.word	0x1a74
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "u\0"
	.byte	0x6
	.word	0x1a75
	.byte	0x10
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "out\0"
	.byte	0x6
	.word	0x1a76
	.byte	0x10
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF365
	.byte	0x6
	.word	0x1a77
	.byte	0x10
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x6
	.word	0x1a78
	.byte	0x11
	.long	0x1920e
	.uleb128 0x4
	.byte	0x91
	.sleb128 -34952
	.uleb128 0x7
	.secrel32	LASF203
	.byte	0x6
	.word	0x1a79
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "out_size\0"
	.byte	0x6
	.word	0x1a7a
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "delays_size\0"
	.byte	0x6
	.word	0x1a7b
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x9
	.long	LBB490
	.long	LBE490-LBB490
	.uleb128 0x1
	.ascii "tmp\0"
	.byte	0x6
	.word	0x1a8c
	.byte	0x16
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__gif_load_next\0"
	.byte	0x6
	.word	0x19c3
	.byte	0x11
	.long	0x1803c
	.long	LFB1956
	.long	LFE1956-LFB1956
	.uleb128 0x1
	.byte	0x9c
	.long	0x297e7
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x19c3
	.byte	0x34
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "g\0"
	.byte	0x6
	.word	0x19c3
	.byte	0x42
	.long	0x297e7
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x19c3
	.byte	0x4a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x19c3
	.byte	0x54
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF365
	.byte	0x6
	.word	0x19c3
	.byte	0x67
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "dispose\0"
	.byte	0x6
	.word	0x19c5
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "first_frame\0"
	.byte	0x6
	.word	0x19c6
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "pi\0"
	.byte	0x6
	.word	0x19c7
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "pcount\0"
	.byte	0x6
	.word	0x19c8
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB478
	.long	LBE478-LBB478
	.uleb128 0x1
	.ascii "tag\0"
	.byte	0x6
	.word	0x1a04
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0xf
	.long	LBB481
	.long	LBE481-LBB481
	.long	0x297bf
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x6
	.word	0x1a08
	.byte	0x19
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x6
	.word	0x1a08
	.byte	0x1c
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "w\0"
	.byte	0x6
	.word	0x1a08
	.byte	0x1f
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "h\0"
	.byte	0x6
	.word	0x1a08
	.byte	0x22
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "o\0"
	.byte	0x6
	.word	0x1a09
	.byte	0x16
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x4b
	.secrel32	Ldebug_ranges0+0xa8
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x6
	.word	0x1a47
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "ext\0"
	.byte	0x6
	.word	0x1a48
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1920e
	.uleb128 0xd
	.ascii "stbi__process_gif_raster\0"
	.byte	0x6
	.word	0x196c
	.byte	0x11
	.long	0x1803c
	.long	LFB1955
	.long	LFE1955-LFB1955
	.uleb128 0x1
	.byte	0x9c
	.long	0x29935
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x196c
	.byte	0x39
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "g\0"
	.byte	0x6
	.word	0x196c
	.byte	0x47
	.long	0x297e7
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "lzw_cs\0"
	.byte	0x6
	.word	0x196e
	.byte	0xc
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -53
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x6
	.word	0x196f
	.byte	0x10
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "init_code\0"
	.byte	0x6
	.word	0x196f
	.byte	0x15
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF174
	.byte	0x6
	.word	0x1970
	.byte	0x11
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "codesize\0"
	.byte	0x6
	.word	0x1971
	.byte	0x10
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "codemask\0"
	.byte	0x6
	.word	0x1971
	.byte	0x1a
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "avail\0"
	.byte	0x6
	.word	0x1971
	.byte	0x24
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "oldcode\0"
	.byte	0x6
	.word	0x1971
	.byte	0x2b
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x7
	.secrel32	LASF366
	.byte	0x6
	.word	0x1971
	.byte	0x34
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "valid_bits\0"
	.byte	0x6
	.word	0x1971
	.byte	0x3a
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "clear\0"
	.byte	0x6
	.word	0x1971
	.byte	0x46
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x1972
	.byte	0x13
	.long	0x29935
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x9
	.long	LBB476
	.long	LBE476-LBB476
	.uleb128 0x7
	.secrel32	LASF166
	.byte	0x6
	.word	0x1992
	.byte	0x16
	.long	0x17ec2
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x1900e
	.uleb128 0x1c
	.ascii "stbi__out_gif_code\0"
	.byte	0x6
	.word	0x1947
	.byte	0xd
	.long	LFB1954
	.long	LFE1954-LFB1954
	.uleb128 0x1
	.byte	0x9c
	.long	0x299ac
	.uleb128 0x3
	.ascii "g\0"
	.byte	0x6
	.word	0x1947
	.byte	0x2b
	.long	0x297e7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF166
	.byte	0x6
	.word	0x1947
	.byte	0x3b
	.long	0x17e7c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x1949
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x6
	.word	0x1949
	.byte	0x11
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "idx\0"
	.byte	0x6
	.word	0x194a
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__gif_info_raw\0"
	.byte	0x6
	.word	0x1939
	.byte	0xc
	.long	0xf4
	.long	LFB1953
	.long	LFE1953-LFB1953
	.uleb128 0x1
	.byte	0x9c
	.long	0x29a1f
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1939
	.byte	0x2e
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1939
	.byte	0x36
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1939
	.byte	0x3e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1939
	.byte	0x46
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x6
	.word	0x193b
	.byte	0xf
	.long	0x297e7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__gif_header\0"
	.byte	0x6
	.word	0x191a
	.byte	0xc
	.long	0xf4
	.long	LFB1952
	.long	LFE1952-LFB1952
	.uleb128 0x1
	.byte	0x9c
	.long	0x29a9c
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x191a
	.byte	0x2c
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "g\0"
	.byte	0x6
	.word	0x191a
	.byte	0x3a
	.long	0x297e7
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x191a
	.byte	0x42
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "is_info\0"
	.byte	0x6
	.word	0x191a
	.byte	0x4c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "version\0"
	.byte	0x6
	.word	0x191c
	.byte	0xc
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__gif_parse_colortable\0"
	.byte	0x6
	.word	0x190f
	.byte	0xd
	.long	LFB1951
	.long	LFE1951-LFB1951
	.uleb128 0x1
	.byte	0x9c
	.long	0x29b22
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x190f
	.byte	0x37
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "pal\0"
	.byte	0x6
	.word	0x190f
	.byte	0x42
	.long	0x29b22
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "num_entries\0"
	.byte	0x6
	.word	0x190f
	.byte	0x53
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "transp\0"
	.byte	0x6
	.word	0x190f
	.byte	0x64
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x1911
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x292bc
	.uleb128 0xd
	.ascii "stbi__gif_test\0"
	.byte	0x6
	.word	0x1908
	.byte	0xc
	.long	0xf4
	.long	LFB1950
	.long	LFE1950-LFB1950
	.uleb128 0x1
	.byte	0x9c
	.long	0x29b6b
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1908
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0x190a
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__gif_test_raw\0"
	.byte	0x6
	.word	0x18fe
	.byte	0xc
	.long	0xf4
	.long	LFB1949
	.long	LFE1949-LFB1949
	.uleb128 0x1
	.byte	0x9c
	.long	0x29bb3
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x18fe
	.byte	0x2e
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "sz\0"
	.byte	0x6
	.word	0x1900
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__pic_test\0"
	.byte	0x6
	.word	0x18d7
	.byte	0xc
	.long	0xf4
	.long	LFB1948
	.long	LFE1948-LFB1948
	.uleb128 0x1
	.byte	0x9c
	.long	0x29bf6
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x18d7
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0x18d9
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__pic_load\0"
	.byte	0x6
	.word	0x18af
	.byte	0xe
	.long	0x7aa
	.long	LFB1947
	.long	LFE1947-LFB1947
	.uleb128 0x1
	.byte	0x9c
	.long	0x29ccc
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x18af
	.byte	0x2c
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "px\0"
	.byte	0x6
	.word	0x18af
	.byte	0x33
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "py\0"
	.byte	0x6
	.word	0x18af
	.byte	0x3b
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x18af
	.byte	0x43
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x18af
	.byte	0x4c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ri\0"
	.byte	0x6
	.word	0x18af
	.byte	0x69
	.long	0x28d4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0x18b1
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x18b2
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x6
	.word	0x18b2
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x6
	.word	0x18b2
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "internal_comp\0"
	.byte	0x6
	.word	0x18b2
	.byte	0x10
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0xd
	.ascii "stbi__pic_load_core\0"
	.byte	0x6
	.word	0x1841
	.byte	0x11
	.long	0x1803c
	.long	LFB1946
	.long	LFE1946-LFB1946
	.uleb128 0x1
	.byte	0x9c
	.long	0x29ed1
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1841
	.byte	0x34
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x6
	.word	0x1841
	.byte	0x3a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x6
	.word	0x1841
	.byte	0x44
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1841
	.byte	0x50
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF257
	.byte	0x6
	.word	0x1841
	.byte	0x5f
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x7
	.secrel32	LASF360
	.byte	0x6
	.word	0x1843
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF361
	.byte	0x6
	.word	0x1843
	.byte	0x13
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x6
	.word	0x1843
	.byte	0x21
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "chained\0"
	.byte	0x6
	.word	0x1843
	.byte	0x23
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "packets\0"
	.byte	0x6
	.word	0x1844
	.byte	0x15
	.long	0x28e7a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -106
	.uleb128 0xf
	.long	LBB457
	.long	LBE457-LBB457
	.long	0x29dbc
	.uleb128 0x7
	.secrel32	LASF362
	.byte	0x6
	.word	0x1849
	.byte	0x19
	.long	0x28e8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.byte	0
	.uleb128 0x9
	.long	LBB459
	.long	LBE459-LBB459
	.uleb128 0x1
	.ascii "packet_idx\0"
	.byte	0x6
	.word	0x185e
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB461
	.long	LBE461-LBB461
	.uleb128 0x7
	.secrel32	LASF362
	.byte	0x6
	.word	0x1861
	.byte	0x1c
	.long	0x28e8a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x7
	.secrel32	LASF269
	.byte	0x6
	.word	0x1862
	.byte	0x13
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x69
	.secrel32	Ldebug_ranges0+0x78
	.long	0x29e1e
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x6
	.word	0x1869
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0xf
	.long	LBB465
	.long	LBE465-LBB465
	.long	0x29e75
	.uleb128 0x7
	.secrel32	LASF3
	.byte	0x6
	.word	0x1873
	.byte	0x17
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x1873
	.byte	0x23
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x9
	.long	LBB466
	.long	LBE466-LBB466
	.uleb128 0x7
	.secrel32	LASF279
	.byte	0x6
	.word	0x1876
	.byte	0x1e
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -49
	.uleb128 0x7
	.secrel32	LASF87
	.byte	0x6
	.word	0x1876
	.byte	0x24
	.long	0x292bc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -110
	.byte	0
	.byte	0
	.uleb128 0x4b
	.secrel32	Ldebug_ranges0+0x90
	.uleb128 0x7
	.secrel32	LASF3
	.byte	0x6
	.word	0x1888
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x9
	.long	LBB468
	.long	LBE468-LBB468
	.uleb128 0x7
	.secrel32	LASF279
	.byte	0x6
	.word	0x188a
	.byte	0x17
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x188a
	.byte	0x2e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x9
	.long	LBB470
	.long	LBE470-LBB470
	.uleb128 0x7
	.secrel32	LASF87
	.byte	0x6
	.word	0x188e
	.byte	0x1e
	.long	0x292bc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -114
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x38
	.ascii "stbi__copyval\0"
	.byte	0x6
	.word	0x1838
	.byte	0xd
	.long	LFB1945
	.long	LFE1945-LFB1945
	.uleb128 0x1
	.byte	0x9c
	.long	0x29f42
	.uleb128 0x4
	.secrel32	LASF173
	.byte	0x6
	.word	0x1838
	.byte	0x1f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF269
	.byte	0x6
	.word	0x1838
	.byte	0x30
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "src\0"
	.byte	0x6
	.word	0x1838
	.byte	0x44
	.long	0x18803
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "mask\0"
	.byte	0x6
	.word	0x183a
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x183a
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0xd
	.ascii "stbi__readval\0"
	.byte	0x6
	.word	0x182a
	.byte	0x11
	.long	0x1803c
	.long	LFB1944
	.long	LFE1944-LFB1944
	.uleb128 0x1
	.byte	0x9c
	.long	0x29fb5
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x182a
	.byte	0x2e
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF173
	.byte	0x6
	.word	0x182a
	.byte	0x35
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF269
	.byte	0x6
	.word	0x182a
	.byte	0x47
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "mask\0"
	.byte	0x6
	.word	0x182c
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x182c
	.byte	0x13
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xd
	.ascii "stbi__pic_test_core\0"
	.byte	0x6
	.word	0x1815
	.byte	0xc
	.long	0xf4
	.long	LFB1943
	.long	LFE1943-LFB1943
	.uleb128 0x1
	.byte	0x9c
	.long	0x29ffd
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1815
	.byte	0x2f
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x1817
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__pic_is4\0"
	.byte	0x6
	.word	0x180b
	.byte	0xc
	.long	0xf4
	.long	LFB1942
	.long	LFE1942-LFB1942
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a04f
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x180b
	.byte	0x29
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "str\0"
	.byte	0x6
	.word	0x180b
	.byte	0x37
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x180d
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__psd_load\0"
	.byte	0x6
	.word	0x1739
	.byte	0xe
	.long	0x7aa
	.long	LFB1941
	.long	LFE1941-LFB1941
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a2dc
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1739
	.byte	0x2c
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1739
	.byte	0x34
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1739
	.byte	0x3c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1739
	.byte	0x44
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x1739
	.byte	0x4e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ri\0"
	.byte	0x6
	.word	0x1739
	.byte	0x6b
	.long	0x28d4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "bpc\0"
	.byte	0x6
	.word	0x1739
	.byte	0x73
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x7
	.secrel32	LASF367
	.byte	0x6
	.word	0x173b
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x7
	.secrel32	LASF363
	.byte	0x6
	.word	0x173c
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "compression\0"
	.byte	0x6
	.word	0x173c
	.byte	0x16
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x7
	.secrel32	LASF173
	.byte	0x6
	.word	0x173d
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x173d
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "bitdepth\0"
	.byte	0x6
	.word	0x173e
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "w\0"
	.byte	0x6
	.word	0x173f
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "h\0"
	.byte	0x6
	.word	0x173f
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "out\0"
	.byte	0x6
	.word	0x1740
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0xf
	.long	LBB429
	.long	LBE429-LBB429
	.long	0x2a193
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x179f
	.byte	0x13
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0xf
	.long	LBB436
	.long	LBE436-LBB436
	.long	0x2a1c0
	.uleb128 0x1
	.ascii "q\0"
	.byte	0x6
	.word	0x17b8
	.byte	0x1e
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "val\0"
	.byte	0x6
	.word	0x17b9
	.byte	0x1d
	.long	0x17e7c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -74
	.byte	0
	.uleb128 0xf
	.long	LBB437
	.long	LBE437-LBB437
	.long	0x2a1ed
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x17bd
	.byte	0x19
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "val\0"
	.byte	0x6
	.word	0x17be
	.byte	0x18
	.long	0x17da0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -75
	.byte	0
	.uleb128 0xf
	.long	LBB441
	.long	LBE441-LBB441
	.long	0x2a209
	.uleb128 0x1
	.ascii "q\0"
	.byte	0x6
	.word	0x17c4
	.byte	0x1e
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.uleb128 0xf
	.long	LBB442
	.long	LBE442-LBB442
	.long	0x2a225
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x17c8
	.byte	0x19
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0xf
	.long	LBB449
	.long	LBE449-LBB449
	.long	0x2a282
	.uleb128 0x1
	.ascii "pixel\0"
	.byte	0x6
	.word	0x17d9
	.byte	0x1b
	.long	0x2a2dc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x9
	.long	LBB451
	.long	LBE451-LBB451
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x6
	.word	0x17db
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "ra\0"
	.byte	0x6
	.word	0x17dc
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "inv_a\0"
	.byte	0x6
	.word	0x17dd
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB454
	.long	LBE454-LBB454
	.uleb128 0x1
	.ascii "pixel\0"
	.byte	0x6
	.word	0x17e5
	.byte	0x1c
	.long	0x954
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x9
	.long	LBB456
	.long	LBE456-LBB456
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x6
	.word	0x17e7
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "ra\0"
	.byte	0x6
	.word	0x17e8
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1
	.ascii "inv_a\0"
	.byte	0x6
	.word	0x17e9
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x17e7c
	.uleb128 0xd
	.ascii "stbi__psd_decode_rle\0"
	.byte	0x6
	.word	0x1713
	.byte	0xc
	.long	0xf4
	.long	LFB1940
	.long	LFE1940-LFB1940
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a387
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1713
	.byte	0x30
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "p\0"
	.byte	0x6
	.word	0x1713
	.byte	0x3c
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF367
	.byte	0x6
	.word	0x1713
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x7
	.secrel32	LASF279
	.byte	0x6
	.word	0x1715
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "nleft\0"
	.byte	0x6
	.word	0x1715
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x6
	.word	0x1715
	.byte	0x16
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB425
	.long	LBE425-LBB425
	.uleb128 0x1
	.ascii "val\0"
	.byte	0x6
	.word	0x1727
	.byte	0x14
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -29
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__psd_test\0"
	.byte	0x6
	.word	0x170c
	.byte	0xc
	.long	0xf4
	.long	LFB1939
	.long	LFE1939-LFB1939
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a3ca
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x170c
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0x170e
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__tga_load\0"
	.byte	0x6
	.word	0x163a
	.byte	0xe
	.long	0x7aa
	.long	LFB1938
	.long	LFE1938-LFB1938
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a781
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x163a
	.byte	0x2c
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x163a
	.byte	0x34
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x163a
	.byte	0x3c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x163a
	.byte	0x44
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x163a
	.byte	0x4e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ri\0"
	.byte	0x6
	.word	0x163a
	.byte	0x6b
	.long	0x28d4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "tga_offset\0"
	.byte	0x6
	.word	0x163d
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "tga_indexed\0"
	.byte	0x6
	.word	0x163e
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x7
	.secrel32	LASF368
	.byte	0x6
	.word	0x163f
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "tga_is_RLE\0"
	.byte	0x6
	.word	0x1640
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "tga_palette_start\0"
	.byte	0x6
	.word	0x1641
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "tga_palette_len\0"
	.byte	0x6
	.word	0x1642
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "tga_palette_bits\0"
	.byte	0x6
	.word	0x1643
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "tga_x_origin\0"
	.byte	0x6
	.word	0x1644
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "tga_y_origin\0"
	.byte	0x6
	.word	0x1645
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1
	.ascii "tga_width\0"
	.byte	0x6
	.word	0x1646
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "tga_height\0"
	.byte	0x6
	.word	0x1647
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x7
	.secrel32	LASF369
	.byte	0x6
	.word	0x1648
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x7
	.secrel32	LASF370
	.byte	0x6
	.word	0x1649
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "tga_rgb16\0"
	.byte	0x6
	.word	0x1649
	.byte	0x12
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x1
	.ascii "tga_inverted\0"
	.byte	0x6
	.word	0x164a
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x1
	.ascii "tga_data\0"
	.byte	0x6
	.word	0x164d
	.byte	0x13
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "tga_palette\0"
	.byte	0x6
	.word	0x164e
	.byte	0x13
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x164f
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0x164f
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x7
	.secrel32	LASF168
	.byte	0x6
	.word	0x1650
	.byte	0x12
	.long	0x2a781
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x1
	.ascii "RLE_count\0"
	.byte	0x6
	.word	0x1651
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "RLE_repeating\0"
	.byte	0x6
	.word	0x1652
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "read_next_pixel\0"
	.byte	0x6
	.word	0x1653
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0xf
	.long	LBB393
	.long	LBE393-LBB393
	.long	0x2a68a
	.uleb128 0x1
	.ascii "row\0"
	.byte	0x6
	.word	0x167a
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x1
	.ascii "tga_row\0"
	.byte	0x6
	.word	0x167b
	.byte	0x13
	.long	0x1803c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.byte	0
	.uleb128 0xf
	.long	LBB398
	.long	LBE398-LBB398
	.long	0x2a6ae
	.uleb128 0x1
	.ascii "pal_entry\0"
	.byte	0x6
	.word	0x1690
	.byte	0x16
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.uleb128 0xf
	.long	LBB404
	.long	LBE404-LBB404
	.long	0x2a6d1
	.uleb128 0x1
	.ascii "RLE_cmd\0"
	.byte	0x6
	.word	0x16a5
	.byte	0x14
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.byte	0
	.uleb128 0xf
	.long	LBB408
	.long	LBE408-LBB408
	.long	0x2a6f3
	.uleb128 0x1
	.ascii "pal_idx\0"
	.byte	0x6
	.word	0x16b8
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0xf
	.long	LBB412
	.long	LBE412-LBB412
	.long	0x2a744
	.uleb128 0x1
	.ascii "index1\0"
	.byte	0x6
	.word	0x16da
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "index2\0"
	.byte	0x6
	.word	0x16db
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x9
	.long	LBB414
	.long	LBE414-LBB414
	.uleb128 0x7
	.secrel32	LASF274
	.byte	0x6
	.word	0x16de
	.byte	0x1e
	.long	0x697
	.uleb128 0x3
	.byte	0x91
	.sleb128 -133
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB416
	.long	LBE416-LBB416
	.uleb128 0x1
	.ascii "tga_pixel\0"
	.byte	0x6
	.word	0x16f0
	.byte	0x16
	.long	0x954
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x9
	.long	LBB418
	.long	LBE418-LBB418
	.uleb128 0x7
	.secrel32	LASF274
	.byte	0x6
	.word	0x16f3
	.byte	0x18
	.long	0x697
	.uleb128 0x3
	.byte	0x91
	.sleb128 -134
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x697
	.long	0x2a791
	.uleb128 0x12
	.long	0xe4
	.byte	0x3
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__tga_read_rgb16\0"
	.byte	0x6
	.word	0x1627
	.byte	0xd
	.long	LFB1937
	.long	LFE1937-LFB1937
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a829
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1627
	.byte	0x31
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "out\0"
	.byte	0x6
	.word	0x1627
	.byte	0x3d
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "px\0"
	.byte	0x6
	.word	0x1629
	.byte	0x11
	.long	0x17e7c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -18
	.uleb128 0x1
	.ascii "fiveBitMask\0"
	.byte	0x6
	.word	0x162a
	.byte	0x11
	.long	0x17e7c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0x162c
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x6
	.word	0x162d
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x6
	.word	0x162e
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0xd
	.ascii "stbi__tga_test\0"
	.byte	0x6
	.word	0x1607
	.byte	0xc
	.long	0xf4
	.long	LFB1936
	.long	LFE1936-LFB1936
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a8aa
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1607
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6a
	.ascii "errorEnd\0"
	.byte	0x6
	.word	0x1621
	.byte	0x1
	.long	L2001
	.uleb128 0x1
	.ascii "res\0"
	.byte	0x6
	.word	0x1609
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "sz\0"
	.byte	0x6
	.word	0x160a
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "tga_color_type\0"
	.byte	0x6
	.word	0x160a
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xd
	.ascii "stbi__tga_info\0"
	.byte	0x6
	.word	0x15c6
	.byte	0xc
	.long	0xf4
	.long	LFB1935
	.long	LFE1935-LFB1935
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a9a9
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x15c6
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x15c6
	.byte	0x32
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x15c6
	.byte	0x3a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x15c6
	.byte	0x42
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "tga_w\0"
	.byte	0x6
	.word	0x15c8
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "tga_h\0"
	.byte	0x6
	.word	0x15c8
	.byte	0x10
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x7
	.secrel32	LASF370
	.byte	0x6
	.word	0x15c8
	.byte	0x17
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF368
	.byte	0x6
	.word	0x15c8
	.byte	0x21
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x7
	.secrel32	LASF369
	.byte	0x6
	.word	0x15c8
	.byte	0x31
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "tga_colormap_bpp\0"
	.byte	0x6
	.word	0x15c8
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "sz\0"
	.byte	0x6
	.word	0x15c9
	.byte	0x9
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "tga_colormap_type\0"
	.byte	0x6
	.word	0x15c9
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0x27
	.ascii "stbi__tga_get_comp\0"
	.byte	0x6
	.word	0x15b6
	.byte	0xc
	.long	0xf4
	.long	LFB1934
	.long	LFE1934-LFB1934
	.uleb128 0x1
	.byte	0x9c
	.long	0x2aa18
	.uleb128 0x3
	.ascii "bits_per_pixel\0"
	.byte	0x6
	.word	0x15b6
	.byte	0x23
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "is_grey\0"
	.byte	0x6
	.word	0x15b6
	.byte	0x37
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "is_rgb16\0"
	.byte	0x6
	.word	0x15b6
	.byte	0x45
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xd
	.ascii "stbi__bmp_load\0"
	.byte	0x6
	.word	0x14f3
	.byte	0xe
	.long	0x7aa
	.long	LFB1933
	.long	LFE1933-LFB1933
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ad96
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x14f3
	.byte	0x2c
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x14f3
	.byte	0x34
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x14f3
	.byte	0x3c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x14f3
	.byte	0x44
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x14f3
	.byte	0x4e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ri\0"
	.byte	0x6
	.word	0x14f3
	.byte	0x6b
	.long	0x28d4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "out\0"
	.byte	0x6
	.word	0x14f5
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "mr\0"
	.byte	0x6
	.word	0x14f6
	.byte	0x11
	.long	0xe4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "mg\0"
	.byte	0x6
	.word	0x14f6
	.byte	0x16
	.long	0xe4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1
	.ascii "mb\0"
	.byte	0x6
	.word	0x14f6
	.byte	0x1b
	.long	0xe4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "ma\0"
	.byte	0x6
	.word	0x14f6
	.byte	0x20
	.long	0xe4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x1
	.ascii "all_a\0"
	.byte	0x6
	.word	0x14f6
	.byte	0x26
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "pal\0"
	.byte	0x6
	.word	0x14f7
	.byte	0xc
	.long	0x191e7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1177
	.uleb128 0x1
	.ascii "psize\0"
	.byte	0x6
	.word	0x14f8
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x14f8
	.byte	0x10
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0x14f8
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF181
	.byte	0x6
	.word	0x14f8
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "flip_vertically\0"
	.byte	0x6
	.word	0x14f9
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x1
	.ascii "pad\0"
	.byte	0x6
	.word	0x14f9
	.byte	0x19
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x1
	.ascii "target\0"
	.byte	0x6
	.word	0x14f9
	.byte	0x1e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x7
	.secrel32	LASF220
	.byte	0x6
	.word	0x14fa
	.byte	0x13
	.long	0x18f49
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1216
	.uleb128 0xf
	.long	LBB362
	.long	LBE362-LBB362
	.long	0x2ac23
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x6
	.word	0x152b
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0xf
	.long	LBB366
	.long	LBE366-LBB366
	.long	0x2abff
	.uleb128 0x1
	.ascii "bit_offset\0"
	.byte	0x6
	.word	0x153c
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x6
	.word	0x153c
	.byte	0x21
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x4b
	.secrel32	Ldebug_ranges0+0x48
	.uleb128 0x7
	.secrel32	LASF289
	.byte	0x6
	.word	0x153e
	.byte	0x14
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.byte	0
	.byte	0
	.uleb128 0x4b
	.secrel32	Ldebug_ranges0+0x60
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x6
	.word	0x154e
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "v2\0"
	.byte	0x6
	.word	0x154e
	.byte	0x24
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.uleb128 0xf
	.long	LBB376
	.long	LBE376-LBB376
	.long	0x2ad52
	.uleb128 0x1
	.ascii "rshift\0"
	.byte	0x6
	.word	0x1562
	.byte	0xb
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "gshift\0"
	.byte	0x6
	.word	0x1562
	.byte	0x14
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "bshift\0"
	.byte	0x6
	.word	0x1562
	.byte	0x1d
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "ashift\0"
	.byte	0x6
	.word	0x1562
	.byte	0x26
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "rcount\0"
	.byte	0x6
	.word	0x1562
	.byte	0x2f
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "gcount\0"
	.byte	0x6
	.word	0x1562
	.byte	0x38
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "bcount\0"
	.byte	0x6
	.word	0x1562
	.byte	0x41
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "acount\0"
	.byte	0x6
	.word	0x1562
	.byte	0x4a
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x6
	.word	0x1563
	.byte	0xb
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "easy\0"
	.byte	0x6
	.word	0x1564
	.byte	0xb
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0xf
	.long	LBB382
	.long	LBE382-LBB382
	.long	0x2ad0e
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x6
	.word	0x157c
	.byte	0x1e
	.long	0x697
	.uleb128 0x3
	.byte	0x91
	.sleb128 -133
	.byte	0
	.uleb128 0x9
	.long	LBB383
	.long	LBE383-LBB383
	.uleb128 0x1
	.ascii "bpp\0"
	.byte	0x6
	.word	0x1586
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x9
	.long	LBB385
	.long	LBE385-LBB385
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x6
	.word	0x1588
	.byte	0x1d
	.long	0x17ea7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x6
	.word	0x1589
	.byte	0x1d
	.long	0xe4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1220
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB387
	.long	LBE387-LBB387
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x6
	.word	0x159c
	.byte	0xf
	.long	0x17da0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -153
	.uleb128 0x9
	.long	LBB389
	.long	LBE389-LBB389
	.uleb128 0x1
	.ascii "p1\0"
	.byte	0x6
	.word	0x159e
	.byte	0x13
	.long	0x1803c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x1
	.ascii "p2\0"
	.byte	0x6
	.word	0x159f
	.byte	0x13
	.long	0x1803c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__bmp_parse_header\0"
	.byte	0x6
	.word	0x149b
	.byte	0xe
	.long	0x7aa
	.long	LFB1932
	.long	LFE1932-LFB1932
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ae2a
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x149b
	.byte	0x34
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF220
	.byte	0x6
	.word	0x149b
	.byte	0x47
	.long	0x2ae2a
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "hsz\0"
	.byte	0x6
	.word	0x149d
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB358
	.long	LBE358-LBB358
	.uleb128 0x1
	.ascii "compress\0"
	.byte	0x6
	.word	0x14b4
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x9
	.long	LBB360
	.long	LBE360-LBB360
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x14dd
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x18f49
	.uleb128 0xd
	.ascii "stbi__shiftsigned\0"
	.byte	0x6
	.word	0x1480
	.byte	0xc
	.long	0xf4
	.long	LFB1931
	.long	LFE1931-LFB1931
	.uleb128 0x1
	.byte	0x9c
	.long	0x2aebe
	.uleb128 0x3
	.ascii "v\0"
	.byte	0x6
	.word	0x1480
	.byte	0x2b
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "shift\0"
	.byte	0x6
	.word	0x1480
	.byte	0x32
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF366
	.byte	0x6
	.word	0x1480
	.byte	0x3d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "mul_table\0"
	.byte	0x6
	.word	0x1482
	.byte	0x18
	.long	0x2aebe
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL17stbi__shiftsignedjiiE9mul_table
	.uleb128 0x1
	.ascii "shift_table\0"
	.byte	0x6
	.word	0x1487
	.byte	0x18
	.long	0x2aebe
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL17stbi__shiftsignedjiiE11shift_table
	.byte	0
	.uleb128 0x10
	.long	0xe4
	.long	0x2aece
	.uleb128 0x12
	.long	0xe4
	.byte	0x8
	.byte	0
	.uleb128 0x27
	.ascii "stbi__bitcount\0"
	.byte	0x6
	.word	0x1473
	.byte	0xc
	.long	0xf4
	.long	LFB1930
	.long	LFE1930-LFB1930
	.uleb128 0x1
	.byte	0x9c
	.long	0x2af03
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x1473
	.byte	0x28
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.ascii "stbi__high_bit\0"
	.byte	0x6
	.word	0x1467
	.byte	0xc
	.long	0xf4
	.long	LFB1929
	.long	LFE1929-LFB1929
	.uleb128 0x1
	.byte	0x9c
	.long	0x2af46
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0x1467
	.byte	0x28
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0x1469
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0xd
	.ascii "stbi__bmp_test\0"
	.byte	0x6
	.word	0x145e
	.byte	0xc
	.long	0xf4
	.long	LFB1928
	.long	LFE1928-LFB1928
	.uleb128 0x1
	.byte	0x9c
	.long	0x2af89
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x145e
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0x1460
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__bmp_test_raw\0"
	.byte	0x6
	.word	0x144f
	.byte	0xc
	.long	0xf4
	.long	LFB1927
	.long	LFE1927-LFB1927
	.uleb128 0x1
	.byte	0x9c
	.long	0x2afdf
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x144f
	.byte	0x2e
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0x1451
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "sz\0"
	.byte	0x6
	.word	0x1452
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__png_is16\0"
	.byte	0x6
	.word	0x143e
	.byte	0xc
	.long	0xf4
	.long	LFB1926
	.long	LFE1926-LFB1926
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b022
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x143e
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x1440
	.byte	0xe
	.long	0x18d5a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0xd
	.ascii "stbi__png_info\0"
	.byte	0x6
	.word	0x1437
	.byte	0xc
	.long	0xf4
	.long	LFB1925
	.long	LFE1925-LFB1925
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b091
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1437
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x1437
	.byte	0x32
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x1437
	.byte	0x3a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x1437
	.byte	0x42
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x1439
	.byte	0xe
	.long	0x18d5a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0xd
	.ascii "stbi__png_info_raw\0"
	.byte	0x6
	.word	0x142b
	.byte	0xc
	.long	0xf4
	.long	LFB1924
	.long	LFE1924-LFB1924
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b0f6
	.uleb128 0x3
	.ascii "p\0"
	.byte	0x6
	.word	0x142b
	.byte	0x2a
	.long	0x2b0f6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x142b
	.byte	0x32
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x142b
	.byte	0x3a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x142b
	.byte	0x42
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x18d5a
	.uleb128 0xd
	.ascii "stbi__png_test\0"
	.byte	0x6
	.word	0x1423
	.byte	0xc
	.long	0xf4
	.long	LFB1923
	.long	LFE1923-LFB1923
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b13f
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1423
	.byte	0x2a
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0x1425
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__png_load\0"
	.byte	0x6
	.word	0x141c
	.byte	0xe
	.long	0x7aa
	.long	LFB1922
	.long	LFE1922-LFB1922
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b1cd
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x141c
	.byte	0x2c
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x141c
	.byte	0x34
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x141c
	.byte	0x3c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x141c
	.byte	0x44
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x141c
	.byte	0x4e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ri\0"
	.byte	0x6
	.word	0x141c
	.byte	0x6b
	.long	0x28d4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x141e
	.byte	0xe
	.long	0x18d5a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0xd
	.ascii "stbi__do_png\0"
	.byte	0x6
	.word	0x13fc
	.byte	0xe
	.long	0x7aa
	.long	LFB1921
	.long	LFE1921-LFB1921
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b259
	.uleb128 0x3
	.ascii "p\0"
	.byte	0x6
	.word	0x13fc
	.byte	0x26
	.long	0x2b0f6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x13fc
	.byte	0x2e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x13fc
	.byte	0x36
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x6
	.word	0x13fc
	.byte	0x3e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x13fc
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ri\0"
	.byte	0x6
	.word	0x13fc
	.byte	0x62
	.long	0x28d4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0x13fe
	.byte	0xa
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__parse_png_file\0"
	.byte	0x6
	.word	0x134c
	.byte	0xc
	.long	0xf4
	.long	LFB1920
	.long	LFE1920-LFB1920
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b49d
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0x134c
	.byte	0x2c
	.long	0x2b0f6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "scan\0"
	.byte	0x6
	.word	0x134c
	.byte	0x33
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x134c
	.byte	0x3d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x7
	.secrel32	LASF234
	.byte	0x6
	.word	0x134e
	.byte	0xc
	.long	0x2b49d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1104
	.uleb128 0x7
	.secrel32	LASF371
	.byte	0x6
	.word	0x134e
	.byte	0x1b
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x1
	.ascii "has_trans\0"
	.byte	0x6
	.word	0x134f
	.byte	0xc
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -18
	.uleb128 0x1
	.ascii "tc\0"
	.byte	0x6
	.word	0x134f
	.byte	0x19
	.long	0x2b4ae
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1107
	.uleb128 0x1
	.ascii "tc16\0"
	.byte	0x6
	.word	0x1350
	.byte	0x11
	.long	0x2b4be
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1114
	.uleb128 0x1
	.ascii "ioff\0"
	.byte	0x6
	.word	0x1351
	.byte	0x11
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "idata_limit\0"
	.byte	0x6
	.word	0x1351
	.byte	0x19
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x1351
	.byte	0x28
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "pal_len\0"
	.byte	0x6
	.word	0x1351
	.byte	0x2b
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF174
	.byte	0x6
	.word	0x1352
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x1352
	.byte	0x10
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "interlace\0"
	.byte	0x6
	.word	0x1352
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x7
	.secrel32	LASF289
	.byte	0x6
	.word	0x1352
	.byte	0x1f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "is_iphone\0"
	.byte	0x6
	.word	0x1352
	.byte	0x28
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x1353
	.byte	0x13
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x9
	.long	LBB346
	.long	LBE346-LBB346
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x6
	.word	0x135e
	.byte	0x16
	.long	0x18ce1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1124
	.uleb128 0x69
	.secrel32	Ldebug_ranges0+0x30
	.long	0x2b406
	.uleb128 0x7
	.secrel32	LASF355
	.byte	0x6
	.word	0x1365
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "filter\0"
	.byte	0x6
	.word	0x1365
	.byte	0x16
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.byte	0
	.uleb128 0xf
	.long	LBB352
	.long	LBE352-LBB352
	.long	0x2b440
	.uleb128 0x1
	.ascii "idata_limit_old\0"
	.byte	0x6
	.word	0x13ae
	.byte	0x1d
	.long	0x17ea7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x13af
	.byte	0x19
	.long	0x1803c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.byte	0
	.uleb128 0xf
	.long	LBB353
	.long	LBE353-LBB353
	.long	0x2b474
	.uleb128 0x1
	.ascii "raw_len\0"
	.byte	0x6
	.word	0x13bd
	.byte	0x1a
	.long	0x17ea7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1128
	.uleb128 0x1
	.ascii "bpl\0"
	.byte	0x6
	.word	0x13bd
	.byte	0x23
	.long	0x17ea7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0x9
	.long	LBB355
	.long	LBE355-LBB355
	.uleb128 0x1
	.ascii "invalid_chunk\0"
	.byte	0x6
	.word	0x13ec
	.byte	0x1c
	.long	0x2b4ce
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL20stbi__parse_png_fileP9stbi__pngiiE13invalid_chunk
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x17da0
	.long	0x2b4ae
	.uleb128 0x3a
	.long	0xe4
	.word	0x3ff
	.byte	0
	.uleb128 0x10
	.long	0x17da0
	.long	0x2b4be
	.uleb128 0x12
	.long	0xe4
	.byte	0x2
	.byte	0
	.uleb128 0x10
	.long	0x17e7c
	.long	0x2b4ce
	.uleb128 0x12
	.long	0xe4
	.byte	0x2
	.byte	0
	.uleb128 0x10
	.long	0xb8
	.long	0x2b4de
	.uleb128 0x12
	.long	0xe4
	.byte	0x18
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__de_iphone\0"
	.byte	0x6
	.word	0x131f
	.byte	0xd
	.long	LFB1919
	.long	LFE1919-LFB1919
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b5c3
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0x131f
	.byte	0x28
	.long	0x2b0f6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x1321
	.byte	0x13
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x1322
	.byte	0x11
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF372
	.byte	0x6
	.word	0x1322
	.byte	0x14
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x1323
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0xf
	.long	LBB334
	.long	LBE334-LBB334
	.long	0x2b565
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x6
	.word	0x1327
	.byte	0x12
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -33
	.byte	0
	.uleb128 0xf
	.long	LBB339
	.long	LBE339-LBB339
	.long	0x2b5aa
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x6
	.word	0x1331
	.byte	0x15
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -34
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x6
	.word	0x1332
	.byte	0x15
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -35
	.uleb128 0x9
	.long	LBB341
	.long	LBE341-LBB341
	.uleb128 0x1
	.ascii "half\0"
	.byte	0x6
	.word	0x1334
	.byte	0x18
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB344
	.long	LBE344-LBB344
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x6
	.word	0x1341
	.byte	0x15
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -37
	.byte	0
	.byte	0
	.uleb128 0x52
	.ascii "stbi_convert_iphone_png_to_rgb\0"
	.byte	0x6
	.word	0x131a
	.byte	0xe
	.long	LFB1918
	.long	LFE1918-LFB1918
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b61e
	.uleb128 0x3
	.ascii "flag_true_if_should_convert\0"
	.byte	0x6
	.word	0x131a
	.byte	0x31
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x52
	.ascii "stbi_set_unpremultiply_on_load\0"
	.byte	0x6
	.word	0x1315
	.byte	0xe
	.long	LFB1917
	.long	LFE1917-LFB1917
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b67f
	.uleb128 0x3
	.ascii "flag_true_if_should_unpremultiply\0"
	.byte	0x6
	.word	0x1315
	.byte	0x31
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__expand_png_palette\0"
	.byte	0x6
	.word	0x12ed
	.byte	0xc
	.long	0xf4
	.long	LFB1916
	.long	LFE1916-LFB1916
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b774
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x12ed
	.byte	0x30
	.long	0x2b0f6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF234
	.byte	0x6
	.word	0x12ed
	.byte	0x3c
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x6
	.word	0x12ed
	.byte	0x49
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF371
	.byte	0x6
	.word	0x12ed
	.byte	0x52
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x12ef
	.byte	0x11
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF372
	.byte	0x6
	.word	0x12ef
	.byte	0x14
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x12f0
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "temp_out\0"
	.byte	0x6
	.word	0x12f0
	.byte	0x11
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "orig\0"
	.byte	0x6
	.word	0x12f0
	.byte	0x1c
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0xf
	.long	LBB327
	.long	LBE327-LBB327
	.long	0x2b75b
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0x12fa
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.uleb128 0x9
	.long	LBB330
	.long	LBE330-LBB330
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0x1302
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__compute_transparency16\0"
	.byte	0x6
	.word	0x12d4
	.byte	0xc
	.long	0xf4
	.long	LFB1915
	.long	LFE1915-LFB1915
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b810
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0x12d4
	.byte	0x34
	.long	0x2b0f6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "tc\0"
	.byte	0x6
	.word	0x12d4
	.byte	0x44
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF373
	.byte	0x6
	.word	0x12d4
	.byte	0x4f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x12d6
	.byte	0x13
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x12d7
	.byte	0x11
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF372
	.byte	0x6
	.word	0x12d7
	.byte	0x14
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x12d8
	.byte	0x12
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xd
	.ascii "stbi__compute_transparency\0"
	.byte	0x6
	.word	0x12bb
	.byte	0xc
	.long	0xf4
	.long	LFB1914
	.long	LFE1914-LFB1914
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b8aa
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0x12bb
	.byte	0x32
	.long	0x2b0f6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "tc\0"
	.byte	0x6
	.word	0x12bb
	.byte	0x3d
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF373
	.byte	0x6
	.word	0x12bb
	.byte	0x48
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x12bd
	.byte	0x13
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x12be
	.byte	0x11
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF372
	.byte	0x6
	.word	0x12be
	.byte	0x14
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x12bf
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xd
	.ascii "stbi__create_png_image\0"
	.byte	0x6
	.word	0x128f
	.byte	0xc
	.long	0xf4
	.long	LFB1913
	.long	LFE1913-LFB1913
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ba7a
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x128f
	.byte	0x2e
	.long	0x2b0f6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "image_data\0"
	.byte	0x6
	.word	0x128f
	.byte	0x3a
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "image_data_len\0"
	.byte	0x6
	.word	0x128f
	.byte	0x53
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF373
	.byte	0x6
	.word	0x128f
	.byte	0x67
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF171
	.byte	0x6
	.word	0x128f
	.byte	0x72
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF289
	.byte	0x6
	.word	0x128f
	.byte	0x7d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "interlaced\0"
	.byte	0x6
	.word	0x128f
	.byte	0x88
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x7
	.secrel32	LASF356
	.byte	0x6
	.word	0x1291
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "out_bytes\0"
	.byte	0x6
	.word	0x1292
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "final\0"
	.byte	0x6
	.word	0x1293
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x1294
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB317
	.long	LBE317-LBB317
	.uleb128 0x1
	.ascii "xorig\0"
	.byte	0x6
	.word	0x129b
	.byte	0xb
	.long	0x2ba7a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "yorig\0"
	.byte	0x6
	.word	0x129c
	.byte	0xb
	.long	0x2ba7a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "xspc\0"
	.byte	0x6
	.word	0x129d
	.byte	0xb
	.long	0x2ba7a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x1
	.ascii "yspc\0"
	.byte	0x6
	.word	0x129e
	.byte	0xb
	.long	0x2ba7a
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x129f
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0x129f
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x6
	.word	0x129f
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x6
	.word	0x129f
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x9
	.long	LBB319
	.long	LBE319-LBB319
	.uleb128 0x7
	.secrel32	LASF374
	.byte	0x6
	.word	0x12a4
	.byte	0x17
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x9
	.long	LBB323
	.long	LBE323-LBB323
	.uleb128 0x1
	.ascii "out_y\0"
	.byte	0x6
	.word	0x12ab
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "out_x\0"
	.byte	0x6
	.word	0x12ac
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0xf4
	.long	0x2ba8a
	.uleb128 0x12
	.long	0xe4
	.byte	0x6
	.byte	0
	.uleb128 0xd
	.ascii "stbi__create_png_image_raw\0"
	.byte	0x6
	.word	0x11bb
	.byte	0xc
	.long	0xf4
	.long	LFB1912
	.long	LFE1912-LFB1912
	.uleb128 0x1
	.byte	0x9c
	.long	0x2bcf8
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x11bb
	.byte	0x32
	.long	0x2b0f6
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "raw\0"
	.byte	0x6
	.word	0x11bb
	.byte	0x3e
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "raw_len\0"
	.byte	0x6
	.word	0x11bb
	.byte	0x50
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF373
	.byte	0x6
	.word	0x11bb
	.byte	0x5d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x11bb
	.byte	0x71
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x11bb
	.byte	0x81
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF171
	.byte	0x6
	.word	0x11bb
	.byte	0x88
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF289
	.byte	0x6
	.word	0x11bb
	.byte	0x93
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x7
	.secrel32	LASF356
	.byte	0x6
	.word	0x11bd
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x11be
	.byte	0x13
	.long	0x18761
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x11bf
	.byte	0x11
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0x11bf
	.byte	0x13
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF203
	.byte	0x6
	.word	0x11bf
	.byte	0x15
	.long	0x17ea7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x7
	.secrel32	LASF374
	.byte	0x6
	.word	0x11c0
	.byte	0x11
	.long	0x17ea7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "img_width_bytes\0"
	.byte	0x6
	.word	0x11c0
	.byte	0x1a
	.long	0x17ea7
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x11c1
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF165
	.byte	0x6
	.word	0x11c2
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "output_bytes\0"
	.byte	0x6
	.word	0x11c4
	.byte	0x8
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "filter_bytes\0"
	.byte	0x6
	.word	0x11c5
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x7
	.secrel32	LASF181
	.byte	0x6
	.word	0x11c6
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0xf
	.long	LBB304
	.long	LBE304-LBB304
	.long	0x2bc74
	.uleb128 0x1
	.ascii "cur\0"
	.byte	0x6
	.word	0x11d6
	.byte	0x10
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "prior\0"
	.byte	0x6
	.word	0x11d7
	.byte	0x10
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "filter\0"
	.byte	0x6
	.word	0x11d8
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x9
	.long	LBB306
	.long	LBE306-LBB306
	.uleb128 0x1
	.ascii "nk\0"
	.byte	0x6
	.word	0x120b
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.byte	0
	.byte	0
	.uleb128 0xf
	.long	LBB310
	.long	LBE310-LBB310
	.long	0x2bcca
	.uleb128 0x1
	.ascii "cur\0"
	.byte	0x6
	.word	0x123c
	.byte	0x13
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "in\0"
	.byte	0x6
	.word	0x123d
	.byte	0x13
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x7
	.secrel32	LASF217
	.byte	0x6
	.word	0x1240
	.byte	0x12
	.long	0x17da0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -101
	.uleb128 0x9
	.long	LBB312
	.long	LBE312-LBB312
	.uleb128 0x1
	.ascii "q\0"
	.byte	0x6
	.word	0x126c
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB315
	.long	LBE315-LBB315
	.uleb128 0x1
	.ascii "cur\0"
	.byte	0x6
	.word	0x1284
	.byte	0x10
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "cur16\0"
	.byte	0x6
	.word	0x1285
	.byte	0x15
	.long	0x2a2dc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.byte	0
	.byte	0
	.uleb128 0x27
	.ascii "stbi__paeth\0"
	.byte	0x6
	.word	0x11ad
	.byte	0xc
	.long	0xf4
	.long	LFB1911
	.long	LFE1911-LFB1911
	.uleb128 0x1
	.byte	0x9c
	.long	0x2bd81
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x11ad
	.byte	0x1c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x6
	.word	0x11ad
	.byte	0x23
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x6
	.word	0x11ad
	.byte	0x2a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x11af
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1
	.ascii "pa\0"
	.byte	0x6
	.word	0x11b0
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x1
	.ascii "pb\0"
	.byte	0x6
	.word	0x11b1
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "pc\0"
	.byte	0x6
	.word	0x11b2
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xd
	.ascii "stbi__check_png_header\0"
	.byte	0x6
	.word	0x1188
	.byte	0xc
	.long	0xf4
	.long	LFB1910
	.long	LFE1910-LFB1910
	.uleb128 0x1
	.byte	0x9c
	.long	0x2bde3
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1188
	.byte	0x32
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "png_sig\0"
	.byte	0x6
	.word	0x118a
	.byte	0x19
	.long	0x2bdf3
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL22stbi__check_png_headerP13stbi__contextE7png_sig
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x118b
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x10
	.long	0x17db1
	.long	0x2bdf3
	.uleb128 0x12
	.long	0xe4
	.byte	0x7
	.byte	0
	.uleb128 0x14
	.long	0x2bde3
	.uleb128 0xd
	.ascii "stbi__get_chunk_header\0"
	.byte	0x6
	.word	0x1180
	.byte	0x17
	.long	0x18ce1
	.long	LFB1909
	.long	LFE1909-LFB1909
	.uleb128 0x1
	.byte	0x9c
	.long	0x2be43
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x1180
	.byte	0x3d
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x6
	.word	0x1182
	.byte	0x13
	.long	0x18ce1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x18
	.ascii "stbi_zlib_decode_noheader_buffer\0"
	.byte	0x6
	.word	0x1163
	.byte	0xd
	.long	0xf4
	.long	LFB1908
	.long	LFE1908-LFB1908
	.uleb128 0x1
	.byte	0x9c
	.long	0x2bed5
	.uleb128 0x3
	.ascii "obuffer\0"
	.byte	0x6
	.word	0x1163
	.byte	0x34
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "olen\0"
	.byte	0x6
	.word	0x1163
	.byte	0x41
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "ibuffer\0"
	.byte	0x6
	.word	0x1163
	.byte	0x53
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "ilen\0"
	.byte	0x6
	.word	0x1163
	.byte	0x60
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x6
	.word	0x1165
	.byte	0xf
	.long	0x18b6e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -4088
	.byte	0
	.uleb128 0x18
	.ascii "stbi_zlib_decode_noheader_malloc\0"
	.byte	0x6
	.word	0x1153
	.byte	0xf
	.long	0x461
	.long	LFB1907
	.long	LFE1907-LFB1907
	.uleb128 0x1
	.byte	0x9c
	.long	0x2bf5b
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x1153
	.byte	0x3c
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x6
	.word	0x1153
	.byte	0x48
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF375
	.byte	0x6
	.word	0x1153
	.byte	0x52
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x6
	.word	0x1155
	.byte	0xf
	.long	0x18b6e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -4092
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x1156
	.byte	0xa
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x18
	.ascii "stbi_zlib_decode_buffer\0"
	.byte	0x6
	.word	0x1148
	.byte	0xd
	.long	0xf4
	.long	LFB1906
	.long	LFE1906-LFB1906
	.uleb128 0x1
	.byte	0x9c
	.long	0x2bfe4
	.uleb128 0x3
	.ascii "obuffer\0"
	.byte	0x6
	.word	0x1148
	.byte	0x2b
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "olen\0"
	.byte	0x6
	.word	0x1148
	.byte	0x38
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "ibuffer\0"
	.byte	0x6
	.word	0x1148
	.byte	0x4a
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "ilen\0"
	.byte	0x6
	.word	0x1148
	.byte	0x57
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x6
	.word	0x114a
	.byte	0xf
	.long	0x18b6e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -4088
	.byte	0
	.uleb128 0x18
	.ascii "stbi_zlib_decode_malloc_guesssize_headerflag\0"
	.byte	0x6
	.word	0x1138
	.byte	0xf
	.long	0x461
	.long	LFB1905
	.long	LFE1905-LFB1905
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c096
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x1138
	.byte	0x48
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x6
	.word	0x1138
	.byte	0x54
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF376
	.byte	0x6
	.word	0x1138
	.byte	0x5d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF375
	.byte	0x6
	.word	0x1138
	.byte	0x70
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF377
	.byte	0x6
	.word	0x1138
	.byte	0x7c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x6
	.word	0x113a
	.byte	0xf
	.long	0x18b6e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -4092
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x113b
	.byte	0xa
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x18
	.ascii "stbi_zlib_decode_malloc\0"
	.byte	0x6
	.word	0x1133
	.byte	0xf
	.long	0x461
	.long	LFB1904
	.long	LFE1904-LFB1904
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c0f6
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x1133
	.byte	0x33
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x6
	.word	0x1133
	.byte	0x3f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF375
	.byte	0x6
	.word	0x1133
	.byte	0x49
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x18
	.ascii "stbi_zlib_decode_malloc_guesssize\0"
	.byte	0x6
	.word	0x1123
	.byte	0xf
	.long	0x461
	.long	LFB1903
	.long	LFE1903-LFB1903
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c18d
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x1123
	.byte	0x3d
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x6
	.word	0x1123
	.byte	0x49
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF376
	.byte	0x6
	.word	0x1123
	.byte	0x52
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF375
	.byte	0x6
	.word	0x1123
	.byte	0x65
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "a\0"
	.byte	0x6
	.word	0x1125
	.byte	0xf
	.long	0x18b6e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -4092
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x1126
	.byte	0xa
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__do_zlib\0"
	.byte	0x6
	.word	0x1119
	.byte	0xc
	.long	0xf4
	.long	LFB1902
	.long	LFE1902-LFB1902
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c203
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x1119
	.byte	0x26
	.long	0x2c203
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "obuf\0"
	.byte	0x6
	.word	0x1119
	.byte	0x2f
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "olen\0"
	.byte	0x6
	.word	0x1119
	.byte	0x39
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "exp\0"
	.byte	0x6
	.word	0x1119
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF377
	.byte	0x6
	.word	0x1119
	.byte	0x4c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x18b6e
	.uleb128 0xd
	.ascii "stbi__parse_zlib\0"
	.byte	0x6
	.word	0x10fd
	.byte	0xc
	.long	0xf4
	.long	LFB1901
	.long	LFE1901-LFB1901
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c272
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x10fd
	.byte	0x29
	.long	0x2c203
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF377
	.byte	0x6
	.word	0x10fd
	.byte	0x30
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "final\0"
	.byte	0x6
	.word	0x10ff
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF132
	.byte	0x6
	.word	0x10ff
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xd
	.ascii "stbi__parse_zlib_header\0"
	.byte	0x6
	.word	0x10d2
	.byte	0xc
	.long	0xf4
	.long	LFB1900
	.long	LFE1900-LFB1900
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c2df
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x10d2
	.byte	0x30
	.long	0x2c203
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "cmf\0"
	.byte	0x6
	.word	0x10d4
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "cm\0"
	.byte	0x6
	.word	0x10d5
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "flg\0"
	.byte	0x6
	.word	0x10d7
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0xd
	.ascii "stbi__parse_uncompressed_block\0"
	.byte	0x6
	.word	0x10b5
	.byte	0xc
	.long	0xf4
	.long	LFB1899
	.long	LFE1899-LFB1899
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c363
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x10b5
	.byte	0x37
	.long	0x2c203
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x7
	.secrel32	LASF248
	.byte	0x6
	.word	0x10b7
	.byte	0xc
	.long	0x292bc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x6
	.word	0x10b8
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "nlen\0"
	.byte	0x6
	.word	0x10b8
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x10b8
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__compute_huffman_codes\0"
	.byte	0x6
	.word	0x1083
	.byte	0xc
	.long	0xf4
	.long	LFB1898
	.long	LFE1898-LFB1898
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c4c3
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x1083
	.byte	0x34
	.long	0x2c203
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "length_dezigzag\0"
	.byte	0x6
	.word	0x1085
	.byte	0x19
	.long	0x2c4d3
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL27stbi__compute_huffman_codesP10stbi__zbufE15length_dezigzag
	.uleb128 0x1
	.ascii "z_codelength\0"
	.byte	0x6
	.word	0x1086
	.byte	0x13
	.long	0x18a7d
	.uleb128 0x3
	.byte	0x91
	.sleb128 -2072
	.uleb128 0x1
	.ascii "lencodes\0"
	.byte	0x6
	.word	0x1087
	.byte	0xc
	.long	0x2c4d8
	.uleb128 0x3
	.byte	0x91
	.sleb128 -2527
	.uleb128 0x1
	.ascii "codelength_sizes\0"
	.byte	0x6
	.word	0x1088
	.byte	0xc
	.long	0x2c4e9
	.uleb128 0x3
	.byte	0x91
	.sleb128 -2546
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x1089
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0x1089
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "hlit\0"
	.byte	0x6
	.word	0x108b
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "hdist\0"
	.byte	0x6
	.word	0x108c
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "hclen\0"
	.byte	0x6
	.word	0x108d
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "ntot\0"
	.byte	0x6
	.word	0x108e
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0xf
	.long	LBB299
	.long	LBE299-LBB299
	.long	0x2c48f
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x1092
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0x9
	.long	LBB300
	.long	LBE300-LBB300
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x6
	.word	0x1099
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x9
	.long	LBB302
	.long	LBE302-LBB302
	.uleb128 0x1
	.ascii "fill\0"
	.byte	0x6
	.word	0x109e
	.byte	0x12
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -29
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x17db1
	.long	0x2c4d3
	.uleb128 0x12
	.long	0xe4
	.byte	0x12
	.byte	0
	.uleb128 0x14
	.long	0x2c4c3
	.uleb128 0x10
	.long	0x17da0
	.long	0x2c4e9
	.uleb128 0x3a
	.long	0xe4
	.word	0x1c6
	.byte	0
	.uleb128 0x10
	.long	0x17da0
	.long	0x2c4f9
	.uleb128 0x12
	.long	0xe4
	.byte	0x12
	.byte	0
	.uleb128 0xd
	.ascii "stbi__parse_huffman_block\0"
	.byte	0x6
	.word	0x1059
	.byte	0xc
	.long	0xf4
	.long	LFB1897
	.long	LFE1897-LFB1897
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c5b3
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x1059
	.byte	0x32
	.long	0x2c203
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "zout\0"
	.byte	0x6
	.word	0x105b
	.byte	0xa
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB293
	.long	LBE293-LBB293
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x6
	.word	0x105d
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x9
	.long	LBB295
	.long	LBE295-LBB295
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x1066
	.byte	0x13
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x6
	.word	0x1067
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "dist\0"
	.byte	0x6
	.word	0x1067
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB297
	.long	LBE297-LBB297
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x6
	.word	0x107a
	.byte	0x15
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -37
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__zexpand\0"
	.byte	0x6
	.word	0x1035
	.byte	0xc
	.long	0xf4
	.long	LFB1896
	.long	LFE1896-LFB1896
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c64c
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0x1035
	.byte	0x26
	.long	0x2c203
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "zout\0"
	.byte	0x6
	.word	0x1035
	.byte	0x2f
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x6
	.word	0x1035
	.byte	0x39
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "q\0"
	.byte	0x6
	.word	0x1037
	.byte	0xa
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "cur\0"
	.byte	0x6
	.word	0x1038
	.byte	0x11
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "limit\0"
	.byte	0x6
	.word	0x1038
	.byte	0x16
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "old_limit\0"
	.byte	0x6
	.word	0x1038
	.byte	0x1d
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0xd
	.ascii "stbi__zhuffman_decode\0"
	.byte	0x6
	.word	0x1022
	.byte	0x18
	.long	0xf4
	.long	LFB1895
	.long	LFE1895-LFB1895
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c6b2
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x1022
	.byte	0x3a
	.long	0x2c203
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0x1022
	.byte	0x4d
	.long	0x2c6b2
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x6
	.word	0x1024
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x1024
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x18a7d
	.uleb128 0xd
	.ascii "stbi__zhuffman_decode_slowpath\0"
	.byte	0x6
	.word	0x100f
	.byte	0xc
	.long	0xf4
	.long	LFB1894
	.long	LFE1894-LFB1894
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c735
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x100f
	.byte	0x37
	.long	0x2c203
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0x100f
	.byte	0x4a
	.long	0x2c6b2
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x6
	.word	0x1011
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x1011
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x1011
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xd
	.ascii "stbi__zreceive\0"
	.byte	0x6
	.word	0x1005
	.byte	0x21
	.long	0xe4
	.long	LFB1893
	.long	LFE1893-LFB1893
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c786
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0x1005
	.byte	0x3c
	.long	0x2c203
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x6
	.word	0x1005
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x1007
	.byte	0x11
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__fill_bits\0"
	.byte	0x6
	.word	0xff9
	.byte	0xd
	.long	LFB1892
	.long	LFE1892-LFB1892
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c7b8
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0xff9
	.byte	0x29
	.long	0x2c203
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__zget8\0"
	.byte	0x6
	.word	0xff4
	.byte	0x1c
	.long	0x17da0
	.long	LFB1891
	.long	LFE1891-LFB1891
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c7ea
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0xff4
	.byte	0x34
	.long	0x2c203
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x27
	.ascii "stbi__zeof\0"
	.byte	0x6
	.word	0xfef
	.byte	0x18
	.long	0xf4
	.long	LFB1890
	.long	LFE1890-LFB1890
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c81b
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0xfef
	.byte	0x2f
	.long	0x2c203
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__zbuild_huffman\0"
	.byte	0x6
	.word	0xfac
	.byte	0xc
	.long	0xf4
	.long	LFB1889
	.long	LFE1889-LFB1889
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c929
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0xfac
	.byte	0x31
	.long	0x2c6b2
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "sizelist\0"
	.byte	0x6
	.word	0xfac
	.byte	0x43
	.long	0x18803
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "num\0"
	.byte	0x6
	.word	0xfac
	.byte	0x51
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xfae
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0xfae
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF166
	.byte	0x6
	.word	0xfaf
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "next_code\0"
	.byte	0x6
	.word	0xfaf
	.byte	0xe
	.long	0x2c929
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x7
	.secrel32	LASF252
	.byte	0x6
	.word	0xfaf
	.byte	0x1d
	.long	0x18377
	.uleb128 0x3
	.byte	0x91
	.sleb128 -176
	.uleb128 0x9
	.long	LBB287
	.long	LBE287-LBB287
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0xfc8
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x9
	.long	LBB289
	.long	LBE289-LBB289
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x6
	.word	0xfca
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "fastv\0"
	.byte	0x6
	.word	0xfcb
	.byte	0x17
	.long	0x17e7c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -42
	.uleb128 0x9
	.long	LBB291
	.long	LBE291-LBB291
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0xfcf
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0xf4
	.long	0x2c939
	.uleb128 0x12
	.long	0xe4
	.byte	0xf
	.byte	0
	.uleb128 0xd
	.ascii "stbi__bit_reverse\0"
	.byte	0x6
	.word	0xfa4
	.byte	0x18
	.long	0xf4
	.long	LFB1888
	.long	LFE1888-LFB1888
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c981
	.uleb128 0x3
	.ascii "v\0"
	.byte	0x6
	.word	0xfa4
	.byte	0x2e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF366
	.byte	0x6
	.word	0xfa4
	.byte	0x35
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x27
	.ascii "stbi__bitreverse16\0"
	.byte	0x6
	.word	0xf9b
	.byte	0x18
	.long	0xf4
	.long	LFB1887
	.long	LFE1887-LFB1887
	.uleb128 0x1
	.byte	0x9c
	.long	0x2c9ba
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x6
	.word	0xf9b
	.byte	0x2f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__jpeg_info\0"
	.byte	0x6
	.word	0xf77
	.byte	0xc
	.long	0xf4
	.long	LFB1886
	.long	LFE1886-LFB1886
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ca3a
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0xf77
	.byte	0x2b
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0xf77
	.byte	0x33
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0xf77
	.byte	0x3b
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0xf77
	.byte	0x43
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0xf79
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0xf7a
	.byte	0x10
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x18838
	.uleb128 0xd
	.ascii "stbi__jpeg_info_raw\0"
	.byte	0x6
	.word	0xf6b
	.byte	0xc
	.long	0xf4
	.long	LFB1885
	.long	LFE1885-LFB1885
	.uleb128 0x1
	.byte	0x9c
	.long	0x2caa6
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0xf6b
	.byte	0x2c
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0xf6b
	.byte	0x34
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0xf6b
	.byte	0x3c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0xf6b
	.byte	0x44
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.byte	0
	.uleb128 0xd
	.ascii "stbi__jpeg_test\0"
	.byte	0x6
	.word	0xf5f
	.byte	0xc
	.long	0xf4
	.long	LFB1884
	.long	LFE1884-LFB1884
	.uleb128 0x1
	.byte	0x9c
	.long	0x2caf8
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0xf5f
	.byte	0x2b
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0xf61
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0xf62
	.byte	0x10
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__jpeg_load\0"
	.byte	0x6
	.word	0xf53
	.byte	0xe
	.long	0x7aa
	.long	LFB1883
	.long	LFE1883-LFB1883
	.uleb128 0x1
	.byte	0x9c
	.long	0x2cb97
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0xf53
	.byte	0x2d
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0xf53
	.byte	0x35
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0xf53
	.byte	0x3d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0xf53
	.byte	0x45
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0xf53
	.byte	0x4f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ri\0"
	.byte	0x6
	.word	0xf53
	.byte	0x6c
	.long	0x28d4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0xf55
	.byte	0x13
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0xf56
	.byte	0x10
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "load_jpeg_image\0"
	.byte	0x6
	.word	0xeb4
	.byte	0x11
	.long	0x1803c
	.long	LFB1882
	.long	LFE1882-LFB1882
	.uleb128 0x1
	.byte	0x9c
	.long	0x2cdd3
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0xeb4
	.byte	0x2d
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "out_x\0"
	.byte	0x6
	.word	0xeb4
	.byte	0x35
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "out_y\0"
	.byte	0x6
	.word	0xeb4
	.byte	0x41
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0xeb4
	.byte	0x4d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0xeb4
	.byte	0x57
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0xeb6
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "decode_n\0"
	.byte	0x6
	.word	0xeb6
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "is_rgb\0"
	.byte	0x6
	.word	0xeb6
	.byte	0x15
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x9
	.long	LBB252
	.long	LBE252-LBB252
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0xecb
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xecc
	.byte	0x14
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0xecc
	.byte	0x16
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x7
	.secrel32	LASF326
	.byte	0x6
	.word	0xecd
	.byte	0x10
	.long	0x1803c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "coutput\0"
	.byte	0x6
	.word	0xece
	.byte	0x10
	.long	0x2cdd3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "res_comp\0"
	.byte	0x6
	.word	0xed0
	.byte	0x16
	.long	0x2cde3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -236
	.uleb128 0xf
	.long	LBB254
	.long	LBE254-LBB254
	.long	0x2ccd1
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0xed3
	.byte	0x1a
	.long	0x2cdf3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.uleb128 0x9
	.long	LBB256
	.long	LBE256-LBB256
	.uleb128 0x1
	.ascii "out\0"
	.byte	0x6
	.word	0xeee
	.byte	0x13
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0xf
	.long	LBB258
	.long	LBE258-LBB258
	.long	0x2cd1a
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0xef0
	.byte	0x1d
	.long	0x2cdf3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "y_bot\0"
	.byte	0x6
	.word	0xef1
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.byte	0
	.uleb128 0xf
	.long	LBB260
	.long	LBE260-LBB260
	.long	0x2cd6d
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x6
	.word	0xefe
	.byte	0x16
	.long	0x1803c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0xf
	.long	LBB268
	.long	LBE268-LBB268
	.long	0x2cd53
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x6
	.word	0xf0e
	.byte	0x1e
	.long	0x17da0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -81
	.byte	0
	.uleb128 0x9
	.long	LBB273
	.long	LBE273-LBB273
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x6
	.word	0xf18
	.byte	0x1e
	.long	0x17da0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -82
	.byte	0
	.byte	0
	.uleb128 0xf
	.long	LBB280
	.long	LBE280-LBB280
	.long	0x2cdb7
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x6
	.word	0xf34
	.byte	0x1b
	.long	0x17da0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -83
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0xf35
	.byte	0x1b
	.long	0x17da0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x6
	.word	0xf36
	.byte	0x1b
	.long	0x17da0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -85
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x6
	.word	0xf37
	.byte	0x1b
	.long	0x17da0
	.uleb128 0x3
	.byte	0x91
	.sleb128 -86
	.byte	0
	.uleb128 0x9
	.long	LBB283
	.long	LBE283-LBB283
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x6
	.word	0xf43
	.byte	0x19
	.long	0x1803c
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x1803c
	.long	0x2cde3
	.uleb128 0x12
	.long	0xe4
	.byte	0x3
	.byte	0
	.uleb128 0x10
	.long	0x18999
	.long	0x2cdf3
	.uleb128 0x12
	.long	0xe4
	.byte	0x3
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x18999
	.uleb128 0x27
	.ascii "stbi__blinn_8x8\0"
	.byte	0x6
	.word	0xeae
	.byte	0x10
	.long	0x17da0
	.long	LFB1881
	.long	LFE1881-LFB1881
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ce4b
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0xeae
	.byte	0x28
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0xeae
	.byte	0x33
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x6
	.word	0xeb0
	.byte	0x11
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__cleanup_jpeg\0"
	.byte	0x6
	.word	0xe9e
	.byte	0xd
	.long	LFB1880
	.long	LFE1880-LFB1880
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ce80
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0xe9e
	.byte	0x2c
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x38
	.ascii "stbi__setup_jpeg\0"
	.byte	0x6
	.word	0xe88
	.byte	0xd
	.long	LFB1879
	.long	LFE1879-LFB1879
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ceb3
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0xe88
	.byte	0x2a
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x38
	.ascii "stbi__YCbCr_to_RGB_row\0"
	.byte	0x6
	.word	0xde7
	.byte	0xd
	.long	LFB1878
	.long	LFE1878-LFB1878
	.uleb128 0x1
	.byte	0x9c
	.long	0x2cfb1
	.uleb128 0x3
	.ascii "out\0"
	.byte	0x6
	.word	0xde7
	.byte	0x2d
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0xde7
	.byte	0x41
	.long	0x18803
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "pcb\0"
	.byte	0x6
	.word	0xde7
	.byte	0x53
	.long	0x18803
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "pcr\0"
	.byte	0x6
	.word	0xde7
	.byte	0x67
	.long	0x18803
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF279
	.byte	0x6
	.word	0xde7
	.byte	0x70
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "step\0"
	.byte	0x6
	.word	0xde7
	.byte	0x7b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xde9
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x9
	.long	LBB251
	.long	LBE251-LBB251
	.uleb128 0x1
	.ascii "y_fixed\0"
	.byte	0x6
	.word	0xdeb
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0xdec
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x6
	.word	0xdec
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x6
	.word	0xdec
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "cr\0"
	.byte	0x6
	.word	0xded
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "cb\0"
	.byte	0x6
	.word	0xdee
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x27
	.ascii "stbi__resample_row_generic\0"
	.byte	0x6
	.word	0xdd9
	.byte	0x11
	.long	0x1803c
	.long	LFB1877
	.long	LFE1877-LFB1877
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d04d
	.uleb128 0x3
	.ascii "out\0"
	.byte	0x6
	.word	0xdd9
	.byte	0x35
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF378
	.byte	0x6
	.word	0xdd9
	.byte	0x43
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF379
	.byte	0x6
	.word	0xdd9
	.byte	0x55
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "w\0"
	.byte	0x6
	.word	0xdd9
	.byte	0x61
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "hs\0"
	.byte	0x6
	.word	0xdd9
	.byte	0x68
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xddc
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0xddc
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x27
	.ascii "stbi__resample_row_hv_2\0"
	.byte	0x6
	.word	0xd4c
	.byte	0x11
	.long	0x1803c
	.long	LFB1876
	.long	LFE1876-LFB1876
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d0f6
	.uleb128 0x3
	.ascii "out\0"
	.byte	0x6
	.word	0xd4c
	.byte	0x32
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF378
	.byte	0x6
	.word	0xd4c
	.byte	0x40
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF379
	.byte	0x6
	.word	0xd4c
	.byte	0x52
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "w\0"
	.byte	0x6
	.word	0xd4c
	.byte	0x5e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "hs\0"
	.byte	0x6
	.word	0xd4c
	.byte	0x65
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xd4f
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1
	.ascii "t0\0"
	.byte	0x6
	.word	0xd4f
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "t1\0"
	.byte	0x6
	.word	0xd4f
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x27
	.ascii "stbi__resample_row_h_2\0"
	.byte	0x6
	.word	0xd2e
	.byte	0x12
	.long	0x1803c
	.long	LFB1875
	.long	LFE1875-LFB1875
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d1aa
	.uleb128 0x3
	.ascii "out\0"
	.byte	0x6
	.word	0xd2e
	.byte	0x32
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF378
	.byte	0x6
	.word	0xd2e
	.byte	0x40
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF379
	.byte	0x6
	.word	0xd2e
	.byte	0x52
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "w\0"
	.byte	0x6
	.word	0xd2e
	.byte	0x5e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "hs\0"
	.byte	0x6
	.word	0xd2e
	.byte	0x65
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xd31
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1
	.ascii "input\0"
	.byte	0x6
	.word	0xd32
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x9
	.long	LBB249
	.long	LBE249-LBB249
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0xd3d
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x27
	.ascii "stbi__resample_row_v_2\0"
	.byte	0x6
	.word	0xd24
	.byte	0x11
	.long	0x1803c
	.long	LFB1874
	.long	LFE1874-LFB1874
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d234
	.uleb128 0x3
	.ascii "out\0"
	.byte	0x6
	.word	0xd24
	.byte	0x31
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF378
	.byte	0x6
	.word	0xd24
	.byte	0x3f
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF379
	.byte	0x6
	.word	0xd24
	.byte	0x51
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "w\0"
	.byte	0x6
	.word	0xd24
	.byte	0x5d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "hs\0"
	.byte	0x6
	.word	0xd24
	.byte	0x64
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xd27
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x27
	.ascii "resample_row_1\0"
	.byte	0x6
	.word	0xd1b
	.byte	0x11
	.long	0x1803c
	.long	LFB1873
	.long	LFE1873-LFB1873
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d2a8
	.uleb128 0x3
	.ascii "out\0"
	.byte	0x6
	.word	0xd1b
	.byte	0x29
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF378
	.byte	0x6
	.word	0xd1b
	.byte	0x37
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF379
	.byte	0x6
	.word	0xd1b
	.byte	0x49
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "w\0"
	.byte	0x6
	.word	0xd1b
	.byte	0x55
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "hs\0"
	.byte	0x6
	.word	0xd1b
	.byte	0x5c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xd
	.ascii "stbi__decode_jpeg_image\0"
	.byte	0x6
	.word	0xcec
	.byte	0xc
	.long	0xf4
	.long	LFB1872
	.long	LFE1872-LFB1872
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d338
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0xcec
	.byte	0x30
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x6
	.word	0xcee
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0xf
	.long	LBB244
	.long	LBE244-LBB244
	.long	0x2d30f
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x6
	.word	0xcfd
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x9
	.long	LBB247
	.long	LBE247-LBB247
	.uleb128 0x1
	.ascii "Ld\0"
	.byte	0x6
	.word	0xd06
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "NL\0"
	.byte	0x6
	.word	0xd07
	.byte	0x17
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__decode_jpeg_header\0"
	.byte	0x6
	.word	0xcd3
	.byte	0xc
	.long	0xf4
	.long	LFB1871
	.long	LFE1871-LFB1871
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d396
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0xcd3
	.byte	0x31
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "scan\0"
	.byte	0x6
	.word	0xcd3
	.byte	0x38
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x6
	.word	0xcd5
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__process_frame_header\0"
	.byte	0x6
	.word	0xc75
	.byte	0xc
	.long	0xf4
	.long	LFB1870
	.long	LFE1870-LFB1870
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d47e
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0xc75
	.byte	0x33
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "scan\0"
	.byte	0x6
	.word	0xc75
	.byte	0x3a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0xc77
	.byte	0x13
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "Lf\0"
	.byte	0x6
	.word	0xc78
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0xc78
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xc78
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "q\0"
	.byte	0x6
	.word	0xc78
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "h_max\0"
	.byte	0x6
	.word	0xc78
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "v_max\0"
	.byte	0x6
	.word	0xc78
	.byte	0x1a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x6
	.word	0xc78
	.byte	0x22
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x9
	.long	LBB238
	.long	LBE238-LBB238
	.uleb128 0x1
	.ascii "rgb\0"
	.byte	0x6
	.word	0xc8b
	.byte	0x22
	.long	0x2d48e
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL26stbi__process_frame_headerP10stbi__jpegiE3rgb
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x6a8
	.long	0x2d48e
	.uleb128 0x12
	.long	0xe4
	.byte	0x2
	.byte	0
	.uleb128 0x14
	.long	0x2d47e
	.uleb128 0xd
	.ascii "stbi__free_jpeg_components\0"
	.byte	0x6
	.word	0xc5f
	.byte	0xc
	.long	0xf4
	.long	LFB1869
	.long	LFE1869-LFB1869
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d504
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0xc5f
	.byte	0x33
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "ncomp\0"
	.byte	0x6
	.word	0xc5f
	.byte	0x3a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "why\0"
	.byte	0x6
	.word	0xc5f
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xc61
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__process_scan_header\0"
	.byte	0x6
	.word	0xc38
	.byte	0xc
	.long	0xf4
	.long	LFB1868
	.long	LFE1868-LFB1868
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d5b7
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0xc38
	.byte	0x32
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xc3a
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "Ls\0"
	.byte	0x6
	.word	0xc3b
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0xf
	.long	LBB235
	.long	LBE235-LBB235
	.long	0x2d59d
	.uleb128 0x1
	.ascii "id\0"
	.byte	0x6
	.word	0xc40
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "which\0"
	.byte	0x6
	.word	0xc40
	.byte	0x22
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "q\0"
	.byte	0x6
	.word	0xc41
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x9
	.long	LBB236
	.long	LBE236-LBB236
	.uleb128 0x1
	.ascii "aa\0"
	.byte	0x6
	.word	0xc4c
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__process_marker\0"
	.byte	0x6
	.word	0xbd1
	.byte	0xc
	.long	0xf4
	.long	LFB1867
	.long	LFE1867-LFB1867
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d759
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0xbd1
	.byte	0x2d
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "m\0"
	.byte	0x6
	.word	0xbd1
	.byte	0x34
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "L\0"
	.byte	0x6
	.word	0xbd3
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0xf
	.long	LBB225
	.long	LBE225-LBB225
	.long	0x2d668
	.uleb128 0x1
	.ascii "q\0"
	.byte	0x6
	.word	0xbe0
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0xbe1
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "sixteen\0"
	.byte	0x6
	.word	0xbe1
	.byte	0x1d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x6
	.word	0xbe2
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xbe2
	.byte	0x1c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xf
	.long	LBB226
	.long	LBE226-LBB226
	.long	0x2d6e0
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x6
	.word	0xbef
	.byte	0x16
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF252
	.byte	0x6
	.word	0xbf0
	.byte	0x11
	.long	0x2c929
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xbf0
	.byte	0x1b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0xbf0
	.byte	0x1d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "q\0"
	.byte	0x6
	.word	0xbf1
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "tc\0"
	.byte	0x6
	.word	0xbf2
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "th\0"
	.byte	0x6
	.word	0xbf3
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.byte	0
	.uleb128 0xf
	.long	LBB230
	.long	LBE230-LBB230
	.long	0x2d71e
	.uleb128 0x1
	.ascii "tag\0"
	.byte	0x6
	.word	0xc16
	.byte	0x25
	.long	0x2d769
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL20stbi__process_markerP10stbi__jpegiE3tag
	.uleb128 0x1
	.ascii "ok\0"
	.byte	0x6
	.word	0xc17
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xc18
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.uleb128 0x9
	.long	LBB233
	.long	LBE233-LBB233
	.uleb128 0x1
	.ascii "tag\0"
	.byte	0x6
	.word	0xc20
	.byte	0x25
	.long	0x2d77e
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL20stbi__process_markerP10stbi__jpegiE3tag_0
	.uleb128 0x1
	.ascii "ok\0"
	.byte	0x6
	.word	0xc21
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xc22
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x6a8
	.long	0x2d769
	.uleb128 0x12
	.long	0xe4
	.byte	0x4
	.byte	0
	.uleb128 0x14
	.long	0x2d759
	.uleb128 0x10
	.long	0x6a8
	.long	0x2d77e
	.uleb128 0x12
	.long	0xe4
	.byte	0x5
	.byte	0
	.uleb128 0x14
	.long	0x2d76e
	.uleb128 0x1c
	.ascii "stbi__jpeg_finish\0"
	.byte	0x6
	.word	0xbbe
	.byte	0xd
	.long	LFB1866
	.long	LFE1866-LFB1866
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d82b
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0xbbe
	.byte	0x2b
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.long	LBB216
	.long	LBE216-LBB216
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xbc2
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0xbc2
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0xbc2
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x9
	.long	LBB218
	.long	LBE218-LBB218
	.uleb128 0x1
	.ascii "w\0"
	.byte	0x6
	.word	0xbc4
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "h\0"
	.byte	0x6
	.word	0xbc5
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x9
	.long	LBB222
	.long	LBE222-LBB222
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x6
	.word	0xbc8
	.byte	0x17
	.long	0x94e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x38
	.ascii "stbi__jpeg_dequantize\0"
	.byte	0x6
	.word	0xbb7
	.byte	0xd
	.long	LFB1865
	.long	LFE1865-LFB1865
	.uleb128 0x1
	.byte	0x9c
	.long	0x2d883
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x6
	.word	0xbb7
	.byte	0x2a
	.long	0x94e
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF169
	.byte	0x6
	.word	0xbb7
	.byte	0x3e
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xbb9
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0xd
	.ascii "stbi__parse_entropy_coded_data\0"
	.byte	0x6
	.word	0xb3b
	.byte	0xc
	.long	0xf4
	.long	LFB1864
	.long	LFE1864-LFB1864
	.uleb128 0x1
	.byte	0x9c
	.long	0x2db38
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0xb3b
	.byte	0x37
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0xf
	.long	LBB179
	.long	LBE179-LBB179
	.long	0x2d949
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xb40
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0xb40
	.byte	0x10
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x6
	.word	0xb41
	.byte	0xa
	.long	0x2db38
	.uleb128 0x3
	.byte	0x91
	.sleb128 -284
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0xb42
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "w\0"
	.byte	0x6
	.word	0xb47
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "h\0"
	.byte	0x6
	.word	0xb48
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x9
	.long	LBB183
	.long	LBE183-LBB183
	.uleb128 0x1
	.ascii "ha\0"
	.byte	0x6
	.word	0xb4b
	.byte	0x14
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.byte	0
	.byte	0
	.uleb128 0xf
	.long	LBB184
	.long	LBE184-LBB184
	.long	0x2da01
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xb5a
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0xb5a
	.byte	0x10
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0xb5a
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x6
	.word	0xb5a
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x6
	.word	0xb5a
	.byte	0x16
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x6
	.word	0xb5b
	.byte	0xa
	.long	0x2db38
	.uleb128 0x3
	.byte	0x91
	.sleb128 -284
	.uleb128 0x9
	.long	LBB190
	.long	LBE190-LBB190
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0xb60
	.byte	0x17
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x9
	.long	LBB194
	.long	LBE194-LBB194
	.uleb128 0x1
	.ascii "x2\0"
	.byte	0x6
	.word	0xb65
	.byte	0x1d
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1
	.ascii "y2\0"
	.byte	0x6
	.word	0xb66
	.byte	0x1d
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "ha\0"
	.byte	0x6
	.word	0xb67
	.byte	0x1d
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xf
	.long	LBB197
	.long	LBE197-LBB197
	.long	0x2da8e
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xb7a
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0xb7a
	.byte	0x10
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0xb7b
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x1
	.ascii "w\0"
	.byte	0x6
	.word	0xb80
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x1
	.ascii "h\0"
	.byte	0x6
	.word	0xb81
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x9
	.long	LBB201
	.long	LBE201-LBB201
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x6
	.word	0xb84
	.byte	0x17
	.long	0x94e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x9
	.long	LBB203
	.long	LBE203-LBB203
	.uleb128 0x1
	.ascii "ha\0"
	.byte	0x6
	.word	0xb89
	.byte	0x17
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB204
	.long	LBE204-LBB204
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0xb97
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0xb97
	.byte	0x10
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0xb97
	.byte	0x12
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x6
	.word	0xb97
	.byte	0x14
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x6
	.word	0xb97
	.byte	0x16
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x9
	.long	LBB210
	.long	LBE210-LBB210
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0xb9c
	.byte	0x17
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x9
	.long	LBB214
	.long	LBE214-LBB214
	.uleb128 0x1
	.ascii "x2\0"
	.byte	0x6
	.word	0xba1
	.byte	0x1d
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x1
	.ascii "y2\0"
	.byte	0x6
	.word	0xba2
	.byte	0x1d
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x6
	.word	0xba3
	.byte	0x20
	.long	0x94e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -156
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x941
	.long	0x2db48
	.uleb128 0x12
	.long	0xe4
	.byte	0x3f
	.byte	0
	.uleb128 0x38
	.ascii "stbi__jpeg_reset\0"
	.byte	0x6
	.word	0xb2e
	.byte	0xd
	.long	LFB1863
	.long	LFE1863-LFB1863
	.uleb128 0x1
	.byte	0x9c
	.long	0x2db7b
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0xb2e
	.byte	0x2a
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__get_marker\0"
	.byte	0x6
	.word	0xb1d
	.byte	0x10
	.long	0x17da0
	.long	LFB1862
	.long	LFE1862-LFB1862
	.uleb128 0x1
	.byte	0x9c
	.long	0x2dbc0
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0xb1d
	.byte	0x2d
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x6
	.word	0xb1f
	.byte	0xc
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__idct_block\0"
	.byte	0x6
	.word	0x959
	.byte	0xd
	.long	LFB1861
	.long	LFE1861-LFB1861
	.uleb128 0x1
	.byte	0x9c
	.long	0x2de30
	.uleb128 0x3
	.ascii "out\0"
	.byte	0x6
	.word	0x959
	.byte	0x27
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF329
	.byte	0x6
	.word	0x959
	.byte	0x30
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x6
	.word	0x959
	.byte	0x42
	.long	0x94e
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x95b
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "val\0"
	.byte	0x6
	.word	0x95b
	.byte	0xa
	.long	0x2de30
	.uleb128 0x3
	.byte	0x91
	.sleb128 -396
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x6
	.word	0x95b
	.byte	0x13
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "o\0"
	.byte	0x6
	.word	0x95c
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "d\0"
	.byte	0x6
	.word	0x95d
	.byte	0xb
	.long	0x94e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0xf
	.long	LBB172
	.long	LBE172-LBB172
	.long	0x2dc7e
	.uleb128 0x1
	.ascii "dcterm\0"
	.byte	0x6
	.word	0x968
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0xf
	.long	LBB173
	.long	LBE173-LBB173
	.long	0x2dd55
	.uleb128 0x1
	.ascii "t0\0"
	.byte	0x6
	.word	0x96b
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "t1\0"
	.byte	0x6
	.word	0x96b
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "t2\0"
	.byte	0x6
	.word	0x96b
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "t3\0"
	.byte	0x6
	.word	0x96b
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "p1\0"
	.byte	0x6
	.word	0x96b
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "p2\0"
	.byte	0x6
	.word	0x96b
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "p3\0"
	.byte	0x6
	.word	0x96b
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "p4\0"
	.byte	0x6
	.word	0x96b
	.byte	0xa
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "p5\0"
	.byte	0x6
	.word	0x96b
	.byte	0xa
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "x0\0"
	.byte	0x6
	.word	0x96b
	.byte	0xa
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x6
	.word	0x96b
	.byte	0xa
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "x2\0"
	.byte	0x6
	.word	0x96b
	.byte	0xa
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "x3\0"
	.byte	0x6
	.word	0x96b
	.byte	0xa
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0x9
	.long	LBB175
	.long	LBE175-LBB175
	.uleb128 0x1
	.ascii "t0\0"
	.byte	0x6
	.word	0x97c
	.byte	0x7
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1
	.ascii "t1\0"
	.byte	0x6
	.word	0x97c
	.byte	0x7
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "t2\0"
	.byte	0x6
	.word	0x97c
	.byte	0x7
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1
	.ascii "t3\0"
	.byte	0x6
	.word	0x97c
	.byte	0x7
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "p1\0"
	.byte	0x6
	.word	0x97c
	.byte	0x7
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "p2\0"
	.byte	0x6
	.word	0x97c
	.byte	0x7
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "p3\0"
	.byte	0x6
	.word	0x97c
	.byte	0x7
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "p4\0"
	.byte	0x6
	.word	0x97c
	.byte	0x7
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x1
	.ascii "p5\0"
	.byte	0x6
	.word	0x97c
	.byte	0x7
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x1
	.ascii "x0\0"
	.byte	0x6
	.word	0x97c
	.byte	0x7
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x1
	.ascii "x1\0"
	.byte	0x6
	.word	0x97c
	.byte	0x7
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x1
	.ascii "x2\0"
	.byte	0x6
	.word	0x97c
	.byte	0x7
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x1
	.ascii "x3\0"
	.byte	0x6
	.word	0x97c
	.byte	0x7
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0xf4
	.long	0x2de40
	.uleb128 0x12
	.long	0xe4
	.byte	0x3f
	.byte	0
	.uleb128 0x27
	.ascii "stbi__clamp\0"
	.byte	0x6
	.word	0x926
	.byte	0x1c
	.long	0x17da0
	.long	LFB1860
	.long	LFE1860-LFB1860
	.uleb128 0x1
	.byte	0x9c
	.long	0x2de72
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x926
	.byte	0x2c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__jpeg_decode_block_prog_ac\0"
	.byte	0x6
	.word	0x8ae
	.byte	0xc
	.long	0xf4
	.long	LFB1859
	.long	LFE1859-LFB1859
	.uleb128 0x1
	.byte	0x9c
	.long	0x2dff7
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0x8ae
	.byte	0x38
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x6
	.word	0x8ae
	.byte	0x41
	.long	0x94e
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "hac\0"
	.byte	0x6
	.word	0x8ae
	.byte	0x5a
	.long	0x2dff7
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "fac\0"
	.byte	0x6
	.word	0x8ae
	.byte	0x6c
	.long	0x2dffd
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x8b0
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0xf
	.long	LBB157
	.long	LBE157-LBB157
	.long	0x2df72
	.uleb128 0x1
	.ascii "shift\0"
	.byte	0x6
	.word	0x8b4
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB158
	.long	LBE158-LBB158
	.uleb128 0x1
	.ascii "zig\0"
	.byte	0x6
	.word	0x8bd
	.byte	0x17
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x6
	.word	0x8be
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0x8be
	.byte	0x10
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x8be
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x9
	.long	LBB160
	.long	LBE160-LBB160
	.uleb128 0x1
	.ascii "rs\0"
	.byte	0x6
	.word	0x8ca
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB161
	.long	LBE161-LBB161
	.uleb128 0x1
	.ascii "bit\0"
	.byte	0x6
	.word	0x8e1
	.byte	0xd
	.long	0x941
	.uleb128 0x2
	.byte	0x91
	.sleb128 -54
	.uleb128 0xf
	.long	LBB165
	.long	LBE165-LBB165
	.long	0x2dfa7
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x8e6
	.byte	0x14
	.long	0x94e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.uleb128 0x9
	.long	LBB167
	.long	LBE167-LBB167
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0x8f3
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x8f3
	.byte	0x13
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "rs\0"
	.byte	0x6
	.word	0x8f4
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x9
	.long	LBB168
	.long	LBE168-LBB168
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x6
	.word	0x90e
	.byte	0x17
	.long	0x94e
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x18387
	.uleb128 0xc
	.byte	0x4
	.long	0x17e92
	.uleb128 0xd
	.ascii "stbi__jpeg_decode_block_prog_dc\0"
	.byte	0x6
	.word	0x892
	.byte	0xc
	.long	0xf4
	.long	LFB1858
	.long	LFE1858-LFB1858
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e0a4
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0x892
	.byte	0x38
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x6
	.word	0x892
	.byte	0x41
	.long	0x94e
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "hdc\0"
	.byte	0x6
	.word	0x892
	.byte	0x5a
	.long	0x2dff7
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x6
	.word	0x892
	.byte	0x63
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x7
	.secrel32	LASF293
	.byte	0x6
	.word	0x894
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "dc\0"
	.byte	0x6
	.word	0x894
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x6
	.word	0x895
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__jpeg_decode_block\0"
	.byte	0x6
	.word	0x85e
	.byte	0xc
	.long	0xf4
	.long	LFB1857
	.long	LFE1857-LFB1857
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e1d0
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0x85e
	.byte	0x30
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x6
	.word	0x85e
	.byte	0x39
	.long	0x94e
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "hdc\0"
	.byte	0x6
	.word	0x85e
	.byte	0x52
	.long	0x2dff7
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "hac\0"
	.byte	0x6
	.word	0x85e
	.byte	0x66
	.long	0x2dff7
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "fac\0"
	.byte	0x6
	.word	0x85e
	.byte	0x78
	.long	0x2dffd
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x6
	.word	0x85e
	.byte	0x81
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF169
	.byte	0x6
	.word	0x85e
	.byte	0x92
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x7
	.secrel32	LASF293
	.byte	0x6
	.word	0x860
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "dc\0"
	.byte	0x6
	.word	0x860
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x860
	.byte	0x10
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "t\0"
	.byte	0x6
	.word	0x861
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x4b
	.secrel32	Ldebug_ranges0+0
	.uleb128 0x1
	.ascii "zig\0"
	.byte	0x6
	.word	0x872
	.byte	0x14
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x6
	.word	0x873
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x6
	.word	0x873
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x873
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x4b
	.secrel32	Ldebug_ranges0+0x18
	.uleb128 0x1
	.ascii "rs\0"
	.byte	0x6
	.word	0x880
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__jpeg_get_bit\0"
	.byte	0x6
	.word	0x842
	.byte	0x18
	.long	0xf4
	.long	LFB1856
	.long	LFE1856-LFB1856
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e217
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0x842
	.byte	0x37
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x844
	.byte	0x11
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__jpeg_get_bits\0"
	.byte	0x6
	.word	0x837
	.byte	0x18
	.long	0xf4
	.long	LFB1855
	.long	LFE1855-LFB1855
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e26d
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0x837
	.byte	0x38
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x6
	.word	0x837
	.byte	0x3f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x839
	.byte	0x11
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__extend_receive\0"
	.byte	0x6
	.word	0x827
	.byte	0x18
	.long	0xf4
	.long	LFB1854
	.long	LFE1854-LFB1854
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e2d4
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0x827
	.byte	0x39
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x6
	.word	0x827
	.byte	0x40
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x829
	.byte	0x11
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "sgn\0"
	.byte	0x6
	.word	0x82a
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__jpeg_huff_decode\0"
	.byte	0x6
	.word	0x7f1
	.byte	0x18
	.long	0xf4
	.long	LFB1853
	.long	LFE1853-LFB1853
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e363
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0x7f1
	.byte	0x3b
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "h\0"
	.byte	0x6
	.word	0x7f1
	.byte	0x4d
	.long	0x2dff7
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x7
	.secrel32	LASF274
	.byte	0x6
	.word	0x7f3
	.byte	0x11
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x6
	.word	0x7f4
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x7f4
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB149
	.long	LBE149-LBB149
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x7fd
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__grow_buffer_unsafe\0"
	.byte	0x6
	.word	0x7db
	.byte	0xd
	.long	LFB1852
	.long	LFE1852-LFB1852
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e3ce
	.uleb128 0x3
	.ascii "j\0"
	.byte	0x6
	.word	0x7db
	.byte	0x32
	.long	0x2ca3a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x9
	.long	LBB145
	.long	LBE145-LBB145
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x6
	.word	0x7de
	.byte	0x14
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB147
	.long	LBE147-LBB147
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x6
	.word	0x7e0
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x38
	.ascii "stbi__build_fast_ac\0"
	.byte	0x6
	.word	0x7c2
	.byte	0xd
	.long	LFB1851
	.long	LFE1851-LFB1851
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e4b4
	.uleb128 0x3
	.ascii "fast_ac\0"
	.byte	0x6
	.word	0x7c2
	.byte	0x2e
	.long	0x2dffd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "h\0"
	.byte	0x6
	.word	0x7c2
	.byte	0x46
	.long	0x2dff7
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x7c4
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x9
	.long	LBB140
	.long	LBE140-LBB140
	.uleb128 0x1
	.ascii "fast\0"
	.byte	0x6
	.word	0x7c6
	.byte	0xf
	.long	0x17da0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x9
	.long	LBB142
	.long	LBE142-LBB142
	.uleb128 0x1
	.ascii "rs\0"
	.byte	0x6
	.word	0x7c9
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "run\0"
	.byte	0x6
	.word	0x7ca
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "magbits\0"
	.byte	0x6
	.word	0x7cb
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x6
	.word	0x7cc
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x9
	.long	LBB144
	.long	LBE144-LBB144
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x7d0
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x6
	.word	0x7d1
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__build_huffman\0"
	.byte	0x6
	.word	0x796
	.byte	0xc
	.long	0xf4
	.long	LFB1850
	.long	LFE1850-LFB1850
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e576
	.uleb128 0x3
	.ascii "h\0"
	.byte	0x6
	.word	0x796
	.byte	0x2f
	.long	0x2dff7
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF279
	.byte	0x6
	.word	0x796
	.byte	0x37
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x798
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0x798
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x798
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF166
	.byte	0x6
	.word	0x799
	.byte	0x11
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB136
	.long	LBE136-LBB136
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x7b4
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x9
	.long	LBB138
	.long	LBE138-LBB138
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x6
	.word	0x7b6
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x6
	.word	0x7b7
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__hdr_to_ldr\0"
	.byte	0x6
	.word	0x71f
	.byte	0x11
	.long	0x1803c
	.long	LFB1849
	.long	LFE1849-LFB1849
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e649
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x6
	.word	0x71f
	.byte	0x2b
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x71f
	.byte	0x35
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x71f
	.byte	0x3c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x71f
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x721
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x721
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0x721
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF326
	.byte	0x6
	.word	0x722
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0xf
	.long	LBB132
	.long	LBE132-LBB132
	.long	0x2e630
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x6
	.word	0x72a
	.byte	0x10
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x9
	.long	LBB134
	.long	LBE134-LBB134
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x6
	.word	0x730
	.byte	0x10
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__ldr_to_hdr\0"
	.byte	0x6
	.word	0x705
	.byte	0x11
	.long	0x16fa3
	.long	LFB1848
	.long	LFE1848-LFB1848
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e6e8
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x6
	.word	0x705
	.byte	0x2b
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x705
	.byte	0x35
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x705
	.byte	0x3c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x705
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x707
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x6
	.word	0x707
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0x707
	.byte	0xc
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF326
	.byte	0x6
	.word	0x708
	.byte	0xb
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0xd
	.ascii "stbi__convert_format16\0"
	.byte	0x6
	.word	0x6d7
	.byte	0x16
	.long	0x2a2dc
	.long	LFB1847
	.long	LFE1847-LFB1847
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e7ba
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x6
	.word	0x6d7
	.byte	0x3b
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF165
	.byte	0x6
	.word	0x6d7
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x6d7
	.byte	0x50
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x6d7
	.byte	0x67
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x6d7
	.byte	0x77
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x6d9
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0x6d9
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "good\0"
	.byte	0x6
	.word	0x6da
	.byte	0x12
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x9
	.long	LBB128
	.long	LBE128-LBB128
	.uleb128 0x1
	.ascii "src\0"
	.byte	0x6
	.word	0x6e6
	.byte	0x15
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF269
	.byte	0x6
	.word	0x6e7
	.byte	0x15
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x27
	.ascii "stbi__compute_y_16\0"
	.byte	0x6
	.word	0x6ce
	.byte	0x15
	.long	0x17e7c
	.long	LFB1846
	.long	LFE1846-LFB1846
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e80f
	.uleb128 0x3
	.ascii "r\0"
	.byte	0x6
	.word	0x6ce
	.byte	0x2c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "g\0"
	.byte	0x6
	.word	0x6ce
	.byte	0x33
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x6
	.word	0x6ce
	.byte	0x3a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xd
	.ascii "stbi__convert_format\0"
	.byte	0x6
	.word	0x69e
	.byte	0x17
	.long	0x954
	.long	LFB1845
	.long	LFE1845-LFB1845
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e8df
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x6
	.word	0x69e
	.byte	0x3b
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF165
	.byte	0x6
	.word	0x69e
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x69e
	.byte	0x50
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x69e
	.byte	0x67
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x69e
	.byte	0x77
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x6a0
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x6
	.word	0x6a0
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "good\0"
	.byte	0x6
	.word	0x6a1
	.byte	0x13
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x9
	.long	LBB126
	.long	LBE126-LBB126
	.uleb128 0x1
	.ascii "src\0"
	.byte	0x6
	.word	0x6ad
	.byte	0x16
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF269
	.byte	0x6
	.word	0x6ae
	.byte	0x16
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x27
	.ascii "stbi__compute_y\0"
	.byte	0x6
	.word	0x695
	.byte	0x10
	.long	0x17da0
	.long	LFB1844
	.long	LFE1844-LFB1844
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e931
	.uleb128 0x3
	.ascii "r\0"
	.byte	0x6
	.word	0x695
	.byte	0x24
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "g\0"
	.byte	0x6
	.word	0x695
	.byte	0x2b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x6
	.word	0x695
	.byte	0x32
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xd
	.ascii "stbi__get32le\0"
	.byte	0x6
	.word	0x67e
	.byte	0x15
	.long	0x17ea7
	.long	LFB1843
	.long	LFE1843-LFB1843
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e973
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x67e
	.byte	0x32
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x6
	.word	0x680
	.byte	0x11
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__get16le\0"
	.byte	0x6
	.word	0x676
	.byte	0xc
	.long	0xf4
	.long	LFB1842
	.long	LFE1842-LFB1842
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e9b5
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x676
	.byte	0x29
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x6
	.word	0x678
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__get32be\0"
	.byte	0x6
	.word	0x66c
	.byte	0x15
	.long	0x17ea7
	.long	LFB1841
	.long	LFE1841-LFB1841
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e9f7
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x66c
	.byte	0x32
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x6
	.word	0x66e
	.byte	0x11
	.long	0x17ea7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__get16be\0"
	.byte	0x6
	.word	0x662
	.byte	0xc
	.long	0xf4
	.long	LFB1840
	.long	LFE1840-LFB1840
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ea39
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x662
	.byte	0x29
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x6
	.word	0x664
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__getn\0"
	.byte	0x6
	.word	0x646
	.byte	0xc
	.long	0xf4
	.long	LFB1839
	.long	LFE1839-LFB1839
	.uleb128 0x1
	.byte	0x9c
	.long	0x2eacd
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x646
	.byte	0x26
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x646
	.byte	0x32
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x6
	.word	0x646
	.byte	0x3e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x9
	.long	LBB122
	.long	LBE122-LBB122
	.uleb128 0x1
	.ascii "blen\0"
	.byte	0x6
	.word	0x649
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB124
	.long	LBE124-LBB124
	.uleb128 0x1
	.ascii "res\0"
	.byte	0x6
	.word	0x64b
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF279
	.byte	0x6
	.word	0x64b
	.byte	0x13
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__skip\0"
	.byte	0x6
	.word	0x630
	.byte	0xd
	.long	LFB1838
	.long	LFE1838-LFB1838
	.uleb128 0x1
	.byte	0x9c
	.long	0x2eb23
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x630
	.byte	0x27
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x6
	.word	0x630
	.byte	0x2e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x9
	.long	LBB120
	.long	LBE120-LBB120
	.uleb128 0x1
	.ascii "blen\0"
	.byte	0x6
	.word	0x638
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__at_eof\0"
	.byte	0x6
	.word	0x620
	.byte	0x18
	.long	0xf4
	.long	LFB1837
	.long	LFE1837-LFB1837
	.uleb128 0x1
	.byte	0x9c
	.long	0x2eb56
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x620
	.byte	0x34
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__get8\0"
	.byte	0x6
	.word	0x612
	.byte	0x1c
	.long	0x17da0
	.long	LFB1836
	.long	LFE1836-LFB1836
	.uleb128 0x1
	.byte	0x9c
	.long	0x2eb87
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x612
	.byte	0x36
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__refill_buffer\0"
	.byte	0x6
	.word	0x601
	.byte	0xd
	.long	LFB1835
	.long	LFE1835-LFB1835
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ebcb
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x601
	.byte	0x30
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x6
	.word	0x603
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x52
	.ascii "stbi_hdr_to_ldr_scale\0"
	.byte	0x6
	.word	0x5f2
	.byte	0x10
	.long	LFB1834
	.long	LFE1834-LFB1834
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ec05
	.uleb128 0x4
	.secrel32	LASF217
	.byte	0x6
	.word	0x5f2
	.byte	0x2c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x52
	.ascii "stbi_hdr_to_ldr_gamma\0"
	.byte	0x6
	.word	0x5f1
	.byte	0x10
	.long	LFB1833
	.long	LFE1833-LFB1833
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ec41
	.uleb128 0x3
	.ascii "gamma\0"
	.byte	0x6
	.word	0x5f1
	.byte	0x2c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x52
	.ascii "stbi_ldr_to_hdr_scale\0"
	.byte	0x6
	.word	0x5ec
	.byte	0x10
	.long	LFB1832
	.long	LFE1832-LFB1832
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ec7b
	.uleb128 0x4
	.secrel32	LASF217
	.byte	0x6
	.word	0x5ec
	.byte	0x2c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x52
	.ascii "stbi_ldr_to_hdr_gamma\0"
	.byte	0x6
	.word	0x5eb
	.byte	0x10
	.long	LFB1831
	.long	LFE1831-LFB1831
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ecb7
	.uleb128 0x3
	.ascii "gamma\0"
	.byte	0x6
	.word	0x5eb
	.byte	0x2c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x18
	.ascii "stbi_is_hdr_from_callbacks\0"
	.byte	0x6
	.word	0x5db
	.byte	0x12
	.long	0xf4
	.long	LFB1830
	.long	LFE1830-LFB1830
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ed1a
	.uleb128 0x3
	.ascii "clbk\0"
	.byte	0x6
	.word	0x5db
	.byte	0x46
	.long	0x2871c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF357
	.byte	0x6
	.word	0x5db
	.byte	0x52
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x5de
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.byte	0
	.uleb128 0x18
	.ascii "stbi_is_hdr_from_file\0"
	.byte	0x6
	.word	0x5ca
	.byte	0xd
	.long	0xf4
	.long	LFB1829
	.long	LFE1829-LFB1829
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ed85
	.uleb128 0x3
	.ascii "f\0"
	.byte	0x6
	.word	0x5ca
	.byte	0x29
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "pos\0"
	.byte	0x6
	.word	0x5cd
	.byte	0x9
	.long	0x14d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "res\0"
	.byte	0x6
	.word	0x5ce
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x5cf
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -212
	.byte	0
	.uleb128 0x18
	.ascii "stbi_is_hdr\0"
	.byte	0x6
	.word	0x5bf
	.byte	0x12
	.long	0xf4
	.long	LFB1828
	.long	LFE1828-LFB1828
	.uleb128 0x1
	.byte	0x9c
	.long	0x2edd7
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x6
	.word	0x5bf
	.byte	0x34
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "f\0"
	.byte	0x6
	.word	0x5c1
	.byte	0xa
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0x5c2
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x18
	.ascii "stbi_is_hdr_from_memory\0"
	.byte	0x6
	.word	0x5b1
	.byte	0xd
	.long	0xf4
	.long	LFB1827
	.long	LFE1827-LFB1827
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ee36
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x5b1
	.byte	0x34
	.long	0x18803
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x6
	.word	0x5b1
	.byte	0x40
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x5b4
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.byte	0
	.uleb128 0x18
	.ascii "stbi_loadf_from_file\0"
	.byte	0x6
	.word	0x5a3
	.byte	0x10
	.long	0x16fa3
	.long	LFB1826
	.long	LFE1826-LFB1826
	.uleb128 0x1
	.byte	0x9c
	.long	0x2eebc
	.uleb128 0x3
	.ascii "f\0"
	.byte	0x6
	.word	0x5a3
	.byte	0x2b
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x5a3
	.byte	0x33
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x5a3
	.byte	0x3b
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x5a3
	.byte	0x43
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x5a3
	.byte	0x4d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x5a5
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.byte	0
	.uleb128 0x18
	.ascii "stbi_loadf\0"
	.byte	0x6
	.word	0x599
	.byte	0x10
	.long	0x16fa3
	.long	LFB1825
	.long	LFE1825-LFB1825
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ef49
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x6
	.word	0x599
	.byte	0x27
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x599
	.byte	0x36
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x599
	.byte	0x3e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x599
	.byte	0x46
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x599
	.byte	0x50
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0x59b
	.byte	0xb
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "f\0"
	.byte	0x6
	.word	0x59c
	.byte	0xa
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x18
	.ascii "stbi_loadf_from_callbacks\0"
	.byte	0x6
	.word	0x591
	.byte	0x10
	.long	0x16fa3
	.long	LFB1824
	.long	LFE1824-LFB1824
	.uleb128 0x1
	.byte	0x9c
	.long	0x2efe7
	.uleb128 0x3
	.ascii "clbk\0"
	.byte	0x6
	.word	0x591
	.byte	0x43
	.long	0x2871c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF357
	.byte	0x6
	.word	0x591
	.byte	0x4f
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x591
	.byte	0x5a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x591
	.byte	0x62
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x591
	.byte	0x6a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x591
	.byte	0x74
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x593
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.byte	0
	.uleb128 0x18
	.ascii "stbi_loadf_from_memory\0"
	.byte	0x6
	.word	0x58a
	.byte	0x10
	.long	0x16fa3
	.long	LFB1823
	.long	LFE1823-LFB1823
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f081
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x58a
	.byte	0x36
	.long	0x18803
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x6
	.word	0x58a
	.byte	0x42
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x58a
	.byte	0x4c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x58a
	.byte	0x54
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x58a
	.byte	0x5c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x58a
	.byte	0x66
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x58c
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.byte	0
	.uleb128 0xd
	.ascii "stbi__loadf_main\0"
	.byte	0x6
	.word	0x578
	.byte	0xf
	.long	0x16fa3
	.long	LFB1822
	.long	LFE1822-LFB1822
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f12d
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x578
	.byte	0x2f
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x578
	.byte	0x37
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x578
	.byte	0x3f
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x578
	.byte	0x47
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x578
	.byte	0x51
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x7
	.secrel32	LASF69
	.byte	0x6
	.word	0x57a
	.byte	0x13
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB118
	.long	LBE118-LBB118
	.uleb128 0x1
	.ascii "ri\0"
	.byte	0x6
	.word	0x57d
	.byte	0x19
	.long	0x18119
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF364
	.byte	0x6
	.word	0x57e
	.byte	0xe
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x18
	.ascii "stbi_load_gif_from_memory\0"
	.byte	0x6
	.word	0x568
	.byte	0x12
	.long	0x1803c
	.long	LFB1821
	.long	LFE1821-LFB1821
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f1fb
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x568
	.byte	0x3b
	.long	0x18803
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x6
	.word	0x568
	.byte	0x47
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "delays\0"
	.byte	0x6
	.word	0x568
	.byte	0x52
	.long	0x24929
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x568
	.byte	0x5f
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x568
	.byte	0x67
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0x568
	.byte	0x6f
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x568
	.byte	0x77
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x568
	.byte	0x81
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0x56a
	.byte	0x13
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x56b
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.byte	0
	.uleb128 0x18
	.ascii "stbi_load_from_callbacks\0"
	.byte	0x6
	.word	0x560
	.byte	0x12
	.long	0x1803c
	.long	LFB1820
	.long	LFE1820-LFB1820
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f298
	.uleb128 0x3
	.ascii "clbk\0"
	.byte	0x6
	.word	0x560
	.byte	0x44
	.long	0x2871c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF357
	.byte	0x6
	.word	0x560
	.byte	0x50
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x560
	.byte	0x5b
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x560
	.byte	0x63
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x560
	.byte	0x6b
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x560
	.byte	0x75
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x562
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.byte	0
	.uleb128 0x18
	.ascii "stbi_load_from_memory\0"
	.byte	0x6
	.word	0x559
	.byte	0x12
	.long	0x1803c
	.long	LFB1819
	.long	LFE1819-LFB1819
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f331
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x559
	.byte	0x37
	.long	0x18803
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x6
	.word	0x559
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x559
	.byte	0x4d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x559
	.byte	0x55
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x559
	.byte	0x5d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x559
	.byte	0x67
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x55b
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.byte	0
	.uleb128 0x18
	.ascii "stbi_load_16_from_callbacks\0"
	.byte	0x6
	.word	0x552
	.byte	0x12
	.long	0x2f3d1
	.long	LFB1818
	.long	LFE1818-LFB1818
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f3d1
	.uleb128 0x3
	.ascii "clbk\0"
	.byte	0x6
	.word	0x552
	.byte	0x47
	.long	0x2871c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF357
	.byte	0x6
	.word	0x552
	.byte	0x53
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x552
	.byte	0x5e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x552
	.byte	0x66
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF380
	.byte	0x6
	.word	0x552
	.byte	0x6e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF381
	.byte	0x6
	.word	0x552
	.byte	0x84
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x554
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x17db6
	.uleb128 0x18
	.ascii "stbi_load_16_from_memory\0"
	.byte	0x6
	.word	0x54b
	.byte	0x12
	.long	0x2f3d1
	.long	LFB1817
	.long	LFE1817-LFB1817
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f473
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x54b
	.byte	0x3a
	.long	0x18803
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x6
	.word	0x54b
	.byte	0x46
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x54b
	.byte	0x50
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x54b
	.byte	0x58
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF380
	.byte	0x6
	.word	0x54b
	.byte	0x60
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF381
	.byte	0x6
	.word	0x54b
	.byte	0x76
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x54d
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -204
	.byte	0
	.uleb128 0x18
	.ascii "stbi_load_16\0"
	.byte	0x6
	.word	0x53e
	.byte	0x12
	.long	0x2f3d1
	.long	LFB1816
	.long	LFE1816-LFB1816
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f502
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x6
	.word	0x53e
	.byte	0x2b
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x53e
	.byte	0x3a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x53e
	.byte	0x42
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x53e
	.byte	0x4a
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x53e
	.byte	0x54
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "f\0"
	.byte	0x6
	.word	0x540
	.byte	0xa
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0x541
	.byte	0x12
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x18
	.ascii "stbi_load_from_file_16\0"
	.byte	0x6
	.word	0x531
	.byte	0x17
	.long	0x2a2dc
	.long	LFB1815
	.long	LFE1815-LFB1815
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f59a
	.uleb128 0x3
	.ascii "f\0"
	.byte	0x6
	.word	0x531
	.byte	0x34
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x531
	.byte	0x3c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x531
	.byte	0x44
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x531
	.byte	0x4c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x531
	.byte	0x56
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0x533
	.byte	0x12
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x534
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.byte	0
	.uleb128 0x18
	.ascii "stbi_load_from_file\0"
	.byte	0x6
	.word	0x524
	.byte	0x12
	.long	0x1803c
	.long	LFB1814
	.long	LFE1814-LFB1814
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f62f
	.uleb128 0x3
	.ascii "f\0"
	.byte	0x6
	.word	0x524
	.byte	0x2c
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x524
	.byte	0x34
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x524
	.byte	0x3c
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x524
	.byte	0x44
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x524
	.byte	0x4e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0x526
	.byte	0x13
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x6
	.word	0x527
	.byte	0x12
	.long	0x18042
	.uleb128 0x3
	.byte	0x91
	.sleb128 -208
	.byte	0
	.uleb128 0x18
	.ascii "stbi_load\0"
	.byte	0x6
	.word	0x51a
	.byte	0x12
	.long	0x1803c
	.long	LFB1813
	.long	LFE1813-LFB1813
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f6bb
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x6
	.word	0x51a
	.byte	0x28
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x51a
	.byte	0x37
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x51a
	.byte	0x3f
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x51a
	.byte	0x47
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x51a
	.byte	0x51
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "f\0"
	.byte	0x6
	.word	0x51c
	.byte	0xa
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0x51d
	.byte	0x13
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0xd
	.ascii "stbi__fopen\0"
	.byte	0x6
	.word	0x4fd
	.byte	0xe
	.long	0x15d9a
	.long	LFB1812
	.long	LFE1812-LFB1812
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f70e
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x6
	.word	0x4fd
	.byte	0x26
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "mode\0"
	.byte	0x6
	.word	0x4fd
	.byte	0x3c
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "f\0"
	.byte	0x6
	.word	0x4ff
	.byte	0xa
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__float_postprocess\0"
	.byte	0x6
	.word	0x4e6
	.byte	0xd
	.long	LFB1811
	.long	LFE1811-LFB1811
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f7a0
	.uleb128 0x4
	.secrel32	LASF257
	.byte	0x6
	.word	0x4e6
	.byte	0x2c
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x4e6
	.byte	0x39
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x4e6
	.byte	0x41
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x4e6
	.byte	0x49
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x4e6
	.byte	0x53
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x9
	.long	LBB116
	.long	LBE116-LBB116
	.uleb128 0x7
	.secrel32	LASF382
	.byte	0x6
	.word	0x4e9
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__load_and_postprocess_16bit\0"
	.byte	0x6
	.word	0x4ca
	.byte	0x16
	.long	0x2a2dc
	.long	LFB1810
	.long	LFE1810-LFB1810
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f85c
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x4ca
	.byte	0x46
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x4ca
	.byte	0x4e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x4ca
	.byte	0x56
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x4ca
	.byte	0x5e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x4ca
	.byte	0x68
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "ri\0"
	.byte	0x6
	.word	0x4cc
	.byte	0x16
	.long	0x18119
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0x4cd
	.byte	0xa
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB114
	.long	LBE114-LBB114
	.uleb128 0x7
	.secrel32	LASF382
	.byte	0x6
	.word	0x4de
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__load_and_postprocess_8bit\0"
	.byte	0x6
	.word	0x4b0
	.byte	0x17
	.long	0x954
	.long	LFB1809
	.long	LFE1809-LFB1809
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f917
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x4b0
	.byte	0x46
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x4b0
	.byte	0x4e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x4b0
	.byte	0x56
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x4b0
	.byte	0x5e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x4b0
	.byte	0x68
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "ri\0"
	.byte	0x6
	.word	0x4b2
	.byte	0x16
	.long	0x18119
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF257
	.byte	0x6
	.word	0x4b3
	.byte	0xa
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB112
	.long	LBE112-LBB112
	.uleb128 0x7
	.secrel32	LASF382
	.byte	0x6
	.word	0x4c3
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__vertical_flip_slices\0"
	.byte	0x6
	.word	0x4a3
	.byte	0xd
	.long	LFB1808
	.long	LFE1808-LFB1808
	.uleb128 0x1
	.byte	0x9c
	.long	0x2f9c9
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x6
	.word	0x4a3
	.byte	0x2e
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "w\0"
	.byte	0x6
	.word	0x4a3
	.byte	0x39
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "h\0"
	.byte	0x6
	.word	0x4a3
	.byte	0x40
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "z\0"
	.byte	0x6
	.word	0x4a3
	.byte	0x47
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF383
	.byte	0x6
	.word	0x4a3
	.byte	0x4e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "slice\0"
	.byte	0x6
	.word	0x4a5
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "slice_size\0"
	.byte	0x6
	.word	0x4a6
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x7
	.secrel32	LASF356
	.byte	0x6
	.word	0x4a8
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__vertical_flip\0"
	.byte	0x6
	.word	0x48a
	.byte	0xd
	.long	LFB1807
	.long	LFE1807-LFB1807
	.uleb128 0x1
	.byte	0x9c
	.long	0x2fadc
	.uleb128 0x4
	.secrel32	LASF254
	.byte	0x6
	.word	0x48a
	.byte	0x27
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "w\0"
	.byte	0x6
	.word	0x48a
	.byte	0x32
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "h\0"
	.byte	0x6
	.word	0x48a
	.byte	0x39
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF383
	.byte	0x6
	.word	0x48a
	.byte	0x40
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "row\0"
	.byte	0x6
	.word	0x48c
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "bytes_per_row\0"
	.byte	0x6
	.word	0x48d
	.byte	0xb
	.long	0xd5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF274
	.byte	0x6
	.word	0x48e
	.byte	0xc
	.long	0x2fadc
	.uleb128 0x3
	.byte	0x91
	.sleb128 -2092
	.uleb128 0x7
	.secrel32	LASF356
	.byte	0x6
	.word	0x48f
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x9
	.long	LBB109
	.long	LBE109-LBB109
	.uleb128 0x1
	.ascii "row0\0"
	.byte	0x6
	.word	0x492
	.byte	0x10
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "row1\0"
	.byte	0x6
	.word	0x493
	.byte	0x10
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "bytes_left\0"
	.byte	0x6
	.word	0x495
	.byte	0xe
	.long	0xd5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x9
	.long	LBB110
	.long	LBE110-LBB110
	.uleb128 0x1
	.ascii "bytes_copy\0"
	.byte	0x6
	.word	0x497
	.byte	0x11
	.long	0xd5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x17da0
	.long	0x2faed
	.uleb128 0x3a
	.long	0xe4
	.word	0x7ff
	.byte	0
	.uleb128 0xd
	.ascii "stbi__convert_8_to_16\0"
	.byte	0x6
	.word	0x47a
	.byte	0x16
	.long	0x2a2dc
	.long	LFB1806
	.long	LFE1806-LFB1806
	.uleb128 0x1
	.byte	0x9c
	.long	0x2fb8b
	.uleb128 0x3
	.ascii "orig\0"
	.byte	0x6
	.word	0x47a
	.byte	0x35
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "w\0"
	.byte	0x6
	.word	0x47a
	.byte	0x3f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "h\0"
	.byte	0x6
	.word	0x47a
	.byte	0x46
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF382
	.byte	0x6
	.word	0x47a
	.byte	0x4d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x47c
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF374
	.byte	0x6
	.word	0x47d
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "enlarged\0"
	.byte	0x6
	.word	0x47e
	.byte	0x12
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0xd
	.ascii "stbi__convert_16_to_8\0"
	.byte	0x6
	.word	0x46a
	.byte	0x11
	.long	0x1803c
	.long	LFB1805
	.long	LFE1805-LFB1805
	.uleb128 0x1
	.byte	0x9c
	.long	0x2fc28
	.uleb128 0x3
	.ascii "orig\0"
	.byte	0x6
	.word	0x46a
	.byte	0x35
	.long	0x2a2dc
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "w\0"
	.byte	0x6
	.word	0x46a
	.byte	0x3f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "h\0"
	.byte	0x6
	.word	0x46a
	.byte	0x46
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF382
	.byte	0x6
	.word	0x46a
	.byte	0x4d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x6
	.word	0x46c
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF374
	.byte	0x6
	.word	0x46d
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "reduced\0"
	.byte	0x6
	.word	0x46e
	.byte	0xd
	.long	0x1803c
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.byte	0
	.uleb128 0xd
	.ascii "stbi__load_main\0"
	.byte	0x6
	.word	0x43b
	.byte	0xe
	.long	0x7aa
	.long	LFB1804
	.long	LFE1804-LFB1804
	.uleb128 0x1
	.byte	0x9c
	.long	0x2fcd3
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x43b
	.byte	0x2d
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x6
	.word	0x43b
	.byte	0x35
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x6
	.word	0x43b
	.byte	0x3d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x6
	.word	0x43b
	.byte	0x45
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF359
	.byte	0x6
	.word	0x43b
	.byte	0x4f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "ri\0"
	.byte	0x6
	.word	0x43b
	.byte	0x6c
	.long	0x28d4f
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "bpc\0"
	.byte	0x6
	.word	0x43b
	.byte	0x74
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x9
	.long	LBB107
	.long	LBE107-LBB107
	.uleb128 0x1
	.ascii "hdr\0"
	.byte	0x6
	.word	0x45c
	.byte	0xe
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x2e
	.ascii "stbi_set_flip_vertically_on_load_thread\0"
	.byte	0x6
	.word	0x430
	.byte	0xe
	.long	LFB1803
	.long	LFE1803-LFB1803
	.uleb128 0x1
	.byte	0x9c
	.long	0x2fd1f
	.uleb128 0x4
	.secrel32	LASF384
	.byte	0x6
	.word	0x430
	.byte	0x3a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x52
	.ascii "stbi_set_flip_vertically_on_load\0"
	.byte	0x6
	.word	0x426
	.byte	0xe
	.long	LFB1802
	.long	LFE1802-LFB1802
	.uleb128 0x1
	.byte	0x9c
	.long	0x2fd64
	.uleb128 0x4
	.secrel32	LASF384
	.byte	0x6
	.word	0x426
	.byte	0x33
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x2e
	.ascii "stbi_image_free\0"
	.byte	0x6
	.word	0x417
	.byte	0xe
	.long	LFB1801
	.long	LFE1801-LFB1801
	.uleb128 0x1
	.byte	0x9c
	.long	0x2fdaa
	.uleb128 0x3
	.ascii "retval_from_stbi_load\0"
	.byte	0x6
	.word	0x417
	.byte	0x24
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__malloc_mad4\0"
	.byte	0x6
	.word	0x401
	.byte	0xe
	.long	0x7aa
	.long	LFB1800
	.long	LFE1800-LFB1800
	.uleb128 0x1
	.byte	0x9c
	.long	0x2fe1c
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x401
	.byte	0x24
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x6
	.word	0x401
	.byte	0x2b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x6
	.word	0x401
	.byte	0x32
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "d\0"
	.byte	0x6
	.word	0x401
	.byte	0x39
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "add\0"
	.byte	0x6
	.word	0x401
	.byte	0x40
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xd
	.ascii "stbi__malloc_mad3\0"
	.byte	0x6
	.word	0x3fa
	.byte	0xe
	.long	0x7aa
	.long	LFB1799
	.long	LFE1799-LFB1799
	.uleb128 0x1
	.byte	0x9c
	.long	0x2fe80
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x3fa
	.byte	0x24
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x6
	.word	0x3fa
	.byte	0x2b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x6
	.word	0x3fa
	.byte	0x32
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "add\0"
	.byte	0x6
	.word	0x3fa
	.byte	0x39
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.byte	0
	.uleb128 0xd
	.ascii "stbi__malloc_mad2\0"
	.byte	0x6
	.word	0x3f3
	.byte	0xe
	.long	0x7aa
	.long	LFB1798
	.long	LFE1798-LFB1798
	.uleb128 0x1
	.byte	0x9c
	.long	0x2fed6
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x3f3
	.byte	0x24
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x6
	.word	0x3f3
	.byte	0x2b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "add\0"
	.byte	0x6
	.word	0x3f3
	.byte	0x32
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xd
	.ascii "stbi__mad4sizes_valid\0"
	.byte	0x6
	.word	0x3ea
	.byte	0xc
	.long	0xf4
	.long	LFB1797
	.long	LFE1797-LFB1797
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ff4c
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x3ea
	.byte	0x26
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x6
	.word	0x3ea
	.byte	0x2d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x6
	.word	0x3ea
	.byte	0x34
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "d\0"
	.byte	0x6
	.word	0x3ea
	.byte	0x3b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "add\0"
	.byte	0x6
	.word	0x3ea
	.byte	0x42
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.byte	0
	.uleb128 0xd
	.ascii "stbi__mad3sizes_valid\0"
	.byte	0x6
	.word	0x3e2
	.byte	0xc
	.long	0xf4
	.long	LFB1796
	.long	LFE1796-LFB1796
	.uleb128 0x1
	.byte	0x9c
	.long	0x2ffb4
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x3e2
	.byte	0x26
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x6
	.word	0x3e2
	.byte	0x2d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x6
	.word	0x3e2
	.byte	0x34
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "add\0"
	.byte	0x6
	.word	0x3e2
	.byte	0x3b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.byte	0
	.uleb128 0xd
	.ascii "stbi__mad2sizes_valid\0"
	.byte	0x6
	.word	0x3db
	.byte	0xc
	.long	0xf4
	.long	LFB1795
	.long	LFE1795-LFB1795
	.uleb128 0x1
	.byte	0x9c
	.long	0x3000e
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x3db
	.byte	0x26
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x6
	.word	0x3db
	.byte	0x2d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "add\0"
	.byte	0x6
	.word	0x3db
	.byte	0x34
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x27
	.ascii "stbi__mul2sizes_valid\0"
	.byte	0x6
	.word	0x3d1
	.byte	0xc
	.long	0xf4
	.long	LFB1794
	.long	LFE1794-LFB1794
	.uleb128 0x1
	.byte	0x9c
	.long	0x30058
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x3d1
	.byte	0x26
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x6
	.word	0x3d1
	.byte	0x2d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x27
	.ascii "stbi__addsizes_valid\0"
	.byte	0x6
	.word	0x3c5
	.byte	0xc
	.long	0xf4
	.long	LFB1793
	.long	LFE1793-LFB1793
	.uleb128 0x1
	.byte	0x9c
	.long	0x300a1
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x6
	.word	0x3c5
	.byte	0x25
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x6
	.word	0x3c5
	.byte	0x2c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0xd
	.ascii "stbi__malloc\0"
	.byte	0x6
	.word	0x3b4
	.byte	0xe
	.long	0x7aa
	.long	LFB1792
	.long	LFE1792-LFB1792
	.uleb128 0x1
	.byte	0x9c
	.long	0x300d6
	.uleb128 0x4
	.secrel32	LASF47
	.byte	0x6
	.word	0x3b4
	.byte	0x22
	.long	0xd5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__err\0"
	.byte	0x6
	.word	0x3ad
	.byte	0xc
	.long	0xf4
	.long	LFB1791
	.long	LFE1791-LFB1791
	.uleb128 0x1
	.byte	0x9c
	.long	0x30108
	.uleb128 0x3
	.ascii "str\0"
	.byte	0x6
	.word	0x3ad
	.byte	0x22
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xcb
	.ascii "stbi_failure_reason\0"
	.byte	0x6
	.word	0x3a7
	.byte	0x15
	.long	0x12a7d
	.long	LFB1790
	.long	LFE1790-LFB1790
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x38
	.ascii "stbi__rewind\0"
	.byte	0x6
	.word	0x352
	.byte	0xd
	.long	LFB1789
	.long	LFE1789-LFB1789
	.uleb128 0x1
	.byte	0x9c
	.long	0x3015f
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x352
	.byte	0x29
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__start_file\0"
	.byte	0x6
	.word	0x349
	.byte	0xd
	.long	LFB1788
	.long	LFE1788-LFB1788
	.uleb128 0x1
	.byte	0x9c
	.long	0x301a0
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x349
	.byte	0x2d
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "f\0"
	.byte	0x6
	.word	0x349
	.byte	0x36
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0xd
	.ascii "stbi__stdio_eof\0"
	.byte	0x6
	.word	0x33d
	.byte	0xc
	.long	0xf4
	.long	LFB1787
	.long	LFE1787-LFB1787
	.uleb128 0x1
	.byte	0x9c
	.long	0x301d8
	.uleb128 0x4
	.secrel32	LASF357
	.byte	0x6
	.word	0x33d
	.byte	0x22
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__stdio_skip\0"
	.byte	0x6
	.word	0x333
	.byte	0xd
	.long	LFB1786
	.long	LFE1786-LFB1786
	.uleb128 0x1
	.byte	0x9c
	.long	0x3022a
	.uleb128 0x4
	.secrel32	LASF357
	.byte	0x6
	.word	0x333
	.byte	0x24
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x6
	.word	0x333
	.byte	0x2e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "ch\0"
	.byte	0x6
	.word	0x335
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbi__stdio_read\0"
	.byte	0x6
	.word	0x32e
	.byte	0xc
	.long	0xf4
	.long	LFB1785
	.long	LFE1785-LFB1785
	.uleb128 0x1
	.byte	0x9c
	.long	0x30283
	.uleb128 0x4
	.secrel32	LASF357
	.byte	0x6
	.word	0x32e
	.byte	0x23
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x6
	.word	0x32e
	.byte	0x2f
	.long	0x461
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF47
	.byte	0x6
	.word	0x32e
	.byte	0x39
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__start_callbacks\0"
	.byte	0x6
	.word	0x320
	.byte	0xd
	.long	LFB1784
	.long	LFE1784-LFB1784
	.uleb128 0x1
	.byte	0x9c
	.long	0x302d9
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x320
	.byte	0x32
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x6
	.word	0x320
	.byte	0x48
	.long	0x302d9
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF357
	.byte	0x6
	.word	0x320
	.byte	0x51
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x17e5c
	.uleb128 0x38
	.ascii "stbi__start_mem\0"
	.byte	0x6
	.word	0x316
	.byte	0xd
	.long	LFB1783
	.long	LFE1783-LFB1783
	.uleb128 0x1
	.byte	0x9c
	.long	0x30331
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x6
	.word	0x316
	.byte	0x2c
	.long	0x18761
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x6
	.word	0x316
	.byte	0x3e
	.long	0x18803
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x6
	.word	0x316
	.byte	0x4a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x18
	.ascii "stbi_write_jpg\0"
	.byte	0x5
	.word	0x632
	.byte	0xe
	.long	0xf4
	.long	LFB1782
	.long	LFE1782-LFB1782
	.uleb128 0x1
	.byte	0x9c
	.long	0x303db
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x5
	.word	0x632
	.byte	0x29
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x632
	.byte	0x37
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x632
	.byte	0x3e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x632
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x632
	.byte	0x57
	.long	0x7e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF385
	.byte	0x5
	.word	0x632
	.byte	0x61
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x5
	.word	0x634
	.byte	0x18
	.long	0x17cde
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x9
	.long	LBB105
	.long	LBE105-LBB105
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x5
	.word	0x636
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x18
	.ascii "stbi_write_jpg_to_func\0"
	.byte	0x5
	.word	0x629
	.byte	0xe
	.long	0xf4
	.long	LFB1781
	.long	LFE1781-LFB1781
	.uleb128 0x1
	.byte	0x9c
	.long	0x30485
	.uleb128 0x4
	.secrel32	LASF162
	.byte	0x5
	.word	0x629
	.byte	0x36
	.long	0x17cc8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF163
	.byte	0x5
	.word	0x629
	.byte	0x42
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x629
	.byte	0x4f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x629
	.byte	0x56
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x629
	.byte	0x5d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x629
	.byte	0x6f
	.long	0x7e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF385
	.byte	0x5
	.word	0x629
	.byte	0x79
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x5
	.word	0x62b
	.byte	0x18
	.long	0x17cde
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.uleb128 0xd
	.ascii "stbi_write_jpg_core\0"
	.byte	0x5
	.word	0x558
	.byte	0xc
	.long	0xf4
	.long	LFB1780
	.long	LFE1780-LFB1780
	.uleb128 0x1
	.byte	0x9c
	.long	0x30acd
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x558
	.byte	0x35
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x5
	.word	0x558
	.byte	0x3c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x5
	.word	0x558
	.byte	0x47
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x558
	.byte	0x53
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x558
	.byte	0x65
	.long	0x7e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF385
	.byte	0x5
	.word	0x558
	.byte	0x6f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "std_dc_luminance_nrcodes\0"
	.byte	0x5
	.word	0x55a
	.byte	0x1f
	.long	0x30ae3
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE24std_dc_luminance_nrcodes
	.uleb128 0x1
	.ascii "std_dc_luminance_values\0"
	.byte	0x5
	.word	0x55b
	.byte	0x1f
	.long	0x30af8
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE23std_dc_luminance_values
	.uleb128 0x1
	.ascii "std_ac_luminance_nrcodes\0"
	.byte	0x5
	.word	0x55c
	.byte	0x1f
	.long	0x30ae3
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE24std_ac_luminance_nrcodes
	.uleb128 0x1
	.ascii "std_ac_luminance_values\0"
	.byte	0x5
	.word	0x55d
	.byte	0x1f
	.long	0x30b0d
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE23std_ac_luminance_values
	.uleb128 0x1
	.ascii "std_dc_chrominance_nrcodes\0"
	.byte	0x5
	.word	0x566
	.byte	0x1f
	.long	0x30ae3
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE26std_dc_chrominance_nrcodes
	.uleb128 0x1
	.ascii "std_dc_chrominance_values\0"
	.byte	0x5
	.word	0x567
	.byte	0x1f
	.long	0x30af8
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE25std_dc_chrominance_values
	.uleb128 0x1
	.ascii "std_ac_chrominance_nrcodes\0"
	.byte	0x5
	.word	0x568
	.byte	0x1f
	.long	0x30ae3
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE26std_ac_chrominance_nrcodes
	.uleb128 0x1
	.ascii "std_ac_chrominance_values\0"
	.byte	0x5
	.word	0x569
	.byte	0x1f
	.long	0x30b0d
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE25std_ac_chrominance_values
	.uleb128 0x1
	.ascii "YDC_HT\0"
	.byte	0x5
	.word	0x573
	.byte	0x20
	.long	0x30b28
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YDC_HT
	.uleb128 0x1
	.ascii "UVDC_HT\0"
	.byte	0x5
	.word	0x574
	.byte	0x20
	.long	0x30b28
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE7UVDC_HT
	.uleb128 0x1
	.ascii "YAC_HT\0"
	.byte	0x5
	.word	0x575
	.byte	0x20
	.long	0x30b28
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE6YAC_HT
	.uleb128 0x1
	.ascii "UVAC_HT\0"
	.byte	0x5
	.word	0x587
	.byte	0x20
	.long	0x30b28
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE7UVAC_HT
	.uleb128 0x1
	.ascii "YQT\0"
	.byte	0x5
	.word	0x599
	.byte	0x15
	.long	0x30b3d
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE3YQT
	.uleb128 0x1
	.ascii "UVQT\0"
	.byte	0x5
	.word	0x59b
	.byte	0x15
	.long	0x30b3d
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE4UVQT
	.uleb128 0x1
	.ascii "aasf\0"
	.byte	0x5
	.word	0x59d
	.byte	0x17
	.long	0x30b52
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE4aasf
	.uleb128 0x1
	.ascii "row\0"
	.byte	0x5
	.word	0x5a0
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "col\0"
	.byte	0x5
	.word	0x5a0
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x5
	.word	0x5a0
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x5
	.word	0x5a0
	.byte	0x15
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "subsample\0"
	.byte	0x5
	.word	0x5a0
	.byte	0x18
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "fdtbl_Y\0"
	.byte	0x5
	.word	0x5a1
	.byte	0xa
	.long	0x30b57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -404
	.uleb128 0x1
	.ascii "fdtbl_UV\0"
	.byte	0x5
	.word	0x5a1
	.byte	0x17
	.long	0x30b57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -660
	.uleb128 0x1
	.ascii "YTable\0"
	.byte	0x5
	.word	0x5a2
	.byte	0x12
	.long	0x17cce
	.uleb128 0x3
	.byte	0x91
	.sleb128 -724
	.uleb128 0x1
	.ascii "UVTable\0"
	.byte	0x5
	.word	0x5a2
	.byte	0x1e
	.long	0x17cce
	.uleb128 0x3
	.byte	0x91
	.sleb128 -788
	.uleb128 0xf
	.long	LBB77
	.long	LBE77-LBB77
	.long	0x307bf
	.uleb128 0x1
	.ascii "uvti\0"
	.byte	0x5
	.word	0x5ae
	.byte	0xb
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "yti\0"
	.byte	0x5
	.word	0x5ae
	.byte	0x11
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0xf
	.long	LBB78
	.long	LBE78-LBB78
	.long	0x3080a
	.uleb128 0x1
	.ascii "head0\0"
	.byte	0x5
	.word	0x5bd
	.byte	0x22
	.long	0x30b77
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE5head0
	.uleb128 0x1
	.ascii "head2\0"
	.byte	0x5
	.word	0x5be
	.byte	0x22
	.long	0x30b8c
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE5head2
	.uleb128 0x1
	.ascii "head1\0"
	.byte	0x5
	.word	0x5bf
	.byte	0x1b
	.long	0x30b91
	.uleb128 0x3
	.byte	0x91
	.sleb128 -812
	.byte	0
	.uleb128 0x9
	.long	LBB79
	.long	LBE79-LBB79
	.uleb128 0x1
	.ascii "fillBits\0"
	.byte	0x5
	.word	0x5d6
	.byte	0x23
	.long	0x30bb1
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL19stbi_write_jpg_coreP19stbi__write_contextiiiPKviE8fillBits
	.uleb128 0x1
	.ascii "DCY\0"
	.byte	0x5
	.word	0x5d7
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "DCU\0"
	.byte	0x5
	.word	0x5d7
	.byte	0x12
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "DCV\0"
	.byte	0x5
	.word	0x5d7
	.byte	0x19
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x7
	.secrel32	LASF386
	.byte	0x5
	.word	0x5d8
	.byte	0xb
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -816
	.uleb128 0x7
	.secrel32	LASF387
	.byte	0x5
	.word	0x5d8
	.byte	0x15
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -820
	.uleb128 0x1
	.ascii "ofsG\0"
	.byte	0x5
	.word	0x5da
	.byte	0xb
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "ofsB\0"
	.byte	0x5
	.word	0x5da
	.byte	0x24
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "dataR\0"
	.byte	0x5
	.word	0x5db
	.byte	0x1c
	.long	0x691
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "dataG\0"
	.byte	0x5
	.word	0x5dc
	.byte	0x1c
	.long	0x691
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "dataB\0"
	.byte	0x5
	.word	0x5dd
	.byte	0x1c
	.long	0x691
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x5
	.word	0x5de
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x5
	.word	0x5de
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "pos\0"
	.byte	0x5
	.word	0x5de
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0xf
	.long	LBB85
	.long	LBE85-LBB85
	.long	0x30a1f
	.uleb128 0x1
	.ascii "Y\0"
	.byte	0x5
	.word	0x5e2
	.byte	0x16
	.long	0x30bb6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -3892
	.uleb128 0x1
	.ascii "U\0"
	.byte	0x5
	.word	0x5e2
	.byte	0x1e
	.long	0x30bb6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -2868
	.uleb128 0x1
	.ascii "V\0"
	.byte	0x5
	.word	0x5e2
	.byte	0x26
	.long	0x30bb6
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1844
	.uleb128 0xf
	.long	LBB87
	.long	LBE87-LBB87
	.long	0x309b9
	.uleb128 0x7
	.secrel32	LASF388
	.byte	0x5
	.word	0x5e5
	.byte	0x17
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "base_p\0"
	.byte	0x5
	.word	0x5e6
	.byte	0x17
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x9
	.long	LBB89
	.long	LBE89-LBB89
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x5
	.word	0x5e9
	.byte	0x1a
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x5
	.word	0x5ea
	.byte	0x1c
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x5
	.word	0x5ea
	.byte	0x2a
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x5
	.word	0x5ea
	.byte	0x38
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -120
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB90
	.long	LBE90-LBB90
	.uleb128 0x1
	.ascii "subU\0"
	.byte	0x5
	.word	0x5f7
	.byte	0x19
	.long	0x30b57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -4404
	.uleb128 0x1
	.ascii "subV\0"
	.byte	0x5
	.word	0x5f7
	.byte	0x23
	.long	0x30b57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -4148
	.uleb128 0x1
	.ascii "yy\0"
	.byte	0x5
	.word	0x5f8
	.byte	0x17
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "xx\0"
	.byte	0x5
	.word	0x5f8
	.byte	0x1b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x9
	.long	LBB94
	.long	LBE94-LBB94
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x5
	.word	0x5fb
	.byte	0x1d
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -124
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB99
	.long	LBE99-LBB99
	.uleb128 0x1
	.ascii "Y\0"
	.byte	0x5
	.word	0x608
	.byte	0x16
	.long	0x30b57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -3892
	.uleb128 0x1
	.ascii "U\0"
	.byte	0x5
	.word	0x608
	.byte	0x1d
	.long	0x30b57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -2868
	.uleb128 0x1
	.ascii "V\0"
	.byte	0x5
	.word	0x608
	.byte	0x24
	.long	0x30b57
	.uleb128 0x3
	.byte	0x91
	.sleb128 -1844
	.uleb128 0x9
	.long	LBB101
	.long	LBE101-LBB101
	.uleb128 0x7
	.secrel32	LASF388
	.byte	0x5
	.word	0x60b
	.byte	0x17
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x1
	.ascii "base_p\0"
	.byte	0x5
	.word	0x60c
	.byte	0x17
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x9
	.long	LBB103
	.long	LBE103-LBB103
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x5
	.word	0x60f
	.byte	0x1a
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x5
	.word	0x610
	.byte	0x1c
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x1
	.ascii "g\0"
	.byte	0x5
	.word	0x610
	.byte	0x2a
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x5
	.word	0x610
	.byte	0x38
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -148
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x17cde
	.uleb128 0x10
	.long	0x6a8
	.long	0x30ae3
	.uleb128 0x12
	.long	0xe4
	.byte	0x10
	.byte	0
	.uleb128 0x14
	.long	0x30ad3
	.uleb128 0x10
	.long	0x6a8
	.long	0x30af8
	.uleb128 0x12
	.long	0xe4
	.byte	0xb
	.byte	0
	.uleb128 0x14
	.long	0x30ae8
	.uleb128 0x10
	.long	0x6a8
	.long	0x30b0d
	.uleb128 0x12
	.long	0xe4
	.byte	0xa1
	.byte	0
	.uleb128 0x14
	.long	0x30afd
	.uleb128 0x10
	.long	0x148
	.long	0x30b28
	.uleb128 0x12
	.long	0xe4
	.byte	0xff
	.uleb128 0x12
	.long	0xe4
	.byte	0x1
	.byte	0
	.uleb128 0x14
	.long	0x30b12
	.uleb128 0x10
	.long	0xfb
	.long	0x30b3d
	.uleb128 0x12
	.long	0xe4
	.byte	0x3f
	.byte	0
	.uleb128 0x14
	.long	0x30b2d
	.uleb128 0x10
	.long	0x7de
	.long	0x30b52
	.uleb128 0x12
	.long	0xe4
	.byte	0x7
	.byte	0
	.uleb128 0x14
	.long	0x30b42
	.uleb128 0x10
	.long	0x7d5
	.long	0x30b67
	.uleb128 0x12
	.long	0xe4
	.byte	0x3f
	.byte	0
	.uleb128 0x10
	.long	0x6a8
	.long	0x30b77
	.uleb128 0x12
	.long	0xe4
	.byte	0x18
	.byte	0
	.uleb128 0x14
	.long	0x30b67
	.uleb128 0x10
	.long	0x6a8
	.long	0x30b8c
	.uleb128 0x12
	.long	0xe4
	.byte	0xd
	.byte	0
	.uleb128 0x14
	.long	0x30b7c
	.uleb128 0x10
	.long	0x6a8
	.long	0x30ba1
	.uleb128 0x12
	.long	0xe4
	.byte	0x17
	.byte	0
	.uleb128 0x10
	.long	0x148
	.long	0x30bb1
	.uleb128 0x12
	.long	0xe4
	.byte	0x1
	.byte	0
	.uleb128 0x14
	.long	0x30ba1
	.uleb128 0x10
	.long	0x7d5
	.long	0x30bc6
	.uleb128 0x12
	.long	0xe4
	.byte	0xff
	.byte	0
	.uleb128 0xd
	.ascii "stbiw__jpg_processDU\0"
	.byte	0x5
	.word	0x512
	.byte	0xc
	.long	0xf4
	.long	LFB1779
	.long	LFE1779-LFB1779
	.uleb128 0x1
	.byte	0x9c
	.long	0x30df4
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x512
	.byte	0x36
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF386
	.byte	0x5
	.word	0x512
	.byte	0x3e
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF387
	.byte	0x5
	.word	0x512
	.byte	0x4b
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "CDU\0"
	.byte	0x5
	.word	0x512
	.byte	0x5a
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "du_stride\0"
	.byte	0x5
	.word	0x512
	.byte	0x63
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "fdtbl\0"
	.byte	0x5
	.word	0x512
	.byte	0x75
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "DC\0"
	.byte	0x5
	.word	0x512
	.byte	0x80
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "HTDC\0"
	.byte	0x5
	.word	0x512
	.byte	0x99
	.long	0x30df4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x3
	.ascii "HTAC\0"
	.byte	0x5
	.word	0x512
	.byte	0xbc
	.long	0x30df4
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x1
	.ascii "EOB\0"
	.byte	0x5
	.word	0x513
	.byte	0x19
	.long	0x30ba1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "M16zeroes\0"
	.byte	0x5
	.word	0x514
	.byte	0x19
	.long	0x30ba1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "dataOff\0"
	.byte	0x5
	.word	0x515
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x5
	.word	0x515
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x5
	.word	0x515
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x5
	.word	0x515
	.byte	0x17
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x7
	.secrel32	LASF293
	.byte	0x5
	.word	0x515
	.byte	0x1a
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "end0pos\0"
	.byte	0x5
	.word	0x515
	.byte	0x20
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x5
	.word	0x515
	.byte	0x29
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "y\0"
	.byte	0x5
	.word	0x515
	.byte	0x2c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "DU\0"
	.byte	0x5
	.word	0x516
	.byte	0x8
	.long	0x2de30
	.uleb128 0x3
	.byte	0x91
	.sleb128 -348
	.uleb128 0xf
	.long	LBB69
	.long	LBE69-LBB69
	.long	0x30d5e
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x5
	.word	0x524
	.byte	0x10
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.byte	0
	.uleb128 0xf
	.long	LBB71
	.long	LBE71-LBB71
	.long	0x30d7d
	.uleb128 0x7
	.secrel32	LASF366
	.byte	0x5
	.word	0x532
	.byte	0x16
	.long	0x30dfa
	.uleb128 0x3
	.byte	0x91
	.sleb128 -352
	.byte	0
	.uleb128 0x9
	.long	LBB73
	.long	LBE73-LBB73
	.uleb128 0x1
	.ascii "startpos\0"
	.byte	0x5
	.word	0x541
	.byte	0xb
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "nrzeroes\0"
	.byte	0x5
	.word	0x542
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x7
	.secrel32	LASF366
	.byte	0x5
	.word	0x543
	.byte	0x16
	.long	0x30dfa
	.uleb128 0x3
	.byte	0x91
	.sleb128 -356
	.uleb128 0x9
	.long	LBB75
	.long	LBE75-LBB75
	.uleb128 0x1
	.ascii "lng\0"
	.byte	0x5
	.word	0x548
	.byte	0xe
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "nrmarker\0"
	.byte	0x5
	.word	0x549
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x30ba1
	.uleb128 0x10
	.long	0x132
	.long	0x30e0a
	.uleb128 0x12
	.long	0xe4
	.byte	0x1
	.byte	0
	.uleb128 0x38
	.ascii "stbiw__jpg_calcBits\0"
	.byte	0x5
	.word	0x508
	.byte	0xd
	.long	LFB1778
	.long	LFE1778-LFB1778
	.uleb128 0x1
	.byte	0x9c
	.long	0x30e63
	.uleb128 0x3
	.ascii "val\0"
	.byte	0x5
	.word	0x508
	.byte	0x25
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF366
	.byte	0x5
	.word	0x508
	.byte	0x39
	.long	0x685
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "tmp1\0"
	.byte	0x5
	.word	0x509
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x38
	.ascii "stbiw__jpg_DCT\0"
	.byte	0x5
	.word	0x4d8
	.byte	0xd
	.long	LFB1777
	.long	LFE1777-LFB1777
	.uleb128 0x1
	.byte	0x9c
	.long	0x310c6
	.uleb128 0x3
	.ascii "d0p\0"
	.byte	0x5
	.word	0x4d8
	.byte	0x23
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "d1p\0"
	.byte	0x5
	.word	0x4d8
	.byte	0x2f
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "d2p\0"
	.byte	0x5
	.word	0x4d8
	.byte	0x3b
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "d3p\0"
	.byte	0x5
	.word	0x4d8
	.byte	0x47
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "d4p\0"
	.byte	0x5
	.word	0x4d8
	.byte	0x53
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "d5p\0"
	.byte	0x5
	.word	0x4d8
	.byte	0x5f
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3
	.ascii "d6p\0"
	.byte	0x5
	.word	0x4d8
	.byte	0x6b
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x3
	.ascii "d7p\0"
	.byte	0x5
	.word	0x4d8
	.byte	0x77
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x1
	.ascii "d0\0"
	.byte	0x5
	.word	0x4d9
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1
	.ascii "d1\0"
	.byte	0x5
	.word	0x4d9
	.byte	0x15
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x1
	.ascii "d2\0"
	.byte	0x5
	.word	0x4d9
	.byte	0x20
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "d3\0"
	.byte	0x5
	.word	0x4d9
	.byte	0x2b
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "d4\0"
	.byte	0x5
	.word	0x4d9
	.byte	0x36
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "d5\0"
	.byte	0x5
	.word	0x4d9
	.byte	0x41
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "d6\0"
	.byte	0x5
	.word	0x4d9
	.byte	0x4c
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "d7\0"
	.byte	0x5
	.word	0x4d9
	.byte	0x57
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "z1\0"
	.byte	0x5
	.word	0x4da
	.byte	0xa
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "z2\0"
	.byte	0x5
	.word	0x4da
	.byte	0xe
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x1
	.ascii "z3\0"
	.byte	0x5
	.word	0x4da
	.byte	0x12
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x1
	.ascii "z4\0"
	.byte	0x5
	.word	0x4da
	.byte	0x16
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x1
	.ascii "z5\0"
	.byte	0x5
	.word	0x4da
	.byte	0x1a
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x1
	.ascii "z11\0"
	.byte	0x5
	.word	0x4da
	.byte	0x1e
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x1
	.ascii "z13\0"
	.byte	0x5
	.word	0x4da
	.byte	0x23
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x1
	.ascii "tmp0\0"
	.byte	0x5
	.word	0x4dc
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "tmp7\0"
	.byte	0x5
	.word	0x4dd
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "tmp1\0"
	.byte	0x5
	.word	0x4de
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "tmp6\0"
	.byte	0x5
	.word	0x4df
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "tmp2\0"
	.byte	0x5
	.word	0x4e0
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "tmp5\0"
	.byte	0x5
	.word	0x4e1
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "tmp3\0"
	.byte	0x5
	.word	0x4e2
	.byte	0xa
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "tmp4\0"
	.byte	0x5
	.word	0x4e3
	.byte	0xa
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "tmp10\0"
	.byte	0x5
	.word	0x4e6
	.byte	0xa
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "tmp13\0"
	.byte	0x5
	.word	0x4e7
	.byte	0xa
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "tmp11\0"
	.byte	0x5
	.word	0x4e8
	.byte	0xa
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "tmp12\0"
	.byte	0x5
	.word	0x4e9
	.byte	0xa
	.long	0x7d5
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__jpg_writeBits\0"
	.byte	0x5
	.word	0x4c7
	.byte	0xd
	.long	LFB1776
	.long	LFE1776-LFB1776
	.uleb128 0x1
	.byte	0x9c
	.long	0x3116c
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x4c7
	.byte	0x37
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "bitBufP\0"
	.byte	0x5
	.word	0x4c7
	.byte	0x3f
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "bitCntP\0"
	.byte	0x5
	.word	0x4c7
	.byte	0x4d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "bs\0"
	.byte	0x5
	.word	0x4c7
	.byte	0x6c
	.long	0x68b
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x7
	.secrel32	LASF386
	.byte	0x5
	.word	0x4c8
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF387
	.byte	0x5
	.word	0x4c8
	.byte	0x1b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x9
	.long	LBB65
	.long	LBE65-LBB65
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x5
	.word	0x4cc
	.byte	0x15
	.long	0x697
	.uleb128 0x2
	.byte	0x91
	.sleb128 -25
	.byte	0
	.byte	0
	.uleb128 0x18
	.ascii "stbi_write_png_to_func\0"
	.byte	0x5
	.word	0x4b1
	.byte	0xe
	.long	0xf4
	.long	LFB1775
	.long	LFE1775-LFB1775
	.uleb128 0x1
	.byte	0x9c
	.long	0x31227
	.uleb128 0x4
	.secrel32	LASF162
	.byte	0x5
	.word	0x4b1
	.byte	0x36
	.long	0x17cc8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF163
	.byte	0x5
	.word	0x4b1
	.byte	0x42
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x4b1
	.byte	0x4f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x4b1
	.byte	0x56
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x4b1
	.byte	0x5d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x4b1
	.byte	0x6f
	.long	0x7e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF389
	.byte	0x5
	.word	0x4b1
	.byte	0x79
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x5
	.word	0x4b3
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "png\0"
	.byte	0x5
	.word	0x4b4
	.byte	0x13
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x18
	.ascii "stbi_write_png\0"
	.byte	0x5
	.word	0x4a1
	.byte	0xe
	.long	0xf4
	.long	LFB1774
	.long	LFE1774-LFB1774
	.uleb128 0x1
	.byte	0x9c
	.long	0x312d8
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x5
	.word	0x4a1
	.byte	0x29
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x4a1
	.byte	0x37
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x4a1
	.byte	0x3e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x4a1
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x4a1
	.byte	0x57
	.long	0x7e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF389
	.byte	0x5
	.word	0x4a1
	.byte	0x61
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "f\0"
	.byte	0x5
	.word	0x4a3
	.byte	0xa
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x5
	.word	0x4a4
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "png\0"
	.byte	0x5
	.word	0x4a5
	.byte	0x13
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x18
	.ascii "stbi_write_png_to_mem\0"
	.byte	0x5
	.word	0x44a
	.byte	0x19
	.long	0x954
	.long	LFB1773
	.long	LFE1773-LFB1773
	.uleb128 0x1
	.byte	0x9c
	.long	0x31488
	.uleb128 0x4
	.secrel32	LASF187
	.byte	0x5
	.word	0x44a
	.byte	0x44
	.long	0x691
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF389
	.byte	0x5
	.word	0x44a
	.byte	0x50
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x44a
	.byte	0x62
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x44a
	.byte	0x69
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x5
	.word	0x44a
	.byte	0x70
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "out_len\0"
	.byte	0x5
	.word	0x44a
	.byte	0x78
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "force_filter\0"
	.byte	0x5
	.word	0x44c
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "ctype\0"
	.byte	0x5
	.word	0x44d
	.byte	0x8
	.long	0x31488
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "sig\0"
	.byte	0x5
	.word	0x44e
	.byte	0x12
	.long	0xb21
	.uleb128 0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x1
	.ascii "out\0"
	.byte	0x5
	.word	0x44f
	.byte	0x13
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "o\0"
	.byte	0x5
	.word	0x44f
	.byte	0x18
	.long	0x954
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x1
	.ascii "filt\0"
	.byte	0x5
	.word	0x44f
	.byte	0x1c
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "zlib\0"
	.byte	0x5
	.word	0x44f
	.byte	0x23
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x7
	.secrel32	LASF390
	.byte	0x5
	.word	0x450
	.byte	0x11
	.long	0x93b
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x5
	.word	0x451
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "zlen\0"
	.byte	0x5
	.word	0x451
	.byte	0xa
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x9
	.long	LBB62
	.long	LBE62-LBB62
	.uleb128 0x7
	.secrel32	LASF391
	.byte	0x5
	.word	0x45d
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x9
	.long	LBB64
	.long	LBE64-LBB64
	.uleb128 0x1
	.ascii "best_filter\0"
	.byte	0x5
	.word	0x462
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "best_filter_val\0"
	.byte	0x5
	.word	0x462
	.byte	0x1f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "est\0"
	.byte	0x5
	.word	0x462
	.byte	0x3d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x5
	.word	0x462
	.byte	0x42
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0xf4
	.long	0x31498
	.uleb128 0x12
	.long	0xe4
	.byte	0x4
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__encode_png_line\0"
	.byte	0x5
	.word	0x426
	.byte	0xd
	.long	LFB1772
	.long	LFE1772-LFB1772
	.uleb128 0x1
	.byte	0x9c
	.long	0x315c6
	.uleb128 0x4
	.secrel32	LASF187
	.byte	0x5
	.word	0x426
	.byte	0x33
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF389
	.byte	0x5
	.word	0x426
	.byte	0x3f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x5
	.word	0x426
	.byte	0x51
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF182
	.byte	0x5
	.word	0x426
	.byte	0x5c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x426
	.byte	0x68
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "n\0"
	.byte	0x5
	.word	0x426
	.byte	0x6f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF391
	.byte	0x5
	.word	0x426
	.byte	0x76
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF390
	.byte	0x5
	.word	0x426
	.byte	0x90
	.long	0x93b
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x1
	.ascii "mapping\0"
	.byte	0x5
	.word	0x428
	.byte	0xf
	.long	0x31488
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL22stbiw__encode_png_linePhiiiiiiPaE7mapping
	.uleb128 0x1
	.ascii "firstmap\0"
	.byte	0x5
	.word	0x429
	.byte	0xf
	.long	0x31488
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL22stbiw__encode_png_linePhiiiiiiPaE8firstmap
	.uleb128 0x1
	.ascii "mymap\0"
	.byte	0x5
	.word	0x42a
	.byte	0x9
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x5
	.word	0x42b
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x7
	.secrel32	LASF132
	.byte	0x5
	.word	0x42c
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "z\0"
	.byte	0x5
	.word	0x42d
	.byte	0x13
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "signed_stride\0"
	.byte	0x5
	.word	0x42e
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.uleb128 0x27
	.ascii "stbiw__paeth\0"
	.byte	0x5
	.word	0x41d
	.byte	0x16
	.long	0x697
	.long	LFB1771
	.long	LFE1771-LFB1771
	.uleb128 0x1
	.byte	0x9c
	.long	0x31650
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x5
	.word	0x41d
	.byte	0x27
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x5
	.word	0x41d
	.byte	0x2e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x5
	.word	0x41d
	.byte	0x35
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x5
	.word	0x41f
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1
	.ascii "pa\0"
	.byte	0x5
	.word	0x41f
	.byte	0x17
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x1
	.ascii "pb\0"
	.byte	0x5
	.word	0x41f
	.byte	0x26
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "pc\0"
	.byte	0x5
	.word	0x41f
	.byte	0x35
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__wpcrc\0"
	.byte	0x5
	.word	0x417
	.byte	0xd
	.long	LFB1770
	.long	LFE1770-LFB1770
	.uleb128 0x1
	.byte	0x9c
	.long	0x316a1
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x417
	.byte	0x2a
	.long	0x316a1
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x5
	.word	0x417
	.byte	0x34
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "crc\0"
	.byte	0x5
	.word	0x419
	.byte	0x11
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x954
	.uleb128 0x27
	.ascii "stbiw__crc32\0"
	.byte	0x5
	.word	0x3e2
	.byte	0x15
	.long	0xe4
	.long	LFB1769
	.long	LFE1769-LFB1769
	.uleb128 0x1
	.byte	0x9c
	.long	0x31723
	.uleb128 0x4
	.secrel32	LASF164
	.byte	0x5
	.word	0x3e2
	.byte	0x31
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "len\0"
	.byte	0x5
	.word	0x3e2
	.byte	0x3d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "crc_table\0"
	.byte	0x5
	.word	0x3e7
	.byte	0x18
	.long	0x31723
	.uleb128 0x5
	.byte	0x3
	.long	__ZZL12stbiw__crc32PhiE9crc_table
	.uleb128 0x1
	.ascii "crc\0"
	.byte	0x5
	.word	0x40b
	.byte	0x11
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x5
	.word	0x40c
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.byte	0
	.uleb128 0x10
	.long	0xe4
	.long	0x31733
	.uleb128 0x12
	.long	0xe4
	.byte	0xff
	.byte	0
	.uleb128 0x18
	.ascii "stbi_zlib_compress\0"
	.byte	0x5
	.word	0x372
	.byte	0x1a
	.long	0x954
	.long	LFB1768
	.long	LFE1768-LFB1768
	.uleb128 0x1
	.byte	0x9c
	.long	0x3195a
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x372
	.byte	0x3c
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "data_len\0"
	.byte	0x5
	.word	0x372
	.byte	0x46
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "out_len\0"
	.byte	0x5
	.word	0x372
	.byte	0x55
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF385
	.byte	0x5
	.word	0x372
	.byte	0x62
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x1
	.ascii "lengthc\0"
	.byte	0x5
	.word	0x378
	.byte	0x1a
	.long	0x3195a
	.uleb128 0x5
	.byte	0x3
	.long	__ZZ18stbi_zlib_compressE7lengthc
	.uleb128 0x1
	.ascii "lengtheb\0"
	.byte	0x5
	.word	0x379
	.byte	0x1a
	.long	0x3196a
	.uleb128 0x5
	.byte	0x3
	.long	__ZZ18stbi_zlib_compressE8lengtheb
	.uleb128 0x1
	.ascii "distc\0"
	.byte	0x5
	.word	0x37a
	.byte	0x1a
	.long	0x3197a
	.uleb128 0x5
	.byte	0x3
	.long	__ZZ18stbi_zlib_compressE5distc
	.uleb128 0x1
	.ascii "disteb\0"
	.byte	0x5
	.word	0x37b
	.byte	0x1a
	.long	0x3198a
	.uleb128 0x5
	.byte	0x3
	.long	__ZZ18stbi_zlib_compressE6disteb
	.uleb128 0x1
	.ascii "bitbuf\0"
	.byte	0x5
	.word	0x37c
	.byte	0x11
	.long	0xe4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x5
	.word	0x37d
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x5
	.word	0x37d
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x7
	.secrel32	LASF392
	.byte	0x5
	.word	0x37d
	.byte	0xd
	.long	0xf4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x1
	.ascii "out\0"
	.byte	0x5
	.word	0x37e
	.byte	0x13
	.long	0x954
	.uleb128 0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x1
	.ascii "hash_table\0"
	.byte	0x5
	.word	0x37f
	.byte	0x15
	.long	0x3199a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0xf
	.long	LBB47
	.long	LBE47-LBB47
	.long	0x3191a
	.uleb128 0x1
	.ascii "h\0"
	.byte	0x5
	.word	0x38f
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "best\0"
	.byte	0x5
	.word	0x38f
	.byte	0x36
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "bestloc\0"
	.byte	0x5
	.word	0x390
	.byte	0x16
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "hlist\0"
	.byte	0x5
	.word	0x391
	.byte	0x17
	.long	0x316a1
	.uleb128 0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x5
	.word	0x392
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0xf
	.long	LBB51
	.long	LBE51-LBB51
	.long	0x318e5
	.uleb128 0x1
	.ascii "d\0"
	.byte	0x5
	.word	0x395
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.byte	0
	.uleb128 0xf
	.long	LBB57
	.long	LBE57-LBB57
	.long	0x31901
	.uleb128 0x1
	.ascii "e\0"
	.byte	0x5
	.word	0x3a7
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.byte	0
	.uleb128 0x9
	.long	LBB59
	.long	LBE59-LBB59
	.uleb128 0x1
	.ascii "d\0"
	.byte	0x5
	.word	0x3b1
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.byte	0
	.byte	0
	.uleb128 0x9
	.long	LBB60
	.long	LBE60-LBB60
	.uleb128 0x1
	.ascii "s1\0"
	.byte	0x5
	.word	0x3cd
	.byte	0x14
	.long	0xe4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x1
	.ascii "s2\0"
	.byte	0x5
	.word	0x3cd
	.byte	0x1a
	.long	0xe4
	.uleb128 0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x1
	.ascii "blocklen\0"
	.byte	0x5
	.word	0x3ce
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x132
	.long	0x3196a
	.uleb128 0x12
	.long	0xe4
	.byte	0x1d
	.byte	0
	.uleb128 0x10
	.long	0x697
	.long	0x3197a
	.uleb128 0x12
	.long	0xe4
	.byte	0x1c
	.byte	0
	.uleb128 0x10
	.long	0x132
	.long	0x3198a
	.uleb128 0x12
	.long	0xe4
	.byte	0x1e
	.byte	0
	.uleb128 0x10
	.long	0x697
	.long	0x3199a
	.uleb128 0x12
	.long	0xe4
	.byte	0x1d
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x316a1
	.uleb128 0x27
	.ascii "stbiw__zhash\0"
	.byte	0x5
	.word	0x356
	.byte	0x15
	.long	0xe4
	.long	LFB1767
	.long	LFE1767-LFB1767
	.uleb128 0x1
	.byte	0x9c
	.long	0x319e6
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x356
	.byte	0x31
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x1
	.ascii "hash\0"
	.byte	0x5
	.word	0x358
	.byte	0x11
	.long	0x17cfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x27
	.ascii "stbiw__zlib_countm\0"
	.byte	0x5
	.word	0x34e
	.byte	0x15
	.long	0xe4
	.long	LFB1766
	.long	LFE1766-LFB1766
	.uleb128 0x1
	.byte	0x9c
	.long	0x31a4d
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x5
	.word	0x34e
	.byte	0x37
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x5
	.word	0x34e
	.byte	0x49
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "limit\0"
	.byte	0x5
	.word	0x34e
	.byte	0x50
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x5
	.word	0x350
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x27
	.ascii "stbiw__zlib_bitrev\0"
	.byte	0x5
	.word	0x344
	.byte	0xc
	.long	0xf4
	.long	LFB1765
	.long	LFE1765-LFB1765
	.uleb128 0x1
	.byte	0x9c
	.long	0x31aad
	.uleb128 0x4
	.secrel32	LASF166
	.byte	0x5
	.word	0x344
	.byte	0x23
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "codebits\0"
	.byte	0x5
	.word	0x344
	.byte	0x2d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "res\0"
	.byte	0x5
	.word	0x346
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0xd
	.ascii "stbiw__zlib_flushf\0"
	.byte	0x5
	.word	0x33a
	.byte	0x17
	.long	0x954
	.long	LFB1764
	.long	LFE1764-LFB1764
	.uleb128 0x1
	.byte	0x9c
	.long	0x31b0e
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x33a
	.byte	0x39
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "bitbuffer\0"
	.byte	0x5
	.word	0x33a
	.byte	0x4d
	.long	0x7f8
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF392
	.byte	0x5
	.word	0x33a
	.byte	0x5d
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0xd
	.ascii "stbiw__sbgrowf\0"
	.byte	0x5
	.word	0x32d
	.byte	0xe
	.long	0x7aa
	.long	LFB1763
	.long	LFE1763-LFB1763
	.uleb128 0x1
	.byte	0x9c
	.long	0x31b8c
	.uleb128 0x3
	.ascii "arr\0"
	.byte	0x5
	.word	0x32d
	.byte	0x24
	.long	0x280f
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "increment\0"
	.byte	0x5
	.word	0x32d
	.byte	0x2d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "itemsize\0"
	.byte	0x5
	.word	0x32d
	.byte	0x3c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x1
	.ascii "m\0"
	.byte	0x5
	.word	0x32f
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "p\0"
	.byte	0x5
	.word	0x330
	.byte	0xa
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x18
	.ascii "stbi_write_hdr\0"
	.byte	0x5
	.word	0x30d
	.byte	0xe
	.long	0xf4
	.long	LFB1762
	.long	LFE1762-LFB1762
	.uleb128 0x1
	.byte	0x9c
	.long	0x31c26
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x5
	.word	0x30d
	.byte	0x29
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x30d
	.byte	0x37
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x30d
	.byte	0x3e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x30d
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x30d
	.byte	0x58
	.long	0x31c26
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x5
	.word	0x30f
	.byte	0x18
	.long	0x17cde
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x9
	.long	LBB46
	.long	LBE46-LBB46
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x5
	.word	0x311
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0xc
	.byte	0x4
	.long	0x7de
	.uleb128 0x18
	.ascii "stbi_write_hdr_to_func\0"
	.byte	0x5
	.word	0x305
	.byte	0xe
	.long	0xf4
	.long	LFB1761
	.long	LFE1761-LFB1761
	.uleb128 0x1
	.byte	0x9c
	.long	0x31cc6
	.uleb128 0x4
	.secrel32	LASF162
	.byte	0x5
	.word	0x305
	.byte	0x36
	.long	0x17cc8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF163
	.byte	0x5
	.word	0x305
	.byte	0x42
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x305
	.byte	0x4f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x305
	.byte	0x56
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x305
	.byte	0x5d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x305
	.byte	0x70
	.long	0x31c26
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x5
	.word	0x307
	.byte	0x18
	.long	0x17cde
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.uleb128 0xd
	.ascii "stbi_write_hdr_core\0"
	.byte	0x5
	.word	0x2eb
	.byte	0xc
	.long	0xf4
	.long	LFB1760
	.long	LFE1760-LFB1760
	.uleb128 0x1
	.byte	0x9c
	.long	0x31da3
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x2eb
	.byte	0x35
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x2eb
	.byte	0x3c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x2eb
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x2eb
	.byte	0x4a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x2eb
	.byte	0x57
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x9
	.long	LBB44
	.long	LBE44-LBB44
	.uleb128 0x1
	.ascii "scratch\0"
	.byte	0x5
	.word	0x2f1
	.byte	0x16
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x5
	.word	0x2f2
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x5
	.word	0x2f2
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x7
	.secrel32	LASF164
	.byte	0x5
	.word	0x2f3
	.byte	0xc
	.long	0x31da3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -172
	.uleb128 0x7
	.secrel32	LASF248
	.byte	0x5
	.word	0x2f4
	.byte	0xc
	.long	0x31db3
	.uleb128 0x3
	.byte	0x91
	.sleb128 -238
	.uleb128 0x2d
	.long	LVL13
	.long	0x33135
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0xb8
	.long	0x31db3
	.uleb128 0x12
	.long	0xe4
	.byte	0x7f
	.byte	0
	.uleb128 0x10
	.long	0xb8
	.long	0x31dc3
	.uleb128 0x12
	.long	0xe4
	.byte	0x41
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__write_hdr_scanline\0"
	.byte	0x5
	.word	0x292
	.byte	0xd
	.long	LFB1759
	.long	LFE1759-LFB1759
	.uleb128 0x1
	.byte	0x9c
	.long	0x31f0a
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x292
	.byte	0x3c
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF181
	.byte	0x5
	.word	0x292
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "ncomp\0"
	.byte	0x5
	.word	0x292
	.byte	0x4e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "scratch\0"
	.byte	0x5
	.word	0x292
	.byte	0x64
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF341
	.byte	0x5
	.word	0x292
	.byte	0x74
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "scanlineheader\0"
	.byte	0x5
	.word	0x294
	.byte	0x12
	.long	0x2a781
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "rgbe\0"
	.byte	0x5
	.word	0x295
	.byte	0x12
	.long	0x2a781
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x1
	.ascii "linear\0"
	.byte	0x5
	.word	0x296
	.byte	0xa
	.long	0x1a3bb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x5
	.word	0x297
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB35
	.long	LBE35-LBB35
	.uleb128 0x1
	.ascii "c\0"
	.byte	0x5
	.word	0x2ad
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x5
	.word	0x2ad
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x9
	.long	LBB37
	.long	LBE37-LBB37
	.uleb128 0x7
	.secrel32	LASF355
	.byte	0x5
	.word	0x2c5
	.byte	0x19
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0xf
	.long	LBB39
	.long	LBE39-LBB39
	.long	0x31eed
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x5
	.word	0x2d4
	.byte	0x14
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.uleb128 0x9
	.long	LBB42
	.long	LBE42-LBB42
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x5
	.word	0x2e0
	.byte	0x17
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__write_dump_data\0"
	.byte	0x5
	.word	0x28a
	.byte	0xd
	.long	LFB1758
	.long	LFE1758-LFB1758
	.uleb128 0x1
	.byte	0x9c
	.long	0x31f73
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x28a
	.byte	0x39
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF48
	.byte	0x5
	.word	0x28a
	.byte	0x40
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x28a
	.byte	0x57
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x7
	.secrel32	LASF393
	.byte	0x5
	.word	0x28c
	.byte	0x12
	.long	0x697
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__write_run_data\0"
	.byte	0x5
	.word	0x282
	.byte	0xd
	.long	LFB1757
	.long	LFE1757-LFB1757
	.uleb128 0x1
	.byte	0x9c
	.long	0x31fe0
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x282
	.byte	0x38
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF48
	.byte	0x5
	.word	0x282
	.byte	0x3f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "databyte\0"
	.byte	0x5
	.word	0x282
	.byte	0x55
	.long	0x697
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x7
	.secrel32	LASF393
	.byte	0x5
	.word	0x284
	.byte	0x12
	.long	0x697
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__linear_to_rgbe\0"
	.byte	0x5
	.word	0x271
	.byte	0xd
	.long	LFB1756
	.long	LFE1756-LFB1756
	.uleb128 0x1
	.byte	0x9c
	.long	0x32077
	.uleb128 0x3
	.ascii "rgbe\0"
	.byte	0x5
	.word	0x271
	.byte	0x32
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "linear\0"
	.byte	0x5
	.word	0x271
	.byte	0x3f
	.long	0x16fa3
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "exponent\0"
	.byte	0x5
	.word	0x273
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "maxcomp\0"
	.byte	0x5
	.word	0x274
	.byte	0xa
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x9
	.long	LBB32
	.long	LBE32-LBB32
	.uleb128 0x1
	.ascii "normalize\0"
	.byte	0x5
	.word	0x279
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.byte	0
	.uleb128 0x18
	.ascii "stbi_write_tga\0"
	.byte	0x5
	.word	0x25f
	.byte	0xe
	.long	0xf4
	.long	LFB1755
	.long	LFE1755-LFB1755
	.uleb128 0x1
	.byte	0x9c
	.long	0x32111
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x5
	.word	0x25f
	.byte	0x29
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x25f
	.byte	0x37
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x25f
	.byte	0x3e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x25f
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x25f
	.byte	0x57
	.long	0x7e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x5
	.word	0x261
	.byte	0x18
	.long	0x17cde
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x9
	.long	LBB30
	.long	LBE30-LBB30
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x5
	.word	0x263
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x18
	.ascii "stbi_write_tga_to_func\0"
	.byte	0x5
	.word	0x257
	.byte	0xe
	.long	0xf4
	.long	LFB1754
	.long	LFE1754-LFB1754
	.uleb128 0x1
	.byte	0x9c
	.long	0x321ab
	.uleb128 0x4
	.secrel32	LASF162
	.byte	0x5
	.word	0x257
	.byte	0x36
	.long	0x17cc8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF163
	.byte	0x5
	.word	0x257
	.byte	0x42
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x257
	.byte	0x4f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x257
	.byte	0x56
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x257
	.byte	0x5d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x257
	.byte	0x6f
	.long	0x7e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x5
	.word	0x259
	.byte	0x18
	.long	0x17cde
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.uleb128 0xd
	.ascii "stbi_write_tga_core\0"
	.byte	0x5
	.word	0x208
	.byte	0xc
	.long	0xf4
	.long	LFB1753
	.long	LFE1753-LFB1753
	.uleb128 0x1
	.byte	0x9c
	.long	0x32365
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x208
	.byte	0x35
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x208
	.byte	0x3c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x208
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x208
	.byte	0x4a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x208
	.byte	0x56
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "has_alpha\0"
	.byte	0x5
	.word	0x20a
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x1
	.ascii "colorbytes\0"
	.byte	0x5
	.word	0x20b
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x1
	.ascii "format\0"
	.byte	0x5
	.word	0x20c
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x9
	.long	LBB17
	.long	LBE17-LBB17
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x5
	.word	0x215
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x5
	.word	0x215
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x5
	.word	0x215
	.byte	0xf
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x1
	.ascii "jend\0"
	.byte	0x5
	.word	0x216
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "jdir\0"
	.byte	0x5
	.word	0x216
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x9
	.long	LBB19
	.long	LBE19-LBB19
	.uleb128 0x1
	.ascii "row\0"
	.byte	0x5
	.word	0x224
	.byte	0x19
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x1
	.ascii "len\0"
	.byte	0x5
	.word	0x225
	.byte	0xe
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x9
	.long	LBB21
	.long	LBE21-LBB21
	.uleb128 0x7
	.secrel32	LASF43
	.byte	0x5
	.word	0x228
	.byte	0x1c
	.long	0x954
	.uleb128 0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x7
	.secrel32	LASF293
	.byte	0x5
	.word	0x229
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0xf
	.long	LBB25
	.long	LBE25-LBB25
	.long	0x32327
	.uleb128 0x1
	.ascii "prev\0"
	.byte	0x5
	.word	0x230
	.byte	0x28
	.long	0x691
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.byte	0
	.uleb128 0xf
	.long	LBB27
	.long	LBE27-LBB27
	.long	0x32346
	.uleb128 0x7
	.secrel32	LASF248
	.byte	0x5
	.word	0x246
	.byte	0x1e
	.long	0x697
	.uleb128 0x3
	.byte	0x91
	.sleb128 -69
	.byte	0
	.uleb128 0x9
	.long	LBB28
	.long	LBE28-LBB28
	.uleb128 0x7
	.secrel32	LASF248
	.byte	0x5
	.word	0x24c
	.byte	0x1e
	.long	0x697
	.uleb128 0x3
	.byte	0x91
	.sleb128 -70
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x18
	.ascii "stbi_write_bmp\0"
	.byte	0x5
	.word	0x1fc
	.byte	0xe
	.long	0xf4
	.long	LFB1752
	.long	LFE1752-LFB1752
	.uleb128 0x1
	.byte	0x9c
	.long	0x323ff
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x5
	.word	0x1fc
	.byte	0x29
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x1fc
	.byte	0x37
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x1fc
	.byte	0x3e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x1fc
	.byte	0x45
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x1fc
	.byte	0x57
	.long	0x7e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x5
	.word	0x1fe
	.byte	0x18
	.long	0x17cde
	.uleb128 0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x9
	.long	LBB15
	.long	LBE15-LBB15
	.uleb128 0x1
	.ascii "r\0"
	.byte	0x5
	.word	0x200
	.byte	0xb
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x18
	.ascii "stbi_write_bmp_to_func\0"
	.byte	0x5
	.word	0x1f4
	.byte	0xe
	.long	0xf4
	.long	LFB1751
	.long	LFE1751-LFB1751
	.uleb128 0x1
	.byte	0x9c
	.long	0x32499
	.uleb128 0x4
	.secrel32	LASF162
	.byte	0x5
	.word	0x1f4
	.byte	0x36
	.long	0x17cc8
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF163
	.byte	0x5
	.word	0x1f4
	.byte	0x42
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x1f4
	.byte	0x4f
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x1f4
	.byte	0x56
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x1f4
	.byte	0x5d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x1f4
	.byte	0x6f
	.long	0x7e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "s\0"
	.byte	0x5
	.word	0x1f6
	.byte	0x18
	.long	0x17cde
	.uleb128 0x3
	.byte	0x91
	.sleb128 -92
	.byte	0
	.uleb128 0xd
	.ascii "stbi_write_bmp_core\0"
	.byte	0x5
	.word	0x1eb
	.byte	0xc
	.long	0xf4
	.long	LFB1750
	.long	LFE1750-LFB1750
	.uleb128 0x1
	.byte	0x9c
	.long	0x3251f
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x1eb
	.byte	0x35
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x1eb
	.byte	0x3c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x1eb
	.byte	0x43
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x1eb
	.byte	0x4a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x1eb
	.byte	0x5c
	.long	0x7e3
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x1
	.ascii "pad\0"
	.byte	0x5
	.word	0x1ed
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbiw__outfile\0"
	.byte	0x5
	.word	0x1dd
	.byte	0xc
	.long	0xf4
	.long	LFB1749
	.long	LFE1749-LFB1749
	.uleb128 0x1
	.byte	0x9c
	.long	0x3260c
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x1dd
	.byte	0x30
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF394
	.byte	0x5
	.word	0x1dd
	.byte	0x37
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "vdir\0"
	.byte	0x5
	.word	0x1dd
	.byte	0x44
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x1dd
	.byte	0x4e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x1dd
	.byte	0x55
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x1dd
	.byte	0x5c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF395
	.byte	0x5
	.word	0x1dd
	.byte	0x66
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x1dd
	.byte	0x79
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x3
	.ascii "alpha\0"
	.byte	0x5
	.word	0x1dd
	.byte	0x83
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x3
	.ascii "pad\0"
	.byte	0x5
	.word	0x1dd
	.byte	0x8e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x3
	.ascii "fmt\0"
	.byte	0x5
	.word	0x1dd
	.byte	0x9f
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x37
	.uleb128 0x9
	.long	LBB13
	.long	LBE13-LBB13
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x5
	.word	0x1e2
	.byte	0xf
	.long	0xc5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__write_pixels\0"
	.byte	0x5
	.word	0x1c2
	.byte	0xd
	.long	LFB1748
	.long	LFE1748-LFB1748
	.uleb128 0x1
	.byte	0x9c
	.long	0x3272f
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x1c2
	.byte	0x36
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF394
	.byte	0x5
	.word	0x1c2
	.byte	0x3d
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "vdir\0"
	.byte	0x5
	.word	0x1c2
	.byte	0x4a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3
	.ascii "x\0"
	.byte	0x5
	.word	0x1c2
	.byte	0x54
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3
	.ascii "y\0"
	.byte	0x5
	.word	0x1c2
	.byte	0x5b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x1c2
	.byte	0x62
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x1c2
	.byte	0x6e
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x4
	.secrel32	LASF396
	.byte	0x5
	.word	0x1c2
	.byte	0x78
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x3
	.ascii "scanline_pad\0"
	.byte	0x5
	.word	0x1c2
	.byte	0x89
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x4
	.secrel32	LASF395
	.byte	0x5
	.word	0x1c2
	.byte	0x9b
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x1
	.ascii "zero\0"
	.byte	0x5
	.word	0x1c4
	.byte	0x11
	.long	0x17cfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x1
	.ascii "i\0"
	.byte	0x5
	.word	0x1c5
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1
	.ascii "j\0"
	.byte	0x5
	.word	0x1c5
	.byte	0xa
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "j_end\0"
	.byte	0x5
	.word	0x1c5
	.byte	0xd
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x9
	.long	LBB11
	.long	LBE11-LBB11
	.uleb128 0x1
	.ascii "d\0"
	.byte	0x5
	.word	0x1d5
	.byte	0x19
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.byte	0
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__write_pixel\0"
	.byte	0x5
	.word	0x1a1
	.byte	0xd
	.long	LFB1747
	.long	LFE1747-LFB1747
	.uleb128 0x1
	.byte	0x9c
	.long	0x327de
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x1a1
	.byte	0x35
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF394
	.byte	0x5
	.word	0x1a1
	.byte	0x3c
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF355
	.byte	0x5
	.word	0x1a1
	.byte	0x49
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x4
	.secrel32	LASF396
	.byte	0x5
	.word	0x1a1
	.byte	0x53
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x4
	.secrel32	LASF395
	.byte	0x5
	.word	0x1a1
	.byte	0x64
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3
	.ascii "d\0"
	.byte	0x5
	.word	0x1a1
	.byte	0x80
	.long	0x954
	.uleb128 0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x1
	.ascii "bg\0"
	.byte	0x5
	.word	0x1a3
	.byte	0x12
	.long	0x327de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -23
	.uleb128 0x1
	.ascii "px\0"
	.byte	0x5
	.word	0x1a3
	.byte	0x2a
	.long	0x327de
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0x1
	.ascii "k\0"
	.byte	0x5
	.word	0x1a4
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x10
	.long	0x697
	.long	0x327ee
	.uleb128 0x12
	.long	0xe4
	.byte	0x2
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__write3\0"
	.byte	0x5
	.word	0x195
	.byte	0xd
	.long	LFB1746
	.long	LFE1746-LFB1746
	.uleb128 0x1
	.byte	0x9c
	.long	0x32856
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x195
	.byte	0x30
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x5
	.word	0x195
	.byte	0x41
	.long	0x697
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x3
	.ascii "b\0"
	.byte	0x5
	.word	0x195
	.byte	0x52
	.long	0x697
	.uleb128 0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x5
	.word	0x195
	.byte	0x63
	.long	0x697
	.uleb128 0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x1
	.ascii "n\0"
	.byte	0x5
	.word	0x197
	.byte	0x8
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__write1\0"
	.byte	0x5
	.word	0x18e
	.byte	0xd
	.long	LFB1745
	.long	LFE1745-LFB1745
	.uleb128 0x1
	.byte	0x9c
	.long	0x32894
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x18e
	.byte	0x30
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "a\0"
	.byte	0x5
	.word	0x18e
	.byte	0x41
	.long	0x697
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__putc\0"
	.byte	0x5
	.word	0x189
	.byte	0xd
	.long	LFB1744
	.long	LFE1744-LFB1744
	.uleb128 0x1
	.byte	0x9c
	.long	0x328d0
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x189
	.byte	0x2e
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x5
	.word	0x189
	.byte	0x3f
	.long	0x697
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__write_flush\0"
	.byte	0x5
	.word	0x181
	.byte	0xd
	.long	LFB1743
	.long	LFE1743-LFB1743
	.uleb128 0x1
	.byte	0x9c
	.long	0x32905
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x181
	.byte	0x35
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__writef\0"
	.byte	0x5
	.word	0x179
	.byte	0xd
	.long	LFB1742
	.long	LFE1742-LFB1742
	.uleb128 0x1
	.byte	0x9c
	.long	0x32954
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x179
	.byte	0x30
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "fmt\0"
	.byte	0x5
	.word	0x179
	.byte	0x3f
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.uleb128 0x1
	.ascii "v\0"
	.byte	0x5
	.word	0x17b
	.byte	0xc
	.long	0xc5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1c
	.ascii "stbiw__writefv\0"
	.byte	0x5
	.word	0x15c
	.byte	0xd
	.long	LFB1741
	.long	LFE1741-LFB1741
	.uleb128 0x1
	.byte	0x9c
	.long	0x32a0f
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x15c
	.byte	0x31
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "fmt\0"
	.byte	0x5
	.word	0x15c
	.byte	0x40
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3
	.ascii "v\0"
	.byte	0x5
	.word	0x15c
	.byte	0x4d
	.long	0xc5
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0xf
	.long	LBB5
	.long	LBE5-LBB5
	.long	0x329be
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x5
	.word	0x161
	.byte	0x24
	.long	0x697
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0xf
	.long	LBB6
	.long	LBE6-LBB6
	.long	0x329e8
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x5
	.word	0x164
	.byte	0x1a
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x5
	.word	0x165
	.byte	0x24
	.long	0x32a0f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.byte	0
	.uleb128 0x9
	.long	LBB7
	.long	LBE7-LBB7
	.uleb128 0x1
	.ascii "x\0"
	.byte	0x5
	.word	0x16a
	.byte	0x23
	.long	0x17cfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x1
	.ascii "b\0"
	.byte	0x5
	.word	0x16b
	.byte	0x24
	.long	0x2a781
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.byte	0
	.byte	0
	.uleb128 0x10
	.long	0x697
	.long	0x32a1f
	.uleb128 0x12
	.long	0xe4
	.byte	0x1
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__end_write_file\0"
	.byte	0x5
	.word	0x152
	.byte	0xd
	.long	LFB1740
	.long	LFE1740-LFB1740
	.uleb128 0x1
	.byte	0x9c
	.long	0x32a56
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x152
	.byte	0x37
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0xd
	.ascii "stbi__start_write_file\0"
	.byte	0x5
	.word	0x14b
	.byte	0xc
	.long	0xf4
	.long	LFB1739
	.long	LFE1739-LFB1739
	.uleb128 0x1
	.byte	0x9c
	.long	0x32ab1
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x14b
	.byte	0x38
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x5
	.word	0x14b
	.byte	0x47
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "f\0"
	.byte	0x5
	.word	0x14d
	.byte	0xa
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0xd
	.ascii "stbiw__fopen\0"
	.byte	0x5
	.word	0x12f
	.byte	0xe
	.long	0x15d9a
	.long	LFB1738
	.long	LFE1738-LFB1738
	.uleb128 0x1
	.byte	0x9c
	.long	0x32b05
	.uleb128 0x4
	.secrel32	LASF294
	.byte	0x5
	.word	0x12f
	.byte	0x27
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "mode\0"
	.byte	0x5
	.word	0x12f
	.byte	0x3d
	.long	0x12a7d
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "f\0"
	.byte	0x5
	.word	0x131
	.byte	0xa
	.long	0x15d9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1c
	.ascii "stbi__stdio_write\0"
	.byte	0x5
	.word	0x11b
	.byte	0xd
	.long	LFB1737
	.long	LFE1737-LFB1737
	.uleb128 0x1
	.byte	0x9c
	.long	0x32b5b
	.uleb128 0x4
	.secrel32	LASF163
	.byte	0x5
	.word	0x11b
	.byte	0x25
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x4
	.secrel32	LASF69
	.byte	0x5
	.word	0x11b
	.byte	0x34
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF47
	.byte	0x5
	.word	0x11b
	.byte	0x3e
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x38
	.ascii "stbi__start_write_callbacks\0"
	.byte	0x5
	.word	0x113
	.byte	0xd
	.long	LFB1736
	.long	LFE1736-LFB1736
	.uleb128 0x1
	.byte	0x9c
	.long	0x32bb7
	.uleb128 0x3
	.ascii "s\0"
	.byte	0x5
	.word	0x113
	.byte	0x3e
	.long	0x30acd
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "c\0"
	.byte	0x5
	.word	0x113
	.byte	0x52
	.long	0x17cc8
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x4
	.secrel32	LASF163
	.byte	0x5
	.word	0x113
	.byte	0x5b
	.long	0x7aa
	.uleb128 0x2
	.byte	0x91
	.sleb128 8
	.byte	0
	.uleb128 0x52
	.ascii "stbi_flip_vertically_on_write\0"
	.byte	0x5
	.word	0x105
	.byte	0xf
	.long	LFB1735
	.long	LFE1735-LFB1735
	.uleb128 0x1
	.byte	0x9c
	.long	0x32bfa
	.uleb128 0x3
	.ascii "flag\0"
	.byte	0x5
	.word	0x105
	.byte	0x31
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x45
	.long	0xe237
	.long	LFB1576
	.long	LFE1576-LFB1576
	.uleb128 0x1
	.byte	0x9c
	.long	0x32c1e
	.uleb128 0x3
	.ascii "__x\0"
	.byte	0x4
	.word	0x1cf
	.byte	0xe
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x45
	.long	0xe1ed
	.long	LFB1567
	.long	LFE1567-LFB1567
	.uleb128 0x1
	.byte	0x9c
	.long	0x32c52
	.uleb128 0x3
	.ascii "__x\0"
	.byte	0x4
	.word	0x184
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "__y\0"
	.byte	0x4
	.word	0x184
	.byte	0x18
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x45
	.long	0xe0bb
	.long	LFB1556
	.long	LFE1556-LFB1556
	.uleb128 0x1
	.byte	0x9c
	.long	0x32c88
	.uleb128 0x3
	.ascii "__x\0"
	.byte	0x4
	.word	0x13f
	.byte	0xf
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "__exp\0"
	.byte	0x4
	.word	0x13f
	.byte	0x18
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x45
	.long	0xe064
	.long	LFB1553
	.long	LFE1553-LFB1553
	.uleb128 0x1
	.byte	0x9c
	.long	0x32cbe
	.uleb128 0x3
	.ascii "__x\0"
	.byte	0x4
	.word	0x12c
	.byte	0xf
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "__exp\0"
	.byte	0x4
	.word	0x12c
	.byte	0x19
	.long	0x482
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x45
	.long	0xe355
	.long	LFB1550
	.long	LFE1550-LFB1550
	.uleb128 0x1
	.byte	0x9c
	.long	0x32cf2
	.uleb128 0x3
	.ascii "__x\0"
	.byte	0x4
	.word	0x117
	.byte	0xe
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3
	.ascii "__y\0"
	.byte	0x4
	.word	0x117
	.byte	0x19
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x56
	.long	0xe307
	.long	LFB1547
	.long	LFE1547-LFB1547
	.uleb128 0x1
	.byte	0x9c
	.long	0x32d16
	.uleb128 0x3
	.ascii "__x\0"
	.byte	0x4
	.word	0x104
	.byte	0xf
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x56
	.long	0xe2c0
	.long	LFB1544
	.long	LFE1544-LFB1544
	.uleb128 0x1
	.byte	0x9c
	.long	0x32d39
	.uleb128 0x21
	.ascii "__x\0"
	.byte	0x4
	.byte	0xf1
	.byte	0xe
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x45
	.long	0xde84
	.long	LFB1535
	.long	LFE1535-LFB1535
	.uleb128 0x1
	.byte	0x9c
	.long	0x32d5c
	.uleb128 0x21
	.ascii "__x\0"
	.byte	0x4
	.byte	0xb8
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x56
	.long	0xe27c
	.long	LFB1532
	.long	LFE1532-LFB1532
	.uleb128 0x1
	.byte	0x9c
	.long	0x32d7f
	.uleb128 0x21
	.ascii "__x\0"
	.byte	0x4
	.byte	0xa5
	.byte	0xe
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x45
	.long	0xdd66
	.long	LFB1520
	.long	LFE1520-LFB1520
	.uleb128 0x1
	.byte	0x9c
	.long	0x32da2
	.uleb128 0x21
	.ascii "__x\0"
	.byte	0x4
	.byte	0x57
	.byte	0xe
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x45
	.long	0xb9da
	.long	LFB1433
	.long	LFE1433-LFB1433
	.uleb128 0x1
	.byte	0x9c
	.long	0x32dd8
	.uleb128 0x3
	.ascii "__val\0"
	.byte	0x3
	.word	0x1930
	.byte	0x13
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x1
	.ascii "__n\0"
	.byte	0x3
	.word	0x1932
	.byte	0xf
	.long	0xfb
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x45
	.long	0xba0b
	.long	LFB1427
	.long	LFE1427-LFB1427
	.uleb128 0x1
	.byte	0x9c
	.long	0x32dfe
	.uleb128 0x3
	.ascii "__val\0"
	.byte	0x3
	.word	0x190e
	.byte	0x11
	.long	0xf4
	.uleb128 0x2
	.byte	0x91
	.sleb128 4
	.byte	0
	.uleb128 0x9f
	.long	0xc42b
	.long	0x32e32
	.uleb128 0x68
	.ascii "__s1\0"
	.byte	0x25
	.word	0x15a
	.byte	0x17
	.long	0x16573
	.uleb128 0x68
	.ascii "__s2\0"
	.byte	0x25
	.word	0x15a
	.byte	0x2e
	.long	0x1656d
	.uleb128 0x68
	.ascii "__n\0"
	.byte	0x25
	.word	0x15a
	.byte	0x3b
	.long	0xc5f8
	.byte	0
	.uleb128 0x56
	.long	0xbb73
	.long	LFB116
	.long	LFE116-LFB116
	.uleb128 0x1
	.byte	0x9c
	.long	0x32e55
	.uleb128 0x21
	.ascii "__x\0"
	.byte	0x1
	.byte	0x4a
	.byte	0xd
	.long	0x7d5
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.byte	0
	.uleb128 0x4a
	.ascii "GetCursorPos@4\0"
	.ascii "GetCursorPos\0"
	.byte	0x1c
	.word	0xe1f
	.byte	0x1d
	.uleb128 0x58
	.ascii "QueryPerformanceCounter@4\0"
	.ascii "QueryPerformanceCounter\0"
	.byte	0x50
	.byte	0x10
	.byte	0x1d
	.uleb128 0x58
	.ascii "Sleep@4\0"
	.ascii "Sleep\0"
	.byte	0x51
	.byte	0x7f
	.byte	0x1a
	.uleb128 0x58
	.ascii "FindFirstFileA@8\0"
	.ascii "FindFirstFileA\0"
	.byte	0x52
	.byte	0x3c
	.byte	0x1c
	.uleb128 0x58
	.ascii "FindNextFileA@8\0"
	.ascii "FindNextFileA\0"
	.byte	0x52
	.byte	0x9d
	.byte	0x1d
	.uleb128 0x58
	.ascii "FindClose@4\0"
	.ascii "FindClose\0"
	.byte	0x52
	.byte	0x9a
	.byte	0x1d
	.uleb128 0x58
	.ascii "QueryPerformanceFrequency@4\0"
	.ascii "QueryPerformanceFrequency\0"
	.byte	0x50
	.byte	0x11
	.byte	0x1d
	.uleb128 0x58
	.ascii "GetOpenFileNameA@4\0"
	.ascii "GetOpenFileNameA\0"
	.byte	0x47
	.byte	0x9f
	.byte	0x20
	.uleb128 0x4a
	.ascii "PeekMessageA@20\0"
	.ascii "PeekMessageA\0"
	.byte	0x1c
	.word	0x775
	.byte	0x1d
	.uleb128 0x4a
	.ascii "TranslateMessage@4\0"
	.ascii "TranslateMessage\0"
	.byte	0x1c
	.word	0x771
	.byte	0x1d
	.uleb128 0x4a
	.ascii "DispatchMessageA@4\0"
	.ascii "DispatchMessageA\0"
	.byte	0x1c
	.word	0x772
	.byte	0x1d
	.uleb128 0x58
	.ascii "GetModuleHandleA@4\0"
	.ascii "GetModuleHandleA\0"
	.byte	0x53
	.byte	0x53
	.byte	0x1d
	.uleb128 0x4a
	.ascii "RegisterClassA@4\0"
	.ascii "RegisterClassA\0"
	.byte	0x1c
	.word	0x823
	.byte	0x1a
	.uleb128 0x4a
	.ascii "CreateWindowExA@48\0"
	.ascii "CreateWindowExA\0"
	.byte	0x1c
	.word	0x859
	.byte	0x1a
	.uleb128 0x4a
	.ascii "GetClientRect@8\0"
	.ascii "GetClientRect\0"
	.byte	0x1c
	.word	0xda9
	.byte	0x1d
	.uleb128 0x4a
	.ascii "PostQuitMessage@4\0"
	.ascii "PostQuitMessage\0"
	.byte	0x1c
	.word	0x81e
	.byte	0x1a
	.uleb128 0x4a
	.ascii "DefWindowProcA@16\0"
	.ascii "DefWindowProcA\0"
	.byte	0x1c
	.word	0x81c
	.byte	0x1d
	.uleb128 0x4a
	.ascii "ClientToScreen@8\0"
	.ascii "ClientToScreen\0"
	.byte	0x1c
	.word	0xe2b
	.byte	0x1d
	.uleb128 0x4a
	.ascii "GetDC@4\0"
	.ascii "GetDC\0"
	.byte	0x1c
	.word	0xd25
	.byte	0x19
	.uleb128 0x4a
	.ascii "StretchDIBits@52\0"
	.ascii "StretchDIBits\0"
	.byte	0x1b
	.word	0xc0d
	.byte	0x18
	.uleb128 0xcc
	.secrel32	LASF397
	.secrel32	LASF397
	.byte	0x55
	.word	0x1ef
	.byte	0x17
	.byte	0
	.section	.debug_abbrev,"dr"
Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x8
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x10
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x29
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2a
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2b
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x2c
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x2d
	.uleb128 0x4109
	.byte	0
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x2f
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x30
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x31
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x32
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x33
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x34
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x35
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x36
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x37
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x38
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x39
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3a
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x3b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3c
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x3d
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x3e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x40
	.uleb128 0x8
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x41
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x42
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x43
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x44
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x45
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x46
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x47
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x48
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x49
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4a
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x4b
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x4c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4d
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x4e
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x4f
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x50
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x51
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x52
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x53
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x54
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x55
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x56
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x57
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x58
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x59
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5a
	.uleb128 0x1c
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x5b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5c
	.uleb128 0x42
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5d
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5e
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x60
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x61
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x62
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x63
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x64
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x65
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x66
	.uleb128 0x2
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x67
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x68
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x69
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6a
	.uleb128 0xa
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.byte	0
	.byte	0
	.uleb128 0x6b
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6c
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6d
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6e
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6f
	.uleb128 0x2f
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1e
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x70
	.uleb128 0x3a
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x71
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x72
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x73
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x74
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x75
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x76
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x77
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x78
	.uleb128 0x21
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x79
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7c
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x7d
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7e
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x7f
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x80
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x81
	.uleb128 0x34
	.byte	0
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x82
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x83
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x84
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x85
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x86
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x87
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x88
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x89
	.uleb128 0x17
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8a
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x8b
	.uleb128 0xd
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x8c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x8d
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x8e
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x6c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x8f
	.uleb128 0x30
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x90
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x91
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x8b
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x92
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x93
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x94
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x95
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x96
	.uleb128 0x1c
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.uleb128 0x32
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x97
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x98
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x99
	.uleb128 0x39
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x89
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x9a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9c
	.uleb128 0x3a
	.byte	0
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x18
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9d
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x9e
	.uleb128 0x34
	.byte	0
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x9f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa0
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa1
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa2
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa3
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xa4
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xa5
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0x8
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1b
	.uleb128 0x8
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xa6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa7
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xa8
	.uleb128 0x26
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xa9
	.uleb128 0x17
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xaa
	.uleb128 0xd
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xab
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xac
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xad
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1c
	.uleb128 0xa
	.uleb128 0x6c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xae
	.uleb128 0x2
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xaf
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb0
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x63
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb1
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x32
	.uleb128 0xb
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb2
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x87
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb3
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xb4
	.uleb128 0x39
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb5
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xb6
	.uleb128 0x15
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0xb7
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb8
	.uleb128 0x3b
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0xb9
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xba
	.uleb128 0x34
	.byte	0
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xbb
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xbc
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0xbd
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xbe
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xbf
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x64
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc0
	.uleb128 0x34
	.byte	0
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0xc1
	.uleb128 0x34
	.byte	0
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0xc2
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xc3
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc4
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc5
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc6
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x47
	.uleb128 0x13
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x64
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc8
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xc9
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0xca
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x6e
	.uleb128 0x8
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xcb
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xcc
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x6e
	.uleb128 0xe
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"dr"
	.long	0x10c
	.word	0x2
	.secrel32	Ldebug_info0
	.byte	0x4
	.byte	0
	.word	0
	.word	0
	.long	Ltext0
	.long	Letext0-Ltext0
	.long	LFB116
	.long	LFE116-LFB116
	.long	LFB1427
	.long	LFE1427-LFB1427
	.long	LFB1433
	.long	LFE1433-LFB1433
	.long	LFB1520
	.long	LFE1520-LFB1520
	.long	LFB1532
	.long	LFE1532-LFB1532
	.long	LFB1535
	.long	LFE1535-LFB1535
	.long	LFB1544
	.long	LFE1544-LFB1544
	.long	LFB1547
	.long	LFE1547-LFB1547
	.long	LFB1550
	.long	LFE1550-LFB1550
	.long	LFB1553
	.long	LFE1553-LFB1553
	.long	LFB1556
	.long	LFE1556-LFB1556
	.long	LFB1567
	.long	LFE1567-LFB1567
	.long	LFB1576
	.long	LFE1576-LFB1576
	.long	LFB2148
	.long	LFE2148-LFB2148
	.long	LFB2149
	.long	LFE2149-LFB2149
	.long	LFB2180
	.long	LFE2180-LFB2180
	.long	LFB2202
	.long	LFE2202-LFB2202
	.long	LFB2304
	.long	LFE2304-LFB2304
	.long	LFB2308
	.long	LFE2308-LFB2308
	.long	LFB2461
	.long	LFE2461-LFB2461
	.long	LFB2462
	.long	LFE2462-LFB2462
	.long	LFB2466
	.long	LFE2466-LFB2466
	.long	LFB2562
	.long	LFE2562-LFB2562
	.long	LFB2564
	.long	LFE2564-LFB2564
	.long	LFB2596
	.long	LFE2596-LFB2596
	.long	LFB2630
	.long	LFE2630-LFB2630
	.long	LFB2660
	.long	LFE2660-LFB2660
	.long	LFB2661
	.long	LFE2661-LFB2661
	.long	LFB2687
	.long	LFE2687-LFB2687
	.long	LFB2688
	.long	LFE2688-LFB2688
	.long	0
	.long	0
	.section	.debug_ranges,"dr"
Ldebug_ranges0:
	.long	LBB150
	.long	LBE150
	.long	LBB155
	.long	LBE155
	.long	0
	.long	0
	.long	LBB152
	.long	LBE152
	.long	LBB153
	.long	LBE153
	.long	0
	.long	0
	.long	LBB349
	.long	LBE349
	.long	LBB356
	.long	LBE356
	.long	0
	.long	0
	.long	LBB368
	.long	LBE368
	.long	LBB369
	.long	LBE369
	.long	0
	.long	0
	.long	LBB374
	.long	LBE374
	.long	LBB375
	.long	LBE375
	.long	0
	.long	0
	.long	LBB464
	.long	LBE464
	.long	LBB471
	.long	LBE471
	.long	0
	.long	0
	.long	LBB467
	.long	LBE467
	.long	LBB472
	.long	LBE472
	.long	0
	.long	0
	.long	LBB482
	.long	LBE482
	.long	LBB483
	.long	LBE483
	.long	0
	.long	0
	.long	LBB586
	.long	LBE586
	.long	LBB602
	.long	LBE602
	.long	0
	.long	0
	.long	LBB638
	.long	LBE638
	.long	LBB639
	.long	LBE639
	.long	0
	.long	0
	.long	LBB650
	.long	LBE650
	.long	LBB651
	.long	LBE651
	.long	0
	.long	0
	.long	LBB748
	.long	LBE748
	.long	LBB749
	.long	LBE749
	.long	0
	.long	0
	.long	LBB807
	.long	LBE807
	.long	LBB808
	.long	LBE808
	.long	0
	.long	0
	.long	LBB891
	.long	LBE891
	.long	LBB941
	.long	LBE941
	.long	0
	.long	0
	.long	LBB892
	.long	LBE892
	.long	LBB893
	.long	LBE893
	.long	0
	.long	0
	.long	LBB896
	.long	LBE896
	.long	LBB898
	.long	LBE898
	.long	0
	.long	0
	.long	Ltext0
	.long	Letext0
	.long	LFB116
	.long	LFE116
	.long	LFB1427
	.long	LFE1427
	.long	LFB1433
	.long	LFE1433
	.long	LFB1520
	.long	LFE1520
	.long	LFB1532
	.long	LFE1532
	.long	LFB1535
	.long	LFE1535
	.long	LFB1544
	.long	LFE1544
	.long	LFB1547
	.long	LFE1547
	.long	LFB1550
	.long	LFE1550
	.long	LFB1553
	.long	LFE1553
	.long	LFB1556
	.long	LFE1556
	.long	LFB1567
	.long	LFE1567
	.long	LFB1576
	.long	LFE1576
	.long	LFB2148
	.long	LFE2148
	.long	LFB2149
	.long	LFE2149
	.long	LFB2180
	.long	LFE2180
	.long	LFB2202
	.long	LFE2202
	.long	LFB2304
	.long	LFE2304
	.long	LFB2308
	.long	LFE2308
	.long	LFB2461
	.long	LFE2461
	.long	LFB2462
	.long	LFE2462
	.long	LFB2466
	.long	LFE2466
	.long	LFB2562
	.long	LFE2562
	.long	LFB2564
	.long	LFE2564
	.long	LFB2596
	.long	LFE2596
	.long	LFB2630
	.long	LFE2630
	.long	LFB2660
	.long	LFE2660
	.long	LFB2661
	.long	LFE2661
	.long	LFB2687
	.long	LFE2687
	.long	LFB2688
	.long	LFE2688
	.long	0
	.long	0
	.section	.debug_line,"dr"
Ldebug_line0:
	.section	.debug_str,"dr"
LASF190:
	.ascii "fontstart\0"
LASF361:
	.ascii "num_packets\0"
LASF55:
	.ascii "reference\0"
LASF375:
	.ascii "outlen\0"
LASF339:
	.ascii "start\0"
LASF328:
	.ascii "out_h\0"
LASF291:
	.ascii "render_text\0"
LASF373:
	.ascii "out_n\0"
LASF199:
	.ascii "stbtt_kerningentry\0"
LASF62:
	.ascii "__const_iterator\0"
LASF357:
	.ascii "user\0"
LASF397:
	.ascii "sprintf_s\0"
LASF146:
	.ascii "_S_nothrow_move\0"
LASF18:
	.ascii "_M_set_length\0"
LASF169:
	.ascii "dequant\0"
LASF141:
	.ascii "_S_on_swap\0"
LASF227:
	.ascii "radius\0"
LASF261:
	.ascii "render_rect\0"
LASF208:
	.ascii "stbtt__edge\0"
LASF264:
	.ascii "number_of_centers\0"
LASF324:
	.ascii "rects\0"
LASF212:
	.ascii "bitDepth\0"
LASF240:
	.ascii "line_rect\0"
LASF355:
	.ascii "comp\0"
LASF75:
	.ascii "find_first_not_of\0"
LASF267:
	.ascii "indexes\0"
LASF122:
	.ascii "nearbyint\0"
LASF135:
	.ascii "new_allocator\0"
LASF58:
	.ascii "append\0"
LASF308:
	.ascii "first_char\0"
LASF132:
	.ascii "type\0"
LASF197:
	.ascii "num_chars\0"
LASF34:
	.ascii "iterator\0"
LASF191:
	.ascii "index_map\0"
LASF176:
	.ascii "delay\0"
LASF147:
	.ascii "_M_current\0"
LASF332:
	.ascii "kernel_width\0"
LASF189:
	.ascii "userdata\0"
LASF99:
	.ascii "~allocator\0"
LASF343:
	.ascii "advanceWidth\0"
LASF307:
	.ascii "pixel_height\0"
LASF143:
	.ascii "_S_propagate_on_move_assign\0"
LASF196:
	.ascii "first_unicode_codepoint_in_range\0"
LASF318:
	.ascii "num_verts\0"
LASF392:
	.ascii "bitcount\0"
LASF180:
	.ascii "stbtt_pack_context\0"
LASF257:
	.ascii "result\0"
LASF395:
	.ascii "expand_mono\0"
LASF296:
	.ascii "lastFrame\0"
LASF11:
	.ascii "_M_dataplus\0"
LASF186:
	.ascii "v_oversample\0"
LASF136:
	.ascii "~new_allocator\0"
LASF300:
	.ascii "bestDiff\0"
LASF97:
	.ascii "nothrow_t\0"
LASF50:
	.ascii "resize\0"
LASF93:
	.ascii "int_type\0"
LASF158:
	.ascii "__digits10\0"
LASF270:
	.ascii "brightness\0"
LASF321:
	.ascii "ranges\0"
LASF222:
	.ascii "button_color\0"
LASF36:
	.ascii "_S_compare\0"
LASF266:
	.ascii "colors\0"
LASF31:
	.ascii "_M_disjunct\0"
LASF352:
	.ascii "glyph_index\0"
LASF61:
	.ascii "insert\0"
LASF139:
	.ascii "_Value\0"
LASF29:
	.ascii "_M_check_length\0"
LASF22:
	.ascii "_M_destroy\0"
LASF149:
	.ascii "operator*\0"
LASF153:
	.ascii "operator+\0"
LASF155:
	.ascii "operator-\0"
LASF123:
	.ascii "nextafter\0"
LASF294:
	.ascii "filename\0"
LASF260:
	.ascii "writer\0"
LASF42:
	.ascii "operator=\0"
LASF163:
	.ascii "context\0"
LASF107:
	.ascii "fpclassify\0"
LASF15:
	.ascii "_M_local_data\0"
LASF303:
	.ascii "splitElt\0"
LASF51:
	.ascii "shrink_to_fit\0"
LASF91:
	.ascii "char_type\0"
LASF203:
	.ascii "stride\0"
LASF117:
	.ascii "copysign\0"
LASF114:
	.ascii "islessequal\0"
LASF273:
	.ascii "min_index\0"
LASF108:
	.ascii "isfinite\0"
LASF160:
	.ascii "swprintf\0"
LASF38:
	.ascii "_M_mutate\0"
LASF248:
	.ascii "header\0"
LASF376:
	.ascii "initial_size\0"
LASF249:
	.ascii "name_length\0"
LASF356:
	.ascii "bytes\0"
LASF204:
	.ascii "pvertices\0"
LASF138:
	.ascii "__is_signed\0"
LASF87:
	.ascii "value\0"
LASF228:
	.ascii "invert_alpha\0"
LASF144:
	.ascii "_S_propagate_on_swap\0"
LASF178:
	.ascii "yoff\0"
LASF326:
	.ascii "output\0"
LASF302:
	.ascii "buildForDither\0"
LASF315:
	.ascii "glyph\0"
LASF216:
	.ascii "name\0"
LASF301:
	.ascii "bestInd\0"
LASF377:
	.ascii "parse_header\0"
LASF111:
	.ascii "isgreater\0"
LASF330:
	.ascii "shift_x\0"
LASF331:
	.ascii "shift_y\0"
LASF335:
	.ascii "windings\0"
LASF134:
	.ascii "operator+<char, std::char_traits<char>, std::allocator<char> >\0"
LASF338:
	.ascii "objspace_flatness_squared\0"
LASF100:
	.ascii "allocate\0"
LASF309:
	.ascii "font_collection\0"
LASF175:
	.ascii "flags\0"
LASF65:
	.ascii "replace\0"
LASF39:
	.ascii "_M_erase\0"
LASF218:
	.ascii "ascent\0"
LASF115:
	.ascii "islessgreater\0"
LASF319:
	.ascii "char_index\0"
LASF102:
	.ascii "deallocate\0"
LASF271:
	.ascii "Pixels\0"
LASF238:
	.ascii "text_rect\0"
LASF372:
	.ascii "pixel_count\0"
LASF280:
	.ascii "Pixel\0"
LASF233:
	.ascii "text\0"
LASF202:
	.ascii "advance\0"
LASF170:
	.ascii "code_buffer\0"
LASF74:
	.ascii "find_last_of\0"
LASF44:
	.ascii "reverse_iterator\0"
LASF223:
	.ascii "value_color\0"
LASF340:
	.ascii "vsubsample\0"
LASF305:
	.ascii "pivotIndex\0"
LASF254:
	.ascii "image\0"
LASF206:
	.ascii "stbtt__hheap_chunk\0"
LASF77:
	.ascii "compare\0"
LASF310:
	.ascii "stringOffset\0"
LASF384:
	.ascii "flag_true_if_should_flip\0"
LASF82:
	.ascii "_CharT\0"
LASF26:
	.ascii "_Char_alloc_type\0"
LASF161:
	.ascii "vswprintf\0"
LASF217:
	.ascii "scale\0"
LASF164:
	.ascii "buffer\0"
LASF281:
	.ascii "Source\0"
LASF24:
	.ascii "_M_construct\0"
LASF284:
	.ascii "Dest_Pitch\0"
LASF347:
	.ascii "valueFormat1\0"
LASF348:
	.ascii "valueFormat2\0"
LASF103:
	.ascii "select_on_container_copy_construction\0"
LASF28:
	.ascii "_M_check\0"
LASF9:
	.ascii "pointer\0"
LASF3:
	.ascii "left\0"
LASF327:
	.ascii "out_w\0"
LASF27:
	.ascii "_M_get_allocator\0"
LASF297:
	.ascii "nextFrame\0"
LASF148:
	.ascii "__normal_iterator\0"
LASF242:
	.ascii "slider_is_pressed\0"
LASF56:
	.ascii "front\0"
LASF278:
	.ascii "ending_y\0"
LASF243:
	.ascii "index\0"
LASF193:
	.ascii "fdselect\0"
LASF391:
	.ascii "filter_type\0"
LASF53:
	.ascii "const_reference\0"
LASF259:
	.ascii "save_file_name\0"
LASF71:
	.ascii "find\0"
LASF252:
	.ascii "sizes\0"
LASF312:
	.ascii "codepoint\0"
LASF390:
	.ascii "line_buffer\0"
LASF46:
	.ascii "const_reverse_iterator\0"
LASF137:
	.ascii "address\0"
LASF173:
	.ascii "channel\0"
LASF54:
	.ascii "operator[]\0"
LASF226:
	.ascii "General_Settings\0"
LASF112:
	.ascii "isgreaterequal\0"
LASF59:
	.ascii "push_back\0"
LASF378:
	.ascii "in_near\0"
LASF231:
	.ascii "this\0"
LASF49:
	.ascii "max_size\0"
LASF247:
	.ascii "plus_rect\0"
LASF219:
	.ascii "descent\0"
LASF323:
	.ascii "return_value\0"
LASF88:
	.ascii "value_type\0"
LASF130:
	.ascii "difference_type\0"
LASF90:
	.ascii "piecewise_construct_t\0"
LASF95:
	.ascii "eq_int_type\0"
LASF241:
	.ascii "highlighted\0"
LASF6:
	.ascii "_Alloc_hider\0"
LASF368:
	.ascii "tga_image_type\0"
LASF2:
	.ascii "unused\0"
LASF195:
	.ascii "font_size\0"
LASF213:
	.ascii "oldImage\0"
LASF12:
	.ascii "_M_string_length\0"
LASF76:
	.ascii "find_last_not_of\0"
LASF79:
	.ascii "_FwdIterator\0"
LASF142:
	.ascii "_S_propagate_on_copy_assign\0"
LASF329:
	.ascii "out_stride\0"
LASF337:
	.ascii "num_points\0"
LASF205:
	.ascii "num_vertices\0"
LASF4:
	.ascii "right\0"
LASF275:
	.ascii "starting_x\0"
LASF276:
	.ascii "starting_y\0"
LASF165:
	.ascii "img_n\0"
LASF159:
	.ascii "__max_exponent10\0"
LASF365:
	.ascii "two_back\0"
LASF181:
	.ascii "width\0"
LASF360:
	.ascii "act_comp\0"
LASF185:
	.ascii "h_oversample\0"
LASF200:
	.ascii "glyph1\0"
LASF322:
	.ascii "num_ranges\0"
LASF17:
	.ascii "_M_capacity\0"
LASF293:
	.ascii "diff\0"
LASF81:
	.ascii "_InputIterator\0"
LASF127:
	.ascii "scalbln\0"
LASF346:
	.ascii "needle\0"
LASF33:
	.ascii "_S_copy_chars\0"
LASF0:
	.ascii "refcount\0"
LASF354:
	.ascii "start_off\0"
LASF20:
	.ascii "_M_create\0"
LASF171:
	.ascii "depth\0"
LASF263:
	.ascii "dest_rect\0"
LASF387:
	.ascii "bitCnt\0"
LASF187:
	.ascii "pixels\0"
LASF177:
	.ascii "xoff\0"
LASF374:
	.ascii "img_len\0"
LASF5:
	.ascii "hInstance\0"
LASF279:
	.ascii "count\0"
LASF96:
	.ascii "exception_ptr\0"
LASF386:
	.ascii "bitBuf\0"
LASF381:
	.ascii "desired_channels\0"
LASF230:
	.ascii "__end\0"
LASF287:
	.ascii "height_scale\0"
LASF120:
	.ascii "llround\0"
LASF37:
	.ascii "_M_assign\0"
LASF116:
	.ascii "isunordered\0"
LASF234:
	.ascii "palette\0"
LASF72:
	.ascii "rfind\0"
LASF382:
	.ascii "channels\0"
LASF351:
	.ascii "strawEnd\0"
LASF52:
	.ascii "capacity\0"
LASF156:
	.ascii "_Container\0"
LASF298:
	.ascii "outFrame\0"
LASF126:
	.ascii "remquo\0"
LASF366:
	.ascii "bits\0"
LASF255:
	.ascii "result_bitmap\0"
LASF1:
	.ascii "HighPart\0"
LASF45:
	.ascii "rbegin\0"
LASF207:
	.ascii "stbtt__hheap\0"
LASF313:
	.ascii "onedge_value\0"
LASF237:
	.ascii "slider_rect\0"
LASF174:
	.ascii "first\0"
LASF383:
	.ascii "bytes_per_pixel\0"
LASF393:
	.ascii "lengthbyte\0"
LASF311:
	.ascii "font\0"
LASF179:
	.ascii "xadvance\0"
LASF168:
	.ascii "raw_data\0"
LASF221:
	.ascii "chardata\0"
LASF262:
	.ascii "rect\0"
LASF334:
	.ascii "vertices\0"
LASF194:
	.ascii "stbrp_rect\0"
LASF133:
	.ascii "_RandomAccessIterator\0"
LASF78:
	.ascii "_M_construct<char*>\0"
LASF166:
	.ascii "code\0"
LASF268:
	.ascii "use_original_as_source\0"
LASF43:
	.ascii "begin\0"
LASF277:
	.ascii "ending_x\0"
LASF220:
	.ascii "info\0"
LASF364:
	.ascii "hdr_data\0"
LASF236:
	.ascii "text_length\0"
LASF341:
	.ascii "scanline\0"
LASF371:
	.ascii "pal_img_n\0"
LASF244:
	.ascii "button_rect\0"
LASF47:
	.ascii "size\0"
LASF256:
	.ascii "dot_index\0"
LASF48:
	.ascii "length\0"
LASF25:
	.ascii "allocator_type\0"
LASF32:
	.ascii "_S_assign\0"
LASF342:
	.ascii "unicode_codepoint\0"
LASF288:
	.ascii "source_pixel\0"
LASF209:
	.ascii "invert\0"
LASF272:
	.ascii "new_Memory\0"
LASF167:
	.ascii "delta\0"
LASF131:
	.ascii "_Iterator\0"
LASF325:
	.ascii "num_rects\0"
LASF66:
	.ascii "_M_replace_aux\0"
LASF250:
	.ascii "name_rect\0"
LASF285:
	.ascii "Texels\0"
LASF104:
	.ascii "rebind_alloc\0"
LASF86:
	.ascii "to_string\0"
LASF89:
	.ascii "operator()\0"
LASF379:
	.ascii "in_far\0"
LASF57:
	.ascii "operator+=\0"
LASF349:
	.ascii "glyphCount\0"
LASF286:
	.ascii "width_scale\0"
LASF129:
	.ascii "tgamma\0"
LASF235:
	.ascii "slider_order\0"
LASF269:
	.ascii "dest\0"
LASF85:
	.ascii "_S_local_capacity\0"
LASF283:
	.ascii "y_bitmap\0"
LASF289:
	.ascii "color\0"
LASF183:
	.ascii "stride_in_bytes\0"
LASF299:
	.ascii "numPixels\0"
LASF344:
	.ascii "leftSideBearing\0"
LASF30:
	.ascii "_M_limit\0"
LASF98:
	.ascii "allocator\0"
LASF358:
	.ascii "dummy\0"
LASF172:
	.ascii "offset\0"
LASF369:
	.ascii "tga_bits_per_pixel\0"
LASF320:
	.ascii "font_index\0"
LASF224:
	.ascii "text_color\0"
LASF118:
	.ascii "lgamma\0"
LASF73:
	.ascii "find_first_of\0"
LASF370:
	.ascii "tga_comp\0"
LASF21:
	.ascii "_M_dispose\0"
LASF282:
	.ascii "x_bitmap\0"
LASF94:
	.ascii "to_int_type\0"
LASF84:
	.ascii "_Alloc\0"
LASF92:
	.ascii "to_char_type\0"
LASF316:
	.ascii "scale_x\0"
LASF253:
	.ascii "file_name\0"
LASF121:
	.ascii "lround\0"
LASF350:
	.ascii "strawStart\0"
LASF385:
	.ascii "quality\0"
LASF388:
	.ascii "clamped_row\0"
LASF128:
	.ascii "scalbn\0"
LASF13:
	.ascii "_M_data\0"
LASF258:
	.ascii "zoom_center\0"
LASF162:
	.ascii "func\0"
LASF210:
	.ascii "stbtt__active_edge\0"
LASF35:
	.ascii "const_iterator\0"
LASF336:
	.ascii "points\0"
LASF214:
	.ascii "bitmap\0"
LASF367:
	.ascii "pixelCount\0"
LASF151:
	.ascii "operator++\0"
LASF353:
	.ascii "numberOfContours\0"
LASF201:
	.ascii "glyph2\0"
LASF239:
	.ascii "thickness\0"
LASF145:
	.ascii "_S_always_equal\0"
LASF245:
	.ascii "rect_side\0"
LASF314:
	.ascii "pixel_dist_scale\0"
LASF119:
	.ascii "llrint\0"
LASF40:
	.ascii "basic_string\0"
LASF64:
	.ascii "pop_back\0"
LASF7:
	.ascii "_M_local_buf\0"
LASF192:
	.ascii "charstrings\0"
LASF225:
	.ascii "background_color\0"
LASF152:
	.ascii "operator--\0"
LASF198:
	.ascii "chardata_for_range\0"
LASF345:
	.ascii "xAdvance\0"
LASF290:
	.ascii "rectangle\0"
LASF362:
	.ascii "packet\0"
LASF333:
	.ascii "num_nodes\0"
LASF292:
	.ascii "font_type\0"
LASF8:
	.ascii "_M_allocated_capacity\0"
LASF63:
	.ascii "erase\0"
LASF124:
	.ascii "nexttoward\0"
LASF389:
	.ascii "stride_bytes\0"
LASF184:
	.ascii "padding\0"
LASF265:
	.ascii "centers\0"
LASF246:
	.ascii "minus_rect\0"
LASF359:
	.ascii "req_comp\0"
LASF41:
	.ascii "~basic_string\0"
LASF154:
	.ascii "operator-=\0"
LASF150:
	.ascii "operator->\0"
LASF113:
	.ascii "isless\0"
LASF306:
	.ascii "fontdata\0"
LASF70:
	.ascii "get_allocator\0"
LASF157:
	.ascii "__max_digits10\0"
LASF68:
	.ascii "_M_append\0"
LASF16:
	.ascii "const_pointer\0"
LASF83:
	.ascii "_Traits\0"
LASF304:
	.ascii "splitDist\0"
LASF105:
	.ascii "_M_array\0"
LASF67:
	.ascii "_M_replace\0"
LASF317:
	.ascii "scale_y\0"
LASF211:
	.ascii "bottom_y\0"
LASF251:
	.ascii "height_factor\0"
LASF394:
	.ascii "rgb_dir\0"
LASF215:
	.ascii "file_name_size\0"
LASF363:
	.ascii "channelCount\0"
LASF229:
	.ascii "__beg\0"
LASF110:
	.ascii "signbit\0"
LASF232:
	.ascii "__in_chrg\0"
LASF23:
	.ascii "_M_construct_aux_2\0"
LASF188:
	.ascii "stbtt_fontinfo\0"
LASF274:
	.ascii "temp\0"
LASF80:
	.ascii "_InIterator\0"
LASF60:
	.ascii "assign\0"
LASF14:
	.ascii "_M_length\0"
LASF69:
	.ascii "data\0"
LASF380:
	.ascii "channels_in_file\0"
LASF125:
	.ascii "remainder\0"
LASF19:
	.ascii "_M_is_local\0"
LASF106:
	.ascii "initializer_list\0"
LASF396:
	.ascii "write_alpha\0"
LASF101:
	.ascii "const_void_pointer\0"
LASF295:
	.ascii "pPal\0"
LASF109:
	.ascii "isnormal\0"
LASF182:
	.ascii "height\0"
LASF140:
	.ascii "_S_select_on_copy\0"
LASF10:
	.ascii "size_type\0"
	.ident	"GCC: (i686-posix-dwarf-rev0, Built by MinGW-W64 project) 8.1.0"
	.def	___mingw_vsnprintf;	.scl	2;	.type	32;	.endef
	.def	_acosf;	.scl	2;	.type	32;	.endef
	.def	_cosf;	.scl	2;	.type	32;	.endef
	.def	_fmodf;	.scl	2;	.type	32;	.endef
	.def	_frexpf;	.scl	2;	.type	32;	.endef
	.def	_ldexpf;	.scl	2;	.type	32;	.endef
	.def	_powf;	.scl	2;	.type	32;	.endef
	.def	_sqrtf;	.scl	2;	.type	32;	.endef
	.def	_fwrite;	.scl	2;	.type	32;	.endef
	.def	_fopen;	.scl	2;	.type	32;	.endef
	.def	_fclose;	.scl	2;	.type	32;	.endef
	.def	__assert;	.scl	2;	.type	32;	.endef
	.def	_memcmp;	.scl	2;	.type	32;	.endef
	.def	_malloc;	.scl	2;	.type	32;	.endef
	.def	_free;	.scl	2;	.type	32;	.endef
	.def	_realloc;	.scl	2;	.type	32;	.endef
	.def	_memmove;	.scl	2;	.type	32;	.endef
	.def	_memcpy;	.scl	2;	.type	32;	.endef
	.def	_fread;	.scl	2;	.type	32;	.endef
	.def	_fseek;	.scl	2;	.type	32;	.endef
	.def	_fgetc;	.scl	2;	.type	32;	.endef
	.def	_ungetc;	.scl	2;	.type	32;	.endef
	.def	_feof;	.scl	2;	.type	32;	.endef
	.def	_ferror;	.scl	2;	.type	32;	.endef
	.def	___emutls_get_address;	.scl	2;	.type	32;	.endef
	.def	_memset;	.scl	2;	.type	32;	.endef
	.def	_ftell;	.scl	2;	.type	32;	.endef
	.def	_strcmp;	.scl	2;	.type	32;	.endef
	.def	_strncmp;	.scl	2;	.type	32;	.endef
	.def	_strtol;	.scl	2;	.type	32;	.endef
	.def	__Unwind_Resume;	.scl	2;	.type	32;	.endef
	.def	_cos;	.scl	2;	.type	32;	.endef
	.def	_strlen;	.scl	2;	.type	32;	.endef
	.def	_fputc;	.scl	2;	.type	32;	.endef
	.def	_fwrite;	.scl	2;	.type	32;	.endef
	.def	__ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv;	.scl	2;	.type	32;	.endef
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev;	.scl	2;	.type	32;	.endef
	.def	_rand;	.scl	2;	.type	32;	.endef
	.def	_strcat;	.scl	2;	.type	32;	.endef
	.def	_strncpy;	.scl	2;	.type	32;	.endef
	.def	__ZNSaIcEC1Ev;	.scl	2;	.type	32;	.endef
	.def	__ZNSaIcED1Ev;	.scl	2;	.type	32;	.endef
	.def	__ZNSaIcED2Ev;	.scl	2;	.type	32;	.endef
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc;	.scl	2;	.type	32;	.endef
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_;	.scl	2;	.type	32;	.endef
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc;	.scl	2;	.type	32;	.endef
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv;	.scl	2;	.type	32;	.endef
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_;	.scl	2;	.type	32;	.endef
	.def	__ZSt19__throw_logic_errorPKc;	.scl	2;	.type	32;	.endef
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj;	.scl	2;	.type	32;	.endef
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc;	.scl	2;	.type	32;	.endef
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj;	.scl	2;	.type	32;	.endef
	.def	__ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv;	.scl	2;	.type	32;	.endef
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_;	.scl	2;	.type	32;	.endef
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj;	.scl	2;	.type	32;	.endef
	.def	___cxa_begin_catch;	.scl	2;	.type	32;	.endef
	.def	__ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv;	.scl	2;	.type	32;	.endef
	.def	___cxa_rethrow;	.scl	2;	.type	32;	.endef
	.def	___cxa_end_catch;	.scl	2;	.type	32;	.endef
